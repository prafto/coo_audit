syntax = "proto3";

// To prevent name collision "inside" of protobuf project
// The package of the generated code will be overwritten by java_package
// buf:lint:ignore DIRECTORY_SAME_PACKAGE
package drive_partnerships_service.v1;

// It is suggested to start package name with com.doordash.drive.grpc
// The reason is that, a message name might be conflict with a class name defined in application code,
// without the name "rpc", it would be hard to pick the correct one from the hints provided by your IDE.
option java_package = "com.doordash.drive.grpc.finance";

// This defines the name of the "wrapper class", whch is usually not used at all when java_multiple_files=true.
// If not defined, it will be generated based on your .proto filename, which might not be good due to conflict names.
// So, for drive_golden.proto file, we call it DriveGoldenProtos
option java_outer_classname = "DrivePartnershipsProtos";

// With is set to true, each "service" definition will be in its own class, instead of being nested into "wrapper class"
// This is suggested to be set to true
option java_multiple_files = true;

// Please set to true when service definition exists in this proto
option java_generic_services = true;

import "google/protobuf/wrappers.proto";
import "drive_finance/common.proto";

// Drive finance partnerships api.
service DrivePartnershipsApiService {
  // Get all partnerships affiliated with the provided entity IDs (all entity IDs should be for the same entity chain
  // i.e. the account_uuid should be for the store provided and under the developer provided.
  // The information provided in the DrivePartnership object may or may not completely represent what is available in
  // our systems. Check with Drive-Finance team if the field you need is not currently provided by this API
  rpc GetPartnershipsFor (GetPartnershipsForRequest) returns (GetPartnershipsForResponse);
}

// Request for partnerships that apply to the provided IDs
message GetPartnershipsForRequest {
  // The UUID of the drive store
  google.protobuf.StringValue store_uuid = 1;
  // The UUID of the drive account
  google.protobuf.StringValue account_uuid = 2;
  // The ID of the developer (Long)
  google.protobuf.Int64Value developer_id = 3;
  // When set to false, all partnerships will be returned in their raw form
  // When set to true, the partnerships will be merged, and a single partnership for each order type will be returned
  google.protobuf.BoolValue merge_hierarchy = 4;
  // Optional. When set only partnerships of this order type are returned
  finance.common.v1.OrderType order_type = 5;
}

// A list of the partnerships that could have applied to the provided IDs
message GetPartnershipsForResponse {
  // The detail of a partnership plus whether the hierarchy it belongs to was merged or not
  message PartnershipResponse {
    // The partnership being returned
    finance.common.v1.DrivePartnership partnership = 1;
    // Is this partnership from a merged hierarchy or in raw form
    // Note: Merged partnerships from requests that did not include all entity IDs (store, business, developer) may be
    // incomplete
    google.protobuf.BoolValue is_merged = 2;
  }
  // A list of the partnerships that could have applied to the provided IDs
  repeated PartnershipResponse partnerships = 1;
}
