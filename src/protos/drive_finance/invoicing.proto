syntax = "proto3";

// To prevent name collision "inside" of protobuf project
// The package of the generated code will be overwritten by java_package
// buf:lint:ignore DIRECTORY_SAME_PACKAGE
package drive_invoicing_rpc.v1;

import "drive_finance/common.proto";
import "google/protobuf/wrappers.proto";

// Please set to true when service definition exists in this proto
option java_generic_services = true;
option java_multiple_files = true;
option java_outer_classname = "DriveInvoicingRpc";
option java_package = "com.doordash.drive.grpc.finance";

// Drive finance invoicing group api.
service DriveInvoicingGroupApiService {
  // Get all netsuite entity (NS) IDs related to the merchant (business or store).
  // - for store, get all NS IDs which it has membership with
  // - for business, get all the netsuite enity IDs including:
  //    1. the NS IDs which stores onboarded through API will inherit, from business or developer
  //    2. The NS IDs which its stores currently having membership with (manual or legacy NS IDs).
  // Check with Drive-Finance team if the field you need is not currently provided by this API
  rpc GetNetsuiteEntityIdsForEntity(GetNetsuiteEntityIdsForEntityRequest) returns (GetNetsuiteEntityIdsForEntityResponse);

  // Check if the merchant (business or store) is the only one that has membership with the Netsuite entity.
  // If multiple memberships exist or it fails to get memberships with a given Netsuite entity ID, return false.
  // Check with Drive-Finance team if the field you need is not currently provided by this API
  rpc IsNetsuiteEntityUniqueToEntity(IsNetsuiteEntityUniqueToEntityRequest) returns (IsNetsuiteEntityUniqueToEntityResponse);

  // Get all unique mapping information(business, store or developer) by netsuite entity id
  // Check with Drive-Finance team if the field you need is not currently provided by this API
  rpc GetUniqueMappingInformationForNetsuiteEntityId(GetUniqueMappingInformationForNetsuiteEntityIdRequest) returns (GetUniqueMappingInformationForNetsuiteEntityIdResponse);
}

// Request for Netsuite entity IDs linked to the provided entity
message GetNetsuiteEntityIdsForEntityRequest {
  // Type of entity, required
  finance.common.v1.EntityType entity_type = 1;
  // The UUID of entity - drive_store_id or drive_account_id
  google.protobuf.StringValue entity_id = 2;
}

// A list of Netsuite entity IDs linked to the provided entity
message GetNetsuiteEntityIdsForEntityResponse {
  // A list of Netsuite entity IDs linked to the provided entity
  repeated google.protobuf.StringValue netsuite_entity_ids = 3;
}

// Request to check if the netsuite entity is unique to entity
message IsNetsuiteEntityUniqueToEntityRequest {
  // netsuite entity id is a numerical string
  google.protobuf.StringValue netsuite_entity_id = 1;
  // The type of entity (business or store)
  finance.common.v1.EntityType entity_type = 2;
}

// A boolean indicating if the merchant (business or store) is the only one that has membership with the Netsuite entity.
message IsNetsuiteEntityUniqueToEntityResponse {
  // A boolean indicating if the merchant (business or store) is the only one that has membership with the Netsuite entity.
  google.protobuf.BoolValue is_unique = 1;
}

// Request to get unique mapping information for this netsuite entity id
message GetUniqueMappingInformationForNetsuiteEntityIdRequest {
  // netsuite entity id
  google.protobuf.StringValue netsuite_entity_id = 1;
}

// Unique mapping information to netsuite entity id, we will return not found if there is no unique information
message GetUniqueMappingInformationForNetsuiteEntityIdResponse {
  // Type of entity, required
  finance.common.v1.EntityType entity_type = 1;
  // the doorstep id
  google.protobuf.StringValue entity_id = 2;
}
