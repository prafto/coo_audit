syntax = "proto3";

package risk_data_flow.v1.services.v1;

import "common/service_client_config.proto";
import "google/protobuf/any.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "risk_data_flow/common.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.riskdataflow.services";

/**
 * Endpoint to support risk entity category data.
 */
service RiskEntityService {
  // Timeout after 500 milliseconds.
  option (service_client.client_config).response_attempt_timeout_millis = 500;
  // Make a total 4 attempts (initial + three retries).
  option (service_client.client_config).retry_config.max_attempts = 4;
  // Add RESOURCE_EXHAUSTED to the set of retriable codes.
  option (service_client.client_config).retry_config.do_retry_grpc_code = 8;
  // Break the circuit if the error rate exceeds 80%.
  option (service_client.client_config).circuit_breaker_config.failure_rate_threshold = 0.8;
  // Ignore NOT_FOUND from circuit breaker error rate calculation.
  option (service_client.client_config).circuit_breaker_config.do_ignore_grpc_code = 5;

  // Return one single risk entity based on identifier set
  rpc GetRiskEntity(GetRiskEntityRequest) returns (GetRiskEntityResponse);

  // Create risk entities based on risk entity type with max batch of 5.
  rpc CreateRiskEntities(CreateRiskEntitiesRequest) returns (CreateRiskEntitiesResponse);

  // Update existing risk entities based on a risk entity type with max batch of size 5.
  rpc UpdateRiskEntities(UpdateRiskEntitiesRequest) returns (UpdateRiskEntitiesResponse);

  // Remove existing risk entities based on risk entity type with max of batch of size 5.
  rpc RemoveRiskEntities(RemoveRiskEntitiesRequest) returns (RemoveRiskEntitiesResponse);

  // Upsert risk entities based on a risk entity type with max of batch of size 5
  rpc UpsertRiskEntities(UpsertRiskEntitiesRequest) returns (UpsertRiskEntitiesResponse);
}

// Risk Entity
message RiskEntity {
  // Risk entity type
  google.protobuf.StringValue entity_type = 1;
  // Identifier set
  risk_data_flow.v1.IdentifierSet identifier_set = 2;
  // Entity value
  google.protobuf.Any value = 3;
  // Created at - When the entity was created
  google.protobuf.Timestamp created_at = 4;
  // Updated at - When the entity was last updated
  google.protobuf.Timestamp updated_at = 5;
  // Created_by
  google.protobuf.StringValue created_by = 6;
  // Updated_by
  google.protobuf.StringValue updated_by = 7;
}

// GetRiskEntityRequest
message GetRiskEntityRequest {
  // Entity type
  google.protobuf.StringValue entity_type = 1;
  // Identifier set for the entity
  risk_data_flow.v1.IdentifierSet identifier_set = 2;
}

// GetRiskEntityResponse
message GetRiskEntityResponse {
  // Risk entity
  RiskEntity entity = 1;
}

// CreateRiskEntitiesRequest
message CreateRiskEntitiesRequest {
  // Risk entities to be created, max 5 per call
  repeated RiskEntity entities = 1;
  // Meta data about who is changing the entities
  risk_data_flow.v1.ChangeLog change_log = 2;
}

// CreateRiskEntitiesResponse
message CreateRiskEntitiesResponse {}

// UpdateRiskEntitiesRequest
message UpdateRiskEntitiesRequest {
  // Risk entities to be updated, max 5 per call
  // Update will be done only for pre existing entities
  repeated RiskEntity entities = 1;
  // Meta data about who is changing the entities
  risk_data_flow.v1.ChangeLog change_log = 2;
}

// UpdateRiskEntitiesResponse
message UpdateRiskEntitiesResponse {}

// UpsertRiskEntitiesRequest
message UpsertRiskEntitiesRequest {
  // Risk entities to be upsert, max 5 per call
  repeated RiskEntity entities = 1;
  // Meta data about who is changing the entities
  risk_data_flow.v1.ChangeLog change_log = 2;
}

// UpsertRiskEntitiesResponse
message UpsertRiskEntitiesResponse {}

// RemoveRiskEntitiesRequest
message RemoveRiskEntitiesRequest {
  // Entity type
  google.protobuf.StringValue entity_type = 1;
  // Identifier set for entities to be removed
  repeated risk_data_flow.v1.IdentifierSet identifier_sets = 2;
  // Meta data about who is changing the entities
  risk_data_flow.v1.ChangeLog change_log = 3;
}

// RemoveRiskEntitiesResponse
message RemoveRiskEntitiesResponse {}
