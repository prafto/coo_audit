syntax = "proto3";

package risk_data_flow.v1;

import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.riskdataflow";

/*
 * This file contains 3 remaining RDP crdb tables proto info (migrated over from risk-service)
 * Future will all be in consolidated / categoried APIs later.
 */

// GetPhoneInfoRequest request to get phone information with phone number
message GetFraudSignalLegacyRequest {
  // identifiers
  oneof identifier {
    // PhoneInfoIdentifier for phone_info request
    PhoneInfoIdentifier phone_info_identifier = 1;
    // DasherRiskSignalIdentifier for dasher_risk_info request
    DasherRiskSignalIdentifier dasher_risk_signal_identifier = 2;
    // PermittedUserIdentifier for permitted_user request
    PermittedUserIdentifier permitted_user_identifier = 3;
    // LowQualityDasherIdentifier for low_quality_dasher request
    LowQualityDasherIdentifier low_quality_dasher_identifier = 4;
  }
}

// PhoneInfoIdentifier
message PhoneInfoIdentifier {
  // pk as phone_number
  string phone_number = 1;
}

// DasherRiskSignalIdentifier
message DasherRiskSignalIdentifier {
  // pk as dasher_id
  string dasher_id = 1;
}

// PermittedUserIdentifier
message PermittedUserIdentifier {
  // pk as user_id
  string user_id = 1;
}

// PermittedUserIdentifier
message LowQualityDasherIdentifier {
  // pk as dasher_id
  string dasher_id = 1;
}

// GetPhoneInfoResponse response
message GetFraudSignalLegacyResponse {
  // entities
  oneof entity {
    // PhoneInfo
    PhoneInfo phone_info = 1;
    // DashierRiskSignal
    DashierRiskSignal dashier_risk_signal = 2;
    // PermittedUser
    PermittedUser permitted_user = 3;
    // LowQualityDasher
    LowQualityDasher low_quality_dasher = 4;
  }
}

// PhoneInfo entity
message PhoneInfo {
  // phone_number, pk
  string phone_number = 1;
  // the enum enforcement will be done on the
  // client side otherwise we'll need to filter
  // the prefix
  string carrier_type = 2;
  // carrier_name such as verison, etc
  string carrier_name = 3;
  // created_at
  google.protobuf.Timestamp created_at = 4;
  // update_at
  google.protobuf.Timestamp update_at = 5;
}

// DashierRiskSignal entity
message DashierRiskSignal {
  // dahser_id, pk
  int32 dasher_id = 1;
  // discrepancy_distance_signal, nullable
  google.protobuf.BoolValue discrepancy_distance_signal = 2;
  // linkage_phone_signal, nullable
  google.protobuf.BoolValue linkage_phone_signal = 3;
  // dx_bypass_evaluation, nullable
  google.protobuf.BoolValue dx_bypass_evaluation = 4;
  // composite_signal, nullable
  google.protobuf.BoolValue composite_signal = 5;
  // discrepancy_distance_signal_updated_at, nullable
  google.protobuf.Timestamp discrepancy_distance_signal_updated_at = 6;
  // linkage_phone_signal_updated_at, nullable
  google.protobuf.Timestamp linkage_phone_signal_updated_at = 7;
  // composite_signal_updated_at, nullable
  google.protobuf.Timestamp composite_signal_updated_at = 8;
  // composite_signal_breakdown
  repeated string composite_signal_breakdown = 9;
}

// PermittedUser entity
message PermittedUser {
  // user_id, pk
  string user_id = 1;
  // reason
  string reason = 2;
  // created_at, nullable
  google.protobuf.Timestamp created_at = 3;
  // updated_at, nullable
  google.protobuf.Timestamp updated_at = 4;
  // note, nullable
  google.protobuf.StringValue note = 5;
  // requester, nullable
  google.protobuf.StringValue requester = 6;
  // ttl_days, nullable
  google.protobuf.Int32Value ttl_days = 7;
}

// LowQualityDasher entity
message LowQualityDasher {
  // dasher id
  string dasher_id = 1;
  // nullable db fields if the dx is low quality
  google.protobuf.BoolValue is_low_quality_dx = 2;
}
