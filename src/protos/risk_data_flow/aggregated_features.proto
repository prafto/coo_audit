syntax = "proto3";

package risk_data_flow.v1;

import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.riskdataflow";

/**
 * Request for getDistinctEntityId API
 */
message GetDistinctEntityIdRequest {
  // name of the feature
  string feature_name = 1;
  // type of entities
  string entity_type = 2;
  // entity id
  string entity_id = 3;
  // distinct entity type
  string distinct_entity_type = 4;
  // start time
  google.protobuf.Timestamp start_time = 5;
  // optional: end time
  google.protobuf.Timestamp end_time = 6;

  // enum to specify the granularity
  enum Granularity {
    // Default value: No granularity specified. This will cause invalid request errors
    GRANULARITY_UNSPECIFIED = 0;
    // By minute
    GRANULARITY_MINUTE = 1;
    // By hour
    GRANULARITY_HOUR = 2;
    // By day
    GRANULARITY_DAY = 3;
    // By week
    GRANULARITY_WEEK = 4;
  }

  // granularity of the distinct entity id query
  Granularity granularity = 7;
  // Usage of the feature
  FeatureUse feature_use = 8;
}

/**
 * Response for getDistinctEntityId API
 */
message GetDistinctEntityIdResponse {
  // A list of distinct entity ids. Expecting no repetitions
  repeated string distinct_entity_ids = 1;
}

/**
 * Request for getAggregateFeature API
 */
message GetAggregatedFeatureRequest {
  reserved 2;
  // name of the feature
  string feature_name = 1;
  // entity id
  string entity_id = 3;
  // start time
  google.protobuf.Timestamp start_time = 4;
  // optional: end time
  google.protobuf.Timestamp end_time = 5;
  // Usage of the feature
  FeatureUse feature_use = 6;

  // entity type enum. This should be corresponding to the enum defined in
  // risk-data-stream/src/main/kotlin/com/doordash/risk/sink/cassandra/CassandraFeatureSink.kt#L31
  enum EntityType {
    // Default value. This should not be used at all
    ENTITY_TYPE_UNSPECIFIED = 0;
    // Consumer
    ENTITY_TYPE_CONSUMER = 1;
    // Dasher
    ENTITY_TYPE_DASHER = 2;
    // Card
    ENTITY_TYPE_CARD = 3;
    // User
    ENTITY_TYPE_USER = 4;
    // Network
    ENTITY_TYPE_NETWORK = 5;
    // Merchant
    ENTITY_TYPE_MERCHANT = 6;
    // Address
    ENTITY_TYPE_ADDRESS = 7;
    // Device
    ENTITY_TYPE_DEVICE = 8;
  }

  // Entity type of the feature. Each entity type will have a long term table and short term table
  // in Cassandra
  EntityType entity_type = 7;
}

/**
 * Response for getAggregateFeature API
 */
message GetAggregatedFeatureResponse {
  // Aggregated feature value
  FeatureValue feature_value = 1;
}

/**
 *  Value of a specific feature
 */
message FeatureValue {
  // identifier
  string id = 1;
  // feature name
  string feature_name = 2;
  // start time
  google.protobuf.Timestamp start_time = 3;
  // end time
  google.protobuf.Timestamp end_time = 4;
  // feature value
  int64 value = 5;
}

/**
 * Usage of the feature. This is not used in queries but used when emitting metrics
 */
message FeatureUse {
  // enum to specify the usage
  enum Usage {
    // Default value: usage not specified
    USAGE_UNSPECIFIED = 0;
    // ML
    USAGE_ML = 1;
    // dasher checkpoint
    USAGE_DASHER_CHECKPOINT = 2;
    // consumer referral checkpoint
    USAGE_CONSUMER_REFERRAL_CHECKPOINT = 3;
    // CnR checkpoint
    USAGE_CNR_CHECKPOINT = 4;
    // checkout checkpoints
    USAGE_CHECKOUT_CHECKPOINT = 5;
    // login checkpoint
    USAGE_LOGIN_CHECKPOINT = 6;
    // signup checkpoint
    USAGE_SIGNUP_CHECKPOINT = 7;
    // CnR reputation
    USAGE_CNR_REPUTATION = 8;
    // Data monitoring
    USAGE_DATA_MONITORING = 9;
    // adding payment methods
    USAGE_PAYMENT_METHOD_ADD = 10;
    // adding preview order checkpoint
    USAGE_PREVIEW_ORDER_CHECKPOINT = 11;
  }

  // Enum value of feature usage
  Usage usage = 1;
}
