syntax = "proto3";

package media_management.integrations.v1;

import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "media_management_service/integrations/data/media_integration.proto";

option go_package = "github.com/doordash/services-protobuf/media_management_service/integrations";
option java_multiple_files = true;
option java_package = "com.doordash.media_management.integrations";

// Operations related to media integrations
service MediaIntegrationsService {
  // Validates the provided invite token and creates a new media integration.
  rpc CreateIntegration(CreateIntegrationRequest) returns (CreateIntegrationResponse);

  // Changes the status of an existing media integration.
  rpc ChangeIntegrationStatus(ChangeIntegrationStatusRequest) returns (ChangeIntegrationStatusResponse);

  // Lists all media integrations associated with a business.
  rpc ListMediaIntegrations(ListMediaIntegrationsRequest) returns (ListMediaIntegrationsResponse);

  // Generates a secure invite token based on the provided business_id and expiration time.
  rpc GenerateInviteToken(GenerateInviteTokenRequest) returns (GenerateInviteTokenResponse);

  // Validates an invite token and returns its associated information
  rpc ValidateInviteToken(ValidateInviteTokenRequest) returns (ValidateInviteTokenResponse);

  // Deletes an existing media integration by UUID.
  rpc DeleteIntegration(DeleteIntegrationRequest) returns (DeleteIntegrationResponse);
}

// Request message for generating an invite token.
message GenerateInviteTokenRequest {
  // The business (Mx) identifier to which the token is tied.
  string business_id = 1;
  // The UTC timestamp when the token should expire. If not provided, default expiration will be used.
  google.protobuf.Timestamp expires_at = 2;
}

// Response message containing the generated invite token.
message GenerateInviteTokenResponse {
  // The generated secure invite token.
  string token = 1;
  // The UTC timestamp when the token expires
  google.protobuf.Timestamp expires_at = 2;
}

// Request message for validating an invite token.
message ValidateInviteTokenRequest {
  // The invite token to validate.
  string token = 1;
}

// Response message containing the validation result.
message ValidateInviteTokenResponse {
  // Whether the token is valid.
  bool is_valid = 1;
  // The business ID associated with the token, provided if the token is valid.
  google.protobuf.StringValue business_id = 2;
  // The UTC timestamp when the token expires
  google.protobuf.Timestamp expires_at = 3;
}

// Request message for creating a new media integration.
// This request requires a valid invite token and the necessary integration details.
message CreateIntegrationRequest {
  // The invite token to validate before creating the integration.
  string invite_token = 1;
  // The source type for the integration.
  media_management.integrations.data.v1.SourceType source_type = 2;
  // The API token provided for the media integration.
  string api_token = 3;
  // The identifier of the user creating this integration.
  google.protobuf.Int64Value created_by = 4;
}

// Response message containing the created media integration record.
message CreateIntegrationResponse {
  // The Created media integration record.
  MediaIntegrationSummary media_integration = 1;
}

// Request message for changing the status of a media integration.
message ChangeIntegrationStatusRequest {
  // The unique identifier (UUID) of the media integration record.
  string uuid = 1;
  // The new status to set for the integration.
  // Uses the IntegrationStatus enum defined in the data proto.
  media_management.integrations.data.v1.IntegrationStatus new_status = 2;
  // (Optional) Identifier of the user requesting the status change.
  google.protobuf.Int64Value updated_by = 3;
}

// Response message indicating the result of the status change operation.
message ChangeIntegrationStatusResponse {
  // The updated media integration record.
  MediaIntegrationSummary media_integration = 1;
}

// Request message for listing media integrations associated with a business.
message ListMediaIntegrationsRequest {
  // The destination type for the integration (e.g., BUSINESS or STORE).
  media_management.integrations.data.v1.DestinationType destination_type = 1;
  // Identifier for the destination entity (business or store).
  string destination_id = 2;
  // The source type from which the integration originates (e.g., INSTAGRAM).
  media_management.integrations.data.v1.SourceType source_type = 3;
  // (Optional) The maximum number of records to return.
  google.protobuf.Int32Value limit = 4;
  // (Optional) The offset for pagination.
  google.protobuf.Int32Value offset = 5;
}

// Response message containing a list of media integration records.
message ListMediaIntegrationsResponse {
  // A list of summaries for media integration records associated with the business.
  repeated MediaIntegrationSummary media_integrations = 1;
}

// MediaIntegrationSummary provides a filtered view of a media integration,
// excluding sensitive details.
message MediaIntegrationSummary {
  // Unique identifier for the integration.
  string uuid = 1;
  // The destination type for the integration (e.g., BUSINESS or STORE).
  media_management.integrations.data.v1.DestinationType destination_type = 2;
  // Identifier for the destination entity (business or store).
  string destination_id = 3;
  // The source type from which the integration originates (e.g., INSTAGRAM).
  media_management.integrations.data.v1.SourceType source_type = 4;
  // Identifier for the source entity.
  string source_id = 5;
  // Timestamp when the integration record was created.
  google.protobuf.Timestamp created_at = 6;
  // The current status of the integration (APPROVED, REJECTED, or PENDING).
  media_management.integrations.data.v1.IntegrationStatus status = 7;
  // Optional label for the integration record.
  string label = 8;
  // Timestamp when the integration record status was updated.
  google.protobuf.Timestamp status_updated_at = 9;
}

// Request message for deleting a media integration.
message DeleteIntegrationRequest {
  // The unique identifier (UUID) of the media integration record to delete.
  string uuid = 1;
  // (Optional) Identifier of the user requesting the deletion.
  google.protobuf.Int64Value deleted_by = 2;
}

// Response message indicating the result of the deletion operation.
message DeleteIntegrationResponse {}
