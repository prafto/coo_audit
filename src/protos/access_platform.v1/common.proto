syntax = "proto3";

package access_platform.v1;

option go_package = "github.com/doordash/services-protobuf/generated/access_platform.v1";

// AuthorizationDecision defines supported authorization decision
enum AuthorizationDecision {
  // AUTHORIZATION_DECISION_UNSPECIFIED means no authorization decision is specified
  AUTHORIZATION_DECISION_UNSPECIFIED = 0;
  // AUTHORIZATION_DECISION_ALLOW means the authorization decision is ALLOW
  AUTHORIZATION_DECISION_ALLOW = 1;
  // AUTHORIZATION_DECISION_DENY means the authorization decision is DENY
  AUTHORIZATION_DECISION_DENY = 2;
}

// ResourceCategory defines supported infrastructure resource categories
enum ResourceCategory {
  // RESOURCE_CATEGORY_UNSPECIFIED means no resource category is specified
  RESOURCE_CATEGORY_UNSPECIFIED = 0;
  // RESOURCE_CATEGORY_CLOUD means the resource category is cloud resource
  RESOURCE_CATEGORY_CLOUD = 1;
  // RESOURCE_CATEGORY_SAAS means the resource category is SAAS application
  RESOURCE_CATEGORY_SAAS = 2;
  // RESOURCE_CATEGORY_INFRA_TOOL means the resource category is DoorDash internal Infra tooling
  RESOURCE_CATEGORY_INFRA_TOOL = 3;
}

// Resource represents the infrastructure resource AP supports
message Resource {
  // type means the type of the infrastructure resource
  ResourceType type = 1;
  // name means the name of the infrastructure resource
  string name = 2;
  // attributes means the attributes of the infrastructure resource
  repeated Attribute attributes = 3;
}

// ResourceType represents the full-qualified infrastructure resource type AP supports
message ResourceType {
  // category means the infra resource category
  ResourceCategory category = 1;
  //category_specific_type means the infra resource type under the category
  CategorySpecificResourceType category_specific_type = 2;
  // target_setting means the target access control setting of an end resource of a specific type under a specific category
  TargetSetting target_setting = 3;
}

// CategorySpecificResourceType represents the type of the infrastructure resource of a specific category
enum CategorySpecificResourceType {
  // Undefined or default value for the resource type
  CATEGORY_SPECIFIC_RESOURCE_TYPE_UNSPECIFIED = 0;

  // AWS services
  // Amazon S3 storage service
  CATEGORY_SPECIFIC_RESOURCE_TYPE_AWS_S3 = 1;
  // AWS Secure File Transfer Protocol service
  CATEGORY_SPECIFIC_RESOURCE_TYPE_AWS_SFTP = 2;

  // Secret management services
  // HashiCorp Vault for secret management
  CATEGORY_SPECIFIC_RESOURCE_TYPE_HASHICORP_VAULT = 3;

  // Data lake systems
  // Apache Iceberg-based data lake
  CATEGORY_SPECIFIC_RESOURCE_TYPE_DATALAKE_ICEBERG = 4;

  // TODO: Add new resource types within their respective categories in here...
}

// TargetSetting represents all possible value of access control setting of an end resource of a specific type under a specific category
message TargetSetting {
  // setting represents the value of the access control setting of an end resource of a specific type under a specific category
  oneof setting {
    // access_control_setting means the access control setting of an end resource of a specific type under a specific category
    AWSS3AccessSetting s3_access_control_setting = 1;
    // TODO: add other target settings of other resource types under some resource category in here...
  }
}

// AWSS3AccessSetting represents the concrete target setting of AWS S3
enum AWSS3AccessSetting {
  // AWSS3_ACCESS_RESOURCE_UNSPECIFIED means AWS S3 target resource is not specified
  AWSS3_ACCESS_SETTING_UNSPECIFIED = 0;
  // AWSS3_ACCESS_RESOURCE_BUCKET_POLICY means AWS S3 bucket policy
  AWSS3_ACCESS_SETTING_BUCKET_POLICY = 1;
  // AWSS3_ACCESS_RESOURCE_BUCKET means AWS S3 bucket itself
  AWSS3_ACCESS_SETTING_BUCKET = 2;
}

// ResourceAction represents all possible infra resource actions
message ResourceAction {
  // resource_type means the full-qualified infrastructure resource type
  ResourceType resource_type = 1;
  // action represent the action against resource_type
  oneof action {
    // s3_action means it is an s3 action
    AWSS3AccessAction s3_action = 2;
    // TODO: add other Resource specific Actions in here...
  }
}

// AWSS3AccessAction represents all possible AWS S3 access related actions
enum AWSS3AccessAction {
  // AWS_S3_ACCESS_ACTION_UNSPECIFIED means no AWS S3 action is not specified
  AWSS3_ACCESS_ACTION_UNSPECIFIED = 0;

  // Object-specific permissions
  // Read an object
  AWSS3_ACCESS_ACTION_READ = 1;
  // Write an object
  AWSS3_ACCESS_ACTION_WRITE = 2;
  // Delete an object
  AWSS3_ACCESS_ACTION_DELETE = 3;
  // Read and write an object
  AWSS3_ACCESS_ACTION_RW = 4;
  // Write and delete an object
  AWSS3_ACCESS_ACTION_WD = 5;
  // Read and delete an object
  AWSS3_ACCESS_ACTION_RD = 6;
  // Read, write, and delete an object
  AWSS3_ACCESS_ACTION_RWD = 7;

  // Bucket-specific permissions
  // Create a new bucket
  AWSS3_ACCESS_ACTION_BUCKET_CREATE = 8;
  // Delete a bucket
  AWSS3_ACCESS_ACTION_BUCKET_DELETE = 9;
}

// TODO: add other Resource specific Actions in here...

// Attribute represents the attribute (key value pair) of the entity or resource
message Attribute {
  // key means the attribute key
  string key = 1;
  // key means the attribute value
  string value = 2;
}
