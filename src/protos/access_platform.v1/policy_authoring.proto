syntax = "proto3";

package access_platform.v1;

import "access_platform.v1/common.proto";

option go_package = "github.com/doordash/services-protobuf/generated/access_platform.v1";

// PolicyAuthoringService facilitates the creation of access policies by resource owners or Access Platform (AP) administrators.
service PolicyAuthoringService {
  // RPC method of `PolicyAuthoringService`
  rpc AuthorPolicy(AuthorPolicyRequest) returns (AuthorPolicyResponse);
}

// AuthorPolicyRequest represents the input for creating a policy.
message AuthorPolicyRequest {
  // effect represents the specified decision in the policy for an entity
  PolicyEffect effect = 1;
  // subject represents the entity that is specified in the authored policy to have some access permission
  AccessPermissionReceiverGroup subject = 2;
  // resource represents the infra resource that the subject can access
  Resource resource = 3;
  // actions represents the resource specific actions that the subject can perform on the resource
  repeated ResourceAction actions = 4;
}

//AuthorPolicyResponse represents the response after attempting to create a policy.
message AuthorPolicyResponse {
  // id represents the unique identifier (UUID) of the policy
  string id = 1;
}

// PolicyEffect represents the possible effects requested or made by the policy engine
enum PolicyEffect {
  // POLICY_EFFECT_UNSPECIFIED means no policy decision is specified
  POLICY_EFFECT_UNSPECIFIED = 0;
  // POLICY_EFFECT_ALLOW means the specified decision for the policy is ALLOW
  POLICY_EFFECT_ALLOW = 1;
  // POLICY_EFFECT_DENY means the specified decision for the policy is DENY
  POLICY_EFFECT_DENY = 2;
}

// AccessPermissionReceiverGroup represents the access permission receiver group info
message AccessPermissionReceiverGroup {
  // type means the type of the access permission receiver group
  AccessPermissionReceiverGroupType type = 1;
  // group represent a specific type of access permission receiver group
  oneof group {
    // software_asset means it is a software asset group
    SoftwareAssetGroup software_asset = 2;
    // okta_group means it is a okta group
    OktaGroup okta_group = 3;
    // google_group means it is a google group
    GoogleGroup google_group = 4;
  }
  // attributes means the attributes of the access permission receiver group
  repeated Attribute attributes = 5;
}

// SoftwareAssetGroup represents the software asset group info
message SoftwareAssetGroup {
  // name of the software asset
  string name = 1;
}

// OktaGroup represents the Okta group info
message OktaGroup {
  // name of the Okta group
  string name = 1;
}

// GoogleGroup represents the Google group info
message GoogleGroup {
  // name of the google group
  string name = 1;
}

// AccessPermissionReceiverGroup represents the access permission receiver group type
enum AccessPermissionReceiverGroupType {
  // ACCESS_PERMISSION_RECEIVER_GROUP_TYPE_UNSPECIFIED means the access permission receiver group type is not specified
  ACCESS_PERMISSION_RECEIVER_GROUP_TYPE_UNSPECIFIED = 0;
  // ACCESS_PERMISSION_RECEIVER_GROUP_TYPE_SOFTWARE_ASSET means the access permission receiver group type is software asset
  ACCESS_PERMISSION_RECEIVER_GROUP_TYPE_SOFTWARE_ASSET = 1;
  // ACCESS_PERMISSION_RECEIVER_GROUP_TYPE_OKTA_GROUP means the access permission receiver group type is okta group
  ACCESS_PERMISSION_RECEIVER_GROUP_TYPE_OKTA_GROUP = 2;
  // ACCESS_PERMISSION_RECEIVER_GROUP_TYPE_GOOGLE_GROUP means the access permission receiver group type is google group
  ACCESS_PERMISSION_RECEIVER_GROUP_TYPE_GOOGLE_GROUP = 3;
}
