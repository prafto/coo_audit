syntax = "proto3";

package user_management_service.v1;

import "google/protobuf/wrappers.proto";
import "user_management_service/common/permission.proto";

option go_package = "user_management_service";
option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.user_management_service";

message CheckModelsAccessShadowEvent {
  reserved 5;
  reserved "ums_response_granted_model_ids";

  // Id of user profile (if omitted, user_id will be used to determine RBAC access)
  google.protobuf.StringValue ums_request_user_profile_id = 1;
  // Permission to determine access of
  common.Permission ums_request_permission = 2;
  // Model type of all provided models
  google.protobuf.Int64Value ums_request_model_type = 3;
  // Model ids for which to determine user access
  repeated google.protobuf.Int64Value ums_request_model_ids_to_check = 4;

  // User ID from the MDS request
  string mds_request_user_id = 6;
  // Permission groups from the MDS request
  repeated string mds_request_user_permission_groups = 7;
  // Entity type from the MDS request
  google.protobuf.Int64Value mds_request_entity_type = 8;
  // Entity IDs from the MDS request
  repeated string mds_request_entity_ids_to_check = 9;
  // Grant type from the MDS request
  google.protobuf.Int64Value mds_response_grant_type = 10;

  // It will be empty if grant_type is not equals to PARTIALLY_GRANTED
  repeated string mds_response_granted_entity_ids = 11;

  // Client name from the request
  string client_name = 12;

  // Correlation ID from the request
  string correlation_id = 13;

  // Headers from the request
  string headers = 14;

  // User info from the request
  string user_info = 15;

  // Subset of provided entities that the user has access to
  repeated string ums_response_granted_entity_ids = 16;

  // Which RBAC method was returned to client
  string rbac_method = 17;
}
