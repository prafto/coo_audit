syntax = "proto3";

package user_management_service.v1;

import "common/organization_service.proto";
import "google/protobuf/wrappers.proto";
import "user_management_service/common/entity.proto";
import "user_management_service/common/search.proto";

option go_package = "user_management_service";
option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.user_management_service";

// Search APIs.
service SearchService {
  rpc SearchEntities(SearchEntitiesRequest) returns (SearchEntitiesResponse);
}

message SearchEntitiesRequest {
  // Id of user profile. Will filter out any entities that profile does not have access to.
  google.protobuf.StringValue user_profile_id = 1;

  // Which entity types to look for. Empty array will search all.
  repeated organization_service.v1.EntityType entity_types = 2;

  // Search entities only among some ancestry path.
  AncestryFilter ancestry_filter = 3;

  // Search query to find some specific entity.
  EntitySearchTerm search_term = 4;

  // Apply any amount of filters to your query for more complex search capabilities.
  common.MultiSearchFilter multi_search_filter = 5;

  // Sort fields.
  repeated common.SortByField sort_by = 6;

  // NOTE: We must specify sort_by if we want to paginate. Otherwise, records returned will be
  //       unordered, so pagination may return duplicate results, and skip other results.
  oneof pagination {
    // Will search records after this key (taken from SearchResult). Can search past 30000 results.
    // Used for infinite scrolling or when you need to find results past the first 30000 elements.
    google.protobuf.StringValue search_after = 7;

    // Will search records after this offset. Can only paginate up to 30000 results.
    // Used for true pagination where you can skip pages, or go back pages.
    google.protobuf.Int32Value offset = 8;
  }

  // Max results to return. Max limit will be 1000. Default 20.
  google.protobuf.Int32Value limit = 9;
}

message EntitySearchTerm {
  // Search query.
  google.protobuf.StringValue query = 1;
  // Fields to search from. If any field matches the query, we will return the result.
  repeated common.EntityField filter_fields = 2;
}

message AncestryFilter {
  // Search descendents of these models.
  repeated organization_service.v1.Model ancestor_models = 1;

  // Only search children (one level down from ancestor_models). Default false.
  bool find_children_only = 2;

  // Only relevant when searching stores. Filters out drive only stores that are
  // unified to a MP business.
  bool exclude_drive_only_stores = 3;
}

message SearchEntitiesResponse {
  repeated EntitySearchResult results = 1;
  int64 total_results = 2;
}

message EntitySearchResult {
  common.Entity entity = 1;
  // Used for searching records after this entity.
  google.protobuf.StringValue search_after = 2;
}
