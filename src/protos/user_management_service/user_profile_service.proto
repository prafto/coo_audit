syntax = "proto3";

package user_management_service.v1;

import "common/organization_service.proto";
import "common/service_client_config.proto";
import "doordash.api/annotations.proto";
import "doordash.api/client.proto";
import "doordash.api/field_validate.proto";
import "google/api/annotations.proto";
import "google/protobuf/wrappers.proto";
import "user_management_service/common/common.proto";
import "user_management_service/common/entity.proto";
import "user_management_service/common/search.proto";
import "user_management_service/common/user_profile.proto";

option go_package = "user_management_service";
option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.user_management_service";

// User Profile APIs under Permission Subservice
service UserProfileService {
  option (doordash.api.service) = {
    name: "user-management-service"
    url: "user-management-service-web.service.prod.ddsd"
    port: 50051
    name_spaces: ["user_profiles"]
    owner: {
      id: "user-management-service"
      name: "user-management-service"
      slack_channel: "#eng-user-management"
      email_alias: "mx-bmx-eng@doordash.com"
    }
    target_products: [
      MX,
      MX_PORTAL,
      AX_PORTAL
    ]
  };
  // Create or update a user_profile with a role. For updates, unfilled values are ignored.
  rpc CreateOrUpdateUserProfile(CreateOrUpdateUserProfileRequest) returns (CreateOrUpdateUserProfileResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 3000;
    option (google.api.http) = {
      post: "/mx/user_profiles/v1/create_or_update"
      body: '*'
    };

    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: DEV
      authorization: [
        DD_EMPLOYEE,
        MX_USER
      ]
      inject_user_roles: true
    };
  }

  // Create a user_profile
  rpc CreateUserProfile(CreateUserProfileRequest) returns (CreateUserProfileResponse) {
    option (google.api.http) = {
      post: "/mx/user_profiles/v1/create"
      body: '*'
    };

    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: DEV
      authorization: [
        DD_EMPLOYEE,
        MX_USER
      ]
      inject_user_roles: true
    };
  }

  // Update a user_profile. For updates, unfilled values are ignored.
  rpc UpdateUserProfile(UpdateUserProfileRequest) returns (UpdateUserProfileResponse) {
    option (google.api.http) = {
      post: "/mx/user_profiles/v1/update/{user_profile_id}"
      body: '*'
    };

    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: DEV
      authorization: [
        DD_EMPLOYEE,
        MX_USER
      ]
      inject_user_roles: true
    };
  }

  // Delete a user_profile
  rpc DeleteUserProfile(DeleteUserProfileRequest) returns (DeleteUserProfileResponse) {
    option (google.api.http) = {delete: "/mx/user_profiles/v1/delete/{user_profile_id}"};

    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: DEV
      authorization: [
        DD_EMPLOYEE,
        MX_USER
      ]
      inject_user_roles: true
    };
  }

  // Get a user_profile
  rpc GetUserProfile(GetUserProfileRequest) returns (GetUserProfileResponse) {
    option (google.api.http) = {
      post: "/mx/user_profiles/v1/get"
      body: '*'
    };

    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: DEV
      authorization: [
        DD_EMPLOYEE,
        MX_USER
      ]
      inject_user_roles: true
    };
  }

  // Get a user_profile
  rpc GetUserProfileByBusinessEmployeeProfileId(GetUserProfileByBusinessEmployeeProfileIdRequest) returns (GetUserProfileByBusinessEmployeeProfileIdResponse);

  // List all user_profiles for a particular user ID OR model
  rpc ListUserProfiles(ListUserProfilesRequest) returns (ListUserProfilesResponse) {
    option (google.api.http) = {
      post: "/mx/user_profiles/v1/list"
      body: '*'
    };

    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: DEV
      authorization: [
        DD_EMPLOYEE,
        MX_USER
      ]
      inject_user_roles: true
    };
  }

  // List all user_profiles of associated entities of a particular entity
  rpc ListUserProfilesOfAssociatedEntities(ListUserProfilesOfAssociatedEntitiesRequest) returns (ListUserProfilesOfAssociatedEntitiesResponse) {
    option (google.api.http) = {
      post: "/mx/user_profiles/v1/list_associated"
      body: '*'
    };

    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: DEV
      authorization: [
        DD_EMPLOYEE,
        MX_USER
      ]
      inject_user_roles: true
    };
  }

  // --DO NOT USE!!!-- List all user_profiles for a particular user ID OR model using offset based pagination
  rpc ListUserProfilesWithOffset(ListUserProfilesWithOffsetRequest) returns (ListUserProfilesWithOffsetResponse);

  // List all user profiles with a membership to a certain store -- TO BE DEPRECATED AFTER USER MIGRATION
  rpc ListUserProfilesWithMembership(ListUserProfilesWithMembershipRequest) returns (ListUserProfilesWithMembershipResponse);

  // Add a user_profile_role
  rpc AddUserProfileRole(AddUserProfileRoleRequest) returns (AddUserProfileRoleResponse) {
    option (google.api.http) = {
      post: "/mx/user_profiles/v1/add_role/{user_profile_id}"
      body: '*'
    };

    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: DEV
      authorization: [DD_EMPLOYEE] /* TODO: add MX_USER once authZ is ready on UMS */
    };
  }

  // Remove a user_profile_role
  rpc RemoveUserProfileRole(RemoveUserProfileRoleRequest) returns (RemoveUserProfileRoleResponse) {
    option (google.api.http) = {
      post: "/mx/user_profiles/v1/remove_role/{user_profile_id}"
      body: '*'
    };

    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: DEV
      authorization: [DD_EMPLOYEE] /* TODO: add MX_USER once authZ is ready on UMS */
    };
  }

  // List all user_profile_roles for a user profile ID
  rpc ListUserProfileRoles(ListUserProfileRolesRequest) returns (ListUserProfileRolesResponse) {
    option (google.api.http) = {get: "/mx/user_profiles/v1/list_roles/{user_profile_id}"};

    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: DEV
      authorization: [DD_EMPLOYEE] /* TODO: add MX_USER once authZ is ready on UMS */
    };
  }

  // Add a user_profile_membership
  rpc AddUserProfileMembership(AddUserProfileMembershipRequest) returns (AddUserProfileMembershipResponse) {
    option (google.api.http) = {
      post: "/mx/user_profiles/v1/add_membership/{user_profile_id}"
      body: '*'
    };

    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: DEV
      authorization: [DD_EMPLOYEE] /* TODO: add MX_USER once authZ is ready on UMS */
    };
  }

  // Remove a user_profile_membership
  rpc RemoveUserProfileMembership(RemoveUserProfileMembershipRequest) returns (RemoveUserProfileMembershipResponse) {
    option (google.api.http) = {
      post: "/mx/user_profiles/v1/remove_membership/{user_profile_id}"
      body: '*'
    };

    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: DEV
      authorization: [DD_EMPLOYEE] /* TODO: add MX_USER once authZ is ready on UMS */
    };
  }

  // List all memberships for a user_profile
  rpc ListUserProfileMemberships(ListUserProfileMembershipsRequest) returns (ListUserProfileMembershipsResponse) {
    option (google.api.http) = {
      post: "/mx/user_profiles/v1/list_memberships"
      body: '*'
    };

    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: DEV
      authorization: [
        DD_EMPLOYEE,
        MX_USER
      ],
      inject_user_roles: true
    };
  }

  // List all memberships for a user_profile
  rpc GetUserProfileMembershipByMDSMembershipId(GetUserProfileMembershipByMDSMembershipIdRequest) returns (GetUserProfileMembershipByMDSMembershipIdResponse);

  // Get Mx profile information by user ID.
  // Users may have more than one profile type, so the order of precedence is:
  // UMS_PROFILE > MDS_BUSINESS_GROUP_EMPLOYEE > MDS_BUSINESS_EMPLOYEE > MDS_MERCHANT
  // Will return UNSPECIFIED if user has no active mx profile.
  rpc GetMerchantUserInfoByUserId(GetMerchantUserInfoByUserIdRequest) returns (GetMerchantUserInfoByUserIdResponse);

  // Get user profiles that are associated to a user, and have access to a given model
  rpc GetUserProfilesWithModelAccess(GetUserProfilesWithModelAccessRequest) returns (GetUserProfilesWithModelAccessResponse);

  // Retries to send an email to an existing user
  rpc RetrySendEmail(RetrySendEmailRequest) returns (RetrySendEmailResponse);
}

message CreateOrUpdateUserProfileRequest {
  // Deprecated fields
  reserved 12;
  reserved "store_ids";

  // [Optional] UserProfileId of the requester to determine access
  google.protobuf.StringValue requester_user_profile_id = 16 [(doordash.api.client.optional) = true];

  oneof identifier {
    google.protobuf.StringValue user_profile_id = 1;
    UserIdAndModel user_id_and_model = 2;
    UserEmailAndModel user_email_and_model = 3;
  }

  // First name of user
  google.protobuf.StringValue first_name = 4;
  // Last name of user
  google.protobuf.StringValue last_name = 5;
  // Phone number of user
  google.protobuf.StringValue phone_number = 6;

  // Role of the user. Removes all existing roles and adds this one.
  common.Role role = 7;

  // Optional field to pass metadata for the email sent on new identity user creation
  IdentityUserCreationMetadata identity_user_creation_metadata = 8;
  // Optional field to pass metadata for the email sent on user profile creation of an existing user
  EmailMetadata email_metadata = 9;

  // Active status of profile.
  common.ActiveStatus active_status = 10;

  // Whether user has access to all entities or not. Default true for creation.
  google.protobuf.BoolValue is_member_of_all_entities = 11;

  // Optional field to pass user's new Model after update
  organization_service.v1.Model model = 13;

  // [Optional] List of store_ids to add membership to
  repeated google.protobuf.Int64Value store_ids_to_add = 14 [(doordash.api.client.optional) = true];

  // [Optional] List of store_ids to remove membership for
  repeated google.protobuf.Int64Value store_ids_to_remove = 15 [(doordash.api.client.optional) = true];
}

message CreateOrUpdateUserProfileResponse {
  // Deprecated: Use user_profile_with_entity instead
  common.UserProfile user_profile = 1 [deprecated = true];

  // The status of the operation
  enum Status {
    STATUS_UNSPECIFIED = 0;
    STATUS_CREATED = 1;
    STATUS_UPDATED = 2;
    STATUS_DELETED = 3;
  }
  Status status = 2;

  // User profile with user role and entity information
  UserProfileWithEntity user_profile_with_entity = 3;
}

// Request for CreateUserProfile
message CreateUserProfileRequest {
  // [Optional] UserProfileId of the requester to determine access
  google.protobuf.StringValue requester_user_profile_id = 11 [(doordash.api.client.optional) = true];

  // Id of either business or organization to add user profile for
  oneof user_profile_membership_model_id {
    // Business id to add user profile for
    google.protobuf.Int64Value business_id = 1;
    // Organization id to add user profile for
    google.protobuf.Int64Value organization_id = 2;
  }
  // Email associated with Identity User Record
  google.protobuf.StringValue email = 3;
  // First name of user
  google.protobuf.StringValue first_name = 4;
  // Last name of user
  google.protobuf.StringValue last_name = 5;
  // Phone number of user
  google.protobuf.StringValue phone_number = 6;
  // User id to create user profile for
  google.protobuf.StringValue user_id = 7;
  // Optional field to pass metadata for the email sent on new identity user creation
  IdentityUserCreationMetadata identity_user_creation_metadata = 8;
  // Optional field to pass metadata for the email sent on user profile creation of an existing user
  EmailMetadata email_metadata = 9;
  // Whether profile should have membership of all entities. Default true.
  google.protobuf.BoolValue is_member_of_all_entities = 10;
}

// Identity user creation metadata for welcome emails
message IdentityUserCreationMetadata {
  // Configuration ID to specify iterable template in postal service
  google.protobuf.StringValue configuration_id = 1;

  // Url user gets redirected to after they set their new password
  google.protobuf.StringValue redirect_uri = 2;

  // Mapping of Iterable data fields to pass to the identity service
  map<string, google.protobuf.StringValue> iterable_data_fields = 3;

  // Custom layout to specify the layout of the password reset landing page
  google.protobuf.StringValue layout = 4;
}

// Object to define the email sending metadata
message EmailMetadata {
  // Configuration ID to specify email template in postal service
  google.protobuf.StringValue configuration_id = 1;

  // Mapping of Iterable data fields to pass to the email client
  map<string, google.protobuf.StringValue> iterable_data_fields = 2;
}

// Response for CreateUserProfile
message CreateUserProfileResponse {
  // Successfully created user_profile object
  common.UserProfile user_profile = 1;
}

// Request for UpdateUserProfile
message UpdateUserProfileRequest {
  // [Optional] UserProfileId of the requester to determine access
  google.protobuf.StringValue requester_user_profile_id = 6 [(doordash.api.client.optional) = true];

  // User profile id to update
  google.protobuf.StringValue user_profile_id = 1;
  // First name of user
  google.protobuf.StringValue first_name = 2;
  // Last name of user
  google.protobuf.StringValue last_name = 3;
  // Phone number of user
  google.protobuf.StringValue phone_number = 4;
  // Whether profile should have membership of all entities.
  google.protobuf.BoolValue is_member_of_all_entities = 5;
}

// Response for UpdateUserProfile
message UpdateUserProfileResponse {
  // Successfully updated user_profile object
  common.UserProfile user_profile = 1;
}

// Request for DeleteUserProfile
message DeleteUserProfileRequest {
  // [Optional] UserProfileId of the requester to determine access
  google.protobuf.StringValue requester_user_profile_id = 2 [(doordash.api.client.optional) = true];

  // User profile id to delete
  google.protobuf.StringValue user_profile_id = 1;
}

// Empty Response for DeleteUserProfile
message DeleteUserProfileResponse {}

// Request for GetUserProfile
message GetUserProfileRequest {
  reserved 4;
  reserved "is_self_request";
  // [Optional] UserProfileId of the requester to determine access
  google.protobuf.StringValue requester_user_profile_id = 5 [(doordash.api.client.optional) = true];

  // Identifier used to fetch user profile
  oneof identifier {
    // User Profile Id of to fetch user profile by
    google.protobuf.StringValue user_profile_id = 1;
    // User Id and Model to fetch user profile by
    UserIdAndModel user_id_and_model = 2;
  }
  // User profile options for retrieved profiles
  UserProfileOptions user_profile_options = 3;
}

message UserIdAndModel {
  // Model to get user profile for (must be BUSINESS or ORGANIZATION).
  organization_service.v1.Model model = 1;
  // User id to fetch user profile for.
  google.protobuf.StringValue user_id = 2;
}

message UserEmailAndModel {
  // Model to get user profile for (must be BUSINESS or ORGANIZATION).
  organization_service.v1.Model model = 1;
  // Email to fetch user profile for.
  google.protobuf.StringValue email = 2;
}

// Response for GetUserProfile
message GetUserProfileResponse {
  // Requested user_profile object
  UserProfileWithEntity user_profile = 1;
}

// Request for GetUserProfileByBusinessEmployeeProfileId
message GetUserProfileByBusinessEmployeeProfileIdRequest {
  reserved 3;
  reserved "is_self_request";
  // [Optional] UserProfileId of the requester to determine access
  google.protobuf.StringValue requester_user_profile_id = 4 [(doordash.api.client.optional) = true];

  // Business Employee Profile Id of to fetch user profile by
  google.protobuf.Int64Value business_employee_profile_id = 1;
  // User profile options for retrieved profiles
  UserProfileOptions user_profile_options = 2;
}

// Response for GetUserProfileByBusinessEmployeeProfileId
message GetUserProfileByBusinessEmployeeProfileIdResponse {
  // Requested user_profile object
  UserProfileWithEntity user_profile = 1;
}

// Request for ListUserProfilesWithMembership
message ListUserProfilesWithMembershipRequest {
  // [Optional] UserProfileId of the requester to determine access
  google.protobuf.StringValue requester_user_profile_id = 3 [(doordash.api.client.optional) = true];
  // Store ID for which to grab profiles with a membership for
  google.protobuf.Int64Value store_id = 1;
  // User Profile options
  UserProfileOptions user_profile_options = 2;
}

// Response for ListUserProfilesWithMembership
message ListUserProfilesWithMembershipResponse {
  // List of user profiles
  repeated UserProfileWithEntity user_profiles = 1;
}

// Request for ListUserProfilesWithOffset
message ListUserProfilesWithOffsetRequest {
  // [Optional] UserProfileId of the requester to determine access
  google.protobuf.StringValue requester_user_profile_id = 9 [(doordash.api.client.optional) = true];
  // List user profiles either by model or by user id
  oneof identifier {
    // Model to list user profiles for (must be BUSINESS or ORGANIZATION)
    organization_service.v1.Model model = 1;
    // User id to list user profiles for
    google.protobuf.StringValue user_id = 2;
  }
  // Search results after this offsetted row in the database
  google.protobuf.Int32Value offset = 3;
  // Limit for paginated response
  google.protobuf.Int32Value limit = 4;
  // Search query to filter results by first name, last name, or email.
  google.protobuf.StringValue query = 5;
  UserProfileOptions user_profile_options = 6;

  // List of Roles to filter results for
  repeated common.Role roles = 7;

  // Sort fields.
  common.SortByField sort_by = 8;
}

// Response for ListUserProfilesWithOffset
message ListUserProfilesWithOffsetResponse {
  // List of user profiles
  repeated UserProfileWithEntity user_profiles = 1;
  // Total count of records
  google.protobuf.Int32Value total_count = 2;
}

// Request for ListUserProfiles
message ListUserProfilesRequest {
  // [Optional] UserProfileId of the requester to determine access
  google.protobuf.StringValue requester_user_profile_id = 9 [(doordash.api.client.optional) = true];
  // List user profiles either by model or by user id
  oneof identifier {
    // Model to list user profiles for (must be BUSINESS or ORGANIZATION)
    organization_service.v1.Model model = 1;
    // User id to list user profiles for
    google.protobuf.StringValue user_id = 2;
  }
  // Search results after the row with this value in the sort by field.
  google.protobuf.StringValue cursor = 3;
  // Limit for paginated response
  google.protobuf.Int32Value limit = 4;
  // Search query to filter results by first name, last name, or email.
  google.protobuf.StringValue query = 5;
  UserProfileOptions user_profile_options = 6;

  // List of Roles to filter results for
  repeated common.Role roles = 7;

  // Sort fields.
  common.SortByField sort_by = 8;
}

// Object that defines the optional info that could be included in the response
message UserProfileOptions {
  // Boolean value to indicate whether include entity info in the response
  bool include_entity = 1;
  // Boolean value to indicate whether include user profile roles info in the response
  bool include_user_profile_role = 2;
}

// Response for ListUserProfiles
message ListUserProfilesResponse {
  // List of user profiles
  repeated UserProfileWithEntity user_profiles = 1;
  // Cursor for the last row in this response.
  google.protobuf.StringValue next_cursor = 2;
}

// Object that contains a UserProfile and its associated Entity data
message UserProfileWithEntity {
  // User profile information
  common.UserProfile user_profile = 1;
  // Entity information
  common.Entity entity = 2;
  // User profile role information
  repeated common.UserProfileRole user_profile_roles = 3;
}

// Lists user profiles associated with the specified model, by default, and its associated entities
message ListUserProfilesOfAssociatedEntitiesRequest {
  // [Optional] UserProfileId of the requester to determine access
  google.protobuf.StringValue user_profile_id = 1 [(doordash.api.client.optional) = true];
  // Model the user wants to fetch user profile for
  organization_service.v1.Model model = 2;
  // Filter of associated entity types to fetch user profiles for
  repeated organization_service.v1.EntityType entity_filter = 3;
  // Search results after the row with this value in the sort by field.
  google.protobuf.StringValue cursor = 4;
  // Limit for paginated response
  google.protobuf.Int32Value limit = 5;
  // Search query to filter results by first name, last name, or email.
  google.protobuf.StringValue query = 6;
  // User profile options for retrieved profiles
  UserProfileOptions user_profile_options = 7;
  // List of Roles to filter results for
  repeated common.Role roles = 8;
  // Sort fields.
  common.SortByField sort_by = 9;
  // Whether to exclude user profiles exclusively associated with
  // the specified model (as opposed to its associated entities)
  bool exclude_user_profiles_of_model = 10;
}

// Response for ListUserProfilesOfAssociatedEntities
message ListUserProfilesOfAssociatedEntitiesResponse {
  // List of user profiles
  repeated UserProfileWithPermission user_profiles = 1;
  // Cursor for the last row in this response
  google.protobuf.StringValue next_cursor = 2;
}

message UserProfileWithPermission {
  // User profile information
  UserProfileWithEntity user_profile = 1;
  // If this user can be edited by the current user
  google.protobuf.BoolValue can_edit = 2;
}

// Request for AddUserProfile
message AddUserProfileRoleRequest {
  // [Optional] UserProfileId of the requester to determine access
  google.protobuf.StringValue requester_user_profile_id = 9 [(doordash.api.client.optional) = true];
  // User profile ID of the user profile to add the role for
  google.protobuf.StringValue user_profile_id = 1;
  // Role type to add
  common.Role role = 2;
}

// Response for AddUserProfile
message AddUserProfileRoleResponse {
  // Successfully created user_profile_role
  common.UserProfileRole user_profile_role = 1;
}

// Request for RemoveUserProfileRole
message RemoveUserProfileRoleRequest {
  // [Optional] UserProfileId of the requester to determine access
  google.protobuf.StringValue requester_user_profile_id = 3 [(doordash.api.client.optional) = true];
  // Id of user_profile to remove role from
  google.protobuf.StringValue user_profile_id = 1;
  // Role to remove
  common.Role role = 2;
}

// Empty Response for RemoveUserProfileRole
message RemoveUserProfileRoleResponse {}

// Request for ListUserProfileRoles
message ListUserProfileRolesRequest {
  // [Optional] UserProfileId of the requester to determine access
  google.protobuf.StringValue requester_user_profile_id = 2 [(doordash.api.client.optional) = true];
  // Id of user profile to fetch roles for
  google.protobuf.StringValue user_profile_id = 1;
}

// Response for ListUserProfileRoles
message ListUserProfileRolesResponse {
  // Active roles the user_profile has
  repeated common.UserProfileRole user_profile_roles = 1;
}

// Request for AddUserProfileMembership
message AddUserProfileMembershipRequest {
  // [Optional] UserProfileId of the requester to determine access
  google.protobuf.StringValue requester_user_profile_id = 4 [(doordash.api.client.optional) = true];
  // User profile id to add membership to
  google.protobuf.StringValue user_profile_id = 1;
  // Id of either business or store to add membership for
  oneof user_profile_membership_model_id {
    // Store id to add membership for
    google.protobuf.Int64Value store_id = 2;
    // Business id to add membership for
    google.protobuf.Int64Value business_id = 3;
  }
}

// Response for AddUserProfileMembership
message AddUserProfileMembershipResponse {
  // Successfully added user_profile_membership object
  common.UserProfileMembership user_profile_membership = 1;
}

// Request for RemoveUserProfileMembership
message RemoveUserProfileMembershipRequest {
  // [Optional] UserProfileId of the requester to determine access
  google.protobuf.StringValue requester_user_profile_id = 4 [(doordash.api.client.optional) = true];
  // User profile id for which to remove membership from
  google.protobuf.StringValue user_profile_id = 1;
  // Id of either business or store of membership to be removed
  oneof user_profile_membership_model_id {
    // Id of store for membership to be removed
    google.protobuf.Int64Value store_id = 2;
    // Id of business for membership to be removed
    google.protobuf.Int64Value business_id = 3;
  }
}

// Empty Response for RemoveUserProfileMembership
message RemoveUserProfileMembershipResponse {}

// Request for ListUserProfileMemberships
message ListUserProfileMembershipsRequest {
  reserved 3;
  reserved "include_entity";

  // [Optional] UserProfileId of the requester to determine access
  google.protobuf.StringValue requester_user_profile_id = 5 [(doordash.api.client.optional) = true];
  oneof identifier {
    // Model to list user profiles for (must be STORE or BUSINESS)
    organization_service.v1.Model model = 1;
    // User profile id to list memberships for
    google.protobuf.StringValue user_profile_id = 2;
  }
  // [Optional] Boolean to indicate whether to include Entity in the response
  bool should_include_entity = 4 [(doordash.api.client.optional) = true];
}

// Response for ListUserProfileMemberships
message ListUserProfileMembershipsResponse {
  // List of user profile memberships
  repeated common.UserProfileMembership user_profile_membership = 1;
}

message GetMerchantUserInfoByUserIdRequest {
  // [Optional] UserProfileId of the requester to determine access
  google.protobuf.StringValue requester_user_profile_id = 2 [(doordash.api.client.optional) = true];
  google.protobuf.StringValue user_id = 1;
}

// Request for GetUserProfileByBusinessEmployeeProfileId
message GetUserProfileMembershipByMDSMembershipIdRequest {
  // [Optional] UserProfileId of the requester to determine access
  google.protobuf.StringValue requester_user_profile_id = 2 [(doordash.api.client.optional) = true];
  // Business Employee Store Membership Id of to fetch user profile membership by
  google.protobuf.Int64Value business_employee_store_membership_id = 1;
}

// Response for GetUserProfileByBusinessEmployeeProfileId
message GetUserProfileMembershipByMDSMembershipIdResponse {
  // Requested user_profile_membership object
  common.UserProfileMembership user_profile_membership = 1;
}

enum MerchantProfileType {
  MERCHANT_PROFILE_TYPE_UNSPECIFIED = 0;
  MERCHANT_PROFILE_TYPE_UMS_PROFILE = 1;
  MERCHANT_PROFILE_TYPE_MDS_BUSINESS_GROUP_EMPLOYEE = 2;
  MERCHANT_PROFILE_TYPE_MDS_BUSINESS_EMPLOYEE = 3;
  MERCHANT_PROFILE_TYPE_MDS_MERCHANT = 4;
}

message GetMerchantUserInfoByUserIdResponse {
  string user_id = 1;
  MerchantProfileType profile_type = 2;
}

message GetUserProfilesWithModelAccessRequest {
  // [Optional] UserProfileId of the requester to determine access
  google.protobuf.StringValue requester_user_profile_id = 3 [(doordash.api.client.optional) = true];
  google.protobuf.StringValue user_id = 1;
  organization_service.v1.Model model = 2;
}

message GetUserProfilesWithModelAccessResponse {
  repeated common.UserProfile user_profiles = 1;
}

// Request for RetrySendEmailRequest
message RetrySendEmailRequest {
  // [Optional] UserProfileId of the requester to determine access
  google.protobuf.StringValue requester_user_profile_id = 10 [(doordash.api.client.optional) = true];
  // Email associated with Identity User Record
  google.protobuf.StringValue email = 3;
  // Field to pass email metadata to send custom emails after user creation
  EmailMetadata email_metadata = 9;
}

// Response for RetrySendEmailRequest
message RetrySendEmailResponse {
  // Unique Message ID from postal service to track events/statuses.
  string message_id = 1;
}
