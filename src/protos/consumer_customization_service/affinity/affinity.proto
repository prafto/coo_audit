syntax = "proto3";

package consumer_affinity_service.affinity.v1;

import "common/service_client_config.proto";
import "consumer_customization_service/affinity/affinity_type.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.consumer_affinity_service";

/*
   API to fetch Cx affinity data to entities
   The Entity should be from a Taxonomy. e.g. the food taxonomy and NV product taxonomy
   It will only return non-zero affinity data in the range of [-1,1]
   Higher negative affinity score means Cx more disfavor the entity
   Higher positive affinity score means Cx more prefer the entity
*/
service ConsumerAffinityService {
  // Fetch Cx Product Category Affinities
  rpc GetCxAffinities(GetCxAffinitiesRequest) returns (GetCxAffinitiesResponse);
  // Fetch NV Cx Affinities
  rpc GetNVCxAffinities(GetNVCxAffinitiesRequest) returns (GetNVCxAffinitiesResponse);
}

/* Request to get Cx affinities */
message GetCxAffinitiesRequest {
  /* Consumer id */
  google.protobuf.StringValue consumer_id = 1;

  /*
     Optional fields used for response data customization.
     The default behavior will return all Affinities related to the Cx.
  */

  // affinity inclusive lower bound
  google.protobuf.DoubleValue affinity_lower_bound = 2;
  // affinity inclusive upper bound
  google.protobuf.DoubleValue affinity_upper_bound = 3;
  // affinity entities to include
  repeated AffinityEntity affinity_entities = 4;
  // optional business Id
  google.protobuf.StringValue business_id = 5;
  // optional business vertical Id
  google.protobuf.StringValue business_vertical_id = 6;

  // Affinity Entity
  enum AffinityEntity {
    // unspecified affinity entity
    AFFINITY_ENTITY_UNSPECIFIED = 0;
    // NV L1 product category based on NV product taxonomy
    AFFINITY_ENTITY_NEW_VERTICAL_L1_PRODUCT_CATEGORY = 1;
    // NV L2 product category based on NV product taxonomy
    AFFINITY_ENTITY_NEW_VERTICAL_L2_PRODUCT_CATEGORY = 2;
    // NV L3 product category based on NV product taxonomy
    AFFINITY_ENTITY_NEW_VERTICAL_L3_PRODUCT_CATEGORY = 3;
    // NV L4 product category based on NV product taxonomy
    AFFINITY_ENTITY_NEW_VERTICAL_L4_PRODUCT_CATEGORY = 4;
    // Food Dish based on Food taxonomy
    AFFINITY_ENTITY_FOOD_DISH = 5;
    // Food Cuisine based on Food taxonomy
    AFFINITY_ENTITY_FOOD_CUISINE = 6;
    // Old version for food taste affinities
    AFFINITY_ENTITY_FOOD_TASTE = 7;
    // Consumer price sensitivity preferences
    AFFINITY_ENTITY_PRICE_SNESITIVITY = 8;
    // Affinity for legacy category l1 (not l1-l4 taxonomy)
    AFFINITY_ENTITY_NEW_VERTICAL_CATEGORY_L1 = 9;
    // Affinity for legacy category l2 (not l1-l4 taxonomy)
    AFFINITY_ENTITY_NEW_VERTICAL_CATEGORY_L2 = 10;
    // Affinity for brand
    AFFINITY_ENTITY_NEW_VERTICAL_BRAND = 11;
    // Food Dish based on Food Dish V2 taxonomy
    AFFINITY_ENTITY_FOOD_DISH_V2 = 12;
    // Dietary Preferences based on Dietary V3 taxonomy
    AFFINITY_ENTITY_DIETARY_PREFERENCE = 13;
    // NV Dietary Preference Organic (specific attribute)
    AFFINITY_ENTITY_NEW_VERTICAL_DIETARY_PREFERENCE_ORGANIC = 14;
    // NV Dietary Preferences overall based on Cx engagement
    AFFINITY_ENTITY_NEW_VERTICALS_DIETARY_PREFERENCE = 15;
    // NV Dietary Preference Vegan (specific attribute)
    AFFINITY_ENTITY_NEW_VERTICAL_DIETARY_PREFERENCE_VEGAN = 16;
  }
}

/* Response for Cx affinities */
message GetCxAffinitiesResponse {
  /* Consumer id */
  google.protobuf.StringValue consumer_id = 1;

  // NV L1 Product Category affinities
  repeated Affinity product_category_affinities_l1 = 2;
  // NV L2 Product category affinities
  repeated Affinity product_category_affinities_l2 = 3;
  // NV L3 Product category affinities
  repeated Affinity product_category_affinities_l3 = 4;
  // NV L4 Product category affinities
  repeated Affinity product_category_affinities_l4 = 5;
  // Food Dish affinities
  repeated Affinity food_dish_affinities = 6;
  // Food Cuisine affinities
  repeated Affinity food_cuisine_affinities = 7;
  // Food Taste affinities
  repeated Affinity food_taste_affinities = 8;
  // Consumer price affinities
  Affinity price_sensitivity_affinity = 9;
  // NV L1 Category affinities (not l1-l4 taxonomy)
  repeated Affinity nv_category_affinities_l1 = 10;
  // NV L2 Category affinities (not l1-l4 taxonomy)
  repeated Affinity nv_category_affinities_l2 = 11;
  // NV Brand affinities
  repeated Affinity nv_brand_affinities = 12;
  // Food Dish V2 affinities
  repeated Affinity food_dish_v2_affinities = 13;
  // Dietary Preference affinities
  repeated Affinity dietary_preference_affinities = 14;
  // NV Dietary Preference Organic (specific attribute) affinities
  repeated Affinity nv_dietary_preference_organic_affinities = 15;
  // NV Dietary Preference Overall Scores
  repeated Affinity nv_dietary_preference_affinities = 16;
  // NV Dietary Preference Vegan (specific attribute) affinities
  repeated Affinity nv_dietary_preference_vegan_affinities = 17;
}

/* Request to get NV Cx Affinities */
message GetNVCxAffinitiesRequest {
  /* Consumer id */
  google.protobuf.StringValue consumer_id = 1;

  /*
     Optional fields used for response data customization.
     The default behavior will return all Affinities related to the Cx.
  */

  // affinity inclusive lower bound
  google.protobuf.DoubleValue affinity_lower_bound = 2;
  // affinity inclusive upper bound
  google.protobuf.DoubleValue affinity_upper_bound = 3;
  // affinity options to include
  repeated AffinityOption affinity_options = 4;
  // optional business Id
  google.protobuf.StringValue business_id = 5;
  // optional business vertical Id
  google.protobuf.StringValue business_vertical_id = 6;
}

/* Affinity option for NV Cx affinities request */
message AffinityOption {
  // name of affinity entity
  google.protobuf.StringValue name = 1;
}

/* Response for NV Cx affinities */
message GetNVCxAffinitiesResponse {
  // consumer id
  google.protobuf.StringValue consumer_id = 1;
  // affinity vector response
  repeated AffinityVector affinity_vector = 2;
}

/* Affinity vector for NV Cx affinities */
message AffinityVector {
  // name of affinity entity
  google.protobuf.StringValue name = 1;
  // affinities per vector
  repeated Affinity affinities = 2;
}

/*
   Affinity data to an entity. e.g. NV product category, food dish & cuisine
   Ideally the entity should be from a Taxonomy.
*/
message Affinity {
  // entity id
  google.protobuf.Int64Value id = 1;
  // entity name
  google.protobuf.StringValue name = 2;
  // entity display name
  google.protobuf.StringValue display_name = 3;
  // affinity to the entity. value will be [-1 , 1]
  google.protobuf.DoubleValue affinity = 4;
  // type of the affinity
  AffinityType type = 5;
}
