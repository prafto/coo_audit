syntax = "proto3";

package delivery.experience.chat.chat_common;

import "chat_service/input.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option java_multiple_files = true;
option java_outer_classname = "Common";
option java_package = "com.doordash.rpc.chat.chat_common";

message BotMessagePayload {
  ExecuteWorkflowResponse execute_workflow_response = 1;
}

message AdminMessagePayload {
  google.protobuf.StringValue subtitle = 1;
  google.protobuf.BoolValue is_loading = 2;
  google.protobuf.Int32Value estimated_wait_time_minutes = 3 [deprecated = true];
  // Text to be displayed for agents in place of the regular message text.
  google.protobuf.StringValue agent_text = 4;
  // Indicates whether the admin message should be completely hidden for agents.
  google.protobuf.BoolValue is_hidden_for_agent = 5;
  // Custom user input component.
  delivery.experience.chat.input.UserInputComponent user_input_component = 7;
  enum MessageType {
    // Default type.
    MESSAGE_TYPE_UNKNOWN = 0;
    // Title type.
    MESSAGE_TYPE_TITLE = 1;
    // Inline type
    MESSAGE_TYPE_INLINE = 2;
    // Appear as if it came from a user
    MESSAGE_TYPE_USER = 3;
  }
  // Specifies the specific type of admin message.
  MessageType message_type = 8;
}

message UserMessagePayload {
  ExecuteWorkflowRequest execute_workflow_request = 1;
}

message SupportChannelPayload {
  delivery.experience.chat.input.PostChatSurvey post_chat_survey = 1;
  bool auto_escalate = 2;
}

message ExecuteWorkflowRequest {
  int32 workflow_id = 1;
  string node_id = 2;
  string delivery_uuid = 3;
  ExecuteWorkflowSessionData session_data = 4;
  string chat_message_id = 5;
  string prev_node_id = 6;
}

message ExecuteWorkflowSessionData {
  string workflow_request_id = 1;
  google.protobuf.Timestamp workflow_start_time = 2;
  string manual_decision_id = 3;
  string manual_decision_name = 4;
  google.protobuf.Timestamp manual_decision_start_time = 5;
}

message ExecuteWorkflowResponse {
  string node_id = 1;
  string workflow_name = 2;
  repeated NodeOutput outputs = 3;
  ExecuteWorkflowSessionData session_data = 4;
  int32 workflow_id = 5;
  string title = 6;
  repeated NodeDirective directives = 7;
  NodeOutputLayout layout = 8;
  string delivery_uuid = 9;
  string node_name = 10;
}

message NodeDirective {
  string name = 1;
}

message NodeOutput {
  string value = 1;
  string next_node_id = 2;
  string id = 3;
  repeated UserLocaleValue user_locale_values = 4;
  string subtitle = 5;
  string next_node_type = 6;
}

message UserLocaleValue {
  string locale = 1;
  string content = 2;
  string subtitle = 3;
}

enum NodeOutputLayout {
  BUTTON = 0;
  RADIO = 1;
}

enum ChannelStatus {
  // Default value
  STATUS_UNKNOWN = 0;
  // Channel is created by consumer flow
  CX_CREATED = 1;
  // Channel is created by dasher flow
  DX_CREATED = 2;
  // Channel is created when dasher confirmed (kafka)
  KAFKA_CREATED = 3;
  // Hide the channel
  CHANNEL_HIDDEN = 4;
  // Channel metadata created by cx flow
  MD_CX_CREATED = 5;
  // Channel metadata created by dx flow
  MD_DX_CREATED = 6;
  // Channel metadata created when dasher confirmed (kafka)
  MD_KAFKA_CREATED = 7;
  // Channel metadata created when dasher is added (kafka)
  MD_DX_ADDED_KAFKA = 8;
  // Channel metadata created when dasher is added by dx flow
  MD_DX_ADDED_DX = 9;
  // Channel metadata created when dasher is removed from current chat (kafka)
  MD_DX_REMOVED = 10;
  // Channel metadata created when delivery is completed
  MD_DELIVERY_COMPLETE = 11;
  // Channel metadata created when delivery is cancelled
  MD_DELIVERY_CANCEL = 12;
  // Dasher removed from current chat by dasher reconcile
  MD_DX_REMOVED_DX = 13;
}

// Geo location.
message GeoLocation {
  // Latitude.
  float lat = 1;
  // Longitude.
  float lng = 2;
  // Zip code.
  google.protobuf.StringValue district_id = 3;
  // Submarket id.
  google.protobuf.StringValue market_id = 4;
  // District id.
  google.protobuf.StringValue submarket_id = 5;
  // User's address, country shortname such as US, DE.
  google.protobuf.StringValue country_shortname = 6;
  // District id.
  google.protobuf.StringValue time_zone = 7;
  // City.
  google.protobuf.StringValue city = 8;
  // State.
  google.protobuf.StringValue state = 9;
  // Zip code.
  google.protobuf.StringValue zip_code = 10;
}

// Custom channel type.
enum ChannelType {
  // Unspecified.
  CHANNEL_TYPE_UNSPECIFIED = 0;
  // DashBot.
  CHANNEL_TYPE_DASHBOT = 1;
}

// Type of chat provider
enum ChatProvider {
  // Unspecified
  CHAT_PROVIDER_UNSPECIFIED = 0;
  // DashChat
  CHAT_PROVIDER_DASHCHAT = 1;
  // Converse/Wolt
  CHAT_PROVIDER_CONVERSE = 2;
  // Sendbird
  CHAT_PROVIDER_SENDBIRD = 3;
}

// User experience
enum Experience {
  // unspecified experience
  EXPERIENCE_UNSPECIFIED = 0;
  // DoorDash experience
  EXPERIENCE_DOORDASH = 1;
  // Caviar experience
  EXPERIENCE_CAVIAR = 2;
}
