syntax = "proto3";

package delivery.experience.chat.kafka;

import "chat_service/salesforce.proto";
import "chat_service/sendbird.proto";
import "chat_service/support_chat_service.proto";
import "google/protobuf/timestamp.proto";

option java_multiple_files = true;
option java_outer_classname = "Kafka";
option java_package = "com.doordash.rpc.chat.kafka";

message ChatEvent {
  string id = 1;
  // Timestamp from the server when the event is published to Kafka.
  google.protobuf.Timestamp timestamp = 2;
  oneof event {
    SendbirdBotCallbackReceivedEvent sendbird_bot_callback_received = 3;
    SendbirdGroupChannelMsgSendWebhookReceivedEvent sendbird_group_channel_msg_send_webhook_received = 4;
    SendbirdGroupChannelMsgReadWebhookReceivedEvent sendbird_group_channel_msg_read_webhook_received = 5;
    SendbirdGroupChannelMsgDeliveryReceiptWebhookReceivedEvent sendbird_group_channel_msg_delivery_receipt_webhook_received = 6;
    SalesforceCaseUpdateEvent salesforce_case_updated = 7;
    ChatEndedEvent chat_ended = 8;
    SendbirdGroupChannelLeaveWebhookReceivedEvent sendbird_group_channel_leave_webhook_received = 9;
    ChatResumedEvent chat_resumed = 10;
    SendbirdGroupChannelCreatedEvent sendbird_group_channel_created = 11;
    SalesforceAxJoinRequestEvent salesforce_ax_join_request_event = 12;
    UserInputSubmittedEvent user_input_submitted = 13;
    SendbirdGroupChannelJoinWebhookReceivedEvent sendbird_group_channel_join_webhook_received = 14;
    OutboundCallCallbackEvent outbound_call_callback_event = 16;
  }
  bool should_consume_by_chat_platform = 15;
}

message SendbirdBotCallbackReceivedEvent {
  delivery.experience.chat.sendbird.SendbirdBotCallbackRequest payload = 1;
}

message SendbirdGroupChannelLeaveWebhookReceivedEvent {
  delivery.experience.chat.sendbird.SendbirdGroupChannelLeaveWebhookRequest payload = 1;
}

message SendbirdGroupChannelJoinWebhookReceivedEvent {
  delivery.experience.chat.sendbird.SendbirdGroupChannelJoinWebhookRequest payload = 1;
}

message SendbirdGroupChannelMsgSendWebhookReceivedEvent {
  delivery.experience.chat.sendbird.SendbirdGroupChannelMsgSendWebhookRequest payload = 1;
}

message SendbirdGroupChannelMsgReadWebhookReceivedEvent {
  delivery.experience.chat.sendbird.SendbirdGroupChannelMsgReadWebhookRequest payload = 1;
}

message SendbirdGroupChannelMsgDeliveryReceiptWebhookReceivedEvent {
  delivery.experience.chat.sendbird.SendbirdGroupChannelMsgDeliveryReceiptWebhookRequest payload = 1;
}

message SalesforceCaseUpdateEvent {
  delivery.experience.chat.salesforce.SalesforceCaseUpdateRequest payload = 1;
}

// Message passing information about salesforce case owner.
message SalesforceAxJoinRequestEvent {
  // ID of the chat session
  string channel_url = 1;
  // ID for the case owner
  string salesforce_owner_id = 2;
  // Agent First Name
  string agent_first_name = 3;
}

message ChatEndedEvent {
  string channel_url = 1;
  // [optional] If want to remove Ax from the chat, their encoded chat user id
  string remove_chat_agent_id = 2;
}

message ChatResumedEvent {
  string channel_url = 1;
}

message SendbirdGroupChannelCreatedEvent {
  delivery.experience.chat.sendbird.SendbirdGroupChannelCreateWebhookRequest payload = 1;
}

message UserInputSubmittedEvent {
  delivery.experience.chat.SubmitUserInputRequest payload = 1;
}

// Message representing event published by voice-automation after receiving callback from PolyAI.
message OutboundCallCallbackEvent {
  // Sendbird channel/session id
  string channel_url = 1;
  // Apollo session id
  string session_id = 2;
  // Status of call, e.g. SUCCESSFUL, ANSWERED, VOICE_MAIL
  string status = 3;
  // Unique ID of the outbound call
  string conversation_id = 4;
  // Summary of the outbound call
  string summary = 5;
  // Call transcript
  repeated Transcript transcript = 6;
}

// Represents transcript of call between user and agent
message Transcript {
  // User utterance
  string user = 1;
  // Agent utterance
  string agent = 2;
}
