syntax = "proto3";
package doordash.dvrs.v1;

import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_outer_classname = "DynamicValueRolloutApi";
option java_package = "com.doordash.rpc.dvrs.v1";

// Contains methods to manage automatic rollouts of Dynamic Values
service DynamicValueRolloutService {
  // Creates a new automated rollout of a Dynamic Value
  rpc CreateRollout(CreateRolloutRequest) returns (CreateRolloutResponse);

  // Updates an existing automated rollout of a Dynamic Value
  rpc UpdateRollout(UpdateRolloutRequest) returns (UpdateRolloutResponse);

  // Deletes an existing automated rollout of a Dynamic Value
  rpc DeleteRollout(DeleteRolloutRequest) returns (DeleteRolloutResponse);

  // Starts an automatic rollout of a Dynamic Value
  rpc StartRollout(StartRolloutRequest) returns (StartRolloutResponse);

  // Stops an automatic rollout of a Dynamic Value
  rpc StopRollout(StopRolloutRequest) returns (StopRolloutResponse);

  // Pauses a Dynamic Value rollout that is currently in progress
  rpc PauseRollout(PauseRolloutRequest) returns (PauseRolloutResponse);

  // Resumes a Dynamic Value rollout that is currently paused
  rpc ResumeRollout(ResumeRolloutRequest) returns (ResumeRolloutResponse);

  // Returns information about a single rollout
  rpc GetRollout(GetRolloutRequest) returns (GetRolloutResponse);

  // Returns information about all rollouts for a Dynamic Value
  rpc ListRollouts(ListRolloutsRequest) returns (ListRolloutsResponse);
}

// The possible states of a rollout
enum RolloutState {
  // Unspecified state
  ROLLOUT_STATE_UNSPECIFIED = 0;

  // Pending state
  ROLLOUT_STATE_PENDING = 1;

  // Started state (pending)
  ROLLOUT_STATE_STARTING = 2;

  // Started state (acknowledged)
  ROLLOUT_STATE_STARTED = 3;

  // Paused state (pending)
  ROLLOUT_STATE_PAUSING = 4;

  // Paused state (acknowledged)
  ROLLOUT_STATE_PAUSED = 5;

  // Stopped state (pending)
  ROLLOUT_STATE_STOPPING = 6;

  // Stopped state (acknowledged)
  ROLLOUT_STATE_STOPPED = 7;

  // Completed state
  ROLLOUT_STATE_COMPLETED = 8;

  // Failed state
  ROLLOUT_STATE_FAILED = 9;
}

// Contains data about a user
message UserDetails {
  // The user's name
  string name = 1;

  // The user's email
  string email = 2;
}

// Contains data about the rollout of a dynamic value
message Rollout {
  // ID of the rollout
  string id = 1;

  // ID of the dynamic value
  string dynamic_value_id = 2;

  // Name of the dynamic value
  string dynamic_value_name = 3;

  // Name of the segment rolling out
  string segment_name = 4;

  // Starting segment rollout percentage
  double segment_start_pct = 5;

  // Finishing segment rollout percentage
  double segment_finish_pct = 6;

  // Actual segment rollout percentage
  double segment_actual_pct = 7;

  // Size of each step (in %)
  int32 interval_step_size = 8;

  // Time to wait between steps (in sec)
  int32 interval_wait_time = 9;

  // True if auto-rollback is enabled
  bool enable_auto_rollback = 15;

  // Current state
  RolloutState state = 10;

  // User who created the rollout
  UserDetails creator = 11;

  // Time the rollout was created
  google.protobuf.Timestamp created_at = 12;

  // Time the rollout was updated
  google.protobuf.Timestamp updated_at = 13;

  // Scheduled start time (if scheduled)
  google.protobuf.Timestamp scheduled_start_at = 14;
}

// Request proto for `CreateRollout`
message CreateRolloutRequest {
  // ID of the dynamic value
  string dynamic_value_id = 1;

  // Segment being rolled out
  string segment_name = 2;

  // Target segment rollout percentage
  double segment_target_pct = 3;

  // Scheduled start time (null if immediate)
  google.protobuf.Timestamp scheduled_start_at = 4;

  // Size of each step (in %)
  google.protobuf.Int32Value interval_step_size = 5;

  // Time to wait between steps (in sec)
  google.protobuf.Int32Value interval_wait_time = 6;

  // True if auto-rollback is enabled
  google.protobuf.BoolValue enable_auto_rollback = 7;
}

// Response proto for `CreateRollout`
message CreateRolloutResponse {
  // Info about the rollout
  Rollout rollout = 1;
}

// Request proto for `UpdateRollout`
message UpdateRolloutRequest {
  // ID of the rollout
  string rollout_id = 1;

  // Segment being rolled out
  string segment_name = 2;

  // Target segment rollout percentage
  double segment_target_pct = 3;

  // Scheduled start time (null if immediate)
  google.protobuf.Timestamp scheduled_start_at = 4;

  // Size of each step (in %)
  google.protobuf.Int32Value interval_step_size = 5;

  // Time to wait between steps (in sec)
  google.protobuf.Int32Value interval_wait_time = 6;

  // True if auto-rollback is enabled
  google.protobuf.BoolValue enable_auto_rollback = 7;
}

// Response proto for `UpdateRollout`
message UpdateRolloutResponse {
  // Info about the rollout
  Rollout rollout = 1;
}

// Request proto for `DeleteRollout`
message DeleteRolloutRequest {
  // ID of the rollout
  string rollout_id = 1;
}

// Response proto for `DeleteRollout`
message DeleteRolloutResponse {
  // Info about the rollout
  Rollout rollout = 1;
}

// Request proto for `StartRollout`
message StartRolloutRequest {
  // ID of the rollout
  string rollout_id = 1;
}

// Response proto for `StartRollout`
message StartRolloutResponse {
  // Info about the rollout
  Rollout rollout = 1;
}

// Request proto for `GetRollout`
message GetRolloutRequest {
  // ID of the rollout
  string rollout_id = 1;
}

// Response proto for `GetRollout`
message GetRolloutResponse {
  // Info about the rollout
  Rollout rollout = 1;
}

// Request proto for `PauseRollout`
message PauseRolloutRequest {
  // ID of the rollout
  string rollout_id = 1;
}

// Response proto for `PauseRollout`
message PauseRolloutResponse {
  // Info about the rollout
  Rollout rollout = 1;
}

// Request proto for `ResumeRollout`
message ResumeRolloutRequest {
  // ID of the rollout
  string rollout_id = 1;
}

// Response proto for `ResumeRollout`
message ResumeRolloutResponse {
  // Info about the rollout
  Rollout rollout = 1;
}

// Request proto for `StopRollout`
message StopRolloutRequest {
  // ID of the rollout
  string rollout_id = 1;
}

// Response proto for `StopRollout`
message StopRolloutResponse {
  // Info about the rollout
  Rollout rollout = 1;
}

// Request proto for `ListRollouts`
message ListRolloutsRequest {
  // ID of the dynamic value
  string dynamic_value_id = 1;

  // Number of items to return per-page
  google.protobuf.Int32Value page_size = 2;

  // Starting page token
  google.protobuf.StringValue page_token = 3;
}

// Response proto for `ListRollouts`
message ListRolloutsResponse {
  // Info about the rollouts
  repeated Rollout rollouts = 1;

  // Next page of results
  google.protobuf.StringValue next_page_token = 2;
}
