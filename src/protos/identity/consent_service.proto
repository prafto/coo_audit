syntax = "proto3";
package identity_service;

import "identity/oauth.proto";

option go_package = "github.com/doordash/services-protobuf/generated/identity";
option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.identity";

/*
 * Service for getting consent history and revoking a consent
 */
service ConsentService {
  /*
   * List all the consents for a user
   *
   * Given userId and get all the Identity Clients info that the user gave consent to.
   */
  rpc ListConsents(ListConsentsRequest) returns (ListConsentsResponse);
  /*
   * Revoke a consent for user
   *
   * Given the userId and the clientId, revoke the consent
   * Response with the clientId
   */
  rpc RevokeConsent(RevokeConsentRequest) returns (RevokeConsentResponse);
  /**
   *  create consent
   */
  rpc CreateConsent(CreateConsentRequest) returns (CreateConsentResponse);
  /**
   * verify if the consent exists
   */
  rpc ValidateConsent(ValidateConsentRequest) returns (ValidateConsentResponse);
}

/*
 * The Response to Listing Consents
 * Containing a list of client info that the user granted consent to
 */
message ListConsentsResponse {
  // List of client info
  repeated Consent consents = 1;
}

/*
 * The Request for Listing All Consents for A User
 * Containing only userId
 */
message ListConsentsRequest {
  // User id for grabbing the consent history
  string user_id = 1;
}

/*
 * The Request for Revoking A Consent
 * Containing userId and clientId
 */
message RevokeConsentRequest {
  // User Id
  string user_id = 1;
  // Client Id
  string identity_client_id = 2;
}

/*
 * The Response for Revoking A Consent
 * Nothing
 */
message RevokeConsentResponse {}

/*
 * Request for create consent
 */
message CreateConsentRequest {
  // Identifier of user
  string user_id = 1;
  // Identifier of client
  string identity_client_id = 2;
}

/*
 * Response for create consent
 */
message CreateConsentResponse {
  // Oauth user consent detail
  OauthUserConsent oauth_user_consent = 1;
}

/*
 * Request for validate consent
 */
message ValidateConsentRequest {
  // Identifier of user
  string user_id = 1;
  // Identifier of client
  string identity_client_id = 2;
}

/*
 * Response for validate consent
 */
message ValidateConsentResponse {}
