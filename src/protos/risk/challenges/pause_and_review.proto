syntax = "proto3";
// buf:lint:ignore PACKAGE_SAME_DIRECTORY
// buf:lint:ignore PACKAGE_VERSION_SUFFIX
package risk.challenges;

import "risk/account.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_outer_classname = "PauseAndReviewProtos";
option java_package = "com.doordash.risk.proto.challenges";

// PauseAndReviewService
service PauseAndReviewService {
  // GetAccountStatus
  // buf:lint:ignore RPC_REQUEST_RESPONSE_UNIQUE
  rpc GetAccountStatus(GetAccountStatusRequest) returns (GetAccountStatusResponse);
}

// GetAccountStatusRequest
message GetAccountStatusRequest {
  // user_id
  UserId user_id = 1;

  // This optional field is either ACTIVE or PAUSED and will be validated at the backend.
  // If the client provides the account status from the previous call,
  // the backend can use it to determine if the account is in the REACTIVATED state.
  GetAccountStatusResponse.AccountStatus previous_account_status = 2;

  // The locale in which the consumer resides. This will be used to localize the banner content.
  string locale = 3;

  // This will be used to decide platform-specific fraud content to serve.
  TargetPlatform target_platform = 4;
}

// GetAccountStatusResponse
message GetAccountStatusResponse {
  // AccountStatus
  enum AccountStatus {
    // UNKNOWN
    // buf:lint:ignore ENUM_VALUE_PREFIX
    // buf:lint:ignore ENUM_ZERO_VALUE_SUFFIX
    UNKNOWN = 0;
    // ACTIVE
    // buf:lint:ignore ENUM_VALUE_PREFIX
    ACTIVE = 1;
    // PAUSED
    // buf:lint:ignore ENUM_VALUE_PREFIX
    PAUSED = 2;
    // DEACTIVATED
    // buf:lint:ignore ENUM_VALUE_PREFIX
    DEACTIVATED = 3;
    // This is only available when the client provides the previous_account_status in the request.
    // buf:lint:ignore ENUM_VALUE_PREFIX
    REACTIVATED = 4;
    // CARD_PAUSED
    // buf:lint:ignore ENUM_VALUE_PREFIX
    CARD_PAUSED = 5;
    // REACTIVATED_CHANGE_PAYMENT
    // buf:lint:ignore ENUM_VALUE_PREFIX
    REACTIVATED_CHANGE_PAYMENT = 6;
  }
  // account_status
  AccountStatus account_status = 1;
  // estimated_review_time_in_minutes
  int32 estimated_review_time_in_minutes = 2;
  // fraud_content
  FraudContent fraud_content = 3;
}

// TargetPlatform
enum TargetPlatform {
  // TARGET_PLATFORM_DEFAULT
  // buf:lint:ignore ENUM_VALUE_PREFIX
  // buf:lint:ignore ENUM_ZERO_VALUE_SUFFIX
  TARGET_PLATFORM_DEFAULT = 0;
  // TARGET_PLATFORM_WEB
  // buf:lint:ignore ENUM_VALUE_PREFIX
  TARGET_PLATFORM_WEB = 1;
}

// FraudContent
message FraudContent {
  // BannerType
  enum BannerType {
    // The prism style for "Highlight" which is used for the success banner in pause and review right now.
    // buf:lint:ignore ENUM_VALUE_PREFIX
    // buf:lint:ignore ENUM_ZERO_VALUE_SUFFIX
    HIGHLIGHT = 0;
    // The prism style for "Negative" which is used for all other banners we show.
    // buf:lint:ignore ENUM_VALUE_PREFIX
    NEGATIVE = 1;
    // The prism style for "Warning" which is used for the change payment banner in live card scan.
    // buf:lint:ignore ENUM_VALUE_PREFIX
    WARNING = 2;
  }

  // ButtonAction
  enum ButtonAction {
    // Take user to cart.
    // buf:lint:ignore ENUM_VALUE_PREFIX
    // buf:lint:ignore ENUM_ZERO_VALUE_SUFFIX
    NAV_CART = 0;
    // Show the paused account info screen from pause and review.
    // buf:lint:ignore ENUM_VALUE_PREFIX
    NAV_PAUSED_ACCOUNT_INFO = 1;
    // Navigate the user to the change payment method screen.
    // buf:lint:ignore ENUM_VALUE_PREFIX
    NAV_CHANGE_PAYMENT = 2;
    // Show the card paused info screen from live card scan.
    // buf:lint:ignore ENUM_VALUE_PREFIX
    NAV_PAUSED_CARD_INFO = 3;
    // NONE
    // buf:lint:ignore ENUM_VALUE_PREFIX
    NONE = 4;
    // Take user to the checkout page.
    // buf:lint:ignore ENUM_VALUE_PREFIX
    NAV_CHECKOUT = 5;
  }

  // banner_type
  BannerType banner_type = 1;
  // The title of the banner.
  string title = 2;
  // The subtitle of the banner.
  string subtitle = 3;
  // The text for the button.
  string primary_button_text = 4;
  // Action when a button is clicked.
  ButtonAction primary_button_action = 5;
}
