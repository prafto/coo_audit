syntax = "proto3";
// buf:lint:ignore PACKAGE_SAME_DIRECTORY
// buf:lint:ignore PACKAGE_VERSION_SUFFIX
package risk.workstation;

import "google/protobuf/timestamp.proto";
import "risk/account.proto";
import "risk/common.proto";
import "risk/workstation/case_study.proto";
import "risk/workstation/list.proto";

option go_package = "workstationpb";
option java_generic_services = true;
option java_multiple_files = true;
option java_outer_classname = "ReviewQueueProto";
option java_package = "com.doordash.risk.proto.workstation";

// Case
message Case {
  // id
  int32 id = 1;
  // queue_name
  string queue_name = 2;
  // case_state
  Enums.CaseState case_state = 3;
  // expiry_time
  google.protobuf.Timestamp expiry_time = 5;
  // key: field_name, value: field_value. Follows Review Queue schema
  map<string, string> case_details = 6;
  // notes
  string notes = 7;
  // updated_at
  google.protobuf.Timestamp updated_at = 8;
  // created_at
  google.protobuf.Timestamp created_at = 9;
  // entity_id
  string entity_id = 10;
}

// Review
message Review {
  // id
  int32 id = 1;
  // case_id
  int32 case_id = 2;
  // reviewer
  UserId reviewer = 3;
  // reviewer_email
  string reviewer_email = 4;
  // decision_id
  int32 decision_id = 5;
  // notes
  string notes = 6;
  // reason_id
  int32 reason_id = 7;
  // updated_at
  google.protobuf.Timestamp updated_at = 8;
  // created_at
  google.protobuf.Timestamp created_at = 9;
  // decision_uuid
  string decision_uuid = 10;
  // reason_uuid
  string reason_uuid = 11;
}

// ReviewQueue
message ReviewQueue {
  // this is the ID in the table
  string unique_name = 1;
  // display_name
  string display_name = 2;
  // queue_type
  Enums.QueueType queue_type = 3;
  // schema
  DataSchema schema = 4;
  // query
  string query = 18;
  // primary_entity_type
  Enums.EntityType primary_entity_type = 5;
  // primary_entity_column_name
  string primary_entity_column_name = 15;
  // total_case_count
  int32 total_case_count = 6;
  // unresolved_case_count
  int32 unresolved_case_count = 7;
  // sla_in_mins
  int32 sla_in_mins = 8;
  // work_source
  string work_source = 9;
  // created_by
  UserId created_by = 10;
  // created_by_email
  string created_by_email = 11;
  // description
  string description = 12;
  // updated_at
  google.protobuf.Timestamp updated_at = 13;
  // created_at
  google.protobuf.Timestamp created_at = 14;
  // default_review_decision
  int32 default_review_decision = 16;
  // default_review_reason
  int32 default_review_reason = 17;
  // team
  Enums.Team team = 19;
  // audience
  Enums.Audience audience = 20;
  // track_AHT
  // buf:lint:ignore FIELD_LOWER_SNAKE_CASE
  bool track_AHT = 21;
  // idempotency_control
  IdempotencyControl idempotency_control = 22;
  // capacity_control
  CapacityControl capacity_control = 25;
  // state
  Enums.QueueState state = 24;
  // refresh_metadata
  SqlRefreshMetadata refresh_metadata = 26;

  reserved 23;
}

// todo (Cam_J 2022-06-15): 0 should be renamed to UNSPECIFIED
enum DecisionCategory {
  // UNKNOWN
  // buf:lint:ignore ENUM_VALUE_PREFIX
  // buf:lint:ignore ENUM_ZERO_VALUE_SUFFIX
  UNKNOWN = 0;
  // APPROVED
  // buf:lint:ignore ENUM_VALUE_PREFIX
  APPROVED = 1;
  // DENIED
  // buf:lint:ignore ENUM_VALUE_PREFIX
  DENIED = 2;
  // NO_ACTION_TAKEN
  // buf:lint:ignore ENUM_VALUE_PREFIX
  NO_ACTION_TAKEN = 3;
  // NEED_FURTHER_REVIEW
  // buf:lint:ignore ENUM_VALUE_PREFIX
  NEED_FURTHER_REVIEW = 4;
  // APPROVED_WITH_WARNING
  // buf:lint:ignore ENUM_VALUE_PREFIX
  APPROVED_WITH_WARNING = 5;
  // ACCOUNT_TAKEOVER
  // buf:lint:ignore ENUM_VALUE_PREFIX
  ACCOUNT_TAKEOVER = 6;
  // DENIED_MX_1
  // buf:lint:ignore ENUM_VALUE_PREFIX
  DENIED_MX_1 = 7;
  // DENIED_MX_2
  // buf:lint:ignore ENUM_VALUE_PREFIX
  DENIED_MX_2 = 8;
  // DENIED_MX_3
  // buf:lint:ignore ENUM_VALUE_PREFIX
  DENIED_MX_3 = 9;
  // NEED_FURTHER_REVIEW_MX_1
  // buf:lint:ignore ENUM_VALUE_PREFIX
  NEED_FURTHER_REVIEW_MX_1 = 10;
  // NEED_FURTHER_REVIEW_MX_2
  // buf:lint:ignore ENUM_VALUE_PREFIX
  NEED_FURTHER_REVIEW_MX_2 = 11;
  // NEED_FURTHER_REVIEW_MX_3
  // buf:lint:ignore ENUM_VALUE_PREFIX
  NEED_FURTHER_REVIEW_MX_3 = 12;
}

// Decision
message Decision {
  // id
  int32 id = 1;
  // name
  string name = 2;
  // actions
  repeated string actions = 4;
  // queueName
  // buf:lint:ignore FIELD_LOWER_SNAKE_CASE
  string queueName = 5;
  // primary_entity_type
  Enums.EntityType primary_entity_type = 6;
  // is_active
  bool is_active = 7;
  // sort_order
  int32 sort_order = 8;
  // transition_state
  Enums.CaseState transition_state = 9;
  // decision_category
  DecisionCategory decision_category = 10;
  reserved 3;
}

// Reason
message Reason {
  // id
  int32 id = 1;
  // name
  string name = 2;
  // queue_name
  string queue_name = 4;
  // primary_entity_type
  Enums.EntityType primary_entity_type = 5;
  // is_active
  bool is_active = 6;
  // sort_order
  int32 sort_order = 7;
  // decision_category
  DecisionCategory decision_category = 8;
  reserved 3;
}

// DecisionReasonMapping
message DecisionReasonMapping {
  // decision
  Decision decision = 1;
  // reasons
  repeated Reason reasons = 2;
}

// ClaimHistoryEntry
message ClaimHistoryEntry {
  // id
  int32 id = 1;
  // claimant_id
  UserId claimant_id = 2;
  // case_id
  int32 case_id = 3;
  // claim_removed_at
  google.protobuf.Timestamp claim_removed_at = 4;
  // created_at
  google.protobuf.Timestamp created_at = 5;
  // claimant_email
  string claimant_email = 6;
}

// EntityReview
message EntityReview {
  // queue_name
  string queue_name = 1;
  // case_id
  int32 case_id = 2;
  // case_details
  map<string, string> case_details = 3;
  // caseState
  // buf:lint:ignore FIELD_LOWER_SNAKE_CASE
  Enums.CaseState caseState = 4;
  // decision_id
  int32 decision_id = 5;
  // case_created_at
  google.protobuf.Timestamp case_created_at = 6;
  // case_reviewed_at
  google.protobuf.Timestamp case_reviewed_at = 7;
  // queue_display_name
  string queue_display_name = 8;
  // reviewer_id
  string reviewer_id = 9;
  // reviewer_email
  string reviewer_email = 10;
  // decision_name
  string decision_name = 11;
  // decision_category
  DecisionCategory decision_category = 12;
  // case_expired_at
  google.protobuf.Timestamp case_expired_at = 13;
}

// IdempotencyControl
message IdempotencyControl {
  // enabled
  bool enabled = 1;
  // namespace
  string namespace = 2;
  // fields
  repeated string fields = 3;
  // ttl_in_mins
  int32 ttl_in_mins = 4;
  // no_existing_incomplete_cases
  bool no_existing_incomplete_cases = 5;
  // exemptions
  repeated string exemptions = 6;
}

// CapacityControl
message CapacityControl {
  // enabled
  bool enabled = 1;
  // time_window_in_mins
  int32 time_window_in_mins = 2;
  // exemption_column_name
  string exemption_column_name = 3;
  // exemptions
  repeated string exemptions = 4;
}

// SqlRefreshMetadata
message SqlRefreshMetadata {
  // enabled
  bool enabled = 1;
  // weeklyRuntimesPacific
  // buf:lint:ignore FIELD_LOWER_SNAKE_CASE
  repeated TimeAndDay weeklyRuntimesPacific = 2;
}

// WorkflowMetadata
message WorkflowMetadata {
  // enabled
  bool enabled = 1;
  // workflow_id
  int32 workflow_id = 2;
}

// RefreshSqlQueryLogEntry
message RefreshSqlQueryLogEntry {
  // review_queue_name
  string review_queue_name = 1;
  // num_new_rows
  int32 num_new_rows = 2;
  // num_total_rows
  int32 num_total_rows = 3;
  // status
  Status status = 4;
  // created_at
  google.protobuf.Timestamp created_at = 5;
  /* optional */
  string err_msg = 6;
  /* optional */
  string query_checksum = 7;
  // created_by
  UserId created_by = 8;
  // created_by_email
  string created_by_email = 9;
  // job_instance_uuid
  string job_instance_uuid = 10;

  // todo (Cam_J 2022-08-22): extract DataSnapshotMetadata.Status into common and use that
  enum Status {
    // UNSPECIFIED
    // buf:lint:ignore ENUM_VALUE_PREFIX
    // buf:lint:ignore ENUM_ZERO_VALUE_SUFFIX
    UNSPECIFIED = 0;
    // RUNNING
    // buf:lint:ignore ENUM_VALUE_PREFIX
    RUNNING = 1;
    // DEDUPPING
    // buf:lint:ignore ENUM_VALUE_PREFIX
    DEDUPPING = 6;
    // ADDING_CASES
    // buf:lint:ignore ENUM_VALUE_PREFIX
    ADDING_CASES = 7;
    // DONE
    // buf:lint:ignore ENUM_VALUE_PREFIX
    DONE = 2;
    // FAILED
    // buf:lint:ignore ENUM_VALUE_PREFIX
    FAILED = 3;
    // STARTED
    // buf:lint:ignore ENUM_VALUE_PREFIX
    STARTED = 4;
    // TIMEOUT
    // buf:lint:ignore ENUM_VALUE_PREFIX
    TIMEOUT = 5;
  }
}

// StringUpdate
message StringUpdate {
  // update
  bool update = 1;
  // value
  string value = 2;
}

// BoolUpdate
message BoolUpdate {
  // update
  bool update = 1;
  // value
  bool value = 2;
}

// Int32Update
message Int32Update {
  // update
  bool update = 1;
  // value
  int32 value = 2;
}

// EnumTeamUpdate
message EnumTeamUpdate {
  // update
  bool update = 1;
  // value
  Enums.Team value = 2;
}

// EnumQueueStateUpdate
message EnumQueueStateUpdate {
  // update
  bool update = 1;
  // value
  Enums.QueueState value = 2;
}

// EnumAudienceUpdate
message EnumAudienceUpdate {
  // update
  bool update = 1;
  // value
  Enums.Audience value = 2;
}
