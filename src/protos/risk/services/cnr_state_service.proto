syntax = "proto3";
// buf:lint:ignore PACKAGE_SAME_DIRECTORY
// buf:lint:ignore PACKAGE_VERSION_SUFFIX
// buf:lint:ignore DIRECTORY_SAME_PACKAGE
package risk;

import "risk/account.proto";
import "risk/common.proto";

option java_generic_services = true;
option java_multiple_files = false;
option java_outer_classname = "CnrStateServiceProtos";
option java_package = "com.doordash.risk.proto";

// CnrStateService
service CnrStateService {
  // GetCnrState
  // buf:lint:ignore RPC_REQUEST_RESPONSE_UNIQUE
  rpc GetCnrState(GetCnrStateRequest) returns (GetCnrStateResponse);
  // TemporaryPermit
  // buf:lint:ignore RPC_RESPONSE_STANDARD_NAME
  // buf:lint:ignore RPC_REQUEST_RESPONSE_UNIQUE
  rpc TemporaryPermit(TemporaryPermitRequest) returns (UpdateCnrStateResponse);
  // PermanentPermit
  // buf:lint:ignore RPC_RESPONSE_STANDARD_NAME
  // buf:lint:ignore RPC_REQUEST_RESPONSE_UNIQUE
  rpc PermanentPermit(PermanentPermitRequest) returns (UpdateCnrStateResponse);
  // TemporaryBlock
  // buf:lint:ignore RPC_RESPONSE_STANDARD_NAME
  // buf:lint:ignore RPC_REQUEST_RESPONSE_UNIQUE
  rpc TemporaryBlock(TemporaryBlockRequest) returns (UpdateCnrStateResponse);
  // GetCnrStateChangeHistory
  // buf:lint:ignore RPC_REQUEST_STANDARD_NAME
  // buf:lint:ignore RPC_RESPONSE_STANDARD_NAME
  // buf:lint:ignore RPC_REQUEST_RESPONSE_UNIQUE
  rpc GetCnrStateChangeHistory(CnrStateChangeHistoryRequest) returns (CnrStateChangeHistoryResponse);
}

// GetCnrStateRequest
message GetCnrStateRequest {
  // consumer_id
  ConsumerId consumer_id = 1;
}

// TemporaryPermitRequest
message TemporaryPermitRequest {
  // consumer_id
  ConsumerId consumer_id = 1;
  // changed_by_user_id
  UserId changed_by_user_id = 2;
  // changed_by_user_email
  string changed_by_user_email = 3;
  // reason
  string reason = 4;
}

// PermanentPermitRequest
message PermanentPermitRequest {
  // consumer_id
  ConsumerId consumer_id = 1;
  // changed_by_user_id
  UserId changed_by_user_id = 2;
  // changed_by_user_email
  string changed_by_user_email = 3;
  // reason
  string reason = 4;
}

// TemporaryBlockRequest
message TemporaryBlockRequest {
  // consumer_id
  ConsumerId consumer_id = 1;
  // changed_by_user_id
  UserId changed_by_user_id = 2;
  // changed_by_user_email
  string changed_by_user_email = 3;
  // reason
  string reason = 4;
}

// CnrStateChangeHistoryRequest
message CnrStateChangeHistoryRequest {
  // consumer_id
  ConsumerId consumer_id = 1;
}

// GetCnrStateResponse
message GetCnrStateResponse {
  // cnr_state
  CnrState cnr_state = 1;
}

// UpdateCnrStateResponse
message UpdateCnrStateResponse {
  // success
  bool success = 1;
  // error
  string error = 2;
}

// CnrStateChangeHistoryResponse
message CnrStateChangeHistoryResponse {
  // cnr_state_change_history
  repeated CnrStateChangeEvent cnr_state_change_history = 1;
}

// CnrStateChangeEvent
message CnrStateChangeEvent {
  // consumer_id
  ConsumerId consumer_id = 1;
  // changed_by_user_id
  UserId changed_by_user_id = 2;
  // changed_by_user_email
  string changed_by_user_email = 3;
  // from_state
  CnrState from_state = 4;
  // to_state
  CnrState to_state = 5;
  // created_at
  Timestamp created_at = 6;
  // reason
  string reason = 7;
}

// CnrState
enum CnrState {
  // UNKNOWN_CNR_STATE
  // buf:lint:ignore ENUM_VALUE_PREFIX
  // buf:lint:ignore ENUM_ZERO_VALUE_SUFFIX
  UNKNOWN_CNR_STATE = 0;
  // NONE
  // buf:lint:ignore ENUM_VALUE_PREFIX
  NONE = 1;
  // TEMPORARY_PERMITLIST
  // buf:lint:ignore ENUM_VALUE_PREFIX
  TEMPORARY_PERMITLIST = 2;
  // PERMANENT_PERMITLIST
  // buf:lint:ignore ENUM_VALUE_PREFIX
  PERMANENT_PERMITLIST = 3;
  // TEMPORARY_BLOCKLIST
  // buf:lint:ignore ENUM_VALUE_PREFIX
  TEMPORARY_BLOCKLIST = 4;
  // AUTOMATED_CHECK_BLOCKLIST
  // buf:lint:ignore ENUM_VALUE_PREFIX
  AUTOMATED_CHECK_BLOCKLIST = 5;
}
