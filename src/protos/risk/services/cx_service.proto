syntax = "proto3";
// buf:lint:ignore PACKAGE_SAME_DIRECTORY
// buf:lint:ignore PACKAGE_VERSION_SUFFIX
// buf:lint:ignore DIRECTORY_SAME_PACKAGE
package risk;

import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "risk/account.proto";
import "risk/cart.proto";
import "risk/common.proto";
import "risk/context.proto";
import "risk/fulfillment.proto";
import "risk/internal/sift/sift_event_response.proto";
import "risk/payment.proto";
import "risk/services/services_common.proto";

option java_generic_services = true;
option java_multiple_files = false;
option java_outer_classname = "RiskCxServiceProtos";
option java_package = "com.doordash.risk.proto";

// RiskCxService
service RiskCxService {
  // Track
  // buf:lint:ignore RPC_REQUEST_STANDARD_NAME
  // buf:lint:ignore RPC_RESPONSE_STANDARD_NAME
  // buf:lint:ignore RPC_REQUEST_RESPONSE_UNIQUE
  rpc Track(CxTrackEventRequest) returns (CxTrackEventResponse);
  // TrackCheckoutSuccess
  // buf:lint:ignore RPC_REQUEST_STANDARD_NAME
  // buf:lint:ignore RPC_RESPONSE_STANDARD_NAME
  // buf:lint:ignore RPC_REQUEST_RESPONSE_UNIQUE
  rpc TrackCheckoutSuccess(CheckoutSuccessRequest) returns (CxTrackEventResponse);
  // TrackCheckoutFailed
  // buf:lint:ignore RPC_REQUEST_STANDARD_NAME
  // buf:lint:ignore RPC_RESPONSE_STANDARD_NAME
  // buf:lint:ignore RPC_REQUEST_RESPONSE_UNIQUE
  rpc TrackCheckoutFailed(CheckoutFailedRequest) returns (CxTrackEventResponse);
}

// RiskCxDSJService
service RiskCxDSJService {
  // ScorePreCheckout
  // buf:lint:ignore RPC_REQUEST_STANDARD_NAME
  // buf:lint:ignore RPC_RESPONSE_STANDARD_NAME
  // buf:lint:ignore RPC_REQUEST_RESPONSE_UNIQUE
  rpc ScorePreCheckout(CxJudgementRequest) returns (JudgementResponse);
  // ScoreInCheckout
  // buf:lint:ignore RPC_REQUEST_STANDARD_NAME
  // buf:lint:ignore RPC_RESPONSE_STANDARD_NAME
  // buf:lint:ignore RPC_REQUEST_RESPONSE_UNIQUE
  rpc ScoreInCheckout(CxJudgementRequest) returns (JudgementResponse);
}

// CxJudgementRequest
message CxJudgementRequest {
  // request_id
  RequestId request_id = 1;
  // caller
  CallerDetails caller = 5;
  // risk_context
  RiskContext risk_context = 2;
  // timestamp
  Timestamp timestamp = 3;
  // event
  CxEvent event = 4;

  // is_shadow
  bool is_shadow = 6;
  // sift_event_response
  risk.internal.sift.SiftEventResponseProto sift_event_response = 7;
}

// ----------------------------------------------------------------------------
// Tracking Events                                                            |
// ----------------------------------------------------------------------------

// CxTrackEventRequest
message CxTrackEventRequest {
  // request_id
  RequestId request_id = 1;
  // caller
  CallerDetails caller = 2;
  // risk_context
  RiskContext risk_context = 3;
  // timestamp
  Timestamp timestamp = 4;
  // events
  repeated CxEvent events = 5;
}

// TrackEventCommonFields
message TrackEventCommonFields {
  // request_id
  RequestId request_id = 1;
  // caller
  CallerDetails caller = 2;
  // risk_context
  RiskContext risk_context = 3;
  // timestamp
  Timestamp timestamp = 4;
}

// CheckoutSuccessRequest
message CheckoutSuccessRequest {
  // common_fields
  TrackEventCommonFields common_fields = 1;
  // event
  CartCheckoutSuccess event = 2;
}

// CheckoutFailedRequest
message CheckoutFailedRequest {
  // common_fields
  TrackEventCommonFields common_fields = 1;
  // event
  CartPaymentFailed event = 2;
}

// CxTrackEventResponse
message CxTrackEventResponse {
  // request_id
  RequestId request_id = 1;
}

// CxEvent
message CxEvent {
  // payload
  oneof payload {
    // Account Events
    LoginEvent login = 1;
    // logout
    LogoutEvent logout = 2;
    // create_account
    CreateAccountEvent create_account = 3;
    // update_account
    UpdateAccountEvent update_account = 4;
    // add_consumer_persona
    AddConsumerPersonaEvent add_consumer_persona = 5;

    // Cart Events
    AddItemEvent add_item = 11;
    // update_item
    UpdateItemEvent update_item = 12;
    // remove_item
    RemoveItemEvent remove_item = 13;
    // cart_pre_checkout
    CartPreCheckout cart_pre_checkout = 14;
    // cart_in_checkout
    CartInCheckout cart_in_checkout = 15;
    // cart_payment_failed
    CartPaymentFailed cart_payment_failed = 16;
    // cart_checkout_success
    CartCheckoutSuccess cart_checkout_success = 17;
    // credit_or_refund_cart
    CreditOrRefundCartEvent credit_or_refund_cart = 18;

    // signup_dashpass
    SignUpDashPassEvent signup_dashpass = 20;
    // promo_redeemed
    PromoRedeemedEvent promo_redeemed = 21;
    // referral_redeemed
    ReferralRedeemedEvent referral_redeemed = 22;
    // dispute
    DisputeEvent dispute = 23;
    // manual_decision
    ManualDecisionEvent manual_decision = 24;
    // whitelist_user
    WhitelistUserEvent whitelist_user = 25;

    // Challenge
    // Keep the challenges in 200s. Mistake to have that first one in 26.
    SecondCardChallengeEvent second_card_challenge_event = 26;
    // mfa_challenge_event
    MFAChallengeEvent mfa_challenge_event = 200;

    // Complaint Events
    CxComplaintEvent cx_complaint = 27;

    // Keep payment related events in 50-79 next block to start at 80
    AddPaymentMethod add_payment_method = 50;
    // remove_payment_method
    RemovePaymentMethod remove_payment_method = 51;

    // Cancelled Delivery
    CancelledDeliveryEvent cancelled_delivery = 52;

    // User blocks and unblocks
    UserBlock user_block = 60;
    // user_unblock
    UserUnblock user_unblock = 61;

    // Three d secure event
    ThreeDSecureEvent three_d_secure = 62;

    // Order Lifecycle Events
    OrderLifecycleEvent order_lifecycle_event = 80;
  }
}

// LoginEvent
message LoginEvent {
  // login_success
  bool login_success = 1;
  // login_type
  string login_type = 5;
  // social_sign_on
  SocialSignOn social_sign_on = 10;
  // submit_platform
  Platform submit_platform = 11;
  // failure_reason
  string failure_reason = 12;
  // user
  User user = 13;
  // verified_mfa_channel
  VerifiedMfaChannel verified_mfa_channel = 14;
}

// LogoutEvent
message LogoutEvent {}

// OrderLifecycleEvent clones - see order_lifecycle_proto
// this is an copy of selected fields
message OrderLifecycleEvent {
  // order uuid
  string order_uuid = 1;
  // event timestamp
  google.protobuf.Timestamp timestamp = 2;
  // store id
  string store_id = 3;
  // delivery uuid
  google.protobuf.StringValue delivery_uuid = 4;
  // delivery id
  google.protobuf.StringValue delivery_id = 5;
  // business id
  google.protobuf.Int64Value business_id = 8;
  // true if is test order
  google.protobuf.BoolValue is_test = 14;
  // store order cart id
  google.protobuf.Int64Value store_order_cart_id = 16;
  // consumer id
  google.protobuf.Int64Value consumer_id = 17;
  // dasher id
  google.protobuf.Int64Value dasher_id = 18;

  // event payload
  oneof event_payload {
    // final updates success includes tip adjustments
    FinalUpdatesSuccess final_updates_success = 32;
  }

  // uncurated version of FinalUpdateSuccess
  message FinalUpdatesSuccess {
    // this is the json version of the original FinalUpdatesSuccess object
    string json_payload = 1;
  }
}

// CreateAccountEvent
message CreateAccountEvent {
  // user
  User user = 1;
  // phone_number
  PhoneNumber phone_number = 2;
  // referral
  Referral referral = 3;
  // social_sign_on
  SocialSignOn social_sign_on = 4;
  // verified_mfa_channel
  VerifiedMfaChannel verified_mfa_channel = 5;
}

// Can be triggered either by a user or an agent. If agent, the RiskContext should contain information about the
// agent ID in riskContext.userIdentity.loginAsUserId
message UpdateAccountEvent {
  // consumer_id
  ConsumerId consumer_id = 1;
  // updated_by
  UserId updated_by = 2;
  // updated_name
  google.protobuf.StringValue updated_name = 3;
  // password_changed
  google.protobuf.BoolValue password_changed = 4;
  // new_email
  google.protobuf.StringValue new_email = 5;
  // new_phone
  google.protobuf.StringValue new_phone = 6;
  // ios_device_token_created
  google.protobuf.BoolValue ios_device_token_created = 7;
  // default_card_changed
  google.protobuf.BoolValue default_card_changed = 20;
  // dasher_instructions
  google.protobuf.StringValue dasher_instructions = 21;
  // shipping_address
  Address shipping_address = 22;
  // consumer_channel_set
  google.protobuf.BoolValue consumer_channel_set = 23;
  // txn_push_enabled
  google.protobuf.BoolValue txn_push_enabled = 24;
  // txn_sms_enabled
  google.protobuf.BoolValue txn_sms_enabled = 25;
  // marketing_push_enabled
  google.protobuf.BoolValue marketing_push_enabled = 26;
  // order_bypass
  google.protobuf.BoolValue order_bypass = 27;
}

// AddConsumerPersonaEvent
message AddConsumerPersonaEvent {
  // consumer
  Consumer consumer = 1;
  // user
  User user = 2;
  // phone_number
  PhoneNumber phone_number = 3;
  // referral
  Referral referral = 4;
  // social_sign_on
  SocialSignOn social_sign_on = 5;
}

// AddPaymentMethod
message AddPaymentMethod {
  // payment_method
  PaymentMethod payment_method = 1;
  // metadata fields
  int64 cx_previous_add_ts = 250;
  // fp_previous_add_ts
  int64 fp_previous_add_ts = 251;
}

// RemovePaymentMethod
message RemovePaymentMethod {
  // payment_method
  PaymentMethod payment_method = 1;
}

// CartPreCheckout
message CartPreCheckout {
  // session_id
  SessionId session_id = 1;
  // attempt_number
  int32 attempt_number = 2;
  // cart
  Cart cart = 3;
  // is_tokenized_pay
  bool is_tokenized_pay = 4;
}

// CartInCheckout
message CartInCheckout {
  // session_id
  SessionId session_id = 1;
  // attempt_number
  int32 attempt_number = 2;
  // cart
  Cart cart = 3;
  // cart_payment_intents
  repeated CartPaymentIntent cart_payment_intents = 4;
}

// CartPaymentFailed
message CartPaymentFailed {
  // cart_id
  CartId cart_id = 1;
  // failed_payment
  CartPayment failed_payment = 2;
  // cart
  Cart cart = 3;
  // order
  Order order = 4;

  // Json serialized string of FinalizeOrderQuoteResponseV2
  string order_quote_response = 5;
  // cart_payment_intents
  repeated CartPaymentIntent cart_payment_intents = 6;
}

// InternalCartPaymentFailed
message InternalCartPaymentFailed {
  // cart_id
  CartId cart_id = 1;
  // failed_payment
  CartPayment failed_payment = 2;
  // cart
  InternalCart cart = 3;
}

// CartCheckoutSuccess
message CartCheckoutSuccess {
  // session_id
  SessionId session_id = 1;
  // attempt_number
  int32 attempt_number = 2;
  // cart_id
  CartId cart_id = 3;
  // payments
  repeated CartPayment payments = 4;
  // cart
  Cart cart = 5;
  // order
  Order order = 6;
  // is_risk_order_by_cb_rate
  bool is_risk_order_by_cb_rate = 7;

  // Json serialized string of FinalizeOrderQuoteResponseV2
  string order_quote_response = 8;
  // submitted_at
  Timestamp submitted_at = 9; // when the order was submitted
}

// SignUpDashPassEvent
message SignUpDashPassEvent {}

// AddItemEvent
message AddItemEvent {}

// UpdateItemEvent
message UpdateItemEvent {}

// RemoveItemEvent
message RemoveItemEvent {}

// SubmitCartEvent
message SubmitCartEvent {}

// TransactCartEvent
message TransactCartEvent {}

// CreditOrRefundCartEvent
message CreditOrRefundCartEvent {
  // idempotency_key
  string idempotency_key = 1;
  // id
  string id = 2;
  // consumer_id
  ConsumerId consumer_id = 3;
  // transaction_id
  string transaction_id = 4;
  // category
  string category = 10;
  // source
  string source = 11;
  // delivery_id
  string delivery_id = 20;
  // order_id
  string order_id = 21;
  // shift_id
  string shift_id = 22;
  // dasher_id
  DasherId dasher_id = 23;
  // consumer_credits
  MonetaryAmount consumer_credits = 30;
  // consumer_charge
  MonetaryAmount consumer_charge = 31;
  // consumer_refund
  MonetaryAmount consumer_refund = 32;
  // consumer_explanation
  string consumer_explanation = 40;
  // dispatch_notes
  string dispatch_notes = 41;
  // fault
  repeated string fault = 42;
  // store_charge
  MonetaryAmount store_charge = 50;
  // store_explanation
  string store_explanation = 51;
  // store_refund
  MonetaryAmount store_refund = 52;
  // dasher_explanation
  string dasher_explanation = 60;
  // dasher_penalty
  MonetaryAmount dasher_penalty = 61;
  // metadata
  string metadata = 100;
  // order_phone_number
  string order_phone_number = 101;
  // order_delivery_address_id
  string order_delivery_address_id = 102;
  // order_checkout_card_fingerprint
  string order_checkout_card_fingerprint = 103 [deprecated = true];
  // this is the cart uuid of the order
  string order_cart_id = 104;
  // order_checkout_card_fingerprints
  repeated string order_checkout_card_fingerprints = 105;
}

// PromoRedeemedEvent
message PromoRedeemedEvent {}

// ReferralRedeemedEvent
message ReferralRedeemedEvent {
  // referrerId
  // buf:lint:ignore FIELD_LOWER_SNAKE_CASE
  ConsumerId referrerId = 1;
  // refereeId
  // buf:lint:ignore FIELD_LOWER_SNAKE_CASE
  ConsumerId refereeId = 2;
  // num_referrals_redeemed
  int32 num_referrals_redeemed = 3;
  // referralId
  // buf:lint:ignore FIELD_LOWER_SNAKE_CASE
  string referralId = 4;
  // referralProgramId
  // buf:lint:ignore FIELD_LOWER_SNAKE_CASE
  string referralProgramId = 5;
}

// DisputeEvent
message DisputeEvent {
  // user_id
  UserId user_id = 1;
  // consumer_id
  ConsumerId consumer_id = 2;
  // cart_id
  CartId cart_id = 4;
  // dispute_id
  string dispute_id = 5;
  // disputed_at
  Timestamp disputed_at = 6;
  // pgp_code
  string pgp_code = 7;
  // dispute_amount
  MonetaryAmount dispute_amount = 8;
  // currency
  string currency = 9;
  // is_fraudulent
  bool is_fraudulent = 10; // to check if the CB is fraudulent
  // cart
  Cart cart = 11;
}

// ManualDecisionEvent
message ManualDecisionEvent {}

// ManualReactivationEvent
message ManualReactivationEvent {}

// WhitelistUserEvent
message WhitelistUserEvent {}

// CxComplaintEvent
message CxComplaintEvent {
  // delivery_id
  DeliveryId delivery_id = 3;
  // delivery_uuid
  string delivery_uuid = 4;
  // cart_id
  CartId cart_id = 5;
  // created_at
  Timestamp created_at = 7;
  // updated_at
  Timestamp updated_at = 8;
  // categories
  string categories = 9;
  // details
  string details = 10;
  // action_type
  string action_type = 11;
  // currency
  string currency = 12;
  // problem_resolutions
  string problem_resolutions = 13;
  // problems
  string problems = 14;
  // device_type
  string device_type = 16;
  // phone_number
  string phone_number = 17;
  // platform_type
  string platform_type = 18;
  // card_fingerprint
  string card_fingerprint = 19;
  // delivery_time
  Timestamp delivery_time = 20;
  // status_reqtype_uuid
  string status_reqtype_uuid = 21;
  // address_id
  string address_id = 22;
  // consumer_credits
  MonetaryAmount consumer_credits = 30 [deprecated = true];
  // consumer_refund
  MonetaryAmount consumer_refund = 31 [deprecated = true];
  // apology_credits
  int64 apology_credits = 32;
  // apology_credits_max
  int64 apology_credits_max = 33;
  // created_by_id
  ConsumerId created_by_id = 34;
  // credits
  int64 credits = 35;
  // dispatch_error_id
  string dispatch_error_id = 36;
  // escalation_reasons
  string escalation_reasons = 37;
  // is_allowed_redelivery
  bool is_allowed_redelivery = 38;
  // loyalty_rewards
  int64 loyalty_rewards = 39;
  // max_store_charge_till_date
  int64 max_store_charge_till_date = 40;
  // payment_action
  string payment_action = 41;
  // redelivery_id
  string redelivery_id = 42;
  // refunds
  int64 refunds = 43;
  // request_type
  string request_type = 44;
  // resolution_method
  string resolution_method = 45;
  // source
  string source = 46;
  // ebt_refund
  int64 ebt_refund = 47;
  // reward_points_refund
  int64 reward_points_refund = 48;
  // hsa_fsa_refund
  int64 hsa_fsa_refund = 49;
  // promotion_details
  string promotion_details = 50;
  // dispatch_error_ids
  string dispatch_error_ids = 51;
}

// SecondCardChallengeEvent
message SecondCardChallengeEvent {
  // user_id
  UserId user_id = 1;
  // consumer_id
  ConsumerId consumer_id = 2;
  // target_card
  CardDetails target_card = 3;
  // second_card
  CardDetails second_card = 4;
  // success
  bool success = 5;
  // error_code
  google.protobuf.StringValue error_code = 6;
  // CardDetails
  message CardDetails {
    // paymentMethod_id
    // buf:lint:ignore FIELD_LOWER_SNAKE_CASE
    google.protobuf.StringValue paymentMethod_id = 1;
    // dd_stripe_card_id
    google.protobuf.StringValue dd_stripe_card_id = 2;
    // fingerprint
    google.protobuf.StringValue fingerprint = 3;
    // country
    google.protobuf.StringValue country = 4;
    // zip
    google.protobuf.StringValue zip = 5;
    // zipCheck
    // buf:lint:ignore FIELD_LOWER_SNAKE_CASE
    google.protobuf.StringValue zipCheck = 6;
    // addressCheck
    // buf:lint:ignore FIELD_LOWER_SNAKE_CASE
    google.protobuf.StringValue addressCheck = 7;
    // bin
    google.protobuf.StringValue bin = 8;
    // last4
    google.protobuf.StringValue last4 = 9;
    // fundingType
    // buf:lint:ignore FIELD_LOWER_SNAKE_CASE
    google.protobuf.StringValue fundingType = 10;
  }
}

/**
   This is the channel for the MFA. Currently we issue MFA challenge over
   EMAIL or SMS.
*/
// MFAChannel
enum MFAChannel {
  // MFA_CHANNEL_SMS
  // buf:lint:ignore ENUM_VALUE_PREFIX
  // buf:lint:ignore ENUM_ZERO_VALUE_SUFFIX
  MFA_CHANNEL_SMS = 0;
  // MFA_CHANNEL_EMAIL
  // buf:lint:ignore ENUM_VALUE_PREFIX
  MFA_CHANNEL_EMAIL = 1;
  // MFA_CHANNEL_CALL
  // buf:lint:ignore ENUM_VALUE_PREFIX
  MFA_CHANNEL_CALL = 2;
  // MFA_CHANNEL_SILENT_VERIFICATION
  // buf:lint:ignore ENUM_VALUE_PREFIX
  MFA_CHANNEL_SILENT_VERIFICATION = 3;
  // MFA_CHANNEL_OTHER
  // buf:lint:ignore ENUM_VALUE_PREFIX
  MFA_CHANNEL_OTHER = 999;
}

/**
   The MFA challenge response
*/
// MFAChallengeEvent
message MFAChallengeEvent {
  // MFA issued for action
  google.protobuf.StringValue action = 1;
  // MFA Channel
  MFAChannel mfa_response_channel = 2;
  // email address or phone number
  google.protobuf.StringValue destination = 3;
  // Status for MFA challenge. success fail or error.
  google.protobuf.StringValue status = 4;
  // Any details about status. like error description etc.
  google.protobuf.StringValue details = 5;
  // use id
  UserId user_id = 6;
}

// CancelledDeliveryEvent
message CancelledDeliveryEvent {
  // user_id
  UserId user_id = 1;
  // consumer_id
  ConsumerId consumer_id = 2;
  // dasher_id
  DasherId dasher_id = 3;
  // cart_id
  CartId cart_id = 4;
  // delivery_id is an incremental numeric id
  DeliveryId delivery_id = 5;
  // delivery_uuid is a uuid
  DeliveryUuid delivery_uuid = 6;
  // cancel_time
  Timestamp cancel_time = 7;
  // store_id
  StoreId store_id = 13;
  // device_type
  string device_type = 8;
  // platform_type
  string platform_type = 9;
  // phone_number
  string phone_number = 10;
  // card_fingerprint
  string card_fingerprint = 11;
  // address_id
  string address_id = 12;
}

/**
 * Message used when a user is blocked.
 */
// UserBlock
message UserBlock {
  // userId
  // buf:lint:ignore FIELD_LOWER_SNAKE_CASE
  UserId userId = 1;
  // consumerId
  // buf:lint:ignore FIELD_LOWER_SNAKE_CASE
  ConsumerId consumerId = 2;
  // blocklistedBy
  // buf:lint:ignore FIELD_LOWER_SNAKE_CASE
  UserId blocklistedBy = 3;
  // reason
  google.protobuf.StringValue reason = 4;
  // deactivationSource
  // buf:lint:ignore FIELD_LOWER_SNAKE_CASE
  google.protobuf.StringValue deactivationSource = 5;
  // notes
  google.protobuf.StringValue notes = 6;
  // attributesToBlocklist
  // buf:lint:ignore FIELD_LOWER_SNAKE_CASE
  repeated google.protobuf.StringValue attributesToBlocklist = 7;
}

/**
 * Message used when a user is unblocked.
 */
// UserUnblock
message UserUnblock {
  // userId
  // buf:lint:ignore FIELD_LOWER_SNAKE_CASE
  UserId userId = 1;
  // consumerId
  // buf:lint:ignore FIELD_LOWER_SNAKE_CASE
  ConsumerId consumerId = 2;
  // unblocklistedBy
  // buf:lint:ignore FIELD_LOWER_SNAKE_CASE
  UserId unblocklistedBy = 3;
  // reason
  google.protobuf.StringValue reason = 4;
  // deactivationSource
  // buf:lint:ignore FIELD_LOWER_SNAKE_CASE
  google.protobuf.StringValue deactivationSource = 5;
  // notes
  google.protobuf.StringValue notes = 6;
}

// ThreeDSecureEvent
message ThreeDSecureEvent {
  // event_type
  google.protobuf.StringValue event_type = 1;
  // user_id
  google.protobuf.StringValue user_id = 2;
  // consumer_id
  google.protobuf.StringValue consumer_id = 3;
  // experience
  google.protobuf.StringValue experience = 4;
  // platform_type
  google.protobuf.StringValue platform_type = 5;
  // risk_context_id
  google.protobuf.StringValue risk_context_id = 6;
  // cart_id
  google.protobuf.StringValue cart_id = 7;
  // order_uuid
  google.protobuf.StringValue order_uuid = 16;

  // payment_created_at
  Timestamp payment_created_at = 8;
  // client_complete_challenge_at
  Timestamp client_complete_challenge_at = 9;
  // three_d_secure_verified_at
  Timestamp three_d_secure_verified_at = 10;

  // client_status
  google.protobuf.StringValue client_status = 11;
  // verified_status
  google.protobuf.StringValue verified_status = 12;

  // three_d_secure_version
  google.protobuf.StringValue three_d_secure_version = 13;
  // three_d_secure_stripe_result
  google.protobuf.StringValue three_d_secure_stripe_result = 14;
  // three_d_secure_stripe_result_reason
  google.protobuf.StringValue three_d_secure_stripe_result_reason = 15;

  // payment_gateway_provider
  google.protobuf.StringValue payment_gateway_provider = 17;
  // payment_gateway_resource_id
  google.protobuf.StringValue payment_gateway_resource_id = 18;
  // dd_payment_intent_id
  google.protobuf.StringValue dd_payment_intent_id = 19;
}
