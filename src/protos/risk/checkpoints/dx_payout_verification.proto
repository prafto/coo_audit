syntax = "proto3";
// buf:lint:ignore PACKAGE_SAME_DIRECTORY
// buf:lint:ignore PACKAGE_VERSION_SUFFIX
package risk.checkpoints;

import "risk/checkpoints/common/checkpoint_response.proto";
import "risk/context.proto";
import "risk/payout_common.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_outer_classname = "DxPayoutVerificationProtos";
option java_package = "com.doordash.risk.proto.checkpoints";

// DxPayoutVerificationService
service DxPayoutVerificationService {
  // Evaluate
  // buf:lint:ignore RPC_REQUEST_STANDARD_NAME
  // buf:lint:ignore RPC_RESPONSE_STANDARD_NAME
  // buf:lint:ignore RPC_REQUEST_RESPONSE_UNIQUE
  rpc Evaluate(DxPayoutVerificationRequest) returns (DxPayoutVerificationResponse);
}

// DxPayoutVerificationRequest
message DxPayoutVerificationRequest {
  // risk_context
  RiskContext risk_context = 1;
  // payout_update_flow
  PayoutFlow payout_update_flow = 2;
  // payment_account_id
  PaymentAccountId payment_account_id = 3;
  // tokens
  repeated PayoutMethodToken tokens = 4;
  // country
  string country = 5;
}

// TokenVerificationResultType
enum TokenVerificationResultType {
  // UNKNOWN_TOKEN_VERIFICATION_RESULT_TYPE
  // buf:lint:ignore ENUM_VALUE_PREFIX
  // buf:lint:ignore ENUM_ZERO_VALUE_SUFFIX
  UNKNOWN_TOKEN_VERIFICATION_RESULT_TYPE = 0;
  // MATCH
  // buf:lint:ignore ENUM_VALUE_PREFIX
  MATCH = 1;
  // MISMATCH
  // buf:lint:ignore ENUM_VALUE_PREFIX
  MISMATCH = 2;
}

// TokenVerificationResult
message TokenVerificationResult {
  // verify_token
  PayoutMethodToken verify_token = 1;
  // result
  TokenVerificationResultType result = 2;
}

// wrapper on the standard checkpoint response so we can return the list of token verify results
message DxPayoutVerificationResponse {
  // checkpoint_response
  common.CheckpointResponse checkpoint_response = 1;
  // token_verification_results
  repeated TokenVerificationResult token_verification_results = 2;
}
