syntax = "proto3";
package async_platform_callback_service.v1;

import "async_platform_callback_service.v1/callback_service.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/doordash/services-protobuf/generated/async_platform_callback_service.v1";
option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.async_platform_callback_service";

// /////////////////////////////////////
// ///      FOR INTERNAL USE ONLY    ///
// /////////////////////////////////////

// Internal protobuf message not meant to be used outside of async-platform
//   Do not use this protobuf.  As an internal-only spec, absolutely
//   NO backwards compatibility is promised here.
message InternallyTransferredEvent {
  // The time that this event was transferred internally inside Async Platform.
  //   This field will be updated every time it is transferred.
  google.protobuf.Timestamp transfer_time = 1;

  // This field indicates the desired time that the event fires by. This time
  //   should be early enough to account for any tolerances needed to meet SLO.
  //   The field adjusted_trigger_time within the event represents
  //   adjusted_trigger_time_start.  The end is useful in determining whether
  //   a solution that may take, for example, 32 seconds is adequate for
  //   a trigger time that is expected to fire 30 seconds from transfer.
  google.protobuf.Timestamp adjusted_trigger_time_end = 2;

  // This is an intermediate field used to calculate the
  //   adjusted_trigger_time_end in the case of a retry. This value is only
  //   readily available on an FE entrypoint where the cluster is known.
  float queue_jitter_usage = 4;

  // The source of truth of the event and all this event's configurations.
  // This object also contains EventSystemInfo with intermediate event data.
  Event event = 3;
}
