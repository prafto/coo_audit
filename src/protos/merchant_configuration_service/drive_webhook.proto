syntax = "proto3";

// To prevent name collision "inside" of protobuf project
// The package of the generated code will be overwritten by java_package
// buf:lint:ignore DIRECTORY_SAME_PACKAGE
package com.doordash.rpc.merchant.configuration.types.drive_webhook.v1;

import "google/protobuf/wrappers.proto";
import "merchant_configuration_service/common.proto";

// It is suggested to start package name with com.doordash.drive.grpc
// The reason is that, a message name might be conflict with a class name defined in application code,
// without the name "rpc", it would be hard to pick the correct one from the hints provided by your IDE.
option java_package = "com.doordash.rpc.merchant.configuration.types.drive_webhook";

// Managing customer communications
message DriveWebhook {
  // version of this specific config. required for create
  rpc.merchant.configuration.common.v1.Int64Optional version = 1;
  // DEPRECATED whether drive enruote webhooks are enabled
  rpc.merchant.configuration.common.v1.BoolEnum dep_is_enroute_webhook_enabled = 2;
  // DEPRECATED whether to continue to send enroute to pickup after Dx arrives at store
  rpc.merchant.configuration.common.v1.BoolEnum dep_is_enroute_webhook_enabled_after_dx_arrival_at_mx = 3;
  // DEPRECATED whether to continue to send enroute to dropoff after Dx arrives at customer
  rpc.merchant.configuration.common.v1.BoolEnum dep_is_enroute_webhook_enabled_after_dx_arrival_at_cx = 4;
  // whether drive enruote webhooks are enabled
  rpc.merchant.configuration.common.v1.BoolOptional is_enroute_webhook_enabled = 5;
  // whether to continue to send enroute to pickup after Dx arrives at store
  rpc.merchant.configuration.common.v1.BoolOptional is_enroute_webhook_enabled_after_dx_arrival_at_mx = 6;
  // whether to continue to send enroute to dropoff after Dx arrives at customer
  rpc.merchant.configuration.common.v1.BoolOptional is_enroute_webhook_enabled_after_dx_arrival_at_cx = 7;
  // whether to continue to send enroute to dropoff after Dx arrives at customer
  CadenceRetryPolicy cadence_retry_policy = 8;
  // whether recipient name are enabled in webhook
  rpc.merchant.configuration.common.v1.BoolOptional is_recipient_name_enabled_after_dx_arrival_at_cx = 9;
}

// the config for a webhook retry policy
message CadenceRetryPolicy {
  // expiration interval
  rpc.merchant.configuration.common.v1.Int64Optional expiration_interval = 1;
  // initial interval
  rpc.merchant.configuration.common.v1.Int64Optional initial_interval = 2;
  // maximum interval
  rpc.merchant.configuration.common.v1.Int64Optional maximum_interval = 3;
  // backoff coefficient
  rpc.merchant.configuration.common.v1.DoubleOptional backoff_coefficient = 4;
  // maximum attempts
  rpc.merchant.configuration.common.v1.Int64Optional maximum_attempts = 5;
}
