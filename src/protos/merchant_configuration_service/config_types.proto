syntax = "proto3";

// To prevent name collision "inside" of protobuf project
// The package of the generated code will be overwritten by java_package
// buf:lint:ignore DIRECTORY_SAME_PACKAGE
package com.doordash.rpc.merchant.configuration.types.v1;

import "google/protobuf/field_mask.proto";
import "merchant_configuration_service/cx_comms.proto";
import "merchant_configuration_service/developer_dsx.proto";
import "merchant_configuration_service/drive_dasher.proto";
import "merchant_configuration_service/drive_form.proto";
import "merchant_configuration_service/drive_fulfillment_constraints.proto";
import "merchant_configuration_service/drive_item_default_props.proto";
import "merchant_configuration_service/drive_order_rejection_constraints.proto";
import "merchant_configuration_service/drive_priority_pay.proto";
import "merchant_configuration_service/drive_sof_pay_boost.proto";
import "merchant_configuration_service/drive_webhook.proto";
import "merchant_configuration_service/lom_plugin_feature_configuration.proto";
import "merchant_configuration_service/merchant_media.proto";
import "merchant_configuration_service/merchant_user_settings.proto";
import "merchant_configuration_service/mp_provider_metadata_contacts.proto";
import "merchant_configuration_service/mp_provider_metadata_general.proto";
import "merchant_configuration_service/mp_provider_metadata_help_guides.proto";
import "merchant_configuration_service/mp_provider_metadata_inventory_feed.proto";
import "merchant_configuration_service/mp_provider_metadata_menu.proto";
import "merchant_configuration_service/mp_provider_metadata_onboarding.proto";
import "merchant_configuration_service/mp_provider_metadata_order.proto";
import "merchant_configuration_service/mp_provider_metadata_reporting_api.proto";
import "merchant_configuration_service/mp_provider_metadata_store.proto";
import "merchant_configuration_service/mx_integrations_activations.proto";
import "merchant_configuration_service/mx_integrations_menu.proto";
import "merchant_configuration_service/mx_integrations_order.proto";
import "merchant_configuration_service/mx_order_experience.proto";
import "merchant_configuration_service/parcel.proto";

// WARNING: DO NOT USE FOLDERS to contain .proto files, breaks python types

// It is suggested to start package name with com.doordash.drive.grpc
// The reason is that, a message name might be conflict with a class name defined in application code,
// without the name "rpc", it would be hard to pick the correct one from the hints provided by your IDE.
option java_package = "com.doordash.rpc.merchant.configuration.types";

// ConfigurationType enum
// WARNING: You must keep the suffix equal to field name in ConfigurationTypes
// eg: CONFIGURATION_TYPE_MX_INTEGRATIONS_ACTIVATIONS -> MX_INTEGRATIONS_ACTIVATIONS
// MX_INTEGRATIONS_ACTIVATIONS == mx_integrations_activations
// when lowercased
// any mismatch will cause writes to not apply properly
enum ConfigurationType {
  // Nothing
  CONFIGURATION_TYPE_UNSPECIFIED = 0;
  // Cx Comms
  CONFIGURATION_TYPE_CX_COMMS = 1;
  // Drive fulfillment
  CONFIGURATION_TYPE_DRIVE_FULFILLMENT_CONSTRAINTS = 2;
  // Drive webhook
  CONFIGURATION_TYPE_DRIVE_WEBHOOK = 3;
  // Drive dasher
  CONFIGURATION_TYPE_DRIVE_DASHER = 4;
  // Developer DSX
  CONFIGURATION_TYPE_DEVELOPER_DSX = 5;
  // Drive sof pay boost
  CONFIGURATION_TYPE_DRIVE_SOF_PAY_BOOST = 6;
  // Merchant portal user settings
  CONFIGURATION_TYPE_MERCHANT_USER_SETTINGS = 7;
  // Parcel config
  CONFIGURATION_TYPE_PARCEL = 8;
  // MX tablet config
  CONFIGURATION_TYPE_MX_ORDER_EXPERIENCE = 9;
  // MX Integrations team activations configs
  CONFIGURATION_TYPE_MX_INTEGRATIONS_ACTIVATIONS = 10;
  // MX Integrations team menu configs
  CONFIGURATION_TYPE_MX_INTEGRATIONS_MENU = 11;
  // MX Integrations team order configs
  CONFIGURATION_TYPE_MX_INTEGRATIONS_ORDER = 12;
  // Drive Seattle Compliance configs
  CONFIGURATION_TYPE_DRIVE_ITEM_DEFAULT_PROPS = 13;
  // Marketplace integration provider metadata - general
  CONFIGURATION_TYPE_MP_PROVIDER_METADATA_GENERAL = 14;
  // Marketplace integration provider metadata - menu
  CONFIGURATION_TYPE_MP_PROVIDER_METADATA_MENU = 15;
  // Marketplace integration provider metadata - inventory feed
  CONFIGURATION_TYPE_MP_PROVIDER_METADATA_INVENTORY_FEED = 16;
  // Marketplace integration provider metadata - onboarding
  CONFIGURATION_TYPE_MP_PROVIDER_METADATA_ONBOARDING = 17;
  // Marketplace integration provider metadata - order
  CONFIGURATION_TYPE_MP_PROVIDER_METADATA_ORDER = 18;
  // Marketplace integration provider metadata - store
  CONFIGURATION_TYPE_MP_PROVIDER_METADATA_STORE = 19;
  // Drive order rejection constraints
  CONFIGURATION_TYPE_DRIVE_ORDER_REJECTION_CONSTRAINTS = 20;
  // Drive priority pay
  CONFIGURATION_TYPE_DRIVE_PRIORITY_PAY = 21;
  // Drive Form config
  CONFIGURATION_TYPE_DRIVE_FORM = 22;
  // Live Order Management Plugin feature configuration
  CONFIGURATION_TYPE_LOM_PLUGIN_FEATURE_CONFIGURATION = 23;
  // Marketplace integration provider metadata - contacts
  CONFIGURATION_TYPE_MP_PROVIDER_METADATA_CONTACTS = 24;
  // Marketplace integration provider metadata - help guides
  CONFIGURATION_TYPE_MP_PROVIDER_METADATA_HELP_GUIDES = 25;
  // Marketplace integration provider metadata - reporting api
  CONFIGURATION_TYPE_MP_PROVIDER_METADATA_REPORTING_API = 26;
  // Merchant media configuration
  CONFIGURATION_TYPE_MERCHANT_MEDIA = 27;
}

// All configuration types
message ConfigurationTypes {
  // This field mask is used to determine the exact fields we need to create per config type.
  // This is needed when supporting clients on older versions, where types are null if not passed in.
  // It is impossible to tell whether the client wanted to null out a value, or if it's just on an older version.
  // see: https://developers.google.com/protocol-buffers/docs/reference/java/com/google/protobuf/FieldMask.html
  google.protobuf.FieldMask field_mask = 1;
  // to handle CX sms communications
  rpc.merchant.configuration.types.cx_comms.v1.CxComms cx_comms = 2;
  // to handle Drive fulfillment
  rpc.merchant.configuration.types.drive_fulfillment_constraints.v1.DriveFulfillmentConstraints drive_fulfillment_constraints = 3;
  // to handle Drive webhook
  rpc.merchant.configuration.types.drive_webhook.v1.DriveWebhook drive_webhook = 4;
  // to handle Drive dasher configurations
  rpc.merchant.configuration.types.drive_dasher.v1.DriveDasher drive_dasher = 5;
  // to handle Developer level DSX configs
  rpc.merchant.configuration.types.developer_dsx.v1.DeveloperDSX developer_dsx = 6;
  // to handle Drive sof pay boost
  rpc.merchant.configuration.types.drive_sof_pay_boost.v1.DriveSofPayBoost drive_sof_pay_boost = 7;
  // Storage for merchant portal settings for a given user
  rpc.configuration.types.merchant_user_settings.v1.MerchantUserSettings merchant_user_settings = 8;
  // Parcel config
  merchant_configuration.v1.Parcel parcel = 9;
  // MX Tablet
  merchant_configuration.mx_order_experience.v1.MxOrderExperience mx_order_experience = 10;
  // MX Integrations activations configs
  merchant_configuration.mx_integrations_activations.v1.MxIntegrationsActivations mx_integrations_activations = 11;
  // MX Integrations menu configs
  merchant_configuration.mx_integrations_menu.v1.MxIntegrationsMenu mx_integrations_menu = 12;
  // MX Integrations order configs
  merchant_configuration.mx_integrations_order.v1.MxIntegrationsOrder mx_integrations_order = 13;
  // Drive Seattle Compliance configs
  merchant_configuration.drive_item_default_props.v1.DriveItemDefaultProps drive_item_default_props = 14;
  // Marketplace integration provider metadata general info
  merchant_configuration.integration_metadata.mp_provider_metadata_general.v1.MpProviderMetadataGeneral mp_provider_metadata_general = 15;
  // Marketplace integration provider metadata menu details
  merchant_configuration.integration_metadata.mp_provider_metadata_menu.v1.MpProviderMetadataMenu mp_provider_metadata_menu = 16;
  // Marketplace integration provider metadata inventory feed details
  merchant_configuration.integration_metadata.mp_provider_metadata_inventory_feed.v1.MpProviderMetadataInventoryFeed mp_provider_metadata_inventory_feed = 17;
  // Marketplace integration provider metadata onboarding details
  merchant_configuration.integration_metadata.mp_provider_metadata_onboarding.v1.MpProviderMetadataOnboarding mp_provider_metadata_onboarding = 18;
  // Marketplace integration provider metadata order details
  merchant_configuration.integration_metadata.mp_provider_metadata_order.v1.MpProviderMetadataOrder mp_provider_metadata_order = 19;
  // Marketplace integration provider metadata store details
  merchant_configuration.integration_metadata.mp_provider_metadata_store.v1.MpProviderMetadataStore mp_provider_metadata_store = 20;
  // to handle Drive order rejection
  rpc.merchant.configuration.types.drive_order_rejection_constraints.v1.DriveOrderRejectionConstraints drive_order_rejection_constraints = 21;
  // to handle drive order priority pay
  rpc.merchant.configuration.types.drive_priority_pay.v1.DrivePriorityPay drive_priority_pay = 22;
  // drive form configurations
  rpc.merchant.configuration.types.drive_form.v1.DriveForm drive_form = 23;
  // Live Order Management Plugin feature configuration
  rpc.merchant.configuration.types.lom_plugin_feature_configuration.v1.LiveOrderManagementPluginFeatureConfig lom_plugin_feature_configuration = 24;
  // Marketplace integration provider metadata contacts
  merchant_configuration.integration_metadata.mp_provider_metadata_contacts.v1.MpProviderMetadataContacts mp_provider_metadata_contacts = 25;
  // Marketplace integration provider metadata help guides
  merchant_configuration.integration_metadata.mp_provider_metadata_help_guides.v1.MpProviderMetadataHelpGuides mp_provider_metadata_help_guides = 26;
  // Marketplace integration provider metadata reporting api
  merchant_configuration.integration_metadata.mp_provider_metadata_reporting_api.v1.MpProviderMetadataReportingApi mp_provider_metadata_reporting_api = 27;
  // Merchant media configs
  rpc.merchant.configuration.types.merchant_media.v1.MerchantMedia merchant_media = 28;
}
