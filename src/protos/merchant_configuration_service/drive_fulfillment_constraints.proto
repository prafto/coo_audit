syntax = "proto3";

// To prevent name collision "inside" of protobuf project
// The package of the generated code will be overwritten by java_package
// buf:lint:ignore DIRECTORY_SAME_PACKAGE
package com.doordash.rpc.merchant.configuration.types.drive_fulfillment_constraints.v1;

import "google/protobuf/wrappers.proto";
import "merchant_configuration_service/common.proto";

// It is suggested to start package name with com.doordash.drive.grpc
// The reason is that, a message name might be conflict with a class name defined in application code,
// without the name "rpc", it would be hard to pick the correct one from the hints provided by your IDE.
option java_package = "com.doordash.rpc.merchant.configuration.types.drive_fulfillment_constraints";

// Managing customer communications
message DriveFulfillmentConstraints {
  // version of this specific config. required for create
  rpc.merchant.configuration.common.v1.Int64Optional version = 1;
  // whether alcohol is enabled DEPRECATED in favor of alcohol_enabled
  rpc.merchant.configuration.common.v1.BoolEnum is_alcohol_enabled = 2 [deprecated = true];
  // whether OTC is enabled DEPRECATED in favor of otc_enabled
  rpc.merchant.configuration.common.v1.BoolEnum is_otc_enabled = 3 [deprecated = true];
  // whether tobacco is enabled DEPRECATED in favor of tobacco_enabled
  rpc.merchant.configuration.common.v1.BoolEnum is_tobacco_enabled = 4 [deprecated = true];
  // disable district validation
  // some MX with custom delivery contracts, parcels and other cases
  // need to have SP to district validation disabled
  rpc.merchant.configuration.common.v1.BoolOptional skip_district_validation_enabled = 5;
  // whether returns are enabled
  // note that v2 drive api developers/biz always have returns enabled. DEPRECATED do not use.
  // use finance partnership return settings instead
  rpc.merchant.configuration.common.v1.BoolOptional is_returns_enabled = 6 [deprecated = true];
  // allow bike delivery
  rpc.merchant.configuration.common.v1.BoolOptional allow_bike_delivery_enabled = 7;
  // allow dashers to fulfill orders contactless
  rpc.merchant.configuration.common.v1.BoolOptional is_contactless_delivery_enabled = 8;
  // require signatures on original delivery dropoff
  rpc.merchant.configuration.common.v1.BoolOptional is_signature_required_enabled = 9;
  // delivery window offset
  rpc.merchant.configuration.common.v1.Int64Optional delivery_window_offset = 10;
  // is ASAP order enabled
  rpc.merchant.configuration.common.v1.BoolOptional is_asap_order_enabled = 11;
  // whether alcohol is enabled
  rpc.merchant.configuration.common.v1.BoolOptional alcohol_enabled = 12;
  // whether OTC is enabled
  rpc.merchant.configuration.common.v1.BoolOptional otc_enabled = 13;
  // whether tobacco is enabled
  rpc.merchant.configuration.common.v1.BoolOptional tobacco_enabled = 14;
  // whether HIPAA compliance is required
  rpc.merchant.configuration.common.v1.BoolOptional is_hipaa_compliance_required = 15;
  // whether bad address order will be rejected has been moved to drive_order_rejection_constraints
  rpc.merchant.configuration.common.v1.BoolOptional reject_bad_address_order_enabled = 16 [deprecated = true];
  // whether cbd is enabled
  rpc.merchant.configuration.common.v1.BoolOptional cbd_enabled = 17;
  // order volume transform: transform type
  OrderVolumeTransformTypeOptional order_volume_transform_type = 18;
  // order volume transform: multiplier for the transform
  rpc.merchant.configuration.common.v1.DoubleOptional order_volume_transform_multiplier = 19;
  // pin code: Delivery rule to enable Pin codes
  PinDeliveryRuleTypeOptional pin_delivery_rule_type = 20;
  // pin code: Order Value greater than certain threshold
  rpc.merchant.configuration.common.v1.Int64Optional pin_order_value_greater_than = 21;
  // require photo on delivery original dropoff
  rpc.merchant.configuration.common.v1.BoolOptional is_photo_on_delivery_enabled = 22;
}

// order volume transform types
enum OrderVolumeTransformType {
  // unspecified transform type
  ORDER_VOLUME_TRANSFORM_TYPE_UNSPECIFIED = 0;
  // transform by order value * multiplier
  ORDER_VOLUME_TRANSFORM_TYPE_AOV_TO_VOLUME = 1;
  // transform by item_level_volume_sum * multiplier
  ORDER_VOLUME_TRANSFORM_TYPE_ITEM_LEVEL_VOLUME_SUM = 2;
  // transform by weight * multiplier
  ORDER_VOLUME_TRANSFORM_TYPE_WEIGHT_TO_VOLUME = 3;
}

// "Pin enabled for certain delivery rule" types
enum PinDeliveryRuleType {
  // unspecified Pin Delivery Rule type
  PIN_DELIVERY_RULE_TYPE_UNSPECIFIED = 0;
  // Pin required for all hitm orders
  PIN_DELIVERY_RULE_TYPE_ALL_HITM_ORDERS = 1;
  // Pin required for Pizza Experiments
  PIN_DELIVERY_RULE_TYPE_PIZZA_EXP = 2;
  // Pin required for Order value greater than certain threshold.
  PIN_DELIVERY_RULE_TYPE_ORDER_VALUE_GREATER_THAN = 3;
  // Pin is turned off
  PIN_DELIVERY_RULE_TYPE_OFF = 4;
}

// OrderVolumeTransformTypeOptional message
message OrderVolumeTransformTypeOptional {
  // "optional" is not supported with our kotlin coroutine codegen tool
  oneof value_oneof {
    // the actual value
    OrderVolumeTransformType value = 1;
  }
}

// PinDeliveryRuleTypeOptional message
message PinDeliveryRuleTypeOptional {
  // "optional" is not supported with our kotlin coroutine codegen tool
  oneof value_oneof {
    // the actual value
    PinDeliveryRuleType value = 1;
  }
}
