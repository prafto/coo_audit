syntax = "proto3";

// To prevent name collision "inside" of protobuf project
// The package of the generated code will be overwritten by java_package
// buf:lint:ignore DIRECTORY_SAME_PACKAGE
package merchant_configuration.integration_metadata.mp_provider_metadata_inventory_feed.v1;

import "google/protobuf/wrappers.proto";
import "merchant_configuration_service/common.proto";

// It is suggested to start package name with com.doordash.drive.grpc
// The reason is that, a message name might be conflict with a class name defined in application code,
// without the name "rpc", it would be hard to pick the correct one from the hints provided by your IDE.
option java_package = "com.doordash.rpc.merchant.configuration.types.integration_metadata.mp_provider_metadata_inventory_feed";

// Marketplace Integrations - provider metadata inventory feed
message MpProviderMetadataInventoryFeed {
  // version of this specific config. required for create
  com.doordash.rpc.merchant.configuration.common.v1.Int64Optional version = 1;
  // new verticals mx cohort
  NewVerticalsMxCohortList new_verticals_mx_cohort = 2;
  // order pick type
  OrderPickTypeOptional order_pick_type = 3;
  // inventory feed ingestion method
  InventoryFeedIngestionMethodOptional inventory_feed_ingestion_method = 4;
  // item count drop threshold
  google.protobuf.StringValue item_count_drop_threshold = 5;
  // is weighted items info
  com.doordash.rpc.merchant.configuration.common.v1.BoolOptional is_weighted_items_info = 6;
  // is strikethrough pricing
  com.doordash.rpc.merchant.configuration.common.v1.BoolOptional is_strikethrough_pricing = 7;
  // is store level tax rate
  com.doordash.rpc.merchant.configuration.common.v1.BoolOptional is_store_level_tax_rate = 8;
  // is snap
  com.doordash.rpc.merchant.configuration.common.v1.BoolOptional is_snap = 9;
  // is sales pricing info
  com.doordash.rpc.merchant.configuration.common.v1.BoolOptional is_sales_pricing_info = 10;
  // is retail ui supported
  com.doordash.rpc.merchant.configuration.common.v1.BoolOptional is_retail_ui_supported = 11;
  // is partial feed enabled
  com.doordash.rpc.merchant.configuration.common.v1.BoolOptional is_partial_feed_enabled = 12;
  // is last sold date
  com.doordash.rpc.merchant.configuration.common.v1.BoolOptional is_last_sold_date = 13;
  // is item availability flag
  com.doordash.rpc.merchant.configuration.common.v1.BoolOptional is_item_availability_flag = 14;
  // is conditional loyalty pricing
  com.doordash.rpc.merchant.configuration.common.v1.BoolOptional is_conditional_loyalty_pricing = 15;
  // is complex deals enable
  com.doordash.rpc.merchant.configuration.common.v1.BoolOptional is_complex_deals_enable = 16;
  // is complex deal data
  com.doordash.rpc.merchant.configuration.common.v1.BoolOptional is_complex_deal_data = 17;
  // is catalogue feed translated
  com.doordash.rpc.merchant.configuration.common.v1.BoolOptional is_catalogue_feed_translated = 18;
  // is balance on hand
  com.doordash.rpc.merchant.configuration.common.v1.BoolOptional is_balance_on_hand = 19;
  // is approx weight info
  com.doordash.rpc.merchant.configuration.common.v1.BoolOptional is_approx_weight_info = 20;
  // is alcohol item level hours
  com.doordash.rpc.merchant.configuration.common.v1.BoolOptional is_alcohol_item_level_hours = 21;
  // is aisles info
  com.doordash.rpc.merchant.configuration.common.v1.BoolOptional is_aisles_info = 22;
  // shopping protocol
  ShoppingProtocolList shopping_protocol = 23;
  // px inventory process
  google.protobuf.StringValue px_inventory_process = 24;
  // hybrid op
  HybridOpOptional hybrid_op = 25;
}

// new verticals mx cohort
enum NewVerticalsMxCohort {
  // Unspecified
  NEW_VERTICALS_MX_COHORT_UNSPECIFIED = 0;
  // Alcohol
  NEW_VERTICALS_MX_COHORT_ALCOHOL = 1;
  // Grocery
  NEW_VERTICALS_MX_COHORT_GROCERY = 2;
  // Convenience
  NEW_VERTICALS_MX_COHORT_LOCAL_MX = 3;
  // Pharmacy
  NEW_VERTICALS_MX_COHORT_PHARMACY = 4;
  // Convenience
  NEW_VERTICALS_MX_COHORT_CONVENIENCE = 5;
  // Retail
  NEW_VERTICALS_MX_COHORT_RETAIL = 6;
}

// new verticals mx cohort list
message NewVerticalsMxCohortList {
  // actual value
  repeated NewVerticalsMxCohort value = 1;
}

// order pick type enum
enum OrderPickType {
  // Unspecified
  ORDER_PICK_TYPE_UNSPECIFIED = 0;
  // DSD
  ORDER_PICK_TYPE_DSD = 1;
  // Merchant Pick
  ORDER_PICK_TYPE_MERCHANT_PICK = 2;
  // Merchant Pick Tablet
  ORDER_PICK_TYPE_MERCHANT_PICK_TABLET = 3;
  // Merchant Pick Integrated
  ORDER_PICK_TYPE_MERCHANT_PICK_INTEGRATED = 4;
  // DSD Shopper
  ORDER_PICK_TYPE_DSD_SHOPPER = 5;
  // DSD Merchant Pick Tablet
  ORDER_PICK_TYPE_DSD_MERCHANT_PICK_TABLET = 6;
}

// order pick type optional
message OrderPickTypeOptional {
  // "optional" is not supported with our kotlin coroutine codegen tool
  oneof value_oneof {
    // the actual value
    OrderPickType value = 1;
  }
}

// inventory feed ingestion method
enum InventoryFeedIngestionMethod {
  // Nothing
  INVENTORY_FEED_INGESTION_METHOD_UNSPECIFIED = 0;
  // X-Ray
  INVENTORY_FEED_INGESTION_METHOD_X_RAY = 1;
  // Webhook
  INVENTORY_FEED_INGESTION_METHOD_WEBHOOK = 2;
  // MIRDM
  INVENTORY_FEED_INGESTION_METHOD_MIRDM = 3;
}

// inventory feed ingestion method optional
message InventoryFeedIngestionMethodOptional {
  // "optional" is not supported with our kotlin coroutine codegen tool
  oneof value_oneof {
    // the actual value
    InventoryFeedIngestionMethod value = 1;
  }
}

// shopping protocol enum
enum ShoppingProtocol {
  // Unspecified
  SHOPPING_PROTOCOL_UNSPECIFIED = 0;
  // Merchant Pick
  SHOPPING_PROTOCOL_MERCHANT_PICK = 1;
  // Dasher Shop
  SHOPPING_PROTOCOL_DASHER_SHOP = 2;
  // Shopper Pick
  SHOPPING_PROTOCOL_SHOPPER_PICK = 3;
}

// shopping protocol list
message ShoppingProtocolList {
  // the actual value
  repeated ShoppingProtocol value = 1;
}

// hybrid op
enum HybridOP {
  // Unspecified
  HYBRID_OP_UNSPECIFIED = 0;
  // POS
  HYBRID_OP_POS = 1;
  // Tablet
  HYBRID_OP_TABLET = 2;
  // Check the SFDC Case
  HYBRID_OP_CHECK_THE_SFDC_CASE = 3;
}

// hybrid op optional
message HybridOpOptional {
  // "optional" is not supported with our kotlin coroutine codegen tool
  repeated HybridOP value = 1;
}
