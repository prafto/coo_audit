syntax = "proto3";

package autonomous_delivery_platform.v1;

import "autonomous_delivery_platform/common.proto";
import "doordash.api/annotations.proto";
import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.autonomous_delivery_platform.v1";

// Service that handles marketplace order ingestion [Wolt specifically for now]
service MarketplaceService {
  // Validate if an order is eligible for autonomous delivery
  rpc ValidateOrderEligibility(ValidateOrderEligibilityRequest) returns (ValidateOrderEligibilityResponse);
  // Request autonomous delivery
  rpc RequestAutonomousDelivery(RequestAutonomousDeliveryRequest) returns (RequestAutonomousDeliveryResponse);
  // Get autonomous delivery status
  rpc GetAutonomousDeliveryStatus(GetAutonomousDeliveryStatusRequest) returns (GetAutonomousDeliveryStatusResponse);
  // Cancel autonomous delivery
  rpc CancelAutonomousDelivery(CancelAutonomousDeliveryRequest) returns (CancelAutonomousDeliveryResponse);
  // Unlock cargo
  rpc UnlockAVCargo(UnlockAVCargoRequest) returns (UnlockAVCargoResponse);
  // Complete handoff
  rpc CompleteAVHandoff(CompleteAVHandoffRequest) returns (CompleteAVHandoffResponse);
}

// Request for validating if an order is eligible for autonomous delivery
message ValidateOrderEligibilityRequest {
  reserved "cart_details", "providers", "tos_accepted_providers";
  reserved 1, 5, 7;
  // Merchant details
  MerchantDetails merchant_details = 2;
  // Customer details
  CustomerDetails customer_details = 3;
  // Estimated Pick up time
  google.protobuf.Timestamp estimated_pickup_time = 4;
  // [DEPRECATED] Cart details
  CartPackageDetails cart_package_details = 6 [deprecated = true];
  // Rejected TOS for providers
  repeated Provider tos_rejected_providers = 8;
  // Latest allowed pick up time
  google.protobuf.Timestamp latest_allowed_pickup_time = 9;
  // Latest allowed dropoff time
  google.protobuf.Timestamp latest_allowed_dropoff_time = 10;
  // The candidate providers to use for the order
  repeated Provider candidate_providers = 11;
  // Objects in an order. E.g. burger, or drink would be an object
  repeated Object cart_object_details = 12;
  // If the order pickup location differs from the vehicle pickup location, this field will be populated
  google.protobuf.StringValue partner_vehicle_pickup_id = 13;
}

// Response for validating if an order is eligible for autonomous delivery
message ValidateOrderEligibilityResponse {
  reserved "is_cart_eligible", "is_merchant_address_eligible", "is_customer_dz_eligible";
  reserved 1, 2, 3;
  // Alternative dropoff coordinate for delivery zone
  Coordinate alternative_dropoff_coordinate = 4;
  // eligible provider details
  ProviderDetails provider_details = 5;
  // Is cart eligible [If cart is not passed then would be null]
  google.protobuf.BoolValue is_cart_eligible_nullable = 6;
  // Is merchant address eligible [If Mx address is not passed then would be null]
  google.protobuf.BoolValue is_merchant_address_eligible_nullable = 7;
  // Is customer delivery zone is eligible [If Cx address is not passed then would be null]
  google.protobuf.BoolValue is_customer_dz_eligible_nullable = 8;
  // Number of vehicles required to fulfill the order
  google.protobuf.Int32Value number_of_vehicles = 9;
}

// Request for request autonomous delivery
message RequestAutonomousDeliveryRequest {
  reserved "cart_details", "provider", "tos_accepted_providers";
  reserved 2, 6, 8;
  // Order details
  OrderDetails order_details = 1;
  // Merchant details
  MerchantDetails merchant_details = 3;
  // Customer details
  CustomerDetails customer_details = 4;
  // Estimated Pick up time
  google.protobuf.Timestamp estimated_pickup_time = 5;
  // [DEPRECATED] Cart details
  CartPackageDetails cart_package_details = 7 [deprecated = true];
  // Rejected TOS for providers
  repeated Provider tos_rejected_providers = 9;
  // Latest allowed pick up time
  google.protobuf.Timestamp latest_allowed_pickup_time = 10;
  // Latest acceptable dropoff time
  google.protobuf.Timestamp latest_allowed_dropoff_time = 11;
  // The candidate providers to use for the order
  repeated Provider candidate_providers = 12;
  // Objects in an order. E.g. burger, or drink would be an object
  repeated Object cart_object_details = 13;
  // If the order pickup location differs from the vehicle pickup location, this field will be populated
  google.protobuf.StringValue partner_vehicle_pickup_id = 14;
}

// Response for Request autonomous delivery
message RequestAutonomousDeliveryResponse {
  reserved "autonomous_delivery_id", "delivery_id";
  reserved 1, 4;
  // Provider used for this autonomous delivery
  ProviderDetails provider_details = 2;
  // Delivery coordinate
  Coordinate delivery_coordinate = 3;
  // Order's delivery id in the provider side
  string external_delivery_id = 5;
}

// Request for getting autonomous delivery status
message GetAutonomousDeliveryStatusRequest {
  reserved "autonomous_delivery_id";
  reserved 1;
  // marketplace Delivery id
  string delivery_id = 2;
}

// Response for getting autonomous delivery status
message GetAutonomousDeliveryStatusResponse {
  reserved "provider_details", "delivery_status", "coordinate", "delivery_failure", "delivery_id";
  reserved 1, 2, 3, 4, 6;
  // last status of vehicles used
  repeated LastVehicleStatus last_vehicle_status = 5;
  // Order's delivery id in the provider side
  string external_delivery_id = 7;
}

// last status of vehicle doing package delivery
message LastVehicleStatus {
  // provider vehicle_id
  string vehicle_id = 1;
  // Provider used for this autonomous delivery
  ProviderDetails provider_details = 2;
  // Delivery status
  DeliveryStatus delivery_status = 3;
  // Vehicle coordinate
  Coordinate coordinate = 4;
  // Delivery failure information, if delivery_status is set to FAILED /
  // UNDELIVERABLE
  DeliveryFailure.DeliveryFailureReason delivery_failure = 5;
  // Optional: Latitude of the drop off location in degrees, if not the value passed in request
  google.protobuf.DoubleValue dropoff_lat = 6;
  // Optional: Longitude of the drop off location in degrees, if not the value passed in request
  google.protobuf.DoubleValue dropoff_lng = 7;
}

// Request for canceling autonomous delivery
message CancelAutonomousDeliveryRequest {
  reserved "autonomous_delivery_id";
  reserved 1;
  // marketplace Delivery id
  string delivery_id = 2;
}

// Response for canceling autonomous delivery
message CancelAutonomousDeliveryResponse {}

// Request for unlock autonomous vehicle cargo
message UnlockAVCargoRequest {
  // marketplace Delivery id
  string delivery_id = 1;
  // Consumer id
  google.protobuf.StringValue consumer_id = 2;
  // provider vehicle id
  string vehicle_id = 3;
}

// Response for unlocking autonomous vehicle cargo
message UnlockAVCargoResponse {}

// Request to complete autonomous vehicle handoff
message CompleteAVHandoffRequest {
  // marketplace Delivery id
  string delivery_id = 1;
  // Consumer id
  google.protobuf.StringValue consumer_id = 2;
  // provider vehicle id
  string vehicle_id = 3;
}

// Response for completing autonomous vehicle handoff
message CompleteAVHandoffResponse {}
