syntax = "proto3";

package autonomous_delivery_platform.v1;

import "autonomous_delivery_platform/common.proto";
import "common/money.proto";
import "doordash.api/annotations.proto";
import "doordash.api/field_validate.proto";
import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.autonomous_delivery_platform.v1";

// Service powering https://unity.doordash.com/suites/labs-internal/adp-dashboard for debugging ADP deliveries
service AdpDashboardAPIService {
  option (doordash.api.service) = {
    name: "AdpDashboardAPIService"
    url: "autonomous-delivery-platform-portal.service.prod.ddsd"
    port: 50051
    name_spaces: ["adp-dashboard"],
    owner: {
      id: "doordash-labs-commercial-team",
      name: "adp-dashboard",
      slack_channel: "#eng-autonomous-delivery-platform",
      email_alias: "foundry-eng@doordash.com",
    }
    target_products: [INTERNAL]
  };

  // Get ADP orders
  rpc GetAdpOrders(GetAdpOrdersRequest) returns (GetAdpOrdersResponse) {
    option (google.api.http) = {
      post: "/adp-dashboard/v1/orders"
      body: "*"
    };
    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: DEV
      authorization: [DD_EMPLOYEE]
      role_based_authorization: {
        mode: ANY,
        roles: ["security-raven-managed-authorization"]
      }
      authentication_config: {enable_okta_verification: true}
    };
  }

  // Get ADP search results
  rpc GetAdpSearchResults(GetAdpSearchResultsRequest) returns (GetAdpSearchResultsResponse) {
    option (google.api.http) = {get: "/adp-dashboard/v1/search"};
    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: DEV
      authorization: [DD_EMPLOYEE]
      role_based_authorization: {
        mode: ANY,
        roles: ["security-raven-managed-authorization"]
      }
      authentication_config: {enable_okta_verification: true}
    };
  }

  // Get ADP order basic info
  rpc GetAdpOrderBasicInfo(GetAdpOrderBasicInfoRequest) returns (GetAdpOrderBasicInfoResponse) {
    option (google.api.http) = {get: "/adp-dashboard/v1/orders/{delivery_id}"};
    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: DEV
      authorization: [DD_EMPLOYEE]
      role_based_authorization: {
        mode: ANY,
        roles: ["security-raven-managed-authorization"]
      }
      authentication_config: {enable_okta_verification: true}
    };
  }

  // Get ADP order details
  rpc GetAdpOrderDetails(GetAdpOrderDetailsRequest) returns (GetAdpOrderDetailsResponse) {
    option (google.api.http) = {get: "/adp-dashboard/v1/orders/{delivery_id}/details"};
    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: DEV
      authorization: [DD_EMPLOYEE]
      role_based_authorization: {
        mode: ANY,
        roles: ["security-raven-managed-authorization"]
      }
      authentication_config: {enable_okta_verification: true}
    };
  }

  // Get ADP order timeline
  rpc GetAdpOrderTimeline(GetAdpOrderTimelineRequest) returns (GetAdpOrderTimelineResponse) {
    option (google.api.http) = {get: "/adp-dashboard/v1/orders/{delivery_id}/timeline"};
    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: DEV
      authorization: [DD_EMPLOYEE]
      role_based_authorization: {
        mode: ANY,
        roles: ["security-raven-managed-authorization"]
      }
      authentication_config: {enable_okta_verification: true}
    };
  }
}

// Request for getting ADP orders based on filters
message GetAdpOrdersRequest {
  // Page offset - default offset is 0
  google.protobuf.Int32Value offset = 1;
  // Count of orders to fetch - default count is 20
  google.protobuf.Int32Value count = 2;
  // Start time of orders time period - default is 2 days before
  google.protobuf.Timestamp start_time = 3;
  // End time of orders time period - default is now
  google.protobuf.Timestamp end_time = 4;
  // Filters for orders
  repeated AdpOrdersFilter filters = 5;
}

// ADP orders response
message GetAdpOrdersResponse {
  // list of ADP orders
  repeated AdpOrder orders = 1;
  // Count of orders with the given filters
  int32 total_count = 2;
}

// Filter for ADP orders
message AdpOrdersFilter {
  // Filter type for filtering orders
  OrdersFilterType filter_type = 1;
  // Filter value for filtering orders
  google.protobuf.StringValue filter_value = 2;
}

// Filter type for filtering orders
enum OrdersFilterType {
  // Unknown filter type
  ORDERS_FILTER_TYPE_UNSPECIFIED = 0;
  // Filter by consumer ID
  ORDERS_FILTER_TYPE_CONSUMER_ID = 1;
  // Filter by store ID
  ORDERS_FILTER_TYPE_STORE_ID = 2;
  // Filter by provider
  ORDERS_FILTER_TYPE_PROVIDER = 3;
  // Filter by order status
  ORDERS_FILTER_TYPE_STATUS = 4;
}

// ADP order
message AdpOrder {
  // Delivery ID
  string delivery_id = 1;
  // Delivery UUID
  string delivery_uuid = 2;
  // External Delivery ID
  string external_delivery_id = 3;
  // Store Info
  StoreInfo store_info = 4;
  // Provider name
  string provider_name = 5;
  // Icon URL for provider
  google.protobuf.StringValue provider_icon_url = 6;
  // Autonomous vehicle type
  AvType av_type = 7;
  // Customer name (first name and last initial)
  string customer_name = 8;
  // Customer ID
  int64 customer_id = 9;
  // Order status
  OrderStatus order_status = 10;
  // Order created time
  google.protobuf.Timestamp created_time = 11;
  // External order tracking URL
  google.protobuf.StringValue external_order_tracking_url = 12;
}

// Store info
message StoreInfo {
  // Store ID
  string store_id = 1;
  // Store name
  string store_name = 2;
  // Store image URL
  google.protobuf.StringValue store_image_url = 3;
  // Business ID
  string business_id = 4;
  // Business name
  string business_name = 5;
  // Store timezone
  string store_timezone = 6;
}

// Order status for ADP orders
enum OrderStatus {
  // Unknown order status
  ORDER_STATUS_UNSPECIFIED = 0;
  // Order is assigned to a provider
  ORDER_STATUS_ASSIGNED = 1;
  // AV heading to loading location
  ORDER_STATUS_HEADING_TO_LOADING_LOCATION = 2;
  // AV waiting to be loaded
  ORDER_STATUS_WAITING_FOR_LOAD = 3;
  // AV loaded with order and heading to dropoff location
  ORDER_STATUS_HEADING_TO_DROPOFF_LOCATION = 4;
  // AV waiting to dropoff order
  ORDER_STATUS_WAITING_FOR_DROPOFF = 5;
  // Order is delivered
  ORDER_STATUS_DELIVERY_COMPLETED = 6;
  // Order delivery failed
  ORDER_STATUS_DELIVERY_FAILED = 7;
  // Order reassigned to dasher
  ORDER_STATUS_REASSIGNED_TO_DASHER = 8;
  // Order is cancelled
  ORDER_STATUS_CANCELLED = 9;
  // Order is handled internally by provider
  ORDER_STATUS_INTERNAL_HANDOFF = 10;
  // Order is undeliverable
  ORDER_STATUS_UNDELIVERABLE = 11;
  // Order quote is validated
  ORDER_STATUS_QUOTE_VALIDATED = 12;
}

// Get ADP search results request
message GetAdpSearchResultsRequest {
  // Search query
  string search_query = 1;
}

// Get ADP search results response
message GetAdpSearchResultsResponse {
  // list of ADP search results
  repeated AdpSearchResult search_results = 1;
}

// ADP search result
message AdpSearchResult {
  // Search result type
  SearchResultType search_result_type = 1;
  // Result id (store id, consumer id, delivery id)
  string result_id = 2;
  // Store name
  google.protobuf.StringValue merchant_name = 3;
  // Consumer name
  google.protobuf.StringValue consumer_name = 4;
  // Order created time
  google.protobuf.Timestamp created_time = 5;
}

// Search result type
enum SearchResultType {
  // Unknown search result type
  SEARCH_RESULT_TYPE_UNSPECIFIED = 0;
  // Search result is a consumer
  SEARCH_RESULT_TYPE_CONSUMER = 1;
  // Search result is a merchant
  SEARCH_RESULT_TYPE_MERCHANT = 2;
  // Search result is a delivery
  SEARCH_RESULT_TYPE_DELIVERY = 3;
}

// Get ADP order basic info request
message GetAdpOrderBasicInfoRequest {
  // Delivery ID
  string delivery_id = 1;
}

// Get ADP order basic info response
message GetAdpOrderBasicInfoResponse {
  // ADP order basic info
  AdpOrder order_basic_info = 1;
}

// Get ADP order details request
message GetAdpOrderDetailsRequest {
  // Delivery ID
  string delivery_id = 1;
}

// Get ADP order details response
message GetAdpOrderDetailsResponse {
  // ADP order delivery id
  string delivery_id = 1;
  // Order items + options
  repeated AdpOrderItem order_items = 2;
}

// ADP order item
message AdpOrderItem {
  // Item name
  string item_name = 1;
  // Item quantity
  int32 item_quantity = 2;
  // Item cost in cents (for item quantity)
  money.MonetaryFields item_cost = 3;
  // Item photo URL
  google.protobuf.StringValue item_photo_url = 4;
  // Item options
  repeated AdpOrderOption item_options = 5;
}

// ADP order item option
message AdpOrderOption {
  // Option name
  string option_name = 1;
  // Option quantity
  int32 option_quantity = 2;
  // Nested options
  repeated AdpOrderOption nested_options = 3;
}

// Get ADP order timeline request
message GetAdpOrderTimelineRequest {
  // Delivery ID
  string delivery_id = 1;
}

// Get ADP order timeline response
message GetAdpOrderTimelineResponse {
  // ADP order delivery id
  string delivery_id = 1;
  // list of ADP order timeline events
  repeated AdpOrderTimelineEvent timeline_events = 2;
}

// ADP order timeline event
message AdpOrderTimelineEvent {
  // Event type
  OrderTimelineEventType event_type = 1;
  // Event time
  google.protobuf.Timestamp event_time = 2;
  // Event description
  string event_description = 3;
  // Event metadata
  repeated AdpOrderTimelineEventMetadata event_metadata = 4;
  // ADP eligibility checks
  repeated AdpEligibilityCheck adp_eligibility_checks = 21;
}

// ADP order timeline event metadata
message AdpOrderTimelineEventMetadata {
  // Metadata key
  string key = 1;
  // Metadata value
  string value = 2;
}

// ADP eligibility check
message AdpEligibilityCheck {
  // Eligibility check type
  string check_type = 1;
  // Eligibility check result
  bool check_result = 2;
}

// Order timeline event type
enum OrderTimelineEventType {
  // Unknown event type
  ORDER_TIMELINE_EVENT_TYPE_UNSPECIFIED = 0;
  // Events triggered by the user
  ORDER_TIMELINE_EVENT_TYPE_CUSTOMER = 1;
  // Events tied to the autonomous vehicle
  ORDER_TIMELINE_EVENT_TYPE_AV = 2;
  // Events tied to the merchant
  ORDER_TIMELINE_EVENT_TYPE_MERCHANT = 3;
  // Events initiated by ADP
  ORDER_TIMELINE_EVENT_TYPE_ADP = 4;
  // Events related to loader
  ORDER_TIMELINE_EVENT_TYPE_LOADER = 5;
}
