syntax = "proto3";

package autonomous_delivery_platform.v1;

import "autonomous_delivery_platform/common.proto";
import "common/common.proto";
import "doordash.api/annotations.proto";
import "doordash.api/client.proto";
import "doordash.api/field_validate.proto";
import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_outer_classname = "Service";
option java_package = "com.doordash.rpc.autonomous_delivery_platform.v1";

// Services handling partner portal requests
service PartnerPortalAPIService {
  option (doordash.api.service) = {
    name: "PartnerPortalAPIService"
    url: "autonomous-delivery-platform-portal.service.prod.ddsd"
    port: 50051
    name_spaces: ["partner-portal"]
    api_key_name: "PARTNER_PORTAL_API_KEY"
    owner: {
      id: "doordash-labs-commercial-team",
      name: "partner-portal",
      slack_channel: "#eng-autonomous-delivery-platform",
      email_alias: "foundry-eng@doordash.com",
    }
    target_products: [INTERNAL]
  };
  // Get all providers
  rpc GetProviders(GetProvidersRequest) returns (GetProvidersResponse) {
    option (google.api.http) = {get: "/partner-portal/v1/providers"};
    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: PROD
      authorization: [DD_EMPLOYEE]
      role_based_authorization: {
        mode: ANY,
        roles: ["security-raven-managed-authorization"]
      }
      authentication_config: {enable_okta_verification: true}
    };
  }

  // Get provider information
  rpc GetProvider(GetProviderRequest) returns (GetProviderResponse);

  // Update a provider
  rpc UpdateProvider(UpdateProviderRequest) returns (UpdateProviderResponse) {
    option (google.api.http) = {
      put: "/partner-portal/v1/providers/{provider_id}"
      body: "*"
    };
    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: PROD
      authorization: [DD_EMPLOYEE]
      role_based_authorization: {
        mode: ANY,
        roles: ["security-raven-managed-authorization"]
      }
      authentication_config: {enable_okta_verification: true}
    };
  }

  // Get provider details
  rpc GetProviderDetails(GetProviderDetailsRequest) returns (GetProviderDetailsResponse) {
    option (google.api.http) = {get: "/partner-portal/v1/provider-details/{provider_id}"};
    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: PROD
      authorization: [DD_EMPLOYEE]
      role_based_authorization: {
        mode: ANY,
        roles: ["security-raven-managed-authorization"]
      }
      authentication_config: {enable_okta_verification: true}
    };
  }

  // Add a new operation area
  rpc AddOperationArea(AddOperationAreaRequest) returns (AddOperationAreaResponse) {
    option (google.api.http) = {
      post: "/partner-portal/v1/operation-areas"
      body: "*"
    };
    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: PROD
      authorization: [DD_EMPLOYEE]
      role_based_authorization: {
        mode: ANY,
        roles: ["security-raven-managed-authorization"]
      }
      authentication_config: {enable_okta_verification: true}
    };
  }

  // Update an operation area
  rpc UpdateOperationArea(UpdateOperationAreaRequest) returns (UpdateOperationAreaResponse) {
    option (google.api.http) = {
      put: "/partner-portal/v1/operation-areas/{operation_area_id}"
      body: "*"
    };
    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: PROD
      authorization: [DD_EMPLOYEE]
      role_based_authorization: {
        mode: ANY,
        roles: ["security-raven-managed-authorization"]
      }
      authentication_config: {enable_okta_verification: true}
    };
  }

  // Update tags of an operation area
  rpc UpdateOperationAreaTags(UpdateOperationAreaTagsRequest) returns (UpdateOperationAreaTagsResponse) {
    option (google.api.http) = {
      put: "/partner-portal/v1/operation-areas/{operation_area_id}/tags"
      body: "*"
    };
    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: PROD
      authorization: [DD_EMPLOYEE]
      role_based_authorization: {
        mode: ANY,
        roles: ["security-raven-managed-authorization"]
      }
      authentication_config: {enable_okta_verification: true}
    };
  }

  // Update geofence of an operation area
  rpc UpdateGeofence(UpdateGeofenceRequest) returns (UpdateGeofenceResponse) {
    option (google.api.http) = {
      put: "/partner-portal/v1/operation-areas/{operation_area_id}/geofence"
      body: "*"
    };
    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: PROD
      authorization: [DD_EMPLOYEE]
      role_based_authorization: {
        mode: ANY,
        roles: ["security-raven-managed-authorization"]
      }
      authentication_config: {enable_okta_verification: true}
    };
  }

  // Add stores to an operation area
  rpc AddStoresToOperationArea(AddStoresToOperationAreaRequest) returns (AddStoresToOperationAreaResponse) {
    option (google.api.http) = {
      put: "/partner-portal/v1/operation-areas/{operation_area_id}/add-stores"
      body: "*"
    };
    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: PROD
      authorization: [DD_EMPLOYEE]
      role_based_authorization: {
        mode: ANY,
        roles: ["security-raven-managed-authorization"]
      }
      authentication_config: {enable_okta_verification: true}
    };
  }

  // Remove stores from an operation area
  rpc RemoveStoresFromOperationArea(RemoveStoresFromOperationAreaRequest) returns (RemoveStoresFromOperationAreaResponse) {
    option (google.api.http) = {
      put: "/partner-portal/v1/operation-areas/{operation_area_id}/remove-stores"
      body: "*"
    };
    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: PROD
      authorization: [DD_EMPLOYEE]
      role_based_authorization: {
        mode: ANY,
        roles: ["security-raven-managed-authorization"]
      }
      authentication_config: {enable_okta_verification: true}
    };
  }

  // Add consumers to an operation area
  rpc AddConsumersToOperationArea(AddConsumersToOperationAreaRequest) returns (AddConsumersToOperationAreaResponse) {
    option (google.api.http) = {
      put: "/partner-portal/v1/operation-areas/{operation_area_id}/add-consumers"
      body: "*"
    };
    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: PROD
      authorization: [DD_EMPLOYEE]
      role_based_authorization: {
        mode: ANY,
        roles: ["security-raven-managed-authorization"]
      }
      authentication_config: {enable_okta_verification: true}
    };
  }

  // Remove a consumer from an operation area
  rpc RemoveConsumersFromOperationArea(RemoveConsumersFromOperationAreaRequest) returns (RemoveConsumersFromOperationAreaResponse) {
    option (google.api.http) = {
      put: "/partner-portal/v1/operation-areas/{operation_area_id}/remove-consumers"
      body: "*"
    };
    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: PROD
      authorization: [DD_EMPLOYEE]
      role_based_authorization: {
        mode: ANY,
        roles: ["security-raven-managed-authorization"]
      }
      authentication_config: {enable_okta_verification: true}
    };
  }

  // Get operation area details
  rpc GetOperationAreaDetails(GetOperationAreaDetailsRequest) returns (GetOperationAreaDetailsResponse) {
    option (google.api.http) = {get: "/partner-portal/v1/operation-area-details/{operation_area_id}"};
    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: PROD
      authorization: [DD_EMPLOYEE]
      role_based_authorization: {
        mode: ANY,
        roles: ["security-raven-managed-authorization"]
      }
      authentication_config: {enable_okta_verification: true}
    };
  }

  // Get stores information
  rpc GetStores(GetStoresRequest) returns (GetStoresResponse) {
    option (google.api.http) = {get: "/partner-portal/v1/stores"};
    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: PROD
      authorization: [DD_EMPLOYEE]
      role_based_authorization: {
        mode: ANY,
        roles: ["security-raven-managed-authorization"]
      }
      authentication_config: {enable_okta_verification: true}
    };
  }

  // Get consumers information
  rpc GetConsumers(GetConsumersRequest) returns (GetConsumersResponse) {
    option (google.api.http) = {get: "/partner-portal/v1/consumers"};
    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: PROD
      authorization: [DD_EMPLOYEE]
      role_based_authorization: {
        mode: ANY,
        roles: ["security-raven-managed-authorization"]
      }
      authentication_config: {enable_okta_verification: true}
    };
  }

  // Get the opt-out av types for consumers
  rpc GetOptOutAvTypesForConsumers(GetOptOutAvTypesForConsumersRequest) returns (GetOptOutAvTypesForConsumersResponse) {
    option (google.api.http) = {get: "/partner-portal/v1/opt-out-av-types"};
    option (doordash.api.endpoint) = {
      tier: T2
      lifecycle: PROD
      authorization: [DD_EMPLOYEE]
      role_based_authorization: {
        mode: ANY,
        roles: ["security-raven-managed-authorization"]
      }
      authentication_config: {enable_okta_verification: true}
    };
  }

  // Add vehicle config
  rpc AddVehicleConfig(AddVehicleConfigRequest) returns (AddVehicleConfigResponse) {
    option (google.api.http) = {
      post: "/partner-portal/v1/vehicle-configs"
      body: "*"
    };
    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: PROD
      authorization: [DD_EMPLOYEE]
      role_based_authorization: {
        mode: ANY,
        roles: ["security-raven-managed-authorization"]
      }
      authentication_config: {enable_okta_verification: true}
    };
  }

  // Delete vehicle config
  rpc DeleteVehicleConfig(DeleteVehicleConfigRequest) returns (DeleteVehicleConfigResponse) {
    option (google.api.http) = {delete: "/partner-portal/v1/vehicle-configs/{vehicle_config_id}"};
    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: PROD
      authorization: [DD_EMPLOYEE]
      role_based_authorization: {
        mode: ANY,
        roles: ["security-raven-managed-authorization"]
      }
      authentication_config: {enable_okta_verification: true}
    };
  }

  // Update vehicle config
  rpc UpdateVehicleConfig(UpdateVehicleConfigRequest) returns (UpdateVehicleConfigResponse) {
    option (google.api.http) = {
      put: "/partner-portal/v1/vehicle-configs/{vehicle_config_id}"
      body: "*"
    };
    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: PROD
      authorization: [DD_EMPLOYEE]
      role_based_authorization: {
        mode: ANY,
        roles: ["security-raven-managed-authorization"]
      }
      authentication_config: {enable_okta_verification: true}
    };
  }

  // Get vehicle config details
  rpc GetVehicleConfigDetails(GetVehicleConfigDetailsRequest) returns (GetVehicleConfigDetailsResponse) {
    option (google.api.http) = {get: "/partner-portal/v1/vehicle-config-details/{vehicle_config_id}"};
    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: PROD
      authorization: [DD_EMPLOYEE]
      role_based_authorization: {
        mode: ANY,
        roles: ["security-raven-managed-authorization"]
      }
      authentication_config: {enable_okta_verification: true}
    };
  }

  // Update vehicle config details
  rpc UpdateVehicleConfigDetails(UpdateVehicleConfigDetailsRequest) returns (UpdateVehicleConfigDetailsResponse) {
    option (google.api.http) = {
      put: "/partner-portal/v1/vehicle-config-details/{vehicle_config_id}"
      body: "*"
    };
    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: PROD
      authorization: [DD_EMPLOYEE]
      role_based_authorization: {
        mode: ANY,
        roles: ["security-raven-managed-authorization"]
      }
      authentication_config: {enable_okta_verification: true}
    };
  }

  // Get the candidate operation areas for the order
  rpc GetOperationAreasForOrder(GetOperationAreasForOrderRequest) returns (GetOperationAreasForOrderResponse);

  // Toggle on/off vehicle config for an operation area
  rpc ToggleVehicleConfigForOperationArea(ToggleVehicleConfigForOperationAreaRequest) returns (ToggleVehicleConfigForOperationAreaResponse) {
    option (google.api.http) = {
      put: "/partner-portal/v1/operation-areas/{operation_area_id}/vehicle-configs"
      body: "*"
    };
    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: PROD
      authorization: [DD_EMPLOYEE]
      role_based_authorization: {
        mode: ANY,
        roles: ["security-raven-managed-authorization"]
      }
      authentication_config: {enable_okta_verification: true}
    };
  }

  // Request to get the candidate operation ares for store and consumer
  rpc GetOperationAreasForStoreAndConsumer(GetOperationAreasForStoreAndConsumerRequest) returns (GetOperationAreasForStoreAndConsumerResponse);

  // Request to get paginated list of stores of an operation area
  rpc GetStoresOfOperationArea(GetStoresOfOperationAreaRequest) returns (GetStoresOfOperationAreaResponse) {
    option (google.api.http) = {get: "/partner-portal/v1/operation-areas/{operation_area_id}/stores"};
    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: DEV
      authorization: [DD_EMPLOYEE]
      role_based_authorization: {
        mode: ANY,
        roles: ["security-raven-managed-authorization"]
      }
      authentication_config: {enable_okta_verification: true}
    };
  }

  // Add loaders to an operation area
  rpc AddLoadersToOperationArea(AddLoadersToOperationAreaRequest) returns (AddLoadersToOperationAreaResponse) {
    option (google.api.http) = {
      put: "/partner-portal/v1/operation-areas/{operation_area_id}/add-loaders"
      body: "*"
    };
    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: PROD
      authorization: [DD_EMPLOYEE]
      role_based_authorization: {
        mode: ANY,
        roles: ["security-raven-managed-authorization"]
      }
      authentication_config: {enable_okta_verification: true}
    };
  }

  // Remove loaders from an operation area
  rpc RemoveLoadersFromOperationArea(RemoveLoadersFromOperationAreaRequest) returns (RemoveLoadersFromOperationAreaResponse) {
    option (google.api.http) = {
      put: "/partner-portal/v1/operation-areas/{operation_area_id}/remove-loaders"
      body: "*"
    };
    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: PROD
      authorization: [DD_EMPLOYEE]
      role_based_authorization: {
        mode: ANY,
        roles: ["security-raven-managed-authorization"]
      }
      authentication_config: {enable_okta_verification: true}
    };
  }

  // Get DD users information
  rpc GetUsers(GetUsersRequest) returns (GetUsersResponse) {
    option (google.api.http) = {get: "/partner-portal/v1/users"};
    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: PROD
      authorization: [DD_EMPLOYEE]
      role_based_authorization: {
        mode: ANY,
        roles: ["security-raven-managed-authorization"]
      }
      authentication_config: {enable_okta_verification: true}
    };
  }

  // Get operation area loader flag for the users
  rpc GetOperationAreaLoaderFlagForUsers(GetOperationAreaLoaderFlagForUsersRequest) returns (GetOperationAreaLoaderFlagForUsersResponse) {
    option (google.api.http) = {get: "/partner-portal/v1/operation-areas/{operation_area_id}/loader-flags"};
    option (doordash.api.endpoint) = {
      tier: T2
      lifecycle: PROD
      authorization: [DD_EMPLOYEE]
      role_based_authorization: {
        mode: ANY,
        roles: ["security-raven-managed-authorization"]
      }
      authentication_config: {enable_okta_verification: true}
    };
  }

  // Request to get paginated list of loaders of an operation area
  rpc GetLoadersOfOperationArea(GetLoadersOfOperationAreaRequest) returns (GetLoadersOfOperationAreaResponse) {
    option (google.api.http) = {get: "/partner-portal/v1/operation-areas/{operation_area_id}/loaders"};
    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: DEV
      authorization: [DD_EMPLOYEE]
      role_based_authorization: {
        mode: ANY,
        roles: ["security-raven-managed-authorization"]
      }
      authentication_config: {enable_okta_verification: true}
    };
  }

  // Get store config
  rpc GetStoreConfig(GetStoreConfigRequest) returns (GetStoreConfigResponse) {
    option (google.api.http) = {get: "/partner-portal/v1/stores/{store_id}/config"};
    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: PROD
      authorization: [DD_EMPLOYEE]
      role_based_authorization: {
        mode: ANY,
        roles: ["security-raven-managed-authorization"]
      }
      authentication_config: {enable_okta_verification: true}
    };
  }

  // Get store's config within the provider
  rpc GetStoreProviderConfig(GetStoreProviderConfigRequest) returns (GetStoreProviderConfigResponse) {
    option (google.api.http) = {get: "/partner-portal/v1/providers/{provider_id}/store/{store_id}/config"};
    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: PROD
      authorization: [DD_EMPLOYEE]
      role_based_authorization: {
        mode: ANY,
        roles: ["security-raven-managed-authorization"]
      }
      authentication_config: {enable_okta_verification: true}
    };
  }

  // Update store settings within the provider
  rpc UpdateStoreProviderSettings(UpdateStoreProviderSettingsRequest) returns (UpdateStoreProviderSettingsResponse) {
    option (google.api.http) = {
      put: "/partner-portal/v1/providers/{provider_id}/stores/{store_id}/settings"
      body: "*"
    };
    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: PROD
      authorization: [DD_EMPLOYEE]
      role_based_authorization: {
        mode: ANY,
        roles: ["security-raven-managed-authorization"]
      }
      authentication_config: {enable_okta_verification: true}
    };
  }

  // Get provider's settings
  rpc GetProviderSettings(GetProviderSettingsRequest) returns (GetProviderSettingsResponse) {
    option (google.api.http) = {get: "/partner-portal/v1/providers/{provider_id}/settings"};
    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: PROD
      authorization: [DD_EMPLOYEE]
      role_based_authorization: {
        mode: ANY,
        roles: ["security-raven-managed-authorization"]
      }
      authentication_config: {enable_okta_verification: true}
    };
  }

  // Update the provider's settings
  rpc UpdateProviderSetting(UpdateProviderSettingRequest) returns (UpdateProviderSettingResponse) {
    option (google.api.http) = {
      put: "/partner-portal/v1/providers/{provider_id}/settings"
      body: "*"
    };
    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: PROD
      authorization: [DD_EMPLOYEE]
      role_based_authorization: {
        mode: ANY,
        roles: ["security-raven-managed-authorization"]
      }
      authentication_config: {enable_okta_verification: true}
    };
  }

  // Update the store level settings
  rpc UpdateStoreSettings(UpdateStoreSettingsRequest) returns (UpdateStoreSettingsResponse) {
    option (google.api.http) = {
      put: "/partner-portal/v1/stores/{store_id}/settings"
      body: "*"
    };
    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: PROD
      authorization: [DD_EMPLOYEE]
      role_based_authorization: {
        mode: ANY,
        roles: ["security-raven-managed-authorization"]
      }
      authentication_config: {enable_okta_verification: true}
    };
  }

  // Add consumers to opt-out list of the provider
  rpc AddConsumersToProviderOptOut(AddConsumersToProviderOptOutRequest) returns (AddConsumersToProviderOptOutResponse) {
    option deprecated = true;
    option (google.api.http) = {
      put: "/partner-portal/v1/providers/{provider_id}/add-consumers-opt-out"
      body: "*"
    };
    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: PROD
      authorization: [DD_EMPLOYEE]
      role_based_authorization: {
        mode: ANY,
        roles: ["security-raven-managed-authorization"]
      }
      authentication_config: {enable_okta_verification: true}
    };
  }

  // Remove consumer from the opt-out list of the provider [deprecated]
  rpc RemoveConsumersFromProviderOptOut(RemoveConsumersFromProviderOptOutRequest) returns (RemoveConsumersFromProviderOptOutResponse) {
    option deprecated = true;
    option (google.api.http) = {
      put: "/partner-portal/v1/providers/{provider_id}/remove-consumers-opt-out"
      body: "*"
    };
    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: PROD
      authorization: [DD_EMPLOYEE]
      role_based_authorization: {
        mode: ANY,
        roles: ["security-raven-managed-authorization"]
      }
      authentication_config: {enable_okta_verification: true}
    };
  }

  // Add consumers to av type opt out
  rpc AddConsumersToAvTypeOptOut(AddConsumersToAvTypeOptOutRequest) returns (AddConsumersToAvTypeOptOutResponse) {
    option (google.api.http) = {
      put: "/partner-portal/v1/add-consumers-av-type-opt-out"
      body: "*"
    };
    option (doordash.api.endpoint) = {
      tier: T2
      lifecycle: PROD
      authorization: [DD_EMPLOYEE]
      role_based_authorization: {
        mode: ANY,
        roles: ["security-raven-managed-authorization"]
      }
      authentication_config: {enable_okta_verification: true}
    };
  }

  // Remove consumers from the av type opt out
  rpc RemoveConsumersFromAvTypeOptOut(RemoveConsumersFromAvTypeOptOutRequest) returns (RemoveConsumersFromAvTypeOptOutResponse) {
    option (google.api.http) = {
      put: "/partner-portal/v1/remove-consumers-av-type-opt-out"
      body: "*"
    };
    option (doordash.api.endpoint) = {
      tier: T2
      lifecycle: PROD
      authorization: [DD_EMPLOYEE]
      role_based_authorization: {
        mode: ANY,
        roles: ["security-raven-managed-authorization"]
      }
      authentication_config: {enable_okta_verification: true}
    };
  }

  // Get the paginated consumer opt-out list of the provider
  rpc GetOptOutConsumersOfProvider(GetOptOutConsumersOfProviderRequest) returns (GetOptOutConsumersOfProviderResponse) {
    option (google.api.http) = {get: "/partner-portal/v1/providers/{provider_id}/opt-out-consumers"};
    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: DEV
      authorization: [DD_EMPLOYEE]
      role_based_authorization: {
        mode: ANY,
        roles: ["security-raven-managed-authorization"]
      }
      authentication_config: {enable_okta_verification: true}
    };
  }
}

// Request to get all providers
message GetProvidersRequest {}

// ADP provider/partner
message ProviderInfo {
  // Unique ID for a given provider
  string provider_id = 1;
  // Human readable name for provider
  string name = 2;
  // Icon URL for provider
  google.protobuf.StringValue icon_url = 3;
  // Number of active operating areas for the provider
  int32 num_active_operating_areas = 4;
  // Contact name
  google.protobuf.StringValue contact_name = 5;
  // Contact email
  google.protobuf.StringValue contact_email = 6;
  // Contact phone
  google.protobuf.StringValue contact_phone = 7;
  // Customer support phone number
  google.protobuf.StringValue customer_support_phone = 8;
  // Customer support email
  google.protobuf.StringValue customer_support_email = 9;
  // Customer support sms
  google.protobuf.StringValue customer_support_sms = 10;
  // Internal handoff supported or not
  bool internal_handoff_supported = 11;
  // Updated time
  google.protobuf.Timestamp updated_at = 12;
  // Created time
  google.protobuf.Timestamp created_at = 13;
}

// Response for all providers
message GetProvidersResponse {
  // Providers
  repeated ProviderInfo provider_infos = 1;
}

// Request to get provider information
message GetProviderRequest {
  // Provider id
  string provider_id = 1;
}

// Response of provider information
message GetProviderResponse {
  // Provider info
  ProviderInfo provider_info = 1;
}

// Request to update provider information
message UpdateProviderRequest {
  // Provider id
  string provider_id = 1;
  // Provider name
  string name = 2;
  // Provider icon url
  google.protobuf.StringValue icon_url = 3;
  // Contact name
  google.protobuf.StringValue contact_name = 4;
  // Contact email
  google.protobuf.StringValue contact_email = 5;
  // Contact phone
  google.protobuf.StringValue contact_phone = 6;
  // Customer support phone
  google.protobuf.StringValue customer_support_phone = 7;
  // Customer support email
  google.protobuf.StringValue customer_support_email = 8;
  // Customer support sms
  google.protobuf.StringValue customer_support_sms = 9;
  // Internal handoff supported or not
  bool internal_handoff_supported = 10;
}

// Response to update provider information
message UpdateProviderResponse {}

// Request to get provider details
message GetProviderDetailsRequest {
  // Provider id
  string provider_id = 1;
}

// Response of provider details
message GetProviderDetailsResponse {
  // Provider basic information
  ProviderInfo provider_info = 1;
  // Operations areas within the provider
  repeated OperationArea operation_areas = 2;
  // Vehicle types in the provider
  repeated VehicleConfig vehicle_configs = 3;
}

// Operation area
message OperationArea {
  // Operation area id
  string operation_area_id = 1;
  // Operation area name
  string name = 2;
  // Operation area state
  OperationAreaState state = 3;
  // Dv rollout percentage
  google.protobuf.Int32Value dv_rollout_percentage = 4;
  // Number of stores
  int32 store_count = 5;
  // Priority
  int32 priority = 6;
  // Geo fence
  repeated Coordinate geofence = 7;
  // Tags
  repeated string tags = 8;
  // Operation area is enabled or not
  bool enabled = 9;
  // Vehicle config ids selected for this operation area
  repeated string selected_vehicle_config_ids = 10;
  // Dynamic value name associated with the operation area
  google.protobuf.StringValue dynamic_value_name = 11;
}

// Operation area state
enum OperationAreaState {
  // Default
  OPERATION_AREA_STATE_UNSPECIFIED = 0;
  // Active
  OPERATION_AREA_STATE_ACTIVE = 1;
  // In-active
  OPERATION_AREA_STATE_INACTIVE = 2;
  // Allowlist only
  OPERATION_AREA_STATE_ALLOWLIST_ONLY = 3;
  // Disabled
  OPERATION_AREA_STATE_DISABLED = 4;
}

// Get operation area details request
message GetOperationAreaDetailsRequest {
  // Operation area id
  string operation_area_id = 1;
}

// Get operation area details response
message GetOperationAreaDetailsResponse {
  // Operation area id
  string operation_area_id = 1;
  // Operation area name
  string name = 2;
  // Geo fence
  repeated Coordinate geofence = 3;
  // Allowed stores in the operation area
  repeated Store allowed_stores = 4;
  // Superseding consumer allow list
  repeated ConsumerInfo superseding_allowed_consumers = 5;
  // Operation area priority within the provider
  int32 priority = 6;
  // Operation area state
  OperationAreaState state = 7;
  // Dynamic value rollout percentage
  google.protobuf.Int32Value dv_rollout_percentage = 8;
  // Dynamic value name
  google.protobuf.StringValue dynamic_value_name = 9;
  // Dynamic value url link
  google.protobuf.StringValue dynamic_value_url = 10;
  // Tags
  repeated string tags = 11;
  // Existing tags for all providers so far
  repeated string candidate_tags = 12;
  // Updated time
  google.protobuf.Timestamp updated_at = 13;
  // Created time
  google.protobuf.Timestamp created_at = 14;
  // Operation area is enabled or not
  bool enabled = 15;
  // Provider id
  string provider_id = 16;
  // Provider name
  string provider_name = 17;
  // All vehicle configs under a provider
  repeated VehicleConfig vehicle_configs = 18;
  // Vehicle config ids selected for this operation area
  repeated string selected_vehicle_config_ids = 19;
  // Partner vehicle pickup id
  google.protobuf.StringValue partner_vehicle_pickup_id = 20;
}

// Store information
message Store {
  // Store id
  int64 store_id = 1;
  // Store name
  string name = 2;
  // Store address
  common.CommonAddress address = 3;
  // Business id
  int64 business_id = 4;
  // Business name
  string business_name = 5;
  // Business image url
  google.protobuf.StringValue business_img_url = 6;
}

// Operation area store information
// Same as store above but with additional information
// such as if the store is allowed in the operation area
message OperationAreaStore {
  // Store id
  int64 store_id = 1;
  // Store name
  string name = 2;
  // Store address
  common.CommonAddress address = 3;
  // If the store is in the merchant allowlist for the operation area
  bool is_in_merchant_allowlist = 4;
  // If the store is missing some required settings
  bool is_missing_settings = 5;
}

// Consumer information
message ConsumerInfo {
  // Consumer id
  int64 consumer_id = 1;
  // Consumer name
  string name = 2;
  // Consumer email
  string email = 3;
}

// Request to add a new operation area
message AddOperationAreaRequest {
  // Provider id
  string provider_id = 1;
  // Operation area name
  string name = 2;
  // Operation area is enabled or not
  bool enabled = 3;
  // Operation area priority within the provider
  int32 priority = 4;
  // Dynamic value name
  google.protobuf.StringValue dynamic_value_name = 5;
}

// Response of adding new operation area
message AddOperationAreaResponse {
  // Operation area id
  string operation_area_id = 1;
  // Dynamic value url
  google.protobuf.StringValue dynamic_value_url = 2;
}

// Request to update operation area
message UpdateOperationAreaRequest {
  // Operation area id
  string operation_area_id = 1;
  // Operation area name
  string name = 2;
  // Operation area is enabled or not
  bool enabled = 3;
  // Operation area priority
  int32 priority = 4;
  // Dynamic value name
  google.protobuf.StringValue dynamic_value_name = 5;
  // Partner vehicle pickup id
  google.protobuf.StringValue partner_vehicle_pickup_id = 6;
}

// Response of updating operation area
message UpdateOperationAreaResponse {
  // Dynamic value url
  google.protobuf.StringValue dynamic_value_url = 1;
}

// Request to update the tags of an operation area
message UpdateOperationAreaTagsRequest {
  // Operation area id
  string operation_area_id = 1;
  // New list of tags for the area
  repeated string tags = 2;
}

// Response of updating operation area tags
message UpdateOperationAreaTagsResponse {}

// Request to update the geofence of operation area
message UpdateGeofenceRequest {
  // Operation area id
  string operation_area_id = 1;
  // Geofence coordinates
  repeated Coordinate geofence = 2;
}

// Response of updating geofence
message UpdateGeofenceResponse {}

// Request to add a new store into an operation area
message AddStoresToOperationAreaRequest {
  // Operation area id
  string operation_area_id = 1;
  // Store ids
  repeated int64 store_ids = 2;
}

// Response of adding a store to operation area
message AddStoresToOperationAreaResponse {
  // The list of stores in the operation area
  repeated Store stores = 1 [deprecated = true];
}

// Request to remove stores from operation area
message RemoveStoresFromOperationAreaRequest {
  // Operation area id
  string operation_area_id = 1;
  // Store ids
  repeated int64 store_ids = 2;
}

// Response of removing stores from operation area
message RemoveStoresFromOperationAreaResponse {
  // Allowed stores in the operation area
  repeated Store stores = 1 [deprecated = true];
}

// Request to add a consumer to operation area
message AddConsumersToOperationAreaRequest {
  // Operation area id
  string operation_area_id = 1;
  // Consumer id
  repeated int64 consumer_ids = 2;
}

// Response of adding a consumer to operation area
message AddConsumersToOperationAreaResponse {
  // Allowed consumers in the operation area
  repeated ConsumerInfo consumers = 1;
}

// Request to remove consumers from an operation area
message RemoveConsumersFromOperationAreaRequest {
  // Operation area id
  string operation_area_id = 1;
  // Consumer ids
  repeated int64 consumer_ids = 2;
}

// Response of removing consumers from operation area
message RemoveConsumersFromOperationAreaResponse {
  // Allowed consumers in the operation area
  repeated ConsumerInfo consumers = 1;
}

// Request to get stores info
message GetStoresRequest {
  // Store ids
  repeated int64 store_ids = 1;
  // [Optional] Operation area id.
  google.protobuf.StringValue operation_area_id = 2;
}

// Response of getting stores info
message GetStoresResponse {
  // Stores info, this field is returned only if operation_area_id of request is not set.
  repeated Store stores = 1;
  // Stores info with operation area allowlist flag, this field is returned only if operation_area_id of request is set.
  repeated OperationAreaStore operation_area_stores = 2;
}

// Request to get consumers info
message GetConsumersRequest {
  // Consumer ids
  repeated int64 consumer_ids = 1 [(doordash.api.client.optional) = true];
  // Consumer emails
  repeated string consumer_emails = 2 [(doordash.api.client.optional) = true];
  // [Optional] provider id
  google.protobuf.StringValue provider_id = 3 [deprecated = true];
}

// Response of getting consumers info
message GetConsumersResponse {
  // Consumers info, it is returned only if provider_id of request is not set
  repeated ConsumerInfo consumers = 1;
  // Consumers info with provider flags. It is returned only if provider_id of request is set
  repeated ProviderConsumerInfo provider_consumers = 2 [deprecated = true];
}

// Request to get the opt-out av types of consumers
message GetOptOutAvTypesForConsumersRequest {
  // Consumer ids
  repeated int64 consumer_ids = 1;
}

// Response of getting opt-out av types for consumers
message GetOptOutAvTypesForConsumersResponse {
  // Opt-out av types for a consumer
  message OptOutAvTypesForConsumer {
    // Consumer id
    int64 consumer_id = 1;
    // Opt out types
    repeated AvType opt_out_types = 2;
  }
  // Opt-out av types for consumers
  repeated OptOutAvTypesForConsumer consumers = 1;
}

// Consumer information with provider flags
// Same as ConsumerInfo above but with additional provider information
// such as if the consumer is opt-out for the provider
message ProviderConsumerInfo {
  // Consumer basic information
  ConsumerInfo consumer = 1;
  // If the consumer is opt-out for the provider
  bool is_opt_out = 2;
}

// Request of adding vehicle config
message AddVehicleConfigRequest {
  // Provider id
  string provider_id = 1;
  // Vehicle config name
  string name = 2;
  // Vehicle icon url
  google.protobuf.StringValue icon_url = 3;
  // Vehicle type
  VehicleType type = 4;
  // Does the vehicle requires loading hub
  bool requires_loading_hub = 5;
  // Average speed with mph unit
  float avg_speed = 6;
}

// Response of adding vehicle config
message AddVehicleConfigResponse {
  // Vehicle config id
  string vehicle_config_id = 1;
}

// Vehicle type
enum VehicleType {
  // Default
  VEHICLE_TYPE_UNSPECIFIED = 0;
  // Side walk
  VEHICLE_TYPE_SIDEWALK = 1;
  // Bike lane
  VEHICLE_TYPE_BIKE_LANE = 2;
}

// Request to delete a vehicle config
message DeleteVehicleConfigRequest {
  // Vehicle config id
  string vehicle_config_id = 1;
}

// Response of vehicle config deletion
message DeleteVehicleConfigResponse {}

// Request to update a vehicle config
message UpdateVehicleConfigRequest {
  // Vehicle config id
  string vehicle_config_id = 1;
  // The new vehicle config
  VehicleConfig vehicle_config = 2;
}

// Response of updating vehicle config
message UpdateVehicleConfigResponse {}

// Request to get vehicle config details
message GetVehicleConfigDetailsRequest {
  // Vehicle config id
  string vehicle_config_id = 1;
}

// Response of getting vehicle config details
message GetVehicleConfigDetailsResponse {
  // Vehicle config
  VehicleConfig vehicle_config = 1;
  // Loading instructions
  google.protobuf.StringValue loading_instructions = 2;
  // Handoff information
  Handoff handoff = 3;
  // Cargo requirements
  CargoRequirements cargo_requirements = 4;
  // Learn more information
  LearnMore learn_more = 5;
  // Provider id
  string provider_id = 6;
  // Provider name
  string provider_name = 7;
}

// Vehicle config
message VehicleConfig {
  // Vehicle config id
  string vehicle_config_id = 1;
  // Vehicle name
  string name = 2;
  // Vehicle icon url
  google.protobuf.StringValue icon_url = 3;
  // Vehicle type
  VehicleType type = 4;
  // If the vehicle requires loading hub
  bool requires_loading_hub = 5;
  // Average speed
  float avg_speed = 6;
  // Updated at
  google.protobuf.Timestamp updated_at = 7;
  // Created at
  google.protobuf.Timestamp created_at = 8;
}

// Handoff information
message Handoff {
  // Handoff type
  HandoffType handoff_type = 3;
  // Handoff solution
  HandoffSolution handoff_solution = 4;
  // Retrieval instructions
  google.protobuf.StringValue retrieval_instructions = 5;
}

// Vehicle handoff type
enum HandoffType {
  // Default
  HANDOFF_TYPE_UNSPECIFIED = 0;
  // Customer needs to interact with the vehicle
  HANDOFF_TYPE_ACTIVE = 1;
  // Customer doesn't need to interact with the vehicle
  HANDOFF_TYPE_PASSIVE = 2;
}

// Vehicle handoff solution
enum HandoffSolution {
  // Default
  HANDOFF_SOLUTION_UNSPECIFIED = 0;
  // Customer opens the vehicle based on text instructions
  HANDOFF_SOLUTION_MANUAL = 1;
  // Customer opens the vehicle by clicking a button on Cx app
  HANDOFF_SOLUTION_API = 2;
}

// Cargo requirements
message CargoRequirements {
  // Weight range lower bound
  google.protobuf.Int32Value minimum_weight = 1;
  // Weight range higher bound
  google.protobuf.Int32Value maximum_weight = 2;
  // Cargo length
  google.protobuf.Int32Value length = 3;
  // Cargo width
  google.protobuf.Int32Value width = 4;
  // Cargo height
  google.protobuf.Int32Value height = 5;
}

// Learn more information
message LearnMore {
  // Learn more item
  message LearnMoreItem {
    // Question
    string question = 1;
    // Answer
    string answer = 2;
  }
  // Learn more items
  repeated LearnMoreItem items = 1;
}

// Request to update vehicle config details
message UpdateVehicleConfigDetailsRequest {
  // Vehicle config id
  string vehicle_config_id = 1;
  // Loading instructions
  google.protobuf.StringValue loading_instructions = 2;
  // Handoff information
  Handoff handoff = 3;
  // Cargo requirements
  CargoRequirements cargo_requirements = 4;
  // Learn more information
  LearnMore learn_more = 5;
}

// Response of updating vehicle config details
message UpdateVehicleConfigDetailsResponse {}

// Request to get the operation areas fit for the order
message GetOperationAreasForOrderRequest {
  // DD order delivery id
  int64 delivery_id = 1;
  // Store id
  google.protobuf.Int64Value store_id = 2;
  // Consumer id
  google.protobuf.Int64Value consumer_id = 3;
  // Pickup coordinate
  Coordinate pickup_coordinate = 4;
  // Dropoff coordinate
  Coordinate dropoff_coordinate = 5;
}

// Response of getting operation areas fit for the order
message GetOperationAreasForOrderResponse {
  // Operation area information
  message ProviderOperationArea {
    // Provider id
    string provider_id = 1;
    // Provider name
    string provider_name = 2;
    // Operation area id
    string operation_area_id = 3;
    // Operation area name
    string operation_area_name = 4;
    // Tags related to the operation area
    repeated string tags = 5;
    // Operation area priority
    int32 priority = 6;
    // If consumer of the order is in the superseding_allowed_consumers of the operation area
    bool is_consumer_in_superseding_allowlist = 7;
    // Vehicle config ids supported in this operation area
    repeated string vehicle_config_ids = 8;
    // Partner vehicle pickup id
    google.protobuf.StringValue partner_vehicle_pickup_id = 9;
    // Geo fence
    repeated Coordinate geofence = 10;
  }
  // Candidate operation areas for the order
  repeated ProviderOperationArea operation_areas = 1;
}

// Request to toggle a vehicle config for an operation area
message ToggleVehicleConfigForOperationAreaRequest {
  // Vehicle config id
  string vehicle_config_id = 1;
  // Operation area id
  string operation_area_id = 2;
  // If the vehicle config is selected for the operation area
  bool is_selected = 3;
}

// Response of toggling a vehicle config for an operation area
message ToggleVehicleConfigForOperationAreaResponse {}

// Request to get candidate operation areas for the store and consumer
message GetOperationAreasForStoreAndConsumerRequest {
  // Store id
  int64 store_id = 1;
  // Consumer id
  int64 consumer_id = 2;
  // Pickup coordinate
  Coordinate pickup_coordinate = 3 [deprecated = true];
  // Dropoff coordinate
  Coordinate dropoff_coordinate = 4 [deprecated = true];
}

// Operation area information
message OperationAreaInfo {
  // Provider id
  string provider_id = 1;
  // Provider name
  string provider_name = 2;
  // Operation area id
  string operation_area_id = 3;
  // Operation area name
  string operation_area_name = 4;
  // Operation area priority
  int32 priority = 5;
  // If consumer is in the superseding_allowed_consumers of the operation area
  bool is_consumer_in_superseding_allowlist = 6;
  // Partner vehicle pickup id
  google.protobuf.StringValue partner_vehicle_pickup_id = 7;
  // Geo fence
  repeated Coordinate geofence = 8;
  // Vehicle config ids supported in this operation area
  repeated string vehicle_config_ids = 9;
}

// Response of getting candidate operation areas for the store and consumer
message GetOperationAreasForStoreAndConsumerResponse {
  // Candidate operation areas for the store and consumer
  repeated OperationAreaInfo operation_areas = 1;
}

// Request to get paginated list of stores of an operation area
message GetStoresOfOperationAreaRequest {
  // Operation area id
  string operation_area_id = 1;
  // Page offset - default offset is 0
  google.protobuf.Int32Value offset = 2;
  // Count of orders to fetch - default count is 20
  google.protobuf.Int32Value count = 3;
}

// Response of getting paginated list of stores
message GetStoresOfOperationAreaResponse {
  // Count of all stores in the operation area
  int32 total_count = 1;
  // Paginated list of allowed stores in the operation area
  repeated Store stores = 2;
}

// Request to add a loader to operation area
message AddLoadersToOperationAreaRequest {
  // Operation area id
  string operation_area_id = 1;
  // Loader user ids
  repeated string user_ids = 2;
}

// Response of adding a loader to operation area
message AddLoadersToOperationAreaResponse {}

// Request to remove loaders from an operation area
message RemoveLoadersFromOperationAreaRequest {
  // Operation area id
  string operation_area_id = 1;
  // Loader user ids
  repeated string user_ids = 2;
}

// Response of removing loaders from an operation area
message RemoveLoadersFromOperationAreaResponse {}

// Request to get users info
message GetUsersRequest {
  // User ids
  repeated int64 user_ids = 1 [(doordash.api.client.optional) = true];
  // User emails
  repeated string user_emails = 2 [(doordash.api.client.optional) = true];
  // [Optional] Operation area id
  google.protobuf.StringValue operation_area_id = 3 [deprecated = true];
}

// DD user basic information
message UserInfo {
  // User id
  int64 user_id = 1;
  // User name
  string name = 2;
  // User email
  string email = 3;
}

// Response of users info
message GetUsersResponse {
  // DD user information. It is returned only if operation_area_id of request is not set
  repeated UserInfo users = 1;
  // DD user information plus the operation area flags. It is returned only if operation_area_id of request is set
  repeated OperationAreaUser operation_area_users = 2 [deprecated = true];
}

// Request to get the operation area loader flag for the users
message GetOperationAreaLoaderFlagForUsersRequest {
  // Operation area id
  string operation_area_id = 1;
  // User ids
  repeated int64 user_ids = 2;
}

// Response of the operation area loader flag for the users
message GetOperationAreaLoaderFlagForUsersResponse {
  // Message to denote if a user is a loader of the operation area
  message OperationAreaLoaderFlag {
    // User id
    int64 user_id = 1;
    // If the user is the loader for the operation area
    bool is_loader = 2;
  }
  // Loader flag of users
  repeated OperationAreaLoaderFlag users = 1;
}

// Operation area user information
message OperationAreaUser {
  // User basic information
  UserInfo user = 1;
  // If the user is the loader for the operation area
  bool is_loader = 2;
}

// Request to get paginated list of loaders of an operation area
message GetLoadersOfOperationAreaRequest {
  // Operation area id
  string operation_area_id = 1;
  // Page offset - default offset is 0
  google.protobuf.Int32Value offset = 2;
  // Count of orders to fetch - default count is 20
  google.protobuf.Int32Value count = 3;
}

// Response of getting paginated list of loaders
message GetLoadersOfOperationAreaResponse {
  // Count of all loaders in the operation area
  int32 total_count = 1;
  // Paginated list of allowed loaders in the operation area
  repeated UserInfo loaders = 2;
}

// Request to get store config
message GetStoreConfigRequest {
  // Store id
  int64 store_id = 1;
}

// Basic information of an provider
message ProviderBasicInfo {
  // Unique ID for a given provider
  string provider_id = 1;
  // Human readable name for provider
  string name = 2;
  // Icon URL for provider
  google.protobuf.StringValue icon_url = 3;
}

// Response of getting store config
message GetStoreConfigResponse {
  // Basic store info
  Store store = 1;
  // Providers enabled for store
  repeated ProviderBasicInfo providers = 2;
  // List of store level override settings
  repeated Setting store_settings = 3;
  // List of default store level settings
  repeated Setting store_default_settings = 4;
}

// Request to get store's provider level config
message GetStoreProviderConfigRequest {
  // Store id
  int64 store_id = 1;
  // Unique ID for a given provider
  string provider_id = 2;
}

// Setting value
message SettingValue {
  // Integer value of the setting
  google.protobuf.Int64Value int_value = 1;
  // String value of the setting
  google.protobuf.StringValue string_value = 2;
  // Boolean value of the setting
  google.protobuf.BoolValue boolean_value = 3;
  // Float value of the setting
  google.protobuf.FloatValue float_value = 4;
  // Map points value of the setting
  repeated MapPoint map_points_value = 5 [(doordash.api.client.optional) = true];
}

// Setting value type
enum SettingValueType {
  // UNSPECIFIED
  SETTING_VALUE_TYPE_UNSPECIFIED = 0;
  // Long type
  SETTING_VALUE_TYPE_LONG = 1;
  // String type
  SETTING_VALUE_TYPE_STRING = 2;
  // Boolean type
  SETTING_VALUE_TYPE_BOOL = 3;
  // Float type
  SETTING_VALUE_TYPE_FLOAT = 4;
  // Select option type
  SETTING_VALUE_TYPE_SELECT_OPTIONS = 5;
  // Map Points type
  SETTING_VALUE_TYPE_MAP_POINTS = 6;
}

// Map point coordinate and metadata
// Keep object flat (not nested) to streamline web de-serialization
message MapPoint {
  // Id
  google.protobuf.StringValue id = 1 [(doordash.api.client.optional) = false];
  // Name
  google.protobuf.StringValue name = 2;
  // Annotation
  google.protobuf.StringValue annotation = 3;
  // Priority
  int32 priority = 4;
  // Latitude
  double latitude = 5;
  // Longitude
  double longitude = 6;
  // List of Providers (as String values) associated with the map point
  repeated google.protobuf.StringValue providers = 7;
  // List of Av Types (as String values) associated with the map point
  repeated google.protobuf.StringValue av_types = 8;
  // Input source of point
  google.protobuf.StringValue source = 9;
}

// Settings
message Setting {
  // Select option for multiselect settings
  message SettingSelectOption {
    // Name to be displayed on the client for this option
    string display_name = 1;
    // Value to be used for this option if selected
    string value = 2;
  }
  // Setting key that uniquely identifies this setting
  string setting_key = 1;
  // Setting value
  SettingValue setting_value = 2;
  // Settings title to be displayed in internal dashboard
  string title = 3;
  // Settings descrption to be displayed in internal dashboard
  string description = 4;
  // Optional prefix
  google.protobuf.StringValue prefix = 5;
  // Optional suffix, such as '%' or 'g'
  google.protobuf.StringValue suffix = 6;
  // List of elect options for multiselect settings
  repeated SettingSelectOption select_options = 7;
  // Optional validation regex for strings
  google.protobuf.StringValue string_validation_regex = 8;
  // Setting value type
  SettingValueType setting_value_type = 9;
  // If the setting is required
  bool is_required = 10;
}

// Operation area basic information
message OperationAreaBasicInfo {
  // Operation area id
  string operation_area_id = 1;
  // Operation area name
  string name = 2;
  // Operation area state
  OperationAreaState state = 3;
  // Dv rollout percentage
  google.protobuf.Int32Value dv_rollout_percentage = 4;
}

// Response of store's config within the provider
message GetStoreProviderConfigResponse {
  reserved 2;
  reserved "operation_areas";
  // List of store settings within the provider
  repeated Setting settings = 1;
  // List of default store settings for the provider
  repeated Setting provider_default_settings = 3;
  // List of operation areas covering this store within the provider
  repeated OperationAreaBasicInfo operation_areas_info = 4;
  // Store basic information
  Store store_info = 5;
  // Provider basic information
  ProviderBasicInfo provider_info = 6;
}

// Request to update the store's settings within the provider
message UpdateStoreProviderSettingsRequest {
  // Store id
  int64 store_id = 1;
  // Provider id
  string provider_id = 2;
  // Settings to be updated
  repeated Setting settings = 3;
}

// Response of updating the store's settings within the provider
message UpdateStoreProviderSettingsResponse {}

// Request to get provider's settings
message GetProviderSettingsRequest {
  // Provider id
  string provider_id = 1;
}

// Response of getting provider' settings
message GetProviderSettingsResponse {
  // List of provider's settings
  repeated Setting settings = 1;
  // List of default provider's settings
  repeated Setting default_settings = 2;
}

// Request to update provider's settings
message UpdateProviderSettingRequest {
  // Provider id
  string provider_id = 1;
  // Settings to be updated
  repeated Setting settings = 2;
}

// Response of updating provider's settings
message UpdateProviderSettingResponse {}

// Request to update the store level settings
message UpdateStoreSettingsRequest {
  // Store id
  int64 store_id = 1;
  // A list of store-level override settings
  repeated Setting settings = 2;
}

// Response of updating store-level settings
message UpdateStoreSettingsResponse {}

// Request to add consumers to provider opt-out list
message AddConsumersToProviderOptOutRequest {
  // Provider id
  string provider_id = 1;
  // List of consumer ids
  repeated int64 consumer_ids = 2;
}

// Response of adding consumers to provider opt-out list
message AddConsumersToProviderOptOutResponse {}

// Request to opt-out consumers to av type
message AddConsumersToAvTypeOptOutRequest {
  // Av type
  AvType av_type = 1;
  // Consumer ids
  repeated int64 consumer_ids = 2;
}

// Response of opt-out consumers of av type
message AddConsumersToAvTypeOptOutResponse {}

// Request to remove consumers from the provider opt-out list
message RemoveConsumersFromProviderOptOutRequest {
  // Provider id
  string provider_id = 1;
  // List of consumer ids
  repeated int64 consumer_ids = 2;
}

// Response to remove consumers from the provider opt-out list
message RemoveConsumersFromProviderOptOutResponse {}

// Request to remove consumers from the opt-out av type
message RemoveConsumersFromAvTypeOptOutRequest {
  // Av type
  AvType av_type = 1;
  // Consumer ids
  repeated int64 consumer_ids = 2;
}

// Response of removing consumers from the opt-out av type
message RemoveConsumersFromAvTypeOptOutResponse {}

// Request to get paginated list of opt-out consumers of a provider
message GetOptOutConsumersOfProviderRequest {
  // Provider id
  string provider_id = 1;
  // Page offset - default offset is 0
  google.protobuf.Int32Value offset = 2;
  // Count of orders to fetch - default count is 20
  google.protobuf.Int32Value count = 3;
}

// Response of getting paginated list of opt-out consumers
message GetOptOutConsumersOfProviderResponse {
  // Count of all opt-out consumers of the provider
  int32 total_count = 1;
  // Paginated list of opt-out consumers of the provider
  repeated ConsumerInfo consumers = 2;
}
