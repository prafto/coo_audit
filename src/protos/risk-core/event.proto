syntax = "proto3";
package risk_core.v1;

import "risk-core/account.proto";
import "risk-core/cart.proto";
import "risk-core/common.proto";
import "risk-core/fulfillment.proto";
import "risk-core/payment.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_outer_classname = "RiskEventProtos";
option java_package = "com.doordash.rpc.risk_core";

// CxEvent
message CxEvent {
  // Payload
  oneof payload {
    // Account Events
    LoginEvent login = 1;
    //    LogoutEvent logout = 2;
    //    CreateAccountEvent create_account = 3;
    //    UpdateAccountEvent update_account = 4;
    //    AddConsumerPersonaEvent add_consumer_persona = 5;

    // Cart Events
    //    AddItemEvent add_item = 11;
    //    UpdateItemEvent update_item = 12;
    //    RemoveItemEvent remove_item = 13;
    //    CartPreCheckout cart_pre_checkout = 14;
    //    CartInCheckout cart_in_checkout = 15;
    //    CartPaymentFailed cart_payment_failed = 16;
    // Cart Checkout Success Event
    CartCheckoutSuccess cart_checkout_success = 17;
    //    CreditOrRefundCartEvent credit_or_refund_cart = 18;

    //    SignUpDashPassEvent signup_dashpass = 20;
    //    PromoRedeemedEvent promo_redeemed = 21;
    //    ReferralRedeemedEvent referral_redeemed = 22;
    //    DisputeEvent dispute = 23;
    //    ManualDecisionEvent manual_decision = 24;
    //    WhitelistUserEvent whitelist_user = 25;

    // Challenge
    // Keep the challenges in 200s. Mistake to have that first one in 26.
    //    SecondCardChallengeEvent second_card_challenge_event = 26;
    //    MFAChallengeEvent mfa_challenge_event = 200;

    // Complaint Events
    //    CxComplaintEvent cx_complaint = 27;

    // Keep payment related events in 50-79 next block to start at 80
    AddPaymentMethod add_payment_method = 50;
    //    RemovePaymentMethod remove_payment_method = 51;

    // Cancelled Delivery
    CancelledDeliveryEvent cancelled_delivery = 52;

    // User blocks and unblocks
    //    UserBlock user_block = 60;
    //    UserUnblock user_unblock = 61;
  }
}

// LoginEvent
message LoginEvent {
  // login_success
  bool login_success = 1;
  // login_type
  string login_type = 5;
  // social_sign_on
  SocialSignOn social_sign_on = 10;
  // submit_platform
  Platform submit_platform = 11;
  // failure_reason
  string failure_reason = 12;
}

// Cart Checkout Success Event
message CartCheckoutSuccess {
  // session id
  SessionId session_id = 1;
  // attempt number
  int32 attempt_number = 2;
  // cart id
  CartId cart_id = 3;
  // payments
  repeated CartPayment payments = 4;
  // cart
  Cart cart = 5;
  // order
  Order order = 6;
  // is_risk_order_by_cb_rate
  bool is_risk_order_by_cb_rate = 7;

  // Json serialized string of FinalizeOrderQuoteResponseV2
  string order_quote_response = 8;
  // when the order was submitted
  Timestamp submitted_at = 9;
}

// Cancelled Delivery Event
message CancelledDeliveryEvent {
  // UserId
  UserId user_id = 1;
  // ConsumerId
  ConsumerId consumer_id = 2;
  // DasherId
  DasherId dasher_id = 3;
  // CartId
  CartId cart_id = 4;
  // delivery_id is an incremental numeric id
  DeliveryId delivery_id = 5;
  // delivery_uuid is a uuid
  DeliveryUuid delivery_uuid = 6;
  // Timestamp
  Timestamp cancel_time = 7;
  // StoreId
  StoreId store_id = 13;
  // device_type
  string device_type = 8;
  // platform_type
  string platform_type = 9;
  // phone_number
  string phone_number = 10;
  // card_fingerprint
  string card_fingerprint = 11;
  // address_id
  string address_id = 12;
}

// Add Payment Event
message AddPaymentMethod {
  // full payment method information
  PaymentMethod payment_method = 1;
  // metadata fields
  int64 cx_previous_add_ts = 250;
  // metadata fields
  int64 fp_previous_add_ts = 251;
}
