syntax = "proto3";
package risk_core.v1.checkpoints.v1;

import "common/service_client_config.proto";
import "risk-core/checkpoint_response.proto";
import "risk-core/context.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_outer_classname = "PaymentMethodPreProtos";
option java_package = "com.doordash.rpc.risk_core.checkpoints";

/**
   Fraud checkpoint called before adding payment method
*/
service PaymentMethodPreService {
  // Example Hermes client config. The options not listed here use Hermes default.
  // The following applies for all RPCs in the service, if not overridden on individual RPCs.

  // Timeout after 1400 milliseconds.
  option (service_client.client_config).response_attempt_timeout_millis = 1500;
  // No retires.
  option (service_client.client_config).retry_config.max_attempts = 1;
  // Add RESOURCE_EXHAUSTED to the set of retriable codes.
  option (service_client.client_config).retry_config.do_retry_grpc_code = 8;
  // Break the circuit if the error rate exceeds 80%.
  option (service_client.client_config).circuit_breaker_config.failure_rate_threshold = 0.8;
  // Ignore NOT_FOUND from circuit breaker error rate calculation.
  option (service_client.client_config).circuit_breaker_config.do_ignore_grpc_code = 5;

  // Evaluated
  rpc Evaluate(PaymentMethodPreServiceEvaluateRequest) returns (PaymentMethodPreServiceEvaluateResponse);
}

/**
   Payment Method Pre Service Evaluation Request
*/
message PaymentMethodPreServiceEvaluateRequest {
  /*
     Payment processor (eg. "stripe", "paypal")
  */
  message PaymentProvider {
    // value
    string value = 1;
  }

  // payer reference id type
  PayerReferenceIdType reference_id_type = 1;
  // payer reference id
  ReferenceId reference_id = 2;
  // payment method process mode
  PaymentMethodProcessMode payment_method_process_mode = 3;
  // risk context
  RiskContext risk_context = 4;
  // consumer type
  ConsumerType consumer_type = 5;
  // dd FE tokenized fingerprint
  string dd_fingerprint = 6;
  // payment method type note: payment will skip fraud check for digital wallets, so no applepay/googlepay
  string payment_method_type = 8;
}

/**
   type of the consumer
*/
enum ConsumerType {
  // unknown
  CONSUMER_TYPE_UNSPECIFIED = 0;
  // lite guest
  CONSUMER_TYPE_LITE_GUEST = 1;
  // full guest
  CONSUMER_TYPE_FULL_GUEST = 2;
  // authenticated
  CONSUMER_TYPE_AUTHENTICATED = 3;
}

/*
   Types that specifies the role of payer
   https://github.com/doordash/services-protobuf/blob/506c65cc3f446d01aebd5d7eefeec6d6ab1808bd/protos/payin/common_v1.proto#L214
*/
message PayerReferenceIdType {
  // Example: dd_consumer_id
  string value = 1;
}

/**
   PaymentMethod process mode
*/
enum PaymentMethodProcessMode {
  // payment method process mode unspecified
  PAYMENT_METHOD_PROCESS_MODE_UNSPECIFIED = 0;
  // payment process triggered by internal service instead of Cx
  PAYMENT_METHOD_PROCESS_MODE_INTERNAL = 1;
}

/*
   Id of the entity referred to by PayerReferenceIdType
*/
message ReferenceId {
  // value
  string value = 1;
}

/**
   PaymentMethodPre Response
*/
message PaymentMethodPreServiceEvaluateResponse {
  // CheckpointResponse
  CheckpointResponse checkpoint_response = 1;
}
