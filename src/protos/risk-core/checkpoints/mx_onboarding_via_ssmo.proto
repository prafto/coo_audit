syntax = "proto3";

package risk_core.v1.checkpoints.v1;

import "common/service_client_config.proto";
import "google/protobuf/wrappers.proto";
import "risk-core/account.proto";
import "risk-core/cart.proto";
import "risk-core/checkpoint_response.proto";
import "risk-core/context.proto";
import "risk-core/store/store.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_outer_classname = "MxOnboardingViaSSMOProtos";
option java_package = "com.doordash.rpc.risk_core.checkpoints";

/**
   Fraud checkpoint called when a merchant completes all the steps in the onboarding process
*/
service MxOnboardingViaSSMOService {
  // Example Hermes client config. The options not listed here use Hermes default.
  // The following applies for all RPCs in the service, if not overridden on individual RPCs.

  // Timeout after 2000 milliseconds.
  option (service_client.client_config).response_attempt_timeout_millis = 2000;
  // 1 retry
  option (service_client.client_config).retry_config.max_attempts = 2;
  // Add RESOURCE_EXHAUSTED to the set of retriable codes.
  option (service_client.client_config).retry_config.do_retry_grpc_code = 8;
  // Break the circuit if the error rate exceeds 80%.
  option (service_client.client_config).circuit_breaker_config.failure_rate_threshold = 0.8;
  // Ignore NOT_FOUND from circuit breaker error rate calculation.
  option (service_client.client_config).circuit_breaker_config.do_ignore_grpc_code = 5;

  // evaluate the mx onboarding via ssmo request
  rpc Evaluate(MxOnboardingViaSSMOServiceEvaluateRequest) returns (MxOnboardingViaSSMOServiceEvaluateResponse);
}

/**
   Request object for MxOnboardingViaSSMO
*/
message MxOnboardingViaSSMOServiceEvaluateRequest {
  // store identifier
  StoreId store_id = 1;

  // business identifier
  BusinessId business_id = 2;

  // salesforce opportunity identifier
  google.protobuf.StringValue salesforce_opportunity_id = 3;

  // risk context
  RiskContext risk_context = 4;

  /*
     store tax id
  */
  google.protobuf.StringValue tax_id = 5;

  // merchant owner
  message MerchantOwner {
    // first_name
    google.protobuf.StringValue first_name = 1;
    // last_name
    google.protobuf.StringValue last_name = 2;
    // email
    google.protobuf.StringValue email = 3;
    // mobile_phone
    google.protobuf.StringValue mobile_phone = 4;
    // user_id
    google.protobuf.StringValue user_id = 5;
  }
  // merchant_owner
  MerchantOwner merchant_owner = 6;

  // store
  store.v1.Store store = 7;
  // Unique ID for the source of the event.
  google.protobuf.StringValue source_unique_id = 8;
  // RESSMO is_onboarding_completed
  google.protobuf.BoolValue is_onboarding_completed = 9;
  // list of treatment groups
  repeated string treatment_group_list = 10;
}

/**
   Response object for MxOnboardingViaSSMO
*/
message MxOnboardingViaSSMOServiceEvaluateResponse {
  // CheckpointResponse
  CheckpointResponse checkpoint_response = 1;
}
