syntax = "proto3";
package risk_core.v1.checkpoints.v1;

import "common/service_client_config.proto";
import "google/protobuf/timestamp.proto";
import "risk-core/account.proto";
import "risk-core/checkpoint_response.proto";
import "risk-core/common.proto";
import "risk-core/dasher.proto";
import "risk-core/payment.proto";
import "risk-core/payout_common.proto";
import "risk-core/services_common.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_outer_classname = "DxPayoutProtos";
option java_package = "com.doordash.rpc.risk_core.checkpoints";

/**
 * Triggered when payments attempts to submit dasher ACH or FastPay transfers to Stripe.
 * It can be used to block payouts and deactivate dashers.
 */
service DxPayoutService {
  // Timeout applied per attempt
  option (service_client.client_config).response_attempt_timeout_millis = 2000;
  // The maximum number of attempts. 1 means no retries.
  option (service_client.client_config).retry_config.max_attempts = 1;
  // The set of status codes on which to retry.
  option (service_client.client_config).retry_config.do_retry_grpc_code = 8;
  // The failure rate threshold for the circuit breaker.
  option (service_client.client_config).circuit_breaker_config.failure_rate_threshold = 0.8;
  // Status codes to ignore from the circuit breaker
  option (service_client.client_config).circuit_breaker_config.do_ignore_grpc_code = 5;

  // Evaluate the checkpoint.
  rpc Evaluate(DxPayoutServiceEvaluateRequest) returns (DxPayoutServiceEvaluateResponse);
}

// Evaluate response
message DxPayoutServiceEvaluateResponse {
  // The checkpoint response
  CheckpointResponse checkpoint_response = 1;
}

// Evaluate request
message DxPayoutServiceEvaluateRequest {
  // The payout id
  PayoutId payout_id = 1;

  // The payment account id
  PaymentAccountId payment_account_id = 2;

  // Payout payment method
  oneof payout_method {
    // Bank account
    BankAccount bank_account = 3;

    // Card
    Card card = 8;
  }

  // The payout amount
  MonetaryAmount payout_amount = 4;

  // Flow for the payout
  PayoutFlow payout_flow = 9;

  // The request description
  string request_description = 13;

  // The total amount of fact payouts requested
  MonetaryAmount total_amount_in_fast_payouts = 14;
}
