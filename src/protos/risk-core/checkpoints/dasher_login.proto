syntax = "proto3";
package risk_core.v1.checkpoints.v1;

import "common/service_client_config.proto";
import "google/protobuf/timestamp.proto";
import "risk-core/account.proto";
import "risk-core/checkpoint_response.proto";
import "risk-core/context.proto";
import "risk-core/event.proto";
import "risk-core/services_common.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_outer_classname = "DasherLoginProtos";
option java_package = "com.doordash.rpc.risk_core.checkpoints";

/**
 * This is an internal checkpoint used by Login Checkpoint.
 * It determines if this user is a dasher and check whether it needs to be deactivated.
 */
service DasherLoginService {
  // Timeout applied per attempt
  option (service_client.client_config).response_attempt_timeout_millis = 5000;
  // The maximum number of attempts. 1 means no retries.
  option (service_client.client_config).retry_config.max_attempts = 1;
  // The set of status codes on which to retry.
  option (service_client.client_config).retry_config.do_retry_grpc_code = 8;
  // The failure rate threshold for the circuit breaker.
  option (service_client.client_config).circuit_breaker_config.failure_rate_threshold = 0.8;
  // Status codes to ignore from the circuit breaker
  option (service_client.client_config).circuit_breaker_config.do_ignore_grpc_code = 5;

  // Evaluate the checkpoint.
  rpc Evaluate(DasherLoginServiceEvaluateRequest) returns (DasherLoginServiceEvaluateResponse);
}

// DasherLoginServiceEvaluateRequest
message DasherLoginServiceEvaluateRequest {
  // request_id
  RequestId request_id = 1;

  // caller fields
  CallerDetails caller = 2;

  // risk_context
  RiskContext risk_context = 3;

  // timestamp info
  google.protobuf.Timestamp timestamp = 4;

  // user
  User user = 5;

  // event_data
  LoginEvent log_event = 6;

  // client_id
  string client_id = 7;
}

// DasherLoginServiceEvaluateResponse
message DasherLoginServiceEvaluateResponse {
  // CheckpointResponse
  CheckpointResponse checkpoint_response = 1;
}
