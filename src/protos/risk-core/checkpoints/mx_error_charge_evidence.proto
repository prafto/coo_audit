syntax = "proto3";
package risk_core.v1.checkpoints.v1;

import "common/service_client_config.proto";
import "google/protobuf/wrappers.proto";
import "risk-core/account.proto";
import "risk-core/cart.proto";
import "risk-core/checkpoint_response.proto";
import "risk-core/common.proto";
import "risk-core/context.proto";
import "risk-core/fulfillment.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_outer_classname = "MxErrorChargePhotoReviewProtos";
option java_package = "com.doordash.rpc.risk_core.checkpoints";

/**
 * Checkpoint to determine whether or not to deny an error charge dispute from a merchant.
 */
service MxErrorChargePhotoReviewService {
  // evaluate checkpoint
  rpc Evaluate(MxErrorChargePhotoReviewServiceEvaluateRequest) returns (MxErrorChargePhotoReviewServiceEvaluateResponse);
}

// Evaluate request
message MxErrorChargePhotoReviewServiceEvaluateRequest {
  // Risk context
  RiskContext risk_context = 1;
  // Delivery id
  DeliveryId delivery_id = 2;
  // Store id
  StoreId store_id = 3;
  // Order problem types
  repeated string order_problem_types = 4;
  // Store charge
  MonetaryAmount store_charge = 5;
  // The handled order resolution status reqtype uuid for the delivery.
  google.protobuf.StringValue status_reqtype_uuid = 6;
  // Where does the request come from.
  RequestContext request_context = 7;
  // When did the Cnr request created.
  Timestamp created_at = 14;
  // What is the issue type linked to Cnr request.
  IssueType issue_type = 15;

  // request context
  enum RequestContext {
    // Unspecified
    REQUEST_CONTEXT_UNSPECIFIED = 0;
    // Self help
    REQUEST_CONTEXT_SELF_HELP = 1;
    // Agent
    REQUEST_CONTEXT_AGENT = 2;
  }

  // issue type
  enum IssueType {
    // Unspecified
    ISSUE_TYPE_UNSPECIFIED = 0;
    //  PFQ: Poor Food Quality
    ISSUE_TYPE_POOR_FOOD_QUALITY = 1;
    //  IIR: Incorrect Item Received
    ISSUE_TYPE_INCORRECT_ITEM_RECEIVED = 2;
    //  IE: Ingredient Error
    ISSUE_TYPE_INGREDIENT_ERROR = 3;
    //  WOD: Wrong Order Delivered
    ISSUE_TYPE_WRONG_ORDER_DELIVERED = 4;
    //  IS: Incorrect Size
    ISSUE_TYPE_INCORRECT_SIZE = 5;
  }
}

// Evaluate response
message MxErrorChargePhotoReviewServiceEvaluateResponse {
  // The checkpoint response
  CheckpointResponse checkpoint_response = 1;
}
