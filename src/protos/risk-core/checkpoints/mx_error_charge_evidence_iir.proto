syntax = "proto3";
package risk_core.v1.checkpoints.v1;

import "common/service_client_config.proto";
import "google/protobuf/wrappers.proto";
import "risk-core/account.proto";
import "risk-core/cart.proto";
import "risk-core/checkpoint_response.proto";
import "risk-core/common.proto";
import "risk-core/context.proto";
import "risk-core/fulfillment.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_outer_classname = "MxErrorChargeEvidenceIIRProtos";
option java_package = "com.doordash.rpc.risk_core.checkpoints";

/**
 * Checkpoint for whether or not to deny an error charge to Mx for IIR.
 */
service MxErrorChargeEvidenceIIRService {
  // evaluate checkpoint
  rpc Evaluate(MxErrorChargeEvidenceIIRServiceEvaluateRequest) returns (MxErrorChargeEvidenceIIRServiceEvaluateResponse);
}

// Evaluate request
message MxErrorChargeEvidenceIIRServiceEvaluateRequest {
  // Risk context
  RiskContext risk_context = 1;
  // Delivery id
  DeliveryId delivery_id = 2;
  // Store id
  StoreId store_id = 3;
  // Order problem types
  repeated string order_problem_types = 4;
  // Store charge
  MonetaryAmount store_charge = 5;
  // The handled order resolution status reqtype uuid for the delivery.
  google.protobuf.StringValue status_reqtype_uuid = 6;
  // When did the Cnr request created.
  Timestamp created_at = 7;
  // Consumer id.
  ConsumerId consumer_id = 8;
}

// Evaluate response
message MxErrorChargeEvidenceIIRServiceEvaluateResponse {
  // The checkpoint response
  CheckpointResponse checkpoint_response = 1;
}
