syntax = "proto3";

package risk_core.v1.checkpoints.v1;

import "common/service_client_config.proto";
import "risk-core/account.proto";
import "risk-core/cart.proto";
import "risk-core/checkpoint_response.proto";
import "risk-core/context.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_outer_classname = "MxEditUserSettingsProtos";
option java_package = "com.doordash.rpc.risk_core.checkpoints";

/**
   Fraud checkpoint called when a user updates user settings in the Mx Portal
*/
service MxEditUserSettingsService {
  // Example Hermes client config. The options not listed here use Hermes default.
  // The following applies for all RPCs in the service, if not overridden on individual RPCs.

  // Timeout after 2000 milliseconds.
  option (service_client.client_config).response_attempt_timeout_millis = 2000;
  // No retries.
  option (service_client.client_config).retry_config.max_attempts = 1;
  // Add RESOURCE_EXHAUSTED to the set of retriable codes.
  option (service_client.client_config).retry_config.do_retry_grpc_code = 8;
  // Break the circuit if the error rate exceeds 80%.
  option (service_client.client_config).circuit_breaker_config.failure_rate_threshold = 0.8;
  // Ignore NOT_FOUND from circuit breaker error rate calculation.
  option (service_client.client_config).circuit_breaker_config.do_ignore_grpc_code = 5;

  // evaluate the mx edit user settings request
  rpc Evaluate(MxEditUserSettingsServiceEvaluateRequest) returns (MxEditUserSettingsServiceEvaluateResponse);
}

/**
   Specifies which user role
*/
enum MxUserRole {
  // Unspecified role
  MX_USER_ROLE_UNSPECIFIED = 0;

  // Business admin role
  MX_USER_ROLE_BUSINESS_ADMIN = 1;

  // Store manager role
  MX_USER_ROLE_STORE_MANAGER = 2;

  // Store operator role
  MX_USER_ROLE_STORE_OPERATOR = 3;

  // Parent company admin role
  MX_USER_ROLE_PARENT_COMPANY_ADMIN = 4;
}

/**
   Specifies which user action is taken
*/
enum UserAction {
  // Create user action
  USER_ACTION_UNSPECIFIED = 0;

  // Delete user action
  USER_ACTION_DELETE_USER = 1;

  // Update store permissions action
  USER_ACTION_UPDATE_STORE_PERMISSIONS = 2;

  // Update user role action
  USER_ACTION_UPDATE_USER_ROLE = 3;

  // Create user action
  USER_ACTION_CREATE_USER = 4;
}

/**
   Request object for MxEditUserSettings
*/
message MxEditUserSettingsServiceEvaluateRequest {
  // risk context
  RiskContext risk_context = 1;

  // store id
  string store_id = 2;

  // business id
  string business_id = 3;

  // user_changed
  User user_changed = 4;

  // mx user role
  MxUserRole mx_user_role = 5;

  // is member of all stores boolean
  bool is_member_of_all_stores = 6;

  // user action
  UserAction user_action = 7;
}

/**
   Response object for MxEditUserSettings
*/
message MxEditUserSettingsServiceEvaluateResponse {
  // CheckpointResponse
  CheckpointResponse checkpoint_response = 1;
}
