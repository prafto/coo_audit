syntax = "proto3";
package risk_core.v1.checkpoints.v1;

import "common/service_client_config.proto";
import "risk-core/account.proto";
import "risk-core/checkpoint_response.proto";
import "risk-core/context.proto";
import "risk-core/fulfillment.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_outer_classname = "ConsumerWarningProtos";
option java_package = "com.doordash.rpc.risk_core.checkpoints";

// Fraud checkpoint called when consumer enters Self Help, to see if they should be issued a consumer abuse warning
service ConsumerWarningService {
  // Example Hermes client config. The options not listed here use Hermes default.
  // The following applies for all RPCs in the service, if not overridden on individual RPCs.

  // Timeout after 1000 milliseconds.
  option (service_client.client_config).response_attempt_timeout_millis = 2000;
  // No retires.
  option (service_client.client_config).retry_config.max_attempts = 1;
  // Add RESOURCE_EXHAUSTED to the set of retriable codes.
  option (service_client.client_config).retry_config.do_retry_grpc_code = 8;
  // Break the circuit if the error rate exceeds 80%.
  option (service_client.client_config).circuit_breaker_config.failure_rate_threshold = 0.8;
  // Ignore NOT_FOUND from circuit breaker error rate calculation.
  option (service_client.client_config).circuit_breaker_config.do_ignore_grpc_code = 5;

  // Evaluated
  rpc Evaluate(ConsumerWarningServiceEvaluateRequest) returns (ConsumerWarningServiceEvaluateResponse);
}

// ConsumerWarningServiceEvaluateRequest
message ConsumerWarningServiceEvaluateRequest {
  // Name of the calling service
  ClientName client_name = 1;
  // Delivery id
  DeliveryId delivery_id = 2;
  // Consumer id
  ConsumerId consumer_id = 3;
  // Risk context
  RiskContext risk_context = 4;
  // List of order problem types (e.g. missing_and_incorrect, poor_food_quality, etc.)
  string order_problem_types = 5;
  // Individual item problems
  repeated ItemProblems item_problems = 6;
}

// ClientName definition
message ClientName {
  // Name of the client
  string client_name = 1;
}

// ItemProblems definition
message ItemProblems {
  // Problem name (e.g.
  string problem_name = 1;
  // Item description
  string description = 2;
  // Item extra id
  string item_extra_id = 3;
  // Order item id
  string order_item_id = 4;
  // Quantity
  int32 quantity = 5;
}

// ConsumerWarningServiceEvaluateResponse
message ConsumerWarningServiceEvaluateResponse {
  // CheckpointResponse
  CheckpointResponse checkpoint_response = 1;
}
