syntax = "proto3";
package risk_core.v1.checkpoints.v1;

import "common/service_client_config.proto";
import "google/protobuf/timestamp.proto";
import "risk-core/account.proto";
import "risk-core/checkpoint_response.proto";
import "risk-core/context.proto";
import "risk-core/event.proto";
import "risk-core/services_common.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_outer_classname = "AccountLoginProtos";
option java_package = "com.doordash.rpc.risk_core.checkpoints";

// AccountLoginService
service AccountLoginService {
  // service with hermes configuration

  // Timeout after 2000 milliseconds.
  option (service_client.client_config).response_attempt_timeout_millis = 2000;
  // Make a total 2 attempts (initial + one retries).
  option (service_client.client_config).retry_config.max_attempts = 2;
  // Add RESOURCE_EXHAUSTED to the set of retriable codes.
  option (service_client.client_config).retry_config.do_retry_grpc_code = 8;
  // Break the circuit if the error rate exceeds 80%.
  option (service_client.client_config).circuit_breaker_config.failure_rate_threshold = 0.8;
  // Ignore NOT_FOUND from circuit breaker error rate calculation.
  option (service_client.client_config).circuit_breaker_config.do_ignore_grpc_code = 5;

  // Evaluate
  rpc Evaluate(AccountLoginServiceEvaluateRequest) returns (AccountLoginServiceEvaluateResponse);
}

// AccountLoginServiceEvaluateRequest
message AccountLoginServiceEvaluateRequest {
  // request_id
  RequestId request_id = 1;
  // caller fields
  CallerDetails caller = 2;
  // risk_context
  RiskContext risk_context = 3;
  // timestamp info
  google.protobuf.Timestamp timestamp = 4;
  // user
  User user = 5;

  // event_data
  LoginEvent log_event = 6;
  // client_id
  string client_id = 7;
}

// AccountLoginServiceEvaluateResponse
message AccountLoginServiceEvaluateResponse {
  // CheckpointResponse
  CheckpointResponse checkpoint_response = 1;
}
