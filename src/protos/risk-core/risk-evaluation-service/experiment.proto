syntax = "proto3";

package risk_core.v1.risk_evaluation_service.v1;

import "google/protobuf/descriptor.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "risk-core/risk-evaluation-service/common.proto";
import "risk-core/risk-evaluation-service/dimension.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_outer_classname = "ExperimentProto";
option java_package = "com.doordash.rpc.risk_core.riskevaluation";

// launch override in rule overrides
enum LaunchOverride {
  // unspecified
  LAUNCH_OVERRIDE_UNSPECIFIED = 0;
  // live
  LAUNCH_OVERRIDE_LIVE = 1;
  // shadow
  LAUNCH_OVERRIDE_SHADOW = 2;
  // disabled
  LAUNCH_OVERRIDE_DISABLED = 3;
}

// Rule override in experiment group
// e.g. "MLRule" -> OVERRIDE_LIVE, means override launch to live
message RuleOverride {
  // rule name
  string rule_name = 1;
  // rule launch override
  LaunchOverride launch_override = 2;
}

// Experiment bucket to a set of rule overrides
// e.g. "treatment" -> ["MLRule" -> LAUNCH_OVERRIDE_LIVE, "OldRule" -> LAUNCH_OVERRIDE_DISABLED]
message ExperimentGroupConfig {
  // bucket
  string bucket = 1;
  // rule overrides
  repeated RuleOverride rule_overrides = 2;
}

// dv config
message DynamicValueConfig {
  // the name of the dv config
  string dv_name = 1;
  // the bucket key name
  string bucket_key = 2;
  // name of the fact whose value is used as bucket key
  string fact_name = 3;
  /**
   * Context map defines the additional experiment context (other than bucket_key)
   * the map format is key = context name, value = fact name for the value
   * i.e. 'client_version' and fact_name = 'clientVersion'
   * context_map {'client_version', 'clientVersion'}
   */
  map<string, string> context_map = 4;
}

// Experiment config
message ExperimentConfig {
  // Checkpoint name
  string checkpoint_name = 1;
  // Experiment name
  string experiment_name = 2;
  // Version
  string version = 3;
  // Experiment description
  string description = 4;
  // Dynamic value config
  DynamicValueConfig dv_config = 5;
  // Dimension profile
  ModifiedDimensionProfile dimension_profile = 6;
  // Experiment groups
  repeated ExperimentGroupConfig experiment_group_config = 7;
  // config state
  ConfigState state = 8;
  // created at
  // used in getCurrentCheckpointExecutionConfigs to prioritize the oldest experiment config
  // will be ignored in update or create request
  google.protobuf.Timestamp created_at = 9;
  // updated at
  // will be ignored in update or create request
  google.protobuf.Timestamp updated_at = 10;
  // concluded, indicating whether this experment is concluded
  bool concluded = 11;
}
