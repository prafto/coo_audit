syntax = "proto3";

package risk_core.v1.risk_evaluation_service.v1;

import "common/service_client_config.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "risk-core/risk-evaluation-service/common.proto";
import "risk-core/risk-evaluation-service/experiment.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.risk_core.riskevaluation";

// RiskExperimentConfigurationService
service RiskExperimentConfigurationService {
  // Timeout after 700 milliseconds.
  option (service_client.client_config).response_attempt_timeout_millis = 700;
  // Make a total 2 attempts (initial + one retries).
  option (service_client.client_config).retry_config.max_attempts = 2;
  // Add RESOURCE_EXHAUSTED to the set of retriable codes.
  option (service_client.client_config).retry_config.do_retry_grpc_code = 8;
  // Break the circuit if the error rate exceeds 80%.
  option (service_client.client_config).circuit_breaker_config.failure_rate_threshold = 0.8;
  // Ignore NOT_FOUND from circuit breaker error rate calculation.
  option (service_client.client_config).circuit_breaker_config.do_ignore_grpc_code = 5;

  // Create experiment config
  rpc CreateExperimentConfig(CreateExperimentConfigRequest) returns (CreateExperimentConfigResponse);

  // Update experiment config
  rpc UpdateExperimentConfig(UpdateExperimentConfigRequest) returns (UpdateExperimentConfigResponse);

  // Archive experiment config
  rpc ArchiveExperimentConfig(ArchiveExperimentConfigRequest) returns (ArchiveExperimentConfigResponse);

  // Get experiment configs
  rpc GetExperimentConfigs(GetExperimentConfigsRequest) returns (GetExperimentConfigsResponse);

  // Get experiment config
  rpc GetExperimentConfig(GetExperimentConfigRequest) returns (GetExperimentConfigResponse);

  // Get current experiment config
  rpc GetCurrentExperimentConfig(GetCurrentExperimentConfigRequest) returns (GetCurrentExperimentConfigResponse);

  // Submit experiment for conclusion
  rpc SubmitExperimentForConclusion(SubmitExperimentForConclusionRequest) returns (SubmitExperimentForConclusionResponse);
}

// CreateExperimentConfigRequest
message CreateExperimentConfigRequest {
  // experiment config
  ExperimentConfig experiment_config = 1;
  // user change
  UserChange user_change = 2;
}

// CreateExperimentConfigResponse
message CreateExperimentConfigResponse {
  // experiment config
  ExperimentConfig experiment_config = 1;
  // change request
  ChangeRequest change_request = 2;
}

// UpdateExperimentConfigRequest
message UpdateExperimentConfigRequest {
  // experiment config
  ExperimentConfig experiment_config = 1;
  // user change
  UserChange user_change = 2;
}

// UpdateExperimentConfigResponse
message UpdateExperimentConfigResponse {
  // experiment config
  ExperimentConfig experiment_config = 1;
  // change request
  ChangeRequest change_request = 2;
}

// ArchiveExperimentConfigRequest
message ArchiveExperimentConfigRequest {
  // experiment config
  string checkpoint_name = 1;
  // experiment name
  string experiment_name = 2;
  // user change
  UserChange user_change = 3;
}

// ArchiveExperimentConfigResponse
message ArchiveExperimentConfigResponse {
  // experiment config
  ExperimentConfig experiment_config = 1;
}

// GetExperimentConfigsRequest
message GetExperimentConfigsRequest {
  // checkpoint name
  string checkpoint_name = 1;
}

// GetExperimentConfigsResponse
message GetExperimentConfigsResponse {
  // checkpoint name
  string checkpoint_name = 1;
  // experiment configs
  repeated ExperimentConfig experiment_configs = 2;
}

// GetExperimentConfigRequest
message GetExperimentConfigRequest {
  // experiment name
  string checkpoint_name = 1;
  // experiment name
  string experiment_name = 2;
  // version
  string version = 3;
}

// GetExperimentConfigResponse
message GetExperimentConfigResponse {
  // experiment config
  ExperimentConfig experiment_config = 1;
}

// GetCurrentExperimentConfigResponse
message GetCurrentExperimentConfigRequest {
  // experiment name
  string checkpoint_name = 1;
  // experiment name
  string experiment_name = 2;
}

// GetCurrentExperimentConfigResponse
message GetCurrentExperimentConfigResponse {
  // experiment config
  ExperimentConfig experiment_config = 1;
}

// SubmitExperimentForConclusionRequest
message SubmitExperimentForConclusionRequest {
  // experiment name
  string checkpoint_name = 1;
  // experiment name
  string experiment_name = 2;
  // group name
  string group_name = 3;
  // user change
  UserChange user_change = 4;
}

// SubmitExperimentForConclusionResponse
message SubmitExperimentForConclusionResponse {
  // change request
  ChangeRequest change_request = 1;
}
