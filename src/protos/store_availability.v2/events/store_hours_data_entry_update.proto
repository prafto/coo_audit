syntax = "proto3";

package store_service_availability_event.v1;

import "common/common.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "store_availability.v2/store_availability.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_outer_classname = "UpdateStoreHoursProto";
option java_package = "com.doordash.merchantdataservice.storeavailability.protobuf.v2";

// Simplified version of storeHours in StoreAvailabilityHours
message StoreHourInterval {
  // Store Availability Type: Delivery Option Type + Fulfillment Type
  store_availability.v2.StoreAvailabilityType store_availability_type = 1;

  // Available hours interval for the store availability type
  repeated store_availability.v2.TimeInterval time_intervals = 2;
}

// Simplified version of menuAvailabilities in StoreAvailabilityHours
message MenuHourInterval {
  // Menu ID
  google.protobuf.StringValue menu_id = 1;

  // List of StoreHourIntervals for the menu
  repeated StoreHourInterval store_availability_type_intervals = 2;
}

// UnavailableReasons per SAType; excludes Temp Deactivations and Healer Order Protocol Killed
message UnavailableReasonsBySAType {
  // Store Availability Type: Delivery Option Type + Fulfillment Type
  store_availability.v2.StoreAvailabilityType store_availability_type = 1;

  // Available hours interval for the store availability type
  repeated store_availability.v2.UnavailableReason unavailable_reasons = 2;
}

// Event to capture SAv2 cache invalidation events to expose SAv2 availability time intervals
message UpdateStoreHoursEvent {
  // The Store ID
  google.protobuf.Int64Value id = 1;

  // ex: [[asap_delivery, [10AM - 5PM], [asap_pickup, [11AM-4PM]]
  repeated StoreHourInterval store_availability_intervals = 2;

  // ex: [[menu_1, [asap_delivery, [10AM - 5PM], [asap_pickup, [11AM-4PM]]], [menu_2, [asap_delivery, [6AM - 9PM]]]]
  repeated MenuHourInterval menu_availability_intervals = 3;

  // timestamp of update
  google.protobuf.Int64Value update_timestamp = 5;

  // timestamp adding to cache
  google.protobuf.Int64Value cache_timestamp = 6;

  // last timestamp in StoreHourInterval
  google.protobuf.Int64Value refresh_needed_timestamp = 7;

  // source of UpdateStoreHoursEvent: store deactivation, menu hours update, adhoc bootstrap, etc.
  google.protobuf.StringValue source = 8;

  // If store in UNAVAILABLE status, this further discloses the detailed reasons
  repeated store_availability.v2.UnavailableReason unavailable_reasons = 9;

  // The specific experience for this update.
  common.Experience experience = 10;

  // scheduledEndAt timestamp if store has a temporary deactivation, else null
  google.protobuf.Int64Value temp_deactivation_scheduled_end_at = 11;

  // Unavailable Reasons separated by SA Type
  repeated UnavailableReasonsBySAType unavailable_reasons_by_sa_types = 12;
}
