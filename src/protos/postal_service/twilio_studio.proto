syntax = "proto3";

package postal_service.v1;

import "common/code.proto";
import "common/service_client_config.proto";
import "google/protobuf/wrappers.proto";
import "google/protobuf/struct.proto";
import "postal_service/postal_service_common.proto";

option go_package = "github.com/doordash/services-protobuf/generated/postal_service";
option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.postal_service";

// Service for interacting with Twilio Studio
service TwilioStudioService {
  // Timeout after 700 milliseconds.
  option (service_client.client_config).response_attempt_timeout_millis = 700;
  // Make a total 4 attempts (initial + three retries).
  option (service_client.client_config).retry_config.max_attempts = 4;
  // Add RESOURCE_EXHAUSTED to the set of retryable codes.
  option (service_client.client_config).retry_config.do_retry_grpc_code = 8;
  // Break the circuit if the error rate exceeds 80%.
  option (service_client.client_config).circuit_breaker_config.failure_rate_threshold = 0.8;
  // Ignore NOT_FOUND from circuit breaker error rate calculation.
  option (service_client.client_config).circuit_breaker_config.do_ignore_grpc_code = 5;
  // Ignore ALREADY_EXISTS from circuit breaker error rate calculation.
  option (service_client.client_config).circuit_breaker_config.do_ignore_grpc_code = 6;

  // To trigger Twilio Studio flow execution.
  rpc ExecuteFlow(ExecuteFlowRequest) returns (ExecuteFlowResponse);

  // To end an active Twilio Studio flow execution
  rpc EndExecution(EndExecutionRequest) returns (EndExecutionResponse);
}

// Request for ExecuteFlow RPC
message ExecuteFlowRequest {
  // required: twilio studio flow id
  string flow_sid = 1;

  // required: recipient phone number
  string to_phone_number = 2;

  // required: experience enum (only supported DoorDash for now)
  Experience experience = 3;

  // required: country short name
  string country_shortname = 4;

  // optioan: exeuction custom parameters map
  google.protobuf.Struct parameters= 5;
}

// Response for ExecuteFlow RPC
message ExecuteFlowResponse {
  // unique execution id
  string execution_sid = 1;

  // unique twilio studio flow id
  string flow_sid = 2;

  // optional: error code from Twilio, 409 means conflict execution
  google.protobuf.Int32Value error_code = 3;
}

// Request for EndExecution RPC
message EndExecutionRequest {
  // required: experience enum (only supported DoorDash for now)
  Experience experience = 1;

  // required: country short name
  string country_shortname = 2;

  // required: twilio studio flow id
  string flow_sid = 3;

  // required: unique execution id
  string execution_sid = 4;
}

// Response for EndExecution RPC
message EndExecutionResponse {}
