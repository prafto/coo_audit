syntax = "proto3";

package mosaic_test.v1;

import "doordash.api/annotations.proto";
import "google/api/annotations.proto";
import "google/protobuf/wrappers.proto";
import "mosaic_test/mosaic.proto";

option go_package = "github.com/doordash/services-protobuf/generated/mosaic_test";
option java_multiple_files = true;
option java_package = "com.doordash.rpc.mosaic_test";

// Mosaic test service definition.
// This service contains one endpoint that returns a MosaicTestServicePageResponse containing a MosaicPage.
// Onboarding this service to Unified Gateway should add support for ModelGen generation to generate Web (Typescript),
// iOS, and Kotlin interfaces for MosaicPage including all it's child components (Groups, Sections) and components.
service MosaicTestService {
  option (doordash.api.service) = {
    name: "mosaic-test"
    // Using web-infra's gRPC service until when Mosaic has its own gRPC service
    // Url property is required to onboard to Unified Gateway.
    // The value is not important right now as it just provides us with a way to pass onboarding verification in CI.
    url: "web-grpc-service-playground-web.service.prod.ddsd"
    port: 50051
    name_spaces: ["mosaic-test"]
    owner: {
      id: "mosaic"
      name: "mosaic"
      slack_channel: "#ask-mosaic"
      email_alias: "sdui-leads@doordash.com"
    }
    target_products: [
      CX,
      DX,
      MX
    ]
  };

  // [This rpc is never called]
  // The intention of this rpc definition is to return a MosaicTestServicePageResponse that contains a MosaicPage.
  // Unified Gateway & ModelGen should be able to parse and generate types for MosaicPage.
  // Clients can then use the generated interfaces to write type-safe code.
  rpc Page(MosaicTestServicePageRequest) returns (MosaicTestServicePageResponse) {
    option (google.api.http) = {get: "/mosaic-test/v1/page"};
    option (doordash.api.endpoint) = {
      tier: T3
      lifecycle: DEV
      authorization: [NONE]
    };
  }
}

// a placeholder request message
message MosaicTestServicePageRequest {
  // a placeholder property since ModelGen does not support parsing empty messages
  string name = 1;
}

// a response message that contains a MosaicPage.
message MosaicTestServicePageResponse {
  // mosaic page
  MosaicPage page = 1;
}
