syntax = "proto3";

// buf:lint:ignore DIRECTORY_SAME_PACKAGE
package doordash.retail.catalog.v1;

import "doordash.retail.catalog.crdb.v1/product_item.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "ontology/common.proto";
import "ontology/product.proto";

option go_package = "github.com/doordash/services-protobuf/generated/doordash/retail/catalog/v1";
// so ExternalUrpcService can be found
option java_generic_services = true;

// third party data use case choice
enum ThirdPartyDataBulkToolUseCase {
  // unspecified
  THIRD_PARTY_DATA_BULK_TOOL_USE_CASE_UNSPECIFIED = 0;
  // 3PD create
  THIRD_PARTY_DATA_BULK_TOOL_USE_CASE_CREATE = 1;
  // 3PD update attributes
  THIRD_PARTY_DATA_BULK_TOOL_USE_CASE_UPDATE_ATTRIBUTES = 2;
  // 3PD update linking
  THIRD_PARTY_DATA_BULK_TOOL_USE_CASE_UPDATE_LINKING = 3 [deprecated = true];
  // 3PD update admin user
  THIRD_PARTY_DATA_BULK_TOOL_USE_CASE_UPDATE_FROM_ADMIN_USER = 4;
  // International 3PD SKU create
  THIRD_PARTY_DATA_BULK_TOOL_USE_CASE_INTL_SKU_CREATE = 5;
  // International 3PD SKU update
  THIRD_PARTY_DATA_BULK_TOOL_USE_CASE_INTL_SKU_UPDATE = 6;
  // Create 3PD via direct table access
  THIRD_PARTY_DATA_BULK_TOOL_USE_CASE_DIRECT_TABLE_CREATE = 7;
}

// service for external urpc related apis
service ExternalUrpcService {
  // upsert a new external urpc
  rpc UpsertExternalUrpc(UpsertExternalUrpcRequest) returns (UpsertExternalUrpcResponse);
}

// request for upserting external urpcs
message UpsertExternalUrpcRequest {
  // list of external urpcs
  repeated ExternalUrpc external_urpcs = 1;
}

// response for upserting external urpc
message UpsertExternalUrpcResponse {
  // if upsert succeeded
  bool success = 1;
  // error message, if any, when upsert failed
  string err_message = 2;
}

// external urpc info
message ExternalUrpc {
  // external id, could be external urpc uuid
  string external_id = 1;
  // source of this external urpc, ex. Salsify Open Catalog
  string source = 2;
  // gtin_14 of this product
  string gtin_14 = 3;
  // product title
  string product_title = 4;
  // long description
  string long_description = 5;
  // name of the manufacturer
  string manufacturer_name = 6;
  // brand name
  string brand_name = 7;
  // sub brand name
  string subbrand_name = 8;
  // if this product is active
  bool is_active = 9;
  // product metadata, could be in JSON format
  google.protobuf.StringValue product_metadata = 10;
  // effective date of this product
  google.protobuf.Timestamp effective_date = 11;
  // discontinued date date of this product
  google.protobuf.Timestamp discontinued_date = 12;
  // create date date of this product
  google.protobuf.Timestamp external_create_date = 13;
  // last updated date date of this product
  google.protobuf.Timestamp external_last_updated = 14;
  // Use case of 3PD
  ThirdPartyDataBulkToolUseCase use_case = 15;
  // Field Mask for specifying delta for partial updates
  google.protobuf.FieldMask update_mask = 16;
  // Sku content for 3PD
  doordash.retail.catalog.crdb.v1.ProductItem sku_content = 17;
  // Sku Content attribute - UA Format for 3PD, this is deprecated, use partialUpdate
  ontology.v1.Product product = 18 [deprecated = true];
  // Partial update for UA
  ontology.v1.PartialUpdate partial_update = 19;
}

// External urpc (i.e. raw 3p sku in 3PD world) created by
enum CreatedBy {
  // unspecified
  CREATED_BY_UNSPECIFIED = 0;
  // 3pd yellow pipeline daily ingestion
  CREATED_BY_YELLOW_PIPELINE_DAILY_INGESTION = 1;
}
