syntax = "proto3";

// buf:lint:ignore DIRECTORY_SAME_PACKAGE
package doordash.retail.catalog.v1;

import "doordash.retail.catalog.crdb.v1/urpc_curated_information.proto";
import "doordash.retail.catalog.crdb.v1/urpc_external_information.proto";
import "doordash.retail.catalog.crdb.v1/well_known_types.proto";
import "doordash.retail.catalog.v1/common.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option go_package = "github.com/doordash/services-protobuf/generated/doordash/retail/catalog/v1";
// so LegacyCatalogService can be found
option java_generic_services = true;

// Legacy Catalog Service for old tooling
// see https://github.com/doordash/admin-gateway/blob/bbd28cce39fb68c7214bff37549fc7514386e2b4/src/modules/groceryTool.ts#L20
service LegacyCatalogService {
  // create a new grocery tag
  // buf:lint:ignore RPC_REQUEST_RESPONSE_UNIQUE
  rpc CreateGroceryTag(CreateGroceryTagRequest) returns (CreateGroceryTagResponse);

  // update one or more grocery category tag links
  // (fields are overwritten on existing rows)
  // buf:lint:ignore RPC_REQUEST_RESPONSE_UNIQUE
  rpc UpdateGroceryCategoryTagLinks(UpdateGroceryCategoryTagLinksRequest) returns (UpdateGroceryCategoryTagLinksResponse);

  // update one or more grocery collection tag links
  // (fields are overwritten on existing rows)
  // buf:lint:ignore RPC_REQUEST_RESPONSE_UNIQUE
  rpc UpdateGroceryCollectionTagLinks(UpdateGroceryCollectionTagLinksRequest) returns (UpdateGroceryCollectionTagLinksResponse);

  // update one or more grocery collection metadata entries
  // (fields are overwritten on existing rows)
  // buf:lint:ignore RPC_REQUEST_RESPONSE_UNIQUE
  rpc UpdateGroceryCollectionMetadata(UpdateGroceryCollectionMetadataRequest) returns (UpdateGroceryCollectionMetadataResponse);
}

/* Request and Response */

// request for create grocery tag
message CreateGroceryTagRequest {
  // tag group id, should match one of the following
  // 628 = grocery_collection, 629 = grocery_category1, 630 = grocery_category2
  int64 group_id = 1;
  // tag group name
  string name = 2;
}

// response for create grocery tag
message CreateGroceryTagResponse {
  // tag id
  int64 id = 1;
}

// update category tag link request
message UpdateGroceryCategoryTagLinksRequest {
  // doordash business id
  int64 business_id = 1;
  // list of grocery category tag links to update
  repeated GroceryCategoryTagLink input = 2;
}

// update category tag link response
message UpdateGroceryCategoryTagLinksResponse {
  // total number of rows affected
  int64 update_count = 1;
}

// update collection tag link request
message UpdateGroceryCollectionTagLinksRequest {
  // doordash business id
  int64 business_id = 1;
  // list of grocery collection tag links to update
  repeated GroceryCollectionTagLink input = 2;
}

// update collection tag link response
message UpdateGroceryCollectionTagLinksResponse {
  // total number of rows affected
  int64 update_count = 1;
}

// update collection metadata request
message UpdateGroceryCollectionMetadataRequest {
  // list of grocery collection metadata entries to update
  repeated GroceryCollectionMetadata input = 1;
}

// update collection metadata response
message UpdateGroceryCollectionMetadataResponse {
  // total number of rows affected
  int64 update_count = 1;
}

/* Entities */

// Represents a Decimal number.
// unitAmount equivalent to BigDecimal(10.2).unscaled() == 102.
// decimalPlaces equivalent to BigDecimal(10.2).scale() == 1
message Decimal {
  // decimal precision given a decimal. ie decimal_places = 2 for 1.25
  google.protobuf.Int32Value decimal_places = 1;
  // unscale value of the decimal, ie. decimal is 1.25 then the unit_amount is 125
  google.protobuf.Int32Value unit_amount = 2;
}

// category tag link
message GroceryCategoryTagLink {
  // doordash business id
  int64 business_id = 1;
  // item merchant supplied id
  string item_merchant_supplied_id = 2;
  // tag id (in the category1 group)
  int64 category_1_tag_id = 3 [jstype = JS_STRING];
  // tag id (in the category2 group)
  int64 category_2_tag_id = 4 [jstype = JS_STRING];
  // (optional) product group name
  // products in the same product group vary by Size and/or Variant
  // (populated in traits field)
  google.protobuf.StringValue product_group = 5;
  // optional json object containing following fields
  //
  // variants:
  // - Size: string?
  // - Variant: string?
  //
  // search:
  // - Keywords: string[]?
  // - Search_override: string[]?
  google.protobuf.StringValue traits = 6;
  // (optional) photo id
  google.protobuf.Int64Value photo_id = 7;
  // (optional) popularity score
  google.protobuf.FloatValue popularity = 8;
  // (optional) universal product code
  google.protobuf.StringValue upc = 9;
  // (optional) item name
  google.protobuf.StringValue item_name = 10;
  // (optional) is active (default=true)
  google.protobuf.BoolValue is_active = 11;
  // (optional) json object containing item location
  google.protobuf.StringValue item_location = 12;
  // (optional) price lookup code for produce
  google.protobuf.StringValue price_lookup_code = 13;

  /* weighted items fields */
  // (optional) unit measure for weighted items (ea, lb)
  google.protobuf.StringValue unit = 14;
  // (optional) orderable increment
  Decimal increment = 15;
  // (optional) sold as increment for weighted items
  SoldAsInfo sold_as_info = 16;
  // (optional) estimation info for weighted items
  EstimationInfo estimation_info = 17;
  // scan strategy for weighted items
  // one of: single_scan, multi_scan, skip_scan
  google.protobuf.StringValue scan_strategy = 18;
  // product description
  google.protobuf.StringValue details = 19;
  // comma-separated additional photo ids
  google.protobuf.StringValue auxiliary_photo_ids = 20;
  // nutritional info for the product in doordash format
  google.protobuf.StringValue product_metadata = 21;
  // purchase type for the item
  string purchase_type = 22;
  // optional, id for global_product_item
  google.protobuf.StringValue dd_sic = 23;
  // optional, id for global_catalog
  google.protobuf.StringValue global_catalog_id = 24;
  // optional, id for brand taxonomy
  google.protobuf.Int64Value brand_id = 25;
  // optional, id for product category taxonomy
  google.protobuf.Int64Value product_category_id = 26;
  // (optional) nutrition program enum list
  repeated NutritionAssistanceProgram nutrition_programs = 27;
  // optional, package information
  doordash.retail.catalog.crdb.v1.CatalogPackageInformation catalog_package_information = 28;
  // Internally curated attributes, same structure as URPC crdb internal information
  doordash.retail.catalog.crdb.v1.CuratedInformation curated_information = 29;
  // Externally sourced attributes same structure as URPC crdb external information
  doordash.retail.catalog.crdb.v1.ExternalInformation external_information = 30;
  // (optional) baseline sku hash id
  google.protobuf.StringValue sku_hash_id = 31;
  // Shows whether operators set a category 1 tag id, use set value if true, query taxonomy mapping if false
  google.protobuf.BoolValue has_category_1_tag_id = 32;
  // Shows whether operators set a category 2 tag id, use set value if true, query taxonomy mapping if false
  google.protobuf.BoolValue has_category_2_tag_id = 33;
}

// definition for how the item is sold at
message SoldAsInfo {
  // list out deprecated field numbers for backwards compatibility
  reserved 3;
  // list out deprecated field names for backwards compatibility
  reserved "measurement_price";
  // unit measure for weighted items (ea, lb)
  string measurement_unit = 1;
  // if in store they are sold in multiple increment of unit i.e. 16 oz
  Decimal measurement_factor = 2;
}

// definition for the quantity used for estimating sold as quantity
message EstimationInfo {
  // indicates approximately how much a single item is sold by.
  Decimal approximate_sold_as_quantity = 1;
  // unit measure for weighted items (ea, lb)
  string approximate_sold_as_unit = 2;
}

// collection tag link
message GroceryCollectionTagLink {
  // doordash business id
  int64 business_id = 1;
  // item merchant supplied id
  string item_merchant_supplied_id = 2;
  // tag id for the collection
  string collection_tag_id = 3;
  // sort id for the item
  string sort_id = 4;
  // (optional) is active (default=true)
  google.protobuf.BoolValue is_active = 5;
}

// collection metadata for promos
message GroceryCollectionMetadata {
  // collection tag iid
  int64 tag_id = 1;
  // url for the header
  string header_logo_url = 2;
  // hex code eg. D5DCFA
  string header_bg_color = 3;
  // description of the collection
  google.protobuf.StringValue description = 4;
  // use light content
  bool use_light_content = 5;
  // version of the collection eg. 1.1.0, 2.0.0
  string collection_version = 6;
}
