syntax = "proto3";

// buf:lint:ignore DIRECTORY_SAME_PACKAGE
package doordash.retail.catalog.v1;

import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option go_package = "github.com/doordash/services-protobuf/generated/doordash/retail/catalog/v1";
option java_generic_services = true;

// service for product match related apis
service CatalogProductMatchService {
  // normalize the upc codes
  rpc NormalizeUpc(NormalizeUpcRequest) returns (NormalizeUpcResponse);

  // upsert the product match feed
  rpc UpsertProductMatchFeed(UpsertProductMatchFeedRequest) returns (UpsertProductMatchFeedResponse);

  // get the product match feed
  rpc GetProductMatchFeed(GetProductMatchFeedRequest) returns (GetProductMatchFeedResponse);
}

// NormalizeUpcRequest
message NormalizeUpcRequest {
  // upc codes. ideally size < 50
  repeated string upc_codes = 1;
}

// NormalizeUpcResponse
message NormalizeUpcResponse {
  // normalized code
  NormalizedCodes normalized_codes = 1;
}

// UpsertProductMatchFeedRequest
message UpsertProductMatchFeedRequest {
  // business id
  string business_id = 1;
  // merchant supplied id
  string merchant_supplied_id = 2;
  // polished item name
  google.protobuf.StringValue item_name = 3;
  // raw item name before poslished
  google.protobuf.StringValue raw_item_name = 4;
  // size of the product
  string size = 5;
  // is the product from raw data set
  bool is_staging = 6;
  // batch id for this product when submission
  google.protobuf.StringValue batch_id = 9;
  // raw upcs
  repeated string raw_upcs = 10;
}

// UpsertProductMatchFeedResponse
message UpsertProductMatchFeedResponse {
  // created row's uuid
  string uuid = 1;
}

// GetProductMatchFeedRequest
message GetProductMatchFeedRequest {
  // business id
  string business_id = 1;
  // merchant supplied id
  string merchant_supplied_id = 2;
}

// GetProductMatchFeedResponse
message GetProductMatchFeedResponse {
  // product_match_feed
  ProductMatchFeed product_match_feed = 1;
}

// ProductMatchFeed
message ProductMatchFeed {
  // uuid
  string uuid = 1;
  // business id
  string business_id = 2;
  // merchant supplied id
  string merchant_supplied_id = 3;
  // polished item name
  google.protobuf.StringValue item_name = 4;
  // raw item name before poslished
  google.protobuf.StringValue raw_item_name = 5;
  // size of the product
  string size = 6;
  // is the product from raw data set
  bool is_staging = 7;
  // batch id for this product when submission
  google.protobuf.StringValue batch_id = 8;
  // raw upcs
  repeated string raw_upcs = 9;
  // normalized gtin 14
  NormalizedCodes gtin_14 = 10;
  // created at timestamp
  google.protobuf.Timestamp created_at = 11;
  // updated at timestamp
  google.protobuf.Timestamp updated_at = 12;
  // created by, optional
  google.protobuf.StringValue created_by = 13;
  // updated by, optional
  google.protobuf.StringValue updated_by = 14;
}

// normalized codes
message NormalizedCodes {
  // normalized gtin 14
  repeated ProductMatchNormalizedEntity normalized_codes = 1;
}

// ProductMatchNormalizedEntity
message ProductMatchNormalizedEntity {
  // original upc before nomalized
  string original_upc = 1;
  // is the upc a valid code
  bool is_valid = 2;
  // possible normalized gtin 14 output for a upc
  repeated ProductMatchNormalizedGtinCodes codes = 3;
  // error message if there is any
  google.protobuf.StringValue error_message = 4;
}

// ProductMatchNormalizedGtinCodes
message ProductMatchNormalizedGtinCodes {
  // nomalized gtin 14 code
  string gtin14 = 1;
  // the type of upc code is categorized as
  string from_type = 2;
}

// ProductMatchNormalizedUpcType
enum ProductMatchNormalizedUpcType {
  // UNSPECIFIC
  PRODUCT_MATCH_NORMALIZED_UPC_TYPE_UNSPECIFIED = 0;
  // UPC_A
  PRODUCT_MATCH_NORMALIZED_UPC_TYPE_UPC_A = 1;
  // UPC_E
  PRODUCT_MATCH_NORMALIZED_UPC_TYPE_UPC_E = 2;
  // EAN_8
  PRODUCT_MATCH_NORMALIZED_UPC_TYPE_EAN_8 = 3;
  // EAN_13
  PRODUCT_MATCH_NORMALIZED_UPC_TYPE_EAN_13 = 4;
  // GTIN 14
  PRODUCT_MATCH_NORMALIZED_UPC_TYPE_GTIN_14 = 5;
}
