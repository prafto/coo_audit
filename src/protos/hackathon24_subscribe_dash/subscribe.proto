syntax = "proto3";

package hackathon24_subscribe_dash.v1;

import "common/service_client_config.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";

option go_package = "github.com/doordash/services-protobuf/generated/hackathon24_subscribe_dash/api/v1";
option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.hackathon24_subscribe_dash.rpc.api";

// This is an example service for using Asgard server library in a Guice environment.
service Hackathon2024SubscribeAndSurpriseService {
  // Example Hermes client config. The options not listed here use Hermes default.
  // The following applies for all RPCs in the service, if not overridden on individual RPCs.

  // Timeout after 700 milliseconds.
  option (service_client.client_config).response_attempt_timeout_millis = 700;
  // Make a total 4 attempts (initial + three retries).
  option (service_client.client_config).retry_config.max_attempts = 4;
  // Add RESOURCE_EXHAUSTED to the set of retriable codes.
  option (service_client.client_config).retry_config.do_retry_grpc_code = 8;
  // Break the circuit if the error rate exceeds 80%.
  option (service_client.client_config).circuit_breaker_config.failure_rate_threshold = 0.8;
  // Ignore NOT_FOUND from circuit breaker error rate calculation.
  option (service_client.client_config).circuit_breaker_config.do_ignore_grpc_code = 5;

  // Return stream message
  rpc Subscribe(SubscribeRequest) returns (SubscribeResponse);

  // Return stream message
  rpc UnSubscribe(UnSubscribeRequest) returns (UnSubscribeResponse);
}

// Request
message SubscribeRequest {
  //List of any key values
  repeated KeyValue key_values = 1;
}

// equivalent to map object
message KeyValue {
  //key
  string key = 1;
  //value
  string value = 2;
}

// Request
message SubscribeResponse {
  //List of any key values
  repeated KeyValue key_values = 1;
}

// Request
message UnSubscribeRequest {
  //List of any key values
  repeated KeyValue key_values = 1;
}

// Response
message UnSubscribeResponse {
  //List of any key values
  repeated KeyValue key_values = 1;
}
