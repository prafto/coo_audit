syntax = "proto3";

package supply_demand_service;

import "common/date.proto";
import "common/service_client_config.proto";
import "dasher_service/dasher_pay_campaign.proto";
import "geo-intelligence/region.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.supply_demand_service";

service SupplyDemandService {
  option (service_client.client_config).service_name = "supply-demand-service";
  option (service_client.client_config).service_app = "web";
  option (service_client.client_config).response_attempt_timeout_millis = 2500;

  rpc GetStartingPointsSOSPrices(GetStartingPointsSOSPricesRequest) returns (GetStartingPointsSOSPricesResponse);
  rpc GetStartingPointsData(GetStartingPointsDataRequest) returns (GetStartingPointsDataResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 100;
  }
  rpc GetDashStatuses(GetDashStatusesRequest) returns (GetDashStatusesResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 100;
  }
  rpc GetFLFData(StartingPointIdRequest) returns (FLFData) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 200;
  }
  // version 1.128.0 and above for GetBulkSegmentedFLFData
  rpc GetBulkSegmentedFLFData(GetBulkSegmentedFLFDataRequest) returns (GetBulkSegmentedFLFDataResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 3000;
  }
  // version 1.128.0 and above for GetDasherPreferenceOptInRecommendation
  rpc GetDasherPreferenceOptInRecommendation(GetDasherPreferenceOptInRecommendationRequest) returns (GetDasherPreferenceOptInRecommendationResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 1000;
  }
  // Fetch FLF for every starting point
  rpc GetAllFLFData(GetAllFLFDataRequest) returns (stream GetAllFLFDataResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 2400;
  }
  // Fetch supply state for all submarkets that are undersupplied
  rpc GetAllSupplyState(GetAllSupplyStateRequest) returns (stream GetAllSupplyStateResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 3000;
  }
  // Fetch MMT data for every stating point
  rpc GetBulkMarketManagementToolData(GetMarketManagementToolDataRequest) returns (stream GetMarketManagementToolDataBulkResponse);
  rpc GetHotspots(GetHotspotsRequest) returns (GetHotspotsResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 100;
  }
  rpc GetHotspotsWithZones(GetHotspotsWithZonesRequest) returns (GetHotspotsWithZonesResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 200;
  }

  rpc GetCPIHBucket(GetCPIHBucketRequest) returns (GetCPIHBucketResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 100;
  }

  // Triggers notifications to Mx + Dx that in the near future the starting point may be shut down
  rpc NotifyPotentialShutdownStartingPoint(NotifyPotentialShutdownStartingPointRequest) returns (NotifyPotentialShutdownStartingPointResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 5000;
  }

  rpc ShutdownStartingPoint(ShutdownStartingPointRequest) returns (ShutdownStartingPointResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 5000;
  }

  // Deprecated - Use the ShutdownStartingPoint rpc instead
  rpc ShutdownStartingPoints(ShutdownStartingPointsRequest) returns (ShutdownStartingPointsResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 120000;
  }

  rpc EditShutdown(EditShutdownRequest) returns (EditShutdownResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 120000;
  }

  rpc GetGranularARMMRecords(GetGARMMRecordsRequest) returns (GetGARMMRecordsResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 1000;
  }
  rpc CreateGranularARMMRecords(CreateGARMMRecordsRequest) returns (CreateGARMMRecordsResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 1000;
  }
  rpc UpdateGranularARMMRecords(UpdateGARMMRecordsRequest) returns (UpdateGARMMRecordsResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 1000;
  }
  rpc DeactivateGranularARMMRecord(DeactivateGARMMRecordRequest) returns (DeactivateGARMMRecordResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 1000;
  }
  rpc CreatePointOfInterest(CreatePointOfInterestRequest) returns (CreatePointOfInterestResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 1000;
  }
  rpc UpdatePointOfInterest(UpdatePointOfInterestRequest) returns (UpdatePointOfInterestResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 1000;
  }

  rpc GetSwitchRecommendation(GetSwitchRecommendationRequest) returns (GetSwitchRecommendationResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 1000;
  }
  rpc DeclineSwitchRecommendation(DeclineSwitchRecommendationRequest) returns (DeclineSwitchRecommendationResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 1000;
  }
  rpc UpdateSkaiBudgets(UpdateSkaiBudgetsRequest) returns (UpdateSkaiBudgetsResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 120000;
  }
  rpc GetSegmentEligibility(GetSegmentEligibilityRequest) returns (GetSegmentEligibilityResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 500;
  }

  rpc GetSubmarketStateForDasherOnboarding(GetSubmarketStateForDasherOnboardingRequest) returns (GetSubmarketStateForDasherOnboardingResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 500;
  }

  // Fetch the wait time string for a given starting point
  rpc GetWaitTimeString(GetWaitTimeStringRequest) returns (GetWaitTimeStringResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 500;
  }

  // Fetch the stay busy string for a given starting point
  rpc GetStayBusyString(GetStayBusyStringRequest) returns (GetStayBusyStringResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 500;
  }
}

message GetStartingPointsSOSPricesRequest {
  repeated string starting_point_ids = 1;
}

message GetStartingPointsSOSPricesResponse {
  // This value is the SOS price in local currency cents
  map<string, int32> sos_prices = 1;
}

message GetStartingPointsDataRequest {
  repeated string starting_point_ids = 1;
}

message GetStartingPointsDataResponse {
  map<string, StartingPointsData> sp_data_map = 1;
}

message StartingPointsData {
  double flf = 1;
  double regularized_flf = 2;
  double smoothed_flf = 3;
  double ideal_flf = 4;
  double flf_minus_ideal_flf = 5;
  double flf_rate_of_change = 6;
  double region_snapshot_asap_time = 7;
  double region_snapshot_total_onshift_dashers = 8;
  double region_snapshot_total_busy_dashers = 9;
  double region_snapshot_total_outstanding_orders = 10;
  double region_snapshot_total_idle_dashers = 11;
}

message GetDashStatusesRequest {
  repeated string starting_point_ids = 1;
  repeated string vehicle_type_ids = 2;
  repeated TimeSlot time_slots = 3;
  bool is_active_shift = 4;
  google.protobuf.StringValue dasher_id = 5;
  map<string, VehicleIdTimeModeEligibility> starting_point_id_to_vehicle_id_time_mode_map = 6;
  google.protobuf.Int64Value dasher_location_starting_point_id = 7;
  google.protobuf.BoolValue should_populate_display_items = 8;
}

message TimeSlot {
  google.protobuf.Timestamp end_time = 1;

  google.protobuf.Timestamp start_time = 2;

  string starting_point_id = 3;

  string vehicle_type_id = 4;
}

message VehicleIdTimeModeEligibility {
  map<string, google.protobuf.BoolValue> vehicle_id_to_time_mode_eligibility = 1;
}

message GetDashStatusesResponse {
  map<string, StartingPointDashStatuses> dash_status_by_starting_point = 1;
}

message StartingPointDashStatuses {
  map<string, VehicleDashStatus> dash_status_by_vehicle_type = 1;
}

message VehicleDashStatus {
  enum Busyness {
    UNKNOWN = 0;
    NOT_BUSY = 1;
    NORMAL = 2;
    BUSY = 3;
    VERY_BUSY = 4;
    NORMAL_FOR_HQDX = 5;
    BUSY_DISREGARD_CAPS = 6;
  }
  Busyness busyness = 1;
  map<string, string> panel_text = 2;
  repeated SuggestedShift suggested_shifts = 3;
  repeated string display_items = 4;
  repeated EarningsMode earnings_mode_list = 5;
  WaitlistInfo waitlist_info = 6;
  google.protobuf.StringValue wait_time_header = 7;
  // Whether to bypass caps
  google.protobuf.BoolValue should_bypass_caps = 8;
  // Whether to restrict caps
  google.protobuf.BoolValue should_restrict_caps = 9;
}

message WaitlistInfo {
  map<string, string> panel_text = 1;
  google.protobuf.StringValue learn_more_url = 2;
  google.protobuf.StringValue learn_more_text = 3;
  ProgressBarInfo progress_bar = 4;
}

message ProgressBarInfo {
  google.protobuf.Int32Value goal = 1;
  google.protobuf.Int32Value progress = 2;
  google.protobuf.StringValue text = 3;
}

message EarningsMode {
  enum EarningsModeId {
    ORDER_MODE = 0;
    TIME_MODE = 1;
  }
  EarningsModeId id = 1;
  HeatmapAnnotation heatmap_annotation = 2;
  HeatmapPolygonColor heatmap_polygon_color = 3;
}

enum DisplayColor {
  GRAY_FILL = 0;
  GRAY_STROKE = 1;
  PINK_FILL = 2;
  PINK_STROKE = 3;
  PINK_BUBBLE = 4;
  RED_FILL = 5;
  RED_STROKE = 6;
  RED_BUBBLE = 7;
  MAROON_FILL = 8;
  MAROON_STROKE = 9;
  MAROON_BUBBLE = 10;
  YELLOW_FILL = 11;
  YELLOW_STROKE = 12;
  YELLOW_BUBBLE = 13;
}

message HeatmapAnnotation {
  google.protobuf.StringValue icon = 1;
  DisplayColor color = 2;
  google.protobuf.StringValue primary_text = 3;
  google.protobuf.StringValue secondary_text = 4;
}

message HeatmapPolygonColor {
  DisplayColor fill_color = 1;
  DisplayColor stroke_color = 2;
}

message SuggestedShift {
  google.protobuf.Timestamp start_time = 1;
  google.protobuf.Timestamp end_time = 2;
}

message StartingPointIdRequest {
  google.protobuf.StringValue id = 1;
}

message FLFData {
  google.protobuf.DoubleValue flf = 1;
  google.protobuf.DoubleValue smoothed_flf = 2;
  google.protobuf.DoubleValue regularized_flf = 3;
  google.protobuf.DoubleValue ideal_flf = 4;
  google.protobuf.DoubleValue max_flf = 5;
  google.protobuf.DoubleValue warning_flf = 6;
  google.protobuf.DoubleValue dangerous_flf = 7;
  google.protobuf.DoubleValue critical_flf = 8;
  VehicleDashStatus.Busyness busyness_level = 9;
}

message GetAllFLFDataRequest {}

message GetAllFLFDataResponse {
  map<string, FLFData> flf_data_by_starting_point = 1;
}

message GetAllSupplyStateRequest {}

message GetAllSupplyStateResponse {
  enum SupplyState {
    UNKNOWN = 0;
    UNDERSUPPLIED = 1;
  }
  map<string, SupplyState> supply_state_by_submarket_id = 1;
}

message GetMarketManagementToolDataRequest {
  string market_id = 1;
  string submarket_id = 2;
}

message MarketManagementToolDataResponse {
  google.protobuf.Timestamp created_at = 1;
  google.protobuf.StringValue starting_point_id = 2;
  google.protobuf.StringValue market_id = 3;
  google.protobuf.StringValue submarket_id = 4;
  google.protobuf.StringValue starting_point_name = 5;
  google.protobuf.StringValue market_name = 6;
  google.protobuf.StringValue market_short_name = 7;
  google.protobuf.StringValue submarket_name = 8;
  google.protobuf.Int32Value num_next_shift = 9;
  google.protobuf.Int32Value num_outstanding_deliveries = 10;
  google.protobuf.Int32Value num_active_shifts = 11;
  google.protobuf.Int32Value num_busy_shifts = 12;
  google.protobuf.DoubleValue auto_sos_price = 13;
  google.protobuf.DoubleValue current_peak_pay = 14;
  google.protobuf.DoubleValue flf = 15;
  google.protobuf.DoubleValue regularized_flf = 16;
  google.protobuf.DoubleValue ideal_flf = 17;
  google.protobuf.DoubleValue max_flf = 18;
  google.protobuf.BoolValue is_killed = 19; // as of version 1.67.1, please use v2 kill status values (23 to )
  google.protobuf.DoubleValue warning_flf = 20;
  google.protobuf.DoubleValue dangerous_flf = 21;
  google.protobuf.DoubleValue critical_flf = 22;
  StartingPointStatusV2 statusV2 = 23; // directly porting in the shutdown v2 statuses from SP objects
}

message GetMarketManagementToolDataBulkResponse {
  map<string, MarketManagementToolDataResponse> mmt_data_by_starting_point = 1;
}

message GetHotspotsRequest {
  google.protobuf.StringValue dasher_id = 1;
  google.protobuf.StringValue starting_point_id = 2;
  google.protobuf.DoubleValue lat = 3;
  google.protobuf.DoubleValue lng = 4;
}

message GetHotspotsResponse {
  repeated Hotspot hotspots = 1;
}

message Hotspot {
  google.protobuf.Timestamp created_at = 1;
  google.protobuf.StringValue starting_point_id = 2;
  google.protobuf.StringValue title = 3;
  google.protobuf.StringValue description = 4;
  google.protobuf.DoubleValue lat = 5;
  google.protobuf.DoubleValue lng = 6;
  google.protobuf.DoubleValue weight = 7;
  google.protobuf.Timestamp next_refresh_at = 8;
}

message GetHotspotsWithZonesRequest {
  google.protobuf.StringValue dasher_id = 1;
  google.protobuf.StringValue starting_point_id = 2;
  google.protobuf.DoubleValue lat = 3;
  google.protobuf.DoubleValue lng = 4;
  google.protobuf.Int64Value shift_id = 5;
}

message GetHotspotsWithZonesResponse {
  repeated HotspotWithZones hotspots_with_zones = 1;
  repeated PointOfInterest points_of_interest = 2;
  WaitTimeInfo wait_time_info = 3;
  google.protobuf.Timestamp next_refresh_at = 4;
}

message WaitTimeInfo {
  LookingForOrdersDisplay looking_for_orders_display = 1;
  InfoSheet info_sheet = 2;
}

message LookingForOrdersDisplay {
  google.protobuf.StringValue icon_asset = 1;
  google.protobuf.StringValue display_text = 2;
  google.protobuf.StringValue tooltip_text = 3;
}

message InfoSheet {
  google.protobuf.StringValue display_title = 1;
  google.protobuf.StringValue display_body = 2;
  google.protobuf.StringValue button_text = 3;
}

message Location {
  google.protobuf.StringValue name = 1;
  google.protobuf.DoubleValue lat = 2;
  google.protobuf.DoubleValue lng = 3;
  google.protobuf.StringValue description = 4;
}

message Zone {
  google.protobuf.StringValue polyline = 1;
  google.protobuf.DoubleValue busyness = 2;
}

message HotspotWithZones {
  google.protobuf.StringValue starting_point_id = 1;
  google.protobuf.StringValue title = 2;
  google.protobuf.StringValue description = 3;
  google.protobuf.DoubleValue lat = 4;
  google.protobuf.DoubleValue lng = 5;
  google.protobuf.Timestamp next_refresh_at = 6;
  repeated Location locations = 7;
  repeated Zone zones = 8;
}

message GetCPIHBucketRequest {
  google.protobuf.Timestamp pay_campaign_activation_time = 1;
  google.protobuf.StringValue dasher_id = 2;
  enum PayCampaignType {
    PROACTIVE = 0;
    REACTIVE = 1;
  }
  PayCampaignType pay_campaign_type = 3;
}

message GetCPIHBucketResponse {
  google.protobuf.StringValue bucket = 1;
}

// Request to notify Mx+Dx of a potential upcoming shutdown
message NotifyPotentialShutdownStartingPointRequest {
  // The ID of the starting point that may be shut down
  string starting_point_id = 1;
  // When the notifications should be sent out.
  // If set to Blank, this will cancel any existing notification (or return an error if none exist for the SP)
  google.protobuf.Timestamp send_time = 2;
  // The target audience for the notification (Mx, Dx, All)
  string audience = 3;
  // If true, pickup orders will still be enabled in the SP. If false, no orders are allowed
  bool enable_pickup_only = 4;
  // The reason for shutting down the SP (i.e. Weather, Curfew, Emergency...)
  string shutdown_reason = 5;
  // When the Shutdown is scheduled to begin.
  // [Optional field] If set to Blank, the shutdown start time is not yet known
  google.protobuf.Timestamp shutdown_start_time = 6;
  // When the Shutdown is scheduled to end.
  // [Optional field] If set to Blank, the shutdown end time is not yet known
  google.protobuf.Timestamp shutdown_end_time = 7;
}

// Response for notifying Mx+Dx of a potential upcoming shutdown
message NotifyPotentialShutdownStartingPointResponse {
  // If true, the request was successful. If false, error_message should be populated
  bool is_success = 1;
  // Describes the reason the request failed.  Blank if request was successful.
  string error_message = 2;
}

message ShutdownStartingPointRequest {
  // The ID of the starting point to shut down
  string starting_point_id = 1;
  // When the shutdown is scheduled to start
  google.protobuf.Timestamp start_time = 2;
  // When the shutdown is scheduled to end
  google.protobuf.Timestamp end_time = 3;
  // If true, pickup orders will still be enabled in the SP. If false, no orders are allowed
  bool enable_pickup_only = 4;
  // The reason for shutting down the SP (i.e. Weather, Curfew, Emergency...)
  string shutdown_reason = 5;
  // If true, no communications are sent to dashers or merchants about the shutdown.
  // Default behavior is to send comms on shutdown and on re-open
  bool skip_comms = 6;
}

message ShutdownStartingPointResponse {
  bool is_success = 1;
  string error_message = 2;
  double shutdown_id = 3;
}

// Deprecated - Use the ShutdownStartingPoint rpc instead
message ShutdownStartingPointsRequest {
  repeated string starting_point_ids = 1;
  google.protobuf.Timestamp start_time = 2;
  google.protobuf.Timestamp end_time = 3;
  bool enable_pickup_only = 4;
}

// Deprecated - Use the ShutdownStartingPoint rpc instead
message ShutdownStartingPointsResponse {
  bool is_success = 1;
  string error_message = 2;
  double shutdown_id = 3;
}

message EditShutdownRequest {
  reserved 1;
  // [deprecated] Users are no longer allowed to modify the affected starting points
  reserved "starting_point_ids";
  // The new start time for the shutdown
  google.protobuf.Timestamp start_time = 2;
  // The new end time for the shutdown
  google.protobuf.Timestamp end_time = 3;
  // True if pickup should be enabled (partial shutdown)
  bool enable_pickup_only = 4;
  // The ID of the shutdown we wish to edit
  double shutdown_id = 5;
  // The new reason for the shutdown
  string shutdown_reason = 6;
  // If true, no communications are sent to dashers or merchants about the shutdown.
  // Default behavior is to send comms on shutdown and on re-open
  bool skip_comms = 7;
}

message EditShutdownResponse {
  bool is_success = 1;
  string error_message = 2;
  double shutdown_id = 3;
}

message GranularARMMRecord {
  google.protobuf.StringValue id = 1;
  google.protobuf.Timestamp datetime_created = 2;
  google.protobuf.StringValue poc_email = 3;
  google.protobuf.Int32Value starting_point_id = 4;
  google.protobuf.Int32Value starting_window = 5;
  google.protobuf.Int32Value ending_window = 6;
  google.protobuf.BoolValue adjust_caps = 7;
  google.protobuf.BoolValue adjust_caps_v2 = 8;
  google.protobuf.BoolValue message_dashers = 9;
  google.protobuf.BoolValue add_incentive = 10;
  google.protobuf.BoolValue is_active = 11;
  google.protobuf.Timestamp start_date = 12;
  google.protobuf.Timestamp expiry_date = 13;
}

message GetGARMMRecordsRequest {
  google.protobuf.Int32Value starting_point_id_filter = 1;
  google.protobuf.Timestamp datetime_created_filter = 2;
}

message GetGARMMRecordsResponse {
  repeated GranularARMMRecord garmmRecords = 1;
}

message CreateGARMMRecordsRequest {
  google.protobuf.StringValue poc_email = 1;
  google.protobuf.Int32Value starting_point_id = 2;
  google.protobuf.Int32Value starting_window = 3;
  google.protobuf.Int32Value ending_window = 4;
  google.protobuf.BoolValue adjust_caps = 5;
  google.protobuf.BoolValue adjust_caps_v2 = 6;
  google.protobuf.BoolValue message_dashers = 7;
  google.protobuf.BoolValue add_incentive = 8;
  google.protobuf.BoolValue is_active = 9; // default set to true
  google.protobuf.Timestamp start_date = 10; // optional
  google.protobuf.Timestamp expiry_date = 11; // optional
}

message CreateGARMMRecordsResponse {
  GranularARMMRecord garmmRecord = 1;
}

message UpdateGARMMRecordsRequest {
  google.protobuf.StringValue id = 1;
  google.protobuf.Timestamp datetime_created = 2;
  google.protobuf.StringValue poc_email = 3;
  google.protobuf.Int32Value starting_point_id = 4;
  google.protobuf.Int32Value starting_window = 5;
  google.protobuf.Int32Value ending_window = 6;
  google.protobuf.BoolValue adjust_caps = 7;
  google.protobuf.BoolValue adjust_caps_v2 = 8;
  google.protobuf.BoolValue message_dashers = 9;
  google.protobuf.BoolValue add_incentive = 10;
  google.protobuf.BoolValue is_active = 11;
  google.protobuf.Timestamp start_date = 12; // optional
  google.protobuf.Timestamp expiry_date = 13; // optional
}

message UpdateGARMMRecordsResponse {
  GranularARMMRecord garmmRecord = 1;
}

message DeactivateGARMMRecordRequest {
  google.protobuf.StringValue id = 1;
}

message DeactivateGARMMRecordResponse {
  GranularARMMRecord garmmRecord = 1;
}

message ShutdownEvent {
  google.protobuf.StringValue starting_point_id = 1;
  double shutdown_id = 2;
  enum ShutdownEventType {
    SCHEDULE = 0;
    TRIGGER = 1;
    CLOSE = 2;
  }
  ShutdownEventType eventType = 3;
  bool is_successful = 4;
  string error_message = 5;
  google.protobuf.Timestamp scheduled_start_time = 6;
  google.protobuf.Timestamp scheduled_end_time = 7;

  string existing_delivery_hours = 8;
}

message CreatePointOfInterestRequest {
  google.protobuf.Int32Value starting_point_id = 1;
  google.protobuf.StringValue name = 2;
  google.protobuf.DoubleValue lat = 3;
  google.protobuf.DoubleValue lng = 4;
  google.protobuf.StringValue description = 5;
  PointOfInterestType type = 6;
  google.protobuf.BoolValue is_active = 7;
  google.protobuf.Struct info = 8; // unstructured json metadata for given type
}

message CreatePointOfInterestResponse {
  PointOfInterest point_of_interest = 1;
  google.protobuf.Timestamp created_at = 2;
}

message UpdatePointOfInterestRequest {
  google.protobuf.StringValue point_of_interest_uuid = 1;
  google.protobuf.BoolValue is_active = 2;
  google.protobuf.Struct info = 3;
}

message UpdatePointOfInterestResponse {
  google.protobuf.StringValue point_of_interest_uuid = 1;
  google.protobuf.BoolValue is_active = 2;
  google.protobuf.Struct info = 3;
  google.protobuf.Timestamp updated_at = 9;
}

message PointOfInterest {
  google.protobuf.StringValue point_of_interest_uuid = 1;
  google.protobuf.Int32Value starting_point_id = 2;
  google.protobuf.DoubleValue lat = 3;
  google.protobuf.DoubleValue lng = 4;
  google.protobuf.StringValue name = 5;
  google.protobuf.StringValue description = 6;
  google.protobuf.Struct info = 7;
  google.protobuf.BoolValue is_active = 8;
  PointOfInterestType poi_type = 9;
}

enum PointOfInterestType {
  UNKNOWN = 0;
  // New Delivery Model Hub ( Ex: FIFO enabled Stores)
  NDM_HUB = 1;
  DASHMART = 2;
}

message FutureBusynessLogEvent {
  google.protobuf.Timestamp active_date = 1;
  google.protobuf.Int32Value starting_point_id = 2;
  google.protobuf.Int32Value start_hour = 3;
  google.protobuf.Int32Value end_hour = 4;
  google.protobuf.Int32Value busyness_level = 5;
  google.protobuf.DoubleValue undersupply_prediction = 6;
}

message GetSwitchRecommendationRequest {
  google.protobuf.Int64Value shift_id = 1;
  google.protobuf.Int32Value shift_starting_point_id = 2;
  google.protobuf.BoolValue is_dasher_in_shift_sp = 3;
  //dasher location lat lng
  google.protobuf.DoubleValue lat = 4;
  google.protobuf.DoubleValue lng = 5;
}

message GetSwitchRecommendationResponse {
  google.protobuf.BoolValue is_switch_recommended = 1;
  google.protobuf.StringValue banner_message = 2;
  google.protobuf.StringValue tip_message = 3;
  google.protobuf.StringValue recommendation_timer_message = 4;
  google.protobuf.Int32Value recommendation_timer_seconds = 5;
  google.protobuf.StringValue switch_info_descriptor_message = 6;
  repeated StartingPointSwitchInfo starting_point_switch_info = 7;
  google.protobuf.StringValue title = 8;
  google.protobuf.StringValue subtitle = 9;
}

message StartingPointSwitchInfo {
  google.protobuf.StringValue name = 1;
  google.protobuf.Int32Value id = 2;
  repeated string encoded_polyline = 3;
  VehicleDashStatus.Busyness busyness_level = 4;
  dasher_service.pay_campaign.Boost active_boost = 5;
  google.protobuf.StringValue distance_message = 6;
  repeated SwitchSummaryInfo summary_info = 7;
  repeated SwitchConfirmationInfo confirmation_info = 8;
  StartingPointLocation location = 9;
}

message StartingPointLocation {
  google.protobuf.DoubleValue lat = 1;
  google.protobuf.DoubleValue lng = 2;
}

message SwitchSummaryInfo {
  enum SwitchSummaryInfoType {
    SWITCH_SUMMARY_INFO_TYPE_UNSPECIFIED = 0;
    SWITCH_SUMMARY_INFO_TYPE_INCENTIVE = 1;
    SWITCH_SUMMARY_INFO_TYPE_BUSYNESS = 2;
    SWITCH_SUMMARY_INFO_TYPE_PLAIN_TEXT = 3;
  }
  SwitchSummaryInfoType type = 1;
  google.protobuf.StringValue message = 2;
  google.protobuf.StringValue duration = 3;
}

message SwitchConfirmationInfo {
  enum SwitchConfirmationInfoType {
    SWITCH_CONFIRMATION_INFO_TYPE_UNSPECIFIED = 0;
    SWITCH_CONFIRMATION_INFO_TYPE_DISTANCE = 1;
    SWITCH_CONFIRMATION_INFO_TYPE_HOTSPOT = 2;
    SWITCH_CONFIRMATION_INFO_TYPE_SHIFT_SCHEDULE = 3;
    SWITCH_CONFIRMATION_INFO_TYPE_BUSYNESS = 4;
  }
  SwitchConfirmationInfoType type = 1;
  google.protobuf.StringValue message = 2;
}

message DeclineSwitchRecommendationRequest {
  google.protobuf.Int64Value shift_id = 1;
}

message DeclineSwitchRecommendationResponse {
  google.protobuf.Int64Value shift_id = 1;
}

message SwitchRecommendationLogEvent {
  google.protobuf.Timestamp recommended_at = 1;
  google.protobuf.Int32Value dasher_id = 2;
  google.protobuf.Int64Value shift_id = 3;
  google.protobuf.StringValue recommendation_type = 4;
  google.protobuf.Int32Value current_shift_sp_id = 5;
  google.protobuf.Int32Value current_location_sp_id = 6;
  google.protobuf.StringValue current_shift_sp_predicted_busyness = 7;
  google.protobuf.StringValue current_shift_sp_predicted_busyness_duration = 8;
  google.protobuf.Int32Value current_shift_sp_peak_pay_amount = 9;
  google.protobuf.StringValue recommendation_details = 10;
}

message SwitchRecommendationOutcomeLogEvent {
  google.protobuf.Timestamp outcome_recorded_at = 1;
  google.protobuf.Int32Value dasher_id = 2;
  google.protobuf.Int64Value shift_id = 3;
  google.protobuf.Int32Value current_shift_sp_id = 4;
  google.protobuf.BoolValue is_switch_accepted = 5;
  google.protobuf.Int32Value switched_to_sp_id = 6;
}

enum SupplySegment {
  SUPPLY_SEGMENT_UNSPECIFIED = 0;
  SUPPLY_SEGMENT_ALCOHOL = 1;
  SUPPLY_SEGMENT_PIZZA = 2;
  SUPPLY_SEGMENT_SHOP_AND_DELIVER = 3;
  SUPPLY_SEGMENT_CASH_ON_DELIVERY = 4;
  SUPPLY_SEGMENT_CORE = 5;
}

enum DataHorizon {
  DATA_HORIZON_UNSPECIFIED = 0;
  DATA_HORIZON_REAL_TIME = 1;
  DATA_HORIZON_LAST_7_DAY_AVERAGE = 2;
  DATA_HORIZON_FUTURE_30_60_MINUTE_AVERAGE = 3;
  DATA_HORIZON_FUTURE_60_90_MINUTE_AVERAGE = 4;
  DATA_HORIZON_FUTURE_90_120_MINUTE_AVERAGE = 5;
}

message GetBulkSegmentedFLFDataRequest {
  repeated string starting_points = 1;
  repeated SupplySegment supply_segments = 2;
  DataHorizon data_horizon = 3;
}

message SegmentedFLFData {
  SupplySegment supply_segment = 1;
  FLFData flf_data = 2;
  DataHorizon data_horizon = 3;
}

message ListOfSegmentedFLFData {
  repeated SegmentedFLFData segmented_flfs = 1;
}

message GetBulkSegmentedFLFDataResponse {
  map<string, ListOfSegmentedFLFData> segmented_flfs_by_sp_id = 1;
}

message GetDasherPreferenceOptInRecommendationRequest {
  repeated SupplySegment requested_opt_in_segments = 1;
  DataHorizon data_horizon = 2;
  google.protobuf.Int64Value dasher_id = 3;
  google.protobuf.Int64Value sp_id = 4;
}

message GetDasherPreferenceOptInRecommendationResponse {
  repeated SegmentedFLFData recommended_opt_in_segments = 1;
}

message SkaiRecord {
  string profile_id = 1;
  string entity_id = 2;
  string entity_type = 3;
  google.protobuf.DoubleValue budget = 4;
}

message UpdateSkaiBudgetsRequest {
  repeated SkaiRecord skai_records = 1;
}

message UpdateSkaiBudgetsResponse {
  repeated string ids = 1;
}

message SegmentEligibilityContext {
  google.protobuf.Int64Value starting_point_id = 1;
}

message SegmentDasherEligibility {
  SupplySegment supply_segment = 1;
  google.protobuf.BoolValue is_dasher_eligible = 2;
}

message SegmentDeliveryEligibility {
  SupplySegment supply_segment = 1;
  google.protobuf.BoolValue is_delivery_eligible = 2;
}

message GetSegmentEligibilityRequest {
  repeated SupplySegment supply_segments = 1;
  google.protobuf.Int64Value delivery_id = 2;
  google.protobuf.Int64Value dasher_id = 3;
  SegmentEligibilityContext segment_eligibility_context = 4;
}

message GetSegmentEligibilityResponse {
  repeated SegmentDeliveryEligibility segment_delivery_eligibility = 1;
  repeated SegmentDasherEligibility segment_dasher_eligibility = 2;
}

message LimitedHeatmapLoaded {
  // id of dasher
  google.protobuf.Int64Value dasher_id = 1;
  // dasher's creation timestamp (also what's used for determining the dasher's delivery thresholds)
  google.protobuf.Timestamp dasher_created_at = 2;
  // spid of dasher's location (null if dx not in any SP)
  google.protobuf.Int64Value dasher_location_starting_point_id = 3;
  // json list of sp ids that are in limited status
  google.protobuf.StringValue limited_starting_point_ids = 4;
}

message GetSubmarketStateForDasherOnboardingRequest {
  // submarket id input by the dasher applicant
  google.protobuf.Int32Value submarket_id = 1;
  // id of the dasher applicant
  google.protobuf.Int64Value dasher_applicant_id = 2;
}

message GetSubmarketStateForDasherOnboardingResponse {
  // which template will be used
  OnboardingBlockingPageTemplate display_template = 1;
  // the data fields needed to populate the FE page
  oneof display_metadata {
    // metadata related to the limited page
    LimitedWarningPageMetadata limited_warning = 2;
    // metadata related to the hard block page
    HardBlockPageMetadata hard_block = 3;
  }
}

enum OnboardingBlockingPageTemplate {
  UNSPECIFIED = 0;
  NO_BLOCKING = 1;
  LIMITED_WARNING = 2;
  HARD_BLOCK = 3;
}

message LimitedWarningPageMetadata {
  // name of the sm
  google.protobuf.StringValue submarket_name = 1;
  // LTD count needed to remove the limited constraint
  google.protobuf.Int64Value delivery_threshold = 2;
}

message HardBlockPageMetadata {
  // name of the sm
  google.protobuf.StringValue submarket_name = 1;
}

// Request to get the wait time string for a given starting point
message GetWaitTimeStringRequest {
  // The starting point id for which the wait time string is requested
  google.protobuf.Int64Value starting_point_id = 1;
}

// Response to get the wait time string for a given starting point
message GetWaitTimeStringResponse {
  // The wait time string for the starting point
  google.protobuf.StringValue wait_time_string = 1;
}

// Request to get the stay busy string for a given starting point
message GetStayBusyStringRequest {
  // The starting point id for which the stay busy string is requested
  google.protobuf.Int64Value starting_point_id = 1;
}

// Response to get the stay busy string for a given starting point
message GetStayBusyStringResponse {
  // The stay busy string for the starting point
  google.protobuf.StringValue stay_busy_string = 1;
}
