syntax = "proto3";

// buf:lint:ignore DIRECTORY_SAME_PACKAGE
package supply_automation.v1;

import "doordash.api/annotations.proto";
import "doordash.api/client.proto";
import "doordash.api/field_validate.proto";
import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option go_package = "github.com/doordash/services-protobuf/generated/supply_automation/api/v1";
option java_generic_services = true;
option java_multiple_files = true;
option java_outer_classname = "RunMobilizerServiceProto";
option java_package = "com.doordash.supply_automation.v1";

// RunMobilizerService runs mobilizer in databricks
service RunMobilizerService {
  option (doordash.api.service) = {
    name: "supply-automation"
    url: "supply-automation-api.service.prod.ddsd"
    port: 50051
    name_spaces: ["supply-automation"]
    owner: {
      id: "supply-automation"
      name: "supply-automation"
      slack_channel: "#dx-supply-automation-ui"
      email_alias: "supply-automation-eng@doordash.com"
    }
    target_products: [INTERNAL] /* Full list https://github.com/doordash/services-protobuf/blob/master/protos/doordash.api/common.proto */
  };

  // Run the mobilizer
  rpc RunMobilizerV2(RunMobilizerV2Request) returns (RunMobilizerV2Response);
}

// Request
message RunMobilizerV2Request {
  // Inputs to create
  repeated CreateInputs create_inputs = 1;
  // Optimizers to run
  repeated OptimizerRunV2 optimizer_runs = 2;
}

// Response
message RunMobilizerV2Response {
  // S3 path if uploaded successfully
  google.protobuf.StringValue s3_path = 1;
}

// Create inputs
message CreateInputs {
  // process
  InputProcess process = 1;
  // windows
  repeated RegionDateWindow region_date_windows = 2;
}

// input process
enum InputProcess {
  // unspecified
  INPUT_PROCESS_UNSPECIFIED = 0;

  // joint
  INPUT_PROCESS_JOINT = 1;

  // regional
  INPUT_PROCESS_REGIONAL = 2;
}

// region date window
message RegionDateWindow {
  // region
  google.protobuf.StringValue region = 1;
  // start date
  google.protobuf.Timestamp start_date = 2;
  // end date
  google.protobuf.Timestamp end_date = 3;
}

// optimizer run
message OptimizerRunV2 {
  // optimizer
  Optimizer optimizer = 1;
  // region budgets
  repeated RegionBudget region_budgets = 2;
}

// Optimizers
enum Optimizer {
  // unspecified
  OPTIMIZER_UNSPECIFIED = 0;

  // opt 1
  OPTIMIZER_JOINT_OPTIMIZER_DAILY = 1;

  // opt 2
  OPTIMIZER_JOINT_OPTIMIZER_MULTIDAY = 2;

  // opt 3
  OPTIMIZER_REGIONAL_OPTIMIZER_DAILY = 3;

  // opt 4
  OPTIMIZER_REGIONAL_OPTIMIZER_MULTIDAY = 4;
}

// region budget
message RegionBudget {
  // region
  google.protobuf.StringValue region = 1;
  // budget
  oneof budget {
    // daily budgets
    DailyBudgets daily_budgets = 2;
    // multiday budgets
    MultidayBudgets multiday_budgets = 3;
  }
}

// daily budgets
message DailyBudgets {
  // date budgets
  repeated DateBudgets date_budgets = 1;
}

// date budgets
message DateBudgets {
  // date
  google.protobuf.Timestamp date = 1;
  // budgets
  repeated google.protobuf.FloatValue budgets = 2;
}

// multiday budgets
message MultidayBudgets {
  // start date
  google.protobuf.Timestamp start_date = 1;
  // end date
  google.protobuf.Timestamp end_date = 2;
  // budgets
  repeated google.protobuf.FloatValue budgets = 3;
}
