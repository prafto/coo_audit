syntax = "proto3";
package feed_service;

import "common/money.proto";
import "common/restriction_rules.proto";
import "feed_service/common.proto";
import "feed_service/retail_common.proto";
import "google/protobuf/wrappers.proto";

option java_multiple_files = true;
option java_outer_classname = "FacetFeedCustom";
option java_package = "com.doordash.feed_service.data.facet.custom";

/*
   Messages here define schema of "custom" fields on some component Facets
   Do not use proto wrappers in this file (messes with proto -> Struct conversion on response)
   Example:
   message Example {
     bool field = 1;
   } would get converted to
   JSON: {
     "field": 1
   }
   message ExampleW {
     google.protobuf.BoolValue field_w = 1;
   } would (because of how proto wrappers are defined) get converted to
   JSON: {
     "field_w": {
       "value": 1
     }
   }
*/

// LandingPage Header Custom schema
message HeaderLPHeaderCustom {
  // background color as 24bit RGB
  string background_color = 1;

  // light vs dark text
  bool use_light_content = 2;
}

// Carousel Standard Custom schema
message CarouselStandardCustom {
  // signal client to show navigation buttons for the carousel
  bool show_inline_nav_buttons = 1;

  // signal client to auto scroll the carousel
  double auto_scroll_interval = 2;

  // signal client configs about auto scrolling the homepage banners
  BannerAutoScrollConfig homepage_banner_auto_scroll_config = 3;

  // signal client to a bottom padding for facet
  bool should_include_bottom_padding = 4;
}

// Banner Auto Scroll Config schema
message BannerAutoScrollConfig {
  google.protobuf.DoubleValue scrolling_interval = 1;
  google.protobuf.DoubleValue first_item_first_scroll_interval = 2;
  google.protobuf.DoubleValue first_item_default_scroll_interval = 3;
  google.protobuf.BoolValue should_peek = 4;
}

// Store Row Custom schema
message RowStoreCustom {
  // Ratings object
  Rating rating = 1;

  // is_currently_available
  bool is_currently_available = 2;

  // badges
  repeated Badge badges = 3;

  // show_image_at_the_bottom
  bool show_image_at_the_bottom = 4;

  // is_scheduled_available
  bool is_scheduled_available = 5;

  // Ratings object
  message Rating {
    // average_rating
    double average_rating = 1;

    // num_ratings as display string (displayed as-is)
    string display_num_ratings = 2;
  }
}

// Cuisines Filter Custom schema
message CuisinesFilterCustom {
  // cuisines
  repeated Cuisine cuisines = 1;

  // flag controlling whether multiple selection is allowed
  bool supports_multi_select = 2;
}

// Cuisine struct under Cuisines Filter Custom
message Cuisine {
  string id = 1;
  string name = 2;
  string friendly_name = 3;
  string cover_image_url = 4;
  string localized_friendly_name = 5;
  string animated_cover_image_url = 6;
}

// Filter Custom schema
message FilterCustom {
  // fields for range and/or collection filter
  repeated FilterValue allowed_values = 1;
  repeated FilterValue default_values = 2;
  string range_direction = 3;

  // fields for binary filter
  bool is_pickup_type = 4;
}

// Value struct under Filter Custom
message FilterValue {
  string query_value = 1;
  string display_name = 2;
}

message BannerComponentCustom {
  reserved 6;
  reserved "aspect_ratio";
  Styling styling = 1;
  map<string, Styling> extra_styles = 2;
  CmsButton cms_button = 3;
  repeated Logos logos = 4;
  MultiMxMobileButton button = 5;

  message Styling {
    BannerFont font = 1;
    string color = 2;
    string alignment = 3;
    CopyInset copy_inset = 4; // deprecated
    bool is_underlined = 5;
    CopyInset copy_insets = 6;
    string background_color = 7;
    CopyInset percentage_copy_insets = 8;
    BannerFont subtitle_font = 9;
    string subtitle_color = 10;
  }

  message BannerFont {
    double size = 1;
    string family = 2;
  }

  message CopyInset {
    double top = 1;
    double left = 2;
    double right = 3;
    double bottom = 4;
  }

  message CmsButton {
    CmsButtonStates states = 1;
    string message_success = 2;
    string message_failure = 3;
    string action = 4;
    Metadata metadata = 5;
    CopyInset percentage_insets = 6;
  }

  message CmsButtonStates {
    CmsButtonState default_button_state = 1;
    CmsButtonState success_button_state = 2;
  }

  message CmsButtonState {
    string title_color = 1;
    string title = 2;
    string icon = 3;
    string background_color = 4;
  }

  message Metadata {
    string campaign_id = 1;
  }

  message Logos {
    string uri = 1;
  }

  message MultiMxMobileButton {
    string title = 1;
    string title_color = 2;
    string background_color = 3;
  }
}

message ItemSteppersCustom {
  reserved 20;
  string menu_id = 1;
  string item_id = 2;
  string store_id = 3;
  money.MonetaryFields price = 4;
  string name = 5;
  string purchase_type = 6;
  string estimate_pricing_description = 7;
  string display_unit = 8;
  RetailDecimal quantity_increment = 9;
  string sold_as_info_short_text = 10;
  string sold_as_info_long_text = 11;
  string page = 12;
  bool navigate_on_action = 13;
  bool has_conditional_loyalty_pricing = 15;
  repeated string matching_item_ids = 16;
  common.restriction_rules.v1.RestrictionInfoWRules restriction_info_w_rules = 17;
  string item_msid = 18;
  repeated feed_service.Badge badges = 19;
  // Used by doubledash for navigation within post-checkout bottom sheet
  bool should_handle_navigation_in_parent = 21;
  bool retail_item_has_modifiers = 22;
  // When has_required_options is false, what's the default quantity for quick-add action
  int32 default_quantity = 23;
  // Used by doubledash for cart operation
  string bundle_type = 24;
  string menu_bundle_parent_store_id = 25;
  // True: the display unit should be shown regardless of purchase type
  // False: existing behavior should be used (show display unit for only PURCHASE_TYPE_MEASUREMENT)
  // Null: default to False
  bool should_show_display_unit = 26;

  // TODO: The below fields are used to disable quick add. We should deprecate
  // these (for the quick add use case) and migrate to using QuickAddContext
  // https://doordash.atlassian.net/browse/DPASS-15650
  bool has_required_options = 14;
  bool is_dashpass_locked = 27;
}
