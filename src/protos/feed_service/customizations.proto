syntax = "proto3";

// buf:lint:ignore DIRECTORY_SAME_PACKAGE
// buf:lint:ignore PACKAGE_VERSION_SUFFIX
package feed_service;

import "common/service_client_config.proto";
import "google/protobuf/wrappers.proto";
import "consumer_customization_service/customization.proto";

// buf:lint:ignore PACKAGE_SAME_JAVA_PACKAGE
option java_package = "com.doordash.rpc.feed_service.customizations";
// buf:lint:ignore PACKAGE_SAME_JAVA_MULTIPLE_FILES
option java_multiple_files = true;
option java_generic_services = true;

// Feed Service container for customizations
service CustomizationsFeedService {
  option (service_client.client_config).circuit_breaker_config.minimum_request_threshold = 20;
  option (service_client.client_config).circuit_breaker_config.counter_sliding_window_millis = 20000;
  option (service_client.client_config).circuit_breaker_config.circuit_open_window_millis = 1000;
  option (service_client.client_config).response_attempt_timeout_millis = 1500;

  /* Retrieve consumer preferences */
  rpc GetConsumerPreferences (GetConsumerPreferencesRequest)
      returns (GetConsumerPreferencesResponse);

  /* Set or update consumer preferences */
  rpc UpsertPreferences (UpsertPreferencesRequest) returns (UpsertPreferencesResponse);
}

/* UpsertPreferencesRequest */
message UpsertPreferencesRequest {
  /* Request */
  consumer_customization_service.v1.UpsertPreferencesRequest request = 1;
}

/* UpsertPreferencesResponse */
message UpsertPreferencesResponse {
  /* Response */
  consumer_customization_service.v1.UpsertPreferencesResponse response = 1;
}

/* GetFeedPreferencesResponse */
message GetConsumerPreferencesResponse {
  /* Response from consumer customization */
  repeated PreferencesResponse preference_response = 1;  // deprecated
  /* List of selected preferences */
  repeated PreferencesResponse selected_preferences = 2;
  /* List of all available preferences, superset including selected preferences */
  repeated PreferencesResponse available_preferences = 3;
}

/* Get consumer preferences */
message GetConsumerPreferencesRequest {
  /* Creator's consumer id */
  google.protobuf.StringValue consumer_id = 1;

  /* Entity Types to return

     This can be empty
   */
  repeated consumer_customization_service.v1.EntityType entity_types = 2;

  /* Optional. Filter by preference type */
  consumer_customization_service.v1.PreferenceType preference_type = 3;

  /* Optional. Show all available preferences for provided entity types */
  google.protobuf.BoolValue show_available = 4;
}

/* Consumer preference response with localized information */
message PreferencesResponse {
  /* Response from consumer customization */
  consumer_customization_service.v1.PreferenceResponse response = 1;

  /* Human readable name of the preferences

  Example: "No Pork", or "Sin Cerdo"
  */
  google.protobuf.StringValue name = 2;

  /* Human readable description of the preferences

  Example: "No meat or fish" to describe "Vegetarian"
  */
  google.protobuf.StringValue description = 3;

  /* Indicates if Consumer selected this preference */
  google.protobuf.BoolValue is_selected = 4;

  /* Optional image url for preference */
  google.protobuf.StringValue img_url = 5;
}
