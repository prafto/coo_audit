syntax = "proto3";

package feed_service;

import "google/protobuf/empty.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.feed_service.retail_crud";

// CRUD apis for merchandising data
service RetailCRUDService {
  // update or insert collection targeting information into the merchandising target DB table
  rpc UpsertCollectionTarget(UpsertCollectionTargetRequest) returns (UpsertCollectionTargetResponse);

  // insert category ranks for a given category type for a business
  rpc InsertCategoryRanks(InsertCategoryRanksRequest) returns (InsertCategoryRanksResponse);
}

// request to insert targeting data for a collection
message UpsertCollectionTargetRequest {
  // specifies the type of the target
  CollectionTargetType target_type = 1;
  // id of the target
  string target_id = 2;
  // id of the collection
  string collection_id = 3;
  // whether or not the collection is active
  bool is_active = 4;
}

// empty response from inserting targeting data for a collection
message UpsertCollectionTargetResponse {
  // empty response
  google.protobuf.Empty empty_response = 1;
}

// request to insert category ranks
message InsertCategoryRanksRequest {
  // type of category to be ranked
  CategoryType category_type = 1;
  // id of the business
  string business_id = 2;
  // category ranks for the business_id and category_type
  repeated CategoryRank category_ranks = 3;
}

// empty response from inserting category ranks
message InsertCategoryRanksResponse {
  // empty response
  google.protobuf.Empty empty_response = 1;
}

// target type for the collection
enum CollectionTargetType {
  // default target type
  COLLECTION_TARGET_TYPE_UNSPECIFIED = 0;
  // business target type
  COLLECTION_TARGET_TYPE_BUSINESS = 1;
  // store target type
  COLLECTION_TARGET_TYPE_STORE = 2;
}

// category type
enum CategoryType {
  // default category type
  CATEGORY_TYPE_UNSPECIFIED = 0;
  // l1 category type
  CATEGORY_TYPE_L1 = 1;
  // l2 category type
  CATEGORY_TYPE_L2 = 2;
  // l3 category type
  CATEGORY_TYPE_L3 = 3;
}

// specifies the rank of a given category
message CategoryRank {
  // id of the category to be ranked
  string tag_id = 1;
  // rank of the category
  int32 sort_order = 2;
}
