syntax = "proto3";

// buf:lint:ignore DIRECTORY_SAME_PACKAGE
// buf:lint:ignore PACKAGE_VERSION_SUFFIX
package feed_service;

option java_multiple_files = true;
option java_generic_services = true;
// buf:lint:ignore PACKAGE_SAME_JAVA_PACKAGE
option java_package = "com.doordash.rpc.feed_service.crdb_carousel_document";

import "google/protobuf/wrappers.proto";

// Input format of Carousel Sink writer
message CrdbCarouselDocument {
    // Could be store_id or item_id
    string membership_id = 1;
    // Type of membership
    MembershipType membership_type = 2;
    // operations to be performed
    repeated DBOperation db_operations = 3;
    // source of where operation is coming from
    SourceType source_type = 4;
}

// A database operation which consists of type of operation and what to modify
message DBOperation {
    // Type of db operation
    DBOperationType db_operation_type = 1;
    // Carousel ids to update
    repeated string carousel_ids = 2;
    // new sort order, provide for add and update operation
    repeated CarouselSortOrder carousel_sort_order = 3;
    // old sort order, provide for update and delete operation
    repeated CarouselSortOrder prev_carousel_sort_order = 4;
    // campaign id in case carousel with campaign operation
    google.protobuf.StringValue campaign_id = 5;
}

// For overriding sort orders for carousel
message CarouselSortOrder {
    // carousel id
    string carousel_id = 1;
    // sort order - deprecated
    int64 sort_order = 2;
    // sort order 
    google.protobuf.Int64Value membership_sort_order = 3;
}

// Decides what type of membership this is
enum MembershipType {
    // Not specified, default
    MEMBERSHIP_TYPE_UNSPECIFIED = 0;
    // store carousel
    MEMBERSHIP_TYPE_STORE = 1;
    // item carousel
    MEMBERSHIP_TYPE_ITEM = 2;
}

// database operation type
enum DBOperationType {
    // Not specified
    DB_OPERATION_TYPE_UNSPECIFIED = 0;
    // Insert operation
    DB_OPERATION_TYPE_INSERT = 1;
    // Update operation
    DB_OPERATION_TYPE_UPDATE = 2;
    // Delete operation
    DB_OPERATION_TYPE_DELETE = 3;
}

// source type of the operation
enum SourceType {
    // Not specified
    SOURCE_TYPE_UNSPECIFIED = 0;
    // derived from ETL jobs
    SOURCE_TYPE_ETL = 1;
    // derived from real time updates√ü
    SOURCE_TYPE_REAL_TIME = 2;
    // for carousel with campaign
    SOURCE_TYPE_CAROUSEL_WITH_CAMPAIGN = 3;
}
