syntax = "proto3";

package insight_reporting_service.v1;

import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option go_package = "github.com/doordash/services-protobuf/generated/insight_reporting_service";
option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.insight_reporting_service.rpc.api";

// Stores/businesses/business groups/organizations to get data for
message TargetEntities {
  // Target store_id
  repeated google.protobuf.Int64Value store_ids = 1;
  // Target business_ids
  repeated google.protobuf.Int64Value business_ids = 2;
  // Target business_ids
  repeated google.protobuf.Int64Value business_group_ids = 3;
  // Target organization_ids
  repeated google.protobuf.Int64Value organization_ids = 4;
}

// An object containing all the relevant info about the requestor calling an API
message UserInfo {
  // user id
  google.protobuf.StringValue id = 1;
  // user email
  google.protobuf.StringValue email = 2;
  // first name
  google.protobuf.StringValue first_name = 3;
  // last name
  google.protobuf.StringValue last_name = 4;
}

// Generic date range object
message DateRange {
  // Start date/time timestamp
  google.protobuf.Timestamp start = 1;

  // End date/time timestamp
  google.protobuf.Timestamp end = 2;
}

// Standard previous periods for data comparison.
// Depending on the use-case some values may not be applicable.
// e.g. selecting a date range of data for 7 days => selecting a YESTERDAY would not make sense as that is not a valid previous timerange for the given current timeframe.
enum PreviousDateRange {
  // Do not return data for any previous date range
  PREVIOUS_DATE_RANGE_UNSPECIFIED = 0;
  // Return data for current start - 1 day to current end - 1 day
  PREVIOUS_DATE_RANGE_YESTERDAY = 1;
  // Return data for current start - 7 days to current end - 7 days
  PREVIOUS_DATE_RANGE_LAST_WEEK = 2;
  // Return data for current start - 1 month to current end - 1 month
  PREVIOUS_DATE_RANGE_LAST_MONTH = 3;
  // Return data for current start - 1 year to current end - 1 year
  PREVIOUS_DATE_RANGE_LAST_YEAR = 4;
}

/**
 * General object used to group "descriptors" which is anything that can help describe a target object.
 * Ideally these are also localized strings/descriptors.
 */
message Descriptors {
  // Display name/label for a target object. This is localized.
  google.protobuf.StringValue label = 1;
  // Description string for a target object. This is useful for rendering UX such as tooltips to describe the filter item. This is localized.
  google.protobuf.StringValue description_display_string = 2;
  // Identifier for a target object. This should never be localized and is a static identifier only.
  google.protobuf.StringValue id = 3;
}

/**
 * Object for money similar to MonetaryFields in common/money.proto but with unit amount in Int64
 */
message MonetaryFields64 {
  // The amount of minor units.
  // For example, if `currencyCode` is `"USD"`, then 1 unit is 1 US cent.
  google.protobuf.Int64Value unit_amount = 1;

  // The 3-letter currency code defined in ISO 4217.
  // (https://en.wikipedia.org/wiki/ISO_4217)
  google.protobuf.StringValue currency = 2;
  // Display string including sign, symbol, amount, and decimal places. Example: -$12.99
  google.protobuf.StringValue display_string = 3;

  // The number of digits after the decimal separator.
  // Can be looked up from the "Active codes" section on
  // https://en.wikipedia.org/wiki/ISO_4217
  // For example, if `currencyCode` is `"USD"`, then 2 decimal places are
  // needed for US cents.
  google.protobuf.Int32Value decimal_places = 4;
  // True = +ve charge, False = -ve charge towards total
  // e.g. fees, taxes and subtotals are positive and all discounts and credits applied
  // will be negative
  google.protobuf.BoolValue sign = 5;
  // Symbol for provided currency, ie '$'
  google.protobuf.StringValue symbol = 6;
}
