syntax = "proto3";

package insight_reporting_service.v1;

import "google/protobuf/wrappers.proto";

option go_package = "github.com/doordash/services-protobuf/generated/insight_reporting_service";
option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.insight_reporting_service.rpc.api";

// Financials Detailed Transactions report type
message DetailedTransactionsReportType {
  // whether or not to use payout date
  google.protobuf.BoolValue use_payout_date = 1;
}

// Indicates report type and associated options.
message ReportType {
  // Report types and their associated options.
  oneof report_type {
    // Financials Detailed Transactions report type
    DetailedTransactionsReportType detailed_transactions_report_type = 1;

    // Add more as we migrate more report types
  }
}

// Report properties
enum ReportProperty {
  // Unspecified report property
  REPORT_PROPERTY_UNSPECIFIED = 0;
  // Country
  REPORT_PROPERTY_COUNTRY = 1;
  // Channel
  REPORT_PROPERTY_CHANNEL = 2;
}

// Supported data types
enum ReportPropertyType {
  // Unspecified data type
  REPORT_PROPERTY_TYPE_UNSPECIFIED = 0;
  // String data type
  REPORT_PROPERTY_TYPE_STRING = 1;
  // Integer data type
  REPORT_PROPERTY_TYPE_INTEGER = 2;
  // Boolean data type
  REPORT_PROPERTY_TYPE_BOOLEAN = 3;
}

// Comparison operators
enum ConditionOperator {
  // Unspecified operator
  CONDITION_OPERATOR_UNSPECIFIED = 0;
  // =
  CONDITION_OPERATOR_EQUALS = 1;
  // IN (list)
  CONDITION_OPERATOR_IN = 2;
}

// A single condition for reports
message Condition {
  // The property to compare
  ReportProperty report_property = 1;
  // The type of the property
  ReportPropertyType report_property_type = 2;
  // The operator to use
  ConditionOperator operator = 3;

  // The value to compare against (for equals)
  oneof value {
    // String value
    google.protobuf.StringValue string_value = 4;
    // Integer value
    google.protobuf.Int64Value int_value = 5;
    // Boolean value
    google.protobuf.BoolValue bool_value = 6;
  }

  // The list of string values to compare against (for in)
  repeated google.protobuf.StringValue string_list = 7;
  // The list of int values to compare against (for in)
  repeated google.protobuf.Int64Value int_list = 8;
}

// A group of conditions supporting AND/OR logic
// AND is implied between each item in each conditions list per condition group
// OR is implied between each condition group in the list in the rule structure
message ConditionGroup {
  // A list of conditions, AND between them
  repeated Condition conditions = 1;
}

// A complete rule structure
message Rule {
  // A list of condition groups, OR between them
  repeated ConditionGroup condition_groups = 1;
}

/**
 * Corresponds to the column group name.
 */
enum ColumnGroup {
  // Unspecified column group
  COLUMN_GROUP_UNSPECIFIED = 0;
  // Financial column group
  COLUMN_GROUP_FINANCIAL = 1;
  // Non-financial column group
  COLUMN_GROUP_NON_FINANCIAL = 2;
}

/**
 * Corresponds to the type of the column group.
 */
enum ColumnGroupType {
  // Unspecified column group type
  COLUMN_GROUP_TYPE_UNSPECIFIED = 0;
  // Static column group type
  COLUMN_GROUP_TYPE_STATIC = 1;
  // Dynamic column group type
  COLUMN_GROUP_TYPE_DYNAMIC = 2;
}

/**
 * Corresponds to the data type of the column.
 */
enum ColumnDataType {
  // Unspecified column data type
  COLUMN_DATA_TYPE_UNSPECIFIED = 0;
  // Numerical data type
  COLUMN_DATA_TYPE_NUMBER = 1;
  // String data type
  COLUMN_DATA_TYPE_STRING = 2;
  // Date data type
  COLUMN_DATA_TYPE_DATE = 3;
}

/**
 * Corresponds to SQL function for the column.
 */
enum ColumnFunction {
  // Unspecified column function
  COLUMN_FUNCTION_UNSPECIFIED = 0;
  // Simple select
  COLUMN_FUNCTION_SELECT = 1;
  // Sum aggregate function
  COLUMN_FUNCTION_SUM = 2;
}

/**
 * Defines the metadata for a report column.
 */
message ReportColumnMetadata {
  // The report this column belongs to.
  ReportType report_type = 1;
  // The name of the column.
  google.protobuf.StringValue column_name = 2;
  // The column group this column belongs to.
  ColumnGroup column_group = 3;
  // The type of the column group.
  ColumnGroupType column_group_type = 4;
  // The data type of the column.
  ColumnDataType column_data_type = 5;
  // The version of the column metadata.
  google.protobuf.Int32Value metadata_version = 6;
  // The English string key for the column.
  google.protobuf.StringValue english_string_key = 7;
  // The sort order within the column group.
  google.protobuf.Int32Value sort_order_within_column_group = 8;
  // The SQL function to apply to the column.
  ColumnFunction column_function = 9;
  // The display rule for the column (e.g. store is in US, CA)
  Rule column_display_rule = 10;
}
