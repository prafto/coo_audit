syntax = "proto3";

package air_fleet_service.v1;

import "air_fleet_service/common.proto";
import "common/common.proto";
import "doordash.api/annotations.proto";
import "doordash.api/client.proto";
import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.air_fleet_service.v1";

// Service for managing private/shared delivery zones and related address flags
service DeliveryZoneService {
  option (doordash.api.service) = {
    name: "DeliveryZoneService"
    url: "air-fleet-service-api.service.prod.ddsd"
    port: 50051
    name_spaces: ["air-dashboard"],
    api_key_name: "AIR_FLEET_SERVICE_API_KEY"
    owner: {
      id: "doordash-labs-commercial-team",
      name: "air-dashboard",
      slack_channel: "#eng-autonomous-delivery-platform",
      email_alias: "foundry-eng@doordash.com",
    }
    target_products: [INTERNAL]
  };

  // Returns the delivery zones coverage statistics for an operation area's addresses
  rpc GetOperationAreaDzCoverage(GetOperationAreaDzCoverageRequest) returns (GetOperationAreaDzCoverageResponse) {
    option (google.api.http) = {get: "/air-dashboard/v1/operation-areas/{operation_area_id}/delivery-zone-coverage"};
    option (doordash.api.endpoint) = {
      tier: T2
      lifecycle: DEV
      authorization: [DD_EMPLOYEE]
      role_based_authorization: {
        mode: ANY,
        roles: ["security-raven-managed-authorization"]
      }
      authentication_config: {enable_okta_verification: true}
    };
  }

  // Retrieves addresses for an operation area, optionally centered on a given location.
  rpc GetAddresses(GetAddressesRequest) returns (GetAddressesResponse) {
    option (google.api.http) = {get: "/air-dashboard/v1/operation-areas/{operation_area_id}/addresses"};
    option (doordash.api.endpoint) = {
      tier: T2
      lifecycle: DEV
      authorization: [DD_EMPLOYEE]
      role_based_authorization: {
        mode: ANY,
        roles: ["security-raven-managed-authorization"]
      }
      authentication_config: {enable_okta_verification: true}
    };
  }

  // Searches for addresses in an operation area based on an address prefix.
  rpc SearchAddresses(SearchAddressesRequest) returns (SearchAddressesResponse) {
    option (google.api.http) = {get: "/air-dashboard/v1/operation-areas/{operation_area_id}/search-addresses"};
    option (doordash.api.endpoint) = {
      tier: T2
      lifecycle: DEV
      authorization: [DD_EMPLOYEE]
      role_based_authorization: {
        mode: ANY,
        roles: ["security-raven-managed-authorization"]
      }
      authentication_config: {enable_okta_verification: true}
    };
  }

  // Retrieves the delivery zones associated with an address.
  rpc GetDeliveryZonesForAddress(GetDeliveryZonesForAddressRequest) returns (GetDeliveryZonesForAddressResponse) {
    option (google.api.http) = {get: "/air-dashboard/v1/addresses/{source_place_id}/delivery-zones"};
    option (doordash.api.endpoint) = {
      tier: T2
      lifecycle: DEV
      authorization: [DD_EMPLOYEE]
      role_based_authorization: {
        mode: ANY,
        roles: ["security-raven-managed-authorization"]
      }
      authentication_config: {enable_okta_verification: true}
    };
  }

  // Adds a new private delivery zone to an address.
  rpc AddPrivateDeliveryZoneToAddress(AddPrivateDeliveryZoneToAddressRequest) returns (AddPrivateDeliveryZoneToAddressResponse) {
    option (google.api.http) = {
      post: "/air-dashboard/v1/addresses/{source_place_id}/private-delivery-zones"
      body: "*"
    };
    option (doordash.api.endpoint) = {
      tier: T2
      lifecycle: DEV
      authorization: [DD_EMPLOYEE]
      role_based_authorization: {
        mode: ANY,
        roles: ["security-raven-managed-authorization"]
      }
      authentication_config: {enable_okta_verification: true}
    };
  }

  // Removes an existing private delivery zone from an address.
  rpc RemovePrivateDeliveryZoneFromAddress(RemovePrivateDeliveryZoneFromAddressRequest) returns (RemovePrivateDeliveryZoneFromAddressResponse) {
    option (google.api.http) = {delete: "/air-dashboard/v1/addresses/{source_place_id}/private-delivery-zones/{delivery_zone_id}"};
    option (doordash.api.endpoint) = {
      tier: T2
      lifecycle: DEV
      authorization: [DD_EMPLOYEE]
      role_based_authorization: {
        mode: ANY,
        roles: ["security-raven-managed-authorization"]
      }
      authentication_config: {enable_okta_verification: true}
    };
  }

  // Sets or updates the undeliverable flag for an address.
  rpc SetAddressUndeliverableFlag(SetAddressUndeliverableFlagRequest) returns (SetAddressUndeliverableFlagResponse) {
    option (google.api.http) = {
      put: "/air-dashboard/v1/addresses/{source_place_id}/update-undeliverable-flag"
      body: "*"
    };
    option (doordash.api.endpoint) = {
      tier: T2
      lifecycle: DEV
      authorization: [DD_EMPLOYEE]
      role_based_authorization: {
        mode: ANY,
        roles: ["security-raven-managed-authorization"]
      }
      authentication_config: {enable_okta_verification: true}
    };
  }
}

// ---------------------------
// Request/Response Messages
// ---------------------------

// PrivateDz represents a private delivery zone along with its audit fields.
message PrivateDz {
  // Unique identifier for the delivery zone.
  string delivery_zone_id = 1;
  // The geographic coordinate for the delivery zone.
  Location coordinate = 2;
  // Timestamp when the delivery zone was created.
  google.protobuf.Timestamp created_at = 3;
  // Timestamp when the delivery zone was last updated.
  google.protobuf.Timestamp updated_at = 4;
  // Identifier for the user who last updated the delivery zone.
  int64 updated_by = 5;
}

// Address represents an address and its associated delivery zone details.
message Address {
  // Unique Identifier for the source place.
  string source_place_id = 1;
  // Common address details.
  common.CommonAddress address = 2;
  // Total number of private delivery zones associated with the address.
  google.protobuf.Int32Value total_private_dzs = 3;
  // Total number of shared delivery zones associated with the address.
  google.protobuf.Int32Value total_shared_dzs = 4;
  // Flag indicating whether the address is undeliverable.
  bool is_undeliverable = 5;
}

// Request for fetching delivery zone coverage statistics for an operation area.
message GetOperationAreaDzCoverageRequest {
  // Identifier for the operation area.
  string operation_area_id = 1;
}

// Response for delivery zone coverage including the total addresses and the number with a delivery zone.
message GetOperationAreaDzCoverageResponse {
  // Total number of addresses in the operation area.
  int32 total_addresses = 1;
  // Number of addresses that have an associated delivery zone.
  int32 total_addresses_with_dz = 2;
}

// Request for retrieving addresses for an operation area, optionally centered on a given location.
message GetAddressesRequest {
  // Identifier for the operation area.
  string operation_area_id = 1;
  // The lat/lng of the selected point in the map. If null, backend uses the center of the operation area's geofence.
  Location center_point = 2 [(doordash.api.client.optional) = true];
}

// Response containing a list of addresses.
message GetAddressesResponse {
  // List of addresses in the operation area.
  repeated Address addresses = 1;
}

// Request for searching addresses in an operation area by address prefix.
message SearchAddressesRequest {
  // Prefix of the address to search for.
  string address_prefix = 1;
  // Identifier for the operation area.
  string operation_area_id = 2;
}

// Response containing a list of matching addresses.
message SearchAddressesResponse {
  // List of addresses matching the search criteria.
  repeated Address addresses = 1;
}

// Request for retrieving delivery zones associated with an address.
message GetDeliveryZonesForAddressRequest {
  // Identifier for the source place.
  string source_place_id = 1;
}

// Response containing the list of delivery zones for an address.
message GetDeliveryZonesForAddressResponse {
  // List of private delivery zones associated with the address.
  repeated PrivateDz private_dzs = 1;
}

// Request for adding a private delivery zone to an address.
message AddPrivateDeliveryZoneToAddressRequest {
  // Identifier for the source place.
  string source_place_id = 1;
  // Geographic coordinate of the new delivery zone.
  Location coordinate = 2;
}

// Response for adding a private delivery zone
message AddPrivateDeliveryZoneToAddressResponse {
  // Unique identifier for the created delivery zone.
  string delivery_zone_id = 1;
}

// Request for removing a private delivery zone from an address.
message RemovePrivateDeliveryZoneFromAddressRequest {
  // Identifier for the source place.
  string source_place_id = 1;
  // Identifier of the delivery zone to remove.
  string delivery_zone_id = 2;
}

// Response for removing a private delivery zone (empty).
message RemovePrivateDeliveryZoneFromAddressResponse {}

// Request for setting the undeliverable flag on an address.
message SetAddressUndeliverableFlagRequest {
  // Identifier for the source place.
  string source_place_id = 1;
  // Boolean flag indicating if the address is undeliverable.
  bool is_undeliverable = 2;
}

// Response for setting the undeliverable flag (empty).
message SetAddressUndeliverableFlagResponse {}
