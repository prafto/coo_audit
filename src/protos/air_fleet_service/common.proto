syntax = "proto3";

package air_fleet_service.v1;

import "common/common.proto";
import "doordash.api/annotations.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.air_fleet_service.v1";

// Order status for ADP orders
enum OrderStatus {
  // Unknown order status
  ORDER_STATUS_UNSPECIFIED = 0;
  // Order is assigned to a drone
  ORDER_STATUS_ASSIGNED = 1;
  // Loader heading to merchant, or from merchant to nest
  ORDER_STATUS_HEADING_TO_LOADING_LOCATION = 2;
  // Order is at nest and waiting for load
  ORDER_STATUS_WAITING_FOR_LOAD = 3;
  // Drone loaded with order and heading to dropoff location
  ORDER_STATUS_HEADING_TO_DROPOFF_LOCATION = 4;
  // Drone waiting to dropoff order
  ORDER_STATUS_WAITING_FOR_DROPOFF = 5;
  // Order is delivered
  ORDER_STATUS_DELIVERY_COMPLETED = 6;
  // Order is cancelled
  ORDER_STATUS_CANCELLED = 7;
  // Order is reassigned to dasher
  ORDER_STATUS_REASSIGNED_TO_DASHER = 8;
}

// Drone order information
message DroneOrder {
  // Order details
  Order order = 1;
  // External delivery id of the drone order
  string external_delivery_id = 2;
  // Current order delivery status
  OrderStatus order_status = 3;
  // Optional next order delivery status
  OrderStatus next_order_status = 4;
}

// Order standard information
message Order {
  // DD delivery uuid of order
  string delivery_uuid = 1;
  // Consumer name
  string consumer_name = 2;
  // Mx business icon url
  google.protobuf.StringValue business_icon_url = 3;
  // Store address
  common.CommonAddress store_address = 4;
  // Consumer address
  common.CommonAddress consumer_address = 5;
  // Delivery distance
  double distance = 6;
  // DD delivery id of order
  int64 delivery_id = 7;
  // Order creation time
  google.protobuf.Timestamp created_at = 8;
}

// Air provider types
enum AirProvider {
  // Unknown air provider type
  AIR_PROVIDER_UNSPECIFIED = 0;
  // Internal manual progress type
  AIR_PROVIDER_MANUAL = 1;
  // AUTERION
  AIR_PROVIDER_AUTERION = 2;
  // AUTERION mission test
  AIR_PROVIDER_TEST = 3;
}

// Location represents a geographical coordinate with latitude and longitude.
message Location {
  // Location latitude.
  double latitude = 1;
  // Location longitude.
  double longitude = 2;
}
