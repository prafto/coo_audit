syntax = "proto3";

// buf:lint:ignore DIRECTORY_SAME_PACKAGE
// buf:lint:ignore PACKAGE_VERSION_SUFFIX
package ads.events;

import "ads/budget.proto";
import "ads/events/transaction_type.proto";
import "common/ads_promos.proto";
import "common/common.proto";
import "common/money.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "promotion/budget.proto";
import "promotion/placement.proto";
import "tax/transaction.proto";

option java_generic_services = true;
option java_multiple_files = true;
// buf:lint:ignore PACKAGE_SAME_JAVA_PACKAGE
option java_package = "com.doordash.rpc.ads.events";

// Identifies possible events that will cause an ad group's ad budget to change
// based on either user intent to purchase or an actual cpa attribution
// Transactions also include adjusting pre-allocated budget when user does not
// proceed to purchase
message BudgetTransaction {
  // reserve 20 for backwards compatibility.
  reserved 20;

  // Type of budget transaction being processed
  TransactionType type = 1;

  // The id of the event
  google.protobuf.StringValue event_id = 2;

  // The id of the cpa
  google.protobuf.StringValue cpa_id = 3;

  // The id of the auction
  google.protobuf.StringValue auction_id = 4;

  // The id of the ad group
  google.protobuf.StringValue ad_group_id = 5;

  // The id of the campaign
  google.protobuf.StringValue campaign_id = 6;

  // The Id of store which experienced conversion or impression
  google.protobuf.StringValue store_id = 7;

  // The Id of consumer
  google.protobuf.StringValue consumer_id = 8;

  // The id of the delivery
  google.protobuf.StringValue delivery_id = 9;

  // Timestamp of when the auction occured
  google.protobuf.Timestamp auction_timestamp = 10;

  // Timestamp of when the order got confirmed
  google.protobuf.Timestamp order_confirmation_timestamp = 11;

  // Timestamp of when event occured
  google.protobuf.Timestamp event_timestamp = 12;

  // How much to reduce the budgeted amount either because
  // of high user intent to purchase or a cpa conversion
  money.MonetaryFields spent = 13;

  // Timestamp of when the order cart was submitted
  google.protobuf.Timestamp order_cart_submitted_at = 14;

  // The subtotal for the order that was attributed
  money.MonetaryFields order_subtotal = 15;

  // Id of an item if it's an item click
  google.protobuf.StringValue item_id = 16;

  // Placement type of the ad click if it's applicable
  promotion_service.Placement.PlacementType placement_type = 17;

  // the id and ref_type of reference
  doordash.tax.transaction.Reference reference = 18;

  // the store information
  doordash.tax.transaction.Store store = 19;

  // the process type of the budget trans
  doordash.tax.transaction.ProcessType process_type = 21;

  // channel of the transaction
  common.Channel channel = 22;

  // MFS billing method that the event should use
  ads_promos.v1.BillingMethod billing_method = 23;

  // Budget Experiment Info
  BudgetExperimentInfo budget_experiment_info = 24;

  // The id of the container the ad was in
  google.protobuf.StringValue container_id = 25;

  // Optimistic Spend Watermark
  google.protobuf.Timestamp watermark = 26;

  // Bottom tier id from savvy model
  google.protobuf.StringValue ad_id = 27;

  // Promo wallet promo claim id
  google.protobuf.StringValue claim_id = 28;

  // Promotion code
  google.protobuf.StringValue code = 29;

  // Related store order cart for promos
  google.protobuf.StringValue store_order_cart_id = 30;

  // Related order cart for promos
  google.protobuf.StringValue order_cart_id = 31;

  // Related order uuid for promos
  google.protobuf.StringValue order_uuid = 32;

  // Number of applications for stackable item promos (complex deals)
  google.protobuf.Int32Value num_applications = 33;

  // Legacy funding source field for promo compatibility
  money.PromotionType promotion_funding_type = 34;

  // Rx promos use marketing fee directly from the storeordercart for invoicing
  // because it is updated when there is an order adjustment
  // CPG promos however use the fee from the redemption table, so we need
  // a flag to signal to the invoicing system which cost to use
  google.protobuf.BoolValue override_order_cart_marketing_fee = 35;

  // Promo fee tax is precomputed, so we need to ingest it with the transaction
  money.MonetaryFields tax_amount = 36;

  // For promo transactions, how much of the cost is a flat platform fee
  money.MonetaryFields platform_fee = 37;

  // For promo transactions, how much of the cost is a discount subsidy
  money.MonetaryFields discount_subsidy = 38;

  // For promo transactions, what was the total discount to Cx
  money.MonetaryFields total_discount = 39;

  // Unique and stable id generated for this redemption
  // Needed to retain compatibility with legacy systems.
  google.protobuf.StringValue redemption_id = 40;

  // CPM Event batch id
  google.protobuf.StringValue cpm_event_batch_id = 41;

  // CPM Event batch size
  google.protobuf.Int32Value cpm_event_batch_size = 42;

  // CPM Event batch number
  google.protobuf.Int32Value cpm_event_batch_number = 43;

  // Billing Address ID
  google.protobuf.StringValue billing_address_id = 44;

  // entity id it could be campaignId or enrichmentId
  google.protobuf.StringValue entity_id = 45;

  // entity id type, CAMPAIGN or ENRICHMENT
  EntityIdType entity_id_type = 46;

  // Sub transactions for the budget transaction
  repeated SubTransaction sub_transactions = 47;

  // Promo redemptions may have multiple item ids
  repeated string item_ids = 48;

  // status of transaction
  EventStatus event_status = 49;

  // MX order lifecycle event timestamp
  google.protobuf.Timestamp mx_olc_event_timestamp = 50;
}

// entity id type, CAMPAIGN or ENRICHMENT
enum EntityIdType {
  // UNSPECIFIED ENTITY ID TYPE
  ENTITY_ID_TYPE_UNSPECIFIED = 0;
  // ENTITY_ID_TYPE for Campaign
  ENTITY_ID_TYPE_CAMPAIGN = 1;
  // ENTITY_ID_TYPE for ENRICHMENT
  ENTITY_ID_TYPE_ENRICHMENT = 2;
}

// status of BudgetTransaction proto
// represents the status of order that the transaction associated with
enum EventStatus {
  // UNSPECIFIED event status
  EVENT_STATUS_UNSPECIFIED = 0;
  // status for CREATE order
  EVENT_STATUS_CREATE = 1;
  // status for CANCEL order
  EVENT_STATUS_CANCEL = 2;
  // status for ADJUST order
  EVENT_STATUS_ADJUST = 3;
}

// Budget Spending Accumulation based on the transaction.
message BudgetSpendingUpdateSignal {
  // The tracking id of the event
  google.protobuf.StringValue tracking_id = 1;
  // The billing transaction to trigger the budget spending update
  BudgetTransaction budget_transaction = 2;
  // The timestamp of the event
  google.protobuf.Timestamp txn_event_timestamp = 3;
  // Accumulated spending info
  BudgetOverallSpendingInfo budget_overall_spending_info = 4;
  // Budget Snapshots when the event happened
  repeated promotion_service.Budget snapshot_budgets = 5;
}

// sub txn for budget transaction
message SubTransaction {
  // funded entity type
  SubTransactionFundedEntityType funded_entity_type = 1;
  // fee type: promo fee(redemption fee), ads fee
  SubTransactionFeeType fee_type = 2;
  // fee amount
  money.MonetaryFields fee_amount = 3;
  // tax amount
  money.MonetaryFields tax_amount = 4;
  // discount subsidy amount
  money.MonetaryFields discount_subsidy = 5;
  // billing profile id when txn occurs
  google.protobuf.StringValue billing_profile_id = 6;
  // funded by id
  google.protobuf.StringValue funded_by_id = 7;
  // discount breakdown details
  repeated SubTransactionDiscountBreakdownDetail discount_breakdown_details = 8;
}

// sub txn discount breakdown detail
message SubTransactionDiscountBreakdownDetail {
  // discount monetary field
  money.DiscountMonetaryField discount_monetary_field = 1;
  // discount type
  money.DiscountType discount_type = 2;
  // discount amount
  money.MonetaryFields discount_amount = 3;
}

// sub txn funded entity type
enum SubTransactionFundedEntityType {
  // unspecified funded entity type
  SUB_TRANSACTION_FUNDED_ENTITY_TYPE_UNSPECIFIED = 0;
  // funded by merchant
  SUB_TRANSACTION_FUNDED_ENTITY_TYPE_MERCHANT = 1;
  // funded by doordash
  SUB_TRANSACTION_FUNDED_ENTITY_TYPE_DOORDASH = 2;
  // funded by third party
  SUB_TRANSACTION_FUNDED_ENTITY_TYPE_THIRD_PARTY = 3;
}

// sub txn fee type
enum SubTransactionFeeType {
  // unspecified fee type
  SUB_TRANSACTION_FEE_TYPE_UNSPECIFIED = 0;
  // promo fee
  SUB_TRANSACTION_FEE_TYPE_PROMO_FEE = 1;
  // ads fee
  SUB_TRANSACTION_FEE_TYPE_ADS_FEE = 2;
}
