syntax = "proto3";

// buf:lint:ignore DIRECTORY_SAME_PACKAGE
// buf:lint:ignore PACKAGE_VERSION_SUFFIX
package ads.events;

import "ads/common.proto";
import "ads/events/auction_event.proto";
import "common/common.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "promotion/placement.proto";

option java_generic_services = true;
option java_multiple_files = true;
// buf:lint:ignore PACKAGE_SAME_JAVA_PACKAGE
option java_package = "com.doordash.rpc.ads.events";

// Auction Candidate for iguazu ingestion (for internal use).
message AuctionCandidate {
  // campaign id
  google.protobuf.StringValue campaign_id = 1;

  // ad group id
  google.protobuf.StringValue ad_group_id = 2;

  // store associated with auction candidate event - can be empty for global search auctions. see store_ids
  google.protobuf.StringValue store_id = 3;

  // final bid price unit amount
  google.protobuf.Int32Value bid_price_unit_amount = 4;

  // currency type for bid price
  google.protobuf.StringValue currency_iso_type = 5;

  // auction candidate rank
  google.protobuf.Int32Value auction_rank = 6;

  // budget experiment name
  google.protobuf.StringValue budget_experiment_name = 7;

  // budget experiment evaluated experiment segment
  google.protobuf.StringValue budget_experiment_segment_name = 8;

  // for debugging auction eliminated auction candidate events
  google.protobuf.Int32Value floor_price_unit_amount = 9;

  // for reconstructing the sorting of bids within an auction, equal to true bid times P(conv)
  google.protobuf.DoubleValue expected_value = 10;

  // bid modifier multiplier
  google.protobuf.DoubleValue bid_modifier_multiplier = 11;

  // the original bid. final bid = true_bid * bid_modifier_multiplier
  google.protobuf.Int32Value true_bid = 12;

  //  ads quality score
  google.protobuf.DoubleValue ad_quality_score = 13;

  //  ads relevance score
  google.protobuf.DoubleValue ad_relevance_score = 14;

  // ads relevance model
  google.protobuf.StringValue ad_relevance_model = 15;

  // item id for SP
  google.protobuf.StringValue item_id = 16;

  // dd_sic
  google.protobuf.StringValue dd_sic = 17;

  // upc
  google.protobuf.StringValue upc = 18;

  // business merchant supplied id
  google.protobuf.StringValue business_merchant_supplied_id = 19;

  // gsp discount rate cap
  google.protobuf.DoubleValue gsp_discount_cap = 20;

  // group id - saved from SeatBid
  google.protobuf.Int32Value group_id = 21;

  // ad id
  google.protobuf.StringValue ad_id = 22;

  //add metadata of pricing related control
  google.protobuf.StringValue pricing_metadata = 23;

  // ad_score = expected_value + ad_hidden_cost
  google.protobuf.DoubleValue ad_score = 24;

  // hidden cost of boosting or suppressing ad
  google.protobuf.DoubleValue hidden_cost = 25;

  // json string to log hidden_cost breakdown
  google.protobuf.StringValue hidden_cost_metadata = 26;

  // the bid price after bid modifiers are applied but before the auction
  google.protobuf.Int32Value auction_bid = 27;

  // store ids associated with auction candidate event - global search auctions can have multiple stores
  repeated google.protobuf.StringValue store_ids = 28;
}

// NOTE: IF YOU ARE ADDING FIELDS/COLUMNS WITH USER PERSONALLY IDENTIFIABLE INFORMATION, PLEASE FOLLOW THIS
// DOCUMENTATION IN ORDER TO ENSURE CCPA COMPLIANCE:
// https://doordash.atlassian.net/wiki/spaces/Eng/pages/3160834089/Making+Datalake+Table+CCPA+Compliant

// AuctionCandidatesEvent is emitted when an auction is complete
message AuctionCandidatesEvent {
  option (common.dataframe_transformations) = "pii_obfuscation";

  // auction_id uniquely identifies this auction
  google.protobuf.StringValue auction_id = 1;

  // candidates is a list of possible winners of the auction. this will be a list of serialized AuctionCandidate
  google.protobuf.StringValue candidates = 2;

  // search term for the ad
  google.protobuf.StringValue term = 3;

  // normalized query
  google.protobuf.StringValue normalized_query = 4;

  // ad request id to track event
  google.protobuf.StringValue ad_request_id = 5;

  // consumer id tied to the auction event
  google.protobuf.StringValue consumer_id = 6 [(common.pii_type) = "CONSUMER_ID"];

  // submarket id
  google.protobuf.StringValue submarket_id = 7;

  // latitude
  google.protobuf.FloatValue lat = 8;

  // longitude
  google.protobuf.FloatValue lon = 9;

  //Cx address, country shortname such as US, DE
  google.protobuf.StringValue country_shortname = 10;

  // session id tied to the auction event
  google.protobuf.StringValue dd_session_id = 11;

  // device id tied to the auction event
  google.protobuf.StringValue dd_device_id = 12 [(common.pii_type) = "DEVICE_ID"];

  // time that auction event was processed
  google.protobuf.Timestamp occurred_at = 13;

  // placement (i.e. product surface to serve the ads)
  google.protobuf.StringValue placement = 14;

  // carousel type if carousel-specific auction
  google.protobuf.StringValue carousel_type = 15;

  // collection id
  google.protobuf.StringValue collection_id = 16;

  // l1 category id for auction
  google.protobuf.StringValue l1_category_id = 17;

  // l2 category id for auction
  google.protobuf.StringValue l2_category_id = 18;

  // model id used to quality-score the candidates
  google.protobuf.StringValue quality_scorer_model_id = 19;
}
