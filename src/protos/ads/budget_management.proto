syntax = "proto3";

package ads;

import "ads/budget.proto";
import "common/money.proto";
import "common/service_client_config.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "promotion/budget.proto";
import "promotion/limitation.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.ads";

//Budget Management service
service BudgetManagementService {
  // For a given campaign, return the budget tracking configurations
  rpc GetBudgetTrackingConfig(GetBudgetTrackingConfigRequest) returns (GetBudgetTrackingConfigResponse) {
    option (service_client.client_method_config).retry_config.max_attempts = 1;
  }

  // For given campaign id, ad_group_id and txn metadata, return the related tracking requirements
  // So for each txn, we need to know which budget tracking requirements we need to track and accumulate
  rpc GetTrackingRequirementsByTxn(GetTrackingRequirementsByTxnRequest) returns (GetTrackingRequirementsByTxnResponse) {
    option (service_client.client_method_config).retry_config.max_attempts = 1;
  }

  //For give enrichment id, return the budget tracking configurations
  rpc GetEnrichmentBudgetTrackingConfig(GetEnrichmentBudgetTrackingConfigRequest) returns (GetEnrichmentBudgetTrackingConfigResponse) {
    option (service_client.client_method_config).retry_config.max_attempts = 1;
  }
}

// Request object for BudgetManagementService endpoint
message GetBudgetTrackingConfigRequest {
  // Campaign id
  google.protobuf.StringValue campaign_id = 1;
  // First effective timestamp, If absent retrieve the latest campaign info [Optional]
  google.protobuf.Timestamp first_effective_ts = 2;
}

// Response object for BudgetManagementService endpoint
message GetBudgetTrackingConfigResponse {
  // Tracking configuration
  TrackingConfig tracking_config = 1;
}

// Request object for BudgetManagementService endpoint
message GetTrackingRequirementsByTxnRequest {
  // Campaign id
  google.protobuf.StringValue campaign_id = 1;
  // Ad group id
  google.protobuf.StringValue ad_group_id = 2;
  // Should exclude campaign level budget or not
  google.protobuf.BoolValue exclude_campaign_level_budget = 3;
  // Budget experiment metadata for campaign or ad group
  BudgetExperimentInfo budget_experiment_info = 4;
}

// Response object for BudgetManagementService endpoint
message GetTrackingRequirementsByTxnResponse {
  // the matched tracking requirements buckets for the txn
  repeated TrackingRequirement tracking_requirements = 1;
}

// Request object for GetEnrichmentBudgetTrackingConfig
message GetEnrichmentBudgetTrackingConfigRequest {
  // enrichment id
  google.protobuf.StringValue enrichment_id = 1;
}

// Response object for GetEnrichmentBudgetTrackingConfig
message GetEnrichmentBudgetTrackingConfigResponse {
  // Tracking configuration
  TrackingConfig tracking_config = 1;
}

// Budget Tracking requirement
message TrackingRequirement {
  // The budget tracking id, for which the aggregation will base on
  // It could be just campaign_id or ad_group_id when no customized tracking requirement
  google.protobuf.StringValue tracking_id = 1;
  // The description for this capping requirement
  google.protobuf.StringValue description = 2;
  // The time_zone for new day/week/month reset
  google.protobuf.StringValue time_zone = 3;
  // The configured budget
  promotion_service.Budget budget = 4;
  //active dates for budget
  promotion_service.ActiveDates active_dates = 5;
  // Optional budget allocation for experiment. This is used to hold the segmented budget
  // for an experiment arm.
  ExperimentBreakdown experiment_breakdown = 6;
}

// Experiment budget breakdown for a tracking requirement
message ExperimentBreakdown {
  // Experiment metadata for segmented budget
  BudgetExperimentInfo budget_experiment_info = 1;
  // Daily budget for the experiment segment
  money.MonetaryFields daily_budget = 2;
  // Monthly budget for the experiment segment
  money.MonetaryFields monthly_budget = 3;
}

// Budget tracking configuration
message TrackingConfig {
  // The budget tracking requirement for the campaign
  repeated TrackingRequirement tracking_requirements = 1;
}
