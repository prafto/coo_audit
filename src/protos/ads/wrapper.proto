syntax = "proto3";

package ads;

import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.ads";

// wrapper for sibyl prediction result
message PredictionResult {
  // sibyl result code
  enum ResultCode {
    // success
    SUCCESS = 0;
    // timeout
    TIMEOUT = 1;
    // parse error
    PARSE_ERR = 2;
    // model not found
    MODEL_NOT_FOUND = 3;
    // internal
    INTERNAL = 4;
    // invalid feature set
    INVALID_FEATURE_SET = 5;
  }
  // sibyl result metadata
  message ResultMetaData {
    // the error message
    string error_message = 1;
  }
  // sibyl prediction
  message Prediction {
    // feature set id
    string feature_set_id = 1;
    // value
    oneof value {
      // regression value
      float regression_value = 2;
      // binary classifiction probability
      float binary_classification_probability = 3;
    }
    // result code
    ResultCode result_code = 4;
    // result meta data
    ResultMetaData result_meta_data = 5;
  }
  // predictor name
  string predictor_name = 1;
  // model id
  string model_id = 2;
  // list of predictions
  repeated Prediction predictions = 3;
  // result code
  ResultCode result_code = 4;
  // result metadata
  ResultMetaData result_meta_data = 5;
}

// store data based on search HTTP API store data model
// that relevant to ads use case
message StoreData {
  // search store location, only applies to store data
  message StoreLocation {
    // lat
    double lat = 1;
    // lon / lng
    double lon = 2;
  }
  // search geo hash, only applies to store data
  message StoreLocationGeoHashes {
    // r8 h3 geo hash
    string r8 = 1;
    // r9 h3 geo hash
    string r9 = 2;
  }
  // store id
  string id = 1;
  // store type
  string type = 2;
  // business id
  google.protobuf.StringValue business_id = 3;
  // business group id
  google.protobuf.StringValue business_group_id = 4;
  // asap
  google.protobuf.BoolValue asap_available = 5;
  // schedule
  google.protobuf.BoolValue scheduled_available = 6;
  // pickup
  google.protobuf.BoolValue pickup_available = 7;
  // is consumer subscription eligible
  google.protobuf.BoolValue is_consumer_subscription_eligible = 8;
  // starting point id
  google.protobuf.Int64Value starting_point_id = 9;
  // store tags
  repeated string tags = 10;
  // store distance
  google.protobuf.DoubleValue distance = 11;
  // store tier level
  google.protobuf.Int64Value tier_level = 12;
  // store location
  StoreLocation location = 13;
  // campaign positions
  map<string, int64> campaign_positions = 14;
  // is partner
  google.protobuf.BoolValue is_partner = 15;
  // store geo hashes
  StoreLocationGeoHashes store_location_geo_hashes = 16;
  // ad quality score used by Wolt ads until they are fully Sibyl compatible
  google.protobuf.DoubleValue ad_quality_score = 17;
  // excluded from auction ad group ids. Used for Wolt user targeting
  // Will be deprecated once Targeting is fully moved to ad-exchange
  repeated string excluded_ad_group_ids = 18;
}
