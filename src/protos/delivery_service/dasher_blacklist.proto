syntax = "proto3";

option java_multiple_files = true;
option java_generic_services = true;

package delivery_service.blacklist;

import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "google/protobuf/empty.proto";

option java_package = "com.doordash.rpc.delivery.blacklist";


service BlacklistService {
  rpc BlacklistDashersForBusiness(BlacklistDashersForBusinessRequest) returns (google.protobuf.Empty);

  rpc UnblacklistDashersForBusiness(BlacklistDashersForBusinessRequest) returns (google.protobuf.Empty);

  // returns the union of all blacklists that match all GetBusinessBlacklistedDasherRequest's in the BatchGetBusinessBlacklistedDasherRequest
  rpc BatchGetBusinessBlacklistedDasher(BatchGetBusinessBlacklistedDasherRequest) returns(GetBusinessBlacklistedDasherResponse);
  
  rpc GetAllBlacklistedDashers(google.protobuf.Empty) returns(stream BlacklistedDasher);
}

message BlacklistDashersForBusinessRequest {
  google.protobuf.Int64Value business_id = 1;
  repeated google.protobuf.Int64Value dasher_ids = 2;
  google.protobuf.StringValue metadata = 3;
}

// business_id and/or dasher_id must be set
message GetBusinessBlacklistedDasherRequest {
  google.protobuf.Int64Value business_id = 1;
  google.protobuf.Int64Value dasher_id = 2;
}

message BatchGetBusinessBlacklistedDasherRequest {
  repeated GetBusinessBlacklistedDasherRequest queries = 1;
}

message BlacklistedDasher {
  google.protobuf.Int64Value business_id = 1;
  google.protobuf.Int64Value dasher_id = 2;
  google.protobuf.Timestamp created_at = 3;
  google.protobuf.StringValue metadata = 4;
}

message GetBusinessBlacklistedDasherResponse {
  repeated BlacklistedDasher blacklists = 1;
}
