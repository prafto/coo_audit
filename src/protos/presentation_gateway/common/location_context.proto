syntax = "proto3";

package presentation_gateway.common.v1;

import "doordash.api/annotations.proto";
import "google/protobuf/wrappers.proto";

option go_package = "github.com/doordash/services-protobuf/generated/presentation_gateway";
option java_generic_services = true;
option java_multiple_files = true;
option java_outer_classname = "LocationContextProto";
option java_package = "com.doordash.presentationgateway.location";

// See: https://devconsole.doordash.team/codelabs/exposing+an+endpoint+with+unified+gateway?step=17
//  for documentation

// Any RPC that uses this message should expect a DD-GEO-LOCATION header to be be in the UG HTTP request.
//  If you want fallback to the Consumer Service geo location, you should use the inject the following fields for backup:
//  - cx_geo_lat
//  - cx_geo_lng
//  - cx_geo_district_id
//  - cx_geo_submarket_id
//  - cx_geo_timezone
//  - cx_geo_country_short_name
//  - cx_geo_zip_code
// See step 17 in the codelab for more information, specifically the "Consumer Geo Fields" section.

// Used by Unified Gateway to inject location context via the DD-GEO-LOCATION header, will a fallback to the Consumer Service geo location.
message LocationContext {
  // The latitude coordinate of the user's location.
  double lat = 1 [
    (doordash.api.inject_from_headers) = {
      field: "DD-LOCATION-CONTEXT.lat",
      injection_rule: {
        cast_type: "double",
        conversions: [
          DECODE_BASE64,
          JSON
        ]
      }
    },
    (doordash.api.inject) = {
      field: "cx_geo_lat",
      injection_rule: {
        cast_type: "double",
        default_value: "-1"
      }
    }
  ];

  // The longitude coordinate of the user's location.
  double lng = 2 [
    (doordash.api.inject_from_headers) = {
      field: "DD-LOCATION-CONTEXT.lng",
      injection_rule: {
        cast_type: "double",
        conversions: [
          DECODE_BASE64,
          JSON
        ]
      }
    },
    (doordash.api.inject) = {
      field: "cx_geo_lng",
      injection_rule: {
        cast_type: "double",
        default_value: "-1"
      }
    }
  ];

  // The district ID of the user's location.
  int64 district_id = 3 [
    (doordash.api.inject_from_headers) = {
      field: "DD-LOCATION-CONTEXT.district_id",
      injection_rule: {
        cast_type: "int64",
        conversions: [
          DECODE_BASE64,
          JSON
        ]
      }
    },
    (doordash.api.inject) = {
      field: "cx_geo_district_id",
      injection_rule: {
        cast_type: "int64",
        default_value: "-1"
      }
    }
  ];

  // The submarket ID of the user's location.
  int64 submarket_id = 4 [
    (doordash.api.inject_from_headers) = {
      field: "DD-LOCATION-CONTEXT.submarket_id",
      injection_rule: {
        cast_type: "int64",
        conversions: [
          DECODE_BASE64,
          JSON
        ]
      }
    },
    (doordash.api.inject) = {
      field: "cx_geo_submarket_id",
      injection_rule: {
        cast_type: "int64",
        default_value: "-1"
      }
    }
  ];

  // The timezone of the user's location.
  google.protobuf.StringValue timezone = 5 [
    (doordash.api.inject_from_headers) = {
      field: "DD-LOCATION-CONTEXT.timezone",
      injection_rule: {
        cast_type: "nullable_string",
        conversions: [
          DECODE_BASE64,
          JSON
        ]
      }
    },
    (doordash.api.inject) = {
      field: "cx_geo_timezone",
      injection_rule: {cast_type: "nullable_string"}
    }
  ];

  // The country short name of the user's location.
  google.protobuf.StringValue country_shortname = 6 [
    (doordash.api.inject_from_headers) = {
      field: "DD-LOCATION-CONTEXT.country_short_name",
      injection_rule: {
        cast_type: "nullable_string",
        conversions: [
          DECODE_BASE64,
          JSON
        ]
      }
    },
    (doordash.api.inject) = {
      field: "cx_geo_country_short_name",
      injection_rule: {cast_type: "nullable_string"}
    }
  ];

  // The zip code of the user's location.
  google.protobuf.StringValue zip_code = 9 [
    (doordash.api.inject_from_headers) = {
      field: "DD-LOCATION-CONTEXT.zipcode",
      injection_rule: {
        cast_type: "nullable_string",
        conversions: [
          DECODE_BASE64,
          JSON
        ]
      }
    },
    (doordash.api.inject) = {field: "cx_geo_zip_code"}
  ];
}
