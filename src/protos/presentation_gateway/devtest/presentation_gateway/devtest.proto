syntax = "proto3";

package pg;

import "common/service_client_config.proto";
import "doordash.api/annotations.proto";
import "google/api/annotations.proto";
import "google/protobuf/wrappers.proto";

option go_package = "github.com/doordash/services-protobuf/generated/presentation_gateway";
option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.pg";

// Test gRPCs for presentation gateway devconsole integration
service Devtest {
  option (service_client.client_config).response_attempt_timeout_millis = 5000;
  option (service_client.client_config).retry_config.max_attempts = 2;

  option (doordash.api.service) = {
    name: "presentation-gateway"
    port: 50051
    name_spaces: "presentation-gateway"
    // will update owner session but to pass UG option validation atm
    owner: {
      id: "presentation-gateway"
      name: "presentation-gateway-platform"
      slack_channel: "#presentation-gateway-platform"
      email_alias: "presentation-gateway@doordash.com"
    }
    target_products: [INTERNAL]
  };

  // Hello World 1
  rpc HelloWorld1(HelloWorld1Request) returns (HelloWorld1Response) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 5000;
    option (service_client.client_method_config).retry_config.max_attempts = 3;
    option (google.api.http) = {get: "/presentation-gateway/v1/devtest/hello-world-1"};
    option (doordash.api.endpoint) = {
      hostname: "pg-devtest-hello-world-1.service.prod.ddsd"
      port: 50051
      tier: T3
      lifecycle: TEST
      authorization: [DD_USER]
      target_products: [INTERNAL]
    };
  }

  // Hello World 2
  rpc HelloWorld2(HelloWorld2Request) returns (HelloWorld2Response) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 5000;
    option (service_client.client_method_config).retry_config.max_attempts = 3;
    option (google.api.http) = {get: "/presentation-gateway/v1/devtest/hello-world-2"};
    option (doordash.api.endpoint) = {
      hostname: "pg-devtest-hello-world-2.service.prod.ddsd"
      port: 50051
      tier: T3
      lifecycle: TEST
      authorization: [DD_USER]
      target_products: [INTERNAL]
    };
  }

  // Hello World 3
  rpc HelloWorld3(HelloWorld3Request) returns (HelloWorld3Response) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 5000;
    option (service_client.client_method_config).retry_config.max_attempts = 3;
    option (google.api.http) = {get: "/presentation-gateway/v1/devtest/hello-world-3"};
    option (doordash.api.endpoint) = {
      hostname: "pg-devtest-hello-world-3.service.prod.ddsd"
      port: 50051
      tier: T3
      lifecycle: TEST
      authorization: [DD_USER]
      target_products: [INTERNAL]
    };
  }

  // Hello World 4
  rpc HelloWorld4(HelloWorld4Request) returns (HelloWorld4Response) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 5000;
    option (service_client.client_method_config).retry_config.max_attempts = 3;
    option (google.api.http) = {get: "/presentation-gateway/v1/devtest/hello-world-4"};
    option (doordash.api.endpoint) = {
      hostname: "pg-devtest-hello-world-4.service.prod.ddsd"
      port: 50051
      tier: T3
      lifecycle: TEST
      authorization: [DD_USER]
      target_products: [INTERNAL]
    };
  }

  // Hello World 5
  rpc HelloWorld5(HelloWorld5Request) returns (HelloWorld5Response) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 5000;
    option (service_client.client_method_config).retry_config.max_attempts = 3;
    option (google.api.http) = {get: "/presentation-gateway/v1/devtest/hello-world-5"};
    option (doordash.api.endpoint) = {
      hostname: "pg-devtest-hello-world-5.service.prod.ddsd"
      port: 50051
      tier: T3
      lifecycle: TEST
      authorization: [DD_USER]
      target_products: [INTERNAL]
    };
  }
}

// HelloWorld1Request
message HelloWorld1Request {
  // user id
  string id = 1;
}

// HelloWorld1Response
message HelloWorld1Response {
  // text
  string text = 1;
}

// HelloWorld2Request
message HelloWorld2Request {
  // user id
  string id = 1;
}

// HelloWorld2Response
message HelloWorld2Response {
  // text
  string text = 1;
}

// HelloWorld3Request
message HelloWorld3Request {
  // user id
  string id = 1;
}

// HelloWorld3Response
message HelloWorld3Response {
  // text
  string text = 1;
}

// HelloWorld4Request
message HelloWorld4Request {
  // user id
  string id = 1;
}

// HelloWorld4Response
message HelloWorld4Response {
  // text
  string text = 1;
}

// HelloWorld5Request
message HelloWorld5Request {
  // user id
  string id = 1;
}

// HelloWorld5Response
message HelloWorld5Response {
  // text
  string text = 1;
}
