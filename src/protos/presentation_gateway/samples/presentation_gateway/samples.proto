syntax = "proto3";

package pg;

import "common/service_client_config.proto";
import "doordash.api/annotations.proto";
import "google/api/annotations.proto";
import "google/protobuf/wrappers.proto";
import "lego.response/lego_response.proto";

option go_package = "github.com/doordash/services-protobuf/generated/presentation_gateway";
option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.pg";

// Demo gRPCs for presentation gateway, expose to UG
service Samples {
  option (service_client.client_config).response_attempt_timeout_millis = 5000;
  option (service_client.client_config).retry_config.max_attempts = 2;

  option (doordash.api.service) = {
    name: "presentation-gateway"
    port: 50051
    name_spaces: "presentation-gateway"
    // will update owner session but to pass UG option validation atm
    owner: {
      id: "presentation-gateway"
      name: "presentation-gateway-platform"
      slack_channel: "#presentation-gateway-platform"
      email_alias: "presentation-gateway@doordash.com"
    }
    target_products: [INTERNAL]
  };

  // fan out based on a condition
  rpc ConditionalFanOut(ConditionalFanOutRequest) returns (ConditionalFanOutResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 5000;
    option (service_client.client_method_config).retry_config.max_attempts = 3;
    option (google.api.http) = {get: "/presentation-gateway/v1/samples/conditional-fan-out"};
    option (doordash.api.endpoint) = {
      tier: T3
      lifecycle: TEST
      authorization: [DD_USER]
      target_products: [INTERNAL]
      presentation_gateway_endpoint: true
    };
  }

  // Sample parallel request
  rpc ParallelFanOut(ParallelFanOutRequest) returns (ParallelFanOutResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 5000;
    option (service_client.client_method_config).retry_config.max_attempts = 3;
    option (google.api.http) = {get: "/presentation-gateway/v1/samples/parallel-fan-out"};
    option (doordash.api.endpoint) = {
      tier: T3
      lifecycle: TEST
      authorization: [DD_USER]
      target_products: [INTERNAL]
      presentation_gateway_endpoint: true
    };
  }

  // end step that uses a branch
  rpc BranchEndToNextBranching(BranchEndToNextBranchingRequest) returns (BranchEndToNextBranchingResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 5000;
    option (service_client.client_method_config).retry_config.max_attempts = 3;
    option (google.api.http) = {get: "/presentation-gateway/v1/samples/branch-end-to-next-branching"};
    option (doordash.api.endpoint) = {
      tier: T3
      lifecycle: TEST
      authorization: [DD_USER]
      target_products: [INTERNAL]
      presentation_gateway_endpoint: true
    };
  }

  // branches that are nested
  rpc NestedBranches(NestedBranchesRequest) returns (NestedBranchesResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 5000;
    option (service_client.client_method_config).retry_config.max_attempts = 3;
    option (google.api.http) = {get: "/presentation-gateway/v1/samples/nested-branches"};
    option (doordash.api.endpoint) = {
      tier: T3
      lifecycle: TEST
      authorization: [DD_USER]
      target_products: [INTERNAL]
      presentation_gateway_endpoint: true
    };
  }

  // call same dependency in parallel
  rpc ParallelFanOutSameDependency(ParallelFanOutSameDependencyRequest) returns (ParallelFanOutSameDependencyResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 5000;
    option (service_client.client_method_config).retry_config.max_attempts = 3;
    option (google.api.http) = {get: "/presentation-gateway/v1/samples/parallel-fan-out-same-dependency"};
    option (doordash.api.endpoint) = {
      tier: T3
      lifecycle: TEST
      authorization: [DD_USER]
      target_products: [INTERNAL]
      presentation_gateway_endpoint: true
    };
  }

  // read a dv
  rpc ReadDv(ReadDvRequest) returns (ReadDvResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 5000;
    option (service_client.client_method_config).retry_config.max_attempts = 3;
    option (google.api.http) = {get: "/presentation-gateway/v1/samples/read-dv"};
    option (doordash.api.endpoint) = {
      tier: T3
      lifecycle: TEST
      authorization: [DD_USER]
      target_products: [INTERNAL]
      presentation_gateway_endpoint: true
    };
  }

  // make calls sequentially and fan out
  rpc SequentialFanOut(SequentialFanOutRequest) returns (SequentialFanOutResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 5000;
    option (service_client.client_method_config).retry_config.max_attempts = 3;
    option (google.api.http) = {get: "/presentation-gateway/v1/samples/sequential-fan-out"};
    option (doordash.api.endpoint) = {
      tier: T3
      lifecycle: TEST
      authorization: [DD_USER]
      target_products: [INTERNAL]
      presentation_gateway_endpoint: true
    };
  }

  // transform data in sequence as dependencies
  rpc SequentialFanOutWithTransform(SequentialFanOutWithTransformRequest) returns (SequentialFanOutWithTransformResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 5000;
    option (service_client.client_method_config).retry_config.max_attempts = 3;
    option (google.api.http) = {get: "/presentation-gateway/v1/samples/sequential-fan-out-with-transform"};
    option (doordash.api.endpoint) = {
      tier: T3
      lifecycle: TEST
      authorization: [DD_USER]
      target_products: [INTERNAL]
      presentation_gateway_endpoint: true
    };
  }

  // simple transformation
  rpc SimpleTransformation(SimpleTransformationRequest) returns (SimpleTransformationResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 5000;
    option (service_client.client_method_config).retry_config.max_attempts = 3;
    option (google.api.http) = {get: "/presentation-gateway/v1/samples/simple-transformation"};
    option (doordash.api.endpoint) = {
      tier: T3
      lifecycle: TEST
      authorization: [DD_USER]
      target_products: [INTERNAL]
      presentation_gateway_endpoint: true
    };
  }

  // sample transforming data and making a call
  rpc SimpleTransformationWithCall(SimpleTransformationWithCallRequest) returns (SimpleTransformationWithCallResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 5000;
    option (service_client.client_method_config).retry_config.max_attempts = 3;
    option (google.api.http) = {get: "/presentation-gateway/v1/samples/simple-transformation-with-call"};
    option (doordash.api.endpoint) = {
      tier: T3
      lifecycle: TEST
      authorization: [DD_USER]
      target_products: [INTERNAL]
      presentation_gateway_endpoint: true
    };
  }

  // sample with two branches
  rpc TwoBranches(TwoBranchesRequest) returns (TwoBranchesResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 5000;
    option (service_client.client_method_config).retry_config.max_attempts = 3;
    option (google.api.http) = {get: "/presentation-gateway/v1/samples/two-branches"};
    option (doordash.api.endpoint) = {
      tier: T3
      lifecycle: TEST
      authorization: [DD_USER]
      target_products: [INTERNAL]
      presentation_gateway_endpoint: true
    };
  }

  // sample for component
  rpc ComponentTransformation(ComponentTransformationRequest) returns (ComponentTransformationResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 5000;
    option (service_client.client_method_config).retry_config.max_attempts = 3;
    option (google.api.http) = {get: "/presentation-gateway/v1/samples/component-transformation"};
    option (doordash.api.endpoint) = {
      tier: T3
      lifecycle: TEST
      authorization: [DD_USER]
      target_products: [INTERNAL]
      presentation_gateway_endpoint: true
    };
  }

  // Demo grpc that fetches the last order from a user
  rpc GetLastOrder(GetLastOrderRequest) returns (lego.response.v1.LegoPageResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 5000;
    option (service_client.client_method_config).retry_config.max_attempts = 3;
    option (google.api.http) = {get: "/presentation-gateway/v1/get-last-order"};
    option (doordash.api.endpoint) = {
      tier: T3
      lifecycle: TEST
      authorization: [DD_USER]
      target_products: [INTERNAL]
      presentation_gateway_endpoint: true
    };
  }

  // Demo grpc that calls a Pedregal graph
  rpc Pedregal(PedregalRequest) returns (PedregalResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 5000;
    option (service_client.client_method_config).retry_config.max_attempts = 3;
    option (google.api.http) = {get: "/presentation-gateway/v1/pedregal"};
    option (doordash.api.endpoint) = {
      tier: T3
      lifecycle: TEST
      authorization: [DD_USER]
      target_products: [INTERNAL]
      presentation_gateway_endpoint: true
    };
  }

  // Demo grpc that fetches the welcome message for the last order from a user
  rpc WelcomeMessage(WelcomeMessageRequest) returns (lego.response.v1.LegoPageResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 5000;
    option (service_client.client_method_config).retry_config.max_attempts = 3;
    option (google.api.http) = {get: "/presentation-gateway/v1/welcome-message"};
    option (doordash.api.endpoint) = {
      tier: T3
      lifecycle: TEST
      authorization: [DD_USER]
      target_products: [INTERNAL]
      presentation_gateway_endpoint: true
    };
  }

  // Demo grpc that demonstrates shared components
  rpc SharedComponents(SharedComponentsRequest) returns (SharedComponentsResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 5000;
    option (service_client.client_method_config).retry_config.max_attempts = 3;
    option (google.api.http) = {get: "/presentation-gateway/v1/samples/shared-components"};
    option (doordash.api.endpoint) = {
      hostname: "pg-samples-shared-components.service.prod.ddsd"
      port: 50051
      tier: T3
      lifecycle: TEST
      authorization: [DD_USER]
      target_products: [INTERNAL]
    };
  }

  // Demo grpc that returns the consumers market id
  rpc GetConsumerMarketId(GetConsumerMarketIdRequest) returns (GetConsumerMarketIdResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 5000;
    option (service_client.client_method_config).retry_config.max_attempts = 3;
    option (google.api.http) = {get: "/presentation-gateway/v1/consumer-market-id"};
    option (doordash.api.endpoint) = {
      tier: T3
      lifecycle: TEST
      authorization: [CX_USER]
      target_products: [INTERNAL]
      presentation_gateway_endpoint: true
    };
  }

  // Demo grpc that returns the consumers address
  rpc GetConsumerAddress(GetConsumerAddressRequest) returns (GetConsumerAddressResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 5000;
    option (service_client.client_method_config).retry_config.max_attempts = 3;
    option (google.api.http) = {get: "/presentation-gateway/v1/consumer-address"};
    option (doordash.api.endpoint) = {
      tier: T3
      lifecycle: TEST
      authorization: [CX_USER]
      target_products: [INTERNAL]
      presentation_gateway_endpoint: true
    };
  }

  // Demo grpc that returns the consumers id
  rpc GetConsumerId(GetConsumerIdRequest) returns (GetConsumerIdResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 5000;
    option (service_client.client_method_config).retry_config.max_attempts = 3;
    option (google.api.http) = {get: "/presentation-gateway/v1/consumer-id"};
    option (doordash.api.endpoint) = {
      tier: T3
      lifecycle: TEST
      authorization: [CX_USER]
      target_products: [INTERNAL]
      presentation_gateway_endpoint: true
    };
  }

  // Demo grpc that returns the consumers roles
  rpc GetConsumerRoles(GetConsumerRolesRequest) returns (GetConsumerRolesResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 5000;
    option (service_client.client_method_config).retry_config.max_attempts = 3;
    option (google.api.http) = {get: "/presentation-gateway/v1/consumer-roles"};
    option (doordash.api.endpoint) = {
      tier: T3
      lifecycle: TEST
      authorization: [CX_USER]
      target_products: [INTERNAL]
      presentation_gateway_endpoint: true
    };
  }

  // Demo grpc that fetches the first order from a user
  rpc GetFirstOrder(GetFirstOrderRequest) returns (lego.response.v1.LegoPageResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 5000;
    option (service_client.client_method_config).retry_config.max_attempts = 3;
    option (google.api.http) = {get: "/presentation-gateway/v1/get-first-order"};
    option (doordash.api.endpoint) = {
      tier: T3
      lifecycle: TEST
      authorization: [DD_USER]
      target_products: [INTERNAL]
      presentation_gateway_endpoint: true
    };
  }
}

// ConditionalFanOutRequest
message ConditionalFanOutRequest {
  // consumer id
  int64 consumer_id = 1;
  // whether address required
  bool require_address = 2;
}

// ConditionalFanOutResponse
message ConditionalFanOutResponse {
  // response
  google.protobuf.StringValue text = 1;
}

// ParallelFanOutRequest
message ParallelFanOutRequest {
  // id
  google.protobuf.StringValue id = 1;
}

// ParallelFanOutResponse
message ParallelFanOutResponse {
  // response
  google.protobuf.StringValue text = 1;
}

// BranchEndToNextBranchingRequest
message BranchEndToNextBranchingRequest {
  // id
  google.protobuf.StringValue id = 1;
}

// BranchEndToNextBranchingResponse
message BranchEndToNextBranchingResponse {
  // response
  google.protobuf.StringValue text = 1;
}

// NestedBranchesRequest
message NestedBranchesRequest {
  // id
  google.protobuf.StringValue id = 1;
}

// NestedBranchesResponse
message NestedBranchesResponse {
  // response
  google.protobuf.StringValue text = 1;
}

// ParallelFanOutSameDependencyRequest
message ParallelFanOutSameDependencyRequest {
  // consumer id
  int64 consumer_id = 1;
  // guest consumer id
  int64 guest_cid = 2;
}

// ParallelFanOutSameDependencyResponse
message ParallelFanOutSameDependencyResponse {
  // response
  google.protobuf.StringValue text = 1;
}

// ReadDvRequest
message ReadDvRequest {
  // id
  google.protobuf.StringValue id = 1;
}

// ReadDvResponse
message ReadDvResponse {
  // response
  google.protobuf.StringValue text = 1;
}

// SequentialFanOutRequest
message SequentialFanOutRequest {
  // id
  google.protobuf.StringValue id = 1;
}

// SequentialFanOutResponse
message SequentialFanOutResponse {
  // response
  google.protobuf.StringValue text = 1;
}

// SequentialFanOutWithTransformRequest
message SequentialFanOutWithTransformRequest {
  // id
  google.protobuf.StringValue id = 1;
}

// SequentialFanOutWithTransformResponse
message SequentialFanOutWithTransformResponse {
  // response
  google.protobuf.StringValue text = 1;
}

// SimpleTransformationRequest
message SimpleTransformationRequest {
  // id
  google.protobuf.StringValue id = 1;
}

// SimpleTransformationResponse
message SimpleTransformationResponse {
  // response
  google.protobuf.StringValue text = 1;
}

// SimpleTransformationWithCallRequest
message SimpleTransformationWithCallRequest {
  // id
  google.protobuf.StringValue id = 1;
}

// SimpleTransformationWithCallResponse
message SimpleTransformationWithCallResponse {
  // response
  google.protobuf.StringValue text = 1;
}

// TwoBranchesRequest
message TwoBranchesRequest {
  // id
  google.protobuf.StringValue id = 1;
}

// TwoBranchesResponse
message TwoBranchesResponse {
  // response
  google.protobuf.StringValue text = 1;
}

// ComponentTransformationRequest
message ComponentTransformationRequest {
  // id
  google.protobuf.StringValue id = 1;
}

// ComponentTransformationResponse
message ComponentTransformationResponse {
  // response
  google.protobuf.StringValue text = 1;
}

// GetLastOrderRequest
message GetLastOrderRequest {
  // User id
  string user_id = 1 [(doordash.api.inject_id) = USER_ID];
}

// GetFirstOrderResponse
message GetFirstOrderRequest {
  // User id
  string user_id = 1 [(doordash.api.inject_id) = USER_ID];
}

// PedregalRequest
message PedregalRequest {
  // User name
  string name = 1;
}

// PedregalResponse
message PedregalResponse {
  // response
  google.protobuf.StringValue text = 1;
}

// WelcomeMessageRequest
message WelcomeMessageRequest {
  // User id
  string user_id = 1 [(doordash.api.inject_id) = USER_ID];
}

// SharedComponentsRequest
message SharedComponentsRequest {
  // id
  google.protobuf.StringValue id = 1;
}

// SharedComponentsResponse
message SharedComponentsResponse {
  // response
  google.protobuf.StringValue text = 1;
}

// GetConsumerMarketIdRequest
message GetConsumerMarketIdRequest {
  // User id
  string user_id = 1 [(doordash.api.inject_id) = USER_ID];
}

// GetConsumerMarketIdResponse
message GetConsumerMarketIdResponse {
  // User market id
  string market_id = 1;
}

// GetConsumerAddress
message GetConsumerAddressRequest {
  // User id
  string user_id = 1 [(doordash.api.inject_id) = USER_ID];
}

// GetConsumerAddressResponse
message GetConsumerAddressResponse {
  // User address
  string address = 1;
}

// GetConsumerId
message GetConsumerIdRequest {
  // User id
  string user_id = 1 [(doordash.api.inject_id) = USER_ID];
}

// GetConsumerIdResponse
message GetConsumerIdResponse {
  // User id
  string consumer_id = 1;
}

// GetConsumerRoles
message GetConsumerRolesRequest {
  // User id
  string user_id = 1 [(doordash.api.inject_id) = USER_ID];
}

// GetConsumerRolesResponse
message GetConsumerRolesResponse {
  // User roles
  repeated string roles = 1;
}
