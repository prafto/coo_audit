syntax = "proto3";

package data_retention_service.v1;

import "google/protobuf/any.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.data.retention.v1";

// Filter condition
message Filter {
  // property name
  google.protobuf.StringValue property = 1;
  // filter value
  google.protobuf.StringValue value = 2;
}

// Indicate whether the request has been successfully completed
enum ResponseCode {
  // Unspecified
  RESPONSE_CODE_UNSPECIFIED = 0;
  // Request is successful
  RESPONSE_CODE_SUCCESS = 1;
  // Request fails
  RESPONSE_CODE_ERROR = 2;
}

// active enum
enum ActiveUseCase {
  /* unspecified usecase */
  ACTIVE_USE_CASE_UNSPECIFIED = 0;
  /* Used for showcasing an active retention rule */
  ACTIVE_USE_CASE_YES = 1;
  /* Used for showcasing an in-active retention rule */
  ACTIVE_USE_CASE_NO = 2;
}

// approval enum
enum ApprovalUseCase {
  /* unspecified usecase */
  APPROVAL_USE_CASE_UNSPECIFIED = 0;
  /* approval in progress when one approval is received */
  APPROVAL_USE_CASE_IN_PROGRESS = 1;
  /* approved retention rule */
  APPROVAL_USE_CASE_APPROVED = 2;
  /* rejected retention rule */
  APPROVAL_USE_CASE_REJECTED = 3;
  /* held by legal */
  APPROVAL_USE_CASE_HOLD = 4;
}

// add change log enum
enum ChangelogUseCase {
  // default case - when rule gets onboarded
  CHANGELOG_USE_CASE_UNSPECIFIED = 0;
  // approved retention rule
  CHANGELOG_USE_CASE_APPROVAL = 1;
  // active retention rule - when the retention rule is approved by 2 users
  CHANGELOG_USE_CASE_ACTIVATE = 2;
  // deactivated retention rule
  CHANGELOG_USE_CASE_DEACTIVATE = 3;
  // subscriber added to retention rule
  CHANGELOG_USE_CASE_SUBSCRIBE = 4;
  // subscriber removed from retention rule
  CHANGELOG_USE_CASE_UNSUBSCRIBE = 5;
  // interval change
  CHANGELOG_USE_CASE_FREQUENCY = 6;
  // strategy change - archival or deletion
  CHANGELOG_USE_CASE_STRATEGY = 7;
  // scheme change - ondemand or cron
  CHANGELOG_USE_CASE_SCHEME = 8;
  // s3 bucket change - from default to a specific bucket or viceversa
  CHANGELOG_USE_CASE_S3BUCKET = 9;
}

// add runtime enum
enum RetentionRuntimeUseCase {
  // default case - when rule gets onboarded
  RETENTION_RUNTIME_USE_CASE_UNSPECIFIED = 0;
  // success runtime
  RETENTION_RUNTIME_USE_CASE_SUCCEDED = 1;
  // failure runtime
  RETENTION_RUNTIME_USE_CASE_FAILED = 2;
  // running runtime
  RETENTION_RUNTIME_USE_CASE_RUNNING = 3;
}

// store type
message StoreType {
  // store type id
  int32 id = 1;
  // store type name
  google.protobuf.StringValue store_type_name = 2;
}

// empty store type request
message ListStoreTypeRequest {}

// store type response
message ListStoreTypeResponse {
  /* all the store types */
  repeated StoreType store_types = 1;
  // Response code
  ResponseCode response_code = 2;
}

// rule type - delete, archive
message RetentionRuleStrategy {
  // rule strategy id
  int32 id = 1;
  // rule strategy name
  google.protobuf.StringValue rule_strategy_name = 2;
}

// empty rule strategy request
message ListRetentionRuleStrategyRequest {}

// rule strategy response
message ListRetentionRuleStrategyResponse {
  /* all the retention strategies */
  repeated RetentionRuleStrategy rule_strategies = 1;
  // Response code
  ResponseCode response_code = 2;
}

// retention rule scheme
message RetentionRuleScheme {
  // retention rule request scheme id
  int32 id = 1;
  // retention rule request scheme
  google.protobuf.StringValue retention_rule_scheme = 2;
}

// empty message for listing rule schemes
message ListRetentionRuleSchemeRequest {}

// retention rule scheme response
message ListRetentionRuleSchemeResponse {
  /* all the retention rule schemes */
  repeated RetentionRuleScheme rule_schemes = 1;
  // Response code
  ResponseCode response_code = 2;
}

// retention rule interval
message RetentionRuleInterval {
  // retention rule interval id
  int32 id = 1;
  // retention rule request interval name
  google.protobuf.StringValue name = 2;
  // retention rule request interval count
  int32 retention_hold = 3;
}

// empty ListRetentionRuleIntervalRequest
message ListRetentionRuleIntervalRequest {}

// retention rule interval response
message ListRetentionRuleIntervalResponse {
  /* all the retention rule intervals */
  repeated RetentionRuleInterval rule_intervals = 1;
  // Response code
  ResponseCode response_code = 2;
}

// column metadata
message ColumnMetadata {
  /* column name */
  google.protobuf.StringValue column_name = 1;
  /* column type - timestamp, int, string */
  google.protobuf.StringValue column_type = 2;
  /* value needed to be compared to - applicable only for int, varchar datatypes */
  google.protobuf.StringValue column_value = 3;
  /* value need to be >, < , =, >=, <=, != , like */
  google.protobuf.StringValue column_operator = 4;
  /* partition priority */
  int32 column_priority = 5;
}

// retention rule object
message RetentionRule {
  /* retention rule name */
  google.protobuf.StringValue name = 1;
  /* retention rule description */
  google.protobuf.StringValue description = 2;
  /* retention rule is active or not */
  ActiveUseCase is_active = 3;
  /* when is the retention rule created */
  google.protobuf.Timestamp created_at = 4;
  /* who created the retention rule */
  google.protobuf.StringValue created_by = 5;
  /* when was the retention rule last updated */
  google.protobuf.Timestamp last_updated_at = 6;
  /* who updated the retention rule */
  google.protobuf.StringValue last_update_by = 7;
  /* what data store type is the retention rule applied to */
  int32 store_type_id = 8;
  /* database name */
  google.protobuf.StringValue database = 9;
  /* schema name */
  google.protobuf.StringValue schema = 10;
  /* table name */
  google.protobuf.StringValue table = 11;
  /* column names */
  repeated ColumnMetadata column_names = 12;
  /* is the retention rule approved */
  ApprovalUseCase is_approve = 13;
  /* retention rule scheme -> ondemand/scheduled */
  int32 retention_rule_scheme_id = 14;
  /* retention interval */
  int32 retention_rule_interval_id = 15;
  /* retention strategy -> archival/deletion*/
  int32 retention_rule_strategy_id = 16;
  /* uuid retention rule id generated from the backend */
  google.protobuf.StringValue id = 17;
  /* custom s3 bucket */
  google.protobuf.StringValue s3_bucket = 18;
}

// retention rule for dropping the table
message DropTableRetentionRule {
  /* uuid drop table retention rule id generated from the backend */
  google.protobuf.StringValue id = 1;
  /* database name */
  google.protobuf.StringValue database = 2;
  /* schema name */
  google.protobuf.StringValue schema = 3;
  /* table name */
  google.protobuf.StringValue table = 4;
  /* table size */
  double total_size = 5;
  /* when is the retention rule created */
  google.protobuf.Timestamp created_at = 6;
}

// retention rule create request
message SaveRetentionRuleRequest {
  /* retention rule object */
  RetentionRule rule = 1;
}

// drop table retention rule create request
message SaveDropTableRetentionRuleRequest {
  /* drop table retention rule object */
  DropTableRetentionRule rule = 1;
}

// retention rule create response
message SaveRetentionRuleResponse {
  /* uuid retention rule id generated from the backend */
  google.protobuf.StringValue id = 1;
  /* retention rule object */
  RetentionRule rule = 2;
  // Response code
  ResponseCode response_code = 3;
  // misc message for error handling
  google.protobuf.StringValue error_message = 4;
}

// drop table retention rule create response
message SaveDropTableRetentionRuleResponse {
  /* uuid drop table retention rule id generated by the backed */
  google.protobuf.StringValue id = 1;
  /* retention rule object */
  DropTableRetentionRule rule = 2;
  // Response code
  ResponseCode response_code = 3;
  // misc message for error handling
  google.protobuf.StringValue error_message = 4;
}

// list retention rules based on active status
message ListRetentionRuleRequest {
  // Filter condition, return all if no filter
  repeated Filter filter = 1;
  // page number
  int32 offset = 2;
  // page size
  int32 pagination = 3;
}

// drop the temporary tables list
message ListDropTableRetentionRuleRequest {
  // Filter condition, return all if no filter
  repeated Filter filter = 1;
  // page number
  int32 offset = 2;
  // page size
  int32 pagination = 3;
}

// list retention rule response
message ListRetentionRuleResponse {
  /* retention rule object */
  repeated RetentionRule retention_rules = 1;
  // Response code
  ResponseCode response_code = 2;
}

// drop the temporary tables list response
message ListDropTableRetentionRuleResponse {
  /* retention rule object */
  repeated DropTableRetentionRule retention_rules = 1;
  // Response code
  ResponseCode response_code = 2;
}

// update retention rule request
message UpdateRetentionRuleRequest {
  /* retention rule name */
  google.protobuf.StringValue name = 1;
  /* retention rule description */
  google.protobuf.StringValue description = 2;
  /* retention rule scheme -> ondemand/scheduled */
  int32 retention_request_scheme_id = 3;
  /* retention interval */
  int32 retention_request_interval_id = 4;
  /* when was the retention rule last updated */
  google.protobuf.Timestamp last_updated_at = 5;
  /* who updated the retention rule */
  google.protobuf.StringValue last_update_by = 6;
  /* custom s3 bucket */
  google.protobuf.StringValue s3_bucket = 7;
  /* strategy id -> archiveOnDatalake/Archive/Deletion/hardDeletion/completeArchive */
  int32 retention_request_strategy_id = 8;
}

// update retention rule response
message UpdateRetentionRuleResponse {
  /* uuid retention rule id generated from the backend */
  google.protobuf.StringValue id = 1;
  /* retention rule object */
  RetentionRule retention_rule = 2;
  // Response code
  ResponseCode response_code = 3;
  // misc message for error handling
  google.protobuf.StringValue error_message = 4;
}

// delete retention rule request
message DeleteRetentionRuleRequest {
  /* retention rule name */
  google.protobuf.StringValue name = 1;
  /* who updated the retention rule */
  google.protobuf.StringValue last_update_by = 2;
  /* when was the retention rule last updated */
  google.protobuf.Timestamp last_updated_at = 3;
}

// delete retention rule response
message DeleteRetentionRuleResponse {
  /* uuid retention rule id generated from the backend */
  google.protobuf.StringValue id = 1;
  // Response code
  ResponseCode response_code = 2;
  // misc message for error handling
  google.protobuf.StringValue error_message = 3;
}

// retention rule approval
message RetentionRuleApproval {
  /* uuid retention rule approval id generated from the backend */
  google.protobuf.StringValue id = 1;
  /* uuid retention rule id generated from the backend */
  google.protobuf.StringValue retention_rule_id = 2;
  /* approver name from single sign on */
  google.protobuf.StringValue approver_name = 3;
  /* retention rule is active or not */
  ActiveUseCase is_active = 4;
  /* retention rule is approved or not */
  ApprovalUseCase is_approved = 5;
  /* comments - on approval or rejection */
  google.protobuf.StringValue comment = 6;
  /* when is the retention rule created */
  google.protobuf.Timestamp created_at = 7;
  /* who created the retention rule */
  google.protobuf.StringValue created_by = 8;
  /* when was the retention rule last updated */
  google.protobuf.Timestamp last_updated_at = 9;
  /* when was the retention rule last updated */
  google.protobuf.StringValue last_update_by = 10;
}

// retention rule approval request
message ListRetentionRuleApprovalRequest {
  /* is active filter */
  ActiveUseCase is_active = 1;
  /* is approve filter */
  ApprovalUseCase is_approve = 2;
}

// retention rule approval response
message ListRetentionRuleApprovalResponse {
  /* rule approval objects */
  repeated RetentionRuleApproval rule_approvals = 1;
  // Response code
  ResponseCode response_code = 2;
}

// retention rule approval request
message SaveRetentionRuleApprovalRequest {
  /* retention rule name */
  google.protobuf.StringValue name = 1;
  /* approver name */
  google.protobuf.StringValue approver_name = 2;
  /* comments on approval/rejection */
  google.protobuf.StringValue comments = 3;
  /* action type */
  ApprovalUseCase action = 4;
}

// retention rule approval response
message SaveRetentionRuleApprovalResponse {
  // approval response
  RetentionRuleApproval rule_approval = 1;
  // Response code
  ResponseCode response_code = 2;
  // misc message for error handling
  google.protobuf.StringValue error_message = 3;
}

// retention request approval change
message UpdateRetentionRuleApprovalRequest {
  /* retention rule name */
  google.protobuf.StringValue name = 1;
  /* approver name */
  google.protobuf.StringValue approver_name = 2;
  /* comments on approval/rejection */
  google.protobuf.StringValue comments = 3;
  /* action type */
  ApprovalUseCase action = 4;
}

// retention rule approval response
message UpdateRetentionRuleApprovalResponse {
  // approval response
  RetentionRuleApproval rule_approval = 1;
  // Response code
  ResponseCode response_code = 2;
  // misc message for error handling
  google.protobuf.StringValue error_message = 3;
}

// subscriber object
message Subscriber {
  // rule id
  google.protobuf.StringValue retention_rule_id = 1;
  // subscriber name
  google.protobuf.StringValue subscriber_name = 2;
  // Timestamp when the rule is created
  google.protobuf.Timestamp created_at = 3;
  // Email of person who created the rule
  google.protobuf.StringValue created_by = 4;
  // Timestamp when the rule is updated
  google.protobuf.Timestamp last_updated_at = 5;
  // Email of person who last updated the rule
  google.protobuf.StringValue last_update_by = 6;
}

// save retention subscription
message RetentionSubscription {
  // rule name
  google.protobuf.StringValue retention_rule_name = 1;
  // subscriber name
  google.protobuf.StringValue subscriber_name = 2;
}

// retention subscription request
message SaveRetentionSubscriptionRequest {
  /* retention subscription object */
  RetentionSubscription retention_subscription = 1;
}

// retention subscription response
message SaveRetentionSubscriptionResponse {
  /* uuid retention rule subscriber id generated from the backend */
  google.protobuf.StringValue id = 1;
  /* subscriber object */
  Subscriber subscriber = 2;
  // Response code
  ResponseCode response_code = 3;
  // misc message for error handling
  google.protobuf.StringValue error_message = 4;
}

// list the subscribers of a retention rule request
message ListSubscribersToRetentionRuleRequest {
  // rule name
  google.protobuf.StringValue retention_rule_name = 1;
}

// list tje subscribers of a retention rule response
message ListSubscribersToRetentionRuleResponse {
  /* subscriber objects */
  repeated Subscriber subscribers = 1;
  // Response code
  ResponseCode response_code = 2;
}

// unsubscribe to a retention rule request
message UnSubscribeToRetentionRuleRequest {
  /* RetentionSubscription object */
  RetentionSubscription retention_subscription = 1;
}

// unsubscribe to a retention rule response
message UnSubscribeToRetentionRuleResponse {
  /* uuid retention rule subscriber id generated from the backend */
  google.protobuf.StringValue id = 1;
  // Response code
  ResponseCode response_code = 2;
  // misc message for error handling
  google.protobuf.StringValue error_message = 3;
}

// retention Rule Change Log
message RetentionRuleChangeLog {
  /* uuid retention rule change log id generated from the backend */
  google.protobuf.StringValue id = 1;
  /* uuid retention rule id generated from the backend */
  google.protobuf.StringValue retention_rule_id = 2;
  /* change log type - DURATION CHANGE, ACTIVE STATUS, APPROVAL change etc */
  ChangelogUseCase change_log_type = 3;
  /* previous value of the retention rule attribute */
  google.protobuf.StringValue previous_value = 4;
  /* modified value for it */
  google.protobuf.StringValue current_value = 5;
  // Timestamp when the rule is created
  google.protobuf.Timestamp created_at = 6;
  // who triggered the update
  google.protobuf.StringValue created_by = 7;
}

// list the changes pertaining to a retention rule request
message ListChangeLogByRetentionRuleNameRequest {
  /* retention rule name */
  google.protobuf.StringValue name = 1;
}

// list the changes pertaining to a retention rule response
message ListChangeLogByRetentionRuleNameResponse {
  /* change logs for a particular retention rule name */
  repeated RetentionRuleChangeLog change_logs = 1;
  // Response code
  ResponseCode response_code = 2;
}

// retention rule runtime status
message RetentionRequestRuntimeStatus {
  /* uuid for the table */
  google.protobuf.StringValue id = 1;
  /* retention rule uuid generated by the database */
  google.protobuf.StringValue retention_rule_id = 2;
  /* retention rule name */
  google.protobuf.StringValue retention_rule_name = 3;
  /* retention rule interval */
  int32 interval_id = 4;
  /* total run time of the deletion query */
  float total_run_time = 5;
  /* earliest record available */
  google.protobuf.Timestamp earliest_record_time = 6;
  /* start time of the deletion/archival */
  google.protobuf.Timestamp start_time = 7;
  /* end time of the deletion/archival */
  google.protobuf.Timestamp end_time = 8;
  /* total number of records deleted/archived*/
  int64 total_records = 9;
  /* retention rule scheme */
  int32 scheme_id = 10;
  /* retention rule runtime status */
  RetentionRuntimeUseCase run_time_type = 11;
  /* retention rule deletion size in bytes */
  double total_deletion_size = 12;
}

// list the runtime status pertaining to a retention rule request
message ListRuntimeStatusByRetentionRuleNameRequest {
  /* name of the retention rule */
  google.protobuf.StringValue name = 1;
}

// list the runtime status pertaining to a retention rule request
message ListLastNRuntimeStatusRequest {
  /* last n occurance count */
  int32 count = 1;
  /* retention rule runtime status */
  RetentionRuntimeUseCase run_time_type = 2;
}

// list the last n runtime statuses pertaining to all retention rules response
message ListRuntimeStatusByRetentionRuleNameResponse {
  /* runtime status object */
  repeated RetentionRequestRuntimeStatus runtime_status = 1;
  // Response code
  ResponseCode response_code = 2;
}

// list the runtime status pertaining to a retention rule response
message ListLastNRuntimeStatusResponse {
  /* runtime status object */
  repeated RetentionRequestRuntimeStatus runtime_status = 1;
  // Response code
  ResponseCode response_code = 2;
}

// update the retention rule status request
message UpdateRetentionRequestRuntimeRequest {
  /* id of the retention runtime status */
  google.protobuf.StringValue id = 1;
  /* id of the retention rule */
  google.protobuf.StringValue retention_rule_id = 2;
  /* total run time of the deletion query */
  int32 total_run_time = 3;
  /* earliest record available */
  google.protobuf.Timestamp earliest_record_time = 4;
  /* start time of the deletion/archival */
  google.protobuf.Timestamp start_time = 5;
  /* end time of the deletion/archival */
  google.protobuf.Timestamp end_time = 6;
  /* total number of records deleted/archived*/
  int64 total_records = 7;
  /* retention rule runtime status */
  RetentionRuntimeUseCase run_time_type = 8;
  /* retention rule deletion size in bytes */
  double total_deletion_size = 9;
}

// save the retention rule status request
message SaveRetentionRequestRuntimeRequest {
  /* name of the retention rule */
  google.protobuf.StringValue name = 1;
  /* start time of the deletion/archival */
  google.protobuf.Timestamp start_time = 2;
  /* retention rule runtime status */
  RetentionRuntimeUseCase run_time_type = 3;
}

// save the retention rule status response
message SaveRetentionRequestRuntimeResponse {
  // RetentionRequestRuntimeStatus object
  RetentionRequestRuntimeStatus retention_status = 1;
  // misc message for error handling
  google.protobuf.StringValue error_message = 2;
}

// save the retention rule status response
message UpdateRetentionRequestRuntimeResponse {
  // RetentionRequestRuntimeStatus object
  RetentionRequestRuntimeStatus retention_status = 1;
  // misc message for error handling
  google.protobuf.StringValue error_message = 2;
}

// service for performing crud operations on data retention
service DataRetentionService {
  // List the various retention types
  rpc ListRetentionRuleScheme(ListRetentionRuleSchemeRequest) returns (ListRetentionRuleSchemeResponse);
  // List the various retention rule intervals
  rpc ListRetentionRuleInterval(ListRetentionRuleIntervalRequest) returns (ListRetentionRuleIntervalResponse);
  // List the various store types
  rpc ListStoreType(ListStoreTypeRequest) returns (ListStoreTypeResponse);
  // list the various retention strategies
  rpc ListRetentionRuleStrategy(ListRetentionRuleStrategyRequest) returns (ListRetentionRuleStrategyResponse);

  // Save a retention rule
  rpc SaveRetentionRule(SaveRetentionRuleRequest) returns (SaveRetentionRuleResponse);
  // List retention rules
  rpc ListRetentionRule(ListRetentionRuleRequest) returns (ListRetentionRuleResponse);
  // update retention rule
  rpc UpdateRetentionRule(UpdateRetentionRuleRequest) returns (UpdateRetentionRuleResponse);
  // delete retention rule
  rpc DeleteRetentionRule(DeleteRetentionRuleRequest) returns (DeleteRetentionRuleResponse);

  // List all the existing requests for approvals
  rpc ListRetentionRuleApproval(ListRetentionRuleApprovalRequest) returns (ListRetentionRuleApprovalResponse);
  // Approve/Reject a retention request
  rpc SaveRetentionRuleApproval(SaveRetentionRuleApprovalRequest) returns (SaveRetentionRuleApprovalResponse);
  // Update the status of a retention request
  rpc UpdateRetentionRuleApproval(UpdateRetentionRuleApprovalRequest) returns (UpdateRetentionRuleApprovalResponse);

  // subscribe to a retention rule
  rpc SaveRetentionSubscription(SaveRetentionSubscriptionRequest) returns (SaveRetentionSubscriptionResponse);
  // list subscribers for a given retention rule
  rpc ListSubscribersToRetentionRule(ListSubscribersToRetentionRuleRequest) returns (ListSubscribersToRetentionRuleResponse);
  // unsubscribe for a given retention rule
  rpc UnSubscribeToRetentionRule(UnSubscribeToRetentionRuleRequest) returns (UnSubscribeToRetentionRuleResponse);

  // list change logs by retention rule name
  rpc ListChangeLogByRetentionRuleName(ListChangeLogByRetentionRuleNameRequest) returns (ListChangeLogByRetentionRuleNameResponse);

  // list runtime status by retention rule name
  rpc ListRuntimeStatusByRetentionRuleName(ListRuntimeStatusByRetentionRuleNameRequest) returns (ListRuntimeStatusByRetentionRuleNameResponse);
  // list last N runtime status for all retentions
  rpc ListLastNRuntimeStatus(ListLastNRuntimeStatusRequest) returns (ListLastNRuntimeStatusResponse);
  // save the retention runtime status
  rpc SaveRetentionRequestRuntime(SaveRetentionRequestRuntimeRequest) returns (SaveRetentionRequestRuntimeResponse);
  // update the retention runtime status
  rpc UpdateRetentionRequestRuntime(UpdateRetentionRequestRuntimeRequest) returns (UpdateRetentionRequestRuntimeResponse);

  /* services for dropping temporary tables */
  // save the new dropped table
  rpc SaveDropTableRetentionRule(SaveDropTableRetentionRuleRequest) returns (SaveDropTableRetentionRuleResponse);
  // list all the dropped tables
  rpc ListDropTableRetentionRule(ListDropTableRetentionRuleRequest) returns (ListDropTableRetentionRuleResponse);
}
