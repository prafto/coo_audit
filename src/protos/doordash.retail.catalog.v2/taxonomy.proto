syntax = "proto3";

// buf:lint:ignore DIRECTORY_SAME_PACKAGE
package doordash.retail.catalog.v2;

import "common/code.proto";
import "google/protobuf/wrappers.proto";

option go_package = "github.com/doordash/services-protobuf/generated/doordash/retail/catalog/v2";
option java_generic_services = true;

// API to fetch catalog taxonomy data
service CatalogTaxonomyService {
  // get Backend to Frontend Taxonomy Mapping
  rpc GetBEToFETaxonomyMapping(GetBEToFETaxonomyMappingRequest) returns (GetBEToFETaxonomyMappingResponse);
  // Upsert Backend to Frontend Taxonomy Mapping
  rpc UpsertBEToFETaxonomyMapping(UpsertBEToFETaxonomyMappingRequest) returns (UpsertBEToFETaxonomyMappingResponse);
  // Delete a Backend to Frontend Taxonomy Mapping
  rpc DeleteBEToFETaxonomyMapping(DeleteBEToFETaxonomyMappingRequest) returns (DeleteBEToFETaxonomyMappingResponse);
  // Upsert Backend to Frontend Taxonomy Relation
  rpc UpsertBEToFETaxonomyRelation(UpsertBEToFETaxonomyRelationRequest) returns (UpsertBEToFETaxonomyRelationResponse);
  // Delete a Backend to Frontend Taxonomy Relation
  rpc DeleteBEToFETaxonomyRelation(DeleteBEToFETaxonomyRelationRequest) returns (DeleteBEToFETaxonomyRelationResponse);
}

// Request for fetching the Backend to Frontend Taxonomy Mapping
message GetBEToFETaxonomyMappingRequest {
  // business id
  google.protobuf.Int64Value business_id = 1;
  // Product category id
  google.protobuf.Int64Value product_category_id = 2;
  // Boolean Flag to populate the details
  google.protobuf.BoolValue fetch_details = 3;
}

// buf:lint:ignore ENUM_VALUE_PREFIX
// Types of FE Aisle
enum AisleType {
  // Default value
  AISLE_TYPE_UNSPECIFIED = 0;
  // N1
  N1 = 1;
  // N2
  N2 = 2;
  // N3
  N3 = 3;
}

// Detail for each Aisle
message AisleDetail {
  // Type
  AisleType type = 1;
  // Id
  google.protobuf.Int64Value id = 2;
  // Name
  google.protobuf.StringValue name = 3;
  // Short Name
  google.protobuf.StringValue short_name = 4;
}

// Response for fetching the Backend to Frontend Taxonomy Mapping
message GetBEToFETaxonomyMappingResponse {
  // Product category id
  google.protobuf.Int64Value product_category_id = 1;
  // Product category Path
  google.protobuf.StringValue product_category_path = 2;
  // Aisles
  repeated AisleDetail aisles = 3;
  // Business Id
  google.protobuf.Int64Value business_id = 4;
  // Business Vertical Id
  google.protobuf.Int64Value business_vertical_id = 5;
  // Mapping Name
  google.protobuf.StringValue mapping_name = 6;
}

// Body of each BE to FE Taxonomy Mapping
message BEToFETaxonomyMappingEntry {
  // Product Category Path Id
  google.protobuf.Int64Value product_category_id = 1;
  // Mapping Name
  google.protobuf.StringValue mapping_name = 2;
  // N1 Id
  google.protobuf.Int64Value n1_id = 3;
  // N2 Id
  google.protobuf.Int64Value n2_id = 4;
  // N3 Id
  google.protobuf.Int64Value n3_id = 5;
}

// Request for creating/updating the Backend to Frontend Taxonomy Mapping
message UpsertBEToFETaxonomyMappingRequest {
  // List of mappings to be created/updated
  repeated BEToFETaxonomyMappingEntry mappings = 1;
}

// Response for creating/updating the Backend to Frontend Taxonomy Mapping
message UpsertBEToFETaxonomyMappingResponse {
  // Backend to Frontend Taxonomy Mapping Details
  repeated BEToFETaxonomyMappingEntry successful_mappings = 1;
  // gRPC response code
  code.Code code = 20;
  // Error message if there is any
  google.protobuf.StringValue error_message = 21;
}

// Request for deleting the Backend to Frontend Taxonomy Mapping
message DeleteBEToFETaxonomyMappingRequest {
  // List of Product Category Ids to be deleted
  repeated google.protobuf.Int64Value product_category_ids = 1;
  // Mapping Name
  google.protobuf.StringValue mapping_name = 2;
}

// Response for deleting the Backend to Frontend Taxonomy Mapping
message DeleteBEToFETaxonomyMappingResponse {
  // List of Product Category Ids to be deleted
  repeated google.protobuf.Int64Value deleted_product_category_ids = 1;
  // gRPC response code
  code.Code code = 20;
  // Error message if there is any
  google.protobuf.StringValue error_message = 21;
}

// buf:lint:ignore ENUM_VALUE_PREFIX
// Types of Relations supported for Taxonomy
enum TaxonomyRelationType {
  // Default value
  TAXONOMY_RELATION_TYPE_UNSPECIFIED = 0;
  // Business
  BUSINESS = 1;
  // Business Vertical
  BUSINESS_VERTICAL = 2;
}

// Body of each BE to FE Taxonomy Relation
message BEToFETaxonomyRelationEntry {
  // Relation Id
  google.protobuf.Int64Value relation_id = 1;
  // Mapping Name
  google.protobuf.StringValue mapping_name = 2;
  // Relation Type
  TaxonomyRelationType relation_type = 3;
}

// Request for creating/updating the Backend to Frontend Taxonomy Relation
message UpsertBEToFETaxonomyRelationRequest {
  // Taxonomy Relation Details to be created/updated
  BEToFETaxonomyRelationEntry relation = 1;
}

// Response for creating/updating the Backend to Frontend Taxonomy Relation
message UpsertBEToFETaxonomyRelationResponse {
  // Backend to Frontend Taxonomy Relation Details
  BEToFETaxonomyRelationEntry successful_relation = 1;
  // gRPC response code
  code.Code code = 20;
  // Error message if there is any
  google.protobuf.StringValue error_message = 21;
}

// Request for deleting the Backend to Frontend Taxonomy Relation
message DeleteBEToFETaxonomyRelationRequest {
  // Id for the Taxonomy Relation Table
  google.protobuf.Int64Value id = 1;
}

// Response for deleting the Backend to Frontend Taxonomy Relation
message DeleteBEToFETaxonomyRelationResponse {
  // Relation Id
  google.protobuf.Int64Value deleted_id = 1;
  // Delete Relation Entry
  BEToFETaxonomyRelationEntry deleted_relation = 2;
  // gRPC response code
  code.Code code = 20;
  // Error message if there is any
  google.protobuf.StringValue error_message = 21;
}
