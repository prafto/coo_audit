syntax = "proto3";

// buf:lint:ignore DIRECTORY_SAME_PACKAGE
package doordash.retail.catalog.v2;

import "doordash.retail.catalog.v2/sku_enrichment.proto";
import "doordash.retail.catalog.v2/unique_global_product_content.proto";
import "doordash.retail.catalog.v2/unique_merchant_product_content.proto";
import "google/protobuf/wrappers.proto";

option go_package = "github.com/doordash/services-protobuf/generated/doordash/retail/catalog/v2";
option java_generic_services = true;

// service to interact with ER rerun task
service EntityResolutionService {
  // re-run entity resolution by category
  rpc StartEntityResolutionRerunTask(StartEntityResolutionRerunTaskRequest) returns (StartEntityResolutionRerunTaskResponse);
  // execute entity resolution for a list skus synchronously
  rpc ExecuteEntityResolutionWorkflow(ExecuteEntityResolutionWorkflowRequest) returns (ExecuteEntityResolutionWorkflowResponse);
  // trigger entity resolution for a list skus asynchronously
  rpc TriggerEntityResolutionWorkflow(TriggerEntityResolutionWorkflowRequest) returns (TriggerEntityResolutionWorkflowResponse);
}

// request to rerun entity resolution
message StartEntityResolutionRerunTaskRequest {
  // crafted workflow id
  google.protobuf.StringValue workflow_id = 1;
  // rerun task
  RerunTask task = 2;
}

// response to rerun entity resolution
message StartEntityResolutionRerunTaskResponse {
  // workflow execution handler that can be used to track/cancel the workflow execution
  WorkflowExecution workflow_execution = 1;
}

// workflow execution info
message WorkflowExecution {
  // workflow id
  google.protobuf.StringValue workflow_id = 1;
  // run id
  google.protobuf.StringValue run_id = 2;
}

// task definition
message RerunTask {
  // updated er version: umps that are not tagged with this er version are targeted
  google.protobuf.StringValue target_er_version = 1;
  // category filters
  Filters filters = 3;
}

// filters specify what category of SKU to target for return
message Filters {
  // aisle L1 id
  google.protobuf.Int64Value aisle_l1_id = 1;
  // [optional] aisle L1 id
  google.protobuf.Int64Value aisle_l2_id = 2;
  // [optional] product category id
  google.protobuf.Int64Value product_category_id = 3;
  // [optional] business id
  google.protobuf.Int64Value business_id = 4;
}

// request to execute entity resolution for a list skus synchronously
message ExecuteEntityResolutionWorkflowRequest {
  // list of workflow requests
  repeated ERWorkflowRequest workflow_requests = 1;
}

// ER workflow request
message ERWorkflowRequest {
  // [optional] workflow id
  google.protobuf.StringValue workflow_id = 1;
  // enriched sku
  FinalEnrichedSku enriched_sku = 2;
}

// response to trigger entity resolution for a list skus synchronously
message ExecuteEntityResolutionWorkflowResponse {
  // ER results
  repeated EntityResolutionWorkflowResult results = 1;
}

// er workflow result
message EntityResolutionWorkflowResult {
  // workflow execution
  WorkflowExecution workflow_execution = 1;
  // enriched sku
  FinalEnrichedSku enriched_sku = 2;
  // ump content
  UniqueMerchantProductContent ump_content = 3;
  // ugp content
  UniqueGlobalProductContent ugp_content = 4;
}

// request to trigger entity resolution for a list skus asynchronously
message TriggerEntityResolutionWorkflowRequest {
  // list of enriched skus with
  repeated ERWorkflowRequest workflow_requests = 1;
}

// response to trigger entity resolution for a list skus synchronously
message TriggerEntityResolutionWorkflowResponse {
  // ER results
  repeated EntityResolutionWorkflowExecution results = 1;
}

// er workflow execution
message EntityResolutionWorkflowExecution {
  // workflow execution
  WorkflowExecution workflow_execution = 1;
  // enriched sku
  FinalEnrichedSku enriched_sku = 2;
}
