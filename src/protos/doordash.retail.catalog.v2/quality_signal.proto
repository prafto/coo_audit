syntax = "proto3";

// buf:lint:ignore DIRECTORY_SAME_PACKAGE
package doordash.retail.catalog.v2;

import "google/protobuf/wrappers.proto";

option go_package = "github.com/doordash/services-protobuf/generated/doordash/retail/catalog/v2";

// Quality Signal for Catalog Builder Pipeline
message QualitySignal {
  // Merchant Quality Signal
  MxQualitySignal mx_quality_signal = 1;
  // Doordash Quality Signal
  DDQualitySignal dd_quality_signal = 2;
}

// Merchant Quality Signal
message MxQualitySignal {
  // enum value for duplicate tag
  // buf:lint:ignore ENUM_VALUE_PREFIX
  enum DuplicateTag {
    // unspecified duplicate tag
    DUPLICATE_TAG_UNSPECIFIED = 0;
    // duplicate on MSID
    MSID = 1;
    // duplicate on UPC and name(size included)
    UPC_AND_NAME = 2;
    // duplicate on UPC
    UPC = 3;
    // duplicate on name(size included)
    NAME = 4;
    // duplicate on all fields. Note set it to 10 to reserve more field level check
    ALL = 10;
  }

  // List of Missing required raw mx SKU attributes
  repeated google.protobuf.StringValue missing_required_field_names = 1;
  // Map of Malformed raw mx SKU attributes
  map<string, google.protobuf.StringValue> malformed_field_names = 2;
  // Value of the Mx L1 category for which we are missing the mapping
  google.protobuf.StringValue missing_l1_category_mapping_value = 3;
  // Failure to generate primary photo
  MxPhotoSignal failed_primary_photo = 4;
  // List of secondary photos for which photo generation failed
  repeated MxPhotoSignal failed_secondary_photos = 5;
  // file level attribute duplication check result per sku
  DuplicateTag duplicate_tag = 6;
  // Map of Mx attributes with restricted keywords
  map<string, google.protobuf.StringValue> fields_with_restricted_keyword = 7;
}

// Doordash Quality Signal
message DDQualitySignal {
  // Value of the L4 category for which we are missing DD L1/L2 category mapping
  google.protobuf.StringValue missing_l4_category_mapping_value = 1;
  // Failure to generate primary photo
  DDPhotoSignal failed_primary_photo = 2;
  // List of secondary photos for which photo generation failed
  repeated DDPhotoSignal failed_secondary_photos = 3;
  // DD System Issue
  google.protobuf.StringValue system_issue = 4;
  // Selling country is missing for MPC and/or URPC
  repeated google.protobuf.StringValue missing_selling_countries = 5;
  // MPC and URPC have different selling countries
  google.protobuf.StringValue incorrect_cross_country_link = 6;
  // Required Attribute mapping is missing
  google.protobuf.StringValue missing_attribute_mapping = 7;
  // Error while transforming the baseline sku
  google.protobuf.StringValue transformation_error = 8;
  // Error while trying to upsert MPC (ProductItem)
  google.protobuf.StringValue upsert_error = 9;
  // Error while trying to map to BE or FE Taxonomy
  google.protobuf.StringValue taxonomy_mapping_error = 10;
  // Invalid product category issue
  google.protobuf.StringValue invalid_product_category = 11;
  // Attributes errors - for p0 and p1 attributes
  repeated AttributeSignal attribute_errors = 12;
}

// Attribute Signal - can be missing or malformed attributes
message AttributeSignal {
  // attribute name
  google.protobuf.StringValue attribute_name = 1;
  // indicates if the attribute is both required and missing
  google.protobuf.BoolValue is_required_and_missing = 2;
  // the raw data value if present that has issue
  google.protobuf.StringValue raw_data = 3;
}

// Merchant Photo Signal
message MxPhotoSignal {
  // Photo URL which failed
  google.protobuf.StringValue url = 1;
  // Detail about the error
  google.protobuf.StringValue detail = 2;
  // Error Type
  MxPhotoSignalError error = 3;
}

// Doordash Photo Signal
message DDPhotoSignal {
  // Photo URL which failed
  google.protobuf.StringValue url = 1;
  // Detail about the error
  google.protobuf.StringValue detail = 2;
  // Error Type
  DDPhotoSignalError error = 3;
}

// Merchant Photo Signal Error Type
enum MxPhotoSignalError {
  // Error unspecified
  MX_PHOTO_SIGNAL_ERROR_UNSPECIFIED = 0;
  // Error Downloading Image
  MX_PHOTO_SIGNAL_ERROR_DOWNLOADING_IMAGE = 1;
  // Error Validating Image - Image size is too big
  MX_PHOTO_SIGNAL_ERROR_VALIDATING_IMAGE_SIZE_TOO_BIG = 2;
  // Error Validating Image - Image is invalid
  MX_PHOTO_SIGNAL_ERROR_VALIDATING_INVALID_IMAGE = 3;
  // Error Validating Image - Image Type not accepted
  MX_PHOTO_SIGNAL_ERROR_VALIDATING_IMAGE_TYPE_NOT_ACCEPTED = 4;
  // Error - Invalid Image URL
  MX_PHOTO_SIGNAL_ERROR_INVALID_LINK = 5;
}

// Doordash Photo Signal Error Type
enum DDPhotoSignalError {
  // Error unspecified
  DD_PHOTO_SIGNAL_ERROR_UNSPECIFIED = 0;
  // Error Uploading Image to S3
  DD_PHOTO_SIGNAL_ERROR_UPLOADING_IMAGE_TO_S3 = 1;
  // Error in Cadence Workflow
  DD_PHOTO_SIGNAL_ERROR_CADENCE_WORKFLOW = 2;
}
