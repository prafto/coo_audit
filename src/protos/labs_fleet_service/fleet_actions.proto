syntax = "proto3";

package labs_fleet_service.v1;

import "robot/robot.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.labs_fleet_service.v1";

// Fleet actions to be sent to one or many robots
message FleetAction {
  // Set of possible actions for the robot to take
  enum Action {
    // Unset action
    ACTION_UNSPECIFIED = 0;
    // Stop queuing deliveries for the robot
    ACTION_PAUSE_DELIVERY_QUEUING = 1 [deprecated = true];
    // Resume queuing deliveries for the robot
    ACTION_UNPAUSE_DELIVERY_QUEUING = 2 [deprecated = true];
    // Stop assigning deliveries to the robot
    ACTION_PAUSE_DELIVERIES = 3;
    // Resume assigning deliveries to the robot
    ACTION_UNPAUSE_DELIVERIES = 4;
  }
  // The action for the robot to take
  Action action = 1 [deprecated = true];

  // Action that the robot should take (with payload for context)
  message ActionPayload {
    // The type of payload for the action
    oneof payload {
      // Payload for pausing deliveries
      PauseDeliveries pause_deliveries = 1;
      // Payload for unpausing deliveries
      UnpauseDeliveries unpause_deliveries = 2;
      // Payload for setting the desired route type for the robot by the operator
      OperatorDesiredRouteTypePayload operator_desired_route_type = 3;
      // Payload for advancing the index of auto p2p locations to explore
      AdvanceAutoP2PLocationsPayload advance_auto_p2p_locations = 4;
    }

    // Payload for pausing deliveries
    message PauseDeliveries {}

    // Payload for unpausing deliveries
    message UnpauseDeliveries {}

    // Payload for setting the desired route type for the robot by the operator
    message OperatorDesiredRouteTypePayload {
      // The desired route type for the robot
      robot.v1.RouteDirective.RouteType route_type = 1;

      // Clear the desired route type for the robot
      bool clear_desired_route_type = 2;
    }

    // Payload for advancing the index of auto p2p locations to explore.
    // The existence of this payload currently means we want to advance, but also will give us the ability
    // later to add more info (e.g. a specific location to advance to).
    message AdvanceAutoP2PLocationsPayload {}
  }

  // The action for the robot to take with payload context
  ActionPayload action_payload = 2;
}
