syntax = "proto3";

// buf:lint:ignore PACKAGE_VERSION_SUFFIX
package cx_client_platform;

import "common/common.proto";
import "common/names.proto";
import "common/personal_address_label.proto";
import "common/service_client_config.proto";
import "doordash.api/annotations.proto";
import "doordash.api/field_validate.proto";
import "google/api/annotations.proto";
import "google/protobuf/wrappers.proto";

option go_package = "github.com/doordash/services-protobuf/generated/cx_client_platform";
option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.cx_client_platform.pg";

// buf:lint:ignore SERVICE_SUFFIX
// APIs for Offer Service
service ConsumerClientPlatform {
  // Set timeout to 2 seconds after prod deployment
  option (service_client.client_config).response_attempt_timeout_millis = 10000;
  option (service_client.client_config).retry_config.max_attempts = 2;
  option (service_client.client_config).circuit_breaker_config.failure_rate_threshold = 0.8;
  option (service_client.client_config).circuit_breaker_config.minimum_request_threshold = 1000;
  option (service_client.client_config).circuit_breaker_config.trial_request_interval_millis = 5000;
  option (service_client.client_config).circuit_breaker_config.circuit_open_window_millis = 6000;
  option (service_client.client_config).circuit_breaker_config.counter_sliding_window_millis = 7000;

  option (doordash.api.service) = {
    name: "cx-client-platform"
    port: 50051
    name_spaces: "cx-client-platform"
    owner: {
      id: "cx-client-platform"
      name: "cx-client-platform"
      slack_channel: "#ask-cx-client-plat-web"
      email_alias: "cx-client-platform-eng@doordash.com"
    }
    target_products: [CX]
  };

  // Check eligibility for offers
  rpc GetConsumer(GetConsumerRequest) returns (GetConsumerResponse) {
    option (google.api.http) = {get: "/cx-client-platform/v1/consumer"};
    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: DEV
      authorization: [
        CX_USER,
        CX_LITE_GUEST,
        CX_GUEST
      ]
      target_products: [CX]
      slo_config: {
        critical_alerts_enabled: true
        critical_5m_burn_threshold: 3000
        critical_5m_burn_sustain_seconds: 300
        p99_latency: 5
      }
    };
    option (doordash.api.inject_headers) = {
      inject: [
        {field: "is_guest"},
        {field: "is_employee"}]
    };
  }
}

// GetConsumerRequest represents the request to retrieve consumer information
message GetConsumerRequest {
  // Consumer ID
  google.protobuf.StringValue consumer_id = 1 [(doordash.api.inject_id) = CX_ID];

  // The type of consumer, guest, full guest, or full consumer
  ConsumerType consumer_type = 2;
}

// ConsumerType represents the different types of consumers in the system
enum ConsumerType {
  // Default unspecified consumer type
  CONSUMER_TYPE_UNSPECIFIED = 0;
  // Light guest consumer with limited access
  CONSUMER_TYPE_LITE_GUEST = 1;
  // Full guest consumer with extended access
  CONSUMER_TYPE_FULL_GUEST = 2;
  // Full consumer with complete access
  CONSUMER_TYPE_FULL_CONSUMER = 3;
}

// GetConsumerResponse contains the consumer information
message GetConsumerResponse {
  // CORE CONSUMER FIELDS
  // Consumer ID
  google.protobuf.StringValue id = 1 [(doordash.api.validate.rules).missing_value = {action: IGNORE}];
  // User ID
  google.protobuf.StringValue user_id = 2 [(doordash.api.validate.rules).missing_value = {action: IGNORE}];
  // Whether the consumer is a guest
  google.protobuf.BoolValue is_guest = 3 [(doordash.api.validate.rules).missing_value = {action: IGNORE}];
  // Email address
  google.protobuf.StringValue email = 4 [(doordash.api.validate.rules).missing_value = {action: IGNORE}];
  // First name
  google.protobuf.StringValue first_name = 5 [(doordash.api.validate.rules).missing_value = {action: IGNORE}];
  // Last name
  google.protobuf.StringValue last_name = 6 [(doordash.api.validate.rules).missing_value = {action: IGNORE}];
  // Localized names
  names.LocalizedNames localized_names = 7 [(doordash.api.validate.rules).missing_value = {action: IGNORE}];
  // Phone number
  google.protobuf.StringValue phone_number = 8 [(doordash.api.validate.rules).missing_value = {action: IGNORE}];

  // SCHEDULING FIELDS
  // Scheduled delivery time
  google.protobuf.StringValue scheduled_delivery_time = 11 [(doordash.api.validate.rules).missing_value = {action: IGNORE}];

  // GEO BASED FIELDS
  // Default address
  DefaultAddress default_address = 12 [(doordash.api.validate.rules).missing_value = {action: IGNORE}];
  // District availability
  google.protobuf.BoolValue is_district_active = 13 [(doordash.api.validate.rules).missing_value = {action: IGNORE}];
  // Market ID
  google.protobuf.StringValue market_id = 14 [(doordash.api.validate.rules).missing_value = {action: IGNORE}];
  // Timezone
  google.protobuf.StringValue timezone = 16 [(doordash.api.validate.rules).missing_value = {action: IGNORE}];
  // Dropoff options
  repeated DropoffOption dropoff_options = 17 [(doordash.api.validate.rules).missing_value = {action: IGNORE}];

  // PROFILE FIELDS
  // Default country (only used for country shortname)
  google.protobuf.StringValue default_country = 18 [(doordash.api.validate.rules).missing_value = {action: IGNORE}];
}

// DefaultAddress contains information about a consumer's default address
message DefaultAddress {
  // The address id
  google.protobuf.StringValue address_id = 1 [(doordash.api.validate.rules).missing_value = {action: IGNORE}];
  // Latitude
  double lat = 2 [(doordash.api.validate.rules).missing_value = {action: IGNORE}];
  // Longitude
  double lng = 3 [(doordash.api.validate.rules).missing_value = {action: IGNORE}];
  // Locality / City
  google.protobuf.StringValue locality = 4 [(doordash.api.validate.rules).missing_value = {action: IGNORE}];
  // District ID
  google.protobuf.StringValue district_id = 5 [(doordash.api.validate.rules).missing_value = {action: IGNORE}];
  // Subpremise
  google.protobuf.StringValue subpremise = 6 [(doordash.api.validate.rules).missing_value = {action: IGNORE}];
  // Building name
  google.protobuf.StringValue building_name = 7 [(doordash.api.validate.rules).missing_value = {action: IGNORE}];
  // Entry code
  google.protobuf.StringValue entry_code = 8 [(doordash.api.validate.rules).missing_value = {action: IGNORE}];
  // Street
  google.protobuf.StringValue street = 9 [(doordash.api.validate.rules).missing_value = {action: IGNORE}];
  // Timezone
  google.protobuf.StringValue timezone = 10 [(doordash.api.validate.rules).missing_value = {action: IGNORE}];
  // Printable address
  google.protobuf.StringValue printable_address = 11 [(doordash.api.validate.rules).missing_value = {action: IGNORE}];
  // State or Administrative Area Level 1
  google.protobuf.StringValue administrative_area_level_1 = 12 [(doordash.api.validate.rules).missing_value = {action: IGNORE}];
  // Country or Administrative Area Level 2
  google.protobuf.StringValue administrative_area_level_2 = 13 [(doordash.api.validate.rules).missing_value = {action: IGNORE}];
  // Country
  google.protobuf.StringValue country = 14 [(doordash.api.validate.rules).missing_value = {action: IGNORE}];
  // Country code for address eg US, JP, CA, AU, etc
  google.protobuf.StringValue country_shortname = 15 [(doordash.api.validate.rules).missing_value = {action: IGNORE}];
  // Submarket ID
  google.protobuf.StringValue submarket_id = 16 [(doordash.api.validate.rules).missing_value = {action: IGNORE}];
  // Driver instructions
  google.protobuf.StringValue driver_instructions = 17 [(doordash.api.validate.rules).missing_value = {action: IGNORE}];
  // Dropoff preferences
  repeated DropoffPreference dropoff_preferences = 18 [(doordash.api.validate.rules).missing_value = {action: IGNORE}];

  // Postal/Zip code
  google.protobuf.StringValue postal_code = 19 [(doordash.api.validate.rules).missing_value = {action: IGNORE}];
  // Label on an address such as Home/Work
  personal_address_label.v1.PersonalAddressLabel personal_address_label = 20 [(doordash.api.validate.rules).missing_value = {action: IGNORE}];
  // Formatted address supposed in multiple lines. Example: ['123 Main Street', 'San Francisco, CA 94105 USA']
  repeated google.protobuf.StringValue formatted_address_segmented_list = 21 [(doordash.api.validate.rules).missing_value = {action: IGNORE}];
  // Formatted address supposed in multiple lines (for non editable version, such as usage in Edit Address Modal)
  repeated google.protobuf.StringValue formatted_address_segmented_non_user_editable_fields_list = 22 [(doordash.api.validate.rules).missing_value = {action: IGNORE}];
}

// Dropoff Options allow Consumers to specify how they'd like their delivery
// given to them: e.g. "Hand it to me" vs "Leave it at my doorstep"
message DropoffOption {
  // The id representing the option: e.g 'at doorstep' vs 'in person'
  google.protobuf.StringValue id = 1 [(doordash.api.validate.rules).missing_value = {action: IGNORE}];
  // The google.protobuf.StringValue from backend that describes the option for the UI
  google.protobuf.StringValue display_string = 2 [(doordash.api.validate.rules).missing_value = {action: IGNORE}];
  // Whether this option should be treated as default if user hasn't made any preferences yet
  google.protobuf.BoolValue is_default = 3 [(doordash.api.validate.rules).missing_value = {action: IGNORE}];
  // Whether the option can be selected by a user for dropoff
  google.protobuf.BoolValue is_enabled = 4 [(doordash.api.validate.rules).missing_value = {action: IGNORE}];
  // Text for a form or input placeholder
  google.protobuf.StringValue placeholder_text = 5 [(doordash.api.validate.rules).missing_value = {action: IGNORE}];
  // Message to show when the option is disabled
  google.protobuf.StringValue disabled_message = 6 [(doordash.api.validate.rules).missing_value = {action: IGNORE}];
  // Type of proof of delivery needed. eg: SIGNATURE, PIN or NONE
  ProofOfDeliveryType proof_of_delivery_type = 7 [(doordash.api.validate.rules).missing_value = {action: IGNORE}];
}

// Dropoff preferences map to available delivery options as well as provide
// Dashers instructions for how to fulfill their delivery
message DropoffPreference {
  // The id mapping this preference to an option
  google.protobuf.StringValue option_id = 1 [(doordash.api.validate.rules).missing_value = {action: IGNORE}];
  // The user provided instructions for their Dasher
  google.protobuf.StringValue instructions = 2 [(doordash.api.validate.rules).missing_value = {action: IGNORE}];
  // Whether the user has selected this preference as their default
  google.protobuf.BoolValue is_default = 3 [(doordash.api.validate.rules).missing_value = {action: IGNORE}];
}

// ProofOfDeliveryType represents the different types of proof of delivery required
enum ProofOfDeliveryType {
  // Default unspecified proof of delivery type
  PROOF_OF_DELIVERY_TYPE_UNSPECIFIED = 0;
  // Signature required for delivery
  PROOF_OF_DELIVERY_TYPE_SIGNATURE = 1;
  // PIN code required for delivery
  PROOF_OF_DELIVERY_TYPE_PIN_CODE = 2;
  // No proof of delivery required
  PROOF_OF_DELIVERY_TYPE_NONE = 3;
}
