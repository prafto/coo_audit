syntax = "proto3";

// buf:lint:ignore PACKAGE_VERSION_SUFFIX
// buf:lint:ignore DIRECTORY_SAME_PACKAGE
package autonomous_partner_api.doordash_endpoints_common;

import "autonomous_partner_api/common.proto";
import "google/protobuf/wrappers.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.autonomous_partner_api.doordash_endpoints_common";

// [Required in case of failure] Contains information about delivery failure.
message DeliveryFailureInstruction {
  // List of actions vehicle can take in case of failure
  enum Action {
    // Unspecified
    ACTION_UNSPECIFIED = 0;
    // Dispose order
    ACTION_DISPOSE = 1;
    // Return order to pickup location
    ACTION_RETURN_TO_PICKUP = 2;
    // Partner internal handoff via manual delivery
    ACTION_INTERNAL_HANDOFF = 3;
  }
  // Action vehicle should take in case of delivery failure
  // Default: DISPOSE
  Action action = 1;
  // Unique identifier for this vehicle
  string vehicle_id = 2;
}

// Status of each vehicle
message VehicleStatus {
  // Required: Location of the vehicle
  autonomous_partner_api.common.Location vehicle_location = 1;
  // Optional: Elevation of the vehicle
  google.protobuf.Int32Value elevation = 2;
  // Required: Unique identifier for this vehicle
  string vehicle_id = 3;
  // Required: Status of delivery assignment for this vehicle
  DeliveryStatus delivery_status = 4;
  // Required in case of failure: Contains information about delivery failure
  DeliveryFailure delivery_failure = 5;
  // Estimated remaining duration for delivery in seconds
  google.protobuf.Int32Value eta_to_dropoff = 6;
  // Estimated time to Mx pickup in seconds
  google.protobuf.Int32Value eta_to_pickup_location = 8;
  // Optional: Location of dropoff in degrees, if not the value passed in
  // request
  autonomous_partner_api.common.Location dropoff_location = 7;
}

// Delivery status sent from vehicle
enum DeliveryStatus {
  // Unspecified
  DELIVERY_STATUS_UNSPECIFIED = 0;
  // Available
  DELIVERY_STATUS_AVAILABLE = 1;
  // Unable to accept temporarily
  DELIVERY_STATUS_UNABLE_TO_ACCEPT_TEMPORARILY = 2;
  // Heading to loading location
  DELIVERY_STATUS_HEADING_TO_LOADING_LOCATION = 3;
  // Waiting for loading
  DELIVERY_STATUS_WAITING_FOR_LOAD = 4;
  // Heading to dropoff location
  DELIVERY_STATUS_HEADING_TO_DROPOFF_LOCATION = 5;
  // Waiting for dropoff
  DELIVERY_STATUS_WAITING_FOR_DROPOFF = 6;
  // Completed
  DELIVERY_STATUS_DELIVERY_COMPLETED = 7;
  // Internal handoff initiated due to failure
  DELIVERY_STATUS_INTERNAL_HANDOFF = 8;
  // Failed vehicle waiting for instruction
  DELIVERY_STATUS_DELIVERY_FAILED = 9;
  // Terminal delivery failure leading to cancellation
  DELIVERY_STATUS_UNDELIVERABLE = 10;
  // Waiting for previously assigned deliveries to be completed.
  // Once the previous deliveries are complete, this delivery will
  // become active.
  DELIVERY_STATUS_FULFILLING_PREV_ORDER = 11;
}

// Contain information about delivery failure
message DeliveryFailure {
  // Standard delivery failure reasons
  enum DeliveryFailureReason {
    // Unspecified
    DELIVERY_FAILURE_REASON_UNSPECIFIED = 0;

    // Category: Hours
    // Weather
    DELIVERY_FAILURE_REASON_HOURS_WEATHER = 1;
    // Operations pause
    DELIVERY_FAILURE_REASON_HOURS_OPERATIONS_PAUSE = 2;
    // Outside operation hours
    DELIVERY_FAILURE_REASON_HOURS_OUTSIDE_OPERATING_HOURS = 3;

    // Category: Cart
    // Cart items incompatible
    DELIVERY_FAILURE_REASON_CART_ITEMS_INCOMPATIBLE = 4;
    // Cart volume incompatible
    DELIVERY_FAILURE_REASON_CART_VOLUME_INCOMPATIBLE = 5;
    // Cart weight incompatible
    DELIVERY_FAILURE_REASON_CART_WEIGHT_INCOMPATIBLE = 6;
    // Cart ineligible
    DELIVERY_FAILURE_REASON_CART_INELIGIBLE = 7;
    // Cart order consolidated
    DELIVERY_FAILURE_REASON_CART_ORDER_CONSOLIDATED = 8;

    // Category: Availability
    // Operator unavailable
    DELIVERY_FAILURE_REASON_AVAILABILITY_OPERATOR_UNAVAILABLE = 9;
    // Vehicle unavailable
    DELIVERY_FAILURE_REASON_AVAILABILITY_VEHICLE_UNAVAILABLE = 10;

    // Category: Routing
    // Routing obstruction on road
    DELIVERY_FAILURE_REASON_ROUTING_OBSTRUCTION_ON_ROAD = 11;
    // Routing ineligible address
    DELIVERY_FAILURE_REASON_ROUTING_INELIGIBLE_ADDRESS = 12;
    // Routing unable route to pickup
    DELIVERY_FAILURE_REASON_ROUTING_UNABLE_TO_ROUTE_TO_PICKUP = 13;
    // Routing unable route to dropoff
    DELIVERY_FAILURE_REASON_ROUTING_UNABLE_TO_ROUTE_TO_DROPOFF = 14;

    // Category: Technical Failure
    // Hardware failure
    DELIVERY_FAILURE_REASON_TECHNICAL_FAILURE_HARDWARE_FAILURE = 15;
    // Software failure
    DELIVERY_FAILURE_REASON_TECHNICAL_FAILURE_SOFTWARE_FAILURE = 16;
    // Integration cancelled
    DELIVERY_FAILURE_REASON_TECHNICAL_FAILURE_INTEGRATION_CANCELLED = 17;
    // Provider cancelled
    DELIVERY_FAILURE_REASON_TECHNICAL_FAILURE_PROVIDER_CANCELLED = 18;

    // Category: Merchant
    // Loading failure
    DELIVERY_FAILURE_REASON_MERCHANT_LOADING_FAILURE = 19;
    // Merchant order unavailable
    DELIVERY_FAILURE_REASON_MERCHANT_ORDER_UNAVAILABLE = 20;

    // Category: Consumer
    // Consumer dropoff failure
    DELIVERY_FAILURE_REASON_CONSUMER_DROPOFF_FAILURE = 21;
    // Consumer opt out of AV delivery
    DELIVERY_FAILURE_REASON_CONSUMER_OPT_OUT = 22;
    // Consumer cancelled
    DELIVERY_FAILURE_REASON_CONSUMER_CANCELLED = 23;

    // Misc
    DELIVERY_FAILURE_REASON_MISC = 24;
  }
  // Required: Delivery failure reason category
  DeliveryFailureReason delivery_failure_reason = 1;
  // Optional: Additional freeform string field to provide information about
  // failure
  google.protobuf.StringValue additional_info = 2;
  // Provider specific fields
  oneof additional_context {
    // Air fleet specific fields
    AirFleetDeliveryFailureFields air_fleet_failure_fields = 3;
  }
}

// Contains information about consumer
message Consumer {
  // First and last name initial of the consumer e.g. John D. for John Doe
  string name = 1;
  // A postal address for delivery location
  string address = 2;
  // Dropoff location
  autonomous_partner_api.common.Location dropoff_location = 3;
  // Handoff instruction provided by the consumer
  string handoff_instruction = 5;
  // Cx phone number
  string phone_number = 6;
}

// CityHopper Specific fields

// CityHopper specific response fields
message CityHopperUpdateVehiclesStatusResponseFields {
  // Additional consumer information provided when action is INTERNAL_HANDOFF
  Consumer consumer_info = 1;
}

// AirFleet Specific Fields

// Air fleet delivery failure fields
message AirFleetDeliveryFailureFields {
  // Action ADP needs to take
  enum Action {
    // UNSPECIFIED
    ACTION_UNSPECIFIED = 0;
    // Reassign the order to dasher
    ACTION_REASSIGN = 1;
    // Cancel the order
    ACTION_CANCEL = 2;
  }
  // Action ADP needs to take
  Action action = 1;
}
