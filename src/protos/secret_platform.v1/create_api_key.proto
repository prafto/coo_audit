syntax = "proto3";

package secret_platform.v1;

import "secret_platform.v1/common.proto";

option go_package = "github.com/doordash/services-protobuf/generated/secret_platform.v1";

// CreateApiKeyRequest will generate a new API key bound to certain capabilities
message CreateApiKeyRequest {
  // service_catalog indicates the catalog will be assigned to this API key, "*" for wildcard (e.g. dasher-service)
  string service_catalog = 1;
  // service_namespace indicates the kubernetes namespace will be assigned to this API key, "*" for wildcard (e.g. order-service)
  string service_namespace = 2;
  // capabilities defines the permissions which will be attached to the API key
  repeated ApiCapability capabilities = 3;
}

// CreateApiKeyResponse will returns the new API key credentials which will be used to access secret platform
message CreateApiKeyResponse {
  // api_key_id the ID of the api key
  string api_key_id = 1;
  // api_secret the secret of the api key, can be used to access secret platform api via grpc metadata X-API-KEY: <api_key_id>.<api_secret>
  string api_secret = 2 [(audit_masked) = true];
  // owner_type shows the creator type, usually this should be "doordash-okta-email"
  string owner_type = 3;
  // owner_identifier shows the creator identifier, usually this should be the doordash email address (e.g. hanzhang.zeng@doordash.com)
  string owner_identifier = 4;
  // x_api_key shows the full string that needs to pass into the x-api-key metadata for authentication
  string x_api_key = 5 [(audit_masked) = true];
}
