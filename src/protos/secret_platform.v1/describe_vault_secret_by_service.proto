syntax = "proto3";

package secret_platform.v1;

import "secret_platform.v1/common.proto";

option go_package = "github.com/doordash/services-protobuf/generated/secret_platform.v1";

// VaultSecretDetail defines what is detail of each secret and its path
message VaultSecretDetail {
  // secret_scope defines where is the secret
  SecretScope secret_scope = 1;
  // active_path of the secret value where it serves from
  string active_path = 2;
  // shadowed_paths which paths are shadowed by the current path
  repeated string shadowed_paths = 3;
}

// DescribeVaultSecretByServiceRequest queries a list of secret key-value pairs from a given folder
message DescribeVaultSecretByServiceRequest {
  // vault_cluster defines which vault cluster the request should send to (e.g. staging / prod)
  VaultEnv vault_cluster = 1;
  // namespace defines the service namespace to check the secrets on (required)
  string namespace = 2;
  // service defines the service name to check secrets from (empty means all services)
  string service = 3;
  // app defines the application name to check secrets from (empty means all apps)
  string app = 4;
  // show_archived when set to true will list all the secrets in the archive folder
  bool show_archived = 5;
}

// DescribeVaultSecretByServiceResponse returns the secret paths and folder paths in a vault path
message DescribeVaultSecretByServiceResponse {
  // active_details returns the detail of each secret details in vault
  repeated VaultSecretDetail active_details = 1;
  // archived_details returns the detail of archived secrets
  repeated VaultSecretDetail archived_details = 2;
}
