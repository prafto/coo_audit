syntax = "proto3";

package secret_platform.v1;

import "secret_platform.v1/common.proto";

option go_package = "github.com/doordash/services-protobuf/generated/secret_platform.v1";

// VaultServiceUpdateMode defines the action to be performed for the vault service update
enum VaultServiceUpdateMode {
  // VAULT_SERVICE_UPDATE_MODE_UNSPECIFIED indicates the update mode is not defined. No action will be performed on the vault service.
  VAULT_SERVICE_UPDATE_MODE_UNSPECIFIED = 0;
  // VAULT_SERVICE_UPDATE_MODE_APPEND_AND_AMEND indicates the new clusters, owner_groups, policies will be attached to the vault service.
  VAULT_SERVICE_UPDATE_MODE_APPEND_AND_AMEND = 1;
  // VAULT_SERVICE_UPDATE_MODE_DELETE indicates the value defined in the request will be removed from the vault service.
  VAULT_SERVICE_UPDATE_MODE_DELETE = 4;
  // VAULT_SERVICE_UPDATE_MODE_SYNC_KUBERNETES_CLUSTERS indicates the service will populate to new kubernetes clusters and sandbox clusters.
  VAULT_SERVICE_UPDATE_MODE_SYNC_KUBERNETES_CLUSTERS = 11;
}

// UpdateVaultServiceRequest will update an existing vault service
message UpdateVaultServiceRequest {
  // vault_cluster defines whether the staging or production vault cluster should the service be updated
  VaultEnv vault_cluster = 1;
  // service_namespace is used for locating the vault service via namespace (e.g. order-service)
  string service_namespace = 2;
  // owner_okta_groups defines which groups have control on this vault service
  repeated string owner_okta_groups = 3;
  // additional_service_policies defines additional policies will be added to the kubernetes service
  repeated string additional_service_policies = 4;
  // additional_eng_policies defines additional policies will be added to the engineer role
  repeated string additional_eng_policies = 5;
  // enable_transit defines whether this service will be allowed to access transit secret engine
  bool enable_transit = 10;
  // disable_sandbox defines whether this service will be onboarded onto the sandbox auth endpoints
  bool disable_sandbox = 11;
  // request_rate_limit defines how many requests can send to vault on every 5-second window
  int64 request_rate_limit = 20;
  // login_rate_limit defines how many login requests (on pod start) will send to vault on every 5-second window
  int64 login_rate_limit = 21;
  // vault_service_update_mode indicates how the vault service will be updated
  VaultServiceUpdateMode vault_service_update_mode = 30;
}

// UpdateVaultServiceResponse will returns the information of the new vault service
message UpdateVaultServiceResponse {
  // vault_cluster responds which vault cluster the new service will be deployed in
  VaultEnv vault_cluster = 1;
  // service_namespace the kubernetes namespace name that the service has access to
  string service_namespace = 2;
  // infra_service_change_request_id defines the latest change request the infra-service is handling
  string infra_service_change_request_id = 102;
}
