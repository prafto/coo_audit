syntax = "proto3";

package secret_platform.v1;

import "secret_platform.v1/common.proto";

option go_package = "github.com/doordash/services-protobuf/generated/secret_platform.v1";

// RollbackRequest will initiate a rollback from the previous backup of the environment
message RollbackRequest {
  // env indicate the destination environment that needs to be rollback from snapshot
  VaultEnv env = 1;
  // namespace indicates the destination namespace that needs to be rollback from snapshot
  string namespace = 2;
  // dryrun indicates whether this is a dryrun
  bool dryrun = 3;
}

// RollbackResponse returns the plan of the on-going rollback process
message RollbackResponse {
  // rollback_task_id is the task id that is generated for rollback process
  string rollback_task_id = 1;
  // rollback_created_at indicates the task creation time of the rollback
  string rollback_created_at = 2;
  // rollback_requester indicates who issue this rollback request
  string rollback_requester = 3;
  // rollback_env indicate the destination environment that needs to be rollback from snapshot
  VaultEnv rollback_env = 4;
  // namespace indicates the destination namespace that needs to be rollback from snapshot
  string namespace = 5;
  // vault_paths_will_be_created indicates what path needs to be created for secret to rollback
  repeated string vault_paths_will_be_created = 11;
  // vault_paths_will_be_updated indicates what path needs to be update for secret to rollback
  repeated string vault_paths_will_be_updated = 12;
  // vault_paths_will_be_deleted indicates what path needs to be deleted for secret to rollback
  repeated string vault_paths_will_be_deleted = 13;
  // kubernetes_deployments_will_be_restarted indicates which k8s namespace needs to be redeployed
  repeated string kubernetes_deployments_will_be_restarted = 21;
  // is_dryrun indicate if this is a dryrun
  bool is_dryrun = 31;
}
