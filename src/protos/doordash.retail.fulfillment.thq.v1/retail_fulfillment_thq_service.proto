syntax = "proto3";
package doordash.retail.fulfillment.thq.v1;

import "doordash.api/annotations.proto";
import "doordash.retail.fulfillment.thq.v1/shop_360_data.proto";
import "google/api/annotations.proto";
import "google/protobuf/wrappers.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.shop_360";

// GET APIs for shop 360 tab in THQ
service RetailFulfillmentThqService {
  option (doordash.api.service) = {
    name: "retail-fulfillment-service-web"
    url: "retail-fulfillment-service-web.service.prod.ddsd"
    port: 50051
    name_spaces: ["thq"]
    owner: {
      name: "nve_eng_ef"
      id: "eng-fulfillment-efficiency"
      slack_channel: "#eng_nv_efficiency_pod"
      email_alias: "new-verticals-fulfillment-efficiency@doordash.com"
    }
    target_products: [INTERNAL]
  };
  // Get info for the shop 360 tab in THQ
  rpc GetShop360Data(GetShop360DataRequest) returns (GetShop360DataResponse) {
    option (google.api.http) = {get: "/thq/v1/{delivery_uuid}/get-shop-360-data"};

    option (doordash.api.endpoint) = {
      tier: T2
      lifecycle: DEV
      authorization: [DD_USER]
      target_products: [INTERNAL]
      slo_config: {
        critical_alerts_enabled: false
        critical_5m_burn_threshold: 3000
        critical_5m_burn_sustain_seconds: 300
        p99_latency: 3
      }
    };
  }
}

// Request message for GetShop360Data
message GetShop360DataRequest {
  // delivery_uuid of the order
  google.protobuf.StringValue delivery_uuid = 1;
}

// Response for GetShop360Data
message GetShop360DataResponse {
  // List of item groups. If empty, group by category.
  repeated OrderItemGroup item_groups = 1;
  // List of items to be picked, along with the substitution preferences and any selected substitutions.
  repeated ItemRequested items_requested = 2;
}
