syntax = "proto3";

package logistics_gateway.v1;

import "google/protobuf/wrappers.proto";
import "task_service/common.proto";
import "task_service/task.proto";
import "task_service/task_group.proto";
import "task_service/workflow.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.logistics_gateway";

// Service for lx gateway
service LogisticsGatewayService {
  // API to start the execution of the Fulfillment flow
  rpc StartFulfillmentExecution(StartFulfillmentExecutionRequest) returns (StartFulfillmentExecutionResponse);

  // API to terminate the execution of the Fulfillment flow
  rpc CancelFulfillmentExecution(CancelFulfillmentExecutionRequest) returns (CancelFulfillmentExecutionResponse);
}

// Defines StartFulfillmentExecution request
message StartFulfillmentExecutionRequest {
  // idempotency key from client
  google.protobuf.StringValue idempotency_key = 1;
  // name for workflow
  google.protobuf.StringValue workflow_name = 2;
  // currency information
  google.protobuf.StringValue currency = 3;
  // Task Group info needed for creation; task_group_name : task_group_data
  map<string, StartFulfillmentTaskGroupData> task_groups_data = 4;
  // name of the client
  google.protobuf.StringValue client_name = 5;
  // whether it's a test execution or not
  google.protobuf.BoolValue is_test = 6;
}

// Defines the Task Group Data needed for creation (minimal version of task service's task group data)
message StartFulfillmentTaskGroupData {
  // Task Group assignment constraint (from task service proto)
  task_service.v2.AssignmentConstraint assignment_constraint = 1;
  // Task Data for task creation; task_name : task_data
  map<string, task_service.v2.TaskData> tasks_data = 2;
}

// Defines StartFulfillmentExecution response
message StartFulfillmentExecutionResponse {
  // Workflow information (ex. workflow ID, idempotency key)
  task_service.v2.Workflow workflow = 1;
  // Task groups that are part of the workflow
  repeated task_service.v2.TaskGroup task_groups = 2;
}

// request to cancel execution of a fulfillment flow, requires workflow id
message CancelFulfillmentExecutionRequest {
  // workflow id to be cancelled
  google.protobuf.StringValue workflow_id = 1;
}

// response returned by CancelFulfillmentExecution
message CancelFulfillmentExecutionResponse {
  // response for action taken (see task service common.proto)
  task_service.v2.ActionResponse action_response = 1;
}
