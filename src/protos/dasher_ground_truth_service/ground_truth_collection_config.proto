syntax = "proto3";
package dasher_ground_truth_service.v1;

import "google/protobuf/wrappers.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.dasher_ground_truth_service.rpc.api";

// Service for Ground Truth Screen Configuration
service GroundTruthCollectionConfigService {
  // RPC to fetch the Ground Truth screen configuration
  rpc GetGroundTruthCollectionConfig(GetGroundTruthCollectionConfigRequest) returns (GetGroundTruthCollectionConfigResponse) {}
}

// Request message for getting Ground Truth screen configuration
message GetGroundTruthCollectionConfigRequest {
  // task_group_id for the request
  string task_group_id = 3;

  reserved 1;
  reserved "sub_task_type";
  reserved 2;
  reserved "building_type";
}

// Response message for getting Ground Truth screen configuration
message GetGroundTruthCollectionConfigResponse {
  // Config for Ground Truth task
  GroundTruthCollectionConfig config = 1;
}

// Main configuration for Ground Truth collection task
message GroundTruthCollectionConfig {
  // List of screens in the ground truth task
  repeated Screen screens = 1;

  // First screen to show for task
  google.protobuf.StringValue initial_screen_id = 2;

  // Task instructions. String id from c3p0 for task
  google.protobuf.StringValue instructions_id = 3;

  // Screen definition for the task
  message Screen {
    // Unique identifier for the screen
    string screen_id = 1;

    // Next screen to show after this screen
    google.protobuf.StringValue next_screen_id = 2;

    // Screen type (could be one of the following types)
    oneof screen_type {
      // Screen type for go to location
      GoToLocationScreen go_to_location_screen = 3;

      // Screen type for education
      EducationScreen education_screen = 4;

      // Screen type for the collection
      PhotoCollectionScreen photo_collection_screen = 5;

      // Screen type for the question
      QuestionScreen question_screen = 6;

      // Screen type for the accept modal
      AcceptModal accept_modal = 7;

      // Screen type for the identification modal
      IdentificationScreen identification_screen = 8;
    }
  }

  // Screen for going to a location
  message GoToLocationScreen {
    // Task instructions
    repeated google.protobuf.StringValue instructions = 1;
    // Screen title
    string title = 2;
  }

  // Screen for going to a location
  message IdentificationScreen {
    // Screen title
    string title = 1;
    // Screen body
    string body = 2;
  }

  // Screen for education information
  message EducationScreen {
    // Item index
    int32 index = 1;

    // Screen title
    string title = 2;

    // Screen description
    string content = 3;

    // Footer text
    string footer_text = 4;

    // Screen details (could be one of the following items)
    oneof page {
      // Image item
      ImageItem image = 5;

      // MultiImage item
      MultiImage multi_image = 6;

      // Video item
      VideoItem video = 7;

      // Id Card
      google.protobuf.BoolValue id_card = 8;
    }

    // Single image item
    message ImageItem {
      // Image URL
      string url = 1;

      // Image width
      int32 width = 2;

      // Image height
      int32 height = 3;
    }

    // Row of images
    message ImageRow {
      // Images in one row
      repeated ImageItem images = 1;
    }

    // Multiple rows of images
    message MultiImage {
      // Image rows
      repeated ImageRow image_rows = 1;
    }

    // Video item
    message VideoItem {
      // Video URL
      string light_video_url = 1;

      // Dark Video URL
      string dark_video_url = 2;
    }
  }

  // Screen for collecting photos
  message PhotoCollectionScreen {
    // Title of the screen
    google.protobuf.StringValue title = 1;

    // Description of the screen
    google.protobuf.StringValue description = 2;

    // List of requested photos
    repeated PropertyPhoto photos = 3;

    // Banner info
    BannerInfo banner = 4;

    // Photo to be collected
    message PropertyPhoto {
      // The angle for the photo (building front, side, back, etc.)
      string angle = 1;

      // Freeform definition of the photo that needs to be taken
      google.protobuf.StringValue details = 2;

      // Sample images for the photo type
      repeated string sample_images = 3;

      // Indicates whether this angle requires multiple photos
      bool requires_multiple_photos = 4;

      // Is this photo optional
      bool is_optional = 5;

      // Sample bad images for the photo type
      repeated string sample_bad_images = 6;

      // Instructions for Dx to take photos
      google.protobuf.StringValue instructions = 7;

      // Description of the photo in bullet point format
      repeated string description = 8;

      // Has landscape sample images
      bool has_landscape_images = 9;

      // Photo guideline description
      google.protobuf.StringValue photo_guideline_text = 10;

      // Photo guideline photos
      repeated PhotoGuidelineItem photo_guideline_items = 11;

      // Cannot take photo button label
      google.protobuf.StringValue cannot_collect_button_label = 12;

      // Cannot take photo screen title
      google.protobuf.StringValue cannot_collect_screen_title = 13;

      // Photo guideline photo
      message PhotoGuidelineItem {
        // URL of sample image
        string photo_url = 1;

        // True if the provided image is landscape
        bool is_landscape = 2;

        // True if this is a good sample image
        bool valid_photo = 3;

        // Caption to display under the photo
        google.protobuf.StringValue caption = 4;
      }
    }

    // Banner info message
    message BannerInfo {
      // Text label shown in the banner
      string label = 1;

      // Additional information shown under the label
      string description = 2;

      // Type of banner
      string type = 3;

      // Color of the icon
      string icon_color = 4;

      // Icon name
      string icon = 5;
    }
  }

  // Screen for asking questions
  message QuestionScreen {
    // C3PO string ID for the question
    string question = 1;

    // Photo angle that link to this question screen
    google.protobuf.StringValue angle = 4;

    // Answer type (could be text or multiple choice)
    oneof answer {
      // Text answer
      TextAnswer text_answer = 2;

      // Multiple choice answer
      MultipleChoiceAnswer multiple_choice_answer = 3;
    }

    // Text answer details
    message TextAnswer {
      // Minimum length of the answer
      int32 min_length = 1;

      // Maximum length of the answer
      int32 max_length = 2;

      // Regular expression for the answer
      google.protobuf.StringValue regex = 3;

      // Placeholder text
      google.protobuf.StringValue placeholder = 4;

      // Description text
      google.protobuf.StringValue description = 5;
    }

    // Multiple choice answer details
    message MultipleChoiceAnswer {
      // List of choices
      repeated Choice choices = 1;

      // Choice options
      message Choice {
        // Choice ID
        string id = 1;

        // Choice text (C3PO string ID)
        string text = 2;
      }
    }
  }

  // Screen for the accept modal
  message AcceptModal {
    // Work type title (C3PO string ID)
    google.protobuf.StringValue title = 1;
  }
}
