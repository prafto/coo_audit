syntax = "proto3";

// buf:lint:ignore DIRECTORY_SAME_PACKAGE
package attributes_service.segments.v1;

import "google/protobuf/descriptor.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option go_package = "attributes_service";
option java_generic_services = true;
option java_multiple_files = true;
option java_outer_classname = "DxSpTimestampSegmentProto";
option java_package = "com.doordash.rpc.attributes_service.segments";

// identifier fields: dasher_id, sp_id. We must provide either sp_id or dasher_id to query segments
enum DxSpTimestampSegmentIdentifier {
  // default value is unspecified
  DX_SP_TIMESTAMP_SEGMENT_IDENTIFIER_UNSPECIFIED = 0;

  // Dasher ID associated with this record
  DX_SP_TIMESTAMP_SEGMENT_IDENTIFIER_DASHER_ID = 1;

  // SP ID associated with this record
  DX_SP_TIMESTAMP_SEGMENT_IDENTIFIER_SP_ID = 2;
}

// dimension fields: segment_tag, timestamp, segment_enabled, complementary_data
enum DxSpTimestampSegmentDimension {
  // unspecified field
  DX_SP_TIMESTAMP_SEGMENT_DIMENSION_UNSPECIFIED = 0;

  // label for a segment (a group of dashers in an sp)
  DX_SP_TIMESTAMP_SEGMENT_DIMENSION_SEGMENT_TAG = 1;

  // a timestamp field used for storing timestamp data for the segment: for example, last active time of dasher
  DX_SP_TIMESTAMP_SEGMENT_DIMENSION_TIMESTAMP = 2;

  reserved 3;
  reserved "DX_SP_TIMESTAMP_SEGMENT_DIMENSION_SEGMENT_ACTIVATED";

  // segment enabled
  DX_SP_TIMESTAMP_SEGMENT_DIMENSION_SEGMENT_ENABLED = 4;

  // complementary data
  DX_SP_TIMESTAMP_SEGMENT_DIMENSION_COMPLEMENTARY_DATA = 5;
}

// segment tag enum type
enum DxSpTimestampSegmentTag {
  // unspecified field
  DX_SP_TIMESTAMP_SEGMENT_TAG_UNSPECIFIED = 0;

  // segment tag for last active time of dasher
  DX_SP_TIMESTAMP_SEGMENT_TAG_LAST_ACTIVE_TIME = 1;

  // segment tag for hackathon project
  DX_SP_TIMESTAMP_SEGMENT_TAG_LAST_DELIVERY_TIME = 2;
}

// DxSpTimestampSegment identifiers and dimension fields to read
message DxSpTimestampSegmentField {
  // can read either identifier or dimension field
  oneof field {
    // identifier field (for example: dasher_id, sp_id)
    DxSpTimestampSegmentIdentifier id = 1;

    // dimension field (for example: segment_tag, timestamp)
    DxSpTimestampSegmentDimension dimension = 2;
  }
}

// list of fields to read
message DxSpTimestampSegmentFieldList {
  // list of fields
  repeated DxSpTimestampSegmentField fields = 1;
}

// write API payload for writing dxSpTimestampSegment
message UpsertDxSpTimestampSegment {
  // sp id
  int64 sp_id = 1;

  // dasher id
  int64 dasher_id = 2;

  reserved 3;
  reserved "segment_tag";

  reserved 4;
  reserved "segment_activated";

  // segment timestamp
  google.protobuf.Timestamp segment_timestamp = 5;

  // segment enabled
  google.protobuf.BoolValue segment_enabled = 6;

  // segment tag
  DxSpTimestampSegmentTag tag = 7;

  reserved 8;
  reserved "complementary_data";

  // complementary data
  bytes complementary_data_in_bytes = 9;
}

// list of segments to upsert
message UpsertDxSpTimestampSegmentList {
  // list of segments to write
  repeated UpsertDxSpTimestampSegment segments = 1;
}

// dasher sp timestamp segment enum
message DasherSpTimestampSegmentEnums {
  // one of dasher sp timestamp enums
  oneof dasher_sp_timestamp_enum {
    // segment tag enum
    DxSpTimestampSegmentTag tag = 1;
  }
}
