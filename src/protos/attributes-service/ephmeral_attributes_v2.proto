syntax = "proto3";

// buf:lint:ignore DIRECTORY_SAME_PACKAGE
package attributes_service.v2;

import "attributes-service/common.proto";
import "google/protobuf/timestamp.proto";

option go_package = "attributes_service";
option java_generic_services = true;
option java_multiple_files = true;
option java_outer_classname = "EphemeralAttributeServiceProto";
option java_package = "com.doordash.rpc.attributes_service.v2";

// EphemeralAttributeService is the service manage attributes within dx&logistics org
service EphemeralAttributeService {
  // read API to get attributes by specific filters
  rpc GetEphemeralAttributesByFilter(GetEphemeralAttributesByFilterRequest) returns (GetEphemeralAttributesByFilterResponse);

  // write API to add/update attribute in attribute-service
  rpc UpsertEphemeralAttribute(UpsertEphemeralAttributeRequest) returns (UpsertEphemeralAttributeResponse);

  // read API to get attribute by time range
  rpc GetEphemeralAttributeByTimeRange(GetEphemeralAttributeByTimeRangeRequest) returns (GetEphemeralAttributeByTimeRangeResponse);

  // write API to add/update attribute by daily or hourly
  rpc UpsertDailyEphemeralAttribute(UpsertDailyEphemeralAttributeRequest) returns (UpsertDailyEphemeralAttributeResponse);
}

// Request payload for GetAttributesByFilter API
message GetEphemeralAttributesByFilterRequest {
  // payload
  oneof read_attributes {
    // request for dasher attributes
    EphemeralAttributesRequest dasher_attributes = 1;

    // request for address attributes
    EphemeralAttributesRequest address_attributes = 2;

    // request for sp attributes
    EphemeralAttributesRequest sp_attributes = 6;

    // request for cart attributes
    EphemeralAttributesRequest cart_attributes = 7;

    // request for store attributes
    EphemeralAttributesRequest store_attributes = 8;

    // request for consumer attributes
    EphemeralAttributesRequest consumer_attributes = 9;

    // request for business attributes
    EphemeralAttributesRequest business_attributes = 10;
  }
  // map that uses namespace as key and list of attribute rankby's as value
  map<string, ListOfEphemeralRankByAttributes> rank_by_map = 3;

  // map that uses namespace as key and list of attribute filters as value
  map<string, ListOfEphemeralFilterExpressions> filter_map = 4;

  // pagination info
  attributes_service.common.v1.Pagination page_info = 5;
}

// API request to get ephemeral attributes by filter
message GetEphemeralAttributesByFilterResponse {
  // attribute
  oneof attribute {
    // dasher attribute response
    EphemeralAttributesRequest dasher_attributes = 1;

    // address attribute response
    EphemeralAttributesRequest address_attributes = 2;

    // sp attribute response
    EphemeralAttributesRequest sp_attributes = 5;

    // cart attribute response
    EphemeralAttributesRequest cart_attributes = 6;

    // store attribute response
    EphemeralAttributesRequest store_attributes = 7;

    // consumer attribute response
    EphemeralAttributesRequest consumer_attributes = 8;

    // business attribute response
    EphemeralAttributesRequest business_attributes = 9;
  }
  // list of attributes
  repeated EphemeralAttributeRow records = 3;

  // pagination response
  attributes_service.common.v1.PaginationResponse page_response = 4;
}

// dimension filter expression
message DimensionFilterExpression {
  // dimension field
  attributes_service.common.v1.AttributeDimension dimension = 1;

  // dimension filter operator
  attributes_service.common.v1.AttributeDimensionFilterOperator operator = 2;

  // dimension filter value
  oneof filter_value_type {
    // key value pair filter
    attributes_service.common.v1.KeyValuePairValue key_value_pair = 3;
  }
}

// dimension filters
message DimensionFilters {
  // list of dimension filters
  repeated DimensionFilterExpression filters = 1;
}

// expression for filter
message EphemeralFilterExpression {
  // field for filter expression
  string field = 1;

  // field version
  double version = 2;

  // field type
  attributes_service.common.v1.FieldType field_type = 3;

  // filter operator
  attributes_service.common.v1.FilterOperator operator = 4;

  // value of filter
  oneof filter_value_type {
    // value for single filter
    attributes_service.common.v1.FieldValue field_value = 5;

    // value for multi filters
    attributes_service.common.v1.FieldValueList field_value_list = 6;

    // value for between filter
    attributes_service.common.v1.BetweenValue from_to = 7;

    // dimension filters
    DimensionFilters dimension_filters = 8;
  }
}

// list for EphemeralFilterExpression
message ListOfEphemeralFilterExpressions {
  // list of filter expressions
  repeated EphemeralFilterExpression filter_expressions = 2;
}

// attribute to rank
message EphemeralRankByAttribute {
  // which namespace and attribute to rank
  string dx_field = 1;

  // which order to rank (ASC or DESC)
  attributes_service.common.v1.OrderType order = 2;
}

// a list of RankByAttribute
message ListOfEphemeralRankByAttributes {
  // a list of RankByAttribute
  repeated EphemeralRankByAttribute rank_by_attribute = 1;
}

// Request payload to get ephemeral attributes
message EphemeralAttributesRequest {
  // read the following fields
  repeated EphemeralAttributeField fields = 1;
}

// EphemeralAttributeField
message EphemeralAttributeField {
  // read the following fields
  string attribute_name = 1;
  // dataType of the field
  attributes_service.common.v1.FieldType field_type = 2;
  // attribute version
  double version = 3;
  // attribute dimension
  attributes_service.common.v1.AttributeDimension attribute_dimension = 4;
}

// data model for ephemeral attribute
message EphemeralAttributeRow {
  // list of attributes
  repeated attributes_service.common.v1.FieldValue row = 1;
}

// Data model for dasher_attributes table
message UpdateEphemeralDasherAttribute {
  // dasher id
  int64 dasher_id = 1;

  // attribute name
  string attribute_name = 2;

  // data type of this attribute_name
  attributes_service.common.v1.FieldType field_type = 3;

  // field_value value of this attribute
  oneof field_value {
    // int value is stored here
    int64 value_int = 4;

    // double value is stored here
    double value_double = 5;

    // string value is stored here
    string value_string = 6;
  }

  // version of the attribute we are writing
  double version = 7;

  // dimension1
  string dimension1 = 8;
}

// Data model for sp_attributes table
message UpdateEphemeralSpAttribute {
  // sp id .. starting point
  int64 sp_id = 1;

  // attribute name
  string attribute_name = 2;

  // data type of this attribute_name
  attributes_service.common.v1.FieldType field_type = 3;

  // field_value value of this attribute
  oneof field_value {
    // int value is stored here
    int64 value_int = 4;

    // double value is stored here
    double value_double = 5;

    // string value is stored here
    string value_string = 6;
  }

  // version of the attribute we are writing
  double version = 7;

  // dimension1
  string dimension1 = 8;
}

// Data model for address_attributes table
message UpdateEphemeralAddressAttribute {
  // address id
  int64 address_id = 1;

  // attribute name
  string attribute_name = 2;

  // data type of this attribute_name
  attributes_service.common.v1.FieldType field_type = 3;

  // field_value value of this attribute
  oneof field_value {
    // int value is stored here
    int64 value_int = 4;

    // double value is stored here
    double value_double = 5;

    // string value is stored here
    string value_string = 6;
  }

  // version of the attribute we are writing
  double version = 7;

  // dimension1
  string dimension1 = 8;
}

// Data model for cart_attributes table
message UpdateEphemeralCartAttribute {
  // id of the cart
  attributes_service.common.v1.UUID cart_id = 1;

  // attribute name
  string attribute_name = 2;

  // data type of this attribute_name
  attributes_service.common.v1.FieldType field_type = 3;

  // field_value value of this attribute
  oneof field_value {
    // int value is stored here
    int64 value_int = 4;

    // double value is stored here
    double value_double = 5;

    // string value is stored here
    string value_string = 6;

    // uuid value is stored here
    attributes_service.common.v1.UUID value_uuid = 7;
  }

  // version of the attribute we are writing
  double version = 8;

  // dimension1
  string dimension1 = 9;
}

// Data model for store_attributes table
message UpdateEphemeralStoreAttribute {
  // store id ..
  int64 store_id = 1;

  // attribute name
  string attribute_name = 2;

  // data type of this attribute_name
  attributes_service.common.v1.FieldType field_type = 3;

  // field_value value of this attribute
  oneof field_value {
    // int value is stored here
    int64 value_int = 4;

    // double value is stored here
    double value_double = 5;

    // string value is stored here
    string value_string = 6;
  }

  // version of the attribute we are writing
  double version = 8;

  // dimension1
  string dimension1 = 9;
}

// Data model for business_attributes table
message UpdateEphemeralBusinessAttribute {
  // business id ..
  int64 business_id = 1;

  // attribute name
  string attribute_name = 2;

  // data type of this attribute_name
  attributes_service.common.v1.FieldType field_type = 3;

  // field_value value of this attribute
  oneof field_value {
    // int value is stored here
    int64 value_int = 4;

    // double value is stored here
    double value_double = 5;

    // string value is stored here
    string value_string = 6;
  }

  // version of the attribute we are writing
  double version = 8;

  // dimension1
  string dimension1 = 9;
}

// Data model for consumer_attributes table
message UpdateEphemeralConsumerAttribute {
  // consumer id ..
  int64 consumer_id = 1;

  // attribute name
  string attribute_name = 2;

  // data type of this attribute_name
  attributes_service.common.v1.FieldType field_type = 3;

  // field_value value of this attribute
  oneof field_value {
    // int value is stored here
    int64 value_int = 4;

    // double value is stored here
    double value_double = 5;

    // string value is stored here
    string value_string = 6;
  }

  // version of the attribute we are writing
  double version = 8;

  // dimension1
  string dimension1 = 9;
}

// Request to update dasher_attributes table
message UpdateEphemeralDasherAttributesRequest {
  // list of updated dasher attributes
  repeated UpdateEphemeralDasherAttribute attributes = 1;
}

// Request to update address_attributes table
message UpdateEphemeralAddressAttributesRequest {
  // list of updated address attributes
  repeated UpdateEphemeralAddressAttribute attributes = 1;
}

// Request to update sp_attributes table
message UpdateEphemeralSpAttributesRequest {
  // list of updated sp attributes
  repeated UpdateEphemeralSpAttribute attributes = 1;
}

// Request to update cart_attributes table
message UpdateEphemeralCartAttributesRequest {
  // list of updated sp attributes
  repeated UpdateEphemeralCartAttribute attributes = 1;
}

// Request to update store_attributes table
message UpdateEphemeralStoreAttributesRequest {
  // list of updated store attributes
  repeated UpdateEphemeralStoreAttribute attributes = 1;
}

// Request to update business_attributes table
message UpdateEphemeralBusinessAttributesRequest {
  // list of updated business attributes
  repeated UpdateEphemeralBusinessAttribute attributes = 1;
}

// Request to update consumer_attributes table
message UpdateEphemeralConsumerAttributesRequest {
  // list of updated consumer attributes
  repeated UpdateEphemeralConsumerAttribute attributes = 1;
}

// Generic request to add/update attribute in attribute service
message UpsertEphemeralAttributeRequest {
  // write attribute for UpsertAttributeRequest
  oneof write_attributes {
    // request to update dasher attribute
    UpdateEphemeralDasherAttributesRequest dasher_attributes = 1;

    // request to update address attribute
    UpdateEphemeralAddressAttributesRequest address_attributes = 2;

    // request to update sp attribute
    UpdateEphemeralSpAttributesRequest sp_attributes = 3;

    // request to update cart attribute
    UpdateEphemeralCartAttributesRequest cart_attributes = 4;

    // request to update store attribute
    UpdateEphemeralStoreAttributesRequest store_attributes = 5;

    // request to update consumer attribute
    UpdateEphemeralConsumerAttributesRequest consumer_attributes = 6;

    // request to update business attribute
    UpdateEphemeralBusinessAttributesRequest business_attributes = 7;
  }
}

// Response for UpsertAttribute API
message UpsertEphemeralAttributeResponse {
  // total records updated by this API call
  int64 upsert_count = 1;
}

// entity id filter
message EntityIdFilter {
  // namespace (dasher, address, sp, etc)
  attributes_service.common.v1.Entity entity = 1;

  // filter operator
  attributes_service.common.v1.FilterOperator operator = 2;

  // value of filter
  oneof filter_value_type {
    // value for single filter
    attributes_service.common.v1.FieldValue field_value = 3;

    // value for multi filters
    attributes_service.common.v1.FieldValueList field_value_list = 4;
  }
}

// result for GetEphemeralAttributeByTimeRange
message GetEphemeralAttributeByTimeRangeResult {
  // entity id
  int64 entity_id = 1;

  reserved 'entity_value';
  reserved 2;

  // attribute value
  double attribute_value = 3;
}

// Request payload for GetEphemeralAttributeByTimeRange API
message GetEphemeralAttributeByTimeRangeRequest {
  // namespace (dasher, address, sp, etc)
  attributes_service.common.v1.Entity entity = 1;

  // entity id filter
  EntityIdFilter id_filter = 2;

  // date range filter start time
  google.protobuf.Timestamp start_time = 3;

  // date range filter end time
  google.protobuf.Timestamp end_time = 4;

  // aggregate operator
  attributes_service.common.v1.AggregateOperator aggregate_operator = 5;

  // attribute key
  string attribute_key = 6;

  // version of the attribute
  double version = 7;

  // pagination info
  attributes_service.common.v1.Pagination page_info = 8;
}

// Request payload for GetEphemeralAttributeByTimeRange API
message GetEphemeralAttributeByTimeRangeResponse {
  // namespace (dasher, address, sp, etc), each request should only associate with 1 entity
  attributes_service.common.v1.Entity entity = 1;

  // date range filter start time
  google.protobuf.Timestamp start_time = 2;

  // date range filter end time
  google.protobuf.Timestamp end_time = 3;

  // aggregate operator
  attributes_service.common.v1.AggregateOperator aggregate_operator = 4;

  // attribute key
  string attribute_key = 5;

  // version of the attribute
  double version = 6;

  // result list
  repeated GetEphemeralAttributeByTimeRangeResult result_list = 7;

  // pagination response
  attributes_service.common.v1.PaginationResponse page_response = 8;
}

// Upsert daily ephemeral attribute
message UpsertDailyEphemeralAttributeRequest {
  // namespace (dasher, address, sp, etc)
  attributes_service.common.v1.Entity entity = 1;
  // list of attributes
  repeated UpsertDailyEphemeralAttribute attributes = 2;
}

// Response for UpsertDailyEphemeralAttribute API
message UpsertDailyEphemeralAttributeResponse {
  // total records updated by this API call
  int64 upsert_count = 1;
}

// Data model for daily dasher_attributes table
message UpsertDailyEphemeralAttribute {
  // date
  google.protobuf.Timestamp date = 1;

  // entity id
  int64 entity_id = 2;

  // attribute key
  string attribute_key = 3;

  // attribute value
  double attribute_value = 4;

  // version of the attribute we are writing
  double version = 5;
}
