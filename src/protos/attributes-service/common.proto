syntax = "proto3";

// buf:lint:ignore DIRECTORY_SAME_PACKAGE
package attributes_service.common.v1;

import "attributes-service/dasher_arbitrary_entity_segment.proto";
import "attributes-service/dasher_skill_segment.proto";
import "attributes-service/dasher_sp_timestamp_segment.proto";
import "attributes-service/insights_manager_segment.proto";
import "attributes-service/store_sp_segment.proto";
import "google/protobuf/descriptor.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option go_package = "attributes_service";
option java_generic_services = true;
option java_multiple_files = true;
option java_outer_classname = "CommonProto";
option java_package = "com.doordash.rpc.attributes_service.common";

extend google.protobuf.EnumValueOptions {
  optional string value = 5000;
}

// Definition for different domains
enum Entity {
  // unknown entity
  ENTITY_UNSPECIFIED = 0;

  // dasher entity
  ENTITY_DASHER = 1 [(value) = "Dasher"];

  // dasher_merchant entity
  ENTITY_DASHER_MERCHANT = 2 [(value) = "DasherMerchant"];

  // dasher_shift entity
  ENTITY_DASHER_SHIFT = 3 [(value) = "DasherShift"];

  // delivery entity
  ENTITY_DELIVERY = 4 [(value) = "Delivery"];

  // address entity
  ENTITY_ADDRESS = 5 [(value) = "Address"];

  // sp entity .. starting point
  ENTITY_SP = 6 [(value) = "SP"];

  // Cart entity .. Checkout Cart
  ENTITY_CART = 7 [(value) = "Cart"];

  // Store entity .. Merchant Store
  ENTITY_STORE = 8 [(value) = "Store"];

  // Consumer entity
  ENTITY_CONSUMER = 9 [(value) = "Consumer"];
}

// Different operators for filter
enum FilterOperator {
  // unknown operator
  FILTER_OPERATOR_UNSPECIFIED = 0;

  // ==
  FILTER_OPERATOR_EQUAL = 1 [(value) = "Equal"];

  // !=
  FILTER_OPERATOR_NOT_EQUAL = 2 [(value) = "NotEqual"];

  // >
  FILTER_OPERATOR_GREATER_THAN = 3 [(value) = "GreatThan"];

  // <
  FILTER_OPERATOR_LESS_THAN = 4 [(value) = "LessThan"];

  // >=
  FILTER_OPERATOR_GREATER_THAN_EQUAL_TO = 5 [(value) = "GreatThanEqualTo"];

  // <=
  FILTER_OPERATOR_LESS_THAN_EQUAL_TO = 6 [(value) = "LessThanEqualTo"];

  // belongs to set
  FILTER_OPERATOR_IN = 7 [(value) = "In"];

  // [min, max]
  FILTER_OPERATOR_BETWEEN = 8 [(value) = "Between"];

  // dimension
  FILTER_OPERATOR_DIMENSION = 9 [(value) = "Dimension"];
}

// Type of field for GET endpoint
enum FieldType {
  // unknown field type
  FIELD_TYPE_UNSPECIFIED = 0;

  // int
  FIELD_TYPE_INT = 1 [(value) = "Int"];

  // float
  FIELD_TYPE_FLOAT = 2 [(value) = "Float"];

  // string
  FIELD_TYPE_STRING = 3 [(value) = "String"];

  // timestamp
  FIELD_TYPE_TIMESTAMP = 4 [(value) = "Timestamp"];

  // json format string
  FIELD_TYPE_DIMENSION = 5 [(value) = "Json"];

  // uuid format string
  FIELD_TYPE_UUID = 6 [(value) = "UUID"];

  // boolean
  FIELD_TYPE_BOOLEAN = 7 [(value) = "Boolean"];
}

// Type of order for GET endpoint
enum OrderType {
  // unknown order type
  ORDER_TYPE_UNSPECIFIED = 0;

  // ascending
  ORDER_TYPE_ASC = 1 [(value) = "Asc"];

  // descending
  ORDER_TYPE_DESC = 2 [(value) = "Desc"];
}

// key for dasher attribute namespace
enum DasherAttributeKey {
  // unknown attribute key for dasher namespace
  DASHER_ATTRIBUTE_KEY_UNSPECIFIED = 0;

  // platform_age attribute key for dasher namespace
  DASHER_ATTRIBUTE_KEY_PLATFORM_AGE = 1 [(value) = "PlatformAge"];

  // lifetime_delivery_count attribute key for dasher namespace
  DASHER_ATTRIBUTE_KEY_LIFETIME_DELIVERY_COUNT = 2 [(value) = "DeliveryCount"];

  // Unique identifier for dasher object
  DASHER_ATTRIBUTE_KEY_DASHER_ID = 3 [(value) = "DasherId"];

  // vehicle_type attribute key for dasher namespace
  DASHER_ATTRIBUTE_KEY_VEHICLE_TYPE = 4 [(value) = "VehicleType"];

  // NDRiskScore attribute key for dasher namespace - Never Delivered Risk Score
  DASHER_ATTRIBUTE_KEY_ND_RISK_SCORE_V1 = 5 [(value) = "NDRiskScoreV1"];

  // Fraud composite score attribute key for dasher namespace
  DASHER_ATTRIBUTE_KEY_FRAUD_COMPOSITE_SCORE_V1 = 6 [(value) = "FraudCompositeScoreV1"];

  // Pick score attribute key for dasher namespace.. a.k.a TopShopper Score
  DASHER_ATTRIBUTE_KEY_PICK_SCORE = 7 [(value) = "PickScore"];

  // Is dasher unassigned from an order in last 30 days attribute key for dasher namespace - to be retired
  DASHER_ATTRIBUTE_KEY_IS_DASHER_UNASSIGNED_FROM_ORDER_L30D = 8 [(value) = "IsDasherUnAssignedL30D"];

  // Is dasher unassigned excused in last 30 days attribute key for dasher namespace - to be retired
  DASHER_ATTRIBUTE_KEY_IS_UNASSIGN_EXCUSED_L30D = 9 [(value) = "IsDasherUnAssignedExcusedL30D"];

  // Has dasher clicked into SH in last 30 days attribute key for dasher namespace - to be retired
  DASHER_ATTRIBUTE_KEY_HAS_DASHER_CLICKED_INTO_SH_L30D = 10 [(value) = "HasDasherClickedIntoSHL30D"];

  // lifetime_parcel_delivery_count attribute key for dasher namespace
  DASHER_ATTRIBUTE_KEY_LIFETIME_PARCEL_DELIVERY_COUNT = 11 [(value) = "LifetimeParcelDeliveryCount"];

  // fraud ML interpolator v1c rolling percentile attribute key for dasher namespace
  DASHER_ATTRIBUTE_KEY_FRAUD_ML_INTERPOLATOR_V1C_ROLLING_PERCENTILE = 12 [(value) = "FraudMLInterpolatorV1CRollingPercentile"];

  // fraud ML interpolator v2 rolling percentile attribute key for dasher namespace
  DASHER_ATTRIBUTE_KEY_FRAUD_ML_INTERPOLATOR_V2_ROLLING_PERCENTILE = 13 [(value) = "FraudMLInterpolatorV2RollingPercentile"];

  // action composite score attribute key for dasher namespace
  DASHER_ATTRIBUTE_KEY_ACTION_COMPOSITE_SCORE = 14 [(value) = "ActionCompositeScore"];

  // fraud composite score attribute key for dasher namespace
  DASHER_ATTRIBUTE_KEY_FRAUD_COMPOSITE_SCORE = 15 [(value) = "FraudCompositeScore"];

  // dasher value l28d attribute key for dasher namespace
  DASHER_ATTRIBUTE_KEY_DASHER_VALUE_L28D = 16 [(value) = "DasherValueL28D"];

  // friction composite score attribute key for dasher namespace
  DASHER_ATTRIBUTE_KEY_FRICTION_COMPOSITE_SCORE = 17 [(value) = "FrictionCompositeScore"];

  // support composite score attribute key for dasher namespace
  DASHER_ATTRIBUTE_KEY_SUPPORT_COMPOSITE_SCORE = 18 [(value) = "SupportCompositeScore"];

  // unweighted composite score attribute key for dasher namespace
  DASHER_ATTRIBUTE_KEY_UNWEIGHTED_COMPOSITE_SCORE = 19 [(value) = "UnweightedCompositeScore"];

  // composite score date created at attribute key for dasher namespace
  DASHER_ATTRIBUTE_KEY_COMPOSITE_SCORE_DATE_CREATED_AT = 20 [(value) = "CompositeScoreDateCreatedAt"];

  reserved "DASHER_ATTRIBUTE_KEY_TOTAL_CANCELED_PAY_USD_L30D";
  reserved 21;

  // total_cnr_amount_usd_l30d
  DASHER_ATTRIBUTE_KEY_TOTAL_CNR_AMOUNT_USD_L30D = 22 [(value) = "TotalCNRAmountUSDL30D"];

  // total_delivery_pay_usd_l30d
  DASHER_ATTRIBUTE_KEY_TOTAL_DELIVERY_PAY_USD_L30D = 23 [(value) = "TotalDeliveryPayUSDL30D"];

  // total_dasher_store_closed_pay_usd_l30d
  DASHER_ATTRIBUTE_KEY_TOTAL_DASHER_STORE_CLOSED_PAY_USD_L30D = 24 [(value) = "TotalDasherStoreClosedPayUSDL30D"];

  // total_never_delivered_delivery_pay_usd_l30d
  DASHER_ATTRIBUTE_KEY_TOTAL_NEVER_DELIVERED_DELIVERY_PAY_USD_L30D = 25 [(value) = "TotalNeverDeliveredDeliveryPayUSDL30D"];

  // total_dasher_other_pay_usd_l30d
  DASHER_ATTRIBUTE_KEY_TOTAL_DASHER_OTHER_PAY_USD_L30D = 26 [(value) = "TotalDasherOtherPayUSDL30D"];

  // total_referral_pay_usd_l30d
  DASHER_ATTRIBUTE_KEY_TOTAL_REFERRAL_PAY_USD_L30D = 27 [(value) = "TotalReferralPayUSDL30D"];

  // total_tip_amount_usd_l30d
  DASHER_ATTRIBUTE_KEY_TOTAL_TIP_AMOUNT_USD_L30D = 28 [(value) = "TotalTipAmountUSDL30D"];

  // total_top_up_pay_usd_l30d
  DASHER_ATTRIBUTE_KEY_TOTAL_TOP_UP_PAY_USD_L30D = 29 [(value) = "TotalTopUpPayUSDL30D"];

  // Is dasher unassigned from a delivery in last 30 days attribute key for dasher namespace
  DASHER_ATTRIBUTE_KEY_IS_DASHER_UNASSIGNED_FROM_DELIVERY_L30D = 30 [(value) = "IsDasherUnassignedFromDeliveryL30D"];

  // Is dasher unassigned excused in last 30 days attribute key for dasher namespace
  DASHER_ATTRIBUTE_KEY_IS_DASHER_UNASSIGN_EXCUSED_L30D = 31 [(value) = "IsDasherUnassignedExcusedL30D"];

  // Has dasher clicked into Self Help Service in last 30 days attribute key for dasher namespace
  DASHER_ATTRIBUTE_KEY_HAS_DASHER_CLICKED_INTO_SELF_HELP_L30D = 32 [(value) = "HasDasherClickedIntoSelfHelpL30D"];

  // total_cancellation_pay_usd_l30d
  DASHER_ATTRIBUTE_KEY_TOTAL_CANCELLATION_PAY_USD_L30D = 33 [(value) = "TotalCancellationPayUSDL30D"];
}

// key for dasher merchant attribute namespace
enum DasherMerchantAttributeKey {
  // unknown attribute key for dasher merchant namespace
  DASHER_MERCHANT_ATTRIBUTE_KEY_UNSPECIFIED = 0;

  // lifetime_delivery attribute key for dasher_merchant namespace
  DASHER_MERCHANT_ATTRIBUTE_KEY_LIFETIME_DELIVERY_COUNT = 1 [(value) = "LifetimeDeliveryCount"];
}

// key for address attribute namespace
enum AddressAttributeKey {
  // unknown attribute key for address namespace
  ADDRESS_ATTRIBUTE_KEY_UNSPECIFIED = 0;

  // address id attribute key for address namespace
  ADDRESS_ATTRIBUTE_KEY_ADDRESS_ID = 1 [(value) = "AddressId"];

  // difficulty score attribute key for address namespace
  ADDRESS_ATTRIBUTE_KEY_DIFFICULTY_SCORE = 2 [(value) = "DifficultyScore"];
}

// key for starting point attribute namespace
enum SpAttributeKey {
  // unknown attribute key for sp namespace
  SP_ATTRIBUTE_KEY_UNSPECIFIED = 0;

  // sp id attribute key for sp namespace
  SP_ATTRIBUTE_KEY_SP_ID = 1 [(value) = "SpId"];

  // sp name attribute avg_20_min_late_1h
  SP_ATTRIBUTE_KEY_AVG_20_MIN_LATE_1H = 2 [(value) = "Avg20MinLate1H"];

  // sp name attribute cancel_rate_1h
  SP_ATTRIBUTE_KEY_CANCEL_RATE_1H = 3 [(value) = "CancelRate1H"];
}

// pagination for heavy request
message Pagination {
  // page size
  int32 page_size = 1;

  // page number
  int32 page_number = 2;
}

// response for pagination
message PaginationResponse {
  // has next page or not
  bool next_page = 1;

  // Pagination info
  Pagination page_info = 2;
}

// attribute to rank
message RankByAttribute {
  // which namespace and attribute to rank
  oneof rank_by_field {
    // key for dasher namespace
    DasherAttributeKey dx_field = 1;

    // key for dasher_merchant namespace
    DasherMerchantAttributeKey dx_mx_field = 2;

    // key for address namespace
    AddressAttributeKey address_field = 4;
  }

  // which order to rank (ASC or DESC)
  OrderType order = 3;
}

// a list of RankByAttribute
message ListOfRankByAttributes {
  // a list of RankByAttribute
  repeated RankByAttribute rank_by_attribute = 1;
}

// FieldTypeAndValue
message FieldTypeAndValue {
  // field type
  FieldType field_type = 1;
  // field value
  oneof field_value {
    // int value is stored here
    int64 value_int = 2;

    // double value is stored here
    double value_double = 3;

    // string value is stored here
    string value_string = 4;
  }
}

// filter for single value
message SingleFilterValue {
  // string value for single filter
  FieldTypeAndValue value = 1;
}

// filter for multi value
message FilterMultiValue {
  // string value for multi filters
  repeated FieldTypeAndValue value = 1;
}

// filter for between
message BetweenFilterValue {
  // from in between filter
  FieldTypeAndValue from = 1;

  // to in between filter
  FieldTypeAndValue to = 2;
}

// field enum
message FieldEnum {
  // one of field enum
  oneof field_enum {
    // enum in insights manager segment
    attributes_service.segments.v1.InsightsManagerSegmentEnums insights_manager_enum = 1;

    // enum in dx sp timestamp segment
    attributes_service.segments.v1.DasherSpTimestampSegmentEnums dasher_sp_timestamp_enum = 2;

    // enum in dasher skill segment
    attributes_service.segments.v1.DxSkillType dasher_skill_enum = 4;

    // enum in store sp segment
    attributes_service.segments.v1.StoreSpSegmentDataType store_sp_segment_enum = 5;
  }
  reserved 3;
  reserved "dasher_attribute_enum";
}

// field value
message FieldValue {
  // field value
  oneof field_value {
    // int value is stored here
    int64 value_int = 2;

    // double value is stored here
    double value_double = 3;

    // string value is stored here
    string value_string = 4;

    // timestamp value
    google.protobuf.Timestamp value_ts = 5;

    // UUID value is stored here
    UUID value_uuid = 6;

    // enum value
    FieldEnum value_enum = 7;

    // boolValue value
    google.protobuf.BoolValue value_boolvalue = 9;

    // bytes value
    bytes value_bytes = 10;
  }
  reserved 8;
  reserved "value_bool";
}

// filter for multi value
message FieldValueList {
  // string value for multi filters
  repeated FieldValue list = 1;
}

// filter for between
message BetweenValue {
  // from in between filter
  FieldValue from = 1;

  // to in between filter
  FieldValue to = 2;
}

// pagination for heavy request
message TokenBasedPagination {
  // page size
  int32 page_size = 1;

  // page token
  string page_token = 2;
}

// response for pagination
message TokenBasedPaginationResponse {
  // has next page or not
  bool next_page = 1;

  // Pagination info
  TokenBasedPagination page_info = 2;

  // total number of pages
  int64 total_page_count = 3;
}

// offset based pagination
message OffsetBasedPagination {
  // page size
  int32 page_size = 1;

  // page number
  int64 page_number = 2;
}

// response for pagination
message OffsetBasedPaginationResponse {
  // has next page or not
  bool next_page = 1;

  // Pagination info
  OffsetBasedPagination page_info = 2;

  // total number of pages
  int64 total_page_count = 3;
}

// segment type
enum SegmentType {
  // unknown segment type
  SEGMENT_TYPE_UNSPECIFIED = 0;

  // supply demand sp dasher
  SEGMENT_TYPE_SD_SP_DASHER = 1;

  // lx console entities
  SEGMENT_TYPE_LX_CONSOLE_ENTITIES = 2;

  // sub-market weekly delivery count
  SEGMENT_TYPE_SM_WEEKLY = 3;

  // dasher task history
  SEGMENT_TYPE_DASHER_TASK_HISTORY = 4;

  // store item
  SEGMENT_TYPE_STORE_ITEM = 5;

  // insights manager
  SEGMENT_TYPE_INSIGHTS_MANAGER = 6;

  // offline active dashers
  SEGMENT_TYPE_DASHER_SP_TIMESTAMP = 7;

  reserved 8;
  reserved "SEGMENT_TYPE_DASHER_ARBITRARY_ENTITY";

  // dasher skill segment
  SEGMENT_TYPE_DASHER_SKILL = 9;

  // dasher attribute backfill
  SEGMENT_TYPE_DASHER_ATTRIBUTE_BACKFILL = 10;

  // store starting point segment
  SEGMENT_TYPE_STORE_SP = 11;
}

// extra dimension (data) for attributes
enum AttributeDimension {
  // does not specify attribute dimension
  ATTRIBUTE_DIMENSION_UNSPECIFIED = 0;

  // attribute dimension 1
  ATTRIBUTE_DIMENSION_1 = 1;
}

// Different operators for attribute dimension filter
enum AttributeDimensionFilterOperator {
  // unknown operator
  ATTRIBUTE_DIMENSION_FILTER_OPERATOR_UNSPECIFIED = 0;

  // search key value pair in a set
  ATTRIBUTE_DIMENSION_FILTER_OPERATOR_CONTAINS = 1 [(value) = "Contains"];
}

// Key value pair value
message KeyValuePairValue {
  // key
  FieldTypeAndValue key = 1;

  // value
  FieldTypeAndValue value = 2;
}

// wrapper class for UUID field
message UUID {
  // string representation of the uuid
  string value = 1;
}

// logical operator
enum LogicalOperator {
  // unspecified
  LOGICAL_OPERATOR_UNSPECIFIED = 0;

  // and
  LOGICAL_OPERATOR_AND = 1;

  // or
  LOGICAL_OPERATOR_OR = 2;
}

// comparison operator
enum ComparisonOperator {
  // unspecified
  COMPARISON_OPERATOR_UNSPECIFIED = 0;

  // <
  COMPARISON_OPERATOR_LESS_THAN = 1;

  // <=
  COMPARISON_OPERATOR_LESS_THAN_EQUAL_TO = 2;

  // >
  COMPARISON_OPERATOR_GREATER_THAN = 3;

  // >=
  COMPARISON_OPERATOR_GREATER_THAN_EQUAL_TO = 4;

  // ==
  COMPARISON_OPERATOR_EQUAL = 5;

  // !=
  COMPARISON_OPERATOR_NOT_EQUAL = 6;

  // in
  COMPARISON_OPERATOR_IN = 7;
}

// sum, avg, etc
enum AggregateOperator {
  // unspecified
  AGGREGATE_OPERATOR_UNSPECIFIED = 0;

  // sum
  AGGREGATE_OPERATOR_SUM = 1;
}

// type of the attribute
enum AttributeType {
  // unspecified attribute type
  ATTRIBUTE_TYPE_UNSPECIFIED = 0;

  // standard attribute
  ATTRIBUTE_TYPE_STANDARD = 1 [(value) = "Standard"];

  // ephemeral attribute
  ATTRIBUTE_TYPE_EPHEMERAL = 2 [(value) = "Ephemeral"];
}
