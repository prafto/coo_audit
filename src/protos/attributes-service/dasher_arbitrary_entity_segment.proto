syntax = "proto3";

// buf:lint:ignore DIRECTORY_SAME_PACKAGE
package attributes_service.segments.v1;

import "google/protobuf/descriptor.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option go_package = "attributes_service";
option java_generic_services = true;
option java_multiple_files = true;
option java_outer_classname = "DxArbitraryEntitySegmentProto";
option java_package = "com.doordash.rpc.attributes_service.segments";

// All possible DxArbitraryEntitySegment identifiers
enum DxArbitraryEntitySegmentIdentifier {
  // default value is unspecified
  DX_ARBITRARY_ENTITY_SEGMENT_IDENTIFIER_UNSPECIFIED = 0;

  // Dasher ID associated with this record
  DX_ARBITRARY_ENTITY_SEGMENT_IDENTIFIER_DASHER_ID = 1;

  // entity type associated with this record
  DX_ARBITRARY_ENTITY_SEGMENT_IDENTIFIER_ENTITY_TYPE = 2;

  // entity ID associated with this record
  DX_ARBITRARY_ENTITY_SEGMENT_IDENTIFIER_ENTITY_ID = 3;
}

// All possible DxArbitraryEntitySegment dimensions
enum DxArbitraryEntitySegmentDimension {
  // unspecified field
  DX_ARBITRARY_ENTITY_SEGMENT_DIMENSION_UNSPECIFIED = 0;

  // attribute key
  DX_ARBITRARY_ENTITY_SEGMENT_DIMENSION_ATTRIBUTE_KEY = 1;

  // attribute value
  DX_ARBITRARY_ENTITY_SEGMENT_DIMENSION_ATTRIBUTE_VALUE = 2;

  // version
  DX_ARBITRARY_ENTITY_SEGMENT_DIMENSION_VERSION = 3;
}

// DxArbitraryEntitySegment identifiers and dimension fields to read
message DxArbitraryEntitySegmentField {
  // can read either identifier or dimension field
  oneof field {
    // identifier
    DxArbitraryEntitySegmentIdentifier id = 1;

    // dimension field
    DxArbitraryEntitySegmentDimension dimension = 2;
  }
}

// list of fields to read
message DxArbitraryEntitySegmentFieldList {
  // list of fields
  repeated DxArbitraryEntitySegmentField fields = 1;
}

// data model for Dx Arbitrary Entity segments
message UpsertDxArbitraryEntitySegment {
  // dasher id
  int64 dasher_id = 1;

  // entity type
  DxArbitraryEntityType entity_type = 2;

  // entity id
  string entity_id = 3;

  // attribute key
  string attribute_key = 4;

  // attribute value
  double attribute_value = 5;

  // version
  double version = 6;
}

// payload for upsert Dx Arbitrary Entity segment
message UpsertDxArbitraryEntitySegmentList {
  // list of segments to write
  repeated UpsertDxArbitraryEntitySegment segments = 1;
}

// data model for Dx Arbitrary Entity type
enum DxArbitraryEntityType {
  // unspecified entity type
  DX_ARBITRARY_ENTITY_TYPE_UNSPECIFIED = 0;

  //store entity
  DX_ARBITRARY_ENTITY_TYPE_STORE = 1;

  //business entity
  DX_ARBITRARY_ENTITY_TYPE_BUSINESS = 2;
}
