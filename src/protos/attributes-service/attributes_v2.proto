syntax = "proto3";

// buf:lint:ignore DIRECTORY_SAME_PACKAGE
package attributes_service.v2;

import "attributes-service/common.proto";

option go_package = "attributes_service";
option java_generic_services = true;
option java_multiple_files = true;
option java_outer_classname = "AttributeServiceProto";
option java_package = "com.doordash.rpc.attributes_service.v2";

// AttributeService is the service manage attributes within dx&logistics org
service AttributeService {
  //Read API to get attributes by specific filters
  rpc GetAttributesByFilter(GetAttributesByFilterRequest) returns (GetAttributesByFilterResponse);

  //Write API to add/update attribute in attribute-service
  rpc UpsertAttribute(UpsertAttributeRequest) returns (UpsertAttributeResponse);
}

// Request payload to get attribute within dasher namespace
message DasherAttributeField {
  // Attribute key
  attributes_service.common.v1.DasherAttributeKey field = 1;

  // Attribute version
  double version = 2;
}

// Request payload to get attributes within dasher namespace
message DasherAttributes {
  // list of DasherAttributeKey
  repeated DasherAttributeField fields = 1;
}

// Request payload to get attribute within dasher_merchant namespace
message DasherMerchantAttributeField {
  // Attribute key
  attributes_service.common.v1.DasherMerchantAttributeKey field = 1;

  // Attribute version
  double version = 2;
}

// Request payload to get attributes within dasher_merchant namespace
message DasherMerchantAttributes {
  // list of DasherMerchantAttributeKey
  repeated DasherMerchantAttributeField fields = 1;
}

// Request payload to get attribute within address namespaces
message SpAttributeField {
  // Attribute key
  attributes_service.common.v1.SpAttributeKey field = 1;

  // Attribute version
  double version = 2;
}

// Request payload to get attributes within address namespaces
message SpAttributes {
  // list of SpAttributeField's
  repeated SpAttributeField fields = 1;
}

// Request payload to get attribute within address namespace
message AddressAttributeField {
  // Attribute key
  attributes_service.common.v1.AddressAttributeKey field = 1;

  // Attribute version
  double version = 2;
}

// Request payload to get attributes within address namespace
message AddressAttributes {
  // list of AddressAttributeKey
  repeated AddressAttributeField fields = 1;
}

// expression for filter
message FilterExpression {
  // field for filter expression
  oneof filter_field {
    // key of dasher namespace
    attributes_service.common.v1.DasherAttributeKey dx_field = 1;

    // key of dasher_merchant namespace
    attributes_service.common.v1.DasherMerchantAttributeKey dx_mx_field = 2;

    // key for address namespace
    attributes_service.common.v1.AddressAttributeKey address_field = 3;

    // key for starting point namespace
    attributes_service.common.v1.SpAttributeKey sp_field = 9;
  }

  // field version
  double version = 4;

  // filter operator
  attributes_service.common.v1.FilterOperator operator = 5;

  // filter value
  oneof filter_value_type {
    // value for single filter
    attributes_service.common.v1.FieldValue field_value = 6;

    // value for multi filters
    attributes_service.common.v1.FieldValueList field_value_list = 7;

    // value for between filter
    attributes_service.common.v1.BetweenValue from_to = 8;
  }
}

// list for FilterExpression
message ListOfFilterExpressions {
  // list of filter expressions
  repeated FilterExpression filter_expressions = 1;
}

// Request payload for GetAttributesByFilter API
message GetAttributesByFilterRequest {
  // payload
  oneof read_attributes {
    // request for dasher attributes
    DasherAttributes dasher_attributes = 1;

    // request for dasher_merchant attributes
    DasherMerchantAttributes dasher_merchant_attributes = 2;

    // request for address attributes
    AddressAttributes address_attributes = 6;

    // request for sp attributes
    SpAttributes sp_attributes = 7;
  }

  // map that uses namespace as key and list of attribute rankby's as value
  map<string, ListOfRankByAttributes> rank_by_map = 3;

  // map that uses namespace as key and list of attribute filters as value
  map<string, ListOfFilterExpressions> filter_map = 4;

  // pagination info
  attributes_service.common.v1.Pagination page_info = 5;
}

// data model for attribute
message AttributeRow {
  // list of attributes
  repeated attributes_service.common.v1.FieldValue row = 1;
}

// API request to get attributes by filter
message GetAttributesByFilterResponse {
  // attribute
  oneof attribute {
    // dasher attribute request
    DasherAttributes dasher_attributes = 1;

    // dasher_merchant attribute request
    DasherMerchantAttributes dasher_merchant_attributes = 2;

    // address attribute request
    AddressAttributes address_attributes = 3;

    // starting point attribute request
    SpAttributes sp_attributes = 6;
  }
  // list of attributes
  repeated AttributeRow records = 4;

  // pagination response
  attributes_service.common.v1.PaginationResponse page_response = 5;
}

// attribute to rank
message RankByAttribute {
  // which namespace and attribute to rank
  oneof rank_by_field {
    // key for dasher namespace
    attributes_service.common.v1.DasherAttributeKey dx_field = 1;

    // key for dasher_merchant namespace
    attributes_service.common.v1.DasherMerchantAttributeKey dx_mx_field = 2;

    // key for address namespace
    attributes_service.common.v1.AddressAttributeKey address_field = 4;
  }

  // which order to rank (ASC or DESC)
  attributes_service.common.v1.OrderType order = 3;
}

// a list of RankByAttribute
message ListOfRankByAttributes {
  // a list of RankByAttribute
  repeated RankByAttribute rank_by_attribute = 1;
}

// Data model for dasher_attributes table
message UpdateDasherAttribute {
  // dasher id
  int64 dasher_id = 1;

  // attribute name
  attributes_service.common.v1.DasherAttributeKey attribute_name = 2;

  // field_value value of this attribute
  oneof field_value {
    // int value is stored here
    int64 value_int = 3;

    // double value is stored here
    double value_double = 4;

    // string value is stored here
    string value_string = 5;
  }

  // version of the attribute we are writing
  double version = 6;
}

// Data model for dasher_merchant_attributes table
message UpdateDasherMerchantAttribute {
  // dasher id
  int64 dasher_id = 1;

  // merchant id
  int64 merchant_id = 2;

  // attribute name
  attributes_service.common.v1.DasherMerchantAttributeKey attribute_name = 3;

  // field_value value of this attribute
  oneof field_value {
    // int value is stored here
    int64 value_int = 4;

    // double value is stored here
    double value_double = 5;

    // string value is stored here
    string value_string = 6;
  }

  // version of the attribute we are writing
  double version = 7;
}

// Data model for address_attributes table
message UpdateAddressAttribute {
  // address id
  int64 address_id = 1;

  // attribute name
  attributes_service.common.v1.AddressAttributeKey attribute_name = 2;

  // field_value value of this attribute
  oneof field_value {
    // int value is stored here
    int64 value_int = 3;

    // double value is stored here
    double value_double = 4;

    // string value is stored here
    string value_string = 5;
  }

  // version of the attribute we are writing
  double version = 6;
}

// Data model for sp_attributes table
message UpdateSpAttribute {
  // starting point id
  int64 sp_id = 1;

  // attribute name
  attributes_service.common.v1.SpAttributeKey attribute_name = 2;

  // field_value value of this attribute
  oneof field_value {
    // int value is stored here
    int64 value_int = 3;

    // double value is stored here
    double value_double = 4;

    // string value is stored here
    string value_string = 5;
  }

  // version of the attribute we are writing
  double version = 6;
}

// Request to update dasher_attributes table
message UpdateDasherAttributesRequest {
  // list of updated dasher attributes
  repeated UpdateDasherAttribute attributes = 1;
}

// Request to update dasher_merchant_attributes table
message UpdateDasherMerchantAttributesRequest {
  // update attribute request for dasher_merchant namespace
  repeated UpdateDasherMerchantAttribute attributes = 1;
}

// Request to update address_attributes table
message UpdateAddressAttributesRequest {
  // list of updated address attributes
  repeated UpdateAddressAttribute attributes = 1;
}

// Request to update sp_attributes table
message UpdateSpAttributesRequest {
  // list of updated starting point attributes
  repeated UpdateSpAttribute attributes = 1;
}

// Generic request to add/update attribute in attribute service
message UpsertAttributeRequest {
  // write attribute for UpsertAttributeRequest
  oneof write_attributes {
    // request to update dasher attribute
    UpdateDasherAttributesRequest dasher_attributes = 1;

    // request to update dasher_merchant attribute
    UpdateDasherMerchantAttributesRequest dasher_merchant_attributes = 2;

    // request to update address attribute
    UpdateAddressAttributesRequest address_attributes = 3;

    // request to update starting point attribute
    UpdateSpAttributesRequest sp_attributes = 4;
  }
}

// Response for UpsertAttribute API
message UpsertAttributeResponse {
  // total records updated by this API call
  int64 upsert_count = 1;
}
