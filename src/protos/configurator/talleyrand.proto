syntax = "proto3";
package configurator;

import "configurator/common.proto";
import "configurator/fabricator.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option java_multiple_files = true;
option java_package = "com.doordash.configurator.api.talleyrand";

enum MetricMoveDirection {
  UNKNOWN_DIRECTION = 0;
  UP = 1;
  DOWN = 2;
  FLAT = 3;
}

enum Operator {
  UNKNOWN_OPERATOR = 0;
  IN = 1;
  NOT_IN = 2;
  ALL = 3;
}

enum FilterType {
  UNKNOWN_FILTER_TYPE = 0;
  ITEMIZED = 1;
  AGGREGATED = 2;
}

// Dimension type
enum DimensionType {
  // Unknown
  UNKNOWN = 0;
  // Event dimension
  EVENT = 1;
  // Entity dimension
  ENTITY = 2;
  // Exposure dimension
  EXPOSURE = 3;
}

message MetricName {
  string id = 1;
  string name = 2;
  MetricLabel metric_label = 3;
  repeated MetricName covariates = 4;
  string window = 5;
}

message EventSource {
  string id = 1;
  string name = 2;
  string description = 3;
  string sql = 4;
  google.protobuf.Timestamp created_at = 5;
  google.protobuf.Timestamp updated_at = 6;
  repeated string owners = 7;
  repeated string entity_units = 8;
  string created_by = 9;
  string updated_by = 10;
  repeated string dependencies = 11;
  int32 look_back_period = 12;
  string schedule = 13;
}

message EventSourceName {
  string id = 1;
  string name = 2;
}

message EventDetails {
  string id = 1;
  string source_id = 2;
  string name = 3;
  string description = 4;
  google.protobuf.Timestamp created_at = 5;
  google.protobuf.Timestamp updated_at = 6;
  string created_by = 7;
  string updated_by = 8;
}

message MetricDetails {
  // Deleted fields
  reserved 15;
  reserved "covariates";

  string id = 1;
  string name = 2;
  string description = 3;
  google.protobuf.Timestamp created_at = 4;
  google.protobuf.Timestamp updated_at = 5;
  string created_by = 6;
  string updated_by = 7;
  repeated string entity_units = 8;
  string numerator_aggregation = 9;
  string denominator_aggregation = 10;
  string numerator_event_id = 11;
  string denominator_event_id = 12;
  repeated string owners = 13;
  MetricMoveDirection desired_direction = 14;
  bool include_all_entities = 16;
  string denominator_type = 17;
  EventDetails numerator_event = 18;
  EventDetails denominator_event = 19;
  repeated MetricName covariates_v2 = 20;
  string window = 21;
  string parent_metric_id = 22;
  repeated MetricName derived_metrics = 23;
  bool dimension_global_denominator = 24;
}

message GetAllMetricsRequest {}

message GetAllMetricsResponse {
  repeated MetricName metric_names = 1;
}

message GetMetricsRequest {
  repeated string metric_ids = 1;
}

message GetMetricsResponse {
  repeated MetricDetails metric_details = 1;
}

message GetMetricDetailsRequest {
  // Unique identifier to identify an metrics by either name or id
  oneof identifier {
    string id = 1;
    string name = 2;
  }
}

message GetMetricDetailsResponse {
  MetricDetails metric_details = 1;
}

message UpsertMetricDetailsRequest {
  // Deleted fields
  reserved 13;
  reserved "covariate_ids";

  string metric_id = 1;
  string name = 2;
  string description = 3;
  repeated string entity_units = 4;
  string numerator_aggregation = 5;
  string denominator_aggregation = 6;
  string numerator_event_id = 7;
  string denominator_event_id = 8;
  repeated string owners = 9;
  MetricMoveDirection desired_direction = 10;
  string user = 11;
  bool include_all_entities = 12;
  string denominator_type = 14;
  repeated string covariates_v2 = 15;
  string window = 16;
  string parent_metric_id = 17;
  bool dimension_global_denominator = 18;
}

message UpsertMetricDetailsResponse {
  string metric_id = 1;
  StatusCode code = 2;
}

message GetMetricNamesRequest {
  google.protobuf.StringValue metric_name_filter = 1;
  google.protobuf.Int32Value page_number = 2;
  google.protobuf.Int32Value page_size = 3;
}

message GetMetricNamesResponse {
  repeated MetricName metric_names = 1;
  int32 page_number = 2;
  int32 page_size = 3;
  int32 total_metrics = 4;
  int32 total_pages = 5;
}

message GetEventSourceRequest {
  // Unique identifier to identify an event source by either name or id
  oneof identifier {
    string id = 1;
    string name = 2;
  }
}

message GetEventSourceResponse {
  EventSource event_source = 1;
  repeated EventDetails events = 2;
  repeated DimensionDetails dimensions = 3;
}

message GetEventSourceListRequest {
  google.protobuf.StringValue source_name_filter = 1;
  google.protobuf.Int32Value page_number = 2;
  google.protobuf.Int32Value page_size = 3;
}

message GetEventSourceListResponse {
  repeated EventSource event_sources = 1;
  Paging paging = 2;
}

message Paging {
  int32 page_number = 1;
  int32 page_size = 2;
  int32 total_items = 3;
  int32 total_pages = 4;
}

message GetEventAggregatesRequest {
  string event_id = 1;
}

message GetEventAggregatesResponse {
  string event_id = 1;
  repeated EventAggregate aggregates = 2;
}

message EventAggregate {
  string aggregate_func = 1;
  string entity_unit = 2;
  repeated string metric_names = 3;
}

message UpsertEventSourceRequest {
  string id = 1;
  string name = 2;
  string description = 3;
  string sql = 4;
  repeated string entity_units = 5;
  repeated string owners = 6;
  repeated string dependencies = 7;
  string user = 8;
  int32 look_back_period = 9;
  string schedule = 10;
}

message UpsertEventSourceResponse {
  string id = 1;
  StatusCode code = 2;
}

message UpsertEventDetailsRequest {
  string id = 1;
  string source_id = 2;
  string name = 3;
  string description = 4;
  string user = 5;
}

message UpsertEventDetailsResponse {
  string id = 1;
  StatusCode code = 2;
}

message GetEventsRequest {
  repeated string event_ids = 1;
}

message GetEventsResponse {
  repeated EventDetails event_details = 1;
}

message GetEventDetailsRequest {
  // Unique identifier to identify an event details by either name or id
  oneof identifier {
    string id = 1;
    string name = 2;
  }
}

message GetEventDetailsResponse {
  EventDetails event_details = 1;
}

message GetMetricsBySourceResponse {
  repeated MetricDetails metric_details = 1;
}

message MetricPack {
  reserved 11;
  reserved "owners";

  string id = 1;
  string name = 2;
  google.protobuf.Timestamp created_at = 3;
  google.protobuf.Timestamp updated_at = 4;
  string created_by = 5;
  string updated_by = 6;
  MetricPackVersion current_version = 7;
  MetricPackVersion pending_version = 8;
  google.protobuf.Timestamp archived_at = 9;
  repeated string owner_names = 10;
  bool is_hidden = 12;
  // User Group Owners
  repeated string group_owner_ids = 13;
}

message MetricPackSummary {
  reserved 11;
  reserved "owners";

  string id = 1;
  string name = 2;
  google.protobuf.Timestamp created_at = 3;
  google.protobuf.Timestamp updated_at = 4;
  string created_by = 5;
  string updated_by = 6;
  string current_version_id = 7;
  string pending_version_id = 8;
  google.protobuf.Timestamp archived_at = 9;
  repeated string owner_names = 10;
  bool is_hidden = 12;
  // User Group Owners
  repeated string group_owner_ids = 13;
}

message MetricPackVersion {
  string id = 1;
  string metric_pack_id = 2;
  string description = 3;
  google.protobuf.Timestamp created_at = 4;
  string created_by = 5;
  repeated PackedMetric packed_metrics = 6;
}

// Covariate
message Covariate {
  // Covariate Type
  enum CovariateType {
    // COVARIATE_TYPE_UNSPECIFIED
    COVARIATE_TYPE_UNSPECIFIED = 0;
    // COVARIATE_TYPE_METRIC
    COVARIATE_TYPE_METRIC = 1;
    // COVARIATE_TYPE_FORECAST
    COVARIATE_TYPE_FORECAST = 2;
  }
  // id
  string id = 1;
  // name
  string name = 2;
  // covariate_type
  CovariateType covariate_type = 3;
}

message ToleranceThreshold {
  enum ToleranceType {
    // TOLERANCE_TYPE_UNSPECIFIED
    TOLERANCE_TYPE_UNSPECIFIED = 0;
    // TOLERANCE_TYPE_ABSOLUTE
    TOLERANCE_TYPE_ABSOLUTE = 1;
    // TOLERANCE_TYPE_RELATIVE
    TOLERANCE_TYPE_RELATIVE = 2;
  }

  ToleranceType type = 1;
  string tolerance = 2;
}

// Metric Directionality Enum
enum MetricDirectionality {
  // Unknown
  METRIC_DIRECTIONALITY_UNKNOWN = 0;
  // Increase
  METRIC_DIRECTIONALITY_INCREASE = 1;
  // Decrease
  METRIC_DIRECTIONALITY_DECREASE = 2;
  // No change
  METRIC_DIRECTIONALITY_NO_CHANGE = 3;
}

// Window metric config
enum WindowMetricNonFullyBakedCohortOption {
  // Default unknown value, used when the state is not explicitly set.
  WINDOW_METRIC_NON_FULLY_BAKED_COHORT_OPTION_UNSPECIFIED = 0;

  // Include cohorts that are not fully baked in the metric calculations.
  WINDOW_METRIC_NON_FULLY_BAKED_COHORT_OPTION_INCLUDE = 1;

  // Exclude cohorts that are not fully baked from the metric calculations.
  WINDOW_METRIC_NON_FULLY_BAKED_COHORT_OPTION_EXCLUDE = 2;

  // Strictly exclude non-fully baked cohorts, ensuring they are never considered.
  WINDOW_METRIC_NON_FULLY_BAKED_COHORT_OPTION_HARD_EXCLUDE = 3;
}

// MetricInsights
message MetricInsights {
  // number of experiments that used the metric in the last 90 days
  int32 experiment_count = 1;
  // popularity rank of the metric based on experiment usage
  int32 popularity_rank = 2;
  // overall popularity score of the metric
  double popularity_score = 3;
  // overall quality score of the metric
  double quality_score = 4;
  // overall efficiency score of the metric
  double efficiency_score = 5;
  // completion of sensitivity check of the metric
  int32 sensitivity_check = 6;
  // average experiment SQL latency in minutes
  int32 exp_sql_latency_minutes = 7;
  // average experiment success rate
  double exp_success_rate = 8;
  // costs associated with the metric in the last 90d
  double cost = 9;
}

// PackedDimensions
message PackedDimensions {
  // id
  string id = 1;
  // name
  string name = 2;
  // description
  string description = 3;
  // dimensions
  repeated EntityDimension dimensions = 4;
}

message PackedMetric {
  reserved 6;
  reserved "covariates";
  reserved 11;
  reserved "desired_direction";
  reserved 12;
  reserved "metric_direction";

  string id = 1;
  string metric_pack_version_id = 2;
  string metric_id = 3;
  MetricLabel metric_label = 4;
  string metric_name = 5;
  repeated string covariate_metric_ids = 7; //TODO[Mohan] deprecate after covariates_v2 is actively used
  repeated EntityDimension entity_dimensions = 8; // TODO deprecate after packed_dimensions is actively used
  int32 cuped_num_days = 9 [deprecated = true];
  repeated int32 cuped_lags = 10 [deprecated = true];
  string metric_direction_string = 13;
  repeated double quantiles = 14;
  repeated Covariate covariates_v2 = 15;
  repeated string cuped_windows = 16;
  MetricDirectionality desired_directionality = 17;
  ToleranceThreshold tolerance_threshold = 18;
  repeated PackedDimensions packed_dimensions = 19;
  // used for filtering metrics in adhoc analyses or metrics in a metric pack
  repeated string metric_filter = 20;
  // keep incomplete exposures. used to disable filtering of incomplete exposures that don't have a full window of data
  bool include_non_fully_baked_cohort = 21 [deprecated = true];
  string parent_metric_pack_id = 22;
  // Alternative Timestamp Column (default = event_ts)
  string timestamp_column = 23;
  WindowMetricNonFullyBakedCohortOption window_metric_non_fully_baked_cohort_option = 24;
  bool keep_events_after_experiment_end_date = 25;
}

enum MetricLabel {
  SECONDARY = 0;
  PRIMARY = 1;
  GUARDRAIL = 2;
}

message LabeledMetric {
  reserved 4;
  reserved "entity_dimension_ids";

  string metric_id = 1;
  MetricLabel metric_label = 2;
  repeated MetricName covariates = 3; //TODO[Mohan] deprecate after covariates_v2 is actively used
  google.protobuf.Int32Value cuped_num_days = 5 [deprecated = true];
  repeated EntityDimension entity_dimensions = 6; // TODO deprecate after packed_dimensions is actively used
  repeated int32 cuped_lags = 7 [deprecated = true];
  repeated double quantiles = 8;
  repeated Covariate covariates_v2 = 9;
  repeated string cuped_windows = 10;
  MetricDirectionality desired_directionality = 11;
  ToleranceThreshold tolerance_threshold = 12;
  repeated PackedDimensions packed_dimensions = 13;
  // used for filtering metrics in adhoc analyses or metrics in a metric pack
  repeated string metric_filter = 14;
  // keep incomplete exposures. used to disable filtering of incomplete exposures that don't have a full window of data
  bool include_non_fully_baked_cohort = 15 [deprecated = true];
  // from which metric pack this metric comes
  string parent_metric_pack_id = 16;
  // Alternative Timestamp Column (default = event_ts)
  string timestamp_column = 17;
  WindowMetricNonFullyBakedCohortOption window_metric_non_fully_baked_cohort_option = 18;
  bool keep_events_after_experiment_end_date = 19;
}

message GetMetricPackRequest {
  string id = 1;
  bool allow_hidden = 2;
  // Exclude returning pending_version object. (default false)
  bool exclude_pending_version = 3;
  // To enable cross dimensions double read. Will be deprecated after rollout. (default false)
  bool enable_cross_dimensions_double_read = 4;
}

message GetMetricPackResponse {
  MetricPack metric_pack = 1;
}

message AddMetricPackRequest {
  reserved 5;
  reserved "owner_ids";

  string metric_pack_id = 7;
  string description = 1;
  repeated string owner_names = 2;
  repeated LabeledMetric labeled_metrics = 3;
  string name = 4;
  string user = 6;
  bool is_hidden = 8;
  repeated string group_owner_ids = 9;
  // return simplified object on response; ignoring versions (default false)
  bool return_simplified_object = 10;
}

message AddMetricPackResponse {
  MetricPack metric_pack = 1;
  StatusCode code = 2;
}

message UpdateMetricPackRequest {
  string metric_pack_id = 1;
  string description = 2;
  repeated LabeledMetric labeled_metrics = 3;
  string user = 4;
  bool is_hidden = 5;
  repeated string group_owner_ids = 6;
  // return simplified object on response; ignoring versions (default false)
  bool return_simplified_object = 7;
}

message UpdateMetricPackResponse {
  MetricPack metric_pack = 1;
  StatusCode code = 2;
}

message ApproveMetricPackRequest {
  string metric_pack_id = 1;
  string user = 2;
}

message ApproveMetricPackResponse {
  reserved 2;

  string metric_pack_id = 1;
  StatusCode code = 3;
}

message RejectMetricPackRequest {
  string metric_pack_id = 1;
  string user = 2;
}

message RejectMetricPackResponse {
  reserved 2;

  string metric_pack_id = 1;
  StatusCode code = 3;
}

message GetMetricPackListRequest {
  enum FieldV2 {
    NAME = 0;
    OWNER = 1;
  }
  message FieldFilter {
    FieldV2 field = 1;
    string value = 2;
  }
  google.protobuf.Int32Value page_number = 1;
  google.protobuf.Int32Value page_size = 2;
  repeated FieldFilter filters = 3;
  bool allow_hidden = 4;
  // If provided, the API will only return metrics bookmarked by at least one included user. If empty, no filter
  repeated string bookmark_filter_emails = 5;
}

message GetAllMetricPacksRequest {
  bool allow_hidden = 1;
}

message GetMetricPackListResponse {
  repeated MetricPackSummary metric_pack_summaries = 1;
  int32 page_number = 2;
  int32 page_size = 3;
  int32 total_metric_packs = 4;
  int32 total_pages = 5;
}

message MetricPackName {
  string id = 1;
  string name = 2;
}

message GetAllMetricPacksResponse {
  repeated MetricPackName metric_packs = 1;
}

message DimensionDetails {
  string id = 1;
  string source_id = 2;
  string name = 3;
  string description = 4;
  google.protobuf.Timestamp created_at = 5;
  google.protobuf.Timestamp updated_at = 6;
  string created_by = 7;
  string updated_by = 8;
  DimensionType type = 9;
}

message ItemizedFilterValue {
  string value = 1;
  MetricLabel metric_label = 2;
  ToleranceThreshold tolerance_threshold = 3;
}

message ItemizedFilterValues {
  repeated ItemizedFilterValue values = 1;
}

message AggregatedFilterValues {
  repeated string values = 1;
  MetricLabel metric_label = 2;
}

message FilterStrategy {
  FilterType type = 1;
  // Only of the included entity within this "oneof" block can be set for a single filter strategy.
  oneof strategy {
    ItemizedFilterValues itemized_values = 2;
    AggregatedFilterValues aggregated_values = 3;
  }
}

message Filter {
  reserved 6, 7;
  reserved "desired_directionality", "tolerance_threshold";

  Operator operator = 1;
  repeated string values = 2; /* deprecated in future */
  FilterType type = 3; /* deprecated in future */
  string alias = 4;
  FilterStrategy filter_strategy = 5;
}

message EntityDimension {
  reserved 8;
  reserved "apply_to_global_denominator";
  string id = 1;
  string name = 2;
  string entity_unit = 3;
  string source_id = 4;
  string source_name = 5;
  repeated Filter filters = 6;
  MetricInsights insights = 7;
  bool use_global_denominator = 9;
}

message MetricDimensions {
  string metric_id = 1;
  repeated EntityDimension dimensions = 2;
}

message GetDimensionDetailsRequest {
  // Unique identifier to identify an event by either name or id
  oneof identifier {
    string id = 1;
    string name = 2;
  }
}

message GetDimensionDetailsResponse {
  DimensionDetails dimension_details = 1;
}

message UpsertDimensionDetailsRequest {
  reserved 4;
  reserved "created_by";

  string source_id = 1;
  string name = 2;
  string description = 3;
  string id = 5;
  string user = 6;
  DimensionType type = 7;
}

message UpsertDimensionDetailsResponse {
  string id = 1;
  StatusCode code = 2;
}

message GetApplicableDimensionsForMetricsRequest {
  reserved 1, 2;
  reserved "id", "name";

  repeated string metric_ids = 3;
}

message GetApplicableDimensionsForMetricsResponse {
  repeated MetricDimensions metric_dimensions = 1;
}

message GetWindowMetricsByParentRequest {
  // Unique identifier to identify an metrics by either name or id
  oneof identifier {
    string parent_id = 1;
    string parent_name = 2;
  }
}

message GetWindowMetricsByParentResponse {
  MetricDetails parent_metric_details = 1;
  repeated MetricDetails windowed_metrics_details = 2;
}
