syntax = "proto3";
package configurator;

import "configurator/columbus_predictor_config.proto";
import "configurator/common.proto";
import "configurator/sps_predictor_config.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option java_multiple_files = true;
option java_package = "com.doordash.configurator.api";

// Predictor Config Filter
message PredictorConfigFilter {
  // Predictor name
  string name = 1;
  // List of property filters
  repeated FeaturePropertyFilter data = 6;
}

// GetPredictorConfig request
message GetOctopusPredictorConfigsRequest {
  // staging or prod
  string environment = 1;
  // list of predictor names (empty to get all)
  repeated string predictor_names = 2;
  // Page number/size for pagination (optional)
  google.protobuf.Int32Value page_number = 3;
  google.protobuf.Int32Value page_size = 4;
  // Filter Predictors
  PredictorConfigFilter filter = 5;
}

// Predictor config info for a single predictor - includes both Columbus/SPS configs
message OctopusPredictorConfigSpec {
  // predictor name
  string predictor_name = 1;
  // Columbus version of predictor config
  configurator.PredictorConfig columbus_predictor_config = 2;
  // SPS verison of predictor config (should theoretically be same)
  configurator.SPSPredictorConfig sps_predictor_config = 3;
  // when was this last updated in Octopus (only for Get requests)
  google.protobuf.Timestamp last_updated = 4;
}

// Fabricator Source Filter
message GetOctopusPredictorConfigsResponse {
  // list of predictor config specs from get request (may be different order)
  repeated OctopusPredictorConfigSpec predictor_config_specs = 1;
  // status code of response
  StatusCode code = 2;
  // Pagination
  PageInfo page_info = 3;
}

// GetPredictorConfig request
message UpsertOctopusPredictorConfigsRequest {
  // staging or prod
  string environment = 1;
  // list of predictor names (empty to get all)
  repeated OctopusPredictorConfigSpec predictor_config_specs = 2;
  // dry or not
  bool dry = 3;
}
