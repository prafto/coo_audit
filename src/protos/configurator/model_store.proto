syntax = "proto3";
package configurator;

import "configurator/common.proto";

option java_multiple_files = true;
option java_package = "com.doordash.configurator.api.model_store";

// a message for requesting a model upload
message UploadModelRequest {
  // Basic model object to be stored
  SibylModel sibyl_model = 1;
  // Contains context of the service caller and the environment
  RequestContext request_context = 2;
  // Folder or artifact path where the model service would load from
  string location = 3;
  // user defined tags for user tracking purposes
  map<string, string> user_tags = 4;
  // MLP defined tags for internal tracking purposes (e.g. sibyl-library version)
  map<string, string> system_tags = 5;
}

// a message for a model upload response
message UploadModelResponse {
  // Status code for the request
  StatusCode code = 1;
  // Details on why upload model failed if so
  string message = 2;
  // full path to the final model location including bucket
  string location = 3;
}

// a message for requesting a model fetch
message GetModelRequest {
  // The predictor name of the model to fetch
  string predictor_name = 1;
  // The model id of the model to fetch
  string model_id = 2;
  // Contains context of the service caller and the environment
  RequestContext request_context = 3;
}

// a message for a model fetch response
message GetModelResponse {
  // Status code for the request
  StatusCode code = 1;
  // Details on why get model failed if so
  string message = 2;
  // Basic model object that was retrieved
  SibylModel sibyl_model = 3;
  // Full path to the model location including bucket
  string location = 4;
}

// a mesage for a list models request
message ListModelsRequest {
  // The filters to restrict the list models request by
  repeated ListModelsFilter filters = 1;
  // Contains context of the service caller and the environment
  RequestContext request_context = 3;
}

// a mesage for a list models response
message ListModelsResponse {
  // Status code for the request
  StatusCode code = 1;
  // Details on why list models failed if so
  string message = 2;
  // List of sibyl model objects that were retrieved
  repeated SibylModel models = 3;
}

// a message for requesting a model validation
message ValidateModelRequest {
  // The predictor name of the model to validate
  string predictor_name = 1;
  // The model name of the model to validate
  string model_name = 2;
  // The model version of the model to validate
  string model_version = 3;
  // Contains context of the service caller and the environment
  RequestContext request_context = 4;
}

// a message for a model validation response
message ValidateModelResponse {
  // Status code for the request
  StatusCode code = 1;
  // Details on why validate model failed if so
  string message = 2;
  // The workflow id of the model validation
  string workflow_id = 3;
}

// a message for requesting a model validation status
message GetModelValidationStatusRequest {
  // The workflow id of the model validation
  string workflow_id = 1;
  // Contains context of the service caller and the environment
  RequestContext request_context = 2;
}

// a message for a model validation status response
message GetModelValidationStatusResponse {
  // Status code for the request
  StatusCode code = 1;
  // Details on why get model validation status failed if so
  string message = 2;
  // The status of the model validation
  string status = 3;
}

// a message for filtering list operations
message ListModelsFilter {
  // the key to filter results by
  string key = 1;
  // the value to filter results by
  string value = 2;
  // the operation to filter results by e.g. "=="
  string op = 3;
}

// a message a basic Sibyl model definition
message SibylModel {
  // The predictor name of the model
  string predictor_name = 1;
  // The model name of the model
  string model_name = 2;
  // The model version of the model
  string model_version = 3;
  // The full model id of the model: the full id is {model_name}_{model_version}
  string model_id = 4;
  // The Sibyl model config of the model
  string model_config_json = 5;
  // The Sibyl model metadata of the model
  string model_metadata_json = 6;
  // The Sibyl model governance tags of the model
  string model_governance_json = 7;
}

// a message for the context of a request
message RequestContext {
  // tag string to help identify the calling service
  string caller_service_name = 1;
  // env the model would be uploaded to, i.e adhoc, prod, argil
  string target_env = 2;
  // owner of the model
  string owner = 3;
  // team owner of the model
  string team = 4;
}
