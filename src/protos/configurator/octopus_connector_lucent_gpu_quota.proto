syntax = "proto3";
package configurator;

import "configurator/common.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option java_multiple_files = true;
option java_package = "com.doordash.configurator.api";

// enum for gpu types
enum GpuType {
  // default unspecified status
  GPU_TYPE_UNSPECIFIED = 0;
  // A10 GPUs
  GPU_TYPE_A10 = 1;
  // A100 GPUs
  GPU_TYPE_A100 = 2;
  // H100 GPUs
  GPU_TYPE_H100 = 3;
}

// enum for which service is requesting gpus, new services requiring specific gpu quotas can be added here
enum ServicePool {
  // default unspecified status
  SERVICE_POOL_UNSPECIFIED = 0;
  // lucent dev clusters
  SERVICE_POOL_LUCENT_DEV = 1;
  // lucent job clusters
  SERVICE_POOL_LUCENT_JOB = 2;
}

// Lucent GPU quota configs
message LucentGpuQuota {
  // team
  string team = 1;
  // gpu_type
  GpuType gpu_type = 2;
  // service requesting gpus
  ServicePool service_pool = 3;
  // number of gpus able to be allocated to the team
  int32 quota = 4;
  // quota last updated timestamp
  google.protobuf.Timestamp last_updated = 5;
}

// Get Lucent GPU quota request
message LucentConnectorGetGpuQuotaRequest {
  // team
  string team = 1;
  // gpu_type
  GpuType gpu_type = 2;
  // service requesting gpus
  ServicePool service_pool = 3;
  // Page number for pagination
  google.protobuf.Int32Value page_number = 4;
  // Page size should always be 10 if listing
  google.protobuf.Int32Value page_size = 5;
}

// Get Lucent GPU quota response
message LucentConnectorGetGpuQuotaResponse {
  // Status Code
  StatusCode code = 1;
  // Lucent gpu quotas
  repeated LucentGpuQuota lucent_gpu_quotas = 2;
  // Pagination
  PageInfo page_info = 3;
}

// Upsert Lucent Gpu quota Request
message LucentConnectorUpsertGpuQuotaRequest {
  // Lucent gpu quota
  LucentGpuQuota lucent_gpu_quota = 1;
  // Set true for a dry run
  bool dry = 2;
}

// Increase Lucent Gpu quota Request
message LucentConnectorIncreaseGpuQuotaRequest {
  // Lucent gpu quota
  LucentGpuQuota lucent_gpu_quota = 1;
  // Set true for a dry run
  bool dry = 2;
}
