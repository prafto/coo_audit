syntax = "proto3";
// buf:lint:ignore PACKAGE_VERSION_SUFFIX
package configurator;

import "configurator/common.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

// buf:lint:ignore PACKAGE_SAME_JAVA_MULTIPLE_FILES
option java_multiple_files = true;
// buf:lint:ignore PACKAGE_SAME_JAVA_PACKAGE
option java_package = "com.doordash.configurator.api.fabricator_job_status";

// Job status
message JobStatus {
  // Fabricator job state
  enum JobState {
    // Default state
    // buf:lint:ignore ENUM_VALUE_PREFIX
    // buf:lint:ignore ENUM_ZERO_VALUE_SUFFIX
    UNSPECIFIED = 0;
    // Run requested
    // buf:lint:ignore ENUM_VALUE_PREFIX
    REQUESTED = 1;
    // Queued state
    // buf:lint:ignore ENUM_VALUE_PREFIX
    QUEUED = 2;
    // Running state
    // buf:lint:ignore ENUM_VALUE_PREFIX
    RUNNING = 3;
    // Success state
    // buf:lint:ignore ENUM_VALUE_PREFIX
    SUCCESS = 4;
    // Failure state
    // buf:lint:ignore ENUM_VALUE_PREFIX
    FAILURE = 5;
    // Cancelled state
    // buf:lint:ignore ENUM_VALUE_PREFIX
    CANCELLED = 6;
  }

  // Fabricator run id
  string fabricator_run_id = 1;
  // Dagster run ID
  string dagster_run_id = 2;
  // Source name
  string source = 3;
  // partition str 2020-06-01 or 2020-06-01-00 for hourly
  string partition = 4;
  // partition date str , i.e. 2020-06-01
  string partition_date = 5;
  // Databricks job link
  string databricks_job_url = 6;
  // Time when the job was requested in Dagster
  google.protobuf.Timestamp dagster_requested_time = 7;
  // Time when the job was queued in Dagster
  google.protobuf.Timestamp dagster_queued_time = 8;
  // Time when the job started in Dagster
  google.protobuf.Timestamp dagster_start_time = 9;
  // Time when the job completed in Dagster
  google.protobuf.Timestamp dagster_end_time = 10;
  // Time when the databricks job started
  google.protobuf.Timestamp databricks_start_time = 11;
  // Time when the databricks job ended
  google.protobuf.Timestamp databricks_end_time = 12;
  // State of the job, i.e. success, failed, running
  JobState state = 13;
  // If job is backfill
  google.protobuf.BoolValue is_backfill = 14;
  // If job failed, reason for failure
  string fail_reason = 15;
  // Other metadata
  google.protobuf.Struct job_metadata = 16;
  // Time when the job status was last updated
  google.protobuf.Timestamp updated_at = 17;
}

// Job status request
message JobStatusGetRequest {
  // Fabricator run ID
  string fabricator_run_id = 1;
  // The time after which the job status was updated
  google.protobuf.Timestamp updated_after = 2;
}

// Job status response
message JobStatusGetResponse {
  // List of job statuses
  repeated JobStatus job_status = 1;
}

// Job status upsert request
message JobStatusUpsertRequest {
  // Job status to upsert
  JobStatus job_status = 1;
}

// Job status upsert response
message JobStatusUpsertResponse {
  // Status of the upsert
  string status = 1;
  // Status code
  StatusCode code = 2;
}
