syntax = "proto3";

// buf:lint:ignore DIRECTORY_SAME_PACKAGE
// buf:lint:ignore PACKAGE_VERSION_SUFFIX
package loyalty_serivce;

import "common/common.proto";
import "common/service_client_config.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "loyalty_service/loyalty_program.proto";

option java_generic_services = true;
option java_multiple_files = true;
// buf:lint:ignore PACKAGE_SAME_JAVA_PACKAGE
option java_package = "com.doordash.rpc.loyalty.doordash";

// Loyalty Program management service exposed for internal configuration
service LoyaltyProgramService {
  option (service_client.client_config).circuit_breaker_config.failure_rate_threshold = 1.0;
  option (service_client.client_config).circuit_breaker_config.minimum_request_threshold = 50;

  // Create a loyalty program
  rpc CreateLoyaltyProgram(CreateLoyaltyProgramRequest) returns (CreateLoyaltyProgramResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 10000;
    option (service_client.client_method_config).retry_config.max_attempts = 1;
  }

  // Update a loyalty program
  rpc UpdateLoyaltyProgram(UpdateLoyaltyProgramRequest) returns (UpdateLoyaltyProgramResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 10000;
    option (service_client.client_method_config).retry_config.max_attempts = 1;
  }

  // Bulk create a loyalty program
  rpc BulkCreateLoyaltyPrograms(BulkCreateLoyaltyProgramsRequest) returns (BulkCreateLoyaltyProgramsResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 30000;
    option (service_client.client_method_config).retry_config.max_attempts = 1;
  }

  // Bulk update a loyalty program
  rpc BulkUpdateLoyaltyPrograms(BulkUpdateLoyaltyProgramsRequest) returns (BulkUpdateLoyaltyProgramsResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 30000;
    option (service_client.client_method_config).retry_config.max_attempts = 1;
  }

  // Fetch a loyalty program by its program_id
  rpc GetLoyaltyProgramById(GetLoyaltyProgramByIdRequest) returns (GetLoyaltyProgramByIdResponse) {
    option (service_client.client_method_config).retry_config.max_attempts = 2;
    option (service_client.client_method_config).retry_config.do_retry_grpc_code = 13; // retry on internal error status code (e.g., job was cancelled)

    option (service_client.client_method_config).response_attempt_timeout_millis = 50;
    option (service_client.client_method_config).circuit_breaker_config.failure_rate_threshold = 0.3;
    option (service_client.client_method_config).circuit_breaker_config.counter_sliding_window_millis = 60000;
    option (service_client.client_method_config).circuit_breaker_config.circuit_open_window_millis = 20000;
  }

  // Fetch a list of loyalty programs
  rpc GetLoyaltyPrograms(GetLoyaltyProgramsRequest) returns (GetLoyaltyProgramsResponse) {
    option (service_client.client_method_config).retry_config.max_attempts = 2;
    option (service_client.client_method_config).retry_config.do_retry_grpc_code = 13; // retry on internal error status code (e.g., job was cancelled)

    option (service_client.client_method_config).response_attempt_timeout_millis = 200;
    option (service_client.client_method_config).circuit_breaker_config.failure_rate_threshold = 0.3;
    option (service_client.client_method_config).circuit_breaker_config.counter_sliding_window_millis = 60000;
    option (service_client.client_method_config).circuit_breaker_config.circuit_open_window_millis = 20000;
  }

  // Clear loyalty program user points
  rpc ClearLoyaltyProgramUserPoints(ClearLoyaltyProgramUserPointsRequest) returns (ClearLoyaltyProgramUserPointsResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 10000;
    option (service_client.client_method_config).retry_config.max_attempts = 1;
  }

  // Create loyalty program rule entities
  rpc CreateProgramRuleEntities(CreateProgramRuleEntitiesRequest) returns (CreateProgramRuleEntitiesResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 10000;
    option (service_client.client_method_config).retry_config.max_attempts = 1;
  }
}

// Request for creating loyalty program
message CreateLoyaltyProgramRequest {
  // loyalty program
  LoyaltyProgram loyalty_program = 1;
}

// Response from creating loyalty program
message CreateLoyaltyProgramResponse {
  // loyalty program
  LoyaltyProgram loyalty_program = 1;
}

// Request for updating loyalty program
message UpdateLoyaltyProgramRequest {
  // loyalty program
  LoyaltyProgram loyalty_program = 1;
}

// Response from updating loyalty program
message UpdateLoyaltyProgramResponse {
  // loyalty program
  LoyaltyProgram loyalty_program = 1;
}

// Request for bulk creating loyalty programs
message BulkCreateLoyaltyProgramsRequest {
  // Request Id
  google.protobuf.StringValue request_id = 1;
  // Request body for bulk create in JSON
  google.protobuf.StringValue body = 2;
  // Source of the bulk create request, used for request body validation and mapping
  Source source = 3;
}

// Response from bulk creating loyalty programs
message BulkCreateLoyaltyProgramsResponse {
  // Request Id
  google.protobuf.StringValue request_id = 1;
  // List of business Ids successfully created loyalty_program
  repeated google.protobuf.StringValue success_list = 2;
  // List of business Ids fail to create loyalty_program
  repeated google.protobuf.StringValue failure_list = 3;
}

// Request for updating loyalty program
message BulkUpdateLoyaltyProgramsRequest {
  // Request Id
  google.protobuf.StringValue request_id = 1;
  // Request body for bulk update in JSON
  google.protobuf.StringValue body = 2;
  // Source of the bulk update request, used for request body validation and mapping
  Source source = 3;
}

// Response from updating loyalty program
message BulkUpdateLoyaltyProgramsResponse {
  // Request Id
  google.protobuf.StringValue request_id = 1;
  // List of business Ids successfully updated loyalty_program
  repeated google.protobuf.StringValue success_list = 2;
  // List of business Ids fail to update loyalty_program
  repeated google.protobuf.StringValue failure_list = 3;
}

// Request to fetch a loyalty program by its program_id
message GetLoyaltyProgramByIdRequest {
  // the program_id of the loyalty program
  google.protobuf.StringValue id = 1;
}

// response from fetching a loyalty program by its program_id id
message GetLoyaltyProgramByIdResponse {
  // loyalty program
  LoyaltyProgram loyalty_program = 1;
}

// Request to fetch a list of loyalty programs
message GetLoyaltyProgramsRequest {
  // list of queryable parameters
  repeated QueryFacet query_facets = 1;
}

// Response to fetch a list of loyalty programs
message GetLoyaltyProgramsResponse {
  // list of loyalty programs
  repeated LoyaltyProgram loyalty_programs = 1;
}

// Request for clear loyalty program user points
message ClearLoyaltyProgramUserPointsRequest {
  // the program_id of the loyalty program
  google.protobuf.StringValue id = 1;
}

// Response for clear loyalty program user points
message ClearLoyaltyProgramUserPointsResponse {
  // the program_id of the loyalty program
  google.protobuf.StringValue id = 1;
}

// Request for creating loyalty program rule entities
message CreateProgramRuleEntitiesRequest {
  // list of program rule entities
  repeated ProgramRuleEntity program_rule_entities = 1;
}

// Response from creating loyalty program rule entities
message CreateProgramRuleEntitiesResponse {
  // list of program rule entities
  repeated ProgramRuleEntity program_rule_entities = 1;
}

// Represents a queryable parameter on a loyalty program
message QueryFacet {
  // The type of parameter that we are querying for
  QueryFacetType type = 99;
  // A query facet is one of many different queryable parameters
  enum QueryFacetType {
    // unspecified
    QUERY_FACET_TYPE_UNSPECIFIED = 0;
    // fetch a limited number of programs
    QUERY_FACET_TYPE_LIMIT = 1;
    // business_id
    QUERY_FACET_TYPE_BUSINESS = 2;
    // store_ids
    QUERY_FACET_TYPE_STORES = 3;
  }

  // value associated with the facet
  oneof value {
    // QUERY_FACE_TYPE_LIMIT <=> number of programs to fetch
    google.protobuf.Int32Value number_of_programs = 1;
    // QUERY_FACET_TYPE_BUSINESS <=> business id
    google.protobuf.StringValue business_id = 2;
    // QUERY_FACET_TYPE_STORES <=> store ids
    StoreIds store_ids = 3;
  }
}

// Define a separate message for the list of store ids
message StoreIds {
  // store ids
  repeated google.protobuf.StringValue ids = 1;
}

// Source of the bulk request
enum Source {
  // unspecified
  SOURCE_UNSPECIFIED = 0;
  // source is dashpass
  SOURCE_DASHPASS = 1;
}
