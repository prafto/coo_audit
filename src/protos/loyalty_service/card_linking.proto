syntax = "proto3";

// buf:lint:ignore DIRECTORY_SAME_PACKAGE
// buf:lint:ignore PACKAGE_VERSION_SUFFIX
package loyalty_serivce;

import "doordash.api/annotations.proto";
import "google/api/annotations.proto";
import "google/protobuf/wrappers.proto";

option java_generic_services = true;
option java_multiple_files = true;
// buf:lint:ignore PACKAGE_SAME_JAVA_PACKAGE
option java_package = "com.doordash.rpc.loyalty.card_linking";

// Service for card linking operations
service CardLinkingService {
  // Creates a business in the card linking provider
  rpc CreateCardLinkedBusiness(CreateCardLinkedBusinessRequest) returns (CreateCardLinkedBusinessResponse);

  // Creates a store in the card linking provider
  rpc CreateCardLinkedStore(CreateCardLinkedStoreRequest) returns (CreateCardLinkedStoreResponse);
}

// Consolidated request to create business & authorized business user
message CreateCardLinkedBusinessRequest {
  // business id (required)
  google.protobuf.StringValue business_id = 1;
  // authorized business personnel (required)
  BusinessUser business_user = 2;
}

// Create business response
message CreateCardLinkedBusinessResponse {
  // Success response
  message Success {
    // created business
    CardLinkedBusiness business = 1;
    // status code
    int32 status = 2;
  }

  // response contains either success or an error
  oneof result {
    // success response
    Success success = 1;
    // error response
    CardLinkingError error = 2;
  }
}

// Authorized business personnel to sign consent and have access to transactions
message BusinessUser {
  // email (required)
  google.protobuf.StringValue email = 1;
  // first name (required)
  google.protobuf.StringValue first_name = 2;
  // last name (required)
  google.protobuf.StringValue last_name = 3;
  // title (required)
  google.protobuf.StringValue title = 4;
  // whether email invite is sent and consent is automatically approved (optional, defaults to true)
  google.protobuf.BoolValue should_skip_invite = 5;
}

// Business
message CardLinkedBusiness {
  // provider account id
  google.protobuf.StringValue provider_account_id = 1;
  // name of the business
  google.protobuf.StringValue business_name = 2;
  // whether consent is enabled
  google.protobuf.BoolValue consent = 3;
  // whether the business is live
  google.protobuf.BoolValue is_live = 4;
  // whether the business user is active
  google.protobuf.BoolValue user_is_active = 5;
  // timestamp for when the business was created
  google.protobuf.StringValue created_at = 6;
  // timestamp for when the business was updated
  google.protobuf.StringValue updated_at = 7;
}

// Create store request
message CreateCardLinkedStoreRequest {
  // store id (required)
  google.protobuf.StringValue store_id = 1;
  // card brand merchant ids (required, at least one merchant id for Visa card brand)
  repeated CardBrandMerchantId card_brand_merchant_ids = 2;
  // whether store should auto-sync on creation (optional, defaults to true)
  google.protobuf.BoolValue should_auto_sync = 3;
}

// Create store response
message CreateCardLinkedStoreResponse {
  // Success response
  message Success {
    // created store
    CardLinkedStore store = 1;
    // status code
    int32 status = 2;
  }

  // response contains either success or an error
  oneof result {
    // success response
    Success success = 1;
    // error response
    CardLinkingError error = 2;
  }
}

// merchant id used by the card brands
message CardBrandMerchantId {
  // merchant id
  google.protobuf.StringValue merchant_id = 1;
  // card brand
  CardBrand card_brand = 2;
}

// card brand
enum CardBrand {
  // unspecified
  CARD_BRAND_UNSPECIFIED = 0;
  // visa
  CARD_BRAND_VISA = 1;
  // mastercard
  CARD_BRAND_MASTERCARD = 2;
  // amex
  CARD_BRAND_AMEX = 3;
}

// Store details
message CardLinkedStore {
  // provider account id
  google.protobuf.StringValue provider_account_id = 1;
  // store address
  google.protobuf.StringValue address = 2;
  // city
  google.protobuf.StringValue city = 3;
  // country code
  google.protobuf.StringValue country_code = 4;
  // postal code
  google.protobuf.StringValue post_code = 5;
  // state code
  google.protobuf.StringValue state_code = 6;
  // currency used at the store
  google.protobuf.StringValue currency = 7;
  // whether the store is live
  google.protobuf.BoolValue is_live = 8;
  // geolocation information
  Geolocation geolocation = 9;
  // card brand status
  repeated CardBrandStatus card_brand_statuses = 10;
  // timestamp when the store was created
  google.protobuf.StringValue created_at = 11;
  // timestamp when the store was last updated
  google.protobuf.StringValue updated_at = 12;

  // Geolocation details
  message Geolocation {
    // latitude
    google.protobuf.DoubleValue latitude = 1;
    // longitude
    google.protobuf.DoubleValue longitude = 2;
  }

  // Card brand status
  message CardBrandStatus {
    // card brand
    CardBrand card_brand = 1;
    // authorization status
    google.protobuf.BoolValue auth_status = 2;
    // authorization transaction ID
    google.protobuf.StringValue auth_transaction_id = 3;
    // clearing status
    google.protobuf.BoolValue clearing = 4;
    // clearing transaction ID
    google.protobuf.StringValue clearing_transaction_id = 5;
    // estimated activation date
    google.protobuf.StringValue estimated_activation_date = 6;
    // card brand status
    google.protobuf.StringValue status = 7;
  }
}

// Error for client usage
message CardLinkingError {
  // error code
  string error_code = 1;
  // error message
  string error_message = 2;
  // http_code
  int32 http_code = 3;
}
