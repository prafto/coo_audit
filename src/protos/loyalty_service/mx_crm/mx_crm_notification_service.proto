syntax = "proto3";

// buf:lint:ignore DIRECTORY_SAME_PACKAGE
// buf:lint:ignore PACKAGE_VERSION_SUFFIX
package loyalty_serivce.mx_crm;

import "google/protobuf/wrappers.proto";
import "loyalty_service/mx_crm/mx_crm_program.proto";

option java_generic_services = true;
option java_multiple_files = true;
// buf:lint:ignore PACKAGE_SAME_JAVA_PACKAGE
option java_package = "com.doordash.rpc.loyalty.mx_crm";

// Service for mx-crm notification related tasks
service MxCrmNotificationService {
  // Get mx-crm specific notification content for a consumer
  rpc GetMxCrmNotificationContent(GetMxCrmNotificationContentRequest) returns (GetMxCrmNotificationContentResponse);

  // Get mx-crm specific notification content for a batch of consumers
  rpc GetBatchMxCrmNotificationContent(GetBatchMxCrmNotificationContentRequest) returns (GetBatchMxCrmNotificationContentResponse);
}

// Request for getting mx-crm notification content
message GetMxCrmNotificationContentRequest {
  // consumer that notification will send to
  google.protobuf.StringValue consumer_id = 1;
  // CRM Program type - maps 1:1 to crm program name
  MxCrmProgramType program_type = 2;
  // experiment variant that consumer is bucketed into
  google.protobuf.StringValue experiment_variant = 3;
}

// Request for getting mx-crm notification content for batch of consumers
message GetBatchMxCrmNotificationContentRequest {
  // batch of requests
  repeated GetMxCrmNotificationContentRequest content_requests = 1;
}

// response for getting mx-crm notification content
message GetMxCrmNotificationContentResponse {
  // notification contents for a consumer
  repeated MxCrmNotificationContent notification_contents = 1;
  // program_id of the notification program (manually generated)
  google.protobuf.StringValue notification_program_id = 2;
  // message type of the notification (recommendations, store offers, etc.)
  MessageType message_type = 3;
  // name of the mx crm program
  google.protobuf.StringValue mx_crm_program_name = 4;
}

// response for batch mx-crm notification content fetch
message GetBatchMxCrmNotificationContentResponse {
  // map of consumer to notification content response
  map<string, GetMxCrmNotificationContentResponse> response_by_consumer_id = 1;
}

// content for an mx-crm notification
message MxCrmNotificationContent {
  // push, hub, or email
  ChannelType channel = 1;
  // template configuration id
  google.protobuf.StringValue template_configuration_id = 2;
  // notification metadata
  NotificationMetadata metadata = 3;
}

// metadata of notification. For a given content request, a subset of these will be populated.
message NotificationMetadata {
  // store id to send notification for
  google.protobuf.StringValue store_id = 1;
  // name of merchant to send notification for
  google.protobuf.StringValue merchant_name = 2;
  // menu item name to be displayed in notification
  google.protobuf.StringValue menu_item_name = 3;
  // announcement id that is tied to the notification
  google.protobuf.StringValue announcement_id = 4;
  // header/thumbnail image url of merchant
  google.protobuf.StringValue merchant_image_url = 5;
}

// Type of channel for mx-crm notifications
enum ChannelType {
  // unspecified channel
  CHANNEL_TYPE_UNSPECIFIED = 0;
  // channel type is push
  CHANNEL_TYPE_PUSH = 1;
  // channel type is notification hub
  CHANNEL_TYPE_HUB = 2;
}

// mx-crm notification message types
enum MessageType {
  // unspecified message type
  MESSAGE_TYPE_UNSPECIFIED = 0;
  // recommendations
  MESSAGE_TYPE_RECOMMENDATIONS = 1;
  // store offers
  MESSAGE_TYPE_STORE_OFFERS = 2;
}
