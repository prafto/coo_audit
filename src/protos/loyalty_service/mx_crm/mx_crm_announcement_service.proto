syntax = "proto3";

// buf:lint:ignore DIRECTORY_SAME_PACKAGE
// buf:lint:ignore PACKAGE_VERSION_SUFFIX
package loyalty_serivce.mx_crm;

import "common/common.proto";
import "common/date.proto";
import "common/service_client_config.proto";
import "google/protobuf/wrappers.proto";
import "loyalty_service/mx_crm/mx_crm_announcement.proto";

option java_generic_services = true;
option java_multiple_files = true;
// buf:lint:ignore PACKAGE_SAME_JAVA_PACKAGE
option java_package = "com.doordash.rpc.loyalty.mx_crm";

// Mx CRM enrollment management service
service MxCrmAnnouncementService {
  option (service_client.client_config).circuit_breaker_config.failure_rate_threshold = 1.0;
  option (service_client.client_config).circuit_breaker_config.minimum_request_threshold = 50;

  // Create a Mx CRM announcement
  rpc CreateMxCrmAnnouncement(CreateMxCrmAnnouncementRequest) returns (CreateMxCrmAnnouncementResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 10000;
    option (service_client.client_method_config).retry_config.max_attempts = 1;
  }

  // Update the Mx CRM announcement
  rpc UpdateMxCrmAnnouncement(UpdateMxCrmAnnouncementRequest) returns (UpdateMxCrmAnnouncementResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 10000;
    option (service_client.client_method_config).retry_config.max_attempts = 1;
  }

  // Send a Mx CRM announcement ASAP
  rpc SendMxCrmAnnouncementAsap(SendMxCrmAnnouncementAsapRequest) returns (SendMxCrmAnnouncementAsapResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 10000;
    option (service_client.client_method_config).retry_config.max_attempts = 1;
  }

  // Send a Mx CRM announcement at a future time
  rpc ScheduleMxCrmAnnouncement(ScheduleMxCrmAnnouncementRequest) returns (ScheduleMxCrmAnnouncementResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 10000;
    option (service_client.client_method_config).retry_config.max_attempts = 1;
  }

  // Get a list of announcements by store id
  rpc GetMxCrmAnnouncementsByStoreId(GetMxCrmAnnouncementsByStoreIdRequest) returns (GetMxCrmAnnouncementsByStoreIdResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 3000;
    option (service_client.client_method_config).retry_config.max_attempts = 2;
  }
  // Get a list of announcements by queryable parameter on announcements
  rpc GetMxCrmAnnouncements(GetMxCrmAnnouncementsRequest) returns (GetMxCrmAnnouncementsResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 3000;
    option (service_client.client_method_config).retry_config.max_attempts = 2;
  }

  // Update a Mx CRM announcement by queryable parameter.
  rpc UpdateMxCrmAnnouncementByQueryFacets(UpdateMxCrmAnnouncementByQueryFacetsRequest) returns (UpdateMxCrmAnnouncementByQueryFacetsResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 10000;
    option (service_client.client_method_config).retry_config.max_attempts = 1;
  }
}

// Request for creating Mx CRM announcement
message CreateMxCrmAnnouncementRequest {
  // Mx CRM announcement
  MxCrmAnnouncement announcement = 1;
}

// Response for creating Mx CRM announcement
message CreateMxCrmAnnouncementResponse {
  // Mx CRM announcement
  MxCrmAnnouncement announcement = 1;
}

// Request for updating Mx CRM announcement
message UpdateMxCrmAnnouncementRequest {
  // Mx CRM announcement
  MxCrmAnnouncement announcement = 1;
  // If this flag is true, the workflow will unschedule the scheduled announcement if any
  google.protobuf.BoolValue should_unschedule = 2;
}

// Response for updating Mx CRM announcement
message UpdateMxCrmAnnouncementResponse {
  // Mx CRM announcement
  MxCrmAnnouncement announcement = 1;
}

// Request for sending Mx CRM announcement ASAP
message SendMxCrmAnnouncementAsapRequest {
  // Mx CRM announcement
  MxCrmAnnouncement announcement = 1;
}

// Response for sending Mx CRM announcement ASAP
message SendMxCrmAnnouncementAsapResponse {
  // Mx CRM announcement
  MxCrmAnnouncement announcement = 1;
}

// Request for sending Mx CRM announcement at a future time
message ScheduleMxCrmAnnouncementRequest {
  // Mx CRM announcement
  MxCrmAnnouncement announcement = 1;
}

// Response for sending Mx CRM announcement at a future time
message ScheduleMxCrmAnnouncementResponse {
  // Mx CRM announcement
  MxCrmAnnouncement announcement = 1;
}

// Request to get Mx CRM announcements by store id
message GetMxCrmAnnouncementsByStoreIdRequest {
  // Store id
  google.protobuf.StringValue store_id = 1;
  // Optional primary announcement id, which is used to sort a list of announcements.
  google.protobuf.StringValue primary_announcement_id = 2;
  // Optional, if we want to fetch available announcement items across all stores belonging to the business of requested store_id. Should be false for cx-facing UI rendering flows.
  google.protobuf.BoolValue fetch_items_across_all_stores = 3;
}

// Response to get Mx CRM announcements by store id
message GetMxCrmAnnouncementsByStoreIdResponse {
  // A list of announcements under the store id.
  repeated MxCrmAnnouncement announcements = 1;
}

// Request to get Mx CRM announcements
message GetMxCrmAnnouncementsRequest {
  // A list of queryable parameters
  repeated AnnouncementQueryFacet query_facets = 1;
}

// Response to get Mx CRM announcements
message GetMxCrmAnnouncementsResponse {
  // A list of announcements
  repeated MxCrmAnnouncement announcements = 1;
}

// Request to update Mx CRM announcement by query facets
// UPDATE mx_announcement
// SET {query_facets}
// WHERE announcement_id = {announcement_id};
message UpdateMxCrmAnnouncementByQueryFacetsRequest {
  // Announcement id, which is used to identify the announcement to update.
  google.protobuf.StringValue announcement_id = 1;
  // Business id, which is used to verify the announcement belongs to the business.
  google.protobuf.StringValue business_id = 2;
  // A list of queryable parameters.
  // Only certain types of queryable parameters are allowed in the update query, for example, status.
  repeated AnnouncementQueryFacet query_facets = 3;
  // If this flag is true, the workflow will unschedule the scheduled announcement if any
  google.protobuf.BoolValue should_unschedule = 4;
}

// Response to update Mx CRM announcement by query facets
message UpdateMxCrmAnnouncementByQueryFacetsResponse {
  // success or not
  bool success = 1;
}

// Represents a queryable field on an announcement
message AnnouncementQueryFacet {
  // The type of field to query for
  AnnouncementQueryFacetType type = 99;
  // A query facet is one of many different queryable fields
  enum AnnouncementQueryFacetType {
    // unspecified
    ANNOUNCEMENT_QUERY_FACET_TYPE_UNSPECIFIED = 0;
    // announcement_id
    ANNOUNCEMENT_QUERY_FACET_TYPE_ANNOUNCEMENT = 1;
    // business_id
    ANNOUNCEMENT_QUERY_FACET_TYPE_BUSINESS = 2;
    // status list
    ANNOUNCEMENT_QUERY_FACET_TYPE_STATUS_LIST = 3;
    // status
    ANNOUNCEMENT_QUERY_FACET_TYPE_STATUS = 4;
    // updated_by_user_id
    ANNOUNCEMENT_QUERY_FACET_TYPE_UPDATED_BY_USER_ID = 5;
    // scheduled_event_id
    ANNOUNCEMENT_QUERY_FACET_TYPE_SCHEDULED_EVENT_ID = 6;
    // date range
    ANNOUNCEMENT_QUERY_FACET_TYPE_DATE_RANGE = 7;
  }

  // value associated with the facet
  oneof value {
    // ANNOUNCEMENT_QUERY_FACET_TYPE_ANNOUNCEMENT <=> announcement id
    google.protobuf.StringValue announcement_id = 1;
    // ANNOUNCEMENT_QUERY_FACET_TYPE_BUSINESS <=> business id
    google.protobuf.StringValue business_id = 2;
    // ANNOUNCEMENT_QUERY_FACET_TYPE_STATUS_LIST <=> status list
    AnnouncementStatusList status_list = 3;
    // ANNOUNCEMENT_QUERY_FACET_TYPE_STATUS <=> status
    AnnouncementStatus status = 4;
    // ANNOUNCEMENT_QUERY_FACET_TYPE_UPDATED_BY_USER_ID <=> updated_by_user_id
    google.protobuf.StringValue updated_by_user_id = 5;
    // ANNOUNCEMENT_QUERY_FACET_TYPE_SCHEDULED_EVENT_ID <=> scheduled_event_id
    google.protobuf.StringValue scheduled_event_id = 6;
    // ANNOUNCEMENT_QUERY_FACET_TYPE_DATE_RANGE <=> date range
    date.DateRange date_range = 7;
  }

  // List of announcement statuses
  message AnnouncementStatusList {
    // List of announcement statuses
    repeated AnnouncementStatus status_list = 1;
  }
}
