syntax = "proto3";

// buf:lint:ignore PACKAGE_VERSION_SUFFIX
package ddfw;

import "consumer_service/consumer_address_link.proto";
import "doordash.api/annotations.proto";
import "google/api/annotations.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.ddfw.pg";

// buf:lint:ignore SERVICE_SUFFIX
// Service for getting address deep link
service Address {
  option (doordash.api.service) = {
    url: "ddfb-address-get-address-deep-link.service.prod.ddsd"
    port: 50051
    name_spaces: ["ddfb"]
    owner: {
      id: "ddfb-growth"
      name: "DoorDash-for-Business-Growth"
      slack_channel: "#eng-work"
      email_alias: "eng-work@doordash.com"
    }
    target_products: [CX]
  };

  // endpoint to fetch the address data using the consumer address link ID
  rpc GetAddressDeepLink(GetAddressDeepLinkRequest) returns (GetAddressDeepLinkResponse) {
    option (google.api.http) = {
      post: "/ddfb/v1/address",
      body: '*'
    };
    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: DEV
      authorization: [
        CX_USER,
        CX_GUEST
      ]
      target_products: [CX]
      slo_config: {
        critical_alerts_enabled: true
        critical_5m_burn_threshold: 3000
        critical_5m_burn_sustain_seconds: 300
        p99_latency: 5
      }
    };
  }
}

// Request to get address deep link data
message GetAddressDeepLinkRequest {
  // consumer address link ID
  uint32 address_id = 1;
}

// Address Deep Link Response which currently is just the Conusmer Address Link data
message GetAddressDeepLinkResponse {
  // Consumer Address Link data
  doordash_consumer_service.ConsumerAddressLink consumer_address_link = 1;
}
