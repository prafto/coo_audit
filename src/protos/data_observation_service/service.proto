syntax = "proto3";

package data_observation_service.v1;

import "common/service_client_config.proto";
import "data_observation_service/metric_checks.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";

option go_package = "github.com/doordash/services-protobuf/generated/data_observation_service";
option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.data_observation_service.grpc";

// Enum for response status code
enum StatusCode {
  // Success in response
  STATUS_CODE_SUCCESS_UNSPECIFIED = 0;
  // Failure in response
  STATUS_CODE_FAILURE = 1;
}

// The data observation service definition
service DataObservationService {
  // Returns anomalies for a metric onboarded to Watchtower
  rpc ListWTMetricAnomalies(ListWTMetricAnomaliesRequest) returns (ListWTMetricAnomaliesResponse) {
    // Set time out for the service to 10 seconds
    option (service_client.client_method_config).response_attempt_timeout_millis = 10000;
  }
}

// Request to get Watchtower anomaly details for a metric
message ListWTMetricAnomaliesRequest {
  // Start date of range to search for anomaly details
  google.protobuf.StringValue start_date = 1;
  // End date of range to search for anomaly details
  google.protobuf.StringValue end_date = 2;
  // Name of the metric
  google.protobuf.StringValue metric_name = 3;
  // Domain of the metric
  google.protobuf.StringValue metric_domain = 4;
  // Group of the metric
  google.protobuf.StringValue metric_group = 5;
  // Watchtower use case of the metric
  google.protobuf.StringValue metric_use_case = 6;
}

// Response for WatchTower anomaly details for a metric
message ListWTMetricAnomaliesResponse {
  // Anomaly details for a metric
  message Anomaly {
    // Date of anomaly
    google.protobuf.StringValue date = 1;
    // ORCA check
    OrcaCheck orca = 2;
    // Z-score check
    ZscoreCheck zscore = 3;
    // Variance check
    VarianceCheck variance = 4;
    // Completeness check
    CompletenessCheck completeness = 5;
    // Forecast check
    ForecastCheck forecast = 6;
    // Comment for anomaly
    google.protobuf.StringValue comment = 7;
    // Flag to indicate if anomaly is overridden
    google.protobuf.BoolValue is_overridden = 8;
  }

  // Status of the response
  StatusCode status = 1;
  // Anomalies for the metric
  repeated Anomaly anomalies = 2;
  // Error message in case of failure
  google.protobuf.StringValue error = 3;
}
