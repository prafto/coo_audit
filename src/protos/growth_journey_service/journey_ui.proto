syntax = "proto3";

package growth_journey_service.v1;

import "common/common.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "growth_journey_service/journey_common.proto";
import "growth_journey_service/journey_ecosystem.proto";

option go_package = "github.com/doordash/services-protobuf/generated/growth_journey_service";
option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.growth_journey_service";

// JourneyLifeCycleStage
enum JourneyLifeCycleStage {
  // unspecified is required in proto3
  JOURNEY_LIFE_CYCLE_STAGE_UNSPECIFIED = 0;
  // draft stage
  JOURNEY_LIFE_CYCLE_STAGE_DRAFT = 1;
  // testing stage
  JOURNEY_LIFE_CYCLE_STAGE_TESTING = 2;
  // under review stage
  JOURNEY_LIFE_CYCLE_STAGE_UNDER_REVIEW = 3;
  // approved stage
  JOURNEY_LIFE_CYCLE_STAGE_APPROVED = 4;
  // live stage
  JOURNEY_LIFE_CYCLE_STAGE_LIVE = 5;
  //draining stage
  JOURNEY_LIFE_CYCLE_STAGE_DRAINING = 6;
}

// journey metadata
message JourneyMetadata {
  // journey uuid
  google.protobuf.StringValue journey_uuid = 1;
  // template version, default version is 1
  google.protobuf.Int32Value version = 2;
  // user friendly name
  google.protobuf.StringValue display_name = 3;
  // template description
  google.protobuf.StringValue description = 4;
  // entity type
  JourneyEntityType entity_type = 5;
  // template life cycle status
  JourneyLifeCycleStage lifecycle_stage = 6;
  // google groups separated by commas
  google.protobuf.StringValue owner_groups = 7;
  // maximum journey duration allowed (in minutes)
  google.protobuf.Duration user_journey_duration = 8;
  // time that the template was created
  google.protobuf.Timestamp created_at_utc = 9;
  // who created the template
  google.protobuf.StringValue created_by = 10;
  // time that the template was updated
  google.protobuf.Timestamp updated_at_utc = 11;
  // who did last update
  google.protobuf.StringValue updated_by = 12;
  // how many times can user go through this journey in its lifetime
  google.protobuf.Int32Value max_entry_count = 13;
  // how many times can contacts be in this journey at once
  google.protobuf.Int32Value max_simultaneous_entry_count = 14;
  // experience
  common.Experience experience = 15;
  // whether the workflow is deleted
  google.protobuf.BoolValue is_deleted = 16;
  // who approved the workflow
  google.protobuf.StringValue approved_by = 17;
  // time that the template was approved
  google.protobuf.Timestamp approved_at_utc = 18;
  // whether the workflow launched or not
  google.protobuf.BoolValue launched = 19;
  // control the journey start, end date and stage after the journey is ended.
  JourneySchedule journey_schedule = 20;
  // whether the workflow is batch level
  google.protobuf.BoolValue is_batch = 21;
}

// define the journey scheduled start date and end date
message JourneySchedule {
  // the journey scheduled start date, with hourly granularity
  google.protobuf.Timestamp start_date_hour_utc = 1;
  // the journey scheduled end date, with hourly granularity
  google.protobuf.Timestamp end_date_hour_utc = 2;
  // at the end date, to which stage the journey will be switched
  JourneyLifeCycleStage end_lifecycle_stage = 3;
  // the timezone that show the date on UI
  google.protobuf.StringValue timezone = 4;
}

// Expectation Expression
message ExpectationExpression {
  // name of the property definition
  google.protobuf.StringValue property_definition_name = 1;
  // comparable operator
  google.protobuf.StringValue operator = 2;
  // expected value
  google.protobuf.StringValue expected_value = 3;
  // source of the dynamic expected value
  ParamValueProvider expected_value_provider = 4;
}

// Config parameter
message ConfigParam {
  // name of the config parameter
  google.protobuf.StringValue config_name = 1;
  // value of the config parameter
  google.protobuf.StringValue config_value = 2;
  // source of the config parameter
  ParamValueProvider config_value_provider = 3;
  // value_type of config parameter, UI only needs to provide value_type when
  // cannot infer it from ConfigParamDefinition or PropertyDefinition
  google.protobuf.StringValue value_type = 4;
}

// ValueType
message ValueType {
  // name of the operator
  google.protobuf.StringValue name = 1;
  // display name of the operator
  google.protobuf.StringValue display_name = 2;
  // description of the operator
  google.protobuf.StringValue description = 3;
  // category of the operator primitive/collection/complex
  google.protobuf.StringValue category = 4;
  // a list of supported operators for this value_type
  repeated Operator supported_operators = 5;
}

// parameter value provider type
enum ParamValueProviderType {
  // unspecified is required in proto3
  PARAM_VALUE_PROVIDER_TYPE_UNSPECIFIED = 0;
  // event attribute
  PARAM_VALUE_PROVIDER_TYPE_EVENT_ATTRIBUTE = 1;
  // rpc attribute
  PARAM_VALUE_PROVIDER_TYPE_RPC_ATTRIBUTE = 2;
  // api trigger attribute
  PARAM_VALUE_PROVIDER_TYPE_API_TRIGGER_ATTRIBUTE = 3;
}

// parameter value provider
message ParamValueProvider {
  // config param key source type
  ParamValueProviderType provider_type = 1;
  // name of the attribute definition
  google.protobuf.StringValue attribute_definition_name = 2;
  // name of the property definition
  google.protobuf.StringValue property_name = 3;
  // user provided config via UI
  repeated ConfigParam config_params = 4;
}

// Filter
message Filter {
  // name of the attribute definition(rpc)
  google.protobuf.StringValue attribute_definition_name = 1;
  // user provided config via UI
  repeated ConfigParam config_params = 2;
  // expected expression for condition evaluation
  repeated ExpectationExpression expectation_expressions = 3;
}

// expectations node ID pair
message ExpectationsNodeIDPair {
  // expected expression for condition evaluation, true if not provided
  repeated ExpectationExpression expectation_expressions = 1;
  // the next node uuid
  google.protobuf.StringValue next_node_uuid = 2;
}

// Event Trigger
message EventTrigger {
  // node uuid
  google.protobuf.StringValue uuid = 1;
  // title of the node
  google.protobuf.StringValue title = 2;
  // note of the node
  google.protobuf.StringValue note = 3;
  // whether the node is deleted
  google.protobuf.BoolValue is_deleted = 4;
  // name of the attribute definition(event)
  google.protobuf.StringValue attribute_definition_name = 5;
  // choices
  repeated ExpectationsNodeIDPair choices = 6;
  // user provided config via UI
  repeated ConfigParam config_params = 7;
  // additional filter such as filter out fraud users
  repeated Filter filters = 8;
  // trigger only active after the start date time, the accurate level is minute
  google.protobuf.Timestamp start_datetime_minute_utc = 9;
  // trigger will not be triggered after the end date time, the accurate level is minute
  google.protobuf.Timestamp end_datetime_minute_utc = 10;
}

// EP Trigger
message EPTrigger {
  // node uuid
  google.protobuf.StringValue uuid = 1;
  // title of the node
  google.protobuf.StringValue title = 2;
  // note of the node
  google.protobuf.StringValue note = 3;
  // whether the node is deleted
  google.protobuf.BoolValue is_deleted = 4;
  // uuid of the next node
  google.protobuf.StringValue next_node_uuid = 5;
  // ep program name
  google.protobuf.StringValue ep_program_name = 6;
  // expected expression for condition evaluation
  repeated ExpectationExpression expectation_expressions = 7;
  // additional filter such as filter out fraud users
  repeated Filter filters = 8;
  // trigger only active after the start date time, the accurate level is minute
  google.protobuf.Timestamp start_datetime_minute_utc = 9;
  // trigger will not be triggered after the end date time, the accurate level is minute
  google.protobuf.Timestamp end_datetime_minute_utc = 10;
}

// API Trigger payload definition
message APITriggerPayloadDefinition {
  // name of the field
  google.protobuf.StringValue field_name = 1;
  // value type of the field
  google.protobuf.StringValue value_type = 2;
  // description of the config parameter
  google.protobuf.StringValue description = 3;
}

// API Trigger
message APITrigger {
  // node uuid
  google.protobuf.StringValue uuid = 1;
  // title of the node
  google.protobuf.StringValue title = 2;
  // note of the node
  google.protobuf.StringValue note = 3;
  // whether the node is deleted
  google.protobuf.BoolValue is_deleted = 4;
  // choices
  repeated ExpectationsNodeIDPair choices = 5;
  // define API payload schema
  repeated APITriggerPayloadDefinition api_trigger_payload_definitions = 6;
}

// Action node
message ActionNode {
  // node uuid
  google.protobuf.StringValue uuid = 1;
  // title of the node
  google.protobuf.StringValue title = 2;
  // note of the node
  google.protobuf.StringValue note = 3;
  // whether the node is deleted
  google.protobuf.BoolValue is_deleted = 4;
  // name of the action definition
  google.protobuf.StringValue action_definition_name = 5;
  // user provided config via UI
  repeated ConfigParam config_params = 6;
  // uuid of the next node
  google.protobuf.StringValue next_node_uuid = 7;
  // whether the journey will continue on action failure
  google.protobuf.BoolValue continue_on_fail = 8;
}

// Boolean split node
message BooleanSplitNode {
  // node uuid
  google.protobuf.StringValue uuid = 1;
  // title of the node
  google.protobuf.StringValue title = 2;
  // note of the node
  google.protobuf.StringValue note = 3;
  // whether the node is deleted
  google.protobuf.BoolValue is_deleted = 4;
  // name of the attribute definition(rpc)
  google.protobuf.StringValue attribute_definition_name = 5;
  // user provided config via UI
  repeated ConfigParam config_params = 6;
  // expected expression for condition evaluation, the final result is logic AND of all expectation expressions
  repeated ExpectationExpression expectation_expressions = 7;
  // next node uuid when evaluate as true
  google.protobuf.StringValue true_next_node_uuid = 8;
  // next node uuid when evaluate as false
  google.protobuf.StringValue false_next_node_uuid = 9;
  // properties exported as context parameters
  repeated PropertyDefinition exported_properties = 10;
}

// Value NodeID pair
message ValueNodeIDPair {
  // value of a property
  google.protobuf.StringValue value = 1;
  // the next node uuid
  google.protobuf.StringValue next_node_uuid = 2;
}

// DV node
message DVNode {
  // node uuid
  google.protobuf.StringValue uuid = 1;
  // title of the node
  google.protobuf.StringValue title = 2;
  // note of the node
  google.protobuf.StringValue note = 3;
  // whether the node is deleted
  google.protobuf.BoolValue is_deleted = 4;
  // user provided config via UI
  repeated ConfigParam config_params = 7;
  // choices
  repeated ValueNodeIDPair choices = 8;
  // default next node uuid when no value is matched
  google.protobuf.StringValue default_next_node_uuid = 9;
  // name of the DV
  google.protobuf.StringValue dv_name = 10;
}

// Wait On Event Node
message WaitOnEventNode {
  // node uuid
  google.protobuf.StringValue uuid = 1;
  // title of the node
  google.protobuf.StringValue title = 2;
  // note of the node
  google.protobuf.StringValue note = 3;
  // whether the node is deleted
  google.protobuf.BoolValue is_deleted = 4;
  // name of the attribute definition(event)
  google.protobuf.StringValue attribute_definition_name = 5;
  // choices
  repeated ExpectationsNodeIDPair choices = 6;
  // user provided config via UI
  repeated ConfigParam config_params = 7;
  // timer config
  oneof timer_config {
    // wait until end datetime, UI needs to set the value type to DATETIME
    ConfigParam datetime_config = 8;
    // wait for duration, UI needs to set the value type to DURATION
    ConfigParam duration_config = 9;
  }
  // next node uuid when timeout
  google.protobuf.StringValue timeout_next_node_uuid = 10;
  // properties exported as context parameters
  repeated PropertyDefinition exported_properties = 11;
}

// Wait until node
message WaitUntilNode {
  // node uuid
  google.protobuf.StringValue uuid = 1;
  // title of the node
  google.protobuf.StringValue title = 2;
  // note of the node
  google.protobuf.StringValue note = 3;
  // whether the node is deleted
  google.protobuf.BoolValue is_deleted = 4;
  // next node uuid when timeout
  google.protobuf.StringValue next_node_uuid = 5;
  // timer config
  oneof timer_config {
    // wait until end datetime, UI needs to set the value type to DATETIME
    ConfigParam datetime_config = 6;
    // wait for duration, UI needs to set the value type to DURATION
    ConfigParam duration_config = 7;
  }
}

// user entry count on a node
message UserEntryCountOnNode {
  // node uuid
  google.protobuf.StringValue node_uuid = 1;
  // user entry count
  google.protobuf.Int32Value count = 2;
  // indicate whether the count is test entry count
  google.protobuf.BoolValue is_test = 3;
  // indicate whether the count is terminated user entry count
  google.protobuf.BoolValue is_terminated = 4;
}

// JourneyWorkflowGraph
message JourneyWorkflowGraph {
  // UI data for render the journey template graph
  google.protobuf.StringValue ui_data = 1;
  // action nodes
  repeated ActionNode action_nodes = 2;
  // boolean split nodes
  repeated BooleanSplitNode boolean_split_nodes = 3;
  // DV nodes
  repeated DVNode dv_nodes = 4;
  // Wait on event nodes
  repeated WaitOnEventNode wait_on_event_nodes = 5;
  // Wait until nodes
  repeated WaitUntilNode wait_until_nodes = 6;
  // one of the trigger source
  oneof trigger_source {
    // trigger a journey by an event
    EventTrigger event_trigger = 7;
    // trigger a journey by ep program
    EPTrigger ep_trigger = 8;
    // trigger a journey through an api
    APITrigger api_trigger = 9;
  }
}
