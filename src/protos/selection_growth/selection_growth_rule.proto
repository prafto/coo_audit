syntax = "proto3";

// buf:lint:ignore DIRECTORY_SAME_PACKAGE
package selection_growth_service.web.v1;

import "common/service_client_config.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.selectiongrowthgrpc";

// ISO Rule Service
service ISORuleService {
  option (service_client.client_config).retry_config.max_attempts = 3;

  // grpc code 8 (RESOURCE_EXHAUSTED) is among the codes that are not retriable by default.
  option (service_client.client_config).retry_config.do_retry_grpc_code = 8;

  // As an example, let's override this default of 10. Now, the circuit breaker will
  // only start detecting failures after at least 20 requests have been made.
  option (service_client.client_config).circuit_breaker_config.minimum_request_threshold = 20;

  // Insert a single rule
  rpc InsertRule(InsertRuleRequest) returns (InsertRuleResponse);

  // Update an existing rule
  rpc UpdateRule(UpdateRuleRequest) returns (UpdateRuleResponse);

  // Batch insert or update rules
  rpc BatchUpsertRules(BatchUpsertRulesRequest) returns (BatchUpsertRulesResponse);

  // List rules based on geo_level and geo_id
  rpc ListRules(ListRulesRequest) returns (ListRulesResponse);
}

// Rule message representing a single iso_rule entry
message Rule {
  // iso rule id
  google.protobuf.Int64Value rule_id = 1;
  // iso geo level
  GeoLevel geo_level = 2;
  // iso geo id
  google.protobuf.Int64Value geo_id = 3;
  // iso duration
  google.protobuf.StringValue iso_duration = 4;
  // iso distance
  google.protobuf.StringValue iso_distance = 5;
  // snap distance in meters
  google.protobuf.Int64Value snap_distance_in_meters = 6;
  // vertical overrides
  google.protobuf.StringValue vertical_overrides = 7;
  // created at
  google.protobuf.Timestamp created_at = 8;
  // last updated at
  google.protobuf.Timestamp last_updated_at = 9;
}

// Request message for InsertRule
message InsertRuleRequest {
  // Rule to be inserted
  Rule rule = 1;
}

// Response message for InsertRule
message InsertRuleResponse {
  // Inserted rule
  Rule rule = 1;
}

// Request message for UpdateRule
message UpdateRuleRequest {
  // Rule to be updated
  Rule rule = 1;
}

// Response message for UpdateRule
message UpdateRuleResponse {
  // Updated rule
  Rule rule = 1;
}

// Request message for BatchUpsertRules
message BatchUpsertRulesRequest {
  // List of rules to be upserted
  repeated Rule rules = 1;
}

// Response message for BatchUpsertRules
message BatchUpsertRulesResponse {
  // Successfully processed rules
  repeated Rule rules = 1;
  // Errors for failed entries
  repeated ErrorDetail errors = 2;
}

// Error details for batch operations
message ErrorDetail {
  // Rule ID that caused the error
  google.protobuf.Int64Value rule_id = 1;
  // Geo level of the rule that caused the error
  google.protobuf.StringValue geo_level = 2;
  // Geo id of the rule that caused the error
  google.protobuf.Int64Value geo_id = 3;
  // Error message describing the issue
  google.protobuf.StringValue error_message = 4;
}

// Request message for ListRules
message ListRulesRequest {
  // Optional geo level to filter rules
  google.protobuf.StringValue geo_level = 1;
  // Optional geo ID to filter rules
  google.protobuf.Int64Value geo_id = 2;
}

// Response message for ListRules
message ListRulesResponse {
  // List of rules matching the request
  repeated Rule rules = 1;
}

// Geo Level enum
enum GeoLevel {
  // unspecified geo level
  GEO_LEVEL_UNSPECIFIED = 0;
  // country level
  GEO_LEVEL_COUNTRY = 1;
  // market level
  GEO_LEVEL_MARKET = 2;
  // submarket level
  GEO_LEVEL_SUBMARKET = 3;
  // store level
  GEO_LEVEL_STORE = 4;
}
