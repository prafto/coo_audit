syntax = "proto3";

package marketing_reporting_service.v1;

import "common/money.proto";
import "google/api/annotations.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/wrappers.proto";
import "marketing_reporting_service/common.proto";
import "marketing_reporting_service/metric.proto";

option go_package = "marketing_reporting_service";
option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.marketing_reporting_service";

// Service APIs
service MarketingReportingService {
  // Get ads reporting on campaign level
  rpc GetCampaignSummary(GetCampaignSummaryRequest) returns (GetCampaignSummaryResponse);

  // Get Ads preview data
  rpc GetAdPreviewMetadata(GetAdPreviewMetadataRequest) returns (GetAdPreviewMetadataResponse);
}

// Request to get campaign summary by ID
message GetCampaignSummaryRequest {
  // Optional request ID for idempotency
  string request_id = 1;

  // The campaign IDs
  repeated string campaign_ids = 2;

  // Start time of the report, in format yyyy-MM-dd HH:mm:ss
  string start_date = 3;

  // End time of the report, in format yyyy-MM-dd HH:mm:ss
  string end_date = 4;

  // Reporting query configuration
  QueryConfig query_config = 5;

  // Metric summary time unit
  TimeUnit time_unit = 6;

  // Time zone of the start and end date
  // It should be in a format recognized by the IANA Time Zone Database (e.g., "America/New_York")
  string time_zone = 7;
}

// Response to get campaign by id
message GetCampaignSummaryResponse {
  // Optional request_id for idempotency
  string request_id = 1;

  // Support metric slice by different keys
  repeated MetricSummary metric_summaries = 2;
}

// Message for save_report Topic
message SaveReportKafkaRecord {
  //Report Id of the report
  string report_id = 1;
}

// Request message for AdPreview
message GetAdPreviewMetadataRequest {
  // Store Id
  repeated string store_ids = 1;
  // Business Id
  string business_id = 2;
}

// Data from AdPreview Response
message AdPreviewMetadata {
  // url to image
  string image_url = 1;
  // average rating
  google.protobuf.FloatValue avg_rating = 2;
  // number of ratings
  google.protobuf.Int32Value num_ratings = 3;
  // price range
  google.protobuf.Int32Value price_range = 4;
  // list of tags
  repeated string tags = 5;
  // delivery fee from common/money.proto
  money.MonetaryFields delivery_fee = 6;
  // Delivery time
  google.protobuf.Int32Value delivery_time_in_seconds = 7;
  // StoreId
  string store_id = 8;
}

// Response message for AdPreview
message GetAdPreviewMetadataResponse {
  // currently its aggregated at business level,
  // so irrespective of number of storeIds in request,
  // response will have single element in array
  // in future, it will be store specific
  repeated AdPreviewMetadata ad_preview_metadata = 1;
}
