syntax = "proto3";

// buf:lint:ignore PACKAGE_VERSION_SUFFIX
package te;

import "common/service_client_config.proto";
import "dasher_service/dasher_tier.proto";
import "doordash.api/annotations.proto";
import "doordash.api/field_validate.proto";
import "google/api/annotations.proto";
import "google/protobuf/wrappers.proto";

// buf:lint:ignore SERVICE_SUFFIX
// APIs for Teammate Experience Dasher Service
service Dasher {
  option (doordash.api.service) = {
    name_spaces: ["teammate-experience-dasher"]
    owner: {
      id: "teammate-experience"
      name: "teammate-experience"
      slack_channel: "#eng-teammate-experience-alerts"
      email_alias: "team-teammate-experience@doordash.com"
    }
    target_products: [INTERNAL]
  };

  // Gets Ratings and Rewards for a Dasher
  rpc GetRatingsAndRewards(GetRatingsAndRewardsRequest) returns (GetRatingsAndRewardsResponse) {
    option (google.api.http) = {get: "/teammate-experience-dasher/v1/get-ratings-and-rewards"};
    option (doordash.api.endpoint) = {
      tier: T2
      lifecycle: DEV
      authorization: [DD_USER]
      slo_config: {
        critical_alerts_enabled: true
        critical_5m_burn_threshold: 3000
        critical_5m_burn_sustain_seconds: 300
        p99_latency: 1000
        availability_objective: 99.9
      }
      role_based_authorization: {
        mode: ANY,
        roles: ["perm_access_teammate_headquarters"]
      }
      authentication_config: {enable_okta_verification: true}
      presentation_gateway_endpoint: true
    };
  }
}

// Request for GetRatingsAndRewards
message GetRatingsAndRewardsRequest {
  // Dasher ID
  google.protobuf.StringValue dasher_id = 1;
}

// Response for GetRatingsAndRewards
message GetRatingsAndRewardsResponse {
  // Dasher Tier
  dasher_service.tier.DasherTier dasher_tier = 1;
}
