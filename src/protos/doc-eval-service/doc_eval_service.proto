syntax = "proto3";

package doc_eval_service.v1;

import "doordash.api/annotations.proto";
import "doordash.api/client.proto";
import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/doordash/services-protobuf/generated/doc_eval_service/api/v1";
option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.doc_eval_service.rpc.api";

// Doc Eval service for doc eval tool
service DocEvalService {
  option (doordash.api.service) = {
    name: "llm-doc-eval"
    url: "growth-governance-center-api.service.prod.ddsd"
    port: 50051
    name_spaces: ["growth-governance-center"]
    api_key_name: "GROWTH_GOVERNANCE_CENTER_API_KEY_FOR_UNIFIED_GATEWAY"
    owner: {
      name: "gplat-eng-2"
      id: "growth-platform-alerts"
      slack_channel: "#eng-gplat-alerts"
      email_alias: "adarsh.g@doordash.com"
    }
    target_products: [INTERNAL]
  };

  // API to take in a doc url and get the evaluation
  rpc GetDocumentEvaluation(GetDocumentEvaluationRequest) returns (GetDocumentEvaluationResponse) {
    option (google.api.http) = {
      // {HttpMethod}: "{pathPattern}"
      get: "/growth-governance-center/v1/get_document_evaluation"
    };

    option (doordash.api.endpoint) = {
      tier: T2
      lifecycle: DEV
      authorization: [DD_EMPLOYEE]
      authentication_config: {enable_okta_verification: false}
      target_products: [INTERNAL]
    };
  }
}

// Request for document evaluation
message GetDocumentEvaluationRequest {
  // ID of the document to evaluate
  string document_url = 1;

  // Type of doc - PM vs launch checklist
  string document_type = 2;
}

// Response for document evaluation
message GetDocumentEvaluationResponse {
  // Evaluation result
  string evaluation = 1;

  // Timestamp of when the evaluation was performed
  google.protobuf.Timestamp evaluation_time = 2;

  // Any additional notes or comments from the evaluation
  string comments = 3;
}
