syntax = "proto3";

// buf:lint:ignore DIRECTORY_SAME_PACKAGE
// buf:lint:ignore PACKAGE_VERSION_SUFFIX
package dasher_comms_service.v1;

import "dasher_comms_service/dasher_comms.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "growth/notification_platform/notification_platform_service.proto";

option java_multiple_files = true;
option java_package = "com.doordash.rpc.dasher_comms_service";

// In-app notification status changes for dashers
message InAppNotificationStatusChangeV1 {
  // The dasher id
  string dasher_id = 1;
  // The notification id in the upload table
  string notification_id = 2;
  // The status of the notification
  string status = 3;
}

// Log notifications sent from DCS
message SendNotificationEvent {
  // recipient of the notification
  string dasher_id = 1;
  // channel used to send the notification
  doordash.growth.notification_platform.v1.ChannelType channel = 2;
  // type of the notification
  MessageType message_type = 3;
  // configuration template, placeholders, etc... that are used downstream
  map<string, string> content = 4;
  // additional metadata about the notification
  map<string, string> metadata = 5;
  // whether the notification was sent in real time or not
  bool is_real_time = 6;
  // the source of the notification
  doordash.growth.notification_platform.v1.SourceType source = 7;
  // whether the notification was skipped for holdout
  bool skipped_for_holdout = 8;
  // status of the notification
  DCSNotificationStatus status = 9;
}

// Log notifications sent from DCS  (string columns)
message SendNotificationEventV2 {
  // recipient of the notification
  google.protobuf.StringValue dasher_id = 1;
  // channel used to send the notification
  google.protobuf.StringValue channel = 2;
  // type of the notification
  google.protobuf.StringValue message_type = 3;
  // configuration template, placeholders, etc... that are used downstream
  google.protobuf.StringValue content = 4;
  // additional metadata about the notification
  google.protobuf.StringValue metadata = 5;
  // whether the notification was sent in real time or not
  google.protobuf.BoolValue is_real_time = 6;
  // the source of the notification
  google.protobuf.StringValue source = 7;
  // whether the notification was skipped for holdout
  google.protobuf.BoolValue skipped_for_holdout = 8;
  // status of the notification
  DCSNotificationStatus status = 9;
  //starting point targeted for the notification
  google.protobuf.StringValue starting_point_id = 10;
  // configuration template, placeholders, etc... that are used downstream
  google.protobuf.StringValue configuration_id = 11;
  // the notification uuid from notification platform
  google.protobuf.StringValue notification_uuid = 12;
}

// enum type for notification status
enum DCSNotificationStatus {
  // unspecified status
  DCS_NOTIFICATION_STATUS_UNSPECIFIED = 0;
  // message was sent to dasher
  DCS_NOTIFICATION_STATUS_SENT = 1;
  // message was defered for dasher
  DCS_NOTIFICATION_STATUS_DEFERRED = 2;
  // message was not sent
  DCS_NOTIFICATION_STATUS_CANCELED = 3;
}

// DasherNotificationHistory ..
message DasherNotificationHistory {
  // recipient of the notification
  string dasher_id = 1;
  // channel used to send the notification
  string comms_channel = 2;
  // the notification uuid associated with this record, specific to Dx Comms Platform
  string notification_uuid = 3;
  // the notification status associated with this record
  string notification_status = 4;
  // the activation time associated with this request
  google.protobuf.Timestamp activation_time = 5;
  // the expiration time associated with this request
  google.protobuf.Timestamp expiration_time = 6;
  // the requestName associated with this record
  string request_name = 7;
  // the requestUUID associated with this record
  string request_uuid = 8;
  // the requestStatus associated with this record
  string request_status = 9;
  // the owningTeam associated with this record
  string owning_team = 10;
  // the templateName associated with this record
  string template_name = 11;
  // the templateUUID associated with this record
  string template_uuid = 12;
  // the templateStatus associated with this record
  string template_status = 13;
  // the templateVersion associated with this record
  string template_version = 14;
  // the template payload associated with this record, (English only)
  string template_payload = 15;
  // the placeHolderValues associated with this record
  string place_holder_values = 16;
  // the cohort_details associated with this record
  string cohort_details = 17;
}
