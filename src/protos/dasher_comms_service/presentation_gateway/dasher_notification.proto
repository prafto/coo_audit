syntax = "proto3";

// buf:lint:ignore PACKAGE_VERSION_SUFFIX
package dx.comms;

import "common/common.proto";
import "common/service_client_config.proto";
import "doordash.api/annotations.proto";
import "doordash.api/field_validate.proto";
import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "lego.response/lego_response.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_outer_classname = "NotificationProto";
option java_package = "com.doordash.rpc.dx.comms";

// buf:lint:ignore SERVICE_SUFFIX
// APIs for Notifications
service Notification {
  option (doordash.api.service) = {
    name: "dasher_comms_service"
    port: 50051
    name_spaces: ["dasher_comms_service"]
    api_key_name: "DASHER_COMMS_SERVICE_API_KEY"
    owner: {
      id: "dasher-comms-platform-team"
      name: "dasher_comms_service"
      slack_channel: "#eng-dasher-comms-service-notifications"
      email_alias: "eng-dasher-comms-platform@doordash.com"
    }
    target_products: [DX] /* Full list https://github.com/doordash/services-protobuf/blob/master/protos/doordash.api/common.proto */
  };

  // Get notifications by filter
  rpc GetByFilter(GetByFilterRequest) returns (GetByFilterResponse) {
    option (google.api.http) = {get: "/dasher_comms_service/v3/notification"};
    option (doordash.api.endpoint) = {
      hostname: "dx-comms-notification-get-by-filter.service.prod.ddsd"
      tier: T1
      lifecycle: DEV
      authorization: [DX_USER]
      target_products: [DX]
      inject_user_roles: true
      presentation_gateway_endpoint: true
    };
  }
}

// GetByFilterRequest message
message GetByFilterRequest {
  // Dasher id for the current user
  google.protobuf.StringValue dasher_id = 1 [(doordash.api.inject_id) = DX_ID];
  // Source for notifications
  google.protobuf.StringValue source = 2;
  // Locale for the current user
  google.protobuf.StringValue locale = 3 [(.doordash.api.inject_from_headers) = {
    field: "accept-language"
    injection_rule: {cast_type: "nullable_string"}
  }];
}

// GetByFilterResponse message
message GetByFilterResponse {
  // Dasher notification
  DasherNotification dasher_notification = 1;
  // Poll frequency in milli secs
  google.protobuf.Int64Value poll_frequency_ms = 2;
}

// Dasher notification object
message DasherNotification {
  // notification uuid
  string notification_uuid = 1;
  // notification type
  string notification_type = 2;
  // notification status
  string notification_status = 3;
  // The lego page of the notification
  lego.response.v1.LegoPageResponse lego_page = 4;
}
