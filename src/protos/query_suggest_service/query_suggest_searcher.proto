syntax = "proto3";
package query_suggest_service.v1;

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.query_suggest.rpc";

/** The service is used to generate query suggesting across search input fields in DoorDash applications and on the web portal. */
service QuerySuggestService {
  /** The main method to retrive query suggestions given user input. */
  rpc GetQuerySuggestions(GetQuerySuggestionsRequest) returns (GetQuerySuggestionsResponse);
}

/** Request message for QuerySuggestService. */
message GetQuerySuggestionsRequest {
  /** Text of query prefix typed by the user. */
  string prefix = 1;
  /** sub_market_id of the user. */
  int64 sub_market_id = 2;
  /** The number of suggestions requested for the user. */
  int32 size = 3;
  /** Generalized filters field to include additional parameters.*/
  oneof filters {
    /** Currently, this is a lucene formatted query like: "business_id:(+68 +178) AND (business_vertical_id:187 OR suggestion:'testing')"*/
    string filter_lq_expression = 4;
  }
  /** An optional field to specify the experiment group in A/B or A/B/C testing. */
  int32 experiment_group = 5; // Defaults to 0 which is control group
}

/** Response message for QuerySuggestService. */
message GetQuerySuggestionsResponse {
  /** The total number of matching to the prefix suggestions. */
  int32 total_matched = 1;

  /** List of the top size suggestions. */
  repeated QuerySuggestion suggestions = 2;
}

/** Message represeintin a query suggestion. */
message QuerySuggestion {
  /** Text of the query suggestion. */
  StructuredQuery suggestion = 1;
  /** Relevance score of the query suggestion. */
  double score = 2;
  /**
   * List of businesses that the query suggestion potentially
   * contains.
   */
  repeated BusinessAttribution businesses = 3;
  /** List of verticals to which the query belongs. */
  repeated VerticalAffinity verticals = 4;
}

/** Message representing structured query suggested to the user. */
message StructuredQuery {
  /** The query terms. */
  repeated string term = 1;
}

/** Message representing business to query attribution. */
message BusinessAttribution {
  /** Integer identifier of the business. */
  int64 business_id = 1;

  /** Name of the business. */
  string name = 2;
  /** List of positions of the terms that are the business name. */
  repeated int32 positions = 3;
  /** Confidence of the attribution prediction. */
  double confidence = 4;
}

/** Message representing vertical affinity of the query and a vertical of search. */
message VerticalAffinity {
  /** Integer identifier of the search vertical. */
  int64 vertical_id = 1;
  /** Name of the vertical */
  string name = 2;
  /** Confidence of the affinity prediction. */
  double confidence = 3;
}
