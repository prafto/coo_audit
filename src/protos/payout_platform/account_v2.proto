syntax = "proto3";

package doordash.payment.payout.v2;

import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "payment/common.proto";
import "payment/payout_v1.proto";
import "payout_platform/common.proto";
import "payout_service/payout_service.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.payment.payout.v2";

// service that handles anything related to payment accounts
service AccountService {
  // used to create a transaction with an account
  rpc CreateTransaction(CreateTransactionRequest) returns (CreateTransactionResponse);
  // used to create a payout account
  rpc CreatePayoutAccount(CreatePayoutAccountRequest) returns (CreatePayoutAccountResponse);
  // Associated transfers with new payout account
  rpc AssociateTransfersWithNewPayoutAccount(AssociateTransfersWithNewPayoutAccountRequest) returns (AssociateTransfersWithNewPayoutAccountResponse);
  // Migrate off of experience
  rpc MigrateOffPayoutExperience(MigrateOffPayoutExperienceRequest) returns (MigrateOffPayoutExperienceResponse);
  // Create Account Session
  rpc CreateAccountSession(CreateAccountSessionRequest) returns (CreateAccountSessionResponse);
}

// types of settlement
enum SettlementType {
  // unspecified settlement type
  SETTLEMENT_TYPE_UNSPECIFIED = 0;
  // settlement type of payout
  SETTLEMENT_TYPE_PAYOUT = 1;
}

// message to use when creating a transaction
message CreateTransactionRequest {
  // payment account id
  google.protobuf.Int64Value payment_account_id = 1;

  // amount of transaction
  google.protobuf.Int64Value amount = 2;

  // amount paid of transaction
  google.protobuf.Int64Value amount_paid = 3;

  // the idempotency key used to identify this transaction
  google.protobuf.StringValue idempotency_key = 4;

  // the currency of the transaction
  doordash.payment.common.Currency currency = 5;

  // id of target
  google.protobuf.Int64Value target_id = 6;

  // type of target
  google.protobuf.StringValue target_type = 7;

  // transfer id
  google.protobuf.Int64Value transfer_id = 8;

  // when transaction was created
  google.protobuf.Timestamp created_at = 9;

  // who created it
  google.protobuf.Int64Value created_by_id = 10;

  // notes
  google.protobuf.StringValue notes = 11;

  // metadata about transaction
  google.protobuf.StringValue metadata = 12;

  // state of transaction
  google.protobuf.StringValue state = 13;

  // when transaction was updated
  google.protobuf.Timestamp updated_at = 14;

  // dsj id
  google.protobuf.Int64Value dsj_id = 15;

  // payout id
  google.protobuf.Int64Value payout_id = 16;

  // when transaction was inserted
  google.protobuf.Timestamp inserted_at = 17;
}

// response received when creating a transaction
message CreateTransactionResponse {
  // transaction that was created
  Transaction transaction = 1;
}

// request to create payout account
message CreatePayoutAccountRequest {
  // payment account id
  google.protobuf.Int64Value payment_account_id = 1;

  // who is modifying the account
  google.protobuf.StringValue modified_by = 2;

  // entity of payout account
  PaymentAccountEntity entity = 3;
}

// response to create payout account
message CreatePayoutAccountResponse {
  // UUID to identify payout account id
  google.protobuf.StringValue payout_account_id = 1;
}

// request to create payout account
message AssociateTransfersWithNewPayoutAccountRequest {
  // previous payment account id
  google.protobuf.Int64Value old_payment_account_id = 1;

  // new payment account id
  google.protobuf.Int64Value new_payment_account_id = 2;

  // list of tranfers to move
  repeated google.protobuf.Int64Value transfer_ids = 3;

  // reason for manual operation
  google.protobuf.StringValue manual_transfer_reason = 4;

  // should override validations
  google.protobuf.BoolValue should_override_validations = 5;
}

// response to associate transfer request
message AssociateTransfersWithNewPayoutAccountResponse {}

// entity types of payment account
enum PaymentAccountEntity {
  // unspecified
  PAYMENT_ACCOUNT_ENTITY_UNSPECIFIED = 0;
  // dasher
  PAYMENT_ACCOUNT_ENTITY_DASHER = 1;
  // store
  PAYMENT_ACCOUNT_ENTITY_STORE = 2;
  // merchant
  PAYMENT_ACCOUNT_ENTITY_MERCHANT = 3;
  // other
  PAYMENT_ACCOUNT_ENTITY_OTHER = 4;
  // partner
  PAYMENT_ACCOUNT_ENTITY_PARTNER = 5;
  // work team
  PAYMENT_ACCOUNT_ENTITY_WORK_TEAM_ACCOUNT = 6;
}

// migrate off payout experience request
message MigrateOffPayoutExperienceRequest {
  // list of payment accounts to migrate
  repeated google.protobuf.Int64Value payment_account_id = 1;

  // current payout experience id
  google.protobuf.StringValue current_payout_experience_id = 2;
}

// migrate off payout experience response
message MigrateOffPayoutExperienceResponse {}

// Create Stripe AccountSession request
message CreateAccountSessionRequest {
  // payout provider
  doordash.payout_service.PayoutProvider provider = 1;
  // Provider specific params
  oneof provider_params {
    // Stripe provider params
    CreateAccountSessionStripeParams stripe_params = 2;
  }
}

// Create account sessions params when provider is Stripe
message CreateAccountSessionStripeParams {
  // Stripe account id 'acct_xxx'
  google.protobuf.StringValue stripe_account_id = 1;
  // Map of embedded components to each component's configuration
  CreateAccountSessionStripeComponents components = 2;
}

// Create Stripe AccountSession request components
message CreateAccountSessionStripeComponents {
  // Account Management component configuration
  CreateAccountSessionStripeComponentAccountManagement account_management = 1; // optional
  // Account Onboarding component configuration
  CreateAccountSessionStripeComponentAccountOnboarding account_onboarding = 2; // optional
}

// Create Stripe AccountSession request component Account Management
message CreateAccountSessionStripeComponentAccountManagement {
  // Whether the embedded component is enabled
  google.protobuf.BoolValue enabled = 1;
  // Account Management features
  CreateAccountSessionStripeComponentAccountManagementFeatures features = 2; // optional
}

// Create Stripe AccountSession request component Account Management features
message CreateAccountSessionStripeComponentAccountManagementFeatures {
  // Disables Stripe user authentication for this embedded component
  google.protobuf.BoolValue disable_stripe_user_authentication = 1; // optional
  // Whether to allow platforms to control bank account collection for their connected accounts
  google.protobuf.BoolValue external_account_collection = 2; // optional
}

// Create Stripe AccountSession request component Account Management
message CreateAccountSessionStripeComponentAccountOnboarding {
  // Whether the embedded component is enabled
  google.protobuf.BoolValue enabled = 1;
  // Account Management features
  CreateAccountSessionStripeComponentAccountOnboardingFeatures features = 2; // optional
}

// Create Stripe AccountSession request component Account Management features
message CreateAccountSessionStripeComponentAccountOnboardingFeatures {
  // Disables Stripe user authentication for this embedded component
  google.protobuf.BoolValue disable_stripe_user_authentication = 1; // optional
  // Whether to allow platforms to control bank account collection for their connected accounts
  google.protobuf.BoolValue external_account_collection = 2; // optional
}

// Create Account Session response
message CreateAccountSessionResponse {
  // Provider
  doordash.payout_service.PayoutProvider provider = 1;
  // Provider specific response
  oneof provider_response {
    // Stripe provider response
    CreateAccountSessionStripeResponse stripe_response = 2;
  }
}

// Create Stripe AccountSession response
message CreateAccountSessionStripeResponse {
  // Stripe account id 'acct_xxx'
  google.protobuf.StringValue stripe_account_id = 1;
  // Stripe client secret
  google.protobuf.StringValue client_secret = 2;
  // Expires at
  google.protobuf.Timestamp expires_at = 3;
  // Object type
  google.protobuf.StringValue object_type = 4;
  // Has the value true if the object exists in live mode or the value false if the object exists in test mode.
  google.protobuf.BoolValue livemode = 5;
  // Configuration for the embedded components
  CreateAccountSessionStripeComponents components = 6;
}
