syntax = "proto3";
// buf:lint:ignore PACKAGE_VERSION_SUFFIX
package risk.common;

option go_package = "github.com/doordash/services-protobuf/generated/risk_common/v1";
option java_multiple_files = true;
option java_package = "com.doordash.risk.common";

// SessionId
message SessionId {
  // value
  string value = 1;
}

// Duration
message Duration {
  // seconds
  int64 seconds = 1;
  // nanos
  int32 nanos = 2;
}

// Platform
message Platform {
  // value of platform
  string value = 2;
  // PlatformType
  enum PlatformType {
    // UNKNOWN
    PLATFORM_TYPE_UNSPECIFIED = 0;
    // ANDROID
    PLATFORM_TYPE_ANDROID = 1;
    // DESKTOP
    PLATFORM_TYPE_DESKTOP = 2;
    // IOS
    PLATFORM_TYPE_IOS = 3;
    // MOBILE_WEB
    PLATFORM_TYPE_MOBILE_WEB = 4;
    // GOOGLE_AMP
    PLATFORM_TYPE_GOOGLE_AMP = 5;
    // GOOGLE_NATIVE
    PLATFORM_TYPE_GOOGLE_NATIVE = 6;
    // ONLINE_ORDERING
    PLATFORM_TYPE_ONLINE_ORDERING = 7;
    // VOICE
    PLATFORM_TYPE_VOICE = 8;
  }
  // type
  PlatformType type = 3;
}

// Address
message Address {
  // id
  string id = 10;
  // lat
  double lat = 1;
  // long
  double long = 2;
  // formatted_address
  string formatted_address = 3;
  // address_line1
  string address_line1 = 4;
  // address_line2
  string address_line2 = 5;
  // city
  string city = 6;
  // state
  string state = 7;
  // postal_code
  string postal_code = 8;
  // deprecated_country
  string deprecated_country = 9;
  // country
  Country country = 11;
}

// Country
message Country {
  // id
  string id = 1;
  // name
  string name = 2;
  // short_name
  string short_name = 3;
}

// Currency
message Currency {
  // code
  string code = 1;
}

// MonetaryAmount
message MonetaryAmount {
  // amount
  int64 amount = 1;
  // currency
  Currency currency = 2;
}

// Order
message Order {
  // order_uuid
  string order_uuid = 1;
  // OrderTarget
  enum OrderTarget {
    // UNKNOWN
    ORDER_TARGET_UNSPECIFIED = 0;
    // RESTAURANT
    ORDER_TARGET_RESTAURANT = 1;
    // GROCERY
    ORDER_TARGET_GROCERY = 2;
    // SUPPLIER
    ORDER_TARGET_SUPPLIER = 3;
  }
  // OrderTarget
  OrderTarget order_target = 2;
  // OrderType
  OrderType order_type = 3;
  // Is Google Food order
  bool is_google_food_ordering = 4;
  // DDFW team ID
  string ddfw_team_id = 5;
  // DDFW Company Payer ConsumerId
  string ddfw_company_payer_consumer_id = 6;
  // DDFW Team type
  DdfwTeamType ddfw_team_type = 7;
  // flag to determine if an order is a storefront mobile app order
  bool is_storefront_mobile_app = 8;
}

// Order Types
enum OrderType {
  // UNKNOWN
  ORDER_TYPE_UNSPECIFIED = 0;
  // RECURRING FIRST
  ORDER_TYPE_RECURRING_FIRST = 1;
  // RECURRING SCHEDULED
  ORDER_TYPE_RECURRING_SCHEDULED = 2;
}

// mapping of WorkConsumerStatusForFraud, see definition in:
// https://github.com/doordash/services-protobuf/blob/master/protos/team_management/common.proto
enum DdfwTeamType {
  // UNSPECIFIED (Should never be returned, error state)
  DDFW_TEAM_TYPE_UNSPECIFIED = 0;
  // UNKNOWN
  DDFW_TEAM_TYPE_UNKNOWN = 1;
  // SELF SERVE
  DDFW_TEAM_TYPE_SELF_SERVE = 2;
  // MANUAL MANAGEMENT
  DDFW_TEAM_TYPE_MANUAL_MANAGEMENT = 3;
}

// different kinds of entity types that calls
// fraud to be evaluted
enum EvaluationEntityType {
  // unspecified if the value is not set or not defined
  EVALUATION_ENTITY_TYPE_UNSPECIFIED = 0;
  // user_id based type
  EVALUATION_ENTITY_TYPE_USER = 1;
  // consumer_id based on type
  EVALUATION_ENTITY_TYPE_CONSUMER = 2;
  // dasher_id based type
  EVALUATION_ENTITY_TYPE_DASHER = 3;
  // payment_account based type
  EVALUATION_ENTITY_TYPE_PAYMENT_ACCOUNT = 4;
  // cart based type
  EVALUATION_ENTITY_TYPE_CART = 5;
  // campaign based type, normally couple with other types
  EVALUATION_ENTITY_TYPE_CAMPAIGN = 6;
  // delivery based type
  EVALUATION_ENTITY_TYPE_DELIVERY = 7;
  // dispute based type
  EVALUATION_ENTITY_TYPE_DISPUTE = 8;
  // store based type
  EVALUATION_ENTITY_TYPE_STORE = 9;
  // dasher_applicant based type (different with the dasher id one)
  EVALUATION_ENTITY_TYPE_DASHERAPPLICANT = 10;
  // payout based type
  EVALUATION_ENTITY_TYPE_PAYOUT = 11;
  // payout based type
  EVALUATION_ENTITY_TYPE_BUSINESS = 12;
  // referral based type
  EVALUATION_ENTITY_TYPE_REFERRAL = 13;
  // Order based type
  EVALUATION_ENTITY_TYPE_ORDER = 14;
}

// different kinds of segment users that come along with the
// evaluation request
enum SegmentUserType {
  // SEGMENT_USER_TYPE_UNSPECIFIED is not set or others
  SEGMENT_USER_TYPE_UNSPECIFIED = 0;
  // user based segment
  SEGMENT_USER_TYPE_USER = 1;
  // consumer based segment
  SEGMENT_USER_TYPE_CONSUMER = 2;
  // dasher based segment
  SEGMENT_USER_TYPE_DASHER = 3;
  // payment based segment
  SEGMENT_USER_TYPE_PAYMENT = 4;
}

// PayerReferenceIdType. Example: dd_consumer_id
message PayerReferenceIdType {
  // actual type of payer
  string value = 1;
}

// EvaluationEntity encapsulates both the evaluation request entity type and entity id
message EvaluationEntity {
  // entitty type to be evaluted
  EvaluationEntityType entity_type = 1 [deprecated = true];
  // entity_id
  string entity_id = 2;

  // entity_identifier to replace entity_type
  oneof entity_identifier {
    // entity_id (coupled with the entity type) to be evaluated
    EvaluationEntityType evaluation_entity_type = 3;
    // reference_id_type
    PayerReferenceIdType reference_id_type = 4;
  }
}

// SegmentUserId encapsulates both the request user type and user id
message SegmentUser {
  // segment user type
  SegmentUserType segment_user_type = 1;
  // segment user id
  string segment_user_id = 2;
}

// ItemProblem definition
message ItemProblem {
  // Problem name (e.g.
  string problem_name = 1;
  // Item description
  string description = 2;
  // Item extra id
  string item_extra_id = 3;
  // Order item id
  string order_item_id = 4;
  // Quantity
  int32 quantity = 5;
}

// The email id
message EmailId {
  // The id of the email
  string value = 1;
}

// MerchantSuppliedItemId
message MerchantSuppliedItemId {
  // value
  string value = 1;
}

// Details related to the DDfB team making the order.
message DdfbDetails {
  // Identifier for the DDfB team making the order.
  string ddfb_team_id = 1;
}

// Custom (sometimes temporary for experimentation) attribute.
message CustomAttribute {
  // Attribute name
  string name = 1;
  // Attribute value
  string value = 2;
}
