// LiteAppUploader
syntax = "proto3";

package lite_app_uploader_service.v1;

import "google/protobuf/wrappers.proto";

option go_package = "github.com/doordash/services-protobuf/generated/lite_app_uploader_service/api/v1";
option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.lite_app_uploader_service.rpc.api";

// The platform that the lite apps including app clip and instant app will be published to.
enum Platform {
  // Destination is not specified.
  PLATFORM_UNSPECIFIED = 0;

  // Upload store to Apple.
  PLATFORM_APPLE = 1;

  // Upload store to Yelp.
  PLATFORM_YELP = 2;
}

// We can either remove or upsert using UpdateLiteAppExperiencesRequest
enum UpdateType {
  // Unspecified type
  UPDATE_TYPE_UNSPECIFIED = 0;

  // Remove the store
  UPDATE_TYPE_REMOVE = 1;

  // Upsert/update the store
  UPDATE_TYPE_UPSERT = 2;
}

// The upload status for a store on a specific platform
enum UploadStatus {
  // Upload status unspecified.
  UPLOAD_STATUS_UNSPECIFIED = 0;

  // In process of uploading.
  UPLOAD_STATUS_PENDING = 1 [deprecated = true];

  // Upload failed.
  UPLOAD_STATUS_FAIL = 2 [deprecated = true];

  // Upload success.
  UPLOAD_STATUS_SUCCESS = 3 [deprecated = true];

  // Creation pending.
  UPLOAD_STATUS_CREATE_PENDING = 4;

  // Creation process running and waiting for results.
  UPLOAD_STATUS_CREATE_RUNNING = 10;

  // Creation failed.
  UPLOAD_STATUS_CREATE_FAIL = 5;

  // Creation success.
  UPLOAD_STATUS_CREATE_SUCCESS = 6;

  // Modification pending.
  UPLOAD_STATUS_UPDATE_PENDING = 7;

  // Modification process running and waiting for results.
  UPLOAD_STATUS_UPDATE_RUNNING = 11;

  // Modification failed.
  UPLOAD_STATUS_UPDATE_FAIL = 8;

  // Modification success.
  UPLOAD_STATUS_UPDATE_SUCCESS = 9;

  // Fail to fetch async task status like Yelp.
  UPLOAD_STATUS_FETCH_FAIL = 12 [deprecated = true];

  // Fail to fetch async task status like Yelp.
  UPLOAD_STATUS_CREATE_FETCH_FAIL = 13;

  // Fail to fetch async task status like Yelp.
  UPLOAD_STATUS_UPDATE_FETCH_FAIL = 14;
}

// The request for creating lite app experiences.
message CreateLiteAppExperiencesRequest {
  // The lite app stores need to be published.
  repeated Store stores = 1 [deprecated = true];
  // List of store ids that need to be published
  repeated string store_ids = 2;
  // List of platforms we want these stores to be published
  repeated Platform platforms = 3;
}

// we use old request format for kafka topic
message LiteAppExperienceChange {
  // The lite app stores need to be published.
  repeated Store stores = 1;
}

// The response for creating lite app experiences.
message CreateLiteAppExperiencesResponse {
  // The upload result for all the stores that are published.
  repeated UploadResult upload_results = 1;
}

// Store detail to upload.
message Store {
  // Store id.
  google.protobuf.StringValue store_id = 1;

  // Platforms that lite app experience will be published to.
  repeated Platform platforms = 2;

  // Whether the lite app experience will be removed from the destination
  google.protobuf.BoolValue remove = 3;
}

// Upload result.
message UploadResult {
  // The corresponding store for the upload request.
  Store store = 1;

  // The result of the upload request(deprecated).
  google.protobuf.StringValue status = 2 [deprecated = true];

  // The result of the upload request.
  repeated UploadResultDetail upload_result_details = 3;
}

// The detail of the upload status including platform, status and external id.
message UploadResultDetail {
  // Target Platform.
  Platform platform = 1;

  // The upload status for the platform above.
  UploadStatus upload_status = 2;

  // The external id on the target platform.
  google.protobuf.StringValue external_id = 3;

  // The reason when the upload fails.
  google.protobuf.StringValue failure_reason = 4;
}

// The request for updating lite app experiences.
message UpdateLiteAppExperiencesRequest {
  // The lite app stores need to be published.
  repeated Store stores = 1 [deprecated = true];

  // List of store ids that need to be updated
  repeated string store_ids = 2;

  // List of platforms we want these stores to be updated
  repeated Platform platforms = 3;

  // remove or update
  UpdateType update_type = 4;
}

// The response for updating lite app experiences.
message UpdateLiteAppExperiencesResponse {
  // The upload result for all the stores that are published.
  repeated UploadResult upload_results = 1;
}

// The service that publishes lite app stores to the destination platforms.
service LiteAppUploaderService {
  // Creates app clip experiences on the destination platforms.
  rpc CreateLiteAppExperiences(CreateLiteAppExperiencesRequest) returns (CreateLiteAppExperiencesResponse);
  // Update app clip experiences on the destination platforms.
  rpc UpdateLiteAppExperiences(UpdateLiteAppExperiencesRequest) returns (UpdateLiteAppExperiencesResponse);
}
