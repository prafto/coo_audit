syntax = "proto3";

package dasher_handoffs_service.entity.v1;

import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "order_accuracy_service/nudge_service.proto";

option go_package = "github.com/doordash/services-protobuf/generated/dasher_handoffs_service/entity/v1";
option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.dasher_handoffs_service.entity";

//DxHandoffEntity containing data used for the on-a-dash flow
message DasherHandoffsEntity {
  // Entity metadata field. Checksum here is the addressId.
  EntityMetadata entity_metadata = 1;
  // Handoffs Entity data
  DxHandoffsEntity entity_data = 2;
}

//DxNudgeEntity containing data used for the nudge flow
message DasherNudgeEntity {
  // Entity metadata field. Checksum here is the dasherId.
  EntityMetadata entity_metadata = 1;
  // Nudge entity
  DxNudgeEntity entity_data = 2;
}

// Generic implementation of a delivery entity data for the on-a-dash flow
message Entity {
  // Entity metadata field
  EntityMetadata entity_metadata = 1;
  // Entity data
  DxHandoffsEntity entity_data = 2;
}

// Defines metadata related to the entity
message EntityMetadata {
  // Idempotency related to the handled event
  google.protobuf.StringValue idempotency_key = 1;
  // Checksum of the data related to the entity.
  google.protobuf.StringValue entity_checksum = 2;
}

// DxHandoff Entity information to add to the DeliveryAudienceInfo
message DxHandoffsEntity {
  // Dropoff geofence limit used in the dropoff_check
  google.protobuf.DoubleValue dropoff_geofence_limit = 1;
  // Previously used photo for dropoff at this location for this consumer
  google.protobuf.StringValue historical_dropoff_photo = 2;
  // Previously used route for dropoff at this location for this consumer
  google.protobuf.StringValue historical_dropoff_route_polyline = 3;
  // Cx Instruction cateogrizations
  repeated CxInstructionCategory instruction_categorizations = 4;
  // Similar address information
  SimilarAddressEntity similar_address_entity = 5;
  // Cx live location share with Dx preference
  CxLocationShareWithDxPreference cx_location_share_with_dx_preference = 6;
  // GeoJSON Polygon geofence
  google.protobuf.StringValue polygon_geojson_geofence = 7;
  // Navigation lat
  google.protobuf.DoubleValue navigation_lat = 8;
  // Navigation lng
  google.protobuf.DoubleValue navigation_lng = 9;
  // Translated dropoff instructions
  repeated TranslatedInstruction translated_dropoff_instructions = 10;
  // Polygon geofence confidence
  int64 polygon_geofence_confidence = 11;
  // Navigation pin metadata
  google.protobuf.StringValue navigation_pin_metadata = 12;
  // Previously used signed photo for dropoff at this location for this consumer
  repeated google.protobuf.StringValue signed_historical_dropoff_photo = 13;
  // List of historic dropoff photo objects
  repeated HistoricDropoffPhoto historic_dropoff_photos = 14;
}

// Historic Dropoff Photo Data to pass to services
message HistoricDropoffPhoto {
  // signed historic photo
  google.protobuf.StringValue signed_historical_dropoff_photo = 1;
  // historic photo submit lat associated with photo
  google.protobuf.DoubleValue historic_photo_submit_lat = 2;
  // historic photo submit lng associated with photo
  google.protobuf.DoubleValue historic_photo_submit_lng = 3;
}

// Translated instruction information to add to the DeliveryAudienceInfo
message TranslatedInstruction {
  // Translated locale
  google.protobuf.StringValue translated_locale = 1;
  // Translated string
  google.protobuf.StringValue translated_instructions = 2;
  // Hash of the Original string
  google.protobuf.StringValue hash_value_original_string = 3;
  // Original string language
  google.protobuf.StringValue original_string_language = 4;
}

// Similar address information to add to the DeliveryAudienceInfo
message SimilarAddressEntity {
  // latitude of similar address
  google.protobuf.DoubleValue latitude = 1;
  // longitude of similar address
  google.protobuf.DoubleValue longitude = 2;
  // name of similar address
  google.protobuf.StringValue name = 3;
}

// Cx preference on sharing the location with Dx information to add to the DeliveryAudienceInfo
message CxLocationShareWithDxPreference {
  // Opted-out for sharing the location on future orders
  google.protobuf.BoolValue opted_out_with_delivery_person = 1;
  // Opted-out for sharing the location on this order
  google.protobuf.BoolValue opted_out_for_order = 2;
  // Opt-in time for sharing the location at the order level
  google.protobuf.Timestamp opt_in_for_order_timestamp = 3;
  // Opt-out time for sharing the location at the order level
  google.protobuf.Timestamp opt_out_for_order_timestamp = 4;
}

// Nudge Entity information to add to the DeliveryAudienceInfo
message DxNudgeEntity {
  // Additional Details
  google.protobuf.StringValue additional_details = 3;
  // Map of entry points to list of sorted page ids
  // supported entry points defined in order_accuracy_service.v1.EntryPoint
  // will be deprecated in favor of eligible_nudges
  map<string, PageIds> entry_point_to_page_ids = 5;
  // List of all eligible nudges sorted by priority across all entry points
  repeated order_accuracy_service.v1.Nudge eligible_nudges = 9;

  // do not add individual page ids, use entry_point_to_page_ids
  reserved "pickup_page_id", "dropoff_page_id", "dropoff_photo_page_id", "dropoff_tasks_page_id", "crossed_mx_geofence_page_id", "confirm_pickup_page_id";
  reserved 1, 2, 4, 6, 7, 8;
}

// List of sorted page ids
message PageIds {
  // Page id of a single nudge
  repeated string page_id = 1;
}

// Cx Instruction Categories
enum CxInstructionCategory {
  // Unspecified
  CX_INSTRUCTION_CATEGORY_UNSPECIFIED = 0;
  // Entry code
  CX_INSTRUCTION_CATEGORY_ENTRY_CODE = 1;
  // Directions
  CX_INSTRUCTION_CATEGORY_DIRECTIONS = 2;
  // Dropoff
  CX_INSTRUCTION_CATEGORY_DROPOFF = 3;
  // Elevator
  CX_INSTRUCTION_CATEGORY_ELEVATOR = 4;
  // Parking
  CX_INSTRUCTION_CATEGORY_PARKING = 5;
}

// Dx Communication Nd Intent Iguazu Event
message DxCommunicationNdIntentEvent {
  // delivery_id of GetHistoricalDeliveryData request
  google.protobuf.Int64Value delivery_id = 1;

  // dasher_id of GetHistoricalDeliveryData request
  google.protobuf.Int64Value dasher_id = 2;

  // dx_in_cx_geofence of GetHistoricalDeliveryData request
  google.protobuf.Timestamp dx_in_cx_geofence = 3;

  // dx_communcation_nd_intent_time of GetHistoricalDeliveryData request
  google.protobuf.Timestamp dx_communcation_nd_intent_time = 4;

  // dx_communication_nd_intent_creation_time of GetHistoricalDeliveryData request
  google.protobuf.Timestamp dx_communication_nd_intent_creation_time = 5;

  // dx_chat_message of GetHistoricalDeliveryData request
  google.protobuf.StringValue dx_chat_message = 6;
}

// Results for ND source of truth adjudication
message NdAdjudicationEvent {
  // delivery_uuid for the never delivered delivery
  google.protobuf.StringValue delivery_uuid = 1;
  // tag for the type of result being returned
  google.protobuf.StringValue inference_type = 2;
  // version tag for changes made
  google.protobuf.Int64Value inference_version = 3;
  // inference result corresponding to this delivery
  google.protobuf.StringValue result = 4;
}
