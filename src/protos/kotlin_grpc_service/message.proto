syntax = "proto3";

package doordash_kotlin_grpc_service;

option java_multiple_files = true;
option java_generic_services = true;
option java_package = "com.doordash.rpc.kotlingrpc";
option go_package = "kotlingrpc";

import "common/service_client_config.proto";

service KotlinGRPCService {
    option (service_client.client_config).response_attempt_timeout_millis = 800;
    option (service_client.client_config).retry_config.max_attempts = 3;
    // grpc codes 8 (RESOURCE_EXHAUSTED) and 13 (INTERNAL) are among the codes that are not retriable by default.
    // As an example, let's flip them to be retriable.
    option (service_client.client_config).retry_config.do_retry_grpc_code = 8;
    option (service_client.client_config).retry_config.do_retry_grpc_code = 13;
    // grpc code 10 (ABORTED) is among the codes that are retriable by default
    // As an example, let's flip it to be non-retriable
    option (service_client.client_config).retry_config.do_not_retry_grpc_code = 10;

    // As an example, let's override this default of 10. Now, the circuit breaker will
    // only start detecting failures after at least 20 requests have been made.
    option (service_client.client_config).circuit_breaker_config.minimum_request_threshold = 20;

    rpc CreateMessageForSQSExample(CreateMessageRequest) returns (EmptyResponse) {
        // As an example, lets increase the timeout for this rpc.
        option (service_client.client_method_config).response_attempt_timeout_millis = 900;
    }

    rpc GetMessagesFromSQSExample(EmptyRequest) returns (GetMessagesResponse) {
        // As an example, lets only attempt this request twice.
        option (service_client.client_method_config).retry_config.max_attempts = 3;
    }

    rpc GetMessageStream(GetMessageStreamRequest) returns (stream GetMessageStreamResponse);
}

message EmptyRequest { }
message EmptyResponse { }
message GetMessageStreamRequest { }

message CreateMessageRequest {
    string message = 1;
}

message GetMessagesResponse {
    repeated string messages = 1;
}


message GetMessageStreamResponse {
    string message = 1;
}