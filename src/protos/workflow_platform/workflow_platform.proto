syntax = "proto3";
package workflow_platform.workflow_platform.v1;

import "common/service_client_config.proto";
import "doordash.api/annotations.proto";
import "experience_reliability_service/workflow_platform.proto";
import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.workflow_platform";

/*
 *    - gRPC endpoints for the Workflow Platform service
 *    - #ask-workflow-platform
 *    - '/experience_reliability_service/workflow_platform.proto' for the not-yet-moved protobufs
 */
service WorkflowPlatformService {
  option (doordash.api.service) = {
    name: "workflow-platform"
    url: "workflow-platform-web.service.prod.ddsd"
    port: 50051
    name_spaces: ["workflow-platform"]
    api_key_name: "WORKFLOW_PLATFORM_UG_API_KEY"
    owner: {
      id: "workflow-platform-alerts"
      name: "workflow-platform"
      slack_channel: "#ask-workflow-platform-eng"
      email_alias: "team-customer-experience-platform@doordash.com"
    }
    target_products: [INTERNAL]
  };
  option (doordash.api.service_forward_headers) = {
    forward: [
      {field: "Sub-client-service-name"}]
  };
  // Get execution output of nodes under the specified context
  rpc GetNodeExecutionEvents(GetNodeExecutionEventsRequest) returns (GetNodeExecutionEventsResponse) {
    option (google.api.http) = {get: "/workflow-platform/v1/executions"};
    option (doordash.api.endpoint) = {
      tier: T2
      lifecycle: TEST
      authorization: [DD_USER]
      role_based_authorization: {
        mode: ANY,
        roles: [
          "perm_support_workflow_configurator",
          "perm_support_workflow_configurator_view_only",
          "perm_access_teammate_headquarters"
        ]
      }
      authentication_config: {enable_okta_verification: true}
      target_products: [INTERNAL]
      slo_config: {
        critical_alerts_enabled: false
        p99_latency: 10
      }
    };
  }

  // get the complete information about various step metadata related to that particular execution of a workflow node
  rpc GetNodeWorkflowStepExecutionMetadata(GetNodeWorkflowStepExecutionMetadataRequest) returns (GetNodeWorkflowStepExecutionMetadataResponse);
  // Get a list of available workflow types (Previously called workflow_user_types)
  rpc GetWorkflowTypes(GetWorkflowTypesRequest) returns (GetWorkflowTypesResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 10000;
    option (google.api.http) = {get: "/workflow-platform/v1/workflows/types"};
    option (doordash.api.endpoint) = {
      tier: T2
      lifecycle: DEV
      authorization: [DD_USER]
      role_based_authorization: {
        mode: ANY,
        roles: [
          "perm_support_workflow_configurator",
          "perm_support_workflow_configurator_view_only"
        ]
      }
      authentication_config: {enable_okta_verification: true}
      target_products: [INTERNAL]
      slo_config: {
        critical_alerts_enabled: false
        p99_latency: 3
      }
    };
  }
  // Get a list of the namespaces onboarded to the workflow platform. This call pulls contact information from Asset Service.
  rpc GetNamespaces(GetNamespacesRequest) returns (GetNamespacesResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 10000;
    option (google.api.http) = {get: "/workflow-platform/v1/namespaces"};
    option (doordash.api.endpoint) = {
      tier: T2
      lifecycle: DEV
      authorization: [DD_USER]
      role_based_authorization: {
        mode: ANY,
        roles: [
          "perm_support_workflow_configurator",
          "perm_support_workflow_configurator_view_only"
        ]
      }
      authentication_config: {enable_okta_verification: true}
      target_products: [INTERNAL]
      slo_config: {
        critical_alerts_enabled: false
        p99_latency: 3
      }
    };
  }
  // Get a list of workflow dependencies that are dependent on the given workflow
  rpc GetWorkflowJumpDependencyEntryForDestinationWorkflow(GetWorkflowJumpDependencyEntryForDestinationWorkflowRequest) returns (GetWorkflowJumpDependencyEntryForDestinationWorkflowResponse) {
    option (google.api.http) = {get: "/workflow-platform/v1/workflows/{workflow_id}/destinationDependencies"};
    option (doordash.api.endpoint) = {
      tier: T2
      lifecycle: PROD
      authorization: [DD_USER]
      role_based_authorization: {
        mode: ANY,
        roles: [
          "perm_support_workflow_configurator",
          "perm_support_workflow_configurator_view_only"
        ]
      }
      authentication_config: {enable_okta_verification: true}
      target_products: [INTERNAL]
      slo_config: {
        critical_alerts_enabled: false
        p99_latency: 3
      }
    };
  }
  // Get a list of workflow dependencies that the given workflow depends on
  rpc GetWorkflowJumpDependencyEntryForSourceWorkflow(GetWorkflowJumpDependencyEntryForSourceWorkflowRequest) returns (GetWorkflowJumpDependencyEntryForSourceWorkflowResponse) {
    option (google.api.http) = {get: "/workflow-platform/v1/workflows/{workflow_id}/sourceDependencies"};
    option (doordash.api.endpoint) = {
      tier: T2
      lifecycle: PROD
      authorization: [DD_USER]
      role_based_authorization: {
        mode: ANY,
        roles: [
          "perm_support_workflow_configurator",
          "perm_support_workflow_configurator_view_only"
        ]
      }
      authentication_config: {enable_okta_verification: true}
      target_products: [INTERNAL]
      slo_config: {
        critical_alerts_enabled: false
        p99_latency: 3
      }
    };
  }
  // Gets the list of all workflows that depends on the given automation and the count of automation instances
  rpc GetAllWorkflowsWithAutomation(GetAllWorkflowsWithAutomationRequest) returns (GetAllWorkflowsWithAutomationResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 10000;
    option (google.api.http) = {get: "/workflow-platform/v1/automations/{automation_name}/workflows"};
    option (doordash.api.endpoint) = {
      tier: T2
      lifecycle: DEV
      authorization: [DD_USER]
      role_based_authorization: {
        mode: ANY,
        roles: [
          "perm_support_workflow_configurator",
          "perm_support_workflow_configurator_view_only"
        ]
      }
      authentication_config: {enable_okta_verification: true}
      target_products: [INTERNAL]
      slo_config: {
        critical_alerts_enabled: false
        p99_latency: 3
      }
    };
  }
  // Get the list of automations in an given workflows and their occurrences in the workflow
  rpc GetAllAutomationsInWorkflow(GetAllAutomationsInWorkflowRequest) returns (GetAllAutomationsInWorkflowResponse);
  // this is for backwards compatibility to update existing workflows dependency information
  rpc UpdateAllWorkflowDependency(UpdateAllWorkflowDependencyRequest) returns (UpdateAllWorkflowDependencyResponse) {
    option (google.api.http) = {
      put: "/workflow-platform/v1/workflows/updateDependencies",
      body: "*"
    };
    option (doordash.api.endpoint) = {
      tier: T2
      lifecycle: DEV
      authorization: [DD_USER]
      role_based_authorization: {
        mode: ANY,
        roles: [
          "perm_support_workflow_configurator",
          "perm_support_workflow_configurator_view_only"
        ]
      }
      authentication_config: {enable_okta_verification: true}
      target_products: [INTERNAL]
      slo_config: {
        critical_alerts_enabled: false
        p99_latency: 3
      }
    };
  }
  // Get latest version of an Automation
  rpc GetAutomation(GetAutomationRequest) returns (GetAutomationResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 10000;
    option (google.api.http) = {get: "/workflow-platform/v1/automations/{library_name}"};
    option (doordash.api.endpoint) = {
      tier: T2
      lifecycle: DEV
      authorization: [DD_USER]
      role_based_authorization: {
        mode: ANY,
        roles: [
          "perm_support_workflow_configurator",
          "perm_support_workflow_configurator_view_only"
        ]
      }
      authentication_config: {enable_okta_verification: true}
      target_products: [INTERNAL]
      slo_config: {
        critical_alerts_enabled: false
        p99_latency: 3
      }
    };
  }
  // Get stubs for all registered Automations
  rpc ListAutomationStubs(ListAutomationStubsRequest) returns (ListAutomationStubsResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 10000;
    option (google.api.http) = {get: "/workflow-platform/v1/automations/stubs"};
    option (doordash.api.endpoint) = {
      tier: T2
      lifecycle: DEV
      authorization: [DD_USER]
      role_based_authorization: {
        mode: ANY,
        roles: [
          "perm_support_workflow_configurator",
          "perm_support_workflow_configurator_view_only"
        ]
      }
      authentication_config: {enable_okta_verification: true}
      target_products: [INTERNAL]
      slo_config: {
        critical_alerts_enabled: false
        p99_latency: 3
      }
    };
  }
  // Register or update an Automation
  rpc RegisterAutomation(RegisterAutomationRequest) returns (RegisterAutomationResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 10000;
    option (google.api.http) = {
      put: "/workflow-platform/v1/automations",
      body: "*"
    };
    option (doordash.api.endpoint) = {
      tier: T2
      lifecycle: DEV
      authorization: [DD_USER]
      role_based_authorization: {
        mode: ANY,
        roles: ["perm_support_workflow_configurator"]
      }
      authentication_config: {enable_okta_verification: true}
      target_products: [INTERNAL]
      slo_config: {
        critical_alerts_enabled: false
        p99_latency: 3
      }
    };
  }
  // Validate an automation config (POST request in order to have body on the request)
  rpc ValidateAutomationData(ValidateAutomationDataRequest) returns (ValidateAutomationDataResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 10000;
    option (google.api.http) = {
      post: "/workflow-platform/v1/automations/validation",
      body: "*"
    };
    option (doordash.api.endpoint) = {
      tier: T2
      lifecycle: DEV
      authorization: [DD_USER]
      role_based_authorization: {
        mode: ANY,
        roles: ["perm_support_workflow_configurator"]
      }
      authentication_config: {enable_okta_verification: true}
      target_products: [INTERNAL]
      slo_config: {
        critical_alerts_enabled: false
        p99_latency: 3
      }
    };
  }
  // Update an existing automation
  rpc UpdateAutomation(UpdateAutomationRequest) returns (UpdateAutomationResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 10000;
    option (google.api.http) = {
      put: "/workflow-platform/v1/automations/{automation_id}",
      body: "*"
    };
    option (doordash.api.endpoint) = {
      tier: T2
      lifecycle: DEV
      authorization: [DD_USER]
      role_based_authorization: {
        mode: ANY,
        roles: ["perm_support_workflow_configurator"]
      }
      authentication_config: {enable_okta_verification: true}
      target_products: [INTERNAL]
      slo_config: {
        critical_alerts_enabled: false
        p99_latency: 3
      }
    };
  }
  // Delete an automation -- THIS IS FOR TESTING PURPOSED DURING DEVELOPMENT
  rpc DeleteAutomation(DeleteAutomationRequest) returns (DeleteAutomationResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 10000;
    option (google.api.http) = {delete: "/workflow-platform/v1/automations/{automation_id}"};
    option (doordash.api.endpoint) = {
      tier: T2
      lifecycle: DEV
      authorization: [DD_USER]
      role_based_authorization: {
        mode: ANY,
        roles: ["perm_support_workflow_configurator"]
      }
      authentication_config: {enable_okta_verification: true}
      target_products: [INTERNAL]
      slo_config: {
        critical_alerts_enabled: false
        p99_latency: 3
      }
    };
  }
  // Executes an automation in isolation
  rpc ExecuteIsolatedAutomation(ExecuteIsolatedAutomationRequest) returns (ExecuteIsolatedAutomationResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 30000;
    option (google.api.http) = {
      post: "/workflow-platform/v1/automations/execute"
      body: "*"
    };
    option (doordash.api.endpoint) = {
      tier: T2
      lifecycle: DEV
      authorization: [
        DD_USER,
        CLIENT_TOKEN
      ]
      role_based_authorization: {
        mode: ANY,
        roles: [
          "perm_support_workflow_tool_access",
          "perm_risk_workstation"
        ]
      }
      authentication_config: {enable_okta_verification: true}
      target_products: [INTERNAL]
    };
  }

  // an API to migrate workflows to the updated workflow_config schema
  // this will migrate workflows in the list, including all of their versions.
  // migration logic will be noop if workflow and version already exist in the new tables
  rpc MigrateWorkflowConfigurations(MigrateWorkflowConfigurationsRequest) returns (MigrateWorkflowConfigurationsResponse);
  // api to create THQ rollout configuration for a workflow
  rpc CreateOrUpdateWorkflowThqRolloutConfiguration(CreateOrUpdateWorkflowThqRolloutConfigurationRequest) returns (CreateOrUpdateWorkflowThqRolloutConfigurationResponse);
  // api to get THQ rollout configuration for a workflow
  rpc GetWorkflowThqRolloutConfiguration(GetWorkflowThqRolloutConfigurationRequest) returns (GetWorkflowThqRolloutConfigurationResponse);
  // api to get THQ rollout configuration for all THQ configured workflows
  rpc GetAllWorkflowThqRolloutConfigurations(GetAllWorkflowThqRolloutConfigurationsRequest) returns (GetAllWorkflowThqRolloutConfigurationsResponse);
  // api to delete THQ rollout configuration for all THQ configured workflows
  rpc DeleteWorkflowThqRolloutConfiguration(DeleteWorkflowThqRolloutConfigurationRequest) returns (DeleteWorkflowThqRolloutConfigurationResponse);

  // api te get workflow_uuid by workflow_id. Note: This is only allowed for BE services that call workflow-platform (e.g. cnr-platform). No BFF should be calling this. Will throw ModelNotFound exception when workflow_id is not found.
  // If you're receiving workflow_id request from your client, then you CANNOT use this endpoint, even if you're a BE service.
  // In addition, workflow-platform will only allow certain BE services to call this. Reach out to #ask-workflow-platform-eng for more info.
  rpc GetWorkflowUuidByWorkflowId(GetWorkflowUuidByWorkflowIdRequest) returns (GetWorkflowUuidByWorkflowIdResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 10000;
    option (google.api.http) = {get: "/workflow-platform/v1/workflows/{workflow_id}/uuid"};
    option (doordash.api.endpoint) = {
      tier: T2
      lifecycle: DEV
      authorization: [DD_USER]
      role_based_authorization: {
        mode: ANY,
        roles: [
          "perm_support_workflow_configurator",
          "perm_support_workflow_configurator_view_only"
        ]
      }
      authentication_config: {enable_okta_verification: true}
      target_products: [INTERNAL]
      slo_config: {
        critical_alerts_enabled: false
        p99_latency: 3
      }
    };
  }

  // api to get list of workflow types information for list of workflows ids
  rpc GetWorkflowTypesByWorkflowIds(GetWorkflowTypesByWorkflowIdsRequest) returns (GetWorkflowTypesByWorkflowIdsResponse);

  // this Api will be used to get workflows based on workflow types if no filter is provided we will return all workflows
  rpc GetWorkflowsByWorkflowTypes(GetWorkflowsByWorkflowTypesRequest) returns (GetWorkflowsByWorkflowTypesResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 10000;
    option (google.api.http) = {get: "/workflow-platform/v2/workflows"};
    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: DEV
      authorization: [DD_USER]
      role_based_authorization: {
        mode: ANY,
        roles: [
          "perm_support_workflow_configurator",
          "perm_access_teammate_headquarters",
          "perm_risk_workstation"
        ]
      }
      authentication_config: {enable_okta_verification: true}
      target_products: [INTERNAL]
      slo_config: {
        critical_alerts_enabled: false
        p99_latency: 3
      }
    };
  }

  // Deletes the given changelog
  // Delete would be successful iff there is no reference to it. (e.g. no workflow_config_v2 entry is referencing it)
  rpc DeleteChangelog(DeleteChangelogRequest) returns (DeleteChangelogResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 10000;
    option (google.api.http) = {delete: "/workflow-platform/v1/changelogs/{changelog_uuid}"};
    option (doordash.api.endpoint) = {
      tier: T2
      lifecycle: DEV
      authorization: [DD_USER]
      role_based_authorization: {
        mode: ANY,
        roles: ["perm_support_workflow_configurator"]
      }
      authentication_config: {enable_okta_verification: true}
      target_products: [INTERNAL]
      slo_config: {
        critical_alerts_enabled: false
        p99_latency: 3
      }
    };
  }

  // Separate workflow execution endpoint intended for consumption by only the Workflow Playground feature. Contains
  // hard-checks for DoorTest tenancy
  rpc ExecuteWorkflowAsPlayground(ExecuteWorkflowAsPlaygroundRequest) returns (ExecuteWorkflowAsPlaygroundResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 300000; // 5min
    option (google.api.http) = {
      post: "/workflow-platform/v1/playground/workflows/run",
      body: "*"
    };
    option (doordash.api.endpoint) = {
      tier: T3
      lifecycle: TEST
      authorization: [DD_USER]
      role_based_authorization: {
        mode: ANY,
        roles: ["perm_support_workflow_configurator"]
      }
      authentication_config: {enable_okta_verification: true}
      target_products: [INTERNAL]
    };
  }

  // Async version of ExecuteContextBasedWorkflowV2
  rpc ExecuteContextBasedWorkflowAsync(ExecuteContextBasedWorkflowAsyncRequest) returns (ExecuteContextBasedWorkflowAsyncResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 60000;
  }
}

// name and url of a hyperlink
message HyperLink {
  // Name for display
  google.protobuf.StringValue name = 1;
  // URL
  google.protobuf.StringValue url = 2;
}

// delete changelog request
message DeleteChangelogRequest {
  // changelog_uuid
  google.protobuf.StringValue changelog_uuid = 1;
}

// delete changelog response
message DeleteChangelogResponse {
  // purposely left blank
}

// get workflow Types for workflow ids
message GetWorkflowTypesByWorkflowIdsRequest {
  // workflow_id. Using Int64 here for future-proofing.
  repeated google.protobuf.Int64Value workflow_ids = 1;
}

// response object for GetWorkflowTypesByWorkflowIds
message GetWorkflowTypesByWorkflowIdsResponse {
  // workflow_id. Using Int64 here for future-proofing.
  repeated WorkflowTypeConfig workflow_type_configs = 1;
}

// workflow type config for GetWorkflowTypesByWorkflowIds api
message WorkflowTypeConfig {
  // workflow_id. Using Int64 here for future-proofing.
  google.protobuf.Int64Value workflow_id = 1;
  // workflow type information
  google.protobuf.StringValue workflow_types = 2;
}

// get workflow_uuid by workflow_id request
message GetWorkflowUuidByWorkflowIdRequest {
  // workflow_id. Using Int64 here for future-proofing.
  google.protobuf.Int64Value workflow_id = 1;
}

// get workflow_uuid by workflow_id response
message GetWorkflowUuidByWorkflowIdResponse {
  // workflow_uuid
  google.protobuf.StringValue workflow_uuid = 1;
}

// workflow config migration request
message MigrateWorkflowConfigurationsRequest {
  repeated MigrationWorkflowConfig migration_workflow_configs = 1; // list of workflows to be migrated
}

// workflow config migration request. Using primitive types to simplify request payloads.
message MigrationWorkflowConfig {
  int32 workflow_id = 1;
  string start_version = 2; // optional. if not provided, will migrate from start e.g. "1.0"
  string end_version = 3; // optional. if not provided, will migrate to latest e.g. "3.0"
  bool force_migrate = 4; // optional. if true, will migrate even if workflow already exists in new tables
}

// workflow config migration response
message MigrateWorkflowConfigurationsResponse {
  // list of result; individually specifies if successful or not
  repeated WorkflowConfigMigrationResult migration_results = 1;
}

// migration result for each workflow and their versions.
message WorkflowConfigMigrationResult {
  google.protobuf.Int32Value workflow_id = 1;
  google.protobuf.StringValue workflow_version = 2;
  google.protobuf.BoolValue is_successful = 3;
  google.protobuf.StringValue migration_status = 4; // skipped, success, failed
  google.protobuf.StringValue error_message = 5; // populated if migration_status is failed
}

/*
 *  ===========================================
 *  ========== Node Execution Events ==========
 *  ===========================================
 */

// Request message for GetNodeWorkflowStepExecutionMetadata
message GetNodeWorkflowStepExecutionMetadataRequest {
  // workflow_step_metadata_uuid present in automation_log_entry linking the event to the list of metadata
  google.protobuf.StringValue workflow_step_metadata_uuid = 1;
}

// Result message for GetNodeWorkflowStepExecutionMetadata
message GetNodeWorkflowStepExecutionMetadataResponse {
  google.protobuf.Int64Value workflow_id = 1;
  google.protobuf.StringValue workflow_version = 2;
  google.protobuf.StringValue node_uuid = 3;
  google.protobuf.StringValue node_name = 4;
  google.protobuf.StringValue node_type = 5;
  google.protobuf.StringValue request_id = 6;
  google.protobuf.StringValue created_by = 7;
  google.protobuf.Timestamp created_at = 8;
  // a simple list of metadata type , key and value for each entry in the workflow_step_execution_metadata_entry table
  repeated experience_reliability_service.workflow_platform_api.WorkflowStepExecutionMetadata workflow_step_execution_metadata = 9;
}

// Request message for GetNodeExecutionEvents
message GetNodeExecutionEventsRequest {
  experience_reliability_service.workflow_platform_api.WorkflowContextV2 context = 1;
}

// Result message for GetNodeExecutionEvents
message GetNodeExecutionEventsResponse {
  repeated NodeExecutionEvent events = 1;
}

// This protobuf is closely tied to the row schema of our 'automation_log_entry' crdb table
message NodeExecutionEvent {
  google.protobuf.Int64Value workflow_id = 1;
  google.protobuf.StringValue request_id = 2;
  experience_reliability_service.workflow_platform_api.WorkflowContextV2 context = 3;
  google.protobuf.Timestamp created_at = 4;
  google.protobuf.StringValue node_uuid = 5;
  google.protobuf.StringValue node_library_name = 6;
  google.protobuf.StringValue node_display_name = 7;
  google.protobuf.StringValue node_type = 8;

  // Holds an actual result or an error_message. Will be empty for workflow jump nodes.
  experience_reliability_service.workflow_platform_api.NodeLibraryExecutionResult node_library_execution_result = 9;

  google.protobuf.StringValue workflow_name = 10;
  google.protobuf.Int64Value source_workflow_id = 11;
  google.protobuf.StringValue source_workflow_name = 12;
  // added these 4 columns as part of transparency v2
  // we will have the workflow version available when creating automation log entry this will use that information
  google.protobuf.StringValue workflow_version = 13;
  // customer always ask us who executed this step . this will provide us that details
  google.protobuf.Int64Value user_id = 14;
  // email id of the user executing this step  will can default to client_name if client do not pass user info
  google.protobuf.StringValue email_id = 15;
  // this will be the uuid linking each node execution event to the list of metadata related to it
  google.protobuf.StringValue workflow_step_metadata_uuid = 16;
  // this will be the new workflow type
  google.protobuf.StringValue workflow_type = 17;
  // this is the tenant_id under which the node execution event was executed
  google.protobuf.StringValue tenant_id = 18;
}

// Get the namespaces onboarded to the platform.
message GetNamespacesRequest {
  // Purposely left blank
}

// Response for GetNamespacesRequest
message GetNamespacesResponse {
  // Namespace information
  repeated Namespace namespaces = 1;
}

// Namespace of a client that hosts automations
message Namespace {
  google.protobuf.StringValue ddrn = 1;
  google.protobuf.StringValue name = 2;
  google.protobuf.StringValue slack_channel = 3;
}

// get workflow types request
message GetWorkflowTypesRequest {
  // purposely left blank
}

// get workflow types response
message GetWorkflowTypesResponse {
  repeated WorkflowType workflow_types = 1;
}

// represents a type of workflow (e.g. AGENT, CHAT, TEST_FRAMEWORK, etc.)
message WorkflowType {
  reserved 1;
  reserved "type"; // deprecated. Used to point to experience_reliability_service.workflow_platform_api.SupportWorkflowUserType

  // display name that is used by the clients
  google.protobuf.StringValue display_name = 2;

  // currently used as an id in the code. should be in format of
  google.protobuf.StringValue library_name = 3;
}

// record entry for workflow jump dependency
message WorkflowJumpDependencyEntry {
  // workflow Id from which the jump originates
  google.protobuf.Int64Value source_workflow_id = 1;
  // workflow name from which the jump originates
  google.protobuf.StringValue source_workflow_name = 2;
  // workflow jump node id from which the jump originates
  google.protobuf.StringValue source_node_uuid = 3;
  // workflow jump node name from which the jump originates
  google.protobuf.StringValue source_node_name = 4;
  // workflow jump node name from which the jump ends
  google.protobuf.Int64Value destination_workflow_id = 5;
  // workflow jump node name from which the jump ends
  google.protobuf.StringValue destination_node_uuid = 6;
  // created by
  google.protobuf.StringValue created_by = 7;
  // timestamp of record creation
  google.protobuf.Timestamp created_at = 8;
}

// request object to get workflow jump dependency entry for destination workflow
message GetWorkflowJumpDependencyEntryForDestinationWorkflowRequest {
  // workflowId of the workflow on which other workflows depend upon
  google.protobuf.Int64Value workflow_id = 1;
}

// response object for get workflow jump dependency entry destination workflow
message GetWorkflowJumpDependencyEntryForDestinationWorkflowResponse {
  repeated WorkflowJumpDependencyEntry workflow_jump_dependency_entries = 1;
}

// request object for get workflow jump dependency entry for source workflow
message GetWorkflowJumpDependencyEntryForSourceWorkflowRequest {
  // workflowId of the workflow for which we want to get all dependency information
  google.protobuf.Int64Value workflow_id = 1;
}

// request object to get workflow jump dependency entry for source workflow
message GetWorkflowJumpDependencyEntryForSourceWorkflowResponse {
  repeated WorkflowJumpDependencyEntry workflow_jump_dependency_entries = 1;
}

// record entry for workflow automation dependency
message WorkflowAutomationDependencyEntry {
  // workflow Id
  google.protobuf.Int64Value workflow_id = 1;
  // workflow version
  google.protobuf.StringValue workflow_version = 2;
  // workflow name
  google.protobuf.StringValue workflow_name = 3;
  // automation name
  google.protobuf.StringValue automation_name = 4;
  // automation type
  google.protobuf.StringValue automation_type = 5;
  // number of occurrence of the automation
  google.protobuf.Int64Value occurrence_count = 6;
  // created by
  google.protobuf.StringValue created_by = 7;
  // timestamp of record creation
  google.protobuf.Timestamp created_at = 8;
}

// Request object to get workflow automation dependency entry for given automation
message GetAllWorkflowsWithAutomationRequest {
  // Automation name
  google.protobuf.StringValue automation_name = 1;
}

// Response object of get workflow automation dependency entry for given automation
message GetAllWorkflowsWithAutomationResponse {
  // Automation dependency entry
  repeated WorkflowAutomationDependencyEntry workflow_automation_dependency_entries = 1;
}

// request object to get workflow automation dependency entry for given workflow
message GetAllAutomationsInWorkflowRequest {
  // workflow Id
  google.protobuf.Int64Value workflow_id = 1;
  // workflow version
  google.protobuf.StringValue workflow_version = 2;
}

// response object of get workflow automation dependency entry for given workflow
message GetAllAutomationsInWorkflowResponse {
  // automation dependency entry
  repeated WorkflowAutomationDependencyEntry workflow_automation_dependency_entries = 1;
}

// request object to update workflow automation and jump dependency entry for backward compatibility
message UpdateAllWorkflowDependencyRequest {
  // workflow Id
  google.protobuf.Int64Value workflow_id = 1;
  // workflow version
  google.protobuf.StringValue workflow_version = 2;
}

// response object to update workflow automation and jump dependency entry for backward compatibility
message UpdateAllWorkflowDependencyResponse {
  // automation dependency entry
  repeated WorkflowAutomationDependencyEntry workflow_automation_dependency_entries = 1;
  // workflow jump dependency
  repeated WorkflowJumpDependencyEntry workflow_jump_dependency_entries = 2;
}

// Configuration encapsulating the information needed to run a test on the framework.
// Other messages can add this if we want to be able to associate a test with them.
message TestFrameworkConfig {
  google.protobuf.StringValue parameter_workflow_id = 1;
  google.protobuf.Int32Value major_version = 4;
  google.protobuf.Int32Value minor_version = 5;
}

// Represents an Automation
message AutomationV2 {
  google.protobuf.StringValue uuid = 1;
  google.protobuf.StringValue library_name = 2;
  google.protobuf.StringValue display_name = 3;
  google.protobuf.StringValue description = 4;
  Namespace namespace = 5;
  google.protobuf.StringValue type = 6;
  google.protobuf.Int32Value major_version = 7;
  google.protobuf.Int32Value minor_version = 8;
  google.protobuf.BoolValue deprecated = 9;
  google.protobuf.StringValue changelog_uuid = 10;

  // Automation types each have their own set of configurations
  oneof config {
    CopyValueConfig copy_value = 11;
    ConsequenceConfig consequence = 12;
    SystemDecisionConfig system_decision = 13;
  }

  google.protobuf.Timestamp created_at = 14;
}

// Shortened version of the AutomationV2
message AutomationV2Stub {
  google.protobuf.StringValue uuid = 1;
  google.protobuf.StringValue library_name = 2;
  google.protobuf.StringValue display_name = 3;
  google.protobuf.StringValue description = 4;
  Namespace namespace = 5;
  google.protobuf.StringValue type = 6;
  google.protobuf.Int32Value major_version = 7;
  google.protobuf.Int32Value minor_version = 8;
  google.protobuf.BoolValue is_deprecated = 9;
  google.protobuf.Timestamp created_at = 10;
}

// Common characteristics of automations. Different from other 'config' fields because something like 'outputs'
// varies based on the type (Consequence has one, SystemDecision has many), but all these fields are automation level.
message AutomationV2Characteristics {
  // Related links
  repeated HyperLink related_links = 1;
  // Restricts this automation to only the specified workflows
  repeated google.protobuf.StringValue workflow_allow_list = 2;
  // Restricts this automation to only the listed workflow_types
  repeated google.protobuf.StringValue workflow_type_allow_list = 3;
  // Automations that must run before this one in a workflow. The ordering of nodes should
  // reflect the expected execution order
  repeated google.protobuf.StringValue automation_dependencies = 4;
  // Toggle step metadata information on an automation's execution events
  google.protobuf.BoolValue enable_log_step_metadata = 5;
  // Enable this automation for isolated execution.
  google.protobuf.BoolValue enable_isolated_execution = 6;
  // Enable this automation for context-based caching.
  google.protobuf.BoolValue enable_context_based_caching = 7;
}

// Represents an output from an automation node
message AutomationV2Output {
  google.protobuf.StringValue library_name = 1;
  google.protobuf.StringValue display_name = 2;
  google.protobuf.StringValue description = 3;
  repeated google.protobuf.StringValue output_contexts = 4;

  // Associates a framework test with this output (each edge should have its own test)
  TestFrameworkConfig test_metadata = 5;
}

// Represents an input argument to an automation node
message AutomationV2Argument {
  google.protobuf.StringValue library_name = 1;
  google.protobuf.StringValue display_name = 2;
  google.protobuf.StringValue description = 3;
  AutomationV2ArgumentType type = 4;
  repeated AutomationV2ArgumentValue values = 5;
}

// Represents the type of an argument
enum AutomationV2ArgumentType {
  // Unspecified type
  AUTOMATION_V2_ARGUMENT_TYPE_UNSPECIFIED = 0;
  // String type
  AUTOMATION_V2_ARGUMENT_TYPE_STRING = 1;
  // Number type
  AUTOMATION_V2_ARGUMENT_TYPE_NUMBER = 2;
  // Boolean type
  AUTOMATION_V2_ARGUMENT_TYPE_BOOLEAN = 3;
  // List type
  AUTOMATION_V2_ARGUMENT_TYPE_LIST = 4;
}

// Represents the value of an argument
message AutomationV2ArgumentValue {
  google.protobuf.StringValue library_name = 1;
  google.protobuf.StringValue display_name = 2;
}

// Configuration for a CopyValue automation
message CopyValueConfig {
  // Metadata regarding the characteristics of the automation
  AutomationV2Characteristics metadata = 1;
  // Input contexts
  repeated google.protobuf.StringValue input_contexts = 2;
  // Arguments
  repeated AutomationV2Argument arguments = 3;
  // Represents the 'Continue' output
  AutomationV2Output output = 4;
}

// Configuration for a Consequence automation
message ConsequenceConfig {
  // Metadata regarding the characteristics of the automation
  AutomationV2Characteristics metadata = 1;
  // Input contexts
  repeated google.protobuf.StringValue input_contexts = 2;
  // Arguments
  repeated AutomationV2Argument arguments = 3;
  // Represents the 'Continue' output
  AutomationV2Output output = 4;
}

// Configuration for a System Decision automation
message SystemDecisionConfig {
  // Metadata regarding the characteristics of the automation
  AutomationV2Characteristics metadata = 1;
  // Input contexts
  repeated google.protobuf.StringValue input_contexts = 2;
  // Arguments
  repeated AutomationV2Argument arguments = 3;
  // Output edges
  repeated AutomationV2Output outputs = 4;
}

// Request for registering a new automation
message RegisterAutomationRequest {
  // Automation to register
  AutomationV2 automation = 1;
  google.protobuf.Int64Value created_by_user_id = 2;
  google.protobuf.StringValue created_by_name = 3;
}

// Response for registering an automation
message RegisterAutomationResponse {
  // Whether registration was successful or not
  google.protobuf.BoolValue is_successful = 1;
}

// Request for validating an automation
message ValidateAutomationDataRequest {
  AutomationV2 automation = 1;
}

// Response for validating an automation
message ValidateAutomationDataResponse {
  bool is_valid = 1;
  repeated AutomationValidationMessage validation_messages = 2;
}

// Validation message type for automation validation
message AutomationValidationMessage {
  // Errors block publishing, warning is informational
  enum ValidationResultType {
    // Unspecified
    VALIDATION_RESULT_TYPE_UNSPECIFIED = 0;
    // Validation error
    VALIDATION_RESULT_TYPE_ERROR = 1;
    // Validation warning
    VALIDATION_RESULT_TYPE_WARNING = 2;
  }

  // Type of validation result
  ValidationResultType type = 1;
  // Key consumed by the UI to identify which form field has the error
  google.protobuf.StringValue key = 2;
  // Error or warning message text
  google.protobuf.StringValue text = 3;
}

// Request for updating an automation
message UpdateAutomationRequest {
  // Used to build the URL path. Must be on the request proto due to path params
  google.protobuf.StringValue automation_id = 1;
  // Description of the changes
  google.protobuf.StringValue changelog_description = 2;
  // Updated automation
  AutomationV2 automation = 3;
  // The user_id of the updater
  google.protobuf.Int64Value updated_by_user_id = 4;
  // The name of the updater
  google.protobuf.StringValue updated_by_name = 5;
}

// Response for updating an automation
message UpdateAutomationResponse {
  // Whether update was successful or not
  google.protobuf.BoolValue is_successful = 1;
}

// Delete an automation (to be removed after dev testing for automation registration)
message DeleteAutomationRequest {
  google.protobuf.StringValue automation_id = 1;
}

// Response for deleting an automation (to be removed after dev testing for automation registration)
message DeleteAutomationResponse {
  // Intentionally left blank
}

// Get stubbed version of all automations latest version
message ListAutomationStubsRequest {
  // Intentionally left blank
}

// Response for listing latest version of all automations
message ListAutomationStubsResponse {
  // Latest Automation V2s
  repeated AutomationV2Stub stubs = 1;
}

// Request for getting an automation. If version left blank, get latest.
message GetAutomationRequest {
  // Library name that uniquely identifies the automation
  google.protobuf.StringValue library_name = 1;
  // Major version
  google.protobuf.Int32Value major_version = 2;
  // Minor version
  google.protobuf.Int32Value minor_version = 3;
}

// Response for getting an automation
message GetAutomationResponse {
  // Automation V2
  AutomationV2 automation = 1;
}

// enumeration for type of DV or client to use for expression value
enum WorkflowRolloutDvType {
  // unspecified dv type
  WORKFLOW_ROLLOUT_DV_TYPE_UNSPECIFIED = 0;
  // dv1 type
  WORKFLOW_ROLLOUT_DV_TYPE_DV1 = 1;
  // dv2 type
  WORKFLOW_ROLLOUT_DV_TYPE_DV2 = 2;
  // perm role type
  WORKFLOW_ROLLOUT_DV_TYPE_PERM_ROLE = 3;
  // dvs client type
  WORKFLOW_ROLLOUT_DV_TYPE_DVS_CLIENT = 4;
}

// expression variable to find the name of the dv or role and its type
message RolloutExpressionVariable {
  // dv type enum can be dv1, dv2, perm roles, dvs client
  WorkflowRolloutDvType dv_type = 1;
  // name of the dv
  google.protobuf.StringValue name = 2;
  // override value
  google.protobuf.BoolValue override = 3;
  // to use not if the flag is true
  google.protobuf.BoolValue is_negation = 4;
}

// A binary expression to be use for AND
message WorkflowRolloutBinaryExpression {
  // left side of the expression
  RolloutExpressionVariable left_variable = 2;
  // right side of the expression
  RolloutExpressionVariable right_variable = 3;
}

// A unary boolean expression to be used for Or
message WorkflowRolloutUnaryExpression {
  // the unary expression
  RolloutExpressionVariable variable = 1;
}

// configuration that will be use by THQ to control list of rollout
message ThqWorkflowRolloutConfiguration {
  // workflow Id
  google.protobuf.StringValue workflow_id = 1;
  // uuid counterpart of workflow_id
  google.protobuf.StringValue workflow_uuid = 2;
  // Workflow Audience Type
  google.protobuf.StringValue audience_type = 3;
  // text to display on screen
  google.protobuf.StringValue text = 4;
  // list of all binary expression if any of the expression end up true we need to show the workflow in thq
  repeated WorkflowRolloutBinaryExpression binary_expressions = 5;
  // list of all unary expression if any of the expression end up true we need to show the workflow in thq
  repeated WorkflowRolloutUnaryExpression unary_expressions = 6;
  // workflow name
  google.protobuf.StringValue workflow_name = 7;
}

// request object for  CreateOrUpdateWorkflowTHQRolloutConfiguration rpc call
message CreateOrUpdateWorkflowThqRolloutConfigurationRequest {
  // thq Workflow Configuration
  ThqWorkflowRolloutConfiguration configuration = 1;
}

// response object for  CreateOrUpdateWorkflowTHQRolloutConfiguration rpc call
message CreateOrUpdateWorkflowThqRolloutConfigurationResponse {}

// request object for  GetWorkflowTHQRolloutConfiguration rpc call
message GetWorkflowThqRolloutConfigurationRequest {
  // workflow Id
  google.protobuf.StringValue workflow_id = 1;
}

// response object for  GetWorkflowTHQRolloutConfiguration rpc call
message GetWorkflowThqRolloutConfigurationResponse {
  // thq Workflow Configuration
  ThqWorkflowRolloutConfiguration configuration = 1;
}

// request object for GetWorkflowTHQRolloutConfiguration rpc call , no filter we will return all thq related configs
message GetAllWorkflowThqRolloutConfigurationsRequest {}

// response object for  GetWorkflowTHQRolloutConfiguration rpc call
message GetAllWorkflowThqRolloutConfigurationsResponse {
  // thq Workflow Configuration
  repeated ThqWorkflowRolloutConfiguration configuration = 1;
}

// request object for DeleteWorkflowTHQRolloutConfiguration rpc call
message DeleteWorkflowThqRolloutConfigurationRequest {
  // workflow Id
  google.protobuf.Int64Value workflow_id = 1;
}

// response object for DeleteWorkflowTHQRolloutConfiguration rpc call
message DeleteWorkflowThqRolloutConfigurationResponse {}

// Represents an MTR Resolution tag used in certain workflows to calculate mean-time-to-resolution (MTR)
enum MtrResolutionTag {
  // unspecified MTR resolution tag
  MTR_RESOLUTION_TAG_UNSPECIFIED = 0;
  // resolution_information tag
  MTR_RESOLUTION_TAG_RESOLUTION_INFORMATION = 1;
  // resolution_action tag
  MTR_RESOLUTION_TAG_RESOLUTION_ACTION = 2;
  // not_resolution tag
  MTR_RESOLUTION_TAG_NOT_RESOLUTION = 3;
}

// request object for GetWorkflowsByWorkflowTypes rpc
message GetWorkflowsByWorkflowTypesRequest {
  // workflow types filter
  repeated google.protobuf.StringValue workflow_types = 1;
}

// response object for GetWorkflowsByWorkflowTypes rpc
message GetWorkflowsByWorkflowTypesResponse {
  // list of workflows returned by the api
  repeated experience_reliability_service.workflow_platform_api.SupportWorkflow workflows = 1;
}

// Playground specific wrapper around workflow execution requests
message ExecuteWorkflowAsPlaygroundRequest {
  experience_reliability_service.workflow_platform_api.ExecuteContextBasedWorkflowV2Request v2_request = 1;
}

// Playground specific wrapper around workflow execution responses
message ExecuteWorkflowAsPlaygroundResponse {
  experience_reliability_service.workflow_platform_api.ExecuteContextBasedWorkflowV2Response v2_response = 1;
}

// request object for ExecuteContextBasedWorkflowAsync rpc
message ExecuteContextBasedWorkflowAsyncRequest {
  experience_reliability_service.workflow_platform_api.ExecuteContextBasedWorkflowV2Request v2_request = 1;
}

// response object for ExecuteContextBasedWorkflowAsync rpc
message ExecuteContextBasedWorkflowAsyncResponse {
  string workflow_request_id = 1;
}

// Request for executing an automation in isolation.
message ExecuteIsolatedAutomationRequest {
  // library_name of the automation.
  google.protobuf.StringValue automation_name = 1;
  // Session data that's passed between node executions. May need to provide if the automation reads from session_data.
  experience_reliability_service.workflow_platform_api.ExecuteWorkflowSessionData session_data = 2;
  // Current contexts within workflow execution.
  repeated experience_reliability_service.workflow_platform_api.WorkflowContextV2 contexts = 3;
  // Node's input arguments.
  repeated experience_reliability_service.workflow_platform_api.NodeArgumentValue arguments = 4;
  // Optional metadata from the client.
  experience_reliability_service.workflow_platform_api.ExecuteWorkflowRequestMetadata metadata = 5;
  // Map of CustomInputFieldValue mapped to the label name.
  map<string, experience_reliability_service.workflow_platform_api.CustomInputFieldValue> custom_input_field_values = 6;
}

// Response for executing an automation in isolation.
message ExecuteIsolatedAutomationResponse {
  // Name or library_name of the automation.
  google.protobuf.StringValue automation_name = 1;
  // Only system_decision and copy_value can have output.
  google.protobuf.StringValue output = 2;
  // Session data that's passed between node executions.
  experience_reliability_service.workflow_platform_api.ExecuteWorkflowSessionData session_data = 3;
  // Services are free to add contexts but should not modify existing ones.
  repeated experience_reliability_service.workflow_platform_api.WorkflowContextV2 contexts = 4;
  // Services are free to add the various information related to the step like error , output etc
  repeated experience_reliability_service.workflow_platform_api.WorkflowStepExecutionMetadata workflow_step_execution_metadata = 5;
}
