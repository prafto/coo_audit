syntax = "proto3";

package attestation_service.v1;

import "attestation-service/attestation.proto";
import "attestation-service/resolved_device_service.proto";
import "common/service_client_config.proto";
import "google/protobuf/wrappers.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.attestation";

// device service is a service managing devices.
service DeviceService {
  // Timeout after 700 milliseconds.
  option (service_client.client_config).response_attempt_timeout_millis = 700;
  // Make a total 4 attempts (initial + three retries).
  option (service_client.client_config).retry_config.max_attempts = 4;
  // Add RESOURCE_EXHAUSTED to the set of retriable codes.
  option (service_client.client_config).retry_config.do_retry_grpc_code = 8;
  // Break the circuit if the error rate exceeds 80%.
  option (service_client.client_config).circuit_breaker_config.failure_rate_threshold = 0.8;
  // Ignore NOT_FOUND from circuit breaker error rate calculation.
  option (service_client.client_config).circuit_breaker_config.do_ignore_grpc_code = 5;

  // GetDevice returns device entity given device id.
  rpc GetDevice(GetDeviceRequest) returns (GetDeviceResponse);

  // BanDevice bans the device based on a device id.
  rpc BanDevice(BanDeviceRequest) returns (BanDeviceResponse);

  // UnbanDevice unbans the device based on a device id.
  rpc UnbanDevice(UnbanDeviceRequest) returns (UnbanDeviceResponse);

  // GetUserResolvedDevice returns resolved device given fingerprints and user id
  rpc GetUserResolvedDevice(GetUserResolvedDeviceRequest) returns (GetUserResolvedDeviceResponse) {
    option deprecated = true;
  }
}

// BanType defines which App client is banned.
enum BanType {
  // UNKNOWN type
  BAN_TYPE_UNSPECIFIED = 0;
  // Cx
  BAN_TYPE_CX = 1;
  // Dx
  BAN_TYPE_DX = 2;
}

// platform
enum Platform {
  // unspecified
  PLATFORM_UNSPECIFIED = 0;
  // IOS
  PLATFORM_IOS = 1;
  // Android
  PLATFORM_ANDROID = 2;
  // Web
  PLATFORM_WEB = 3;
}

// experience type
enum ExperienceType {
  // unspecified
  EXPERIENCE_TYPE_UNSPECIFIED = 0;
  // cx
  EXPERIENCE_TYPE_CX = 1;
  // dx
  EXPERIENCE_TYPE_DX = 2;
  // mx
  EXPERIENCE_TYPE_MX = 3;
}

// Device entity
message Device {
  // dd device id
  string device_id = 1;
  // os name
  string os_name = 2;
  // os version
  string os_version = 3;
  // device model
  string device_model = 4;
  // app name
  string app_name = 5;
  // app version
  string app_version = 6;
  // banned Cx
  bool banned_cx = 7;
  // banned Dx
  bool banned_dx = 8;
  // banned cx last update time
  int64 banned_cx_last_update_time = 9;
  // banned dx last update time
  int64 banned_dx_last_update_time = 10;
  // created at
  int64 created_at = 11;
  // updated at
  int64 updated_at = 12;
  // last trusted attestation
  string last_trusted_attestation = 13;
  // last trusted at
  int64 last_trusted_at = 14;
  // last attestation
  string last_attestation = 15;
  // last attestation reason
  string last_attestation_reason = 16;
  // last attestation reasons
  repeated string last_attestation_reasons = 17;
  // user id
  string user_id = 18;
  // resolved device id
  string resolved_device_id = 19;
}

// resolved device
message ResolvedDevice {
  // deprecated
  option deprecated = true;
  // id
  string id = 1;
  // user id
  string user_id = 2;
}

// GetUserResolvedDeviceRequest
message GetUserResolvedDeviceRequest {
  // deprecated
  option deprecated = true;
  // reserved fields
  reserved 1, 2, 3;
  reserved "user_id", "fingerprints", "event_types";
}

// GetUserResolvedDeviceResponse
message GetUserResolvedDeviceResponse {
  // deprecated
  option deprecated = true;
  // reserved fields
  reserved 1;
  reserved "resolved_device";
}

// GetDeviceRequest
message GetDeviceRequest {
  // device_id
  string device_id = 1;
}

// GetDeviceResponse
message GetDeviceResponse {
  // device entity
  Device device = 1;
}

// BanDeviceRequest
message BanDeviceRequest {
  // device id
  string device_id = 1;
  // type default Cx
  BanType type = 2;
  // detail for updating corresponding resolved device
  BlocklistDetail detail = 3;
}

// BanDeviceResponse
message BanDeviceResponse {}

// UnbanDeviceRequest
message UnbanDeviceRequest {
  // device id
  string device_id = 1;
  // type default All
  BanType type = 2;
  // detail for corresponding resolved device
  BlocklistDetail detail = 3;
}

// UnbanDeviceResponse
message UnbanDeviceResponse {}
