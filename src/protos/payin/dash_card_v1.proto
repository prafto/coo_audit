syntax = "proto3";

package doordash.payin.dash_card.v1;

import "common/common.proto";
import "data_classification.v1/data_classification.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "payin/common_v1.proto";

option go_package = "github.com/doordash/services-protobuf/generated/payin/dash_card/v1";
option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.payin.dash_card.v1";

// DashCardApplicationData
message DashCardApplicationData {
  // // payer correlation ids -- currently only supporting dd_consumer_id
  doordash.payin.common.v1.PayerCorrelationIds payer_correlation_ids = 1;
  // first name of consumer
  google.protobuf.StringValue first_name = 2 [(data_classification.v1.data_classification).pii = true];
  // last name of consumer
  google.protobuf.StringValue last_name = 3 [(data_classification.v1.data_classification).pii = true];
  // email of consumer
  google.protobuf.StringValue email = 4 [(data_classification.v1.data_classification).pii = true];
  // international phone number of consumer
  google.protobuf.StringValue phone_number = 5 [(data_classification.v1.data_classification).pii = true];
  // address of consumer at the time of application
  .common.CommonAddress application_address = 6 [(data_classification.v1.data_classification).pii = true];
}

// DashCardApplicationAffiliateData needed for Chase
message DashCardApplicationAffiliateData {
  // Passed through for Chase used to track applications coming from affiliates
  google.protobuf.StringValue affiliate_id = 1;
  // Passed through for Chase used to track applications coming from affiliates
  google.protobuf.StringValue pv_id = 2;
  // Passed through for Chase used for offer/tracking data
  google.protobuf.StringValue source_id = 3;
  // Passed through for Chase used for market cell identifier
  google.protobuf.StringValue cell_id = 4;
  // Passed through for Chase used for partner tracking
  google.protobuf.StringValue cookie_id = 5;
}

// Offer that a Cx is prequalified for
message PreQualifiedOffer {
  // Name of product that cx is prequalified for. Maps to product_name (from Chase).
  google.protobuf.StringValue offer_product_name = 1;
  // Offer type code. Maps to Acquisition source code (from Chase).
  google.protobuf.StringValue offer_type_code = 2;
  // Offer id. (deprecated)
  google.protobuf.StringValue offer_id = 3;
  // Should this offer be confirmed?
  google.protobuf.BoolValue is_confirmation_required = 4;
  // Rewards Product Code (from Chase)
  google.protobuf.StringValue rewards_product_code = 5;
}

// Customer Profile.
message CustomerProfile {
  // Payer Correlation ID
  doordash.payin.common.v1.PayerCorrelationIds payer_correlation_ids = 1;
  // First name of consumer
  google.protobuf.StringValue first_name = 2 [(data_classification.v1.data_classification).pii = true];
  // Last name of consumer
  google.protobuf.StringValue last_name = 3 [(data_classification.v1.data_classification).pii = true];
  // Address of consumer
  .common.CommonAddress application_address = 4 [(data_classification.v1.data_classification).pii = true];
}

// DashCardApplicationStatus
enum DashCardApplicationStatus {
  // Unspecified
  DASH_CARD_APPLICATION_STATUS_UNSPECIFIED = 0;
  // Requested to apply for DashCard
  DASH_CARD_APPLICATION_STATUS_CREATED = 1;
  // Waiting for a decision from Chase on application status
  DASH_CARD_APPLICATION_STATUS_PENDING = 2;
  // Application is approved for DashCard
  DASH_CARD_APPLICATION_STATUS_APPROVED = 3;
  // No DashCard application found
  DASH_CARD_APPLICATION_STATUS_NOT_FOUND = 4;
}

// DashCardApplication Redirect Entry Points after application submitted
enum DashCardApplicationRedirectContext {
  // Unspecified
  DASH_CARD_APPLICATION_REDIRECT_CONTEXT_UNSPECIFIED = 0;
  // Redirect to Homepage
  DASH_CARD_APPLICATION_REDIRECT_CONTEXT_HOMEPAGE = 1;
  // Redirect to payment page
  DASH_CARD_APPLICATION_REDIRECT_CONTEXT_PAYMENT = 2;
}

// The type of benefit for DashCard
enum DashCardBenefitType {
  // Unspecified
  DASH_CARD_BENEFIT_TYPE_UNSPECIFIED = 0;
  // Free 1 year trial for secondary users
  DASH_CARD_BENEFIT_TYPE_DP_FREE_TRIAL_FOR_SECONDARY_USER = 1;
}

// Card holder status
enum CardHolderStatus {
  // Unspecified
  CARD_HOLDER_STATUS_UNSPECIFIED = 0;
  // Primary card holder
  CARD_HOLDER_STATUS_PRIMARY = 1;
  // Secondary card holder
  CARD_HOLDER_STATUS_SECONDARY = 2;
  // Cardholder is ineligible for primary or secondary
  CARD_HOLDER_STATUS_INELIGIBLE = 3;
}

// ProviderCardHolderStatus
message ProviderCardHolderStatus {
  // Payer reference ID
  google.protobuf.StringValue payer_reference_id = 1;

  // Payer reference ID type
  doordash.payin.common.v1.PayerReferenceIdType payer_reference_id_type = 2;

  // Provider customer ID
  google.protobuf.StringValue provider_customer_id = 3;

  // Provider code
  google.protobuf.StringValue provider_code = 4;

  // Card holder current status
  CardHolderStatus status = 5;

  // Card holder payment method ID
  google.protobuf.StringValue payment_method_id = 6;

  // created_at
  google.protobuf.Timestamp created_at = 7;

  // updated_at
  google.protobuf.Timestamp updated_at = 8;
}

// GetAssociatedCardHoldersByProviderCustomerId pair
message AssociatedCardHoldersWithProviderCustomerId {
  // provider customer id
  google.protobuf.StringValue provider_customer_id = 1;

  // card holder statuses
  repeated ProviderCardHolderStatus card_holder_statuses = 2;
}

// RewardBalanceRefundType
enum RewardBalanceRefundType {
  // If refund type not specified, default to reference cancel
  REWARD_BALANCE_REFUND_TYPE_UNSPECIFIED = 0;
  // Reference adjustment will refund thru an ETL job
  REWARD_BALANCE_REFUND_TYPE_REFERENCE_ADJUSTMENT = 1;
  // Reference cancel will directly call the cancellation endpoints
  REWARD_BALANCE_REFUND_TYPE_REFERENCE_CANCEL = 2;
  // Reverts an exisiting refund only if its in ETL and has not been reconciled
  REWARD_BALANCE_REFUND_TYPE_REFUND_CANCEL = 3;
}
