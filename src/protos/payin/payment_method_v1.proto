syntax = "proto3";

package doordash.payin.payment_method.v1;

import "google/protobuf/any.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "payin/common_v1.proto";

option go_package = "github.com/doordash/services-protobuf/generated/payin/payment_method/v1";
option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.payin.payment_method.v1";

/*
   PaymentMethod entity of payin service v1 APIs
*/
message PaymentMethod {
  // Unique identifier of this payment method
  google.protobuf.StringValue id = 1;

  // Id of the payer who owns this payment method
  google.protobuf.StringValue payer_id = 2;

  // Type of this payment method
  google.protobuf.StringValue type = 3;

  // Client reference Id of the payer who owns this payment method.
  // Used in combination of payer_reference_id_type
  google.protobuf.StringValue payer_reference_id = 4;

  // Type of payer_reference_id
  doordash.payin.common.v1.PayerReferenceIdType payer_reference_id_type = 5;

  // Id of legacy Stripe Card which this CartPayment was charged on, if applicable
  google.protobuf.Int64Value dd_stripe_card_id = 6;

  // Timestamp of when this payment method was created and associated to corresponding payer
  google.protobuf.Timestamp created_at = 7;

  // Timestamp of when this payment method was last updated
  google.protobuf.Timestamp updated_at = 8;

  // Timestamp of when this payment method was deleted
  google.protobuf.Timestamp deleted_at = 9;

  // Underlying card object of this payment method, if the payment method is card
  Card card = 10;

  // Billing details of this payment method
  BillingDetails billing_details = 11;

  // Underlying payment provider's payment method object details
  PaymentGatewayProviderDetails payment_gateway_provider_details = 12;

  // Metadata associated with this payment method
  google.protobuf.Struct metadata = 13;

  // An optional generic fingerprints of this payment method, which is provider agnostic
  GenericFingerprints generic_fingerprints = 14;

  // pgp details from onboarded multi-providers
  // e.g. If a payment method was onboarded to both Braintree and Stripe, there
  // will be 2 items in this list, one for Braintree and another one for Stripe
  repeated PaymentGatewayProviderDetails multi_pgp_details = 15;

  // Payment Method type, e.g. Venmo, PayPal or Card
  PaymentMethodType payment_method_type = 16;

  // PayPal Payment Method Details
  PayPalMethodDetails paypal_method_details = 17;

  // Venmo Payment Method Details
  VenmoMethodDetails venmo_method_details = 18;

  // Setup intent required action
  SetupIntentRequiredAction setup_intent_required_action = 19;

  // Payment method availability
  PaymentMethodAvailability payment_method_availability = 20;

  // payment method tag types assigned to this payment method
  repeated PaymentMethodTagType payment_method_tag_types = 21;
}

// WalletType
enum WalletType {
  // unspecified
  WALLET_TYPE_UNSPECIFIED = 0;
  // google pay
  WALLET_TYPE_GOOGLE_PAY = 1;
  // apple pay
  WALLET_TYPE_APPLE_PAY = 2;
  // samsung pay
  WALLET_TYPE_SAMSUNG_PAY = 3;
  // amex
  WALLET_TYPE_AMEX_EXPRESS_CHECKOUT = 4;
  // masterpass
  WALLET_TYPE_MASTERPASS = 5;
  // visa checkout
  WALLET_TYPE_VISA_CHECKOUT = 6;
  // android pay
  WALLET_TYPE_ANDROID_PAY = 7;
}

// Wallet
message Wallet {
  // wallet type
  WalletType type = 1;
  // dynamic last 4
  google.protobuf.StringValue dynamic_last4 = 2;
}

// Card Checks
message CardChecks {
  // address postal code check
  google.protobuf.StringValue address_postal_code_check = 1;
  // address line 1 check
  google.protobuf.StringValue address_line1_check = 2;
  // cvc check
  google.protobuf.StringValue cvc_check = 3;
}

// Card
message Card {
  // last 4
  google.protobuf.StringValue last4 = 1;
  // exp year
  google.protobuf.StringValue exp_year = 2;
  // exp month
  google.protobuf.StringValue exp_month = 3;
  // fingerprint
  google.protobuf.StringValue fingerprint = 4;
  // active
  google.protobuf.BoolValue active = 5;
  // country
  google.protobuf.StringValue country = 6;
  // brand
  google.protobuf.StringValue brand = 7;
  // iin
  google.protobuf.StringValue iin = 8;
  // wallet
  Wallet wallet = 9;
  // funding type
  google.protobuf.StringValue funding_type = 10;
  // is scanned
  google.protobuf.BoolValue is_scanned = 11;
  // card checks
  CardChecks checks = 12;
  // brand product
  google.protobuf.StringValue brand_product = 13;
  // 3DS supported
  google.protobuf.BoolValue three_d_secure_supported = 14;
}

// address
message Address {
  // postal_code
  google.protobuf.StringValue postal_code = 1;
}

// billing details
message BillingDetails {
  // address
  Address address = 1;
}

// PaymentGatewayProviderDetails
message PaymentGatewayProviderDetails {
  // pgp code of payment provider
  doordash.payin.common.v1.PgpCode payment_provider = 1;
  // payment method id
  google.protobuf.StringValue payment_method_id = 2;
  // customer id
  google.protobuf.StringValue customer_id = 3;
  // the corresponding pk of dd payment method detail entity.
  // as of 2021 Aug, this means str(PgpCard(StripeCard).id)
  google.protobuf.StringValue dd_pgp_entity_id = 4;
  // an optional fingerprint
  // - vended by a specific payment provider (Stripe, Braintree, ...)
  // - make a payment method uniquely identifiable within the same payment provider scope
  google.protobuf.StringValue fingerprint = 5;
}

/*
   Represents a set of fingerprints
   - vended by generic payment method tokenizers
   - these fingerprints are payment gateway agnostic
   - can be used to uniquely identify a payment method onboarded through corresponding tokenizer
*/
message GenericFingerprints {
  // vgs fingerprint
  google.protobuf.StringValue vgs_fingerprint = 1;
}

// paypal method details
message PayPalMethodDetails {
  // paypal payer id
  google.protobuf.StringValue paypal_payer_id = 1;
  // paypal account id
  google.protobuf.StringValue paypal_account = 2;
}

// venmo method details
message VenmoMethodDetails {
  // venmo username
  google.protobuf.StringValue venmo_username = 1;
  // venmo user id
  google.protobuf.StringValue venmo_user_id = 2;
}

// Setup intent required action
message SetupIntentRequiredAction {
  // client secret
  google.protobuf.StringValue client_secret = 1;
  // status
  doordash.payin.common.v1.IntentStatus status = 2;
}

// payment method availability status enum
enum PaymentMethodAvailabilityStatus {
  // unknown
  PAYMENT_METHOD_AVAILABILITY_STATUS_UNSPECIFIED = 0;
  // status ok
  PAYMENT_METHOD_AVAILABILITY_STATUS_OK = 1;
  // status degraded
  PAYMENT_METHOD_AVAILABILITY_STATUS_DEGRADED = 2;
  // status down
  PAYMENT_METHOD_AVAILABILITY_STATUS_DOWN = 3;
}

// Payment method availability
message PaymentMethodAvailability {
  // payment method availability status
  PaymentMethodAvailabilityStatus payment_method_availability_status = 1;
}

// payment method type, @see also enum PaymentMethodType in payin_payment_method.proto
enum PaymentMethodType {
  // unknown
  PAYMENT_METHOD_TYPE_UNSPECIFIED = 0;
  // card
  PAYMENT_METHOD_TYPE_CARD = 1;
  // paypal
  PAYMENT_METHOD_TYPE_PAYPAL = 2;
  // venmo
  PAYMENT_METHOD_TYPE_VENMO = 3;
  // afterpay
  PAYMENT_METHOD_TYPE_AFTERPAY = 4;
  // apple pay
  PAYMENT_METHOD_TYPE_APPLE_PAY = 5;
  // google pay
  PAYMENT_METHOD_TYPE_GOOGLE_PAY = 6;
  // EBT
  PAYMENT_METHOD_TYPE_EBT = 7;
  // cashapp
  PAYMENT_METHOD_TYPE_CASHAPP = 8;
  // HSA/FSA
  PAYMENT_METHOD_TYPE_HSA_FSA = 9;
  // klarna
  PAYMENT_METHOD_TYPE_KLARNA = 10;
  // ach
  PAYMENT_METHOD_TYPE_ACH = 11;
}

// tag types that the payer can set on their payment methods
enum PaymentMethodTagType {
  // unknown
  PAYMENT_METHOD_TAG_TYPE_UNSPECIFIED = 0;
  // business payment method tag
  PAYMENT_METHOD_TAG_TYPE_BUSINESS = 1;
}
