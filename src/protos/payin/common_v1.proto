syntax = "proto3";

package doordash.payin.common.v1;

import "data_classification.v1/data_classification.proto";
import "google/protobuf/wrappers.proto";

option go_package = "github.com/doordash/services-protobuf/generated/payin/common/v1";
option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.payin.common.v1";

// Currency
enum Currency {
  option allow_alias = true;
  // unknown
  _unknown_currency = 0;

  // usd
  usd = 1;
  // USD
  USD = 1;

  // cad
  cad = 2;
  // CAD
  CAD = 2;

  // aud
  aud = 3;
  // AUD
  AUD = 3;

  // jpy
  jpy = 4;
  // JPY
  JPY = 4;

  // mxn
  mxn = 5;
  // MXN
  MXN = 5;

  // eur
  eur = 6;
  // EUR
  EUR = 6;

  // nzd
  nzd = 7;
  // nzd
  NZD = 7;
}

// Country
enum Country {
  // unknown
  _UNKNOWN_COUNTRY = 0;
  // usa
  US = 1;
  // canada
  CA = 2;
  // australia
  AU = 3;
  // japan
  JP = 4;
  // mexico
  MX = 5;
  // puerto rico
  PR = 6;
  // germany
  DE = 7;
  // new zealand
  NZ = 8;
}

// Experience
enum Experience {
  // EXPERIENCE_UNSPECIFIED
  EXPERIENCE_UNSPECIFIED = 0;
  // EXPERIENCE_DOORDASH
  EXPERIENCE_DOORDASH = 1;
  // EXPERIENCE_CAVIAR
  EXPERIENCE_CAVIAR = 2;
  // EXPERIENCE_STOREFRONT
  EXPERIENCE_STOREFRONT = 3;
  // EXPERIENCE_WHITE_LABELED
  EXPERIENCE_WHITE_LABELED = 4;
  //EXPERIENCE_VOICE
  EXPERIENCE_VOICE = 5;
  //EXPERIENCE_BBOT
  EXPERIENCE_BBOT = 6;
}

// PgpCode
enum PgpCode {
  // UKNOWN PGP CODE
  _unknown_pgp = 0;
  // Stripe
  stripe = 1;
  // Paypal
  paypal = 2;
  // Braintree
  braintree = 3;
  // JPM
  jpm = 4;
  // Fiserv
  fiserv = 5;
  // Forage
  forage = 6;
  // Fiserv Connect Pay
  fiserv_connect_pay = 7;
}

// TokenizationProvider
enum TokenizationProvider {
  // Unspecified
  TOKENIZATION_PROVIDER_UNSPECIFIED = 0;
  // Stripe
  TOKENIZATION_PROVIDER_STRIPE = 1;
  // Vgs
  TOKENIZATION_PROVIDER_VGS = 2;
  // Braintree
  TOKENIZATION_PROVIDER_BRAINTREE = 3;
  // Vgs Payment
  TOKENIZATION_PROVIDER_VGS_PAYMENT = 4;
}

// PayerData
message PayerData {
  // email
  google.protobuf.StringValue email = 1 [(data_classification.v1.data_classification).pii = true];
  // country
  Country country = 2 [(data_classification.v1.data_classification).pii = true];
  // first_name
  google.protobuf.StringValue first_name = 3 [(data_classification.v1.data_classification).pii = true];
  // last_name
  google.protobuf.StringValue last_name = 4 [(data_classification.v1.data_classification).pii = true];
  // Experience like Doordash, caviar etc
  Experience experience = 5;
}

// Payment Method Token
message PaymentMethodToken {
  // token TODO is it a single token encapsulating the card??
  google.protobuf.StringValue token = 1;
  // pgp_code
  PgpCode pgp_code = 2;
}

// Represents a Card
message CardData {
  // Tokenization provider used
  TokenizationProvider tokenization_provider = 1;
  // Depending on the tokenization provider, one should be specified.
  oneof card {
    // This should be specified if TokenizationProvider == STRIPE
    TokenizedCardData tokenized_card_details = 2;
    // This should be specified if TokenizationProvider == VGS
    ItemizedCardData itemized_card_details = 3;
  }
}

// Represents card data wrapped a single token
message TokenizedCardData {
  // Token
  google.protobuf.StringValue token = 1;
}

// Represents card data where piece of data is itemized (and potentially tokenized)
message ItemizedCardData {
  // Card number
  google.protobuf.StringValue number = 1;
  // CVV
  google.protobuf.StringValue cvv = 2;
  // Expiration Month
  google.protobuf.Int32Value exp_month = 3;
  // Expiration Year
  google.protobuf.Int32Value exp_year = 4;
  // Billing Zip Code
  google.protobuf.StringValue zip = 5;
  // Card iin
  google.protobuf.StringValue iin = 6;
  // Card Last 4
  google.protobuf.StringValue last4 = 7;
  // Card addresss line 1
  google.protobuf.StringValue addressline1 = 8 [(data_classification.v1.data_classification).pii = true];
  // Card addresss line 2 (i.e. apartment etc.)
  google.protobuf.StringValue addressline2 = 9 [(data_classification.v1.data_classification).pii = true];
  // Card addresss city
  google.protobuf.StringValue city = 10 [(data_classification.v1.data_classification).pii = true];
  // Card address state
  google.protobuf.StringValue state = 11 [(data_classification.v1.data_classification).pii = true];
}

// Provider SDK parameters
message ProviderSdkConfig {
  // Environment for SDK
  google.protobuf.StringValue environment = 1;
  // Public key for provider SDK
  google.protobuf.StringValue key = 2;
  // Country
  Country country = 3;
  // Optional. account id for which this payment method config is associated with, i.e. paypal merchant account id
  google.protobuf.StringValue account_id = 4;
}

/*
   Types that specifies the role of payer

   Note: all enum members are lower cased to align with payment service pydantic definitions
*/
enum PayerReferenceIdType {
  // unknown
  _unknown_payer_reference_type = 0;
  // dd consumer id
  dd_consumer_id = 1;
  // legacy dd stripe customer id
  legacy_dd_stripe_customer_id = 2;
  // dd drive store id
  dd_drive_store_id = 3;
  // dd drive merchant id
  dd_drive_merchant_id = 4;
  // dd drive business id
  dd_drive_business_id = 5;
  // dd stripe customer id
  stripe_customer_id = 6;
  // payer id
  payer_id = 7;
  // dd payout_account_id
  dd_payout_account_id = 8;
  // dd user_id
  dd_user_id = 9;
  // pos guest consumer id
  pos_guest_consumer_id = 10;
}

/*
   DoorDash external reference id for Payer
*/
message PayerCorrelationIds {
  // payer reference id
  google.protobuf.StringValue payer_reference_id = 1;
  // payer reference id type
  PayerReferenceIdType payer_reference_id_type = 2;
}

/*
   Provider Reference Id Type Enum that specifies type of id from provider
*/
enum ProviderReferenceIdType {
  // unknown
  _unknown_provider_reference_id_type = 0;
  // resource id
  RESOURCE_ID = 1;
  // charge resource id
  CHARGE_RESOURCE_ID = 2;
}

/*
   Provider Correlation Ids to map to internal payment objects
*/
message ProviderCorrelationIds {
  // provider reference id
  google.protobuf.StringValue provider_reference_id = 1;
  // provider reference id type
  ProviderReferenceIdType provider_reference_id_type = 2;
}

/*
   Intent Status
*/
enum IntentStatus {
  // unknown
  _unknown_intent_status = 0;
  // NEW
  NEW = 1;
  // INIT
  INIT = 2;
  // PENDING
  PENDING = 3;
  // PROCESSING
  PROCESSING = 4;
  // REQUIRES_CAPTURE
  REQUIRES_CAPTURE = 5;
  // REQUIRES_ACTION
  REQUIRES_ACTION = 6;
  // REQUIRES_CONFIRMATION
  REQUIRES_CONFIRMATION = 7;
  // CAPTURE_FAILED
  CAPTURE_FAILED = 8;
  // CAPTURING
  CAPTURING = 9;
  // SUCCEEDED
  SUCCEEDED = 10;
  // FAILED
  FAILED = 11;
  // CANCELLED
  CANCELLED = 12;
}

// Platforms supported
enum Platform {
  // Unknown
  PLATFORM_UNKNOWN = 0;
  // iOS
  PLATFORM_IOS = 1;
  // Android
  PLATFORM_ANDROID = 2;
  // Web
  PLATFORM_WEB = 3;
}

// CorrelationIds
message CorrelationIds {
  // reference id
  google.protobuf.StringValue reference_id = 1;
  // reference id type
  google.protobuf.StringValue reference_id_type = 2;
}

// PaymentFrequency
enum PaymentFrequency {
  // unknown
  _unknown_payment_frequency = 0;
  // per order
  PER_ORDER = 1;
  // daily
  DAILY = 2;
}
