syntax = "proto3";

package dasher_financial.v1;

import "common/money.proto";
import "common/service_client_config.proto";
import "doordash.api/annotations.proto";
import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option go_package = "github.com/doordash/services-protobuf/generated/dasher_financial/api/v1";
option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.dasher_financial.rpc.api";

/**
 * DasherFinancialService provides the payout gRPC endpoints.
 */
service DasherFinancialService {
  option (service_client.client_config).service_name = "dasher-financial-service";

  // gRPC endpoint for getting payout config
  rpc GetPayoutConfig(GetPayoutConfigRequest) returns (GetPayoutConfigResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 1000;
  }

  // gRPC endpoint for getting dasher payouts
  rpc GetDasherPayouts(GetDasherPayoutsRequest) returns (GetDasherPayoutsResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 1000;
  }

  // gRPC endpoint for getting dasher instant payouts status
  rpc GetDasherInstantPayoutsStatus(GetDasherInstantPayoutsStatusRequest) returns (GetDasherInstantPayoutsStatusResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 1000;
  }

  // gRPC endpoint for activating notifications
  rpc ActivateNotification(ActivateNotificationRequest) returns (ActivateNotificationResponse);

  // gRPC endpoint for expiring notifications
  rpc ExpireNotification(ExpireNotificationRequest) returns (ExpireNotificationResponse);

  // gRPC endpoint for upserting dasher KYC notification
  rpc UpsertDasherKYCNotification(UpsertDasherKYCNotificationRequest) returns (UpsertDasherKYCNotificationResponse);
}

// Request to get payout config
message GetPayoutConfigRequest {
  // Dasher id
  google.protobuf.Int64Value dasher_id = 1;
  // The latitude of the dasher
  google.protobuf.DoubleValue lat = 2;
  // The longitude of the dasher
  google.protobuf.DoubleValue lng = 3;
}

// Response for GetPayoutConfig
message GetPayoutConfigResponse {
  // Whether to show the fastpay cashout button
  google.protobuf.BoolValue should_show_fastpay_cashout_button = 1;
  // TODO remove shouldShowDasherDebit when all dashers have updated versions of client that don't depend on this
  // Whether to show the dasher debit button
  google.protobuf.BoolValue should_show_dasher_debit = 2;
  // The format of the earnings breakdown
  EarningsBreakdownFormat earnings_breakdown_format = 3;
  // The URL to the payout method
  google.protobuf.StringValue payout_method_url = 4;
  // Embedded CTAs
  repeated EmbeddedCta embedded_ctas = 5;
  // Footer CTAs
  repeated FooterCta footer_ctas = 6;
  // Menu tiles
  repeated MenuTile header_menu_tiles = 7;
  // Payout hub header menu tiles
  repeated MenuTile payout_hub_header_menu_tiles = 8;
  // Application tile
  MenuTile application_tile = 9;
}

// Request to get dasher payouts
message GetDasherPayoutsRequest {
  // Dasher id
  google.protobuf.Int64Value dasher_id = 1;
  // Get first failed or first entry
  google.protobuf.BoolValue get_first_failed_or_first_entry = 2;
}

// Response for GetDasherPayouts
message GetDasherPayoutsResponse {
  // Payouts
  repeated Payout payouts = 1;
}

// Request to get dasher instant payouts status
message GetDasherInstantPayoutsStatusRequest {
  // Dasher id
  google.protobuf.Int64Value dasher_id = 1;
}

// Response for get dasher instant payouts status
message GetDasherInstantPayoutsStatusResponse {
  // The eligibility status
  google.protobuf.StringValue status = 1;
  // Instant pay fee monetary fields
  money.MonetaryFields instant_pay_fee_monetary_fields = 2;
  // Balance monetary fields
  money.MonetaryFields balance_monetary_fields = 3;
  // Transfer total monetary fields
  money.MonetaryFields transfer_total_monetary_fields = 4;
  // The reason
  google.protobuf.StringValue reason = 5;
  // Instant pay fee
  google.protobuf.Int64Value instant_pay_fee = 6;
  // The balance
  google.protobuf.Int64Value balance = 7;
  // Transfer total
  google.protobuf.Int64Value transfer_total = 8;
  // The array of payout cards changed
  repeated PayoutMethodCard cards_changed = 9;
  // The available at
  google.protobuf.StringValue available_at = 10;
}

// Embedded cta
message EmbeddedCta {
  // Id
  google.protobuf.StringValue id = 1;
  // Title
  google.protobuf.StringValue title = 2;
  // Type
  google.protobuf.StringValue type = 3;
  // Body
  google.protobuf.StringValue body = 4;
  // Style
  Style style = 5;
  // Embedded cta action
  EmbeddedCtaAction action = 6;
  // Embedded cta secondary action
  EmbeddedCtaAction secondary_action = 7;
  // Whether the embedded cta is dismissable
  google.protobuf.BoolValue is_dismissable = 8;
  // Progress
  google.protobuf.DoubleValue progress = 9;
  // Icon URL
  google.protobuf.StringValue icon_url = 10;
  // Target
  google.protobuf.StringValue target = 11;
  // Current
  google.protobuf.StringValue current = 12;
  // Leading icon
  google.protobuf.StringValue leading_icon = 13;
}

// Footer cta
message FooterCta {
  // Body
  google.protobuf.StringValue body = 1;
  // Tags
  repeated Tag tags = 2;
  // Footer cta action
  FooterCtaAction action = 3;
}

// Tag
message Tag {
  // Text
  google.protobuf.StringValue text = 1;
  // Style
  Style style = 2;
}

// Embedded cta action
message EmbeddedCtaAction {
  // Cta action type
  CtaActionType type = 1;
  // Target
  google.protobuf.StringValue target = 2;
  // Text
  google.protobuf.StringValue text = 3;
  // Dismiss text
  google.protobuf.StringValue dismiss_text = 4;
}

// Footer cta action
message FooterCtaAction {
  // Cta action type
  CtaActionType type = 1;
  // Target
  google.protobuf.StringValue target = 2;
}

// Menu tile
message MenuTile {
  // Title
  google.protobuf.StringValue title = 1;
  // Subtitle
  google.protobuf.StringValue subtitle = 2;
  // Menu button target type
  MenuButtonTargetType target_type = 3;
  // Target id
  google.protobuf.StringValue target_id = 4;
  // Tag
  Tag tag = 5;
}

// Style
enum Style {
  // Unspecified
  STYLE_UNSPECIFIED = 0;
  // Default
  STYLE_DEFAULT = 1;
  // Warning
  STYLE_WARNING = 2;
  // Highlight
  STYLE_HIGHLIGHT = 3;
  // Informational
  STYLE_INFORMATIONAL = 4;
  // Positive
  STYLE_POSITIVE = 5;
  // Negative
  STYLE_NEGATIVE = 6;
}

// Cta action type
enum CtaActionType {
  // Unspecified
  CTA_ACTION_TYPE_UNSPECIFIED = 0;
  // Deeplink
  CTA_ACTION_TYPE_DEEPLINK = 1;
  // Webview
  CTA_ACTION_TYPE_WEBVIEW = 2;
  // Toggle
  CTA_ACTION_TYPE_TOGGLE = 3;
  // Copy
  CTA_ACTION_TYPE_COPY = 4;
}

// Earnings breakdown format
enum EarningsBreakdownFormat {
  // Unspecified
  EARNINGS_BREAKDOWN_FORMAT_UNSPECIFIED = 0;
  // Daily
  EARNINGS_BREAKDOWN_FORMAT_DAILY = 1;
  // Weekly
  EARNINGS_BREAKDOWN_FORMAT_WEEKLY = 2;
}

// Menu button target type
enum MenuButtonTargetType {
  // Unspecified
  MENU_BUTTON_TARGET_TYPE_UNSPECIFIED = 0;
  // Loan
  MENU_BUTTON_TARGET_TYPE_LOAN = 1;
  // Dasher Direct
  MENU_BUTTON_TARGET_TYPE_DXDR_PAYFARE = 2;
  // Dasher Direct FISERV
  MENU_BUTTON_TARGET_TYPE_DXDR_FISERV = 3;
  // Earnings statement
  MENU_BUTTON_TARGET_TYPE_EARNINGS_STATEMENT = 4;
  // Payout history
  MENU_BUTTON_TARGET_TYPE_PAYOUT_HISTORY = 5;
  // Fast pay cash out
  MENU_BUTTON_TARGET_TYPE_FAST_PAY_CASH_OUT = 6;
  // Webview
  MENU_BUTTON_TARGET_TYPE_WEBVIEW = 7;
  // Tax document
  MENU_BUTTON_TARGET_TYPE_TAX_DOCUMENT = 8;
}

// Payout
message Payout {
  // Id
  google.protobuf.StringValue id = 1;
  // Deposited to
  google.protobuf.StringValue deposited_to = 2;
  // Initiated
  google.protobuf.Timestamp initiated = 3;
  // Payout issue info
  PayoutIssueInfo payout_issue_info = 4;
  // On
  google.protobuf.Timestamp on = 5;
  // Payout period
  PayoutPeriod payout_period = 6;
  // Status
  google.protobuf.StringValue status = 7;
  // Payout type
  google.protobuf.StringValue payout_type = 8;
  // Monetary fields
  money.MonetaryFields monetary_fields = 9;
}

// Payout issue info
message PayoutIssueInfo {
  // Description
  google.protobuf.StringValue description = 1;
  // Type
  google.protobuf.StringValue type = 2;
}

// Payout period
message PayoutPeriod {
  // start
  google.protobuf.Timestamp start = 1;
  // end
  google.protobuf.Timestamp end = 2;
}

// Payout method card
message PayoutMethodCard {
  // The id
  google.protobuf.StringValue id = 1;
  // Type of payout_method: bank_account, card
  google.protobuf.StringValue type = 2;
  // Unique id of the associated payout account
  google.protobuf.Int64Value payout_account_id = 3;
  // country with the payout method
  google.protobuf.StringValue country = 4;
  // currency with the payout method
  google.protobuf.StringValue currency = 5;
  // Timestamp of when this entity was created
  google.protobuf.Timestamp created_at = 6;
  // Timestamp of when this entity was last updated
  google.protobuf.Timestamp updated_at = 7;
  // Timestamp of when this entity was deleted
  google.protobuf.Timestamp deleted_at = 8;
  // The stripe card id
  google.protobuf.StringValue stripe_card_id = 9;
  // The last 4 digits of the card
  google.protobuf.StringValue last4 = 10;
  // The brand
  google.protobuf.StringValue brand = 11;
  // Whether is default
  google.protobuf.BoolValue is_default = 12;
  // The expiration month
  google.protobuf.Int32Value exp_month = 13;
  // The expiration year
  google.protobuf.Int32Value exp_year = 14;
  // The fingerprint
  google.protobuf.StringValue fingerprint = 15;
  // The token
  google.protobuf.StringValue token = 16;
}

// Activate Notification Request
message ActivateNotificationRequest {
  // Dasher Id
  google.protobuf.Int64Value dasher_id = 1;
  // Notification Type
  NotificationType notification_type = 2;
}

// Activate Notification Response
message ActivateNotificationResponse {}

// Expire Notification Request
message ExpireNotificationRequest {
  // Dasher Id
  google.protobuf.Int64Value dasher_id = 1;
  // Notification Type
  NotificationType notification_type = 2;
}

// Expire Notification Response
message ExpireNotificationResponse {}

// Enum for Notification Type
enum NotificationType {
  // Unspecified
  NOTIFICATION_TYPE_UNSPECIFIED = 0;
  // Bank Error Inbox
  NOTIFICATION_TYPE_BANK_ERROR_INBOX = 1;
  // Bank Error Full Screen with Menu
  NOTIFICATION_TYPE_BANK_ERROR_FULL_SCREEN_WITH_MENU = 2;
  // Stripe KYC Inbox
  NOTIFICATION_TYPE_STRIPE_KYC_INBOX = 3;
  // Stripe KYC Initial Full Screen
  NOTIFICATION_TYPE_STRIPE_KYC_INITIAL_FULL_SCREEN = 4;
  // Stripe KYC Initial Full Screen with Menu
  NOTIFICATION_TYPE_STRIPE_KYC_INITIAL_FULL_SCREEN_WITH_MENU = 5;
  // Stripe KYC Pending Full Screen
  NOTIFICATION_TYPE_STRIPE_KYC_PENDING_FULL_SCREEN = 6;
  // Stripe KYC Pending Full Screen with Menu
  NOTIFICATION_TYPE_STRIPE_KYC_PENDING_FULL_SCREEN_WITH_MENU = 7;
  // Stripe KYC Failed Full Screen
  NOTIFICATION_TYPE_STRIPE_KYC_FAILED_FULL_SCREEN = 8;
  // Stripe KYC Failed Full Screen with Menu
  NOTIFICATION_TYPE_STRIPE_KYC_FAILED_FULL_SCREEN_WITH_MENU = 9;
}

// Enum for Verification Status
enum VerificationStatus {
  // Unspecified
  VERIFICATION_STATUS_UNSPECIFIED = 0;
  // Blocked
  VERIFICATION_STATUS_BLOCKED = 1;
  // Pending
  VERIFICATION_STATUS_PENDING = 2;
  // Verified
  VERIFICATION_STATUS_VERIFIED = 3;
  // Fields Required
  VERIFICATION_STATUS_FIELDS_REQUIRED = 4;
}

// UpsertDasherKYCNotification Request
message UpsertDasherKYCNotificationRequest {
  // Dasher id
  google.protobuf.Int64Value dasher_id = 1;
  // Total earnings amount
  google.protobuf.Int64Value total_earnings = 2;
  // Verification status
  VerificationStatus verification_status = 3;
  // Verification fields needed
  repeated google.protobuf.StringValue verification_fields_needed = 4;
}

// UpsertDasherKYCNotification Response
message UpsertDasherKYCNotificationResponse {}
