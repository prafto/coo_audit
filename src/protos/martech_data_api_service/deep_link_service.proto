syntax = "proto3";

package martech.data.api.v1;

import "google/protobuf/wrappers.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.martech.data.api.v1";

// Server controlled deep link service
service DeepLinkService {
  // Calculate deep link redirect URL
  rpc CalculateDeepLinkRedirectURL(CalculateDeepLinkRedirectURLRequest) returns (CalculateDeepLinkRedirectURLResponse);
  // Resolve deep link URL
  rpc ResolveDeepLinkURL(ResolveDeepLinkURLRequest) returns (ResolveDeepLinkURLResponse);
}

// The request to calculate deep link redirect URL
message CalculateDeepLinkRedirectURLRequest {
  // initial_url
  string initial_url = 2;
  // consumer_id
  string consumer_id = 1;
  // ip
  string ip = 3;
  // lat
  string lat = 4;
  // lng
  string lng = 5;
}

// The response for CalculateDeepLinkRedirectURL
message CalculateDeepLinkRedirectURLResponse {
  // redirect_url
  string redirect_url = 1;
}

// The request to resolve deep link URL
message ResolveDeepLinkURLRequest {
  // original_url
  string original_url = 2;
  // consumer_id
  string consumer_id = 1;
  // ip
  string ip = 3;
  // lat
  string lat = 4;
  // lng
  string lng = 5;
  // submarket_id
  string submarket_id = 6;
}

// The response for ResolveDeepLinkURLRequest
message ResolveDeepLinkURLResponse {
  // redirect_url
  string redirect_url = 1;
  // redirect_url_path
  string redirect_url_path = 2;
  // this represents whether the path resolver was successful (no exception while forming URL)
  ResolveURLStatus status = 4;
  // message
  string message = 5;
  // this will be set for query params
  // representing extra work that is done eg. adding campaign tag
  ResolveActionResults action_results = 6;
}

// The status of resolving deep link url
enum ResolveURLStatus {
  // Unspecified value
  RESOLVE_URL_STATUS_UNSPECIFIED = 0;
  // The url is invalid and cannot be handled by any resolver
  RESOLVE_URL_STATUS_INVALID_URL = 1;
  // The url is valid but resolver failed to resolve
  RESOLVE_URL_STATUS_FAILED_TO_RESOLVE = 2;
  // Success
  RESOLVE_URL_STATUS_SUCCESS = 3;
}

// Results for action resolvers, all optionals
message ResolveActionResults {
  // deprecated apply_promo_status
  reserved 1;
  reserved "apply_promo_status";
  // EOTF status
  EOTFStatus eotf_status = 2;
  // TO BE DEPRECATED: C2C status
  C2CStatus c2c_status = 3;
  // click to claim action results
  ClickToClaimResults click_to_claim_results = 4;
}

// each of these represent a different EOTF toast message for the user
enum EOTFStatus {
  // Unspecified value
  EOTF_STATUS_UNSPECIFIED = 0;
  // successfully applied
  EOTF_STATUS_SUCCESS = 1;
  // failed to apply campaign
  EOTF_STATUS_FAILED = 2;
  // Promo already exists on account
  EOTF_STATUS_ALREADY_EXISTS = 3;
  // The promo code is invalid
  EOTF_STATUS_CODE_INVALID = 4;
  // The consumer is not eligible
  EOTF_STATUS_CONSUMER_NOT_ELIGIBLE = 5;
  // No apply promo action performed
  EOTF_STATUS_NOT_APPLICABLE = 6;
  // User not logged in
  EOTF_STATUS_USER_NOT_LOGGED_IN = 7;
  // future codes - not currently used
  // ALREADY_REDEEMED = 8;
  // PROMO_EXPIRED = 9;
}

// represents result for click to claim action
enum C2CStatus {
  // Unspecified value
  C2C_STATUS_UNSPECIFIED = 0;
  // successfully applied c2c campaign
  C2C_STATUS_SUCCESS = 1;
  // failed to apply c2c campaign
  C2C_STATUS_FAILURE = 2;
}

// Result for click to claim resolver
message ClickToClaimResults {
  // click to claim status
  C2CStatus c2c_status = 1;
  // campaign id
  google.protobuf.StringValue campaign_id = 2;
  // referrer type
  google.protobuf.StringValue referrer_type = 3;
  // title
  google.protobuf.StringValue title = 4;
  // description
  google.protobuf.StringValue description = 5;
}
