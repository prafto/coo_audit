syntax = "proto3";

package identityinsights.v1;

import "google/protobuf/wrappers.proto";
import "google/protobuf/timestamp.proto";

option java_multiple_files = true;
option java_generic_services = true;
option java_package = "com.doordash.rpc.identityinsights";

import "common/service_client_config.proto";

// Service to get User Insights
service UserInsightsService {
    // Timeout after 700 milliseconds.
    option (service_client.client_config).response_attempt_timeout_millis = 700;
    // Make a total 4 attempts (initial + three retries).
    option (service_client.client_config).retry_config.max_attempts = 4;
    // Add RESOURCE_EXHAUSTED to the set of retriable codes.
    option (service_client.client_config).retry_config.do_retry_grpc_code = 8;
    // Break the circuit if the error rate exceeds 80%.
    option (service_client.client_config).circuit_breaker_config.failure_rate_threshold = 0.8;
    // Ignore NOT_FOUND from circuit breaker error rate calculation.
    option (service_client.client_config).circuit_breaker_config.do_ignore_grpc_code = 5;

    // Returns User
    rpc GetUserById(GetUserByIdRequest) returns (GetUserByIdResponse);
}

// UserDetails information about a user
message UserDetails {
    // Id of user
    google.protobuf.StringValue user_id = 1;
    // consumer id of user
    google.protobuf.StringValue consumer_id = 2;
    // dasher id of user
    google.protobuf.StringValue dasher_id = 3;
    // date user joined DD
    google.protobuf.Timestamp  date_joined = 4;
    // date user record was last updated in identity service
    google.protobuf.Timestamp  updated_at = 5;
    // first name of user
    string first_name = 6;
    // last name of user
    string last_name = 7;
    // email of user
    string email = 8;
    // phone number of user
    string phone_number = 9;
    // is user active
    bool is_active = 10;
    // tags a user falls under
    repeated string tags = 11;
    // caviar consumer id of user
    google.protobuf.StringValue caviar_consumer_id = 12;
}

// Request to get user by user id
message GetUserByIdRequest {
    // Id of user
    string user_id = 1;
}

// Response returns user
message GetUserByIdResponse {
    // Matching User
    UserDetails users = 1;
} 
