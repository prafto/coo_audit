syntax = "proto3";

package doordash.test_data_service.v1;

import "google/protobuf/timestamp.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.testdataservice";

// Service for retrieving checks for the Test Tenancy Requirements project.
// Design document: https://docs.google.com/document/d/1iuR3OwwPTUHkqJvOzWT46wNG3AVoO97_7SNu9BRBomg/edit
service TestTenancyRequirementsService {
  // For a given project, list all checks and their latest check values.
  rpc GetProjectScorecard(GetProjectScorecardRequest) returns (GetProjectScorecardResponse);

  // For a given project and check ID, create a new check override.
  rpc CreateCheckOverride(CreateCheckOverrideRequest) returns (CreateCheckOverrideResponse);

  // Returns a map of all projects and their latest check values.
  rpc GetAllProjectsSummary(GetAllProjectsSummaryRequest) returns (GetAllProjectsSummaryResponse);

  // Returns a map of all projects and their latest check values, but serialized as a CSV-encoded string.
  rpc GetAllProjectsSummaryCSV(GetAllProjectsSummaryCSVRequest) returns (GetAllProjectsSummaryCSVResponse);
}

// The possible values for a check.
enum CheckValue {
  // Not used.
  CHECK_VALUE_UNSPECIFIED = 0;

  // A check value for projects that pass the check.
  CHECK_VALUE_PASS = 1;

  // A check value for projects that fail the check.
  CHECK_VALUE_FAIL = 2;

  // A check value for projects that partially fail a check.
  CHECK_VALUE_WARN = 3;

  // A check value for when the check is not applicable to the project.
  CHECK_VALUE_NOT_APPLICABLE = 4;

  // A check value that disables a previously-set manual override.
  CHECK_VALUE_DEFER_TO_AUTOMATED = 5;
}

// A request for the latest check values for a given project.
message GetProjectScorecardRequest {
  // The project name to fetch checks for.
  string project_name = 1;
}

// A response with the latest check values for a given project.
message GetProjectScorecardResponse {
  // A scorecard of checks for the project.
  ProjectScorecard scorecard = 4;
}

// ProjectScorecard provides the most recent scorecard for a project.
message ProjectScorecard {
  // List of checks that were applied to the project.
  repeated ScorecardCheck checks = 2;
}

// For a given project and check, this represents the latest check value and associated metadata.
message ScorecardCheck {
  // The ID for the check itself (not the check version).
  string check_id = 1;

  // The check's name.
  string check_name = 2;

  // A description of what this check measures.
  string description = 3;

  // A URL with additional information about the check.
  string documentation_url = 4;

  // The latest value of the check.
  CheckValue check_value = 5;

  // A text description explaining why the check is at the given value.
  // For manual overrides, this value is written by the project owner.
  string reason = 6;

  // The source of the check. This can be "MANUAL", "CHRONOSPHERE", or another string.
  string source = 7;

  // Whether or not a check is automated.
  bool is_automated = 8;

  // True if this check value is a manual override from a project owner. False otherwise.
  bool is_override = 9;

  // If the check value is an override, then `override_email` is the email address of the overriding project owner.
  // If the check value is not an override, then `override_email` is the empty string.
  string override_email = 10;

  // The timestamp of when this check value was collected.
  google.protobuf.Timestamp modified_at = 11;

  // The name of the project that this check belongs to.
  string project_name = 12;
}

// A message for submitting a check override for a given project's check.
message CreateCheckOverrideRequest {
  // The project requesting the override.
  string project_name = 1;

  // The check to override for the given project.
  string check_id = 2;

  // The new value for the check.
  CheckValue check_value = 3;

  // A text description explaining why the override is necessary.
  string reason = 5;

  // The email address of the project owner submitting the override.
  string override_email = 7;
}

// Response message after submitting an override.
message CreateCheckOverrideResponse {
  // Returns true if the query succeeded, false otherwise.
  bool ok = 1;

  // Returns the new check value now that the override has taken effect.
  CheckValue check_value = 2;
}

// Request for a summary of all projects and their latest check values.
message GetAllProjectsSummaryRequest {
  // An optional Unix timestamp. Specify this if you want to see what
  // the summary was at a given point in time.
  int64 timestamp = 1;
}

// Response for requesting a summary of all projects and their latest check values.
message GetAllProjectsSummaryResponse {
  // A map from project names to their list of checks.
  map<string, ProjectScorecard> scorecards = 1;
}

// Request for a CSV summary of all projects and their latest check values.
message GetAllProjectsSummaryCSVRequest {
  // An optional Unix timestamp. Specify this if you want to see what
  // the summary was at a given point in time.
  int64 timestamp = 1;

  // Set to True to enable additional columns in the CSV file.
  bool detailed = 2;
}

// Response for requesting a CSV summary of all projects and their latest check values.
message GetAllProjectsSummaryCSVResponse {
  // A string containing a CSV-encoded table of values.
  string csv = 1;
}
