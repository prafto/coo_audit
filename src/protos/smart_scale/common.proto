syntax = "proto3";
package smart_scale.v1;

import "autonomous_delivery_platform/common.proto";
import "doordash.api/client.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option java_generic_services = true;
option java_outer_classname = "Common";
option java_package = "com.doordash.rpc.smart_scale";

// Ground truth audit staff resolution types
enum GroundTruthAuditStaffResolution {
  // Unspecified
  GROUND_TRUTH_AUDIT_STAFF_RESOLUTION_UNSPECIFIED = 0;
  // Missing item
  GROUND_TRUTH_AUDIT_STAFF_RESOLUTION_MISSING_ITEM = 1;
  // Missing side
  GROUND_TRUTH_AUDIT_STAFF_RESOLUTION_MISSING_SIDE = 2;
  // Nothing missing
  GROUND_TRUTH_AUDIT_STAFF_RESOLUTION_NOTHING_MISSING = 3;
  // No verification
  GROUND_TRUTH_AUDIT_STAFF_RESOLUTION_NO_VERIFICATION = 4;
}

// Ground truth audit data
message GroundTruthAuditData {
  // Were drinks weighed
  google.protobuf.BoolValue drinks_weighed = 1;
  // Bag details
  repeated GroundTruthBagDetail bags = 2;
  // Additional items
  repeated GroundTruthAdditionalItem additional_items = 3;
  // Notes
  google.protobuf.StringValue notes = 4;
  // How did staff resolve the issue
  GroundTruthAuditStaffResolution staff_resolution = 5;
  // Did staff provide accurate feedback
  google.protobuf.BoolValue staff_provided_accurate_feedback = 6;
  // Did scale impact accuracy of the order (flagged and fixed)
  google.protobuf.BoolValue scale_impacted_accuracy = 7;
  // Details about missing items/options
  google.protobuf.StringValue missing_details = 8;
  // User id of user who updated this ground truth audit data
  int64 updated_by = 9;
  // Timestamp when audit data was updated at
  google.protobuf.Timestamp updated_at = 10;
}

// Ground truth bag details
message GroundTruthBagDetail {
  // Bag type
  string bag_name = 1;
  // Bag weight in grams
  int32 bag_weight_grams = 2;
  // Bag quantity
  int32 bag_quantity = 3;
}

// Ground truth additional items
message GroundTruthAdditionalItem {
  // Item name
  string item_name = 1;
  // Item weight in grams
  int32 item_weight_grams = 2;
  // Item quantity
  int32 item_quantity = 3;
}

// Third parties
enum ThirdParty {
  // Unknown provider
  THIRD_PARTY_UNSPECIFIED = 0;
  // Uber Eat
  THIRD_PARTY_UBER_EAT = 1;
  // Grub Hub
  THIRD_PARTY_GRUB_HUB = 2;
}

// Third party order delivery id
message ThirdPartyDeliveryId {
  // Third party
  ThirdParty third_party = 1;
  // Delivery id of third party order
  string delivery_id = 2;
}

// Id of an order. Deprecated: Do not use for new use cases.
message OrderId {
  option deprecated = true;
  // Id types
  oneof id {
    // Unique delivery id (int64) of doordash orders
    int64 delivery_id = 1;
    // Unique uuid (string) of doordash orders
    string delivery_uuid = 2;
    // Unique delivery id of third party orders
    ThirdPartyDeliveryId third_party_delivery_id = 3;
  }
}

// Id of an order
message OrderIdentifier {
  // Id types
  oneof id {
    // Unique delivery id (int64) of doordash orders
    DeliveryId delivery_id = 1;
    // Unique uuid (string) of doordash orders
    DeliveryUuid delivery_uuid = 2;
    // Unique delivery id of third party orders
    ThirdPartyDeliveryId third_party_delivery_id = 3;
  }
}

// Delivery Id wrapper
message DeliveryId {
  //delivery id
  int64 delivery_id = 1;
}

// Delivery UUID wrapper
message DeliveryUuid {
  //delivery uuid
  string delivery_uuid = 1;
}

// Source type of weight measurements
enum WeightMeasurementSourceType {
  // Unknown type
  WEIGHT_MEASUREMENT_SOURCE_TYPE_UNSPECIFIED = 0;
  // Collected weights measured by ops
  WEIGHT_MEASUREMENT_SOURCE_TYPE_OPS_MEASURED = 1;
  // Inferred weights by ops, based on photos, resources online with ingredients, etc
  WEIGHT_MEASUREMENT_SOURCE_TYPE_OPS_INFERRED = 2;
}

// Channel type of an order
enum Channel {
  // Unspecified type
  CHANNEL_UNSPECIFIED = 0;
  // Marketplace order
  CHANNEL_MARKETPLACE = 1;
  // Drive order
  CHANNEL_DRIVE = 2;
  // Third party order
  CHANNEL_THIRD_PARTY = 3;
}

// Provider details - to be deprecated
message OrderProviderDetails {
  // Provider
  autonomous_delivery_platform.v1.Provider provider = 1;
  // vehicle type
  autonomous_delivery_platform.v1.AvType vehicle_type = 2;
  // icon image CDN url
  google.protobuf.StringValue icon_url = 3;
}

// ADP Robot Provider details
message RobotProviderDetails {
  // Provider
  autonomous_delivery_platform.v1.Provider provider = 1;
  // vehicle type
  autonomous_delivery_platform.v1.AvType vehicle_type = 2;
  // icon image CDN url
  google.protobuf.StringValue icon_url = 3;
  // label text
  google.protobuf.StringValue label_text = 4;
  // Timestamp of robot arrival at the store
  google.protobuf.Timestamp robot_at_store_time = 5;
}

// Coordinate with latitude and longitude
message Coordinates {
  // Latitude
  double lat = 1;
  // Longitude
  double lng = 2;
}

// User information
message User {
  // ID of the user
  int64 id = 1;
  // Name of the user, can be in any format (e.g. "first last", "first last_initial", etc...)
  string name = 2;
}

// Gift info from DD core order service
message GiftInfo {
  // recipient name
  google.protobuf.StringValue recipient_name_localized = 1;
  // sender name
  google.protobuf.StringValue sender_name_localized = 2;
}
