syntax = "proto3";
package smart_scale.v1;

import "google/protobuf/struct.proto";
import "google/protobuf/wrappers.proto";
import "smart_scale/common.proto";
import "smart_scale/smart_scale.proto";

option java_generic_services = true;
option java_outer_classname = "Event";
option java_package = "com.doordash.rpc.smart_scale";

// Event for recording weight measurement
message RecordDeliveryWeightEvent {
  // ID of weight measurement
  string id = 1;
  // Unique ID (int64) of the store
  int64 store_id = 2;
  // Delivery id
  int64 delivery_id = 3;
  // Weight on scale in grams
  float measured_weight_grams = 4;
  // Expected weight in grams
  google.protobuf.FloatValue expected_weight_grams = 5;
  // Result of delivery weight check
  WeightCheckResult weight_check_result = 6;
}

// Event for smart scale tasks
message SmartScaleTaskEvent {
  // Type of the task
  enum TaskType {
    // Unspecified (default)
    TASK_TYPE_UNSPECIFIED = 0;
    // Task to populate store product path
    TASK_TYPE_POPULATE_STORE_PRODUCT_PATH = 1;
    // Task to generate merchant product mapping
    TASK_TYPE_GENERATE_MERCHANT_PRODUCT_MAPPING = 2;
    // Task to generate daily menu revision snapshot
    TASK_TYPE_GENERATE_DAILY_MENU_REVISION_SNAPSHOT = 3;
    // Task to generate weekly menu revision snapshot
    TASK_TYPE_GENERATE_WEEKLY_MENU_REVISION_SNAPSHOT = 4;
    // Task to object tagging
    TASK_TYPE_OBJECT_TAGGING = 5;
    // Task to bulk upload
    TASK_TYPE_BULK_UPLOAD = 6;
    // Task to copy menu weight
    TASK_TYPE_COPY_MENU_WEIGHT = 7;
    // Task to generate menu id mapping
    TASK_TYPE_GENERATE_MENU_ID_MAPPING = 8;
    // Task to check and process new menu items in a delivery
    TASK_TYPE_CHECK_NEW_MENU_ITEMS = 9;
  }

  // ID of the task
  string id = 1;
  // Unique ID (int64) of the store. Can be null if the task is not store specific.
  google.protobuf.Int64Value store_id = 2;
  // Type of the task
  TaskType task_type = 3;
  // Additional task context
  google.protobuf.Struct context = 4;
  // Number of retries remaining
  int32 remaining_retry_count = 5;
}
