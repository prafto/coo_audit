syntax = "proto3";
package smart_scale.v1;

import "doordash.api/annotations.proto";
import "doordash.api/field_validate.proto";
import "google/api/annotations.proto";
import "google/protobuf/wrappers.proto";
import "smart_scale/common.proto";

option java_generic_services = true;
option java_outer_classname = "ThirdParty";
option java_package = "com.doordash.rpc.smart_scale";

// Third party related smart scale RPCs
service SmartScaleThirdPartyService {
  option (doordash.api.service) = {
    name: "smart-scale-service-3p-grpc"
    url: "smart-scale-service-web.service.prod.ddsd"
    port: 50051
    name_spaces: ["smart-scale-service"]
    api_key_name: "SMART_SCALE_SERVICE_API_KEY"
    owner: {
      name: "smart-scale"
      id: "smart-scale-team"
      slack_channel: "#ask-smart-scale"
      email_alias: "smart-scale-sw-eng@doordash.com"
    }
    target_products: [MX]
  };
  // Record third party order detail
  rpc RecordThirdPartyOrderDetail(RecordThirdPartyOrderDetailRequest) returns (RecordThirdPartyOrderDetailResponse) {
    option (google.api.http) = {
      post: "/smart-scale-service/v1/record_third_party_order_detail"
      body: "*"
    };

    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: PROD
      authorization: [MX_USER]
      target_products: [MX]
    };
  }
  // Record third party token
  rpc RecordThirdPartyToken(RecordThirdPartyTokenRequest) returns (RecordThirdPartyTokenResponse) {
    option (google.api.http) = {
      post: "/smart-scale-service/v1/record_third_party_token"
      body: "*"
    };

    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: PROD
      authorization: [MX_USER]
      target_products: [MX]
    };
  }
  // Invalidate third party tokens
  rpc InvalidateThirdPartyTokens(InvalidateThirdPartyTokensRequest) returns (InvalidateThirdPartyTokensResponse) {
    option (google.api.http) = {
      post: "/smart-scale-service/v1/invalidate_third_party_tokens"
      body: "*"
    };

    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: PROD
      authorization: [MX_USER]
      target_products: [MX]
    };
  }
}

// Third party option details
message ThirdPartyOption {
  // Option name
  string name = 1;
  // Option id
  google.protobuf.StringValue id = 2;
  // Option quantity
  int32 quantity = 3;
  // Extras
  repeated ThirdPartyExtra extras = 4;
}

// Third party extra details
message ThirdPartyExtra {
  // Extra name
  string name = 1;
  // Extra id
  google.protobuf.StringValue id = 2;
  // Options
  repeated ThirdPartyOption options = 3;
}

// Third party item details
message ThirdPartyItem {
  // Item name
  string name = 1;
  // Item id
  google.protobuf.StringValue id = 2;
  // Item quantity
  int32 quantity = 3;
  // Extras
  repeated ThirdPartyExtra extras = 4;
}

// Third party order details
message ThirdPartyOrderDetail {
  // DEPRECATED: Use third_party_delivery_id instead
  reserved 1, 2;
  reserved "provider", "provider_delivery_id";
  // Customer name
  google.protobuf.StringValue customer_name = 3;
  // Items
  repeated ThirdPartyItem items = 4;
  // Third party delivery id
  ThirdPartyDeliveryId third_party_delivery_id = 5;
}

// Third party provider. [to be deprecated]
enum ThirdPartyProvider {
  // Unknown provider
  THIRD_PARTY_PROVIDER_UNSPECIFIED = 0;
  // Uber Eat
  THIRD_PARTY_PROVIDER_UBER_EAT = 1;
  // Grub Hub
  THIRD_PARTY_PROVIDER_GRUB_HUB = 2;
}

// Source of third party data
enum ThirdPartySource {
  // Unknown source
  THIRD_PARTY_SOURCE_UNSPECIFIED = 0;
  // Smart scale tablet
  THIRD_PARTY_SOURCE_TABLET = 1;
}

// Record third party order detail request
message RecordThirdPartyOrderDetailRequest {
  // Unique ID (int64) of the store
  int64 store_id = 1 [(doordash.api.validate.rules).missing_value = {action: FAIL}];
  // Source of order detail
  ThirdPartySource source = 2 [(doordash.api.validate.rules).missing_value = {action: FAIL}];
  // Order details
  repeated ThirdPartyOrderDetail order_details = 3 [(doordash.api.validate.rules).missing_value = {action: FAIL}];
}

// Recorded third party order detail
message RecordedThirdPartyOrderDetail {
  // DEPRECATED: Use third_party_delivery_id instead
  reserved 1, 2;
  reserved "provider", "provider_delivery_id";
  // Id of the recorded third party order detail
  string id = 3;
  // Third party type
  ThirdPartyDeliveryId third_party_delivery_id = 4;
}

// Record third party order detail response
message RecordThirdPartyOrderDetailResponse {
  // Recorded third party order details
  repeated RecordedThirdPartyOrderDetail recorded_third_party_order_details = 1;
}

// Record third party token request
message RecordThirdPartyTokenRequest {
  // Unique ID (int64) of the store
  int64 store_id = 1 [(doordash.api.validate.rules).missing_value = {action: FAIL}];
  // Unique ID of the device recording the token
  string device_id = 2 [(doordash.api.validate.rules).missing_value = {action: FAIL}];
  // Third party provider
  ThirdParty third_party = 3 [(doordash.api.validate.rules).missing_value = {action: FAIL}];
  // Token
  string token = 4 [(doordash.api.validate.rules).missing_value = {action: FAIL}];
  // Third party store id
  string third_party_store_id = 5 [(doordash.api.validate.rules).missing_value = {action: FAIL}];
}

// Record third party token response
message RecordThirdPartyTokenResponse {}

// Invalidate third party tokens request
message InvalidateThirdPartyTokensRequest {
  // Unique ID (int64) of the store
  int64 store_id = 1 [(doordash.api.validate.rules).missing_value = {action: FAIL}];
}

// Invalidate third party tokens response
message InvalidateThirdPartyTokensResponse {}
