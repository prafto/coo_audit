syntax = "proto3";

// buf:lint:ignore DIRECTORY_SAME_PACKAGE
package doordash.retail.serving.v1;

import "common/ratings.proto";
import "doordash.retail.serving.v1/catalog_data.proto";
import "doordash.retail.serving.v1/common.proto";
import "doordash.retail.serving.v1/retail_product.proto";
import "google/protobuf/wrappers.proto";

option go_package = "github.com/doordash/services-protobuf/generated/doordash/retail/serving/v1";
option java_generic_services = true;
option java_multiple_files = true;

// Read API for RPS V2
// Menu Data Gateway will call this API to fetch Catalog data.
service RetailServingReadService {
  // API to return list of Catalog Data given merchant catalog IDs.
  rpc GetMerchantCatalog(GetMerchantCatalogRequest) returns (GetMerchantCatalogResponse);
  // API to return list of Catalog Data given merchant catalog IDs in stream.
  // buf:lint:ignore RPC_REQUEST_STANDARD_NAME
  // buf:lint:ignore RPC_RESPONSE_STANDARD_NAME
  // buf:lint:ignore RPC_REQUEST_RESPONSE_UNIQUE
  rpc GetMerchantCatalogStream(GetMerchantCatalogRequest) returns (stream GetMerchantCatalogResponse);
  // API to return list of Catalog Data given global catalog IDs.
  rpc GetGlobalCatalog(GetGlobalCatalogRequest) returns (GetGlobalCatalogResponse);
  // API to return list of Merchant Catalog IDs given SKUs of items
  rpc GetMerchantCatalogIdBySkuHash(GetMerchantCatalogIdBySkuHashRequest) returns (GetMerchantCatalogIdBySkuHashResponse);
  // API to return list of merchant catalogs by GTIN14 barcodes
  rpc GetMerchantCatalogByGtin14Barcode(GetMerchantCatalogByGtin14BarcodeRequest) returns (GetMerchantCatalogByGtin14BarcodeResponse);
  // Temporary API to compare Catalog V1 vs V2
  rpc CompareCatalogs(CompareCatalogsRequest) returns (CompareCatalogsResponse);
  // API to return list of Retail Inventory given store id and a list of item identifiers.
  rpc GetMerchantInventory(GetMerchantInventoryRequest) returns (GetMerchantInventoryResponse);
  // API to return list of reviews for a retail product
  rpc GetRetailItemReviews(GetRetailItemReviewsRequest) returns (GetRetailItemReviewsResponse);
  // API to return list of merchant catalogs by ply codes
  rpc GetMerchantCatalogsByPluCodes(GetMerchantCatalogsByPluCodesRequest) returns (GetMerchantCatalogsByPluCodesResponse);
}

// Request to get catalog data based on merchant catalog IDs.
message GetMerchantCatalogRequest {
  // Business id is required
  google.protobuf.StringValue business_id = 1;
  // Merchant Catalog ID type
  MerchantCatalogIdType merchant_catalog_id_type = 2;
  // Merchant Catalog ID value list
  repeated google.protobuf.StringValue merchant_catalog_id_values = 3;
  // Include inactive catalog items or not
  google.protobuf.BoolValue include_inactive = 4;
}

// Response to get catalog data based on merchant catalog IDs.
message GetMerchantCatalogResponse {
  // Catalog responses
  repeated CatalogResponse catalog_responses = 1;
}

// Request to get catalog data based on global catalog IDs.
message GetGlobalCatalogRequest {
  // Global Catalog ID type
  GlobalCatalogIdType global_catalog_id_type = 1;
  // Global Catalog ID value list
  repeated google.protobuf.StringValue global_catalog_id_values = 2;
}

// Response to get catalog data based on global catalog IDs.
message GetGlobalCatalogResponse {
  // Catalog responses
  repeated CatalogResponse catalog_responses = 1;
}

// Wrapper payload that holds catalog data and additional information to the caller
message CatalogResponse {
  reserved 2;
  reserved "catalog_data";
  // Search result additional information
  ResultInfo result_info = 1;
  // Returns superset data of catalog and identity info
  RetailCatalog retail_catalog = 3;
}

// Wrapper payload that holds an array of catalog data and additional information to the caller
message CatalogArrayResponse {
  // Search result additional information
  ResultInfo result_info = 1;
  // Returns superset data of catalog and identity info
  repeated RetailCatalog retail_catalogs = 2;
}

// Request to get Merchant Catalog IDs based on SKU
message GetMerchantCatalogIdBySkuHashRequest {
  // Business ID
  google.protobuf.StringValue business_id = 1;
  // List of SKU Hash of a catalog item
  repeated google.protobuf.StringValue sku_hashes = 2;
}

// Response to get Merchant Catalog IDs based on SKU
message GetMerchantCatalogIdBySkuHashResponse {
  reserved 1;
  reserved "sku_hash_maps";
  // List of SKU Hash to Merchant Catalog ID mapping
  repeated SkuHashMapResponse sku_hash_map_responses = 2;
}

// Request to get merchant catalogs based on GTIN14 barcodes.
message GetMerchantCatalogByGtin14BarcodeRequest {
  // Business id is required
  string business_id = 1;
  // GTIN14 barcodes
  repeated string gtin14_barcodes = 2;
}

// Request to get merchant catalogs based on PLU codes.
message GetMerchantCatalogsByPluCodesRequest {
  // Business ID
  string business_id = 1;
  //list of PLU codes
  repeated string plu_codes = 2;
}

// Response to get merchant catalogs based on PLU codes.
message GetMerchantCatalogsByPluCodesResponse {
  // catalog response map. one code can resolve to an array of
  // merchant catalogs
  // key: code
  // value: catalog array response
  map<string, CatalogArrayResponse> catalog_array_response_map = 1;
}

// Wrapper payload that holds SkuHashMap data and additional information to the caller
message SkuHashMapResponse {
  // Search result additional information
  ResultInfo result_info = 1;
  // SKU Hash to Merchant Catalog ID mapping
  SkuHashMap sku_hash_map = 2;
}

// SKU Hash to Merchant Catalog ID mapping
message SkuHashMap {
  // Business ID
  google.protobuf.StringValue business_id = 1;
  // SKU Hash of a catalog item that identifies a Mx ingested item
  google.protobuf.StringValue sku_hash = 2;
  // Merchant Catalog ID (UMP ID)
  google.protobuf.StringValue merchant_catalog_id = 3;
}

// Response to get merchant catalogs based on GTIN14 barcodes.
message GetMerchantCatalogByGtin14BarcodeResponse {
  // catalog response map. one barcode can resolve to an array of
  // merchant catalogs
  // key: barcode
  // value: catalog array response
  map<string, CatalogArrayResponse> catalog_array_response_map = 1;
}

// Request to compare Catalog V1 vs V2
message CompareCatalogsRequest {
  // Business ID
  google.protobuf.StringValue business_id = 1;
  // Use case of the V1 data. Consumer, Search or Fulfillment.
  google.protobuf.StringValue use_case = 2;
  // Catalog V1 Data
  repeated RetailCatalog catalog_v1_data_array = 3;
  // Catalog V2 Data
  repeated RetailCatalog catalog_v2_data_array = 4;
}

// Response to compare Catalog V1 vs V2
message CompareCatalogsResponse {
  // Matched
  google.protobuf.BoolValue matched = 1;
}

// Request to get merchant inventory
message GetMerchantInventoryRequest {
  // store id
  int64 store_id = 1;
  // item identifiers of get merchant inventory request
  repeated ItemIdentifier item_identifiers = 2;
}

// Response to get merchant inventory
message GetMerchantInventoryResponse {
  // Retail inventory
  repeated RetailInventory inventory_responses = 1;
}

// Request to get item reviews
message GetRetailItemReviewsRequest {
  // Business ID for the store
  google.protobuf.StringValue business_id = 1;
  // DD SIC for the product
  google.protobuf.StringValue dd_sic = 2;
  // MSID for the product
  google.protobuf.StringValue merchant_supplied_id = 3;
  // Pagination Information
  common.ratings.v1.ReviewPaginationInfo pagination = 4;
  // List filter applied to show reviews
  repeated ReviewFilter review_filters = 5;
  // sort by order
  ReviewSortByType sort_by = 6;
}

// Response to get item reviews
message GetRetailItemReviewsResponse {
  // List of reviews
  repeated common.ratings.v1.RetailProductItemReview reviews = 1;
  // Pagination Information
  common.ratings.v1.ReviewPaginationInfo pagination = 2;
  // BE driven filter allowed values
  repeated ReviewResponseFilter filters = 3;
}

// Item identifier
message ItemIdentifier {
  // one of identifiers
  oneof item_identifier {
    // msid
    string merchant_supplied_id = 1;
    // menu item id
    string menu_item_id = 2;
  }
}
