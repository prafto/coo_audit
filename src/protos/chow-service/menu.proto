syntax = "proto3";
package chow_service_internal.v1;

option java_package = "com.doordash.rpc.chow_service_internal";
option java_outer_classname = "MenuService";
option java_multiple_files = true;

import "google/protobuf/wrappers.proto";
import "google/protobuf/timestamp.proto";
import "chow-service/common.proto";
import "chow-service/machine.proto";

message Menu {
  // menu id
  string id = 1;
  // menu id this menu is derived from (null for global menus)
  google.protobuf.StringValue parent_menu_id = 2;
  // machine id if this menu is a local override of a global menu (null for global menus)
  google.protobuf.StringValue machine_id = 3;
  // name of menu
  string name = 4;
  // description of menu
  google.protobuf.StringValue description = 5;
  // is production
  bool is_active = 6;
  // display images
  repeated MenuDisplayImage display_images = 7;
  // recipes
  repeated MenuRecipe recipes = 8;
  // creator's user_id
  string created_by = 9;
  // last updater's user_id
  string updated_by = 11;
  // translations
  repeated TranslatedFields translations = 10;
  // machine type
  MachineType machine_type = 12;
  // bowl settings
  repeated BowlSettings bowl_settings = 13;
  // proprietary id
  google.protobuf.StringValue proprietary_id = 14;
  // when was it created
  google.protobuf.Timestamp created_at = 40;
  // last update time
  google.protobuf.Timestamp updated_at = 41;
}

message MenuCreatePayload {
  // name of menu
  string name = 3;
  // description of menu
  google.protobuf.StringValue description = 4;
  // is production
  bool is_active = 5;
  // display images
  repeated MenuDisplayImage display_images = 6;
  // recipes
  repeated MenuRecipe recipes = 7;
  // creator's user_id
  string created_by = 8;
  // translations
  repeated TranslatedFields translations = 9;
  // machine type
  MachineType machine_type = 10;
  // bowl settings
  repeated BowlSettings bowl_settings = 13;
  // proprietary id
  google.protobuf.StringValue proprietary_id = 14;
}

message MenuUpdatePayload {
  // name of menu
  google.protobuf.StringValue name = 4;
  // description of menu
  google.protobuf.StringValue description = 5;
  // is production
  google.protobuf.BoolValue is_active = 6;
  // display images
  repeated MenuDisplayImage display_images = 7;
  // recipes
  repeated MenuRecipe recipes = 8;
  // translations
  repeated TranslatedFields translations = 9;
  // last updater's user_id
  string updated_by = 10;
  // machine type
  MachineType machine_type = 11;
  // bowl settings
  repeated BowlSettings bowl_settings = 13;
  // proprietary id
  google.protobuf.StringValue proprietary_id = 14;
}

message MenuRecipe {
  // must be a global recipe (i.e. recipe.machine_id = null && recipe.parent_ingredient_id = null)
  string recipe_id = 1;
}

message MenuDisplayImage{
  string url = 1;
  bool is_default = 2;
}

// menu ids
message MenuIds {
  // menu ids
  repeated string menu_id = 1;
}

message GetMenusRequest {
  oneof criteria {
    // leave empty for getting all global menus
    // filter by machine_id
    google.protobuf.StringValue machine_id = 1;
    // or menu_ids
    MenuIds menu_ids = 2;
    // or get local menu by machine_ids AND parent menu_id
    MachineIdsAndMenu machine_ids_menu = 3;
    // filter by menu.name contains the string (case insensitive)
    google.protobuf.StringValue name_contains = 4;
  }
  // Cursor used for pagination. Page size of 100.
  google.protobuf.StringValue cursor = 10;
}

message GetMenusResponse {
  repeated Menu menus = 1;
  // Cursor used for pagination, to grab next set of promotions
  google.protobuf.StringValue next_cursor = 2;
}

message CreateMenuRequest {
  MenuCreatePayload menu = 1;
}

message CreateMenuResponse {
  Menu menu = 1;
}

message UpdateMenuRequest {
  MenuUpdatePayload menu_update = 1;
  // should all machine level menus be updated (applicable only if this is a global menu)
  google.protobuf.BoolValue update_children = 2;
  oneof criteria {
    // list of machine ids
    // set to update settings for all menus for given machine ids
    MachineIds machine_ids = 3;
    // menu
    // set to update a specific menu's settings across all machines
    string menu_id = 4;
    // machine ids AND menu_id
    // set to update a specific menu's settings across given machines
    MachineIdsAndMenu machine_ids_menu = 5;
  }
}

message UpdateMenuResponse {
  // updated menu ids
  repeated string menu_ids = 1;
}

// RemoveAllMenusFromMachine request
message RemoveAllMenusFromMachineRequest {
  // machine id
  string machine_id = 1;
  // last updater's user_id
  string updated_by = 2;
}

// RemoveMenusFromMachine response
message RemoveAllMenusFromMachineResponse {
  // if the delete operation was successful or not
  google.protobuf.BoolValue success = 1;
}

// search menus request
message SearchMenusRequest {
  // machine types
  repeated MachineType machine_types = 1;
  // recipe categories
  repeated RecipeCategory recipe_categories = 2;
  // ingredients
  repeated string ingredient_ids = 3;
  // proprietary ids
  repeated string proprietary_ids = 4;
  // fetch only food bar menus
  google.protobuf.BoolValue food_bar_menus_only = 5;
  // page size
  google.protobuf.Int32Value page_size = 6;
  // name (wildcard search on name)
  google.protobuf.StringValue name = 7;
  // name (exact match on name)
  google.protobuf.StringValue exact_name = 8;
  // Cursor used for pagination
  google.protobuf.StringValue cursor = 30;
}

// search menus response
message SearchMenusResponse {
  // menus
  repeated Menu menus = 1;
  // Cursor used for pagination, to grab next set of ingredients
  google.protobuf.StringValue next_cursor = 2;
}

// search menus count request
message SearchMenusCountRequest {
  // search menu count
    SearchMenusRequest search_menus_count_request = 1;
}

// search menus count response
message SearchMenusCountResponse {
  // total number of menus with given criteria
  uint64 count = 1;
}
