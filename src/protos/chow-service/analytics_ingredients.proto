syntax = "proto3";
package chow_service_internal.v1;
option java_package = "com.doordash.rpc.chow_service_internal";
option java_outer_classname = "AnalyticsIngredients";
option java_multiple_files = true;

import "google/protobuf/timestamp.proto";
import "chow-service/common.proto";
import "google/protobuf/wrappers.proto";

// Ingredient info
message IngredientInfo {
  // Ingredient id
  string ingredient_id = 1;
  // Ingredient name
  string ingredient_name = 2;
  // number of orders
  uint64 number_of_orders = 3;
  // ingredient weight in grams
  google.protobuf.DoubleValue weight = 4;
}

//Ingredients quantity type
enum IngredientsSortByAttribute {
  // unspecified
  INGREDIENTS_SORT_BY_ATTRIBUTE_UNSPECIFIED = 0;
  // order by bowl
  INGREDIENTS_SORT_BY_ATTRIBUTE_BOWL = 1;
  // order by weight
  INGREDIENTS_SORT_BY_ATTRIBUTE_WEIGHT = 2;
}

// Ingredients sort order
enum IngredientsSortOrder {
  // unspecified
  INGREDIENTS_SORT_ORDER_UNSPECIFIED = 0;
  // ascending
  INGREDIENTS_SORT_ORDER_ASC = 1;
  // descending
  INGREDIENTS_SORT_ORDER_DESC = 2;
}

// Get Ingredient Rankings Request
message GetIngredientRankingsRequest {
  // ingredientRankingsRequest
  IngredientRankingsRequest ingredient_rankings_request = 1;
  // Cursor used for pagination. Page size of 100.
  google.protobuf.StringValue cursor = 10;
}

// Get Ingredient Rankings Response
message GetIngredientRankingsResponse {
  // ingredients
  repeated IngredientInfo ingredients = 1;
  // Cursor used for pagination, to grab next set of ingredient rankings
  google.protobuf.StringValue next_cursor = 10;
}

// Get Ingredient Rankings Count Request
message GetIngredientRankingsCountRequest {
  // ingredient rankings count request
  IngredientRankingsRequest ingredient_rankings_count_request = 1;
}

// Get Ingredient Rankings Count Response
message GetIngredientRankingsCountResponse {
  // ingredients count
  uint32 ingredients_count = 1;
}

// Ingredient Rankings Request
message IngredientRankingsRequest {
  // Machine Ids
  MachineIds machine_ids = 1;
  // starting time range for request
  google.protobuf.Timestamp start_at = 2;
  // ending time range for request
  google.protobuf.Timestamp end_at = 3;
  // sort by attribute
  IngredientsSortByAttribute sort_by_attribute = 4;
  // sort order
  IngredientsSortOrder sort_by = 5;
  // search ingredient name
  string ingredient_contains = 6;
  // filter by time (defaults to UTC)
  FilterByAttribute filter_by_time = 7;
}

// Get Ingredients Levels Request
message GetIngredientsLevelsRequest {
  // machine id
  string machine_id = 1;
}

// Get Ingredients Levels Response
message GetIngredientsLevelsResponse {
  // ingredients
  repeated IngredientLevel ingredient_levels = 1;
}

// Ingredient level
message IngredientLevel {
  // canister id
  string canister_id = 1;
  // ingredient id
  string ingredient_id = 2;
  // canister slot
  uint32 canister_slot = 3;
  // ingredient name
  string ingredient_name = 4;
  // initial weight in gram
  google.protobuf.DoubleValue initial_weight = 5;
  // dispensed weight in gram
  google.protobuf.DoubleValue dispensed_weight = 6;
  // expected expiry time
  google.protobuf.Timestamp expected_expiry_at = 7;
  // if the ingredient is expired or not
  bool is_expired = 8;
  // if the ingredient is the empty state (empty, retired or mapped)
  bool is_empty = 9;
  // ingredient id for what is “expected” to be in the canister. This is populated when canister is created.
  string mapped_ingredient_id = 10;
  // client collected at 
  google.protobuf.Timestamp client_collected_at = 11;
}
