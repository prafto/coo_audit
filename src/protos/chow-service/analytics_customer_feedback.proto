syntax = "proto3";
package chow_service_internal.v1;
option java_package = "com.doordash.rpc.chow_service_internal";
option java_outer_classname = "AnalyticsCustomerFeedback";
option java_multiple_files = true;

import "google/protobuf/timestamp.proto";
import "chow-service/common.proto";
import "google/protobuf/wrappers.proto";
import "chow-service/order_feedback.proto";

// Get Customer Feedback Request
message GetCustomerFeedbackRequest {
  // customer feedback request
  CustomerFeedbackRequest customer_feedback_request = 1;
  // Cursor used for pagination. Page size of 100.
  google.protobuf.StringValue cursor = 10;
}

// Get Customer Feedback Response
message GetCustomerFeedbackResponse {
  // customer feedback
  repeated CustomerFeedback customer_feedbacks = 1;
  // Cursor used for pagination, to grab next set of feedbacks
  google.protobuf.StringValue next_cursor = 10;
}

// Get Customer Feedback Count Request
message GetCustomerFeedbackCountRequest {
  // customer feedback count request
  CustomerFeedbackRequest customer_feedback_count_request = 1;
}

// Get Customer Feedback Count Response
message GetCustomerFeedbackCountResponse {
  // customer feedback count
  uint32 customer_feedback_count= 1;
}

// Customer Feedback Request
message CustomerFeedbackRequest {
  // Machine Ids
  MachineIds machine_ids = 1;
  // starting time range for request
  google.protobuf.Timestamp start_at = 2;
  // ending time range for request
  google.protobuf.Timestamp end_at = 3;
  // search recipe name
  string recipe_contains = 4;
  // search issue
  string issue_contains = 5;
  // filter by time (defaults to UTC)
  FilterByAttribute filter_by_time = 6;
}

// Customer Feedback
message CustomerFeedback {
  // order id
  string order_id = 1;
  // recipe id
  string recipe_id = 2;
  // machine id
  string machine_id = 3;
  // recipe name
  string recipe_name = 4;
  // machine name
  string machine_name = 5;
  // issues
  repeated Issue issues = 6;
  // additional feedback
  string additional_feedback = 7;
  // feedback sentiment
  FeedbackSentiment feedback_sentiment = 8;
  // feedback collected at (UTC)
  google.protobuf.Timestamp collected_at = 9;
}

// GetFeedbackSentimentAggregates Request
message GetFeedbackSentimentAggregatesRequest {
  // Machine Ids
  MachineIds machine_ids = 1;
  // starting time range for request
  google.protobuf.Timestamp start_at = 2;
  // ending time range for request
  google.protobuf.Timestamp end_at = 3;
  // filter by time (defaults to UTC)
  FilterByAttribute filter_by_time = 4;
}

// GetFeedbackSentimentAggregates Response
message GetFeedbackSentimentAggregatesResponse {
  // feedback sentiment aggregates
  repeated FeedbackSentimentAggregate feedback_sentiment_aggregates = 1;
  // total feedback sentiment count
  uint32 total_count = 2;
}

// FeedbackSentimentAggregate
message FeedbackSentimentAggregate {
  // feedback sentiment
  FeedbackSentiment feedback_sentiment = 1;
  // feedback sentiment count
  uint32 count = 2;
}

// GetCustomerFeedbackForDownload Request
message GetCustomerFeedbackForDownloadRequest {
  // machine / business/ store Id
  oneof criteria {
    // machine id
    string machine_id = 1 [deprecated = true];
    // business id
    string business_id = 2;
    // store id
    string store_id = 3 [deprecated = true];
    // machine ids
    MachineIds machine_ids = 5;
    // store ids
    StoreIds store_ids = 6;
  }
  // filter by time (defaults to UTC)
  FilterByAttribute filter_by_time = 4;
}

// GetCustomerFeedbackForDownload Response
message GetCustomerFeedbackForDownloadResponse {
  // csv for download
  CSVForDownload csv_for_download = 1;
}
