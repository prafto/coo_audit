syntax = "proto3";
package chow_service_internal.v1;

option java_package = "com.doordash.rpc.chow_service_internal";
option java_outer_classname = "RecipeService";
option java_multiple_files = true;

import "google/protobuf/wrappers.proto";
import "google/protobuf/timestamp.proto";
import "chow-service/common.proto";
import "chow-service/ingredient.proto";

message Recipe {
  // recipe id
  string id = 1;
  // recipe id this recipe is derived from (null for global recipes)
  google.protobuf.StringValue parent_recipe_id = 2;
  // machine id if this recipe is a local override of a global recipe (null for global recipes)
  google.protobuf.StringValue machine_id = 3;
  // name of bowl
  string name = 4;
  // internal name
  google.protobuf.StringValue internal_name = 19;
  // description of bowl
  google.protobuf.StringValue description = 5;
  // is production
  bool is_active = 6;
  // bowl category
  RecipeCategory category = 7;
  // is custom bowl
  google.protobuf.BoolValue is_custom_recipe = 12;
  // bowl price
  google.protobuf.UInt64Value price = 8;
  // nutrition profile calculated from ingredients
  NutritionFacts nutrition_facts  = 14;
  // display images
  repeated RecipeDisplayImage display_images = 9;
  // ingredients of this bowl
  repeated RecipeIngredient ingredients = 10;
  // creator's user_id
  string created_by = 11;
  // last updater's user_id
  string updated_by = 15;
  // translations
  repeated TranslatedFields translations = 13;
  // menu suggestion (previously rotation_identifier)
  string menu_suggestion = 16;
  // cuisines
  repeated google.protobuf.StringValue cuisines = 17;
  // proprietary id
  google.protobuf.StringValue proprietary_id = 18;
  // when was it created
  google.protobuf.Timestamp created_at = 40;
  // last update time
  google.protobuf.Timestamp updated_at = 41;
}

message RecipeCreatePayload {
  // name of bowl
  string name = 3;
  // internal name
  google.protobuf.StringValue internal_name = 19;
  // description of bowl
  google.protobuf.StringValue description = 4;
  // is production
  bool is_active = 5;
  // bowl category
  RecipeCategory category = 6;
  // is custom bowl
  google.protobuf.BoolValue is_custom_recipe = 12;
  // bowl price
  google.protobuf.UInt64Value price = 7;
  // display images
  repeated RecipeDisplayImage display_images = 8;
  // ingredients of this bowl
  repeated RecipeIngredient ingredients = 9;
  // creator's user_id
  string created_by = 11;
  // translations
  repeated TranslatedFields translations = 13;
  // menu suggestion (previously rotation_identifier)
  string menu_suggestion = 14;
  // cuisines
  repeated google.protobuf.StringValue cuisines = 17;
  // proprietary id
  google.protobuf.StringValue proprietary_id = 18;
}

message RecipeUpdatePayload {
  // name of bowl
  google.protobuf.StringValue name = 1;
  // internal name
  google.protobuf.StringValue internal_name = 12;
  // description of bowl
  google.protobuf.StringValue description = 2;
  // is production
  google.protobuf.BoolValue is_active = 3;
  // bowl category
  RecipeCategory category = 4;
  // is custom bowl
  google.protobuf.BoolValue is_custom_recipe = 8;
  // bowl price
  google.protobuf.UInt64Value price = 5;
  // display images
  repeated RecipeDisplayImage display_images = 6;
  // ingredients of this bowl
  repeated RecipeIngredient ingredients = 7;
  // translations
  repeated TranslatedFields translations = 9;
  // last updater's user_id
  string updated_by = 10;
  // menu suggestion (previously rotation_identifier)
  string menu_suggestion = 11;
  // cuisines
  repeated google.protobuf.StringValue cuisines = 17;
  // proprietary id
  google.protobuf.StringValue proprietary_id = 18;
}

message RecipeDisplayImage{
  string url = 1;
  bool is_default = 2;
}

message RecipeIngredient {
  // must be a global ingredient (i.e. ingredient.machine_id = null && ingredient.parent_ingredient_id = null)
  string ingredient_id = 1;
  PortionType portion_type = 2;
  bool is_alternate_ingredient = 3;
  IngredientPortionWeights weight = 4;
  DispensePriority dispense_priority = 5;
}

message MachineIdsAndRecipe {
  // machine ids to update/get
  MachineIds machine_ids = 1;
  // recipe to update/get
  string recipe_id = 2;
}

message RecipeIdsAndMachineId {
  // machine ids to update/get
  string machine_id = 1;
  // recipe to update/get
  repeated string recipe_id = 2;
}

// recipe ids
message RecipeIds {
  repeated string recipe_id = 1;
}

message MenuIdMachineId {
  // menu id
  string menu_id = 1;
  // machine id
  string machine_id = 2;
}

message GetRecipesRequest {
  oneof criteria {
    // leave empty for getting all global recipes
    // filter by machine_id
    google.protobuf.StringValue machine_id = 1;
    // or recipe_ids
    RecipeIds recipe_ids = 2;
    // or get local recipes by machine_ids AND parent recipe_id
    MachineIdsAndRecipe machine_ids_recipe = 3;
    // or menu id AND machine id
    MenuIdMachineId menu_id_machine_id = 4;
    // filter by recipe.name contains the string (case insensitive)
    google.protobuf.StringValue name_contains = 5;
    // or recipe ids and machine id
    RecipeIdsAndMachineId recipe_ids_machine_id = 6;
  }
  // Cursor used for pagination. Page size of 100.
  google.protobuf.StringValue cursor = 10;
}

message GetRecipesResponse {
  repeated Recipe recipes = 1;
  // Cursor used for pagination, to grab next set of promotions
  google.protobuf.StringValue next_cursor = 2;
}

message CreateRecipeRequest {
  RecipeCreatePayload recipe = 1;
}

message CreateRecipeResponse {
  Recipe recipe = 1;
}

message UpdateRecipeRequest {
  RecipeUpdatePayload recipe_update = 1;
  // should all machine level recipes be updated (applicable only if this is a global recipe)
  google.protobuf.BoolValue update_children = 2;
  // if true, removes all ingredients from the recipe(global and local)
  google.protobuf.BoolValue remove_all_ingredients = 6;
  oneof criteria {
    // list of machine ids
    // set to update settings for all recipes for given machine ids
    MachineIds machine_ids = 3;
    // recipe
    // set to update a specific recipe's settings across all machines
    string recipe_id = 4;
    // machine ids AND recipe_id
    // set to update a specific recipe's settings across given machines
    MachineIdsAndRecipe machine_ids_recipe = 5;
  }
}

message UpdateRecipeResponse {
  // updated recipe ids
  repeated string recipe_ids = 1;
}

message AddAlternateIngredientToMenuRecipesRequest {
  string menu_id = 1;
  string machine_id = 2;
  // recipes containing this ingredient will be updated
  string target_ingredient_id = 3;
  // alternate ingredient id
  string ingredient_id = 4;
  // last updater's user_id
  string updated_by = 5;
}

message AddAlternateIngredientToMenuRecipesResponse {
  // updated recipe ids
  repeated string recipe_ids = 1;
}

message RemoveAlternateIngredientFromMenuRecipesRequest {
  string menu_id = 1;
  string machine_id = 2;
  // alternate ingredient id
  string ingredient_id = 3;
  // last updater's user_id
  string updated_by = 4;
}

message RemoveAlternateIngredientFromMenuRecipesResponse {
  // updated recipe ids
  repeated string recipe_ids = 1;
}

// SearchRecipesRequest
message SearchRecipesRequest {
  // name
  google.protobuf.StringValue name = 1;
  // machine id
  google.protobuf.StringValue machine_id = 2;
  // recipe categories
  repeated RecipeCategory recipe_categories = 3;
  // cuisines
  repeated google.protobuf.StringValue cuisines = 4;
  // page size
  google.protobuf.Int32Value page_size = 5;
  // ingredients
  repeated string ingredient_ids = 6;
  // name (exact match on name)
  google.protobuf.StringValue exact_name = 7;
  // internal name (exact match on internal name)
  google.protobuf.StringValue exact_internal_name = 8;
  // Cursor used for pagination.
  google.protobuf.StringValue cursor = 30;
}

// SearchRecipesResponse
message SearchRecipesResponse {
  // recipes
  repeated Recipe recipes = 1;
  // Cursor used for pagination, to grab next set of ingredients
  google.protobuf.StringValue next_cursor = 2;
}

// SearchRecipesCountRequest
message SearchRecipesCountRequest {
  // name
  google.protobuf.StringValue name = 1;
  // machine id
  google.protobuf.StringValue machine_id = 2;
  // recipe categories
  repeated RecipeCategory recipe_categories = 3;
  // cuisines
  repeated google.protobuf.StringValue cuisines = 4;
  // ingredients
  repeated string ingredient_ids = 5;
  // name (exact match on name)
  google.protobuf.StringValue exact_name = 7;
  // internal name (exact match on internal name)
  google.protobuf.StringValue exact_internal_name = 8;
}

// SearchRecipesCountResponse
message SearchRecipesCountResponse {
  // total number of recipes with the given criteria
  uint64 count = 1;
}

// GetRecipeUsageRequest
message GetRecipeUsageRequest {
  // recipe id for which stats is requested
  string recipe_id = 1;
}

// GetRecipeUsageResponse
message GetRecipeUsageResponse {
  // machine ids that have the recipe across all menus
  repeated string machine_ids_available_on = 1;
  // machine ids that have the recipe only on active menus
  repeated string machine_ids_in_use_on = 2;
  // menu ids that have the recipe
  repeated string menu_ids_available_on = 3;
}

// GetMenuUsageRequest
message GetMenuUsageRequest {
  // menu id for which stats is requested
  string menu_id = 1;
}

// GetMenuUsageResponse
message GetMenuUsageResponse {
  // machine ids that have the menu
  repeated string machine_ids_available_on = 1;
  // machine ids that have the menu active
  repeated string machine_ids_in_use_on = 2;
  // chef curated dishes on this menu
  repeated string recipe_ids_chef_curated_on = 3;
}
