syntax = "proto3";
package chow_service_internal.v1;

option java_package = "com.doordash.rpc.chow_service_internal";
option java_outer_classname = "IngredientService";
option java_multiple_files = true;

import "google/protobuf/wrappers.proto";
import "google/protobuf/timestamp.proto";
import "chow-service/common.proto";

message Ingredient {
  // ingredient id
  string id = 1;
  // ingredient id this ingredient is derived from (null for global ingredients)
  google.protobuf.StringValue parent_ingredient_id = 2;
  // machine id if this ingredient is a local override of a global ingredient (null for global ingredients)
  google.protobuf.StringValue machine_id = 3;
  // name
  string name = 4;
  // description
  google.protobuf.StringValue description = 5;
  // state
  IngredientDeploymentState deployment_state = 6;
  // classification
  IngredientClassification classification = 7;
  // nutrition profile
  NutritionFacts nutrition_facts  = 8;
  // allergens
  repeated Allergen allergens = 9;
  // dietary restriction
  repeated DietaryRestriction dietary_restrictions = 10;
  // technical settings
  IngredientTechnicalSettings technical_settings = 11;
  // dispense settings
  repeated IngredientDispenseSetting dispense_settings = 12;
  // display images
  repeated IngredientDisplayImage display_images = 13;
  // pricing modifiers
  IngredientPricingModifier pricing_modifier = 14;
  // weights by portions
  repeated IngredientPortion portions = 16;
  // creator's user_id
  string created_by = 17;
  // last updater's user_id
  string updated_by = 20;
  // notes
  google.protobuf.StringValue notes = 18;
  // translations
  repeated TranslatedFields translations = 19;
  // bulk density
  google.protobuf.DoubleValue bulk_density = 21;
  // production readiness
  google.protobuf.BoolValue is_production_ready = 22;
  // canister hardware type
  CanisterHardwareType canister_hardware_type = 23;
  // variation type
  VariationType variation_type = 24;
  // when was it created
  google.protobuf.Timestamp created_at = 40;
  // last update time
  google.protobuf.Timestamp updated_at = 41;
}

message CreateIngredientPayload {
  // name
  string name = 3;
  // description
  google.protobuf.StringValue description = 4;
  // state
  IngredientDeploymentState deployment_state = 5;
  // classification
  IngredientClassification classification = 6;
  // nutrition profile
  NutritionFacts nutrition_facts  = 7;
  // allergens
  repeated Allergen allergens = 8;
  // dietary restriction
  repeated DietaryRestriction dietary_restrictions = 9;
  // technical settings
  IngredientTechnicalSettings technical_settings = 10;
  // dispense settings
  repeated IngredientDispenseSetting dispense_settings = 11;
  // display images
  repeated IngredientDisplayImage display_images = 12;
  // pricing modifiers
  IngredientPricingModifier pricing_modifier = 13;
  // weights by portions
  repeated IngredientPortion portions = 15;
  // creator's user_id
  string created_by = 16;
  // notes
  google.protobuf.StringValue notes = 17;
  // translations
  repeated TranslatedFields translations = 18;
  // bulk density
  google.protobuf.DoubleValue bulk_density = 19;
  // production readiness
  google.protobuf.BoolValue is_production_ready = 20;
  // canister hardware type
  CanisterHardwareType canister_hardware_type = 21;
  // variation type
  VariationType variation_type = 24;
}

message UpdateIngredientPayload {
  // name
  google.protobuf.StringValue name = 1;
  // description
  google.protobuf.StringValue description = 2;
  // state
  IngredientDeploymentState deployment_state = 3;
  // classification
  IngredientClassification classification = 4;
  // nutrition profile
  NutritionFacts nutrition_facts  = 5;
  // allergens
  repeated Allergen allergens = 6;
  // dietary restriction
  repeated DietaryRestriction dietary_restrictions = 7;
  // technical settings
  IngredientTechnicalSettings technical_settings = 8;
  // dispense settings
  repeated IngredientDispenseSetting dispense_settings = 9;
  // display images
  repeated IngredientDisplayImage display_images = 10;
  // pricing modifiers
  IngredientPricingModifier pricing_modifier = 11;
  // weights by portions
  repeated IngredientPortion portions = 13;
  // notes
  google.protobuf.StringValue notes = 14;
  // translations
  repeated TranslatedFields translations = 15;
  // last updater's user_id
  string updated_by = 16;
  // bulk density
  google.protobuf.DoubleValue bulk_density = 19;
  // production readiness
  google.protobuf.BoolValue is_production_ready = 20;
  // canister hardware type
  CanisterHardwareType canister_hardware_type = 21;
  // variation type
  VariationType variation_type = 24;
}

enum IngredientDeploymentState {
  INGREDIENT_DEPLOYMENT_STATE_UNSPECIFIED = 0;
  // Ingredient created for qualification
  INGREDIENT_DEPLOYMENT_STATE_QUALIFICATION = 1;
  // Ingredient is qualified and deployed to producton
  INGREDIENT_DEPLOYMENT_STATE_PRODUCTION = 2;
  // Ingredient deactivated
  INGREDIENT_DEPLOYMENT_STATE_DEACTIVATED = 3;
  // Ingredient new (created from chowmint)
  INGREDIENT_DEPLOYMENT_STATE_NEW = 4;
}

message IngredientPortion {
  PortionType portion_type = 1;
  IngredientPortionWeights weights = 2;
  IngredientPortionTechnicalSettings technical_settings = 3;
  RecipeCategory recipe_category = 4;
}

enum IngredientClassification {
  INGREDIENT_CLASSIFICATION_UNSPECIFIED = 0;
  INGREDIENT_CLASSIFICATION_CEREALS = 1;
  INGREDIENT_CLASSIFICATION_COMPOSED_SALADS = 2;
  INGREDIENT_CLASSIFICATION_DAIRY = 3;
  INGREDIENT_CLASSIFICATION_DRESSINGS = 4 [deprecated = true];
  INGREDIENT_CLASSIFICATION_FRUITS = 5;
  INGREDIENT_CLASSIFICATION_GRAIN = 6;
  INGREDIENT_CLASSIFICATION_GREEN = 7;
  INGREDIENT_CLASSIFICATION_MILK = 8;
  INGREDIENT_CLASSIFICATION_MISC_TOPPING = 9;
  INGREDIENT_CLASSIFICATION_NUTS_SEEDS = 10;
  INGREDIENT_CLASSIFICATION_PASTA = 11;
  INGREDIENT_CLASSIFICATION_PROTEIN = 12;
  INGREDIENT_CLASSIFICATION_SAUCES = 13 [deprecated = true];
  INGREDIENT_CLASSIFICATION_SOUPS = 14 [deprecated = true];
  INGREDIENT_CLASSIFICATION_VEGETABLES = 15;
  INGREDIENT_CLASSIFICATION_LIQUIDS = 16;
  INGREDIENT_CLASSIFICATION_CRISPY_OR_HARD = 17;
}

// list of possible allergens - based on labeling requirements
enum Allergen {
  // don't set this value
  ALLERGEN_UNSPECIFIED = 0;
  // nuts
  ALLERGEN_PEANUTS = 1;
  ALLERGEN_TREE_NUTS = 2;
  // milk
  ALLERGEN_MILK = 3;
  // egg
  ALLERGEN_EGGS = 4;
  // fish
  ALLERGEN_FISH = 5;
  // shellfish
  ALLERGEN_SHELLFISH = 6;
  ALLERGEN_SOY = 7;
  // wheat
  ALLERGEN_WHEAT = 8;
  ALLERGEN_SESAME_SEEDS = 9;
  ALLERGEN_MUSTARD = 10;
  ALLERGEN_SULFITES = 11;
  ALLERGEN_GLUTEN = 12;
  // soy
  ALLERGEN_CELERY = 13;
  ALLERGEN_LUPIN= 14;
  // meat has been moved to DietaryRestriction
}

// dietary restrictions met
enum DietaryRestriction {
  DIETARY_RESTRICTION_UNSPECIFIED = 0;
  DIETARY_RESTRICTION_VEGETARIAN = 1;
  DIETARY_RESTRICTION_VEGAN = 2;
  DIETARY_RESTRICTION_KOSHER = 3;
  DIETARY_RESTRICTION_HALAL = 4;
}

enum DispensePriority {
  DISPENSE_PRIORITY_UNSPECIFIED = 0;
  DISPENSE_PRIORITY_EARLY_BASE = 1;
  DISPENSE_PRIORITY_DEFAULT_BASE = 2;
  DISPENSE_PRIORITY_LATE_BASE = 3;
  DISPENSE_PRIORITY_EARLIEST_TOPPING = 4;
  DISPENSE_PRIORITY_EARLY_TOPPING = 5;
  DISPENSE_PRIORITY_DEFAULT_TOPPING = 6;
  DISPENSE_PRIORITY_LATE_TOPPING = 7;
  DISPENSE_PRIORITY_LATEST_TOPPING = 8;
  DISPENSE_PRIORITY_EARLY_DRESSING = 9;
  DISPENSE_PRIORITY_DEFAULT_DRESSING = 10;
  DISPENSE_PRIORITY_LATE_DRESSING = 11;
}

message IngredientTechnicalSettings {
  CanisterPosition canister_position  = 1;
  google.protobuf.UInt32Value expiry_days = 3;
  google.protobuf.BoolValue requires_shufflers = 4;
  google.protobuf.BoolValue requires_shaking = 5;
  // full canister, ingredient weight excluding the weight of canister
  google.protobuf.DoubleValue canister_weight = 7;
}

message IngredientPortionTechnicalSettings {
  DispensePriority dispense_priority = 1;
}

// canister positions
enum CanisterPosition {
  // don't set this value
  CANISTER_POSITION_UNSPECIFIED = 0;
  // inner
  CANISTER_POSITION_INNER = 1;
  // outer
  CANISTER_POSITION_OUTER = 2;
  // both
  CANISTER_POSITION_BOTH = 3;
}

message IngredientDispenseSetting {
  double weight = 1;
  uint32 timeout = 2;
  string g_code = 3;
  CanisterPosition canister_position = 4;
  google.protobuf.StringValue g_code_sally = 5;
  google.protobuf.StringValue g_code_dash2go = 6;
}

message IngredientDisplayImage{
  string url = 1;
  bool is_default = 2;
  ImageVisual visual = 3;
}

enum ImageVisual {
  IMAGE_VISUAL_UNSPECIFIED = 0;
  IMAGE_VISUAL_TRANSPARENCY = 1;
  IMAGE_VISUAL_EDITORIAL = 2;
}

message IngredientPricingModifier {
  google.protobuf.DoubleValue premium = 1;
  google.protobuf.DoubleValue extra = 2;
}

message MachineIdsAndIngredient {
  // machine ids to update/get
  MachineIds machine_ids = 1;
  // ingredient to update/get
  string ingredient_id = 2;
}

// GetIngredientCriteria for ingredient ids within a machine context
message IngredientIdsAndMachineId {
  // ingredient to update/get
  repeated string ingredient_ids = 1;
  // machine ids to update/get
  string machine_id = 2;
}

// ingredient ids
message IngredientIds {
  repeated string ingredient_id = 1;
}

message RecipeIdMachineId {
  // recipe id
  string recipe_id = 1;
  // machine id
  string machine_id = 2;
}

message GetIngredientsRequest {
  oneof criteria {
    // leave empty for getting all global ingredients
    // filter by machine_id
    google.protobuf.StringValue machine_id = 1;
    // or ingredient_ids
    IngredientIds ingredient_ids = 2;
    // or get local ingredients by machine_ids AND parent ingredient_id
    MachineIdsAndIngredient machine_ids_ingredient = 3;
    // or recipe id AND machine id
    RecipeIdMachineId recipe_id_machine_id = 4;
    // filter by ingredient.name contains the string (case insensitive)
    google.protobuf.StringValue name_contains = 5;
    // filter by ingredient ids and machine id
    IngredientIdsAndMachineId ingredient_ids_machine_id = 6;
  }
  // Cursor used for pagination. Page size of 100.
  google.protobuf.StringValue cursor = 10;
}

message GetIngredientsResponse {
  repeated Ingredient ingredients = 1;
  // Cursor used for pagination, to grab next set of promotions
  google.protobuf.StringValue next_cursor = 2;
}

message CreateIngredientRequest {
  CreateIngredientPayload ingredient = 1;
}

message CreateIngredientResponse {
  Ingredient ingredient = 1;
}

message UpdateIngredientRequest {
  UpdateIngredientPayload ingredient_update = 1;
  // should all machine level ingredients be updated (applicable only if this is a global ingredient)
  google.protobuf.BoolValue update_children = 2;
  // should all fields be updated
  // - setting to false will result in partial update
  // - setting to true will result in all fields to be updated, unset fields will have default values defined in chow-service
  google.protobuf.BoolValue update_null_unsafe = 6;
  oneof criteria {
    // list of machine ids
    // set to update settings for all ingredients for given machine ids
    MachineIds machine_ids = 3;
    // ingredient
    // set to update a specific ingredient's settings across all machines
    string ingredient_id = 4;
    // machine ids AND ingredient_id
    // set to update a specific ingredient's settings across given machines
    MachineIdsAndIngredient machine_ids_ingredient = 5;
  }
}

message UpdateIngredientResponse {
  // updated ingredient ids
  repeated string ingredient_ids = 1;
}

// Add a new portion to ingredients
// If all existing portions for an ingredient don't match the portion_type & dispense_priority with the input, the update will be skipped for that ingredient
message AddPortionToIngredientRequest {
  // portion to be added
  IngredientPortion portion = 1;
  // should all machine level ingredients be updated
  google.protobuf.BoolValue update_children = 2;
  oneof criteria {
    // global ingredient id
    string ingredient_id = 3;
  }
  // last updater's user_id
  string updated_by = 4;
}

message AddPortionToIngredientResponse {
  // updated ingredient ids
  repeated string ingredient_ids = 1;
  // skipped ingredient ids
  // these are the ingredients where portion_type & dispense_priority didn't match that of the input
  repeated string skipped_ingredient_ids = 2;
}

// Remove a portion from ingredients (if it exists)
message RemovePortionFromIngredientRequest {
  // portion type of the portion to be removed
  PortionType portion_type = 1;
  // recipe category of the portion to be removed
  RecipeCategory recipe_category = 2;
  // should all machine level ingredients be updated
  google.protobuf.BoolValue update_children = 3;
  oneof criteria {
    // global ingredient id
    string ingredient_id = 4;
  }
  // last updater's user_id
  string updated_by = 5;
}

message RemovePortionFromIngredientResponse {
  // updated ingredient ids
  repeated string ingredient_ids = 1;
}

message GetIngredientUsageRequest {
  // ingredient id for which stats is requested
  string ingredient_id = 1;
}

message GetIngredientUsageResponse {
  // machine ids using the ingredient
  repeated string machine_ids = 1;
  // machine ids that are currently using ingredient
  repeated string machine_ids_currently_using_ingredient = 2;
}

// SearchIngredientsRequest
message SearchIngredientsRequest {
  // name
  google.protobuf.StringValue name = 1;
  // canister hardware types
  repeated CanisterHardwareType canister_hardware_types = 2;
  // recipe categories
  repeated RecipeCategory recipe_categories = 3;
  // portion types
  repeated PortionType portion_types = 4;
  // classifications
  repeated IngredientClassification classifications = 5;
  // machine id
  google.protobuf.StringValue machine_id = 6;
  // deployment states
  repeated IngredientDeploymentState deployment_states = 7;
  // name (exact match on name)
  google.protobuf.StringValue exact_name = 8;
  // internal name (exact match on internal name)
  google.protobuf.StringValue exact_internal_name = 9;
  // Cursor used for pagination. Page size of 100.
  google.protobuf.StringValue cursor = 30;
}

// SearchIngredientsResponse
message SearchIngredientsResponse {
  // ingredients
  repeated Ingredient ingredients = 1;
  // Cursor used for pagination, to grab next set of ingredients
  google.protobuf.StringValue next_cursor = 2;
}

// SearchIngredientsCountRequest
message SearchIngredientsCountRequest {
  // search ingredients count
  SearchIngredientsRequest search_ingredients_count_request = 1;
}

// SearchIngredientsCountResponse
message SearchIngredientsCountResponse {
  // total number of ingredients with given criteria
  uint64 count = 1;
}

// Canister Hardware type
enum CanisterHardwareType {
  // unspecified
  CANISTER_HARDWARE_TYPE_UNSPECIFIED = 0;
  // both
  CANISTER_HARDWARE_TYPE_BOTH = 1;
  // both with anti clump mechanism
  CANISTER_HARDWARE_TYPE_BOTH_WITH_ANTI_CLUMP_MECHANISM = 2;
  // both with bottle
  CANISTER_HARDWARE_TYPE_BOTH_WITH_BOTTLE= 3;
  // inner
  CANISTER_HARDWARE_TYPE_INNER = 4;
  // inner with bottle
  CANISTER_HARDWARE_TYPE_INNER_WITH_BOTTLE = 5;
  // inner with clump sleeve
  CANISTER_HARDWARE_TYPE_INNER_WITH_CLUMP_SLEEVE = 6;
  // lvl bottle
  CANISTER_HARDWARE_TYPE_LVL_BOTTLE = 7;
  // outer
  CANISTER_HARDWARE_TYPE_OUTER = 8;
  // outer with baffler
  CANISTER_HARDWARE_TYPE_OUTER_WITH_BAFFLER = 9;
  // outer with bottle
  CANISTER_HARDWARE_TYPE_OUTER_WITH_BOTTLE = 10;
  // outer with shuffler
  CANISTER_HARDWARE_TYPE_OUTER_WITH_SHUFFLER = 11;
}

// variation type
enum VariationType {
  VARIATION_TYPE_UNSPECIFIED = 0;
  VARIATION_TYPE_CEREALS_KRISPIES = 1;
  VARIATION_TYPE_CEREALS_FLAKES = 2;
  VARIATION_TYPE_CEREALS_PUFFS_AND_LOOPS = 3;
  VARIATION_TYPE_CEREALS_GRANOLAS = 4;
  VARIATION_TYPE_COMPOSED_SALADS_COMPOUND_PASTA_SALAD = 5;
  VARIATION_TYPE_COMPOSED_SALADS_COMPOUND_GRAIN_SALAD = 6;
  VARIATION_TYPE_COMPOSED_SALADS_SLAWS = 7;
  VARIATION_TYPE_COMPOSED_SALADS_FLORETS_OR_WHOLE_PIECE = 8;
  VARIATION_TYPE_COMPOSED_SALADS_NOODLE_SALADS = 9;
  VARIATION_TYPE_COMPOSED_SALADS_MISCELLANEOUS_MIX_SALAD = 10;
  VARIATION_TYPE_COMPOSED_SALADS_BEANS_OR_LENTIL_SALADS = 11;
  VARIATION_TYPE_COMPOSED_SALADS_CORN_SALADS = 12;
  VARIATION_TYPE_CRISPY_OR_HARD_SMALL = 13;
  VARIATION_TYPE_CRISPY_OR_HARD_MEDIUM = 14;
  VARIATION_TYPE_CRISPY_OR_HARD_LARGE = 15;
  VARIATION_TYPE_DAIRY_FEATHER_SHREDDED = 16;
  VARIATION_TYPE_DAIRY_GRATED = 17;
  VARIATION_TYPE_DAIRY_CUBED = 18;
  VARIATION_TYPE_DAIRY_SHAVED = 19;
  VARIATION_TYPE_FRUITS_LARGE_DICE = 20;
  VARIATION_TYPE_FRUITS_MEDIUM_DICE = 21;
  VARIATION_TYPE_FRUITS_SMALL_DICE = 22;
  VARIATION_TYPE_FRUITS_WEDGES_OR_QUATERS = 23;
  VARIATION_TYPE_FRUITS_SLICES = 24;
  VARIATION_TYPE_FRUITS_WHOLE_FRUITS_SMALL = 25;
  VARIATION_TYPE_FRUITS_WHOLE_FRUITS_MEDIUM = 26;
  VARIATION_TYPE_FRUITS_MISCELLANEOUS_BLENDS = 27;
  VARIATION_TYPE_GRAINS_FINE = 28;
  VARIATION_TYPE_GRAINS_COARSE = 29;
  VARIATION_TYPE_GREENS_LIGHT = 30;
  VARIATION_TYPE_GREENS_MEDIUM = 31;
  VARIATION_TYPE_GREENS_HEAVY = 32;
  VARIATION_TYPE_GREENS_CHIFFONADE = 33;
  VARIATION_TYPE_LIQUIDS_HIGH_VISCOSITY = 34;
  VARIATION_TYPE_LIQUIDS_MEDIUM_VISCOSITY = 35;
  VARIATION_TYPE_LIQUIDS_LOW_VISCOSITY = 36;
  VARIATION_TYPE_MILK_MILK = 37;
  VARIATION_TYPE_MISCELLANEOUS_TOPPINGS_BAKED_BITES = 38;
  VARIATION_TYPE_MISCELLANEOUS_TOPPINGS_GRAPE_TOMATOES = 39;
  VARIATION_TYPE_MISCELLANEOUS_TOPPINGS_CHERRY_TOMATOES = 40;
  VARIATION_TYPE_MISCELLANEOUS_TOPPINGS_PLUCKED_HERBS = 41;
  VARIATION_TYPE_MISCELLANEOUS_TOPPINGS_CANDY = 42;
  VARIATION_TYPE_MISCELLANEOUS_TOPPINGS_CROUTONS = 43;
  VARIATION_TYPE_MISCELLANEOUS_TOPPINGS_GRILLED_FRUITS = 44;
  VARIATION_TYPE_NUTS_AND_SEEDS_FINE_SEEDS = 45;
  VARIATION_TYPE_NUTS_AND_SEEDS_MEDIUM_SEEDS = 46;
  VARIATION_TYPE_NUTS_AND_SEEDS_LARGE_SEEDS = 47;
  VARIATION_TYPE_PASTAS_SMALL_PASTA = 48;
  VARIATION_TYPE_PASTAS_MEDIUM_PASTA = 49;
  VARIATION_TYPE_PASTAS_LARGE_PASTA = 50;
  VARIATION_TYPE_PROTEINS_LARGE_DICE = 51;
  VARIATION_TYPE_PROTEINS_MEDIUM_DICE = 52;
  VARIATION_TYPE_PROTEINS_CRUMBLED = 53;
  VARIATION_TYPE_PROTEINS_SHREDDED = 54;
  VARIATION_TYPE_PROTEINS_PULLED_MEATS = 55;
  VARIATION_TYPE_PROTEINS_MEAT_BALLS = 56;
  VARIATION_TYPE_PROTEINS_SHAVED = 57;
  VARIATION_TYPE_PROTEINS_LARGE_SEAFOOD = 58;
  VARIATION_TYPE_PROTEINS_MEDIUM_SEAFOOD = 59;
  VARIATION_TYPE_PROTEINS_POKE = 60;
  VARIATION_TYPE_PROTEINS_TOFU = 61;
  VARIATION_TYPE_PROTEINS_DICED_EGGS = 62;
  VARIATION_TYPE_PROTEINS_WHOLE_EGGS = 63;
  VARIATION_TYPE_PROTEINS_DICED_OMELETTE = 64;
  VARIATION_TYPE_PROTEINS_SCRAMBLED_EGGS = 65;
  VARIATION_TYPE_PROTEINS_STRIPS = 66;
  VARIATION_TYPE_VEGETABLES_LARGE_DICE = 67;
  VARIATION_TYPE_VEGETABLES_MEDIUM_DICE = 68;
  VARIATION_TYPE_VEGETABLES_SMALL_DICE = 69;
  VARIATION_TYPE_VEGETABLES_WEDGES_OR_QUATERS = 70;
  VARIATION_TYPE_VEGETABLES_SLICES = 71;
  VARIATION_TYPE_VEGETABLES_SHREDDED = 72;
  VARIATION_TYPE_VEGETABLES_JULLIANNE = 73;
  VARIATION_TYPE_VEGETABLES_TUBULAR = 74;
  VARIATION_TYPE_VEGETABLES_FLORETS_OR_WHOLE_PIECE = 75;
  VARIATION_TYPE_VEGETABLES_SOFT_OR_PICKLED_SMALL = 76;
  VARIATION_TYPE_VEGETABLES_SOFT_OR_PICKLED_MEDIUM = 77;
  VARIATION_TYPE_VEGETABLES_SOFT_OR_PICKLED_LARGE = 78;
  VARIATION_TYPE_VEGETABLES_MISCELLANEOUS_BLENDS = 79;
}

// GetSignedImageUploadUrl request
message GetSignedImageUploadUrlRequest {
  // image file extension
  ImageFileExtension image_file_extension = 1;
  // image category
  ImageCategory image_category = 2;
  // ingredient, menu or recipe id
  string category_id = 3;
}

// GetSignedImageUploadUrl response
message GetSignedImageUploadUrlResponse {
  // signed upload url for POST requests
  string upload_url = 1;
  // media url for GET requests
  string media_url = 2;
}
