syntax = "proto3";
package chow_service_internal.v1;

option java_package = "com.doordash.rpc.chow_service_internal";
option java_outer_classname = "AnalyticsService";
option java_multiple_files = true;
option java_generic_services = true;

import "google/protobuf/wrappers.proto";
import "chow-service/common.proto";
import "google/protobuf/timestamp.proto";
import "chow-service/analytics_machine_downtime.proto";
import "chow-service/analytics_order.proto";
import "chow-service/analytics_ingredients.proto";
import "chow-service/analytics_customer_feedback.proto";
import "chow-service/analytics_promotions.proto";

// ChowAnalytics service
service ChowAnalyticsService {
  // Get Latest Machine Status
  rpc GetLatestMachineStatus(GetLatestMachineStatusRequest) returns (GetLatestMachineStatusResponse);

  // Get Machine Temperatures
  rpc GetMachineTemperatures(GetMachineTemperaturesRequest) returns (GetMachineTemperaturesResponse);

  // Get Machine Downtime Events
  rpc GetMachineDowntimeEvents(GetMachineDowntimeEventsRequest) returns (GetMachineDowntimeEventsResponse);

  // Get Machine Downtime Aggregates
  rpc GetMachineDowntimeAggregates(GetMachineDowntimeAggregatesRequest) returns (GetMachineDowntimeAggregatesResponse);

  // Get Orders
  rpc GetOrders(GetOrdersRequest) returns (GetOrdersResponse);

  // Get Order Details
  rpc GetOrderDetails(GetOrderDetailsRequest) returns (GetOrderDetailsResponse);

  // Get Order Aggregates
  rpc GetOrderAggregates(GetOrderAggregatesRequest) returns (GetOrderAggregatesResponse);

  // Get Ingredient Rankings
  rpc GetIngredientRankings(GetIngredientRankingsRequest) returns (GetIngredientRankingsResponse);

  // Get IngredientRankings Count
  rpc GetIngredientRankingsCount(GetIngredientRankingsCountRequest) returns (GetIngredientRankingsCountResponse);

  // Get Ingredients levels
  rpc GetIngredientsLevels(GetIngredientsLevelsRequest) returns (GetIngredientsLevelsResponse);

  // Get Customer Feedback
  rpc GetCustomerFeedback(GetCustomerFeedbackRequest) returns (GetCustomerFeedbackResponse);

  // Get Customer Feedback Count
  rpc GetCustomerFeedbackCount(GetCustomerFeedbackCountRequest) returns (GetCustomerFeedbackCountResponse);

  // Get Feedback Sentiment Aggregates
  rpc GetFeedbackSentimentAggregates(GetFeedbackSentimentAggregatesRequest) returns (GetFeedbackSentimentAggregatesResponse);

  // Get Orders for Download
  rpc GetOrdersForDownload(GetOrdersForDownloadRequest) returns (GetOrdersForDownloadResponse);

  // Get Promotions for Download
  rpc GetPromotionsForDownload(GetPromotionsForDownloadRequest) returns (GetPromotionsForDownloadResponse);

  // Get Customer feedback for Download
  rpc GetCustomerFeedbackForDownload(GetCustomerFeedbackForDownloadRequest) returns (GetCustomerFeedbackForDownloadResponse);

  // Get machines total time online
  rpc GetMachinesTotalTimeOnline(GetMachinesTotalTimeOnlineRequest) returns (GetMachinesTotalTimeOnlineResponse);
}

// Resources

// Machine Temperature
message MachineTemperature {
  // Temperature
  google.protobuf.DoubleValue temperature = 1;
  // Client UTC timestamp when message was collected by the client
  google.protobuf.Timestamp client_collected_at = 2;
}

// Requests & Responses

// GetCurrentMachineStatus request
message GetLatestMachineStatusRequest {
  // Machine Ids
  MachineIds machine_ids = 1;
}

// GetCurrentMachineStatus response
message GetLatestMachineStatusResponse {
  // latest machine status
  repeated LatestMachineStatus latest_machine_statuses = 1;
}

// Latest Machine Status
message LatestMachineStatus {
  // Machine Status
  MachineStatus status = 1;
  // Temperature
  google.protobuf.DoubleValue temperature = 2;
  // Client UTC timestamp when message was collected by the client
  google.protobuf.Timestamp client_collected_at = 3;
  // Machine Id
  string machine_id = 4;
}

// GetMachineTemperatures request
message GetMachineTemperaturesRequest {
  // Machine Id
  string machine_id = 1;
  // starting time range for temperatures
  google.protobuf.Timestamp start_at = 2;
  // ending time range for temperatures
  google.protobuf.Timestamp end_at = 3;
  // filter by time (defaults to UTC)
  FilterByAttribute filter_by_time = 4;

}

// GetMachineTemperatures response
message GetMachineTemperaturesResponse {
  // Machine Temperature
  repeated MachineTemperature temperatures = 1;
  // Unit of temperature
  TemperatureUnit temperature_unit = 2;
}
