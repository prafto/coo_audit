syntax = "proto3";
package chow_service_internal.v1;
option java_package = "com.doordash.rpc.chow_service_internal";
option java_outer_classname = "IotService";
option java_multiple_files = true;
option java_generic_services = true;

import "chow-service/machine_status.proto";
import "chow-service/app_session.proto";
import "chow-service/machine_sync.proto";
import "chow-service/order.proto";
import "chow-service/ingredient_dispense.proto";
import "chow-service/canister_handshake.proto";
import "chow-service/order_feedback.proto";
import "chow-service/promotion_iot.proto";
import "chow-service/machine_activity.proto";
import "chow-service/menu_iot.proto";
import "chow-service/canister_map.proto";
import "chow-service/iot_logs.proto";
import "chow-service/authentication.proto";

// Service
// NOTE: Method names should follow VerbNoun convention
// Naming Guide: https://cloud.google.com/apis/design/naming_convention#method_name
service ChowIotService {
  // Record machine status
  rpc RecordStatus(RecordStatusRequest) returns (RecordStatusResponse);
  // Record App session
  rpc RecordAppSession(RecordAppSessionRequest) returns (RecordAppSessionResponse);
  // Record Order
  rpc RecordOrder(RecordOrderRequest) returns (RecordOrderResponse);
  // Record Order feedback
  rpc RecordOrderFeedback(RecordOrderFeedbackRequest) returns (RecordOrderFeedbackResponse);
  // Record Ingredient Dispense Logs
  rpc RecordIngredientDispense(RecordIngredientDispenseRequest) returns (RecordIngredientDispenseResponse);
  // Canister handshake
  rpc RecordCanisterHandshake(RecordCanisterHandshakeRequest) returns (RecordCanisterHandshakeResponse);
  // Machine activity
  rpc RecordMachineActivity(RecordMachineActivityRequest) returns (RecordMachineActivityResponse);
  // Get initial sync data
  rpc SyncData(SyncDataRequest) returns (SyncDataResponse);
  // Get promotion
  rpc GetPromotion(GetPromotionRequest) returns (GetPromotionResponse);
  // redeem promotion
  rpc RedeemPromotionalCode(RedeemPromotionalCodeRequest) returns (RedeemPromotionalCodeResponse);
  // change default menu
  rpc ChangeDefaultMenu(ChangeDefaultMenuRequest) returns (ChangeDefaultMenuResponse);
  // replace ingredient
  rpc ReplaceIngredient(ReplaceIngredientRequest) returns (ReplaceIngredientResponse);
  // upload robot logs
  rpc UploadLog(stream UploadLogRequest) returns (UploadLogResponse);
  // verify if master password is valid
  rpc VerifyMasterPassword(VerifyMasterPasswordRequest) returns (VerifyMasterPasswordResponse);
}
