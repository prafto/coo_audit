syntax = "proto3";
package chow_service_internal.v1;
option java_package = "com.doordash.rpc.chow_service_internal";
option java_outer_classname = "AnalyticsOrders";
option java_multiple_files = true;

import "google/protobuf/wrappers.proto";
import "chow-service/common.proto";
import "google/protobuf/timestamp.proto";

// GetOrders Request
message GetOrdersRequest {
  // Machine Ids
  MachineIds machine_ids = 1;
  // starting time range for request
  google.protobuf.Timestamp start_at = 2;
  // ending time range for request
  google.protobuf.Timestamp end_at = 3;
  // search recipe name
  string recipe_contains = 4;
  // filter by time (defaults to UTC)
  FilterByAttribute filter_by_time = 5;
  // Cursor used for pagination. Page size of 100.
  google.protobuf.StringValue cursor = 10;
}

// GetOrders Response
message GetOrdersResponse {
  // orders
  repeated Order orders = 1;
  // Cursor used for pagination, to grab next set of orders
  google.protobuf.StringValue next_cursor = 10;
}

// Order
message Order {
  // machine id
  string machine_id = 1;
  // machine name
  string machine_name = 2;
  // order id
  string order_id = 3;
  // recipe name
  string recipe_name = 4;
  // Order completion time (UTC)
  google.protobuf.Timestamp order_completed_at = 5;
  // price before tax
  google.protobuf.UInt64Value before_tax_price = 6;
  // tax
  google.protobuf.UInt64Value tax_charged = 7;
  // discount amount
  google.protobuf.UInt64Value discount_amount = 8;
  // base price
  google.protobuf.UInt64Value base_price = 9;
  // total price
  google.protobuf.UInt64Value total_price = 10;
  // currency
  PricingCurrency currency = 11;
  // paid by
  PaidByType paid_by = 12;
  // order status
  OrderStatus order_status = 13;
}

// GetOrderDetails Request
message GetOrderDetailsRequest {
  //order id
  string order_id = 1;
}

// GetOrderDetails Response
message GetOrderDetailsResponse {
  // order details
  OrderDetails order_details = 1;
}

// OrderDetails
message OrderDetails {
  // order
  Order order = 1;
  // promotion code
  string promotion_code = 2;
  // ingredients
  repeated Ingredients ingredients = 3;
}

// Ingredients
message Ingredients {
  // ingredient pricing type
  IngredientPricingType ingredient_pricing_type = 1;
  // ingredient name
  string ingredient_name = 2;
  // ingredient price
  google.protobuf.UInt64Value ingredient_price = 3;
  // portion size
  PortionSize portion_size = 4;
  // portion type
  PortionType portion_type = 5;
}

// IngredientPricingType
enum IngredientPricingType {
  // unspecified
  INGREDIENT_PRICING_TYPE_UNSPECIFIED = 0;
  // regular ingredient
  INGREDIENT_PRICING_TYPE_REGULAR = 1;
  // premium
  INGREDIENT_PRICING_TYPE_PREMIUM = 2;
  // extra
  INGREDIENT_PRICING_TYPE_EXTRA = 3;
}

// GetOrderAggregates Request
message GetOrderAggregatesRequest {
  // Machine Ids
  MachineIds machine_ids = 1;
  // starting time range for request
  google.protobuf.Timestamp start_at = 2;
  // ending time range for request
  google.protobuf.Timestamp end_at = 3;
  // search recipe name
  string recipe_contains = 4;
  // filter by time (defaults to UTC)
  FilterByAttribute filter_by_time = 5;
}

// GetOrderAggregates Response
message GetOrderAggregatesResponse {
  // Orders Per Date
  repeated OrderPerDate orders_per_date = 1;
  // Orders Per Hour Per weekday
  repeated OrderPerHourPerWeekday order_per_hour_per_weekday = 2;
  // total revenues
  repeated Revenue total_revenues = 3;
  // number of orders
  uint32 number_of_orders = 4;
}

// GetOrdersForDownload Request
message GetOrdersForDownloadRequest {
  // machine / business/ store Id
  oneof criteria {
    // machine id
    string machine_id = 1 [deprecated = true];
    // business id
    string business_id = 2;
    // store id
    string store_id = 3 [deprecated = true];
    // machine ids
    MachineIds machine_ids = 5;
    // store ids
    StoreIds store_ids = 6;
  }
  // filter by time (defaults to UTC)
  FilterByAttribute filter_by_time = 4;
}

// Revenue
message Revenue {
  // total revenue
  google.protobuf.UInt64Value amount = 1;
  // currency
  PricingCurrency currency = 2;
}

// GetOrdersForDownload Response
message GetOrdersForDownloadResponse {
  // csv for download
  CSVForDownload csv_for_download = 1;
}

// Order Per Date
message OrderPerDate {
  // date
  Date date = 1;
  // number of orders
  uint32 number_of_orders = 2;
}

// Order Per Hour Per Weekday
message OrderPerHourPerWeekday {
  // weekday
  Weekday week_day = 1;
  // hour(0-23)
  uint32 hour = 2;
  // number of orders
  uint32 number_of_orders = 3;
}

// Date
message Date {
  // year
  uint32 year = 1;
  // month
  Month month = 2;
  // day (1-31)
  uint32 day = 3;
}

// Weekday
enum Weekday {
  // unspecified
  WEEKDAY_UNSPECIFIED = 0;
  // Monday
  WEEKDAY_MONDAY = 1;
  // Tuesday
  WEEKDAY_TUESDAY = 2;
  // Wednesday
  WEEKDAY_WEDNESDAY = 3;
  // Thursday
  WEEKDAY_THURSDAY = 4;
  // Friday
  WEEKDAY_FRIDAY = 5;
  // Saturday
  WEEKDAY_SATURDAY = 6;
  // Sunday
  WEEKDAY_SUNDAY = 7;
}

// Month
enum Month {
  // unspecified
  MONTH_UNSPECIFIED = 0;
  // January
  MONTH_JANUARY = 1;
  // February
  MONTH_FEBRUARY = 2;
  // March
  MONTH_MARCH = 3;
  // April
  MONTH_APRIL = 4;
  // May
  MONTH_MAY = 5;
  // June
  MONTH_JUNE = 6;
  // July
  MONTH_JULY = 7;
  // August
  MONTH_AUGUST = 8;
  // September
  MONTH_SEPTEMBER = 9;
  // October
  MONTH_OCTOBER = 10;
  // November
  MONTH_NOVEMBER = 11;
  // December
  MONTH_DECEMBER = 12;
}


