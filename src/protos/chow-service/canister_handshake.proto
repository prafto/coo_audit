syntax = "proto3";
package chow_service_internal.v1;
option java_package = "com.doordash.rpc.chow_service_internal";
option java_outer_classname = "CanisterHandshakeService";
option java_multiple_files = true;

import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

// Canister actions
// CREATED → MAPPED → ACTIVATED → INSPECTED/UNCLUMPED/DISPENSED → EMPTY/EXPIRED → RETIRED → CREATED (new id)
enum CanisterAction {
  // don't use
  CANISTER_ACTION_UNSPECIFIED = 0;
  // activated - canister is installed (weight, expiry, everything is set here)
  CANISTER_ACTION_ACTIVATED = 1;
  // created
  CANISTER_ACTION_CREATED = 2;
  // retired - Canister is done (expired, Empty, Retired (aka removed))
  CANISTER_ACTION_RETIRED = 3;
  // inspected
  CANISTER_ACTION_INSPECTED = 4;
  // unclumped
  CANISTER_ACTION_UNCLUMPED = 5;
  // emptied
  CANISTER_ACTION_EMPTIED = 6;
  // emptied - no backup canister so this ingredient will not be available for selection until refilled
  CANISTER_ACTION_EMPTIED_NO_BACKUP = 7;
  // expired
  CANISTER_ACTION_EXPIRED = 8;
  // mapped - this ingredient should go here
  CANISTER_ACTION_MAPPED = 9;
  // ingredient was dispensed
  CANISTER_ACTION_DISPENSED = 10;
}

// Canister handshake message
message CanisterHandshakeMessage {
  // robot generated canister uuid
  string canister_id = 1;
  // canister action
  CanisterAction action = 2;
  // slot number 1-24 slots on the carousel
  uint32 slot = 3;
  //  ingredient id that’s actually in the canister.
  //  Populated when canister is refilled.
  //  Can be null if ingredient is mapped but the canister is not refilled
  string ingredient_id = 4;
  // ingredient name
  string ingredient_name = 5;
  // ingredient id for what is “expected” to be in the canister. This is populated when canister is created.
  string mapped_ingredient_id = 6;
  // what the set weight of the canister was
  google.protobuf.DoubleValue initial_weight = 7;
  // how much ingredients have been dispensed since canister was refilled
  double dispensed_weight = 8;
  // how many times the canister was dispensed from
  uint32 dispensed_count = 9;
  // to map height to initial_weight
  google.protobuf.DoubleValue initial_height = 10;
  // when is this canister ingredient expected to expire
  google.protobuf.Timestamp expected_expiry_at = 49;
  // Client UTC timestamp when message was collected by the client
  // this acts as expiry time when action = CANISTER_ACTION_EXPIRED, same for other actions
  google.protobuf.Timestamp collected_at = 50;
}

// Request for sending the messages
message RecordCanisterHandshakeRequest {
  // list of messages to be sent
  repeated CanisterHandshakeMessage messages = 1;
  // Client UTC timestamp when message was sent
  google.protobuf.Timestamp sent_at = 20;
  // order completed timestamp in the local timezone
  google.protobuf.Timestamp local_time_sent_at = 21;
}

// response to the send status message
message RecordCanisterHandshakeResponse {
  // Whether or not server successfully registered the message
  google.protobuf.BoolValue success = 1;
}

// latest canister info
message LatestCanisterInfo {
  // robot generated canister uuid
  string canister_id = 1;
  // canister action
  CanisterAction action = 2;
  // slot number 1-24 slots on the carousel
  uint32 slot = 3;
  //  ingredient id that’s actually in the canister.
  //  Populated when canister is refilled.
  //  Can be null if ingredient is mapped but the canister is not refilled
  string ingredient_id = 4;
  // ingredient id for what is “expected” to be in the canister. This is populated when canister is created.
  string mapped_ingredient_id = 5;
  // what the set weight of the canister was
  google.protobuf.DoubleValue initial_weight = 6;
  // how much ingredients have been dispensed since canister was refilled
  double dispensed_weight = 7;
  // how many times the canister was dispensed from
  uint32 dispensed_count = 8;
  // to map height to initial_weight
  google.protobuf.DoubleValue initial_height = 9;
  // when is this canister ingredient expected to expire
  google.protobuf.Timestamp expected_expiry_at = 10;
  // ingredient name
  string ingredient_name = 11;
}

// GetLatestCanisterInfo request
message GetLatestCanisterInfoRequest {
  // machine id
  string machine_id = 1;
}

// GetLatestCanisterInfo response
message GetLatestCanisterInfoResponse {
  // latest canister info
  repeated LatestCanisterInfo latest_canister_infos = 1;
}

// SendLatestKafkaEventsRequest request
message SendLatestKafkaEventsRequest {
  // dir path
  string dir_path = 1;
  // event name
  string event_name = 2;
}

// response to the send latest data message
message SendLatestKafkaEventsResponse {
  // Whether or not messages successfully sent
  google.protobuf.BoolValue success = 1;
  // number of records sent
  uint64 num_records = 2;
  // event name
  string event_name = 3;
}
