syntax = "proto3";
package chow_service_internal.v1;
option java_package = "com.doordash.rpc.chow_service_internal";
option java_outer_classname = "MachineStatusService";
option java_multiple_files = true;

import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "chow-service/common.proto";

// Temperature Sensor
message TemperatureSensorReading {
  //  Chamber temperature reading
  double temperature = 1;
  //Temperature on air outlet side of condenser coil
  double outlet_air_condenser_coil_temperature = 2 [deprecated = true];
  //Ambient temperature on air inlet side of condenser coil
  double inlet_air_condenser_coil_temperature = 3;
}
// Humidity Sensor
message HumiditySensorReading {
  //Ambient relative humidity 0-100%
  uint32 relative_humidity = 1;
}

// Bowl Weight Sensor
message BowlWeightSensorReading {
  // weight reading
  double weight = 2;
  // Tared weight
  double tared_weight = 3;
}

// Bowl Sensor
message BowlSensorReading {
  //Bowl found or not
  BowlStatus bowl_status = 1;
  // Threshold for bowl found 
  double bowl_found_threshold = 2;
}

// Main Door Sensor
message MainDoorSensorReading {
  // main door status reading
  DoorStatus door_status = 1;
}

// Bowl Door Sensor
message BowlDoorSensorReading {
  // bowl door status reading
  DoorStatus door_status = 1;
  // bowl door lock status reading
  DoorStatus door_lock_status = 2;
  // bowl door switch status reading
  DoorStatus door_switch_status = 3;
}

// Bowl Storage Sensor
message BowlStorageSensorReading {
  // bowl storage door lock status reading
  DoorStatus door_lock_status = 1;
  // bowl storage door switch status reading
  DoorStatus door_switch_status = 2;
}

// Defrost Sensor
message DefrostReading {
  // defrost feature reading
  FeatureStatus defrost_status = 1;
}

// Evaporator Fan Relay
message EvaporatorFanReading {
  // evaporator fan feature reading
  FeatureStatus evaporator_fan_status = 1;
}

// Compressor Sensor
message CompressorReading {
  // compressor feature reading
  FeatureStatus compressor_status = 1;
}

// Internet quality
message InternetConnectionQualityReading {
  // Internet quality quality
  ConnectionQuality connection_quality = 1;
}

// POS sensor
message PointOfSaleSensorReading {
  //POS door lock status reading
  DoorStatus door_lock_status = 1;
  //POS door switch status reading
  DoorStatus door_switch_status = 2;
}

// Heater Relay
message HeaterRelayReading {
  // heater feature reading
  FeatureStatus heater_relay_status = 1;
}

// Software build version
message BuildVersion {
  // firmware version
  string firmware_version = 1;
  // tablet app version
  string tablet_app_version = 2;
  // tablet middleware version
  string middleware_version = 3;
  // payment server version
  string payment_server_version = 4;
  // software version in auxiliary board 
  string auxiliary_board_firmware_version = 5;
  // firmware bootloader version
  string firmware_bootloader_version = 6;
}

// Machine error message
message MachineErrorMessage {
  // Error occurred
  MachineError error = 1;
  // Description of the specific error that occurred
  string description = 2;
}

//Tablet system information
message SystemInformation {
  //Free storage space available
  double free_storage_space_mb = 1;
  //Free memory space available
  double free_memory_space_mb = 2;
}

// Machine status Message
message MachineStatusMessage {
  // Status
  MachineStatus status = 1;
  // Temperature
  TemperatureSensorReading temperature_reading = 2;
  // connection quality
  InternetConnectionQualityReading internet_connection_reading = 3;
  // bowl weight sensor
  BowlWeightSensorReading bowl_weight_reading = 4;
  // main door open/close
  MainDoorSensorReading main_door_reading = 5;
  // bowl door open/close
  BowlDoorSensorReading bowl_door_reading = 6;
  // defrost on/off
  DefrostReading defrost_reading = 7;
  // compressor on/off
  CompressorReading compressor_reading = 8;
  // Humidity sensor
  HumiditySensorReading humidity_reading = 9;
  // Bowl storage sensor
  BowlStorageSensorReading bowl_storage_reading = 10;
  // POS sensor
  PointOfSaleSensorReading point_of_sale_reading = 11;
  // Evaporator fan Relay on/off
  EvaporatorFanReading evaporator_fan_reading = 12;
  // Client UTC timestamp when message was collected by the client
  google.protobuf.Timestamp collected_at = 20;
  // Software version
  BuildVersion build_version = 21;
  //Machine error messages
  repeated MachineErrorMessage error_messages = 22;
  // Heater Relay on/off
  HeaterRelayReading heater_relay_reading = 23;
  // Machine Mode - PATRON or OPERATOR
  MachineMode machine_mode = 24;
  // Tablet system information 
  SystemInformation system_information = 25;
  // Bowl sensor reading
  BowlSensorReading bowl_reading = 26;
}

// Request for sending the messages
message RecordStatusRequest {
  // list of messages to be sent
  repeated MachineStatusMessage messages = 1;
  // Client UTC timestamp when message was sent
  google.protobuf.Timestamp sent_at = 20;
  // order completed timestamp in the local timezone
  google.protobuf.Timestamp local_time_sent_at = 21;
}

// response to the send status message
message RecordStatusResponse {
  // Whether or not server successfully registered the message
  google.protobuf.BoolValue success = 1;
}
