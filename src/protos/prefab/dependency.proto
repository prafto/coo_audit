syntax = "proto3";

package prefab.v1;

/** Enums - Start */

// Type of field
enum FieldType {
    // Unspecified
    FIELD_TYPE_UNSPECIFIED = 0;
    // String
    FIELD_TYPE_STRING = 1;
    // Number
    FIELD_TYPE_NUMBER = 2;
    // Boolean
    FIELD_TYPE_BOOLEAN = 4;
}

// match type for conditions and rules
enum MatchType {
    // Unspecified
    MATCH_TYPE_UNSPECIFIED = 0;
    // AND
    MATCH_TYPE_AND = 1;
    // OR
    MATCH_TYPE_OR = 2;
}

// ConditionalOperator for writing dependency condition
enum ConditionalOperator {
    // unspecified
    CONDITIONAL_OPERATOR_UNSPECIFIED = 0;
    // equals
    CONDITIONAL_OPERATOR_EQ = 1;
    // not equals
    CONDITIONAL_OPERATOR_NOT_EQ = 2;
    // gte
    CONDITIONAL_OPERATOR_GTE = 3;
    // lte
    CONDITIONAL_OPERATOR_LTE = 4;
    // gt
    CONDITIONAL_OPERATOR_GT = 5;
    // lt
    CONDITIONAL_OPERATOR_LT = 6;
}

/** Enums - End */


/** Message Definitions - Start */

// DependencyRule
message DependencyRule {
    // left hand side
    string field_id = 1;
    // operator
    ConditionalOperator operator = 2;   
    // right hand side
    string value = 3;
    // type of value
    FieldType type = 4;
}

// DependencyRule
message DependencyCondition {
    // match type
    MatchType match_type = 1;
    // operator
    repeated DependencyRule rule = 2;
}


// DependencyCondition
message Dependency {
    // match type
    MatchType match_type = 1;
    // conditions
    repeated DependencyCondition condition = 2;
}


/** Message Definitions - END */