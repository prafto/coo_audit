syntax = "proto3";

package prefab.v1;

import "google/protobuf/timestamp.proto";


// PFComponentType
enum PFComponentType {
    // unspecified
    PF_COMPONENT_TYPE_UNSPECIFIED = 0;
    // text field
    PF_COMPONENT_TYPE_TEXT_FIELD = 1;
    // number field
    PF_COMPONENT_TYPE_NUMBER_FIELD = 2;
// select field
    PF_COMPONENT_TYPE_SELECT_FIELD = 3;
    // single select group
    PF_COMPONENT_TYPE_SINGLE_SELECT_GROUP = 4;
    // simple radio group
    PF_COMPONENT_TYPE_SIMPLE_RADIO_GROUP = 5;
    // basic radio card group
    PF_COMPONENT_TYPE_BASIC_RADIO_CARD_GROUP = 6;
    // rich radio card group
    PF_COMPONENT_TYPE_RICH_RADIO_CARD_GROUP = 7;
    // toggle list
    PF_COMPONENT_TYPE_TOGGLE_LIST = 8;
    // toggle switch list
    PF_COMPONENT_TYPE_TOGGLE_SWITCH_LIST = 9;
    // list cell
    PF_COMPONENT_TYPE_LIST_CELL = 10;
    // section header
    PF_COMPONENT_TYPE_SECTION_HEADER = 11;
    // date field
    PF_COMPONENT_TYPE_DATE_FIELD = 12;
    // date range field
    PF_COMPONENT_TYPE_DATE_RANGE_FIELD = 13;
    // text
    PF_COMPONENT_TYPE_TEXT = 14;
    // pactsafe field
    PF_COMPONENT_TYPE_PACTSAFE_FIELD = 15;
    // store selector
    PF_COMPONENT_TYPE_STORE_SELECTOR = 16;
    // loyalty ssmo
    PF_COMPONENT_TYPE_CUSTOM_LOYALTY_SSMO_PREVIEW_BANNER = 17;
    // banner
    PF_COMPONENT_TYPE_BANNER = 18;
    // list
    PF_COMPONENT_TYPE_LIST = 19;
    // success
    PF_COMPONENT_TYPE_SUCCESS = 20;
    // Text List
    PF_COMPONENT_TYPE_TEXT_LIST = 21;
    // Image
    PF_COMPONENT_TYPE_IMAGE = 22;
    // Search Autocomplete
    PF_COMPONENT_TYPE_SEARCH_AUTOCOMPLETE = 23;
    // Button
    PF_COMPONENT_TYPE_BUTTON = 24;
    // Modal
    PF_COMPONENT_TYPE_MODAL = 25;
    // Divideer
    PF_COMPONENT_TYPE_DIVIDER = 26;
    // Generic Entity Selector
    PF_COMPONENT_TYPE_ENTITY_SELECTOR = 27;
    // Phone number field
    PF_COMPONENT_TYPE_PHONE_FIELD = 28;
    // Password Field
    PF_COMPONENT_TYPE_PASSWORD_FIELD = 29;
    // Custom Component Injected from client side
    PF_COMPONENT_TYPE_CUSTOM_CLIENT = 30;
    // CX Preview Component
    PF_COMPONENT_TYPE_CX_PREVIEW = 31;
}

// PFComponentProps
message PFComponentProps {
    // component configuration
    oneof component_props {
        // text field
        PFTextField tf = 1;
        // number field
        PFNumberField nf = 2;
        // date field
        PFDateField date_field = 3;
        // date range field 
        PFDateRangeField date_range_field = 4;
        // single select group
        PFSingleSelectGroup single_select_group = 5;
        // simple radio group
        PFSimpleRadioGroup simple_radio_group = 6;
        // basic radio card group
        PFBasicRadioCardGroup basic_radio_card_group = 7;
        // rich radio card group
        PFRichRadioCardGroup rich_radio_card_group = 8;
        // toggle list
        PFToggleList toggle_list = 9;
        // pactsafe
        PFPactSafeCheckbox pactsafe_checkbox = 10;
        // text
        PFText text = 11;
        // section header
        PFSectionHeader section_header = 12;
        // list
        PFList list = 13;
        // list cell
        PFListCell list_cell = 14;
        // banner
        PFBanner banner = 15;
        // Store Selector
        PFStoreSelector store_selector = 16;
        // Success Component
        PFFormSuccess form_success = 18;
        // Custom Client Component
        PFCustomClientComponent custom_client = 19;
        // cx preview
        PFCxPreview cx_preview = 20;
        // CustomLoyaltySSMOPreviewBanner
        CustomLoyaltySSMOPreviewBanner loyalty_ssmo_preview = 100;
    }
}


/** Form Components Spec */

/* Input Based Fields */

// Accessibility
message PrismAccessibilityField {
    // label
    string accessibility_label = 1;
    // labeled by
    string accessibility_labeled_by = 2;
    // label described by
    string accessibility_described_by = 3;
}

// Rich Content Text that is emphasized
message RichContentEmphasis {
    // string content that can include {{text}} and component <number> interpolations
    string content = 1;
}

// Rich Content Hyperlink
message RichContentHyperlink {
    // string for a link
    string content = 1;
    // href link for a 
    string href = 2;
}

// Rich Text Content 
message PFRichTextContent {
    // either emphasis or link
    oneof rich_content_interpolations {
        // emphasis
        RichContentEmphasis rich_content_emphasis= 1;
        // link
        RichContentHyperlink rich_content_hyperlink = 2;
    }
}

// TextField
message PFTextField {
    // label
    string label = 1;
    // hint
    string hint = 2;
    // placeholder
    string placeholder = 3;
    // is_required
    bool is_required = 4;
    // is_multiline
    bool is_multiline = 5;
    //num_of_lines
    int32 num_of_lines = 6;
}

// NumberField
message PFNumberField {
    // label
    string label = 1;
    // hint
    string hint = 2;
    // placeholder
    string placeholder = 3;
    // is_required
    int32 min = 4;
    // is_multiline
    int32 max = 5;
    //allow_floats
    bool allow_floats = 6;
}

// DisabledDaysDateRange
message DisabledDaysDateRange {
    // optional - before timestamp
    google.protobuf.Timestamp before = 1;
    // optional - after timestamp
    google.protobuf.Timestamp after = 2;
}

// PFDateField
message PFDateField {
 // label
 string label = 1;
 // hint
 string hint = 2;
 // placeholder
 string placeholder = 3;
 // is_required
 bool is_required = 4;
 // disabled days
 DisabledDaysDateRange disabled_days = 5;
}

// PFDateRangeField
message PFDateRangeField {
    // from date field config
    PFDateField from = 1;
    // to date field config
    PFDateField to = 2;
    // disabled days should be set only on top level.
    DisabledDaysDateRange disabled_days = 3;
}


// FieldOption With PFTextLite
message RichTextFieldOption {
    // value
    string value = 1;
    // either of plain string name or rich text lite
    PFTextLite name = 2;
}

// Plain Text only Field Option
message PlainTextFieldOption {
    // value
    string value = 1;
    // plain text name
    string name = 2;
}   

//  PFSingleSelectGroup
message PFSingleSelectGroup {
// label
string label = 1;
// hint
string hint = 2;
// default selected option index
int32 default_selected_index = 3;
// is_required
bool is_required = 4;
// option
repeated PlainTextFieldOption option = 5;
// accessibility
PrismAccessibilityField accessibility = 6;
}
//  PFSimpleRadioGroup
message PFSimpleRadioGroup {
    // label
string label = 1;
// hint
string hint = 2;
// default selected option value - should match to one of the values in options
string default_selected_value = 3;
// is_required
bool is_required = 4;
// option
repeated PlainTextFieldOption option = 5;
// accessibility
PrismAccessibilityField accessibility = 6;
}
//  PFBasicRadioCardGroup
message PFBasicRadioCardGroup {
    // BasicRadioCardOption
    message BasicRadioCardOption {
        // title
        string title = 1;
        // description
        string description = 2;
        // tip
        string tip = 3;
        // value
        string value = 4;
    }
    // default selected option value - should match to one of the values in options
    string default_selected_value = 1;
    // is_required
    bool is_required = 2;
    // basic radio card option
    repeated BasicRadioCardOption option = 3;
}
//  PFRichRadioCardGroup
message PFRichRadioCardGroup {
      // RichRadioCardOption
      message RichRadioCardOption {
        // InfoRowPricing
        message InfoRowPricing {
            // label
            string label = 1;
            // description
            string description =2;
        }
        // InfoRowTestimonial
        message InfoRowTestimonial {
            // label
            string label = 1;
            // description
            string description =2;
            // image asset url - should be a complete url
            string image_url = 3;
            // image asset alt text
            string image_alt_text = 4;
            // Prism Icon Type
            string icon_type = 5;
        }
        // title
        string title = 1;
        // Prism Icon Type
        string title_prefix_icon = 2;
        // description
        string description = 3;
        // value
        string value = 4;
        // show recommended tag
        bool show_recommened_tag = 5;
        // optional info list content
        repeated string info = 6;
        // optional info pricing content
        InfoRowPricing info_pricing = 7;
        // optional info testimonial and hint content
        InfoRowTestimonial info_testimonial = 8;
    }
    // default selected option value - should match to one of the values in options
    string default_selected_value = 1;
    // is_required
    bool is_required = 2;
    // rich radio card option
    repeated RichRadioCardOption option = 3;
    // accessibility
    PrismAccessibilityField accessibility = 4;
}

// Toggle Type
 enum PFToggleType {
    // UNSPECIFIED
    PF_TOGGLE_TYPE_UNSPECIFIED = 0;
    // RADIO
    PF_TOGGLE_TYPE_RADIO = 1;
    // CHECKBOX
    PF_TOGGLE_TYPE_CHECKBOX = 2;
    // TOGGLE
    PF_TOGGLE_TYPE_TOGGLE = 3;
  }

//  PFToggleList
message PFToggleList {
    // label
    string label = 1;
    // default selected option value - should match to one of the values in options
    string default_selected_value = 2;
    // option
    repeated RichTextFieldOption option = 3;
    // accessibility
    PrismAccessibilityField accessibility = 4;
    // toggle type
    PFToggleType toggle_type = 5;
    // is required
    bool is_required = 6;
}

//  PFPactSafeCheckbox
message PFPactSafeCheckbox {
    // rich text supported content
    PFTextLite text = 1;
    // when sent as true, a checkbox will be displayed with the text.
    // its selection will be accessible in the form by the key 'pactsafe'
    bool show_checkbox = 2;
    // is required - default false
    bool is_required = 3;
    // id
    string id = 4;
}

/* Read only Fields */


// TopSpacing - Subset of Prism Spacing Values
enum TopSpacing {
    // Unspecified
    TOP_SPACING_TYPE_UNSPECIFIED = 0;
    // Prism Spacing None
    TOP_SPACING_TYPE_NONE = 1;
    // Prism Spacing Small
    TOP_SPACING_TYPE_SMALL = 2;
    // Prism Spacing Large
    TOP_SPACING_TYPE_LARGE = 3;
}

// TextStyleType
enum TextStyleType {
    // TextStyleType Unspecified
    TEXT_STYLE_TYPE_UNSPECIFIED = 0;
    // TextStyleType Body 1
    TEXT_STYLE_TYPE_BODY1 = 1;
    // TextStyleType Body 2
    TEXT_STYLE_TYPE_BODY2 = 2;
  }
// TitleStyle
  enum TitleStyle {
    // TextStyleType Unspecified
    TITLE_STYLE_TYPE_UNSPECIFIED = 0;
    // TextStyleType Title 1
    TITLE_STYLE_TYPE_TITLE1 = 1;
    // TextStyleType Title 2
    TITLE_STYLE_TYPE_TITLE2 = 2;
  }

  // PFTextLite
message PFTextLite {
    // string content
    string content = 1;
    // map of interpolations
    map<string, PFRichTextContent> rich_content = 2;
}

// PFText
  message PFText {
    // same as PFTextLite as there is no way to extend and reuse above message
    // string content
    string content = 1;
    // map of interpolations
    map<string, PFRichTextContent> rich_content = 2;
    // optional - top spacing 
    TopSpacing top_spacing = 3;
    // optional - Text style
    TextStyleType text_style = 4;
}

// PFSectionHeader
message PFSectionHeader {
    // title
    string title = 1;
    // description
    PFTextLite description = 2;
    // title style
    TitleStyle title_style = 3;
    // Prism Icon Type
    string icon_type = 4;
}

// PFListCellCTA
message PFListCellCTA {
    // text
    string text = 1;
    // href
    string href = 2;
}

// PFListCell
message PFListCell {
    // id 
    string id = 1;
    // label 
    string label = 2;
    // description 
    string description = 3;
    // Prism Icon Type
    string icon_type = 4;
    // optional primary button
    PFListCellCTA primary_btn = 5;
    // optional tertiary button
    PFListCellCTA tertiary_btn = 6;    
    // value
    string value = 7;
}

// PFList
message PFList {
    // data
    repeated PFListCell data = 1;
}

// PFBannerVariant
enum PFBannerVariant {
    // PF_BANNER_VARIANTS_UNSPECIFIED
    PF_BANNER_VARIANT_UNSPECIFIED = 0;
    // PF_BANNER_VARIANTS_INFORMATIONAL
    PF_BANNER_VARIANT_INFORMATIONAL = 1;
    // PF_BANNER_VARIANTS_POSITIVE
    PF_BANNER_VARIANT_POSITIVE = 2;
    // PF_BANNER_VARIANTS_NEGATIVE
    PF_BANNER_VARIANT_NEGATIVE = 3;
    // PF_BANNER_VARIANTS_WARNING
    PF_BANNER_VARIANT_WARNING = 4;
    // PF_BANNER_VARIANTS_HIGHLIGHT
    PF_BANNER_VARIANT_HIGHLIGHT = 5;
  }
  
// PFBanner
message PFBanner {
    // label
    string label = 1;
    // body
    string body = 2;
    // variant
    PFBannerVariant variant = 3;
    // Prism Icon Type
    string icon_type = 4;
}

// PFStoreSelector
message PFStoreSelector {
    // Selection
    message Selection {
        // should all stores be selected by default. Takes precedence over selected_stores_ids
        bool all_stores_selected = 1;
        // list of stores Id to be selected by default
        repeated string selected_store_id = 2;
    }
    // default_selection
    Selection default_selected_value = 1;
    // show Address
    bool show_address = 2;
    // rowsPer Page
    int32 rows_per_page = 3;
    // is required
    bool is_required = 4;
}

// PFImage
message PFImage {
    // absolute url for image asset
    string src =1;
    // alt text
    string alt_text = 2;
}

// CheckListType
enum CheckListType {
    // unspecified
    CHECK_LIST_TYPE_UNSPECIFIED = 0;
    // numbered - icon property will be ignored
    CHECK_LIST_TYPE_NUMBERED = 1;
    // icon
    CHECK_LIST_TYPE_ICON = 2;
}


// CheckListItem
message CheckListItem {
    // text
    PFTextLite text = 1;
    // prism icon type
    string icon = 2;
    // icon color
    string icon_color = 3;

}

// SuccessCheckList
message SuccessCheckList {
    // title
    string title = 1;
    // checklist type
    CheckListType type = 2;
    // items
    repeated CheckListItem item = 3;
}

// ButtonCTA
message ButtonCTA {
    // text
    string text = 1;
    // href
    string href = 2;
    // leading prism icon
    string leading_icon = 3;
    // trailing prism icon
    string trailing_icon = 4;
}

// SuccessPageActions
message SuccessPageActions {
    // primary action
    ButtonCTA primary = 1;
    // tertiary action
    ButtonCTA tertiary = 2;
    // link action
    ButtonCTA link = 3;
}

// PFFormSuccess
message PFFormSuccess {
    // title
    string title = 1;
    // description
    PFTextLite description = 2;
    // hero image
    PFImage image = 3;
    // checklist
    SuccessCheckList list = 4;
    // page_actions
    SuccessPageActions buttons = 5;
}

// PFCustomClientComponent
message PFCustomClientComponent {
    // list of ids to be included in required field validation
    repeated string required_field = 1;
}

// PFCxPreview
message PFCxPreview {
    // title
    string title = 1;
    // description
    PFTextLite description = 2;
    // default selected option index
    int32 default_selected_index = 3;
    // option_accessibility_label
    string option_accessibility_label= 4;
    // option
    repeated PlainTextFieldOption option = 5;
}

/* Custom Components */
message CustomLoyaltySSMOPreviewBanner {
    // reward amount
    string reward_amount = 1;
    // threshold amount
    string threshold_amount = 2;
}
