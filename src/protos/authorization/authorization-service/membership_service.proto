syntax = "proto3";

package authorization.authorization_service.v2;

import "authorization/authorization-management-service/authorization_management.proto";
import "authorization/common.proto";
import "common/service_client_config.proto";
import "google/protobuf/wrappers.proto";

option go_package = "github.com/doordash/services-protobuf/generated/authorization/authorization_service";
option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.authorization";

// APIs for
// - Users granted access to a Policy or Resource
// - Resources granted access to a user
// - Syncing membership with Identity Service GroupManagementService
service MembershipService {
  option (service_client.client_config).service_name = "membership-service";
  option (service_client.client_config).retry_config.max_attempts = 3;
  option (service_client.client_config).retry_config.initial_wait_millis = 10;
  option (service_client.client_config).retry_config.wait_multiplier = 2.0;

  // Sync Access Management policy with legacy Identity Service Groups
  rpc UpdateUserGroups(UpdateUserGroupsRequest) returns (UpdateUserGroupsResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 5000;
  }
}

// For a user (employee), update their Identity Service Groups based on the Access Management policy
// definitions
message UpdateUserGroupsRequest {
  // Identity Service user ID
  string user_id = 1;
  // Access Management Policy IDs. These Policies must map to Identity Service Groups.
  repeated authorization_management_service.v2.PolicyIdentifier policy_ids = 2;
}

// Return whether the Identity Service Groups were successfully updated
message UpdateUserGroupsResponse {
  // Identity Service Groups that were successfully updated. If a Resource is missing, that means
  // the request was a partial success and the missing Identity Service Groups was not updated.
  repeated authorization_management_service.v2.PolicyIdentifier updated_policy_ids = 1;
}
