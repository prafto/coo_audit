syntax = "proto3";

package safety_service.v1;

import "doordash.api/annotations.proto";
import "doordash.api/client.proto";
import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "safety_service/safety_case_routing.proto";

option go_package = "github.com/doordash/services-protobuf/generated/safety_service/api/v1";
option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.safety_service.rpc.api";

// A service that handles all response operations
service SafetyResponseService {
  option (doordash.api.service) = {
    name: "safety-service"
    url: "safety-service-api.service.prod.ddsd"
    port: 50051
    name_spaces: ["safety-service"]
    owner: {
      id: "trust-and-safety-observability"
      name: "safety"
      slack_channel: "#ask-safety-eng"
      email_alias: "tns-eng@doordash.com"
    }
    target_products: [DX]
  };

  // Get safety case updates
  rpc GetSafetyCaseUpdates(GetSafetyCaseUpdatesRequest) returns (GetSafetyCaseUpdatesResponse) {
    option (google.api.http) = {get: "/safety-service/v1/safety/case/updates/{case_id}"};

    option (doordash.api.endpoint) = {
      tier: T2
      lifecycle: DEV
      authorization: [NONE]
      target_products: [DX]
    };
  }
}

// Get Safety Case Updates Request
message GetSafetyCaseUpdatesRequest {
  // case id
  string case_id = 1;
}

// Get Safety Case Updates response
message GetSafetyCaseUpdatesResponse {
  // map of update id to update
  map<string, SafetyCaseUpdate> case_updates = 1;
}

// Update safety case request
message SafetyCaseUpdate {
  // Case ID
  google.protobuf.StringValue cmp_case_id = 1;
  // Update type
  CaseUpdateType case_update_type = 2;
  // Agent user id
  google.protobuf.StringValue agent_user_id = 3;
  // Timestamp of this update
  google.protobuf.Timestamp updated_at = 4;
  // Primary incident type
  PrimaryIncidentType primary_incident_type = 5;
  // Secondary incident type
  SecondaryIncidentType secondary_incident_type = 6;
  // Reporter role
  ParticipantRole reporter_role = 7 [deprecated = true];
  // Victim role
  ParticipantRole victim_role = 8 [deprecated = true];
  // Offender role
  ParticipantRole offender_role = 9 [deprecated = true];
  // Incident mode
  google.protobuf.StringValue incident_mode = 10 [deprecated = true];
  // Is weapon involved
  google.protobuf.BoolValue is_weapon_involved = 11;
  // Weapon
  google.protobuf.StringValue weapon = 12;
  // Is minor involved
  google.protobuf.BoolValue is_minor_involved = 13;
  // Is media involved
  google.protobuf.BoolValue is_media_involved = 14;
  // Additional notes
  google.protobuf.StringValue additional_notes = 15;
  // Completed resolutions
  repeated google.protobuf.StringValue completed_resolutions = 16;
  // Pending actions
  google.protobuf.StringValue pending_actions = 17;
  // Queue to update case to. For CMP queue, populate the queue name. For Salesforce, populate the queue id
  Queue queue = 18;
  // Transfer reason
  google.protobuf.StringValue transfer_reason = 19;
  // Transfer requested action
  google.protobuf.StringValue transfer_requested_action = 20;
  // Case update ID (for deduping)
  google.protobuf.StringValue case_update_id = 21;
  // Injury level
  google.protobuf.StringValue injury_level = 22;
  // Root cause(s) of incident
  repeated google.protobuf.StringValue root_cause = 23;
  // Bad actor explanation
  repeated google.protobuf.StringValue bad_actor_free_text = 24;
  // Is law enforcement involved
  google.protobuf.StringValue was_law_enforcement_involved = 25;
  // Was this an instance of dasher account sharing
  google.protobuf.StringValue was_dasher_account_sharing = 26;
  // Reporter(s) role for incident
  repeated ParticipantRole reporters = 27;
  // Victim(s) role for incident
  repeated ParticipantRole victims = 28;
  // Offender(s) role for incident
  repeated ParticipantRole offenders = 29;
  // Incident mode(s) for incident
  repeated google.protobuf.StringValue incident_modes = 30;
}

// Case update type
enum CaseUpdateType {
  // Unspecified
  CASE_UPDATE_TYPE_UNSPECIFIED = 0;
  // Create new case
  CASE_UPDATE_TYPE_CREATE = 1;
  // Reopen case
  CASE_UPDATE_TYPE_REOPEN = 2;
  // Set case to pending further action
  CASE_UPDATE_TYPE_PENDING = 3;
  // Transfer case
  CASE_UPDATE_TYPE_TRANSFER = 4;
  // Mark case as complete
  CASE_UPDATE_TYPE_COMPLETE = 5;
  // Auto close case
  CASE_UPDATE_TYPE_AUTO_CLOSE = 6;
  // Reopen case due to inbound email
  CASE_UPDATE_TYPE_REOPEN_INBOUND_EMAIL = 7;
}

// Case status
enum CaseStatus {
  // Unspecified
  CASE_STATUS_UNSPECIFIED = 0;
  // Open
  CASE_STATUS_OPEN = 1;
  // Pending
  CASE_STATUS_PENDING = 2;
  // Closed
  CASE_STATUS_CLOSED = 3;
}

// Participant role
enum ParticipantRole {
  // Unspecified
  PARTICIPANT_ROLE_UNSPECIFIED = 0;
  // CX
  PARTICIPANT_ROLE_CX = 1;
  // DX
  PARTICIPANT_ROLE_DX = 2;
  // MX
  PARTICIPANT_ROLE_MX = 3;
  // UX
  PARTICIPANT_ROLE_UX = 4;
}

// Primary incident type
enum PrimaryIncidentType {
  // Unspecified
  PRIMARY_INCIDENT_TYPE_UNSPECIFIED = 0;
  // Driving incident
  PRIMARY_INCIDENT_TYPE_DRIVING_INCIDENT = 1;
  // Drugs, tobacco, and alcohol
  PRIMARY_INCIDENT_TYPE_DRUGS_TOBACCO_ALCOHOL = 2;
  // Food safety
  PRIMARY_INCIDENT_TYPE_FOOD_SAFETY = 3;
  // Harassment
  PRIMARY_INCIDENT_TYPE_HARASSMENT = 4;
  // Physical safety - no assault
  PRIMARY_INCIDENT_TYPE_PHYSICAL_SAFETY_NO_ASSAULT = 5;
  // Physical safety - assault
  PRIMARY_INCIDENT_TYPE_PHYSICAL_SAFETY_ASSAULT = 6;
  // Sexual assault
  PRIMARY_INCIDENT_TYPE_SEXUAL_ASSAULT = 7;
  // Sexual harassment
  PRIMARY_INCIDENT_TYPE_SEXUAL_HARASSMENT = 8;
  // Theft
  PRIMARY_INCIDENT_TYPE_THEFT = 9;
  // Property damage
  PRIMARY_INCIDENT_TYPE_PROPERTY_DAMAGE = 10;
  // Verbal harassment
  PRIMARY_INCIDENT_TYPE_VERBAL_HARASSMENT = 11;
  // Not a safety incident
  PRIMARY_INCIDENT_TYPE_NOT_A_SAFETY_INCIDENT = 12;
  // Safety incident observed off-platform
  PRIMARY_INCIDENT_TYPE_SAFETY_INCIDENT_OBSERVED_OFF_PLATFORM = 13;
}

// Secondary incident type, these are all affiliated to one primary incident type
enum SecondaryIncidentType {
  // Unspecified incident type
  SECONDARY_INCIDENT_TYPE_UNSPECIFIED = 0;
  // Driving incident resulting in fatality
  SECONDARY_INCIDENT_TYPE_DRIVING_INCIDENT_FATALITY = 1;
  // Driving incident resulting in injury
  SECONDARY_INCIDENT_TYPE_DRIVING_INCIDENT_INJURY = 2;
  // Driving incident with no injury
  SECONDARY_INCIDENT_TYPE_DRIVING_INCIDENT_NO_INJURY = 3;
  // Driving under the influence
  SECONDARY_INCIDENT_TYPE_DRIVING_UNDER_THE_INFLUENCE = 4;
  // Speeding or moving violation
  SECONDARY_INCIDENT_TYPE_SPEEDING_OR_MOVING_VIOLATION = 5;
  // Solicitation of drugs, tobacco, or alcohol
  SECONDARY_INCIDENT_TYPE_SOLICITATION_OF_DRUGS_TOBACCO_OR_ALCOHOL = 6;
  // Impairment from observed use of drugs or alcohol
  SECONDARY_INCIDENT_TYPE_IMPAIRMENT_FROM_OBSERVED_USE_OF_DRUGS_OR_ALCOHOL = 7;
  // Observed use of cigarettes or vapes
  SECONDARY_INCIDENT_TYPE_OBSERVED_USE_OF_CIGARETTES_OR_VAPES = 8;
  // Food poisoning needing medical attention
  SECONDARY_INCIDENT_TYPE_FOOD_POISONING_NEEDING_MEDICAL_ATTENTION = 9;
  // Food poisoning needing no medical attention
  SECONDARY_INCIDENT_TYPE_FOOD_POISONING_NEEDING_NO_MEDICAL_ATTENTION = 10;
  // Allergic reaction
  SECONDARY_INCIDENT_TYPE_ALLERGIC_REACTION = 11;
  // Food contaminated and dangerous
  SECONDARY_INCIDENT_TYPE_FOOD_CONTAMINATED_DANGEROUS = 12;
  // Food contaminated but not dangerous
  SECONDARY_INCIDENT_TYPE_FOOD_CONTAMINATED_NOT_DANGEROUS = 13;
  // Food opened
  SECONDARY_INCIDENT_TYPE_FOOD_OPENED = 14;
  // Smoky food
  SECONDARY_INCIDENT_TYPE_SMOKY_FOOD = 15;
  // Poor food quality due to merchant preparation
  SECONDARY_INCIDENT_TYPE_POOR_FOOD_QUALITY_MERCHANT_PREP = 16;
  // Physical stalking
  SECONDARY_INCIDENT_TYPE_PHYSICAL_STALKING = 17;
  // Trespassing or attempting to access customer property
  SECONDARY_INCIDENT_TYPE_TRESPASSING_ATTEMPTING_TO_ACCESS_CX_PROPERTY = 18;
  // Public defecation or urination
  SECONDARY_INCIDENT_TYPE_PUBLIC_DEFECATION_URINATION = 19;
  // Unwanted gifts
  SECONDARY_INCIDENT_TYPE_UNWANTED_GIFTS = 20;
  // Secondary incident type for tip harassment
  SECONDARY_INCIDENT_TYPE_TIP_HARASSMENT = 21;
  // Secondary incident type for sharing of personally identifiable information (PII)
  SECONDARY_INCIDENT_TYPE_SHARING_OF_PII = 22;
  // Secondary incident type for photos or videos taken non-consensually
  SECONDARY_INCIDENT_TYPE_PHOTOS_VIDEOS_TAKEN_NON_CONSENSUALLY = 23;
  // Secondary incident type for accident resulting in fatality
  SECONDARY_INCIDENT_TYPE_ACCIDENT_FATALITY = 24;
  // Secondary incident type for accident resulting in injury
  SECONDARY_INCIDENT_TYPE_ACCIDENT_INJURY = 25;
  // Secondary incident type for accident with no injury
  SECONDARY_INCIDENT_TYPE_ACCIDENT_NO_INJURY = 26;
  // Secondary incident type for missing Dasher inquiry
  SECONDARY_INCIDENT_TYPE_MISSING_DASHER_INQUIRY = 27;
  // Secondary incident type for deliberate self-harm
  SECONDARY_INCIDENT_TYPE_DELIBERATE_SELF_HARM = 28;
  // Secondary incident type for physical assault resulting in fatality
  SECONDARY_INCIDENT_TYPE_PHYSICAL_ASSAULT_FATALITY = 29;
  // Secondary incident type for physical assault resulting in injury
  SECONDARY_INCIDENT_TYPE_PHYSICAL_ASSAULT_INJURY = 30;
  // Secondary incident type for physical assault with no injury
  SECONDARY_INCIDENT_TYPE_PHYSICAL_ASSAULT_NO_INJURY = 31;
  // Secondary incident type for weapon fired
  SECONDARY_INCIDENT_TYPE_WEAPON_FIRED = 32;
  // Secondary incident type for weapon brandished
  SECONDARY_INCIDENT_TYPE_WEAPON_BRANDISHED = 33;
  // Secondary incident type for kidnapping
  SECONDARY_INCIDENT_TYPE_KIDNAPPING = 34;
  // Secondary incident type for pet bite or attack
  SECONDARY_INCIDENT_TYPE_PET_BITE_ATTACK = 35;
  // Secondary incident type for attempted kissing
  SECONDARY_INCIDENT_TYPE_ATTEMPTED_KISSING = 36;
  // Secondary incident type for attempted penetration
  SECONDARY_INCIDENT_TYPE_ATTEMPTED_PENETRATION = 37;
  // Secondary incident type for attempted touching of non-sexualized body part
  SECONDARY_INCIDENT_TYPE_ATTEMPTED_TOUCHING_NON_SEXUALIZED_BODY_PART = 38;
  // Secondary incident type for attempted touching of sexualized body part
  SECONDARY_INCIDENT_TYPE_ATTEMPTED_TOUCHING_SEXUALIZED_BODY_PART = 39;
  // Secondary incident type for kissing
  SECONDARY_INCIDENT_TYPE_KISSING = 40;
  // Secondary incident type for penetration
  SECONDARY_INCIDENT_TYPE_PENETRATION = 41;
  // Secondary incident type for touching of non-sexualized body part
  SECONDARY_INCIDENT_TYPE_TOUCHING_NON_SEXUALIZED_BODY_PART = 42;
  // Secondary incident type for touching of sexualized body part
  SECONDARY_INCIDENT_TYPE_TOUCHING_SEXUALIZED_BODY_PART = 43;
  // Secondary incident type for sharing or displaying inappropriate photos or material
  SECONDARY_INCIDENT_TYPE_SHARING_DISPLAYING_INAPPROPRIATE_PHOTOS_MATERIAL = 44;
  // Secondary incident type for explicit gestures or comments
  SECONDARY_INCIDENT_TYPE_EXPLICIT_GESTURES_OR_COMMENTS = 45;
  // Secondary incident type for reciprocated flirting
  SECONDARY_INCIDENT_TYPE_RECIPROCATED_FLIRTING = 46;
  // Secondary incident type for unreciprocated flirting
  SECONDARY_INCIDENT_TYPE_UNRECIPROCATED_FLIRTING = 47;
  // Secondary incident type for indecent exposure
  SECONDARY_INCIDENT_TYPE_INDECENT_EXPOSURE = 48;
  // Secondary incident type for explicit activities
  SECONDARY_INCIDENT_TYPE_EXPLICIT_ACTIVITIES = 49;
  // Secondary incident type for vehicle theft
  SECONDARY_INCIDENT_TYPE_VEHICLE_THEFT = 50;
  // Secondary incident type for theft or robbery of non-vehicle items
  SECONDARY_INCIDENT_TYPE_THEFT_OR_ROBBERY_OF_NON_VEHICLE_ITEMS = 51;
  // Secondary incident type for attempted theft or robbery
  SECONDARY_INCIDENT_TYPE_ATTEMPTED_THEFT_OR_ROBBERY = 52;
  // Secondary incident type for solicitation
  SECONDARY_INCIDENT_TYPE_SOLICITATION = 53;
  // Secondary incident type for never delivered order or stolen food
  SECONDARY_INCIDENT_TYPE_NEVER_DELIVERED_ORDER_STOLEN_FOOD = 54;
  // Secondary incident type for pet theft
  SECONDARY_INCIDENT_TYPE_PET_THEFT = 55;
  // Minor damage of non-vehicle personal property
  SECONDARY_INCIDENT_TYPE_MINOR_DAMAGE_OF_NON_VEHICLE_PERSONAL_PROPERTY = 57;
  // Unwanted property contact
  SECONDARY_INCIDENT_TYPE_UNWANTED_PROPERTY_CONTACT = 58;
  // Threat of violence
  SECONDARY_INCIDENT_TYPE_THREAT_OF_VIOLENCE = 59;
  // Threat of sexual act
  SECONDARY_INCIDENT_TYPE_THREAT_OF_SEXUAL_ACT = 60;
  // Discriminatory language
  SECONDARY_INCIDENT_TYPE_DISCRIMINATORY_LANGUAGE = 61;
  // Aggressive disagreement or argument
  SECONDARY_INCIDENT_TYPE_AGGRESSIVE_DISAGREEMENT_OR_ARGUMENT = 62;
  // Non-aggressive disagreement or argument
  SECONDARY_INCIDENT_TYPE_NON_AGGRESSIVE_DISAGREEMENT_OR_ARGUMENT = 63;
  // Feels unsafe
  SECONDARY_INCIDENT_TYPE_FEELS_UNSAFE = 64;
  // Unsafe situation that involves UX
  SECONDARY_INCIDENT_TYPE_UNSAFE_SITUATION_THAT_INVOLVES_UX = 65;
  // Law enforcement request for information
  SECONDARY_INCIDENT_TYPE_LE_REQUEST_FOR_INFO = 66;
  // Major damage of non-vehicle personal property
  SECONDARY_INCIDENT_TYPE_MAJOR_DAMAGE_TO_NON_VEHICLE_PERSONAL_PROPERTY = 67;
  // Auto insurance carrier reports
  SECONDARY_INCIDENT_TYPE_AUTO_INSURANCE_CARRIER_REPORTS = 68;
  // Repeated contacts
  SECONDARY_INCIDENT_TYPE_REPEATED_CONTACTS = 69;
  // Other
  SECONDARY_INCIDENT_TYPE_OTHER = 70;
}
