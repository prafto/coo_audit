syntax = "proto3";

package safety_service.v1;

import "doordash.api/annotations.proto";
import "doordash.api/client.proto";
import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option go_package = "github.com/doordash/services-protobuf/generated/safety_service/api/v1";
option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.safety_service.rpc.api";

// IncidentService provides operations for managing safety incidents across different user types.
service IncidentService {
  option (doordash.api.service) = {
    name: "safety-service"
    url: "safety-service-api.service.prod.ddsd"
    port: 50051
    name_spaces: ["safety-service"]
    owner: {
      id: "trust-and-safety-observability"
      name: "safety"
      slack_channel: "#ask-safety-eng"
      email_alias: "tns-eng@doordash.com"
    }
    target_products: [INTERNAL]
  };

  // GetIncident retrieves a single incident by its ID.
  rpc GetIncident(GetIncidentRequest) returns (GetIncidentResponse);

  // CreateIncident creates a new safety incident.
  rpc CreateIncident(CreateIncidentRequest) returns (CreateIncidentResponse);

  // ListIncident retrieves a list of incidents with optional filtering.
  rpc ListIncident(ListIncidentRequest) returns (ListIncidentResponse);

  // UpdateIncident updates an existing incident's details.
  rpc UpdateIncident(UpdateIncidentRequest) returns (UpdateIncidentResponse);

  // DeleteIncident removes an incident from the system.
  rpc DeleteIncident(DeleteIncidentRequest) returns (DeleteIncidentResponse);

  // SearchIncident searches for incidents based on query parameters.
  rpc SearchIncident(SearchIncidentRequest) returns (SearchIncidentResponse);

  // GetIncidentCategories retrieves available categories for incident types.
  rpc GetIncidentCategories(GetIncidentCategoriesRequest) returns (GetIncidentCategoriesResponse);
}

// IncidentType represents the type of user involved in a safety incident.
enum IncidentType {
  // Unspecified incident type.
  INCIDENT_TYPE_UNSPECIFIED = 0;
  // Incident involving a consumer.
  INCIDENT_TYPE_CONSUMER = 1;
  // Incident involving a merchant.
  INCIDENT_TYPE_MERCHANT = 2;
  // Incident involving a dasher.
  INCIDENT_TYPE_DASHER = 3;
}

// GetIncidentRequest contains the ID of the incident to retrieve.
message GetIncidentRequest {
  // The unique identifier of the incident.
  int64 id = 1;
}

// CreateIncidentRequest contains the details needed to create a new incident.
message CreateIncidentRequest {
  // The category of the incident.
  string category = 1;
  // Additional notes or description of the incident.
  string notes = 2;
  // The type of incident.
  IncidentType incident_type = 3;
  // The ID of the user profile involved in the incident.
  int64 profile_id = 4;
  // The Salesforce case ID associated with this incident.
  int64 sfdc_case_id = 5;
  // The ID of the user who created the incident.
  int64 created_by_id = 6;
  // THQ uuid for this case
  string thq_uuid = 7;
}

// Incident represents a safety incident in the system.
message Incident {
  // The unique identifier of the incident.
  int64 id = 1;
  // The category of the incident.
  string category = 2;
  // Additional notes or description of the incident.
  string notes = 3;
  // The Salesforce case ID associated with this incident.
  int64 sfdc_case_id = 4;
  // The type of incident.
  IncidentType incident_type = 5;
  // The ID of the user profile involved in the incident.
  int64 profile_id = 6;
  // The timestamp when the incident was created.
  google.protobuf.Timestamp created_at = 7;
  // The ID of the user who created the incident.
  int64 created_by_id = 8;
  // THQ uuid for this case
  string thq_uuid = 9;
}

// GetIncidentResponse contains the retrieved incident.
message GetIncidentResponse {
  // The incident details.
  Incident incident = 1;
}

// CreateIncidentResponse contains the newly created incident.
message CreateIncidentResponse {
  // The created incident details.
  Incident incident = 1;
}

// ListIncidentRequest contains parameters for listing incidents.
message ListIncidentRequest {
  // Maximum number of incidents to return.
  int32 limit = 1;
  // Filter incidents by type.
  IncidentType incident_type = 2;
}

// ListIncidentResponse contains the list of incidents.
message ListIncidentResponse {
  // List of incidents matching the request criteria.
  repeated Incident incidents = 1;
}

// UpdateIncidentRequest contains the updated details for an incident.
message UpdateIncidentRequest {
  // The unique identifier of the incident to update.
  int64 id = 1;
  // The updated category of the incident.
  string category = 2;
  // The updated notes or description of the incident.
  string notes = 3;
  // The updated Salesforce case ID.
  int64 sfdc_case_id = 4;
  // The updated type of incident.
  IncidentType incident_type = 5;
  // The updated profile ID.
  int64 profile_id = 6;
  // THQ uuid for this case
  string thq_uuid = 7;
}

// UpdateIncidentResponse contains the updated incident details.
message UpdateIncidentResponse {
  // The unique identifier of the incident.
  int64 id = 1;
  // The updated category of the incident.
  string category = 2;
  // The updated notes or description of the incident.
  string notes = 3;
  // The updated Salesforce case ID.
  int64 sfdc_case_id = 4;
  // The updated type of incident.
  IncidentType incident_type = 5;
  // The updated profile ID.
  int64 profile_id = 6;
  // The timestamp when the incident was created.
  google.protobuf.Timestamp created_at = 7;
  // The ID of the user who created the incident.
  int64 created_by_id = 8;
  // THQ uuid for this case
  string thq_uuid = 9;
}

// DeleteIncidentRequest contains the ID of the incident to delete.
message DeleteIncidentRequest {
  // The unique identifier of the incident to delete.
  int64 id = 1;
}

// DeleteIncidentResponse is empty on success.
message DeleteIncidentResponse {
  // Empty response indicates successful deletion
  google.protobuf.Empty empty = 1;
}

// SearchIncidentRequest contains search parameters for finding incidents.
message SearchIncidentRequest {
  // The search query string.
  string search_query = 1;
  // Filter incidents by type.
  IncidentType incident_type = 2;
}

// SearchIncidentResponse contains the search results.
message SearchIncidentResponse {
  // List of incidents matching the search criteria.
  repeated Incident incidents = 1;
}

// IncidentCategory represents a category for incidents.
message IncidentCategory {
  // The category value.
  string value = 1;
  // The description of the category.
  string description = 2;
}

// GetIncidentCategoriesRequest contains parameters for retrieving incident categories.
message GetIncidentCategoriesRequest {
  // Filter categories by incident type.
  IncidentType incident_type = 1;
}

// GetIncidentCategoriesResponse contains the available incident categories.
message GetIncidentCategoriesResponse {
  // List of available incident categories.
  repeated IncidentCategory categories = 1;
}
