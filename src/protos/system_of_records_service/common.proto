syntax = "proto3";

package system_of_records_service.v1;

import "common/common.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.system_of_records_service";

// enum for entity id type
enum EntityIdType {
  // unspecified
  ENTITY_ID_TYPE_UNSPECIFIED = 0;
  // dasher applicant unique link
  ENTITY_ID_TYPE_DASHER_APPLICANT_UNIQUE_LINK = 1;
  // employee user id
  ENTITY_ID_TYPE_EMPLOYEE_USER_ID = 2;
  // store id
  ENTITY_ID_TYPE_STORE_ID = 3;
}

// entity
message Entity {
  // entity id value
  string entity_id_value = 1;
  // entity type, like dasher_id, dasher_applicant_unique_link, etc
  EntityIdType entity_id_type = 2;
}

// dasher entity
message DasherSot {
  // tax id in tokenized format
  google.protobuf.StringValue tax_id_token = 1;
  // tax id type, e.g., ssn, sin
  TaxIdType tax_id_type = 2;
  // tax id verification result
  VerificationResult tax_id_verification_result = 3;
  // addresses
  repeated Address addresses = 4;
  // Business tax info (optional)
  BusinessTaxInfo business_tax_info = 5;
}

// Business Tax Info
message BusinessTaxInfo {
  // Business number
  google.protobuf.StringValue business_number = 1;
  // Company Info
  Company company_info = 2;
}

// Company Info
message Company {
  // Business company name
  google.protobuf.StringValue company_name = 1;
  // Company dob
  google.protobuf.StringValue company_dob = 2;
  // Company address
  common.CommonAddress company_address = 3;
  // Whether or not GST is registered (AUS only)
  google.protobuf.BoolValue is_gst_registered = 4;
}

// Address
message Address {
  // address id
  string address_id = 1;
  // Source-specific original identifier of the address record.
  google.protobuf.StringValue source_place_id = 2;
  // move-in date
  google.protobuf.Timestamp move_in_date = 3;
  // address type
  AddressType address_type = 4;
  // address source
  AddressSource address_source = 5;
  // formatted address
  google.protobuf.StringValue formatted_address = 6;
  // country code
  google.protobuf.StringValue country_code = 7;
}

// Address type
enum AddressType {
  // unspecified
  ADDRESS_TYPE_UNSPECIFIED = 0;
  // residence address
  ADDRESS_TYPE_RESIDENCE = 1;
  // address on the driver's license
  ADDRESS_TYPE_DRIVER_LICENSE = 2;
}

// address source
enum AddressSource {
  // unspecified
  ADDRESS_SOURCE_UNSPECIFIED = 0;
  // user input
  ADDRESS_SOURCE_USER_INPUT = 1;
  // from vendor Persona
  ADDRESS_SOURCE_PERSONA = 2;
  // from vendor Stripe
  ADDRESS_SOURCE_STRIPE = 3;
}

// Stripe account data
message StripeAccount {
  // Stripe account id
  string stripe_account_id = 1;
  // Doordash entity identifier
  Entity entity = 2;
  // Doordash payment account id
  string dd_payment_id = 3;
  // country code
  google.protobuf.StringValue country_code = 4;
  // json metadata from Stripe get account payload
  google.protobuf.StringValue account_data = 5;
  // tax id in tokenized format
  google.protobuf.StringValue tax_id_token = 6;
  // tax id type, e.g., ssn, sin
  TaxIdType tax_id_type = 7;
}

// Persona account data
message PersonaAccount {
  // Persona account id
  string persona_account_id = 1;
  // Doordash entity identifier
  Entity entity = 2;
  // Country code
  google.protobuf.StringValue country_code = 3;
  // JSON response payload from Persona retrieve account API
  google.protobuf.StringValue account_data = 4;
}

// Checkr account data
message CheckrAccount {
  // Checkr account id
  string checkr_account_id = 1;
  // Doordash entity identifier
  Entity entity = 2;
  // Country code
  google.protobuf.StringValue country_code = 3;
  // JSON payload from Checkr retrieve candidate API or webhook
  google.protobuf.StringValue account_data = 4;
}

// enum for update status
enum UpdateUserAccountStatus {
  // status unspecified
  UPDATE_USER_ACCOUNT_STATUS_UNSPECIFIED = 0;
  // update pending
  UPDATE_USER_ACCOUNT_STATUS_PENDING = 1;
  // update completed
  UPDATE_USER_ACCOUNT_STATUS_COMPLETED = 2;
  // update cancelled
  UPDATE_USER_ACCOUNT_STATUS_CANCELLED = 3;
  // update failed
  UPDATE_USER_ACCOUNT_STATUS_FAILED = 4;
}

// enum for update error type
enum UpdateUserAccountErrorType {
  // unspecified
  UPDATE_USER_ACCOUNT_ERROR_TYPE_UNSPECIFIED = 0;
  // duplicated value with other entity, and not updating
  UPDATE_USER_ACCOUNT_ERROR_TYPE_DUPLICATED = 1;
  // unchanged value as current entity, and not updating
  UPDATE_USER_ACCOUNT_ERROR_TYPE_UNCHANGED = 2;
  // pending update
  UPDATE_USER_ACCOUNT_ERROR_TYPE_PENDING = 3;
  // account not found
  UPDATE_USER_ACCOUNT_ERROR_TYPE_ACCOUNT_NOT_FOUND = 4;
  // internal error
  UPDATE_USER_ACCOUNT_ERROR_TYPE_INTERNAL = 5;
}

// enum for tax id type
enum TaxIdType {
  // unspecified
  TAX_ID_TYPE_UNSPECIFIED = 0;
  // ssn (US)
  TAX_ID_TYPE_SSN = 1;
  // SIN (CA)
  TAX_ID_TYPE_CA_SIN = 2;
  // CA Business Number
  TAX_ID_TYPE_CA_BUSINESS = 3;
  // IRD (NZ)
  TAX_ID_TYPE_NZ_IRD = 4;
  // NZ Business Number
  TAX_ID_TYPE_NZ_BUSINESS = 5;
  // ABN (AU)
  TAX_ID_TYPE_AU_BUSINESS = 6;
}

// enum for verification result
enum VerificationResult {
  // unspecified
  VERIFICATION_RESULT_UNSPECIFIED = 0;
  // verified
  VERIFICATION_RESULT_VERIFIED = 1;
  // unverified
  VERIFICATION_RESULT_UNVERIFIED = 2;
  // pending
  VERIFICATION_RESULT_PENDING = 3;
  // internal_updating
  // This is a special status for internal use only.
  // It means value is updated in our system, but not yet updated in the vendor
  VERIFICATION_RESULT_INTERNAL_UPDATING = 4;
}
