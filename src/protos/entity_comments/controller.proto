syntax = "proto3";
package entity_comments.v1;

import "entity_comments/common.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.entity_comments.controller";

// Entity Comments service
service EntityCommentsService {
  // create comment
  rpc CreateComment(CreateCommentRequest) returns (CreateCommentResponse);
  // update comments
  rpc UpdateComment(UpdateCommentRequest) returns (UpdateCommentResponse);
  // get comments
  rpc GetComments(GetCommentsRequest) returns (GetCommentsResponse);
  // resolve comments
  rpc ResolveComment(ResolveCommentRequest) returns (ResolveCommentResponse);
  // delete comments
  rpc DeleteComment(DeleteCommentRequest) returns (DeleteCommentResponse);
  // get replies
  rpc GetCommentReplies(GetCommentRepliesRequest) returns (GetCommentRepliesResponse);
}

// Create Comment Request
message CreateCommentRequest {
  // comment
  EntityComment comment = 1;
}

// Create Comment Response
message CreateCommentResponse {
  // response with status and comment id
  EntityCommentResponse response = 1;
}

// Update Comment Request
message UpdateCommentRequest {
  // comment id
  string comment_id = 1;
  // commenter user details
  User user = 2;
  // comment text
  string text = 3;
  // mentions (list of emails)
  repeated string mentions = 4;
}

// Update Comment Response
message UpdateCommentResponse {
  // response with status and comment id
  EntityCommentResponse response = 1;
}

// Get Comments Request
message GetCommentsRequest {
  // entity id
  string entity_id = 1;
  // entity type
  EntityType entity_type = 2;
  // additional details (context)
  string context = 3;
}

// Get Comments Response
message GetCommentsResponse {
  // list of comments for entity
  repeated EntityComment comments = 1;
  // response code
  Status status = 2;
}

// Resolve Comment Request
message ResolveCommentRequest {
  // comment id
  string comment_id = 1;
  // resolver user details
  User user = 2;
}

// Resolve Comment Response
message ResolveCommentResponse {
  // response code
  Status status = 1;
}

// Delete Comment Request
message DeleteCommentRequest {
  // comment id of comment being deleted
  string comment_id = 1;
  // user details
  User user = 2;
}

// Delete Comment Response
message DeleteCommentResponse {
  // response code
  Status status = 1;
}

// Get Comment Replies Request
message GetCommentRepliesRequest {
  // parent comment id
  string comment_id = 1;
}

// Get Comment Replies Response
message GetCommentRepliesResponse {
  // list of comments for parent comment
  repeated EntityComment comments = 1;
  // response code
  Status status = 2;
}
