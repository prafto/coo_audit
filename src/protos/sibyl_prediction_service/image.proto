syntax = "proto3";

import "common/service_client_config.proto";
import "google/protobuf/wrappers.proto";
import "sibyl_prediction_service/prediction.proto";

option go_package = "github.com/doordash/services-protobuf/generated/sibyl_prediction_service";
option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.sibyl_prediction_service.api";

// Data type to represent an image
message Image {
  // Image content, represented as a stream of bytes.
  bytes content = 1;

  // If both `content` and `source_uri` are provided for an image, `content` takes precedence
  string source_uri = 2;
}

// Service that performs Image recognition tasks.
// Returns ImageRecognitionResponse
service ImageRecognitionService {
  // Run image recognition for a batch of images.
  rpc ImagesRecognition(ImagesRecognitionRequest) returns (ImagesRecognitionResponse);
}

// Multiple image recognition requests are batched into a single service call.
message ImagesRecognitionRequest {
  // Individual image recognition requests for this batch.
  repeated ImageRecognitionRequest requests = 1;
  RequestContext request_context = 2;
}

// Request for performing image recognition tasks over a user-provided
// image, with user-requested features.
message ImageRecognitionRequest {
  // Predictor to use for image recognition
  Predictor predictor = 1;
  // The image to be processed.
  Image image = 2;
}

// Response to a batch image recognition request.
message ImagesRecognitionResponse {
  // Individual responses to image recognition requests within the batch.
  repeated ImageRecognitionResponse responses = 1;
}

// Response to an image recognition request.
message ImageRecognitionResponse {
  // prediction score
  float prediction = 1;
  // confidence measure
  float confidence = 2;
}
