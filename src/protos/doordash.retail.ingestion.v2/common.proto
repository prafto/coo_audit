syntax = "proto3";

package doordash.retail.ingestion.v2;

import "common/code.proto";
import "common/money.proto";
import "google/protobuf/wrappers.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.retail.ingestion";

// Should support feed, inventory from openAPI and other sources
message IngestInventoryRequest {
  // Merchant name
  google.protobuf.StringValue merchant_name = 1;
  // List of business IDs
  repeated google.protobuf.Int64Value business_ids = 2;
  // List of store IDs
  repeated google.protobuf.Int64Value store_ids = 3;
  // List of external business IDs
  repeated google.protobuf.StringValue external_business_ids = 4;
  // List of location IDs
  repeated google.protobuf.StringValue location_ids = 5;
  // Should update menu with ingestion
  google.protobuf.BoolValue update_menu = 6;
  // Should ingest for test stores
  google.protobuf.BoolValue process_testing_stores = 7;
  // Should ingest for inactive stores
  google.protobuf.BoolValue process_inactive_stores = 8;
  // Should skip price guardrail downstream
  google.protobuf.BoolValue skip_price_guardrail = 9;
  // Should treat this as partial update
  google.protobuf.BoolValue partial_update = 10;
  // Channel of origin for ingestion
  google.protobuf.StringValue channel = 11;
  // Support feed ingestion
  Feed feed = 12;
  // Support inventory items ingestion
  repeated InventoryItem inventory = 14;
  // Client can pass in request id
  google.protobuf.StringValue request_id = 15;
}

// Response from inventory ingestion
message IngestInventoryResponse {
  // Request ID
  google.protobuf.StringValue operation_id = 1;
  // Job status
  google.protobuf.StringValue operation_status = 2;
  // Job message
  google.protobuf.StringValue message = 3;
  // Job code
  code.Code code = 4;
}

// Should support feed, catalog from openAPI and other sources
message IngestCatalogRequest {
  // Merchant name
  google.protobuf.StringValue merchant_name = 1;
  // List of business IDs
  repeated google.protobuf.Int64Value business_ids = 2;
  // List of external business IDs
  repeated google.protobuf.StringValue external_business_ids = 3;
  // Should process test businesses
  google.protobuf.BoolValue process_testing_businesses = 4;
  // Should process inactive businesses
  google.protobuf.BoolValue process_inactive_businesses = 5;
  // Channel of source for ingestion
  google.protobuf.StringValue channel = 6;
  // Support feed ingestion
  Feed feed = 7;
  // Support catalog items ingestion
  repeated CatalogItem catalog = 8;
  // Client can pass in request id
  google.protobuf.StringValue request_id = 9;
}

// Response of catalog ingestion
message IngestCatalogResponse {
  // Request ID
  google.protobuf.StringValue operation_id = 1;
  // Job status
  google.protobuf.StringValue operation_status = 2;
  // Job message
  google.protobuf.StringValue message = 3;
  // Job code
  code.Code code = 4;
}

// Feed for offline ingestion
message Feed {
  // Date of feed
  google.protobuf.StringValue date = 1;
  // S3 file prefix
  google.protobuf.StringValue file_prefix = 2;
  // Type of feed (e.g. MIRDM, Nexla)
  google.protobuf.StringValue feed_type = 3;
  // S3 bucket name
  google.protobuf.StringValue bucket_name = 4;
}

// Item for catalog
message CatalogItem {
  // Product trait for catalog
  enum ProductTrait {
    // default
    PRODUCT_TRAIT_UNSPECIFIED = 0;
    // alcohol
    PRODUCT_TRAIT_ALCOHOL = 1;
    // medication
    PRODUCT_TRAIT_MEDICATION = 2;
    // weighted
    PRODUCT_TRAIT_WEIGHTED = 3;
    // HSA/FSA eligible
    PRODUCT_TRAIT_HSA_FSA_ELIGIBLE = 4;
    // Package fee eligible
    PRODUCT_TRAIT_PACKAGE_FEE_ELIGIBLE = 5;
    // SNAP eligible
    PRODUCT_TRAIT_SNAP_ELIGIBLE = 6;
    // Duplicate MSID
    PRODUCT_TRAIT_DUPLICATE_MSID = 7 [deprecated = true];
    // Private label
    PRODUCT_TRAIT_PRIVATE_LABEL = 8 [deprecated = true];
  }
  // MSID
  google.protobuf.StringValue merchant_supplied_item_id = 1;
  // Product name
  google.protobuf.StringValue name = 2;
  // Description
  google.protobuf.StringValue description = 3;
  // Product traits
  repeated ProductTrait product_traits = 4;
  // Other identifiers
  repeated Identifier other_identifiers = 5;
  // Images
  repeated ItemImage images = 6;
  // Size
  Size size = 7;
  // Weighted info
  WeightedItemInfo weighted_item_info = 8;
  // Brand info
  BrandInfo brand_info = 9;
  // Program eligibility
  repeated ProgramEligibility program_eligibility = 10;
  // Item categories
  repeated Category item_categorizations = 11;
  // Product attributes
  repeated ProductAttribute product_attributes = 12;
  // Wine vintage year
  google.protobuf.Int64Value wine_vintage_year = 13 [deprecated = true];
  // Product group
  google.protobuf.StringValue product_group = 14 [deprecated = true];
  // Priority rank
  google.protobuf.Int64Value priority_rank = 15;
  // Place of origin
  google.protobuf.StringValue place_of_origin = 16 [deprecated = true];
  // Package type
  google.protobuf.StringValue package_type = 17 [deprecated = true];
  // Nutritional info
  repeated google.protobuf.StringValue nutritional_info = 18;
  // Metadata
  google.protobuf.StringValue metadata = 19;
  // Manufacturer
  google.protobuf.StringValue manufacturer = 20 [deprecated = true];
  // Ingredients
  repeated google.protobuf.StringValue ingredients = 21;
  // Dietary flags
  repeated google.protobuf.StringValue dietary_flags = 22 [deprecated = true];
  // Disclaimer
  google.protobuf.StringValue disclaimer = 23;
  // Allergen info
  google.protobuf.StringValue allergen_info = 24;
  // Abv
  google.protobuf.DoubleValue abv = 25 [deprecated = true];
  // Variants
  repeated google.protobuf.StringValue variants = 26;
  // Raw merchant item name
  google.protobuf.StringValue raw_merchant_item_name = 27;
  // Extended size
  google.protobuf.StringValue extended_size = 28;
}

// Product Identifier
message Identifier {
  // One of "UPC" "PLU" "NSC2" "GTIN"
  IdentifierType identifier_type = 1;
  // Identifier value
  google.protobuf.StringValue identifier_value = 2;
  // Rank
  google.protobuf.Int64Value rank = 3;
}

// Product Image
message ItemImage {
  // Image URL
  google.protobuf.StringValue url = 1;
  // Sort ID
  google.protobuf.Int64Value sort_id = 2;
  // Rank
  google.protobuf.Int64Value rank = 3;
}

// Product Size
message Size {
  // Size information
  SizeInfo size_info = 1;
  // Pack size details
  PackSizeDetail pack_size_details = 2;
}

// Size Information
message SizeInfo {
  // Product dimensions
  Dimensions dimensions = 1;
  // Weight
  Weight weight = 2;
  // Volume
  Volume volume = 3;
  // Product Specific Size Definitions
  ProductSpecificSizeDefinition product_specific_size_definition = 4;
}

// Dimensions
message Dimensions {
  // Length
  LengthMeasurement length = 1;
  // Width
  LengthMeasurement width = 2;
  // Height
  LengthMeasurement height = 3;
}

// Length Measurement
message LengthMeasurement {
  // Measurement value
  google.protobuf.Int64Value value = 1;
  // Unit
  LengthUnit unit = 2;
}

// Weight Measurement
message Weight {
  // Weight value
  google.protobuf.Int64Value value = 1;
  // Weight unit
  WeightUnit unit = 2;
}

// Volume Measurement
message Volume {
  // Volume value
  google.protobuf.Int64Value value = 1;
  // Volume Unit
  VolumeUnit unit = 2;
}

// Size definition
message ProductSpecificSizeDefinition {
  // Size value
  google.protobuf.StringValue value = 1;
  // Size description
  google.protobuf.StringValue description = 2;
}

// Pack Size Detail
message PackSizeDetail {
  // Count per pack
  google.protobuf.Int64Value count_per_pack = 1;
  // Size info
  SizeInfo per_item_size_details = 2;
}

// Weighted Item Information
message WeightedItemInfo {
  // Average weight / each
  google.protobuf.Int64Value average_weight_per_each = 1;
  // Average weight unit
  AverageWeightMeasurementUnit average_weight_measurement_unit = 2;
  // Shop by measurement unit
  ShopByMeasurementUnit shop_by_measurement_unit = 3;
  // Price by measurement unit
  PriceByMeasurementUnit price_by_measurement_unit = 4;
}

// Brand info
message BrandInfo {
  // Brand name
  google.protobuf.StringValue name = 1;
}

// Item category
message Category {
  // Category name
  google.protobuf.StringValue name = 1;
  // Recursive category
  Category sub_category = 2;
}

// Product attribute
message ProductAttribute {
  // Multi select string
  message MultiSelectString {
    // value
    repeated google.protobuf.StringValue multi_select_string = 1;
  }
  // Multi select double
  message MultiSelectDouble {
    // value
    repeated google.protobuf.Int64Value multi_select_double = 1;
  }
  // Attribute name
  google.protobuf.StringValue attribute_name = 1;
  // One of attribute value
  oneof attribute_value {
    // Single select bool
    google.protobuf.BoolValue single_select_bool = 2;
    // Multi select string
    MultiSelectString multi_select_string = 3;
    // Multi select double
    MultiSelectDouble multi_select_double = 4;
  }
}

// Inventory Item
message InventoryItem {
  // Merchant Supplied ID
  google.protobuf.StringValue merchant_supplied_item_id = 1;
  // Item Name
  google.protobuf.StringValue item_name = 2;
  // Item Category
  google.protobuf.StringValue category = 3;
  // Is Alcohol. This should generally not be set if catalog type is set.
  google.protobuf.BoolValue is_alcohol = 4;
  // Item availability
  Availability item_availability = 5;
  // BoH
  google.protobuf.Int64Value balance_on_hand = 6;
  // Approximately sold as quantity
  google.protobuf.DoubleValue approximate_sold_as_quantity = 7;
  // Last sold datetime
  google.protobuf.StringValue last_sold_datetime = 8;
  // Price info
  PriceInfo price_info = 9;
  // Item location
  ItemLocation location = 10;
  // Item special hours
  repeated ItemSpecialHours item_special_hours = 11;
  // Extras
  repeated Extra extras = 12;
  // Bottle deposit fee of the item.
  money.MonetaryFields bottle_deposit_fee = 13;
  // Tax Rate
  google.protobuf.DoubleValue tax_rate = 14;
  // Is Random Weight
  google.protobuf.BoolValue is_random_weight = 15;
}

// Price info
message PriceInfo {
  // Price of the item
  money.MonetaryFields price = 1;
  // Measurement price of the item, required for weighted item.
  money.MonetaryFields measurement_price = 2;
  // Loyalty price of the item
  money.MonetaryFields loyalty_price = 3;
  // Loyalty Measurement price of the item, required for weighted item.
  money.MonetaryFields loyalty_measurement_price = 4;
  // Non discount price of the item
  money.MonetaryFields non_discount_price = 5;
  // Non discount measurement price of the item, required for weighted item.
  money.MonetaryFields non_discount_measurement_price = 6;
}

// item location
message ItemLocation {
  // aisle
  google.protobuf.StringValue aisle = 1;
  // zone
  google.protobuf.StringValue zone = 2;
  // shelf
  google.protobuf.StringValue shelf = 3;
  // side
  google.protobuf.StringValue side = 4;
  // additional details
  google.protobuf.StringValue additional_details = 5;
  // coordinates
  Coordinates coordinates = 6;
  // raw text
  google.protobuf.StringValue raw_text = 7;
  // section
  google.protobuf.StringValue section = 8;
}

// int coordinates
message Coordinates {
  // x-axis
  google.protobuf.Int64Value x = 1;
  // y-axis
  google.protobuf.Int64Value y = 2;
}

// item special hours
message ItemSpecialHours {
  // day of week
  DayIndex day_index = 1;
  // start time hh:mm:ss
  google.protobuf.StringValue start_time = 2;
  // end time hh:mm:ss
  google.protobuf.StringValue end_time = 3;
  // start date
  google.protobuf.StringValue start_date = 4;
  // end date
  google.protobuf.StringValue end_date = 5;
}

// Extra
message Extra {
  // name
  google.protobuf.StringValue name = 1;
  // msid
  google.protobuf.StringValue merchant_supplied_id = 2;
  // description
  google.protobuf.StringValue description = 3;
  // availability
  Availability availability = 4;
  // sort id
  google.protobuf.Int64Value sort_id = 5;
  // min num options
  google.protobuf.Int64Value min_num_options = 6;
  // max num options
  google.protobuf.Int64Value max_num_options = 7;
  // num free options
  google.protobuf.Int64Value num_free_options = 8;
  // min option choice quantity
  google.protobuf.Int64Value min_option_choice_quantity = 9;
  // max option choice quantity
  google.protobuf.Int64Value max_option_choice_quantity = 10;
  // min aggregate options quantity
  google.protobuf.Int64Value min_aggregate_options_quantity = 11;
  // max aggregate options quantity
  google.protobuf.Int64Value max_aggregate_options_quantity = 12;
  // options
  repeated Option options = 13;
}

// option
message Option {
  // msid
  google.protobuf.StringValue merchant_supplied_item_id = 1;
  // name
  google.protobuf.StringValue name = 2;
  // availability
  Availability availability = 3;
  // price info
  PriceInfo price_info = 4;
  // special hours
  repeated ItemSpecialHours item_extra_option_special_hours = 5;
  // description
  google.protobuf.StringValue description = 6;
  // default option
  google.protobuf.BoolValue default = 7;
  // sort
  google.protobuf.Int64Value sort_id = 8;
  // extras
  repeated Extra extras = 9;
}

// length unit
enum LengthUnit {
  // default
  LENGTH_UNIT_UNSPECIFIED = 0;
  // inch
  LENGTH_UNIT_INCH = 1;
  // feet
  LENGTH_UNIT_FT = 2;
}

// weight unit
enum WeightUnit {
  // default
  WEIGHT_UNIT_UNSPECIFIED = 0;
  // pounds
  WEIGHT_UNIT_LBS = 1;
  // grams
  WEIGHT_UNIT_GM = 2;
}

// volume unit
enum VolumeUnit {
  // default
  VOLUME_UNIT_UNSPECIFIED = 0;
  // ounces
  VOLUME_UNIT_OZ = 1;
}

// identifier type
enum IdentifierType {
  // default
  IDENTIFIER_TYPE_UNSPECIFIED = 0;
  // upc
  IDENTIFIER_TYPE_UPC = 1;
  // plu
  IDENTIFIER_TYPE_PLU = 2;
  // nsc2
  IDENTIFIER_TYPE_NSC2 = 3;
  // gtin
  IDENTIFIER_TYPE_GTIN = 4;
}

// program eligibility
enum ProgramEligibility {
  // default
  PROGRAM_ELIGIBILITY_UNSPECIFIED = 0;
  // snap
  PROGRAM_ELIGIBILITY_SNAP = 1;
  // hsa
  PROGRAM_ELIGIBILITY_HSA = 2;
  // fsa
  PROGRAM_ELIGIBILITY_FSA = 3;
}

// day of week
enum DayIndex {
  // default
  DAY_INDEX_UNSPECIFIED = 0;
  // monday
  DAY_INDEX_MON = 1;
  // tuesday
  DAY_INDEX_TUE = 2;
  // wednesday
  DAY_INDEX_WED = 3;
  // thursday
  DAY_INDEX_THU = 4;
  // friday
  DAY_INDEX_FRI = 5;
  // saturday
  DAY_INDEX_SAT = 6;
  // sunday
  DAY_INDEX_SUN = 7;
}

// availability
enum Availability {
  // default
  AVAILABILITY_UNSPECIFIED = 0;
  // active
  AVAILABILITY_ACTIVE = 1;
  // inactive
  AVAILABILITY_INACTIVE = 2;
}

// Average Weight Measurement Unit
enum AverageWeightMeasurementUnit {
  // default
  AVERAGE_WEIGHT_MEASUREMENT_UNIT_UNSPECIFIED = 0;
  // EA
  AVERAGE_WEIGHT_MEASUREMENT_UNIT_EA = 1;
  // KG
  AVERAGE_WEIGHT_MEASUREMENT_UNIT_KG = 2;
  // LB
  AVERAGE_WEIGHT_MEASUREMENT_UNIT_LB = 3;
  // GM
  AVERAGE_WEIGHT_MEASUREMENT_UNIT_GM = 4;
  // OZ
  AVERAGE_WEIGHT_MEASUREMENT_UNIT_OZ = 5;
}

// Average Weight Measurement Unit
enum ShopByMeasurementUnit {
  // default
  SHOP_BY_MEASUREMENT_UNIT_UNSPECIFIED = 0;
  // KG
  SHOP_BY_MEASUREMENT_UNIT_KG = 1;
  // LB
  SHOP_BY_MEASUREMENT_UNIT_LB = 2;
  // GM
  SHOP_BY_MEASUREMENT_UNIT_GM = 3;
  // OZ
  SHOP_BY_MEASUREMENT_UNIT_OZ = 4;
}

// Price By Measurement Unit
enum PriceByMeasurementUnit {
  // default
  PRICE_BY_MEASUREMENT_UNIT_UNSPECIFIED = 0;
  // KG
  PRICE_BY_MEASUREMENT_UNIT_KG = 1;
  // LB
  PRICE_BY_MEASUREMENT_UNIT_LB = 2;
  // GM
  PRICE_BY_MEASUREMENT_UNIT_GM = 3;
  // OZ
  PRICE_BY_MEASUREMENT_UNIT_OZ = 4;
}
