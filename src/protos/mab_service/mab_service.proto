syntax = "proto3";
package mab_service.v1;

import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.mab_service.v1";

// MAB(Multi-Arm Bandit) Service
service MabService {
  // Create Mab object
  rpc CreateMab(CreateMabRequest) returns (CreateMabResponse);
  // Update Mab
  rpc UpdateMab(UpdateMabRequest) returns (UpdateMabResponse);
  // Get Mab
  rpc GetMab(GetMabRequest) returns (GetMabResponse);
  // Get Mab list index
  rpc GetMabList(GetMabListRequest) returns (GetMabListResponse);
  // Get the parameters of the reward posterior probability distribution of a mab
  rpc GetRewardDistribution(GetRewardDistributionRequest) returns (GetRewardDistributionResponse);
  // Insert the parameters of reward posterior probability distribution of a mab
  rpc AddRewardDistribution(AddRewardDistributionRequest) returns (AddRewardDistributionResponse);
}

// Type of probability distriubtion of metric
enum DistributionType {
  // distribution type unspecified
  DISTRIBUTION_TYPE_UNSPECIFIED = 0;
  // normal distribution
  DISTRIBUTION_TYPE_NORMAL = 1;
  // binomial distribution
  DISTRIBUTION_TYPE_BINOMIAL = 2;
}

// Direction of sorting order
enum OrderDirection {
  // direction unspecified
  ORDER_DIRECTION_UNSPECIFIED = 0;
  // ascending order
  ORDER_DIRECTION_ASCENDING = 1;
  // descending order
  ORDER_DIRECTION_DESCENDING = 2;
}

// Field to determine whether to update dv allocation manually or automatically
enum UpdateType {
  // direction unspecified
  UPDATE_TYPE_UNSPECIFIED = 0;
  // ascending order
  UPDATE_TYPE_MANUAL = 1;
  // descending order
  UPDATE_TYPE_AUTOMATIC = 2;
}

// Field used for filtering or sorting
enum Field {
  // field unspecified
  FIELD_UNSPECIFIED = 0;
  // mab name
  FIELD_NAME = 1;
  // date of creation
  FIELD_CREATED_AT = 2;
}

// Details of metric used in the reward function
message RewardMetricDetails {
  // Metric Id
  string metric_id = 1;
  // Metric Name
  string metric_name = 2;
  // Distribution type
  DistributionType distribution_type = 3;
  // initial prior json string
  RewardDistributionParams initial_priors = 4;
}

// Parameters for normal distribution
message NormalDistributionParams {
  // mean
  string mean = 1;
  // variance
  string variance = 2;
}

// Parameters for beta distribution
message BetaDistributionParams {
  // alpha
  string alpha = 1;
  // beta
  string beta = 2;
}

// Distribution parameters. Can be one of normal distribution or beta distribution
message RewardDistributionParams {
  // return one of the distribution types
  oneof distribution {
    // normal distribution
    NormalDistributionParams normal = 1;
    // beta distribution
    BetaDistributionParams beta = 2;
  }
}

// Results of distribution for component metric of the reward function
message RewardMetricDistributionResult {
  // metric details
  RewardMetricDetails metric = 1;
  // distribution parameters
  RewardDistributionParams distribution = 2;
  // timestamp of the job run
  google.protobuf.Timestamp compute_time = 3;
  // timestamp of the data partition used for calculation. Daily granularity.
  google.protobuf.Timestamp partition_date = 4;
  // p-value
  string p_value = 5;
  // bayesian confidence interval
  repeated string confidence_interval = 6;
}

// Reward distributions for each arm
message ArmRewardDistributionResult {
  // arm name
  string arm = 1;
  // reward distribution for each metric
  repeated RewardMetricDistributionResult reward_distributions = 2;
}

// Reward distribution of a Mab
message MabRewardDistributionResult {
  // mab id
  string mab_id = 1;
  // list of distribution results for each arm
  repeated ArmRewardDistributionResult distributions = 2;
  // segment name
  string segment = 3;
}

// Mab object
message Mab {
  // id
  string id = 1;
  // name
  string name = 2;
  // bucket key
  string bucket_key = 3;
  // exposure table name in snowflake
  string exposure = 4;
  // names of arm
  repeated string arms = 5;
  // update schedule for reward computation
  string reward_update_schedule = 6;
  // reward function
  string reward_function = 7;
  // list of metrics composed of the reward function
  repeated RewardMetricDetails metrics = 8;
  // experiment name
  string experiment_name = 9;
  // update type
  UpdateType update_type = 10;
  // update cadence as cron
  string update_cadence = 11;
  // control group name
  string control_group_name = 12;
  // bucket key type for switchback experiment
  string bucket_key_type = 13;
  // switchback_window
  string switchback_window = 14;
  // owner who created this Mab
  string owner = 15;
  // Timestamp when this Mab is created
  google.protobuf.Timestamp created_at = 16;
  // DV ID
  string dv_id = 17;
  // DV segments
  repeated string dv_segments = 18;
  // toggle control whether to run job or not
  bool job_is_active = 19;
}

// request to create a MAB object
message CreateMabRequest {
  // Deprecated "mab_json"
  reserved 2;
  reserved "mab_json";

  // mab
  Mab mab = 1;
}

// create mab response
message CreateMabResponse {
  // Deprecated "mab_json"
  reserved 2;
  reserved "mab_json";

  // mab id
  string id = 1;
}

// update mab request
message UpdateMabRequest {
  // Deprecated "mab_json"
  reserved 2;
  reserved "mab_json";

  // mab object
  Mab mab = 1;
}

// update mab response
message UpdateMabResponse {
  // Deprecated "mab_json"
  reserved 2;
  reserved "mab_json";

  // mab id
  string id = 1;
}

// get mab request
message GetMabRequest {
  // mab id
  string id = 1;
}

// get mab response
message GetMabResponse {
  // Deprecated "mab_json"
  reserved 2;
  reserved "mab_json";

  // Mab object
  Mab mab = 1;
}

// get mab list request
message GetMabListRequest {
  // sort list by
  message Order {
    // field to sort
    Field field = 1;
    // sort direction
    OrderDirection direction = 2;
  }

  // page number of the response
  google.protobuf.Int32Value page_number = 1;
  // page size of the response
  google.protobuf.Int32Value page_size = 2;
  // sort order
  Order order = 3;
}

// get mab list reponse
message GetMabListResponse {
  // list of mabs
  repeated Mab mabs = 1;
  // page number
  int32 page_number = 2;
  // page size
  int32 page_size = 3;
  // total number of mabs
  int32 total_mabs = 4;
  // total pages
  int32 total_pages = 5;
}

// request to get reward distribution
message GetRewardDistributionRequest {
  // one of
  // ids
  repeated string ids = 1;
  // names
  repeated string names = 2;
  // is getting the latest result
  bool is_latest = 3;
  // get by partition dates
  repeated google.protobuf.Timestamp partition_dates = 4;
}

// response of reward distribution
message GetRewardDistributionResponse {
  // list of distribution results for each mab in the request
  repeated MabRewardDistributionResult mab_distributions = 1;
  //  list of arm allocation for each mab in the request partitioned by date
  repeated MabArmAllocationResult mab_arm_allocations = 2;
}

// request of adding reward distribution
message AddRewardDistributionRequest {
  reserved 4;
  reserved "results";
  // mab id
  string mab_id = 1;
  // reward distribution result
  repeated ArmRewardDistributionResult distributions = 2;
  // example arm allocation: {"treatment": 50, "control": 50}
  map<string, int32> arm_allocation = 3;
  // segment name
  string segment = 5;
}

// response of adding reward distribution
message AddRewardDistributionResponse {
  // mab id
  string mab_id = 1;
}

// arm allocation results
message ArmAllocationResult {
  // arm allocation
  map<string, int32> arm_allocation = 1;
  // timestamp of the job run
  google.protobuf.Timestamp compute_time = 2;
  // partition date
  google.protobuf.Timestamp partition_date = 3;
}

// arm allocation of a mab
message MabArmAllocationResult {
  // mab object
  string mab_id = 1;
  // arm allocation results
  repeated ArmAllocationResult results = 2;
  // segment name
  string segment = 3;
}
