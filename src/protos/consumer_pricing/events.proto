syntax = "proto3";

package consumer_pricing;

import "common/common.proto";
import "common/money.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

message OrderQuoteEvent {
  // uuid of cart
  string cart_id = 1;
  // method name, e.g. generateOrderQuote / finalizeOrderQuote, batchOrderQuote, etc.
  string method = 2;
  // consumer and store info
  string consumer_id = 3;
  string store_id = 4;
  string store_starting_point_id = 5;
  string store_submarket_id = 6;
  double store_latitude = 7;
  double store_longitude = 8;
  string consumer_district_id = 9;
  string consumer_submarket_id = 10;
  double consumer_latitude = 11;
  double consumer_longitude = 12;
  bool consumer_is_guest = 13;
  // order quote
  int64 subtotal = 14;
  int64 original_delivery_fee = 15;
  int64 sos_delivery_fee = 16; // ???
  int64 final_delivery_fee = 17;
  int64 min_order_fee = 18;
  int64 min_order_subtotal = 19;
  int64 final_service_fee = 20;
  int64 discount_total_amount = 21; // total discounts from all discounts (every discount with a discount_type)
  int64 discount_promotion_amount = 22; // total discounts from promotions only (discount_type=DISCOUNT_TYPE_*_PROMOTION)
  int64 subtotal_tax_amount = 23;
  int64 fees_tax_amount = 24;
  int64 tax_amount = 25;
  int64 dasher_fee = 26; // deprecated fee
  int64 legislative_fee = 27; //
  int64 credits_applied_amount = 28;
  int64 original_taxes_and_fees_sum = 29;
  int64 final_taxes_and_fees_sum = 30;
  int64 total = 31;
  // metadata
  string experiment_map = 32;
  // promotions applied to the order
  string promotion_metadata = 33;
  // timestamp
  google.protobuf.Timestamp created_at = 34;
  // tip suggestion info
  string tip_suggestion_type = 35;
  int64 tip_suggestion_default_value = 36;
  repeated int64 tip_suggestion_values = 37;
  string menu_id = 38;
  string fulfillment_type = 39;
  double original_service_rate = 40; // pre-discount service rate (eg. 15%)
  double final_service_rate = 41; // post-discount service rate (eg. 5%)
  int64 tip_suggestion_percentage_argument = 42; // total amount used for tip (eg. subtotal + serviceFee + deliveryFee + tax)
  string delivery_fee_discount_source_type = 43; // eg. DELIVERY_FEE_DISCOUNT_SOURCE_TYPE_SUBSCRIPTION
  string dd_session_id = 44;
  string store_country_code = 45;
  string consumer_locale = 46; // preferred loale of Cx (eg. en_US)
  string promotion_id = 47;
  bool is_tax_inclusive = 48;
  int64 generic_fee_total = 49; // sum of all "generic fees" (eg. bag fee, cup fee...)
  string generic_fee_breakdown = 50; // breakdown of "generic fees" (eg. bag fee, cup fee...)
  int64 delivery_fee_dbp_adjustment = 51; // distance based pricing delivery fee component
  string discount_types = 52; // list of all the discount types applied
  int64 r2c_distance = 53; // distance from store to delivery location
  int64 store_to_consumer_distance = 54; // deprecated
  int64 delivery_fee_welcome_back_pricing_adjustment = 55; // welcome back pricing delivery fee component
  string curency_code = 56; // ISO currency code
  bool is_bundle = 57; // is_bundle triggers lots of different code
  string pricing_strategy = 58; // Enumerated type (is_group_order|...)
  string business_vertical_id = 59; // Several runtimes conditioned on this
  bool is_employee = 60; // can be used to find requests with details logs
  string client_version = 61; // Eg. "ios v4.103.0 b101088"
  string submit_platform = 62; // eg. ios
  int64 final_tip = 63; // only logged for finalize
  string cart_promotion_ids = 64; // promos added to the cart (not auto apply)
  string container_name = 65; // eg. canary-feature-launch1
  string build_hash = 66; // git hash of build
  string build_tag = 67; // git tag of build if exists
  string promo_campaign_ids = 68; // promo ids applied to order
  string quote_uuid = 69; // uuid generated for this quote
  google.protobuf.StringValue delivery_fee_request_uuid = 70; // delivery-fee-service GetDeliveryFee Request uuid for this quote
  int64 original_service_fee = 71;
  string delivery_options = 72; // delivery options quote
  string tags = 73; // string concatenated set of tags or attributes that this quote has (eg. drive, storefront, ...)
  google.protobuf.StringValue nudge_discount_type = 74; // discount type of nudge (if there is one)
  google.protobuf.StringValue nudge_nudeable_reason = 75; // nudgeable reason of nudge (if there is one)
  int64 expanded_range_fee = 76; // amount of expanded range fee (from generic fees)
  string subscription_status = 77; // state of Cx subscription eg. 'active'
  bool is_accurate_tax = 78; // passed in request.taxOptions and determines if
  string sub_environment = 79; // eg. canary, baseline, production
  bool is_post_checkout_bundle = 80; // is_bundle refers to pre-checkout bundle
  int64 num_bundle_carts = 81; // number of bundle carts
  bool is_group_order = 82; // is group order
  int64 sub_cart_count = 83; // number of subcarts in group order
  string tenant_id = 84; // eg. doortest, prod
  int64 subscription_plan_id = 85; // dashpass plan id (from SubscriptionDiscountMetadata)
  int64 original_priority_fee = 86;
  int64 final_priority_fee = 87;
  string priority_fee_discount_source_type = 88; // eg. PRIORITY_FEE_DISCOUNT_SOURCE_TYPE_SUBSCRIPTION_BENEFIT_GRANT
  int64 hsa_fsa_authorized_amount = 89; // amount to charge to hsa-fsa card
  google.protobuf.StringValue original_quote_id = 90; // quote id for original request. only set on shadow requests
  int64 membership_fee = 91; // amount for membership fee
  int64 response_time_ms = 92; // time to generate quote
  string eligible_plan_id = 93; // eligible plan id from eligible subscription saving details
  int64 eligible_subscription_refund_amount = 94; // refund amount from eligible subscription saving details
  int64 eligible_subscription_discounted_delivery_fee = 95; // discounted delivery fee from eligible subscription saving details
  string eligible_subscription_upsell_type = 96; // upsell type from eligible subscription saving details
  string business_id = 97;
  string service_fee_tooltip_key = 98; // arbitrary identifier for the service fee tooltip
  string delivery_fee_tooltip_key = 99; // arbitrary identifier for the delivery fee tooltip
  string savings_banner_key = 100; // arbitrary identifier for the savings banner
  string payment_brand = 101; // brand of payment method. used by promos for some discounts like dashpass eg. "Visa"
  string legislative_fee_breakdown = 102; // breakdown of "legislative fees" (eg. SEA/NYC Regulatory Response Fee)
  string display_quote_type = 103; // Use cases which determine what data a quote should display (eg. TOTAL_FEE_TALLY)
  google.protobuf.FloatValue flf_regularized = 104; // regularized FLF from supplyDemand
  google.protobuf.FloatValue flf_max = 105; // max FLF from supplyDemand
  google.protobuf.FloatValue flf_promo_threshold = 106; // flf threshold for priority fee discount (if exists)
  google.protobuf.BoolValue should_apply_credits = 107; // toggle on checkout if cx wants to apply their credits on their order
  string service_fee_algo = 108; // service fee algo
  int64 final_service_fee_min = 109; // final service fee min
  int64 final_service_fee_max = 110; // final service fee max
  string parent_cart_id = 111; // parent cart id
  google.protobuf.StringValue delivery_assignment_strategy = 112; // strategy to be used for dasher assignment, e.g. Top Dasher
  string tracking_uuid = 113; // tracking uuid in grpc context used to find logs
  string tax_transaction_id = 114; // transaction_id we get back from tax
  string external_order_reference = 115; // external order reference (for storefront)
  string consumer_experience = 116; // consumer experience (eg. voice, storefront)
  string payment_method_id_hash = 117; // hash of payment method id retrieved from payin platform
  string is_card_payment = 118; // is card payment boolean set in request from upstream
  string is_partner_plan = 119; // is partner plan (e.g. Chase Sapphire Reserve) boolean retrieved from consumer service (subscription)
  string credits_used = 120; // how much of the order was covered by credits (NONE, PARTIAL, FULL); enum specified in consumer-pricing
  int64 credit_card_payment_amount = 121; // amount paid by credit card
  int64 hsa_fsa_payment_amount = 122; // amount paid by hsa/fsa card
  int64 snap_payment_amount = 123; // amount paid by snap
  int64 cash_back_reward_amount = 124; // amount paid by cash back reward
  int64 cancel_delta_amount = 125; // amount to be refunded OR credited to the user in cancelorderquote
  int64 cancel_refund_amount = 126; // amount to be refunded to the user's original payment in cancelorderquote
  int64 cancel_credit_amount = 127; // amount to be refunded to the user in credits in cancelorderquote
  string cancel_refund_policy = 128; // refund policy for the order in cancelorderquote delimited by '.' (e.g. "subtotal:0.fees:100")
  string bundle_cart_ids = 129; // list of bundle cart ids for pre-checkout bundle, when is_bundle is true
  int64 pricing_adjustment_original_order_total_before_credits_applied_amount = 130; // original order total before credits applied amount. Used for adjust flow.
  int64 pricing_adjustment_new_order_total_before_credits_applied_amount = 131; // new order total before credits applied amount. Used for adjust flow.
  int64 pricing_adjustment_delta_amount_to_process = 132; // The delta amount between the new and old totals. to process. Used for adjust flow or cancel flow.
  int64 pricing_adjustment_charge_amount = 133; // The amount of card payment to process. Positive amount to charge; negative amount to refund. Used for adjust flow or cancel flow.
  int64 pricing_adjustment_credit_amount = 134; // The amount of credit to process. Positive amount to deduct credits; negative amount to issue credits. Used for adjust flow or cancel flow.
  int64 pricing_adjustment_merchant_tip_adjustment_amount = 135; // // Represents the amount we have adjusted the merchant tip by. Negative amount is CX refund amount. Used for adjust flow.
  int64 pricing_adjustment_apology_credit_amount = 136; // The amount to issue apology credit in case of cancellation. Used for cancel flow.
  int64 pricing_adjustment_charge_as_credit_amount = 137; // The amount of $$ to be refunded as credit. Used for cancel flow.
  int64 pricing_adjustment_dasher_tip_adjustment_amount = 138; // Represents the amount we have adjusted the dasher tip by. Negative amount is CX refund amount. Used for adjust flow.
  int64 pricing_adjustment_external_gift_card_adjustment_amount = 139; // Represents the amount we have adjusted the external gift card by. Negative amount is CX refund amount. Used for adjust flow.
  int64 pricing_adjustment_reward_points_adjustment_amount = 140; // The amount of reward points to process. Positive amount to deduct reward points; negative amount to issue reward points refund. Used for adjust flow or cancel flow.
  int64 pricing_adjustment_total_reward_points_adjustment_amount = 141; // The accrued amount of reward points that were adjusted from the original reward balance applied. This exlucdes cnr/self-help reward points refunds. Positve means added negative means refunded to date. Use for adjust flow or cancel flow.
  reserved 142; // for deprecated upsell details field
  reserved "upsell_details"; // for deprecated upsell details field
  string status = 143; // status of the quote (eg. Adjust order quote includes ADJUST_ORDER_STATUS_PREVIEW_ADJUST and ADJUST_ORDER_STATUS_ADJUST)
  string eligible_subscription_upsell_details = 144; // adding this field for shadowing migration, will be removed after migration
  int64 inflation_amount = 145; // inflation amount computed by pricing
  string metadata_t1_keys = 146; // keys of metadata map returns by pricing
  string dependency_results = 147; // success/failure of dependency calls
  int64 subtotal_alcohol = 148; // subtotal for alcohol items
  int64 subtotal_map = 149; // subtotal for Minimum Advertised Price items. these have promotional exclusions
  int64 alcohol_max_discount_percent = 150; // the max subtotal discount percent allowed for alcohol items in this market
  string consumer_zip_code = 151; // consumer zip code
  string store_zip_code = 152; // store zip code
  string trace_id = 153; // trace id for the batch request
  string multi_order_quote_detail = 154; // context for multi-order details
  int64 company_pay_delta = 155; // The company pay delta in refund
  int64 dispatch_error_credit = 156; // The dispatch error credit issued in OCA
  int64 new_delivery_fee_discount = 157; // The new delivery fee discount amount in OCA
  bool is_red_card_refund = 158; // check if the request is a red card refund case
  int64 old_final_delivery_fee = 159; // final delivery fee in the last quote for OCA
  int64 refund_without_promotion_discount = 160; // refund amount before apply promotion discount
  google.protobuf.StringValue consumer_address_id = 161; // consumer address id
}

message BatchStoreOrderQuoteEvent {
  string consumer_id = 1;
  string store_id = 2;
  string experience = 3;
  int64 original_delivery_fee = 4;
  int64 final_delivery_fee = 5;
  string promo_campaign_ids = 6;
  string discount_types = 7;
  string store_country_code = 8;
  int64 num_stores = 9;
  string tags = 10;
  string dd_session_id = 11;
  double consumer_latitude = 12;
  double consumer_longitude = 13;
  int64 response_time_ms = 14;
  bool is_subscriber = 15;
  int64 num_non_subscriber_stores = 16;
  string trigger_page = 17;
  // pre-discount service rate (eg. class service rate 15%)
  double original_service_rate = 18;
  // post-discount service rate (eg. dashpass service rate 5%)
  double final_service_rate = 19;
  int64 classic_service_fee_min = 20;
  int64 dashpass_service_fee_min = 21;
  int64 min_order_subtotal = 22;
  // pricing disclosure information on store page
  string pricing_disclosure_info = 23;
  // experiment map for the batch flow
  string experiment_map = 24;
  string tracking_uuid = 25; // tracking uuid in grpc context used to find logs
  string dependency_results = 26; // success/failure of dependency calls
  string container_name = 27; // eg. canary-deployment
  bool is_production = 28; // flag indicating if the event is from production (vs shadow/canary)
  string delivery_fee_request_uuid = 29; // join key to delivery fee audit logs
  string trace_id = 30; // trace id for the batch request
  google.protobuf.StringValue consumer_address_id = 31; // consumer address id
  string build_hash = 32; // git hash of build
}

message BriefPricingQuoteEvent {
  string consumer_id = 1;
  google.protobuf.Timestamp timestamp = 2;
  string store_id = 3;
  string fulfillment_type = 4;
  double consumer_latitude = 5;
  double consumer_longitude = 6;
  bool is_dashpass = 7;
  bool is_promotion_discount = 8;
  bool is_pickup = 9;
}

message OrderQuoteMetaDataEvent {
  string cart_id = 1;
  string consumer_id = 2;
  string consumer_locale = 3;
  string submit_platform = 4;
  string client_version = 5;
  string store_country_code = 6;
  string store_id = 7;
  string quote_uuid = 8;
  int64 eligible_subscription_refund_amount = 9;
  int64 eligible_subscription_discounted_delivery_fee = 10;
  string eligible_subscription_upsell_type = 11;
  string eligible_subscription_upsell_details = 12;
  google.protobuf.Timestamp created_at = 13;
  string consumer_submarket_id = 14;
  string fulfillment_type = 15;
  string promotion_metadata = 16;
  repeated string promo_campaign_id = 17;
}

message PromotionMetadata {
  repeated string promotion_type = 1;
  repeated string nudgeable_reason = 2;
  repeated string campaign_tag = 3;
  repeated string item_name = 4;
  repeated string message = 5;
  map<string, int64> consumer_tokens = 6;
}
