syntax = "proto3";
package dasher_app_platform.step_instructions.v1;

import "common/service_client_config.proto";
import "doordash.api/annotations.proto";
import "google/api/annotations.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.dasher_app_platform.step_instructions";

// Service for step instruction actions
service StepInstructionsService {
  option (doordash.api.service) = {
    name: "dasher-fulfillment-step-instructions-service"
    url: "dasher-fulfillment-web-tier0.service.prod.ddsd"
    port: 50051
    name_spaces: ["foundry"]
    api_key_name: "DASHER-FULFILLMENT-API-KEY"
    owner: {
      name: "dasher-app-platform-team"
      id: "dasher-app-platform-team"
      slack_channel: "#ask-dx-app-platform"
      email_alias: "dasher-app-platform@doordash.com"
    }
    target_products: [DX]
  };
  // Contact Verification Action
  rpc ContactVerificationAction(ContactVerificationActionRequest) returns (ContactVerificationActionResponse) {
    option (google.api.http) = {
      post: "/foundry/v1/step_instructions/action/contact_verification",
      body: "*"
    };
    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: PROD
      authorization: [DD_USER]
      target_products: [DX]
    };
  }
}

// This API is called only when verification required is true and the user returns back to the app from the calling/texting app.
message ContactVerificationActionRequest {
  // Can be task or delivery id
  string resource_id = 1;
}

// Response message for the contact verification action
message ContactVerificationActionResponse {
  // Did the user make successful contact with the customer
  bool is_verified = 1;
}
