syntax = "proto3";
package dasher_app_platform.ui_state_cache.v1;

import "common/service_client_config.proto";
import "doordash.api/annotations.proto";
import "doordash.api/client.proto";
import "doordash.api/field_validate.proto";
import "google/api/annotations.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/wrappers.proto";
import "lego/ui_state.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.dasher_app_platform.ui_state_cache";

// Service for fetching test fixtures
service FoundryUIStateCacheService {
  option (doordash.api.service) = {
    name: "dasher-fulfillment-ui-state-cache-service"
    url: "dasher-fulfillment-web-tier1.service.prod.ddsd"
    port: 50051
    name_spaces: ["foundry"]
    api_key_name: "DASHER-FULFILLMENT-API-KEY"
    owner: {
      name: "dasher-app-platform-team"
      id: "dasher-app-platform-team"
      slack_channel: "#ask-dx-app-platform"
      email_alias: "dasher-app-platform@doordash.com"
    }
    target_products: [DX]
  };
  // get the state cache for a given string key
  rpc GetFoundryStateCache(GetFoundryStateCacheRequest) returns (GetFoundryStateCacheResponse) {
    option (google.api.http) = {get: "/foundry/v1/cache/key/{key}/type/{type}"};
    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: DEV
      authorization: [DD_USER]
      target_products: [DX]
    };
  }
  // upsert the state cache for a given string key
  rpc UpsertFoundryStateCache(UpsertFoundryStateCacheRequest) returns (UpsertFoundryStateCacheResponse) {
    option (google.api.http) = {
      post: "/foundry/v1/cache/key/{key}/type/{type}",
      body: "*"
    };
    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: DEV
      authorization: [DD_USER]
      target_products: [DX]
    };
  }

  // delete the state cache for a given string key
  rpc DeleteFoundryStateCache(DeleteFoundryStateCacheRequest) returns (DeleteFoundryStateCacheResponse) {
    option (google.api.http) = {delete: "/foundry/v1/cache/key/{key}/type/{type}"};
    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: DEV
      authorization: [DD_USER]
      target_products: [DX]
    };
  }
}

// Request message for getting the state cache
message GetFoundryStateCacheRequest {
  // The key for the state cache
  string key = 1;
  // The type of the state cache
  string type = 2;
}

// Response message for getting the state cache
message GetFoundryStateCacheResponse {
  // The state cache for the given key
  lego.v1.UIState state = 1;
  // The created_at timestamp for the UI state
  string created_at = 2;
  // The updated_at timestamp for the UI state
  string updated_at = 3;
  // The count of updating the UI state in history
  int64 count = 4;
}

// Request message for upserting the state cache
message UpsertFoundryStateCacheRequest {
  // The key for the state cache
  string key = 1;
  // The state cache type to upsert
  string type = 2;
  // The state cache value to upsert
  google.protobuf.Struct value = 3;
  // ttl for the cache, optional and default is 0
  int64 ttl = 4;
}

// Response message for upserting the state cache
message UpsertFoundryStateCacheResponse {}

// Request message for deleting the state cache
message DeleteFoundryStateCacheRequest {
  // The key for the state cache
  string key = 1;
  // The type of the state cache
  string type = 2;
}

// Response message for deleting the state cache
message DeleteFoundryStateCacheResponse {}
