syntax = "proto3";
package dasher_app_platform.metadata.v1;

import "common/service_client_config.proto";
import "doordash.api/annotations.proto";
import "doordash.api/client.proto";
import "google/api/annotations.proto";
import "google/protobuf/wrappers.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.dasher_app_platform.metadata";

// Field type of request parameter
enum FieldType {
  // When field type is not provided. Default/null value. Should never happen.
  FIELD_TYPE_UNSPECIFIED = 0;
  // Int type
  FIELD_TYPE_INT = 1;
  // String type
  FIELD_TYPE_STRING = 2;
  // Long type
  FIELD_TYPE_LONG = 3;
  // Double type
  FIELD_TYPE_DOUBLE = 4;
  // Semver type
  FIELD_TYPE_SEMVER = 5;
  // Catch all type
  FIELD_TYPE_UNKNOWN = 6;
}

// Message type that represents a request parameter
message RequestField {
  // Identifier - as expected in the request
  string identifier = 1;
  // Name of the field in human readable format
  string name = 2;
  // Description if any provides to the document annotation
  google.protobuf.StringValue description = 3;
  // Field type of the request parameter
  FieldType type = 4;
  // Whether the field is options
  bool optional = 5;
}

// Message type that represents a manifest
message ManifestMetadata {
  // Identifier for the manifest. Screen identifier for screen and workflow id for workflow
  string identifier = 1;
  // Name of the manifest. From annotation if present and `manifestName` if not
  string name = 2;
  // Description if the Manifest annotation is present and description is provided.
  google.protobuf.StringValue description = 3;
  //  Owning team from the annotation if present.
  google.protobuf.StringValue owner = 4;
  // Tags used to group manifests. Optionally provided in the manifest
  repeated string tags = 5;
  // List of request parameters for the manifest
  repeated RequestField request_params = 6;
}

// Request type to get all screens rpc
message GetAllScreensRequest {}

// Response type for get all screens rpc
message GetAllScreensResponse {
  // Collections of screen manifests
  repeated ManifestMetadata manifests = 1;
}

// Request type to get all workflows rpc
message GetAllWorkflowsRequest {}

// Response type for get all workflows rpc
message GetAllWorkflowsResponse {
  // Collection of workflow manifests
  repeated ManifestMetadata manifests = 1;
}

// Has RPC to manage manifests and its metadata
service ManifestMetadataService {
  option (doordash.api.service) = {
    name: "dasher-fulfillment-manifest-metadata-service"
    url: "dasher-fulfillment-web-tier1.service.prod.ddsd"
    port: 50051
    name_spaces: [
      "dasher-fulfillment",
      "foundry"
    ]
    owner: {
      name: "dasher-app-platform-team"
      id: "dasher-app-platform-team"
      slack_channel: "#ask-dx-app-platform"
      email_alias: "dasher-app-platform@doordash.com"
    }
    target_products: [DX]
  };

  // RPC that fetches all the screens in the runtime and their metadata
  rpc GetAllScreens(GetAllScreensRequest) returns (GetAllScreensResponse) {
    option (google.api.http) = {get: "/foundry/v1/screens"};

    option (doordash.api.endpoint) = {
      tier: T2
      lifecycle: TEST
      authorization: [DX_USER]
      target_products: [DX]
    };

    option (service_client.client_method_config).response_attempt_timeout_millis = 8000;
  }
  // RPC that fetches all the workflows in the runtime and their metadata
  rpc GetAllWorkflows(GetAllWorkflowsRequest) returns (GetAllWorkflowsResponse) {
    option (google.api.http) = {get: "/foundry/v1/workflows"};

    option (doordash.api.endpoint) = {
      tier: T2
      lifecycle: TEST
      authorization: [DX_USER]
      target_products: [DX]
    };
  }
}
