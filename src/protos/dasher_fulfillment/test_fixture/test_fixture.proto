syntax = "proto3";
package dasher_app_platform.test_fixture.v1;

import "common/service_client_config.proto";
import "doordash.api/annotations.proto";
import "doordash.api/client.proto";
import "doordash.api/field_validate.proto";
import "google/api/annotations.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/wrappers.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.dasher_app_platform.test_fixture";

// Service for fetching test fixtures
service TestFixtureService {
  option (doordash.api.service) = {
    name: "dasher-fulfillment-test-fixture-service"
    url: "dasher-fulfillment-web-tier1.service.prod.ddsd"
    port: 50051
    name_spaces: ["foundry"]
    api_key_name: "DASHER-FULFILLMENT-API-KEY"
    owner: {
      name: "dasher-app-platform-team"
      id: "dasher-app-platform-team"
      slack_channel: "#ask-dx-app-platform"
      email_alias: "dasher-app-platform@doordash.com"
    }
    target_products: [DX]
  };
  // List all test fixtures
  rpc ListTestFixtures(ListTestFixturesRequest) returns (ListTestFixturesResponse) {
    option (google.api.http) = {get: "/foundry/v1/listTestFixture"};
    option (doordash.api.endpoint) = {
      tier: T2
      lifecycle: TEST
      authorization: [DX_USER]
      target_products: [DX]
    };
  }
  // Get the content of a test fixture
  rpc GetTestFixture(GetTestFixtureRequest) returns (GetTestFixtureResponse) {
    option (google.api.http) = {get: "/foundry/v1/getTestFixture/{filename}"};
    option (doordash.api.endpoint) = {
      tier: T2
      lifecycle: TEST
      authorization: [DX_USER]
      target_products: [DX]
    };
  }
}

// Request message for listing test fixtures
message ListTestFixturesRequest {
  // No additional fields needed for this request
}

// Response message for listing test fixtures
message ListTestFixturesResponse {
  // List of fixture groups
  repeated FixtureGroup groups = 1;
}

// Request message for getting a test fixture
message GetTestFixtureRequest {
  // The name of the file to retrieve the JSON content
  google.protobuf.StringValue filename = 1;
}

// Response message for getting a test fixture
message GetTestFixtureResponse {
  // The JSON content of the requested file
  string content = 1;
  // Metadata associated with the fixture
  FixtureMetadata metadata = 2;
}

// Metadata associated with a fixture
message FixtureMetadata {
  // The name of the file
  google.protobuf.StringValue filename = 1;
  // Optional user-friendly name for the fixture
  google.protobuf.StringValue display_name = 2;
  // Optional last updated date
  google.protobuf.StringValue last_updated = 3;
  // Optional commit hash associated with the fixture
  google.protobuf.StringValue commit_hash = 4;
}

// A group of fixtures
message FixtureGroup {
  // The name of the group(e.g. screen or workflow)
  string name = 1;
  // Nested subgroups
  repeated FixtureGroup subgroups = 2;
  // Fixtures directly under this group
  repeated FixtureMetadata fixtures = 3;
}
