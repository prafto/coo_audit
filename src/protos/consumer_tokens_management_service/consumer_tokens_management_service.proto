syntax = "proto3";

package consumer_tokens_management_service.v1;

import "common/service_client_config.proto";
import "consumer_tokens_management_service/health.proto";
import "consumer_tokens_management_service/token.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option go_package = "github.com/doordash/services-protobuf/generated/consumer_tokens_management_service/api/v1";
option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.consumer_tokens_management_service.api";

/*
 * TokenManagementService contains APIs regarding token management.
 */
service ConsumerTokensManagementService {
  option (service_client.client_config).service_name = "consumer-tokens-management-service";
  option (service_client.client_config).service_app = "api";

  /* APIs related to tokens */
  // API to get token balance for the User
  rpc GetTokensBalance(GetTokensBalanceRequest) returns (GetTokensBalanceResponse) {}
  // API to redeem token for the User
  rpc RedeemToken(RedeemTokenRequest) returns (RedeemTokenResponse) {}
  // API to grant token for the User
  rpc GrantToken(GrantTokenRequest) returns (GrantTokenResponse) {}
  // API to get token transactions history
  rpc GetTokenTransactionsHistory(GetTokenTransactionsHistoryRequest) returns (GetTokenTransactionsHistoryResponse) {}
  // API to lock token for the User
  rpc LockToken(LockTokenRequest) returns (LockTokenResponse) {}
  // API to release locked token for the User
  rpc UnlockToken(UnlockTokenRequest) returns (UnlockTokenResponse) {}

  /* APIs related to Token Category*/
  // API to ADD token category (to be deprecated)
  rpc AddTokenCategory(AddTokenCategoryRequest) returns (AddTokenCategoryResponse) {}
  // API to REMOVE token category (to be deprecated)
  rpc RemoveTokenCategory(RemoveTokenCategoryRequest) returns (RemoveTokenCategoryResponse) {}
  // API to update token category (to be deprecated)
  rpc UpdateTokenCategory(UpdateTokenCategoryRequest) returns (UpdateTokenCategoryResponse) {}
  // API to list token categories
  rpc ListTokenCategories(ListTokenCategoriesRequest) returns (ListTokenCategoriesResponse) {}

  /* APIs related to Token Benefit Type */
  // API to ADD token benefit type (to be deprecated)
  rpc AddTokenBenefitType(AddTokenBenefitTypeRequest) returns (AddTokenBenefitTypeResponse) {}
  // API to REMOVE token benefit type (to be deprecated)
  rpc RemoveTokenBenefitType(RemoveTokenBenefitTypeRequest) returns (RemoveTokenBenefitTypeResponse) {}
  // API to update token benefit type (to be deprecated)
  rpc UpdateTokenBenefitType(UpdateTokenBenefitTypeRequest) returns (UpdateTokenBenefitTypeResponse) {}
  // API to list token benefit types
  rpc ListTokenBenefitTypes(ListTokenBenefitTypesRequest) returns (ListTokenBenefitTypesResponse) {}

  /* APIs related to Token Grant Action Type */
  // API to ADD token grant action type (to be deprecated)
  rpc AddTokenGrantActionType(AddTokenGrantActionTypeRequest) returns (AddTokenGrantActionTypeResponse) {}
  // API to REMOVE token grant action type (to be deprecated)
  rpc RemoveTokenGrantActionType(RemoveTokenGrantActionTypeRequest) returns (RemoveTokenGrantActionTypeResponse) {}
  // API to update token grant action type (to be deprecated)
  rpc UpdateTokenGrantActionType(UpdateTokenGrantActionTypeRequest) returns (UpdateTokenGrantActionTypeResponse) {}
  // API to list token grant action types
  rpc ListTokenGrantActionTypes(ListTokenGrantActionTypesRequest) returns (ListTokenGrantActionTypesResponse) {}

  /* APIs related to Token Redeem Action Type */
  // API to ADD token redeem action type (to be deprecated)
  rpc AddTokenRedeemActionType(AddTokenRedeemActionTypeRequest) returns (AddTokenRedeemActionTypeResponse) {}
  // API to REMOVE token redeem action type (to be deprecated)
  rpc RemoveTokenRedeemActionType(RemoveTokenRedeemActionTypeRequest) returns (RemoveTokenRedeemActionTypeResponse) {}
  // API to update token redeem action type (to be deprecated)
  rpc UpdateTokenRedeemActionType(UpdateTokenRedeemActionTypeRequest) returns (UpdateTokenRedeemActionTypeResponse) {}
  // API to list token redeem action types
  rpc ListTokenRedeemActionTypes(ListTokenRedeemActionTypesRequest) returns (ListTokenRedeemActionTypesResponse) {}

  // API to reset token balances of specified types for a specified consumer
  rpc DeactivateTokenBalances(DeactivateTokenBalancesRequest) returns (DeactivateTokenBalancesResponse) {}

  // Default health check endpoint
  rpc Health(HealthRequest) returns (HealthResponse) {}
}

// Request to get token balance(s) for the User
message GetTokensBalanceRequest {
  // User identity
  UserIdentity user_identity = 1 [deprecated = true];
  // Token benefit type to filter (to be deprecated)
  google.protobuf.StringValue token_benefit_type = 2;
  // User ID
  google.protobuf.StringValue user_id = 3;
  // Consumer ID
  google.protobuf.StringValue consumer_id = 4;
  // Token benefit type to filter
  TokenBenefitTypeName token_benefit_type_name = 5;
  // additional context to fulfill the request
  RequestContext request_context = 6;
}

// request context
message RequestContext {
  // submarket id
  google.protobuf.Int32Value submarket_id = 1;
}

// Response for the GetTokenBalance API
message GetTokensBalanceResponse {
  // Token balance for the Customer
  repeated TokenBalance token_balance = 1;
  // Nudgeable token used for upselling
  repeated NudgeableToken nudgeable_tokens = 2;
}

// Request to redeem token for the User
message RedeemTokenRequest {
  // User identity
  UserIdentity user_identity = 1 [deprecated = true];
  // Token benefit type to redeem (to be deprecated)
  google.protobuf.StringValue token_benefit_type = 2;
  // Token quantity to redeem
  google.protobuf.Int32Value quantity = 3;
  // Reason for redeeming the token (to be deprecated)
  google.protobuf.StringValue token_redeem_action_type = 4;
  // Clients should utilize this field to store information that identifies the way the token was used,
  // for example it will be Order UUID for DashPass Express Delivery. But could be anything else for future benefits.
  google.protobuf.StringValue idempotency_key = 5;
  // User ID
  google.protobuf.StringValue user_id = 6;
  // Consumer ID
  google.protobuf.StringValue consumer_id = 7;
  // Order UUID
  google.protobuf.StringValue order_id = 8;

  // Token benefit type to redeem
  TokenBenefitTypeName token_benefit_type_name = 9;
  // Reason for redeeming the token
  TokenRedeemActionTypeName token_redeem_action_type_name = 10;
}

// Response for the RedeemToken API
message RedeemTokenResponse {
  // Token balance
  TokenBalance token_balance = 1;
  // Token redeem transaction
  TokenRedeemTransaction token_redeem_transaction = 2;
}

// Request to grant token for the User
message GrantTokenRequest {
  // User identity
  UserIdentity user_identity = 1 [deprecated = true];
  // Type of the token to grant (to be deprecated)
  google.protobuf.StringValue token_benefit_type = 2;
  // Quantity of token to grant
  google.protobuf.Int32Value quantity = 3;
  // Reason for granting the token (to be deprecated)
  google.protobuf.StringValue token_grant_action_type = 4;
  // Idempotency key for the grant token request
  google.protobuf.StringValue idempotency_key = 5;
  // Optional token valid start time
  google.protobuf.Timestamp token_valid_from = 6;
  // Optional token valid end time
  google.protobuf.Timestamp token_valid_to = 7;
  // User ID
  google.protobuf.StringValue user_id = 8;
  // Consumer ID
  google.protobuf.StringValue consumer_id = 9;
  // Order UUID
  google.protobuf.StringValue order_id = 10;
  // Type of the token to grant
  TokenBenefitTypeName token_benefit_type_name = 11;
  // Reason for granting the token
  TokenGrantActionTypeName token_grant_action_type_name = 12;
}

// Response for the GrantToken API
message GrantTokenResponse {
  // Token balance
  TokenBalance token_balance = 1;
  // Token grant transaction
  TokenGrantTransaction token_grant_transaction = 2;
}

// Request to lock token for the User
message LockTokenRequest {
  // User identity
  UserIdentity user_identity = 1 [deprecated = true];
  // Token benefit type to redeem (to be deprecated)
  google.protobuf.StringValue token_benefit_type = 2;
  // Token quantity to redeem
  google.protobuf.Int32Value quantity = 3;
  // Clients should utilize this field to store information that identifies the way the token was used,
  // for example it will be Order UUID for DashPass Express Delivery. But could be anything else for future benefits.
  google.protobuf.StringValue idempotency_key = 4;
  // Time to live in seconds for the lock for automated release
  google.protobuf.Int32Value ttl_in_seconds = 5;
  // User ID
  google.protobuf.StringValue user_id = 6;
  // Consumer ID
  google.protobuf.StringValue consumer_id = 7;
  // Token benefit type to redeem
  TokenBenefitTypeName token_benefit_type_name = 8;
}

// Response for the LockToken API
message LockTokenResponse {
  // Token balance
  TokenBalance token_balance = 1;
  // Token lock object
  TokenLock token_lock = 2;
}

// Request to unlock token for the User
message UnlockTokenRequest {
  // User identity
  UserIdentity user_identity = 1 [deprecated = true];
  // Token benefit type to redeem (to be deprecated)
  google.protobuf.StringValue token_benefit_type = 2;
  // Clients should utilize this field to store information that identifies the way the token was used,
  // for example it will be Order UUID for DashPass Express Delivery. But could be anything else for future benefits.
  google.protobuf.StringValue idempotency_key = 3;
  // User ID
  google.protobuf.StringValue user_id = 4;
  // Consumer ID
  google.protobuf.StringValue consumer_id = 5;
  // Token benefit type to redeem
  TokenBenefitTypeName token_benefit_type_name = 6;
}

// Response for the UnlockToken API
message UnlockTokenResponse {
  // Token balance
  TokenBalance token_balance = 1;
}

// Request to get token transactions history
message GetTokenTransactionsHistoryRequest {
  // User identity
  UserIdentity user_identity = 1 [deprecated = true];
  // Type of the transaction
  TransactionType transaction_type = 2;
  // Offset for pagination
  google.protobuf.Int32Value offset = 3;
  // Limit for pagination
  google.protobuf.Int32Value limit = 4;
  // User ID
  google.protobuf.StringValue user_id = 5;
  // Consumer ID
  google.protobuf.StringValue consumer_id = 6;
}

// Response for the GetTokenTransactionsHistory API
message GetTokenTransactionsHistoryResponse {
  // Token Grant Transactions
  repeated TokenGrantTransaction token_grant_transactions = 1;
  // Token Redeem Transactions
  repeated TokenRedeemTransaction token_redeem_transactions = 2;
}

// Transaction type for which the history is requested
enum TransactionType {
  // Unspecified transaction type
  TRANSACTION_TYPE_UNSPECIFIED = 0;
  // Redeem transaction type
  TRANSACTION_TYPE_REDEEM = 1;
  // Grant transaction type
  TRANSACTION_TYPE_GRANT = 2;
  // Redeem and grant transaction type
  TRANSACTION_TYPE_REDEEM_AND_GRANT = 3;
}

// Request to add token category
message AddTokenCategoryRequest {
  // Token category to add
  google.protobuf.StringValue token_category = 1;
}

// Response for the AddTokenCategory API
message AddTokenCategoryResponse {
  // Token Category object
  TokenCategory token_category = 1;
}

// Request to remove token category
message RemoveTokenCategoryRequest {
  // Token category to remove
  google.protobuf.StringValue token_category = 1;
}

// Response for the RemoveTokenCategory API
message RemoveTokenCategoryResponse {}

// Request to update token category
message UpdateTokenCategoryRequest {
  // Token category to update
  google.protobuf.StringValue token_category = 1;
  // New token category name
  google.protobuf.StringValue new_token_category = 2;
}

// Response for the UpdateTokenCategory API
message UpdateTokenCategoryResponse {
  // Token Category object
  TokenCategory token_category = 1;
}

// Request to list token categories
message ListTokenCategoriesRequest {
  // Offset for pagination
  google.protobuf.Int32Value offset = 1;
  // Limit for pagination
  google.protobuf.Int32Value limit = 2;
}

// Response for the ListTokenCategories API
message ListTokenCategoriesResponse {
  // List of token categories
  repeated TokenCategory token_categories = 1;
}

// Request to add token benefit type
message AddTokenBenefitTypeRequest {
  // Token benefit type to add
  google.protobuf.StringValue token_benefit_type = 1;
  // Token category to assign the benefit type to
  google.protobuf.StringValue token_category = 2;
}

// Response for the AddTokenBenefitType API
message AddTokenBenefitTypeResponse {
  // Token Benefit Type object
  TokenBenefitType token_benefit_type = 1;
}

// Request to remove token benefit type
message RemoveTokenBenefitTypeRequest {
  // Token benefit type to remove
  google.protobuf.StringValue token_benefit_type = 1;
}

// Response for the RemoveTokenBenefitType API
message RemoveTokenBenefitTypeResponse {}

// Request to update token benefit type
message UpdateTokenBenefitTypeRequest {
  // Token benefit type to update
  google.protobuf.StringValue token_benefit_type = 1;
  // New token benefit type name
  google.protobuf.StringValue new_token_benefit_type = 2;
  // Token category to update
  google.protobuf.StringValue token_category = 3;
}

// Response for the UpdateTokenBenefitType API
message UpdateTokenBenefitTypeResponse {
  // Token Benefit Type object
  TokenBenefitType token_benefit_type = 1;
}

// Request to list token benefit types
message ListTokenBenefitTypesRequest {
  // Offset for pagination
  google.protobuf.Int32Value offset = 1;
  // Limit for pagination
  google.protobuf.Int32Value limit = 2;
  // Token category to filter (to be deprecated)
  google.protobuf.StringValue token_category = 3;
}

// Response for the ListTokenBenefitTypes API
message ListTokenBenefitTypesResponse {
  // List of token benefit types
  repeated TokenBenefitType token_benefit_types = 1;
}

// Request to add token grant action type
message AddTokenGrantActionTypeRequest {
  // Token grant action type to add
  google.protobuf.StringValue token_grant_action_type = 1;
}

// Response for the AddTokenGrantActionType API
message AddTokenGrantActionTypeResponse {
  // Token Grant Action Type object
  TokenGrantActionType token_grant_action_type = 1;
}

// Request to remove token grant action type
message RemoveTokenGrantActionTypeRequest {
  // Token grant action type to remove
  google.protobuf.StringValue token_grant_action_type = 1;
}

// Response for the RemoveTokenGrantActionType API
message RemoveTokenGrantActionTypeResponse {}

// Request to update token grant action type
message UpdateTokenGrantActionTypeRequest {
  // Token grant action type to update
  google.protobuf.StringValue token_grant_action_type = 1;
  // New token grant action type name
  google.protobuf.StringValue new_token_grant_action_type = 2;
}

// Response for the UpdateTokenGrantActionType API
message UpdateTokenGrantActionTypeResponse {
  // Token Grant Action Type object
  TokenGrantActionType token_grant_action_type = 1;
}

// Request to list token grant action types
message ListTokenGrantActionTypesRequest {
  // Offset for pagination
  google.protobuf.Int32Value offset = 1;
  // Limit for pagination
  google.protobuf.Int32Value limit = 2;
}

// Response for the ListTokenGrantActionTypes API
message ListTokenGrantActionTypesResponse {
  // List of token grant action types
  repeated TokenGrantActionType token_grant_action_types = 1;
}

// Request to add token redeem action type
message AddTokenRedeemActionTypeRequest {
  // Token redeem action type to add
  google.protobuf.StringValue token_redeem_action_type = 1;
}

// Response for the AddTokenRedeemActionType API
message AddTokenRedeemActionTypeResponse {
  // Token Redeem Action Type object
  TokenRedeemActionType token_redeem_action_type = 1;
}

// Request to remove token redeem action type
message RemoveTokenRedeemActionTypeRequest {
  // Token redeem action type to remove
  google.protobuf.StringValue token_redeem_action_type = 1;
}

// Response for the RemoveTokenRedeemActionType API
message RemoveTokenRedeemActionTypeResponse {}

// Request to update token redeem action type
message UpdateTokenRedeemActionTypeRequest {
  // Token redeem action type to update
  google.protobuf.StringValue token_redeem_action_type = 1;
  // New token redeem action type name
  google.protobuf.StringValue new_token_redeem_action_type = 2;
}

// Response for the UpdateTokenRedeemActionType API
message UpdateTokenRedeemActionTypeResponse {
  // Token Redeem Action Type object
  TokenRedeemActionType token_redeem_action_type = 1;
}

// Request to list token redeem action types
message ListTokenRedeemActionTypesRequest {
  // Offset for pagination
  google.protobuf.Int32Value offset = 1;
  // Limit for pagination
  google.protobuf.Int32Value limit = 2;
}

// Response for the ListTokenRedeemActionTypes API
message ListTokenRedeemActionTypesResponse {
  // List of token redeem action types
  repeated TokenRedeemActionType token_redeem_action_types = 1;
}

// Request to reset token balances of specific types for specific consumer
message DeactivateTokenBalancesRequest {
  // User identity
  UserIdentity user_identity = 1 [deprecated = true];
  // Types of the token to reset (to be deprecated)
  repeated google.protobuf.StringValue token_benefit_type = 2;
  // User ID
  google.protobuf.StringValue user_id = 3;
  // Consumer ID
  google.protobuf.StringValue consumer_id = 4;
  // Types of the token to reset
  repeated TokenBenefitTypeName token_benefit_type_name = 5;
  // Idempotency Key Suffix
  google.protobuf.StringValue idempotency_key_suffix = 6;
}

// Response from DeactivateTokenBalances API
message DeactivateTokenBalancesResponse {}
