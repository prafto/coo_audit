syntax = "proto3";

package doordash.retail.fulfillment.retail_cx_reliability.v1;

import "doordash.retail.fulfillment.gaudi_service.v1/gaudi_service_request_metadata.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "lego.response/lego_response.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.retail.fulfillment";

// APIs to serve primarily Post Checkout Cx Feedback. Idea is to keep name neutral so that we can move this App to different service in case we require to serve Rx traffic in future.
// Since this API will serve Lego 2.0 pages which is also called Mosaic, Gaudi was greatest mosaic painter. Hence the name.
service GaudiService {
  // Fetch delivery options for batch request.
  rpc ExecuteActionAndGetNextPage(ExecuteActionAndGetNextPageRequest) returns (ExecuteActionAndGetNextPageResponse);
}

// Request for serving SDUI for Post Checkout Cx Feedback
message ExecuteActionAndGetNextPageRequest {
  // Workflow identifier.
  string workflow_id = 1;
  // Identifier of the page, if null then send first page.
  google.protobuf.StringValue page_id = 2;
  // Input parameters which are expected to be fed to side_effect_coroutine of the page.
  SideEffectMetadata action_metadata = 3;
  // Additional response configuration.
  ResponseConfig response_config = 4;
  // Order Info
  OrderInfo order_info = 5;
}

// Additional configuration for response
message ResponseConfig {
  // Load all children of current
  bool load_children = 1;
}

// SideEffectMetadata
message SideEffectMetadata {
  // Will contain one of the metadata structure for all pages
  oneof side_effect_metadata {
    // Side effect metadata for ratings screen
    RatingsPageMetadata ratings_page_metadata = 1;
    // Side effect for ItemIssuePageMetadata
    ItemIssuePageMetadata obsolete_item_issues_page = 2;
    // Resolution metadata
    ResolutionPageMetadata resolution_metadata = 3;
    // Side effect for ItemIssuePageMetadata
    ItemIssuePageMetadata item_issues_page_metadata = 4;
  }
  // metadata
  map<string, string> metadata = 5;
}

// API response =
message ExecuteActionAndGetNextPageResponse {
  // Lego Response
  reserved "lego_response";
  reserved 1;
  // Lego Page Response
  lego.response.v1.LegoPageResponse lego_page_response = 2;
  // Workflow identifier.
  string workflow_id = 3;
  // Identifier of the page, if null then send first page.
  google.protobuf.StringValue page_id = 4;
}

// order info
message OrderInfo {
  // delivery uuid
  string delivery_uuid = 1;
  // order uuid
  string order_uuid = 2;
  // Consumer id
  string consumer_id = 3;
  // Store id
  string store_id = 4;
  // User id
  string user_id = 5;
  // Store Name
  string store_name = 6;
  // timestamp ,in epoch format
  google.protobuf.Timestamp order_fulfill_timestamp = 7;
  // cx time zone
  string cx_timezone = 8;
  // business id
  string business_id = 9;
}
