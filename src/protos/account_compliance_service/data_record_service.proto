syntax = "proto3";

package account_compliance_service.v1;

import "account_compliance_service/common.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.account_compliance_service";

// Service to handle compliance info for Trust purposes. May extend beyond Dx in the future
service DataRecordService {
  // Saves an IDV trigger reason to Trust CRDB
  rpc UpsertIdvTriggerReason(UpsertIdvTriggerReasonRequest) returns (UpsertIdvTriggerReasonResponse);
  // Persist DasherShiftAuthenticity record to Trust CRDB
  rpc PersistDasherShiftAuthenticity(PersistDasherShiftAuthenticityRequest) returns (PersistDasherShiftAuthenticityResponse) {}
  // Get Dasher Shift Authenticity
  rpc GetDasherShiftAuthenticity(GetDasherShiftAuthenticityRequest) returns (GetDasherShiftAuthenticityResponse) {}
  // Manually update IDV cooldown time
  rpc UpdateIdvCooldown(UpdateIdvCooldownRequest) returns (UpdateIdvCooldownResponse) {}
}

// Save IDV trigger reason request (same as table schema)
message UpsertIdvTriggerReasonRequest {
  // User identifier, dasher_id, dasher_unique_link, etc
  UserIdentifier user_identifier = 1;
  // IDV trigger type (i.e. CreateShiftPre, OnboardingIDV)
  string trigger_type = 2;
  // Created at timestamp
  google.protobuf.Timestamp created_at = 3;
  // Nullable array of trigger reasons (i.e. sticky device)
  repeated google.protobuf.StringValue trigger_reason = 4;
  // Final action (i.e. re-IDV selfie)
  google.protobuf.StringValue final_action = 5;
  // device_id that triggered the IDV
  google.protobuf.StringValue device_id = 6;
}

// Save IDV trigger reason response
message UpsertIdvTriggerReasonResponse {
  // Success flag for saving to DB
  bool is_success = 1;
  // Error message if failed
  google.protobuf.StringValue error_message = 4;
}

// Persist DasherShiftAuthenticity Request message
message PersistDasherShiftAuthenticityRequest {
  // Shift step, i.e. CREATE_SHIFT
  google.protobuf.StringValue shift_step = 1;
  // Shift ID
  google.protobuf.StringValue shift_id = 2;
  // Dasher ID
  google.protobuf.StringValue dasher_id = 3;
  // Device ID
  google.protobuf.StringValue device_id = 4;
  // Starting Point ID
  google.protobuf.Int32Value starting_point_id = 5;
}

// Persist DasherShiftAuthenticity Response message
message PersistDasherShiftAuthenticityResponse {
  // Success boolean
  bool is_success = 1;
  // Error message if failed
  google.protobuf.StringValue error_message = 2;
}

// Get Dasher Shift Authenticity Request
message GetDasherShiftAuthenticityRequest {
  // Shift ID
  google.protobuf.StringValue shift_id = 1;
}

// Get Dasher Shift Authenticity Response
message GetDasherShiftAuthenticityResponse {
  // Shift Id
  google.protobuf.StringValue shift_id = 1;
  // Dasher Id
  google.protobuf.StringValue dasher_id = 2;
  // Device Id
  google.protobuf.StringValue device_id = 3;
  // Starting Point Id
  google.protobuf.Int32Value starting_point_id = 4;
  // Created At time
  google.protobuf.Timestamp created_at = 5;
  // Updated At time
  google.protobuf.Timestamp updated_at = 6;
  // Device Switch Step
  repeated SwitchStep device_switch_step = 7;
}

// Update IDV cooldown request
message UpdateIdvCooldownRequest {
  // User identifier
  UserIdentifier user_identifier = 1;
  // IDV cooldown time to convert to tier
  google.protobuf.Int32Value personalized_cooldown = 2;
  // Device ID
  google.protobuf.StringValue device_id = 3;
  // Identity verification type (i.e. selfie, DL)
  IdentityVerificationType idv_type = 4;
}

// Update IDV cooldown response
message UpdateIdvCooldownResponse {
  // Success boolean
  bool is_success = 1;
  // Error message if failed
  google.protobuf.StringValue error_message = 2;
}

// Switch Step
message SwitchStep {
  // Step Name
  google.protobuf.StringValue step_name = 1;
  // Device Id
  google.protobuf.StringValue device_id = 2;
  // Switch Timestamp
  google.protobuf.Timestamp switch_timestamp = 3;
}
