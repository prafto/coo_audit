syntax = "proto3";
package delivery_experience.v1;

import "delivery_experience/order_status.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option java_multiple_files = true;
option java_outer_classname = "LiveActivityProto";
option java_package = "delivery.experience";
option objc_class_prefix = "LiveActivityProto";

/* Data generated by Live activity realtime job. */
message LiveActivity {
  // Order status string from delivery.experience.orderTracker.OrderTrackerEnum.
  google.protobuf.StringValue order_status = 1;
  // Timestamp when the live activity was created in flink.
  google.protobuf.Timestamp activity_created_at = 2;
  // Order UUID (key).
  google.protobuf.StringValue order_uuid = 3;
  // Delivery UUID.
  google.protobuf.StringValue delivery_uuid = 4;
  // User ID (for experiment targeting).
  google.protobuf.StringValue user_id = 5;
  // Live activity details
  LiveActivityDetails live_activity_model = 6;
  // ETA event id if there were ETA in the joined model. Not that there is no eventUUID in ETA. So,
  // we are generating this based on last eta events in the join.
  google.protobuf.StringValue eta_event_generated_id = 7;
  // Delivery event id if there were Delivery event in the joined model.
  google.protobuf.StringValue delivery_event_id = 8;
  // Metadata about what triggered the live activity. Used for observability and debugging
  Trigger trigger = 9;
  // Determines if the order is in a terminal state with no further live activity updates.
  google.protobuf.BoolValue is_terminal = 10;
  // The timestamp of when the phone should stop displaying live activity (optional)
  // This field is only used if is_terminal is true.
  // Set to a time in the past to dismiss the live activity immediately.
  // If not set, iOS falls back to the default of dismissing after 4 hours.
  google.protobuf.Timestamp dismiss_at = 11;

  /* Metadata about what triggered the live activity. Use for observability and debugging */
  message Trigger {
    // The kafka topic which triggered the live activity.
    google.protobuf.StringValue topic = 1;
    // This is different depending on the topic.
    // delivery_event: the delivery event category
    // federated_event: the ui event type
    // eta_update: the eta field which changed. If multiple fields changed, just pick one.
    google.protobuf.StringValue reason = 2;
    // The id of the event which triggered the live activity.
    // eta_update events don't have ids, so use "$partition:$offset" instead.
    google.protobuf.StringValue event_id = 3;
    // The timestamp of the event which triggered the live activity.
    // Due to kafka lag this is different from the timestamp of when the live activity was created.
    google.protobuf.Timestamp timestamp = 4;
    // If the trigger was a federated event, the source event category from that event.
    google.protobuf.StringValue source_event_category = 5;
    // If the trigger was a federated event, the source event uuid from that event.
    google.protobuf.StringValue source_event_uuid = 6;
  }
}
