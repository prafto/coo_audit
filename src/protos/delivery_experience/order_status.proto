syntax = "proto3";

package delivery_experience.v1;

import "autonomous_delivery_platform/autonomous_vehicle.proto";
import "autonomous_delivery_platform/common.proto";
import "common/bundle_order_info.proto";
import "common/common.proto";
import "common/money.proto";
import "common/order.proto";
import "common/order_config.proto";
import "common/post_checkout.proto";
// Using ENUMS from external imports ONLY. No complex objects should be used from other team.
import "component-catalog.common/prism/components/text.proto";
import "component-catalog.common/prism/shared/button_size.proto";
import "component-catalog.common/prism/shared/icon.proto";
import "delivery_experience/reorder_experience.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option java_multiple_files = true;
option java_outer_classname = "OrderStatusProto";
option java_package = "delivery.experience";
option objc_class_prefix = "OrderStatusProto";

/** Contains all of the details of the order status. */
message OrderStatus {
  // Consumer information like name, location etc.
  ConsumerDetails consumer_details = 1;
  // Dasher details.
  DasherDetails dasher_details = 2;
  // Merchant details.
  MerchantDetails merchant_details = 3;
  // ETA details.
  ETADetails eta_details = 4;
  // Route details.
  RouteDetails route_details = 5;
  // Order details.
  OrderDetails order_details = 6;
  // Delivery details.
  DeliveryDetails delivery_details = 7;
  // Translated details.
  TranslatedStrings translated_strings = 8;
  //Order prompt for new Section for delivery promise and bottomsheet
  OrderPromptDetails order_prompt = 10;
  // Shipping details for shipping orders
  ShippingDetails shipping_details = 11;
  // Drone details for drone orders
  DroneDetails drone_details = 12;
  // Order Tracker Countdown bar
  CountdownBarDetails countdown_bar_details = 13;
  // Loading state of the order status.
  OrderStatusLoadingState order_status_loading_state = 16;
  // Live activities details.
  LiveActivityDetails live_activity_details = 17;
  // Deprecated fields.
  google.protobuf.BoolValue is_blank_loading_response = 14 [deprecated = true];
  // Deprecated fields.
  google.protobuf.BoolValue has_order_created_data = 15 [deprecated = true];
  // Deprecated fields.
  DineInVoucherDetails dine_in_voucher_details = 9 [deprecated = true];
  // Order tracker Alert Badge
  AlertBadge alert_badge = 18;
  // Mini Alert
  MiniAlert mini_alert = 19;
  // Reorder experience from seamless on the Order Tracking Page
  repeated ReorderExperience reorder_experience = 20;
  // Robot details for robot orders
  RobotDetails robot_details = 21;
  // a list of surface styling details
  repeated SurfaceStylingDetails surface_styling_details = 22;
  // The progress bar / timeline with a list of icons for various stages of the order
  OrderProgressBar progress_bar = 23;
  // Payment information
  PaymentMethodDetails payment_method_details = 24;

  // Deprecated fields go here.
  reserved 25;
  reserved "return_details";

  // Returnable Order Information
  ReturnOrderInfo return_order_details = 26;

  // DashParty specific order details
  DashPartyOrderDetails dashparty_order_details = 27;

  // DashPass specific placement details
  DashPassPlacement dashpass_placement = 28;

  // field that defines multi-store bottom sheets
  MultiStoreBottomSheet multi_store_bottom_sheet = 29;

  // Order tracker merchant info banner (for Extended hulk use case)
  SilentInfoBanner merchant_info_banner = 30;

  // Order tracker merchant info banner (for Silent Hero use case)
  SilentInfoBanner silent_info_banner = 31;
}

// DashPass specific placement details
message DashPassPlacement {
  // query_parameters is a map for source of placement details
  map<string, string> query_parameters = 1;
}

// DashParty specific order details
message DashPartyOrderDetails {
  // DashParty ID
  google.protobuf.StringValue dashparty_id = 1;
}

// Countdown bar displayed on the Order Tracker ETA card
message CountdownBarDetails {
  // Countdown bar task type
  CountdownBarTaskType task_type = 1;
  // Expiry time
  google.protobuf.Timestamp expiry_time = 2;
  // Task success timestamp
  google.protobuf.Timestamp success_time = 3;
  // Total duration in milliseconds
  google.protobuf.Int64Value duration_millis = 4;
  // Countdown bar title
  google.protobuf.StringValue title = 5;
  // Countdown bar success state title
  google.protobuf.StringValue success_title = 6;
  // Bottom Sheet for countdown bar
  google.protobuf.StringValue expired_title = 7;
}

// Loading state of the UiUpdates seen so far.
enum OrderStatusLoadingState {
  // Default state. Should never happen.
  ORDER_STATUS_LOADING_STATE_UNSPECIFIED = 0;
  // We have neither seen UiUpdates for delivery event nor order cart created events.
  ORDER_STATUS_LOADING_STATE_BLANK = 1;
  // We have seen UI updates for order cart created events but haven't seen UI updates for delivery events.
  ORDER_STATUS_LOADING_STATE_PARTIAL_DATA_CART_CREATED = 2;
  // We have seen UI updates for delivery events
  ORDER_STATUS_LOADING_STATE_READY = 3;
  // We have a change in order tracker that requires use to lock the response while waiting for the
  // effect to be applied to the response.
  ORDER_STATUS_LOADING_STATE_PARTIAL_WAITING_FOR_UI_EVENT = 4;
}

// The type of task associated with the countdown bar
enum CountdownBarTaskType {
  //unspecified
  COUNTDOWN_BAR_TASK_TYPE_UNSPECIFIED = 0;
  // For Find me a Dasher feature
  COUNTDOWN_BAR_TASK_TYPE_FIND_ME_A_DASHER = 1;
}

// The state of the countdown bar for showing different UI
enum CountdownBarState {
  //unspecified
  COUNTDOWN_BAR_STATE_UNSPECIFIED = 0;
  //in progress
  COUNTDOWN_BAR_STATE_IN_PROGRESS = 1;
  //success
  COUNTDOWN_BAR_STATE_SUCCESS = 2;
}

// an action with a message
message MessageAction {
  // enum for message action type
  enum MessageActionType {
    // unspecified
    MESSAGE_ACTION_TYPE_UNSPECIFIED = 0;
    // action type for reschedule change time button
    MESSAGE_ACTION_TYPE_RESCHEDULE_CHANGE_TIME = 1;
  }

  // action type
  MessageActionType type = 1;
  // label on action button, optional
  google.protobuf.StringValue label = 2;
  // icon on action button, optional
  IconType icon_type = 3;
  // description of the action, optional
  google.protobuf.StringValue description = 4;
}

// Order prompt Details is for new section for different feature state and bottomsheet
message OrderPromptDetails {
  // the state of the order
  enum State {
    // unspecified
    STATE_UNSPECIFIED = 0;
    // the order is running late
    STATE_LATE = 1;
    // the order is cancelled.
    STATE_CANCELLED = 2;
    // the order is on-time for dp consumer
    STATE_DP_CONSUMER_ON_TIME = 3;
    // the order is running late from dp promise time
    STATE_LATE_DP_PROMISE_TIME = 4;
    // DashPass trial upsell is shown for the order
    STATE_DASHPASS_TRIAL_ELIGIBLE = 5;
    // DashPass Taste of DashPass(ToDP) savings is shown for the order
    STATE_DASHPASS_SAVINGS = 6;
    // the package order is pending
    STATE_PACKAGE_PENDING = 7;
    // the order is being rerouted
    STATE_REROUTE_ORDER = 8;
    // DashPass dtp upsell is shown for the order
    STATE_DASHPASS_DTP_ELIGIBLE = 9;
  }

  // ResolutionReason - indicates why this resolution is being shown to the user
  enum ResolutionReason {
    // unspecified
    RESOLUTION_REASON_UNSPECIFIED = 0;
    // the order is expected late because it took too long to find a dasher (predicted late)
    RESOLUTION_REASON_DYNAMIC_ETA_LATENESS = 1;
    // the current time of order is late from guarantee DashPass delivery time
    RESOLUTION_REASON_ACTUAL_LATENESS = 2;
    // the order was cancelled
    RESOLUTION_REASON_CANCELLED = 3;
    // the current time of order is on-time from guarantee DashPass delivery time
    RESOLUTION_REASON_ON_TIME_DP_PROMISE = 4;
    // Refund selection resolution for cancellations
    RESOLUTION_REASON_CANCELLATION_REFUND_SELECTION = 5;
    // refund success for cancellations
    RESOLUTION_REASON_CANCELLATION_REFUND_SUCCESS = 6;
    // the consumer is DashPass trial eligible
    RESOLUTION_REASON_DASHPASS_UPSELL_TRIAL = 7;
    // the consumer is resurrected DashPass trial eligible
    RESOLUTION_REASON_DASHPASS_UPSELL_RESURRECTED_TRIAL = 8;
    // cancellation refund success with reorder store options
    RESOLUTION_REASON_CANCELLATION_REFUND_SUCCESS_WITH_REORDER_STORES = 9;
    // the consumer is saving with Taste of DashPass(ToDP)
    RESOLUTION_REASON_DASHPASS_ORDER_SAVINGS = 10;
    // package order with qr code items
    RESOLUTION_REASON_PACKAGE_QR_CODE = 11;
    // package order with label items
    RESOLUTION_REASON_PACKAGE_LABEL = 12;
    // order is being rerouted
    RESOLUTION_REASON_REROUTE_ORDER = 13;
    // the consumer is DashPass dtp eligible
    RESOLUTION_REASON_DASHPASS_UPSELL_DTP = 14;
    // Show reorder experience for cancellations without any refund
    RESOLUTION_REASON_CANCELLED_WITH_REORDER = 15;
    // order has been rerouted
    RESOLUTION_REASON_REROUTED_ORDER = 16;
  }

  // Resolutions indicates the available resolutions
  enum Resolution {
    // unspecified
    RESOLUTION_UNSPECIFIED = 0;
    // ask the Cx to keep waiting with apology
    RESOLUTION_WAIT = 1;
    // above with credits info
    RESOLUTION_WAIT_WITH_CREDITS = 2;
    // provide dp Cx with delivery promise credits
    RESOLUTION_DP_DELIVERY_PROMISE_WITH_CREDITS = 3;
    // provide cancelled resolution with no credits
    RESOLUTION_CANCELLATION_NO_CREDITS = 4;
    // provide dp Cx with delivery promise already given credits
    RESOLUTION_DP_DELIVERY_PROMISE_ALREADY_GIVEN_CREDITS = 5;
    // provide dp Cx with delivery promise message
    RESOLUTION_DP_DELIVERY_PROMISE_MESSAGE = 6;
    // cancellation resolution
    RESOLUTION_CANCELLATION = 7;
    // DashPass upsell resolution
    RESOLUTION_DASHPASS_UPSELL = 8;
    // customize Cx experience for package orders with qr code items
    RESOLUTION_PACKAGE_QR_CODE = 9;
    // customize Cx experience for package orders with label items
    RESOLUTION_PACKAGE_LABEL = 10;
    // order is being rerouted
    RESOLUTION_REROUTE_ORDER = 11;
  }

  // Order state
  State state = 1;
  // order resolution reason
  ResolutionReason resolution_reason = 2;
  //order resolution type
  Resolution resolution = 3;
  // this value basically is for dashpass delivery promise and resolution banner
  ResolutionViewSection resolution_view_section = 4;
  // optional, status_reqtype_uuid for accept credit
  google.protobuf.StringValue status_reqtype_uuid = 5 [deprecated = true];
  // optional, credits with respect to resolution
  money.MonetaryFields credit_amount = 6 [deprecated = true];
  // optional, order_resolution_credit_amount for accept credit
  google.protobuf.Int32Value order_resolution_credit_amount = 7;
  // optional, order_resolution_credit_currency for accept credit
  google.protobuf.StringValue order_resolution_credit_currency = 8;
  // optional, order_resolution_method
  google.protobuf.StringValue order_resolution_method = 9;
  // optional, expiry time
  google.protobuf.StringValue expiry_time = 10;
  // optional, resolution type for analytics/metrics.
  google.protobuf.StringValue resolution_type_analytics = 11;
}

/** resolution notification banner for dp delivery promise message */
message ResolutionViewSection {
  // this resolution notification banner
  ResolutionViewSectionType type = 1;
  // message on the post checkout screen for dp delivery promise
  TapMessage tap_message = 2;
  // bottom sheet object, when clicked on tap message action
  BottomSheet bottom_sheet = 3;
  // Short version of the tap message
  TapMessage short_tap_message = 4;
  // list of background actions
  repeated BackgroundAction background_actions = 5;
}

/** Resolution View Section  with all types */
enum ResolutionViewSectionType {
  // unspecified
  RESOLUTION_VIEW_SECTION_TYPE_UNSPECIFIED = 0;
  // actual late from delivery promise time message banner
  RESOLUTION_VIEW_SECTION_TYPE_ACTUAL_LATENESS_DP_CREDITS = 1;
  // predicted late from delivery promise time message banner
  RESOLUTION_VIEW_SECTION_TYPE_PREDICTED_LATENESS_DP_CREDITS = 2;
  // delivered order late from delivery promise time message banner
  RESOLUTION_VIEW_SECTION_TYPE_DELIVERED_ORDER_LATENESS_DP_CREDITS = 3;
  // dp delivery promise message banner
  RESOLUTION_VIEW_SECTION_TYPE_DELIVERY_PROMISE = 4;
  // cancellation bottomsheet
  RESOLUTION_VIEW_SECTION_TYPE_CANCELLATION = 5;
  // Cancellation refund selection order prompt
  RESOLUTION_VIEW_SECTION_TYPE_CANCELLATION_REFUND_SELECTION = 6;
  // cancellation refund success view
  RESOLUTION_VIEW_SECTION_TYPE_CANCELLATION_REFUND_SUCCESS = 7;
  // cancellation reorder dialog from the BFF
  RESOLUTION_VIEW_SECTION_TYPE_CANCELLATION_OVERRIDE_REORDER_MX_SUGGESTIONS = 8;
  // DashPass trial upsell view
  RESOLUTION_VIEW_SECTION_TYPE_DASHPASS_UPSELL_TRIAL = 9;
  // DashPass Taste of DashPass savings view
  RESOLUTION_VIEW_SECTION_TYPE_DASHPASS_SAVINGS = 10;
  // package order with qr code items bottom sheet
  RESOLUTION_VIEW_SECTION_TYPE_PACKAGE_QR_CODE = 11;
  // package order with label items bottom sheet
  RESOLUTION_VIEW_SECTION_TYPE_PACKAGE_LABEL = 12;
  // rerouting order bottom sheet
  RESOLUTION_VIEW_SECTION_TYPE_REROUTE_ORDER = 13;
  // DashPass dtp upsell view
  RESOLUTION_VIEW_SECTION_TYPE_DASHPASS_UPSELL_DTP = 14;
}

/** Contains all of the Tap message. */
message TapMessage {
  // title for tap message
  google.protobuf.StringValue title = 1;
  // title badge type
  AssetBadge title_badge = 2;
  // list of description in tap message
  repeated ResolutionDescription descriptions = 3;
  // list of TapMessage action
  repeated TapMessageAction actions = 4;
}

/** enum for Asset Badge. */
enum AssetBadge {
  // unspecified badge type
  ASSET_BADGE_UNSPECIFIED = 0;
  // dashpass badge type
  ASSET_BADGE_DASHPASS = 1;
  // dashpass badge with text
  ASSET_BADGE_DASHPASS_WITH_TEXT = 2;
}

/** Contains all of the bottom sheet details. */
message BottomSheet {
  // image url for bottom sheet
  google.protobuf.StringValue image_url = 1;
  // title string
  google.protobuf.StringValue title = 2;
  // list of description in bottom sheet
  repeated ResolutionDescription descriptions = 3;
  // list of action in bottomsheet
  repeated BottomSheetAction actions = 4;
  // badge title
  AssetBadge title_badge = 5;
  // boolean to automatically show bottomsheet
  google.protobuf.BoolValue auto_display_bottomsheet = 6;
  // boolean for title divider visibility
  google.protobuf.BoolValue show_title_divider = 7;
  // collar on bottomsheet - for eg, expiry time countdown display
  BottomSheetCollar collar = 8;
  // extend header image to edges
  google.protobuf.BoolValue extend_image_to_edges = 9;
  // subtitle string shown on top of the title
  google.protobuf.StringValue top_subtitle = 10;
  // show DWR on swipe down
  google.protobuf.BoolValue enable_dwr_on_swipe_down = 11;
}

/** Contains the bottomsheet collar details */
message BottomSheetCollar {
  // left icon on bottomsheet collar
  IconType icon = 1;
  // text on bottomsheet collar
  google.protobuf.StringValue text = 2;
}

/** Contains all of the ResolutionDescription details. */
message ResolutionDescription {
  // description type
  ResolutionDescriptionSectionType description_type = 1;
  // description text
  google.protobuf.StringValue text = 2;
  // list of description object
  repeated ResolutionDescription descriptions = 3;
  // icon for banner, optional
  IconType description_icon = 5;
  // index for sort order
  google.protobuf.Int32Value index = 6;
  // subtitle text
  google.protobuf.StringValue subtitle = 7;
  // is default selection for option picker
  google.protobuf.BoolValue is_default_selection = 8;
  // prompt action field for the picker type
  PromptOption prompt_option = 9;
  // metadata map
  map<string, string> metadata = 10;
  // background color
  google.protobuf.StringValue background_color = 11;
  // text attributes
  TextAttributes text_attributes = 12;
  // description icon color
  google.protobuf.StringValue description_icon_color = 13;
}

/* enum for prompt option. */
enum PromptOption {
  // unspecified prompt option
  PROMPT_OPTION_UNSPECIFIED = 0;
  // cancellation prompt option: refund to original payment
  PROMPT_OPTION_CANCELLATION_REFUND_TO_ORIGINAL_PAYMENT = 1;
  // cancellation prompt option: refund to credit
  PROMPT_OPTION_CANCELLATION_REFUND_TO_CREDITS = 2;
  // cancellation prompt option: reorder with credits
  PROMPT_OPTION_CANCELLATION_REORDER_WITH_CREDITS = 3;
}

/** enum for ResolutionDescriptionSectionType. */
enum ResolutionDescriptionSectionType {
  // unspecified resolution description type
  RESOLUTION_DESCRIPTION_SECTION_TYPE_UNSPECIFIED = 0;
  // plain text resolution description
  RESOLUTION_DESCRIPTION_SECTION_TYPE_PLAIN_TEXT = 1;
  // list item resolution description
  RESOLUTION_DESCRIPTION_SECTION_TYPE_LIST_ITEM = 2;
  // banner description type
  RESOLUTION_DESCRIPTION_SECTION_TYPE_BANNER = 3;
  // title description type
  RESOLUTION_DESCRIPTION_SECTION_TYPE_TITLE = 4;
  // Divider view
  RESOLUTION_DESCRIPTION_SECTION_TYPE_DIVIDER = 5;
  // Picker view
  RESOLUTION_DESCRIPTION_SECTION_TYPE_PICKER = 6;
  // positive highlight banner
  RESOLUTION_DESCRIPTION_SECTION_TYPE_POSITIVE_BANNER = 7;
  // store view
  RESOLUTION_DESCRIPTION_SECTION_TYPE_STORE = 8;
  // negative highlight banner
  RESOLUTION_DESCRIPTION_SECTION_TYPE_NEGATIVE_BANNER = 9;
  // full banner
  RESOLUTION_DESCRIPTION_SECTION_TYPE_FULL_BANNER = 10;
}

/** Contains all of the TapMessageAction details. */
message TapMessageAction {
  // action type
  TapMessageActionType type = 1;
  // label on action button, optional
  google.protobuf.StringValue label = 2;
  // icon on action button, optional
  IconType icon_type = 3;
  // description of the action, optional
  google.protobuf.StringValue description = 4;
}

/** Contains all of the BottomSheetAction details. */
message BottomSheetAction {
  // action type
  BottomSheetActionType type = 1;
  // label on action button, optional
  google.protobuf.StringValue label = 2;
  // optional, source for accept credit
  google.protobuf.StringValue source = 3;
  // optional, disappearing toast after accepting credits
  google.protobuf.StringValue success_toast = 4;
  // optional, status_reqtype_uuid for accept credit
  google.protobuf.StringValue status_reqtype_uuid = 5;
  // optional, resolution method for accept credit
  google.protobuf.StringValue resolution_method = 6;
  // index of the button in the bottomsheet
  google.protobuf.Int32Value index = 7;
  // optional, only for accept credit action
  google.protobuf.StringValue problem_name = 8;
  // url for navigating to a explore page
  google.protobuf.StringValue explore_page_cursor_uri = 9;
  // optional, button type - primary, tetirary
  google.protobuf.StringValue button_type = 10;
  // metadata for the action
  map<string, string> metadata = 11;
}

/** enum for BottomSheetActionType. */
enum BottomSheetActionType {
  // unspecified
  BOTTOM_SHEET_ACTION_TYPE_UNSPECIFIED = 0;
  // accept credit
  BOTTOM_SHEET_ACTION_TYPE_ACCEPT_CREDIT = 1;
  // dismiss
  BOTTOM_SHEET_ACTION_TYPE_DISMISS = 2;
  // select picker option
  BOTTOM_SHEET_ACTION_TYPE_SELECT_PICKER_OPTION = 3;
  // go to explore page
  BOTTOM_SHEET_ACTION_TYPE_VIEW_MORE_STORES = 4;
  // cancel order for full refund
  BOTTOM_SHEET_ACTION_TYPE_CANCEL_FOR_FULL_REFUND = 5;
  // navigate back to orders
  BOTTOM_SHEET_ACTION_TYPE_VIEW_REROUTED_ORDER = 6;
  // places a reorder with current order_id and navigates to checkout
  BOTTOM_SHEET_ACTION_TYPE_REORDER = 7;
  // navigates to checkout with cart id, store id from metadata field
  BOTTOM_SHEET_ACTION_TYPE_SHOW_CART_PAGE_WITH_METADATA = 8;
  // Call Seamless Experience's execute order prompt action endpoint
  // with the resolution reason set in the order prompt details and order uuid.
  // (example usage cancellation v1 reorder experience)
  BOTTOM_SHEET_ACTION_TYPE_EXECUTE_ORDER_PROMPT = 9;
}

/** enum for TapMessageActionType. */
enum TapMessageActionType {
  // unspecified
  TAP_MESSAGE_ACTION_TYPE_UNSPECIFIED = 0;
  // learn more
  TAP_MESSAGE_ACTION_TYPE_LEARN_MORE = 1;
  // claim credit
  TAP_MESSAGE_ACTION_TYPE_CLAIM = 2;
  // collapsible tap message for opening option selection bottom sheet
  TAP_MESSAGE_ACTION_TYPE_OPTION_SELECTION = 3;
  // opening DashPass bottom sheet
  TAP_MESSAGE_ACTION_TYPE_DASHPASS_UPSELL_BOTTOM_SHEET = 4;
  // cancels order for full refund
  TAP_MESSAGE_ACTION_TYPE_CANCEL_FOR_FULL_REFUND = 5;
  // view reroute order bottom sheet
  TAP_MESSAGE_ACTION_TYPE_VIEW_REROUTED_ORDER = 6;
  // reschedule button and msg detailing deadline to reschedule order
  TAP_MESSAGE_ACTION_TYPE_RESCHEDULE_CHANGE_TIME = 7;
}

/** Background action details **/
message BackgroundAction {
  // action type
  BackgroundActionType type = 1 [deprecated = true];
  // metadata map
  map<string, string> metadata = 2;
  // order prompt background action type
  OrderPromptBackgroundAction action = 3;
}

/** Background action type enum [Deprecated] */
enum BackgroundActionType {
  // unspecified
  BACKGROUND_ACTION_TYPE_UNSPECIFIED = 0 [deprecated = true];
  // show reorder cart
  BACKGROUND_ACTION_TYPE_SHOW_REORDER_CART = 1 [deprecated = true];
}

/** Order Prompt Background action enum */
enum OrderPromptBackgroundAction {
  // unspecified
  ORDER_PROMPT_BACKGROUND_ACTION_UNSPECIFIED = 0;
  // show reorder cart
  ORDER_PROMPT_BACKGROUND_ACTION_SHOW_REORDER_CART = 1;
}

/** icon type enum. */
enum IconType {
  // unspecified
  ICON_TYPE_UNSPECIFIED = 0;
  // arrow icon type
  ICON_TYPE_ARROW = 1;
  // claim icon type
  ICON_TYPE_BUTTON = 2;
  // Currency icon type
  ICON_TYPE_CURRENCY = 3;
  // DD Credits icon type
  ICON_TYPE_CREDITS = 4;
  // DD credits color icon
  ICON_TYPE_CREDITS_COLOR = 5;
  // Clock icon
  ICON_TYPE_TIME = 6;
  // check icon circle
  ICON_TYPE_CHECK_CIRCLE = 7;
  // payment method brand icon
  ICON_TYPE_PAYMENT_METHOD_BRAND = 8;
  // right chevron
  ICON_TYPE_CHEVRON_RIGHT = 9;
  // check icon circle
  ICON_TYPE_ALERT_CIRCLE = 10;
  // bolt icon
  ICON_TYPE_BOLT = 11;
  // order hotbag fill
  ICON_TYPE_ORDER_HOTBAG_FILL = 12;
}

/** Contains styling attributes for description text and subtitle */
message TextAttributes {
  // attributes for text
  repeated TextAttribute text = 1;
  // attributes for subtitle
  repeated TextAttribute subtitle = 2;
}

/* Styling attribute for text */
message TextAttribute {
  // substring to apply color
  google.protobuf.StringValue substring = 1;
  // optional, text color
  google.protobuf.StringValue color = 2;
  // optional, text style
  google.protobuf.StringValue text_style = 3;
}

/** Contains all of the consumer details. */
message ConsumerDetails {
  // Consumer name.
  google.protobuf.StringValue name = 1;
  // Latitude of the consumer's address they placed their order with. Note this doesn't refer to the manual pin they set via the consumer app.
  // Use [DeliveryAddress.Latitude instead]
  google.protobuf.StringValue latitude = 2 [deprecated = true];
  // Longitude of the consumer's address they placed their order with. Note this doesn't refer to the manual pin they set via the consumer app.
  // Use [DeliveryAddress.Longitude instead]
  google.protobuf.StringValue longitude = 3 [deprecated = true];

  /** Delivery address */
  message DeliveryAddress {
    // Delivery UUID.
    google.protobuf.StringValue id = 1;
    // Delivery street.
    google.protobuf.StringValue street = 2;
    // Delivery city.
    google.protobuf.StringValue city = 3;
    // Delivery state.
    google.protobuf.StringValue state = 4;
    // Delivery zipcode.
    google.protobuf.StringValue zipcode = 5;
    // Delivery subpremise.
    google.protobuf.StringValue subpremise = 6;
    // Delivery dasher instructions.
    google.protobuf.StringValue dasher_instructions = 7;
    // Latitude of the consumer's address they placed their order with. Note this doesn't refer to the manual pin they set via the consumer app.
    google.protobuf.StringValue latitude = 8;
    // Longitude of the consumer's address they placed their order with. Note this doesn't refer to the manual pin they set via the consumer app.
    google.protobuf.StringValue longitude = 9;
    // Latitude of the consumer's address they placed their order with. Refers to the manual pin they set via the consumer app.
    google.protobuf.StringValue manual_latitude = 10;
    // Longitude of the consumer's address they placed their order with. Refers to the manual pin they set via the consumer app.
    google.protobuf.StringValue manual_longitude = 11;
    // Delivery printable address. Must be used only for showing to the consumer/dasher. Don't use this to parse the address information.
    google.protobuf.StringValue printable_address = 12;
    // Shortname notation of the address. Used only for showing to the consumer. Don't use this to parse the address information.
    google.protobuf.StringValue short_name = 13;
    // Delivery dropoff instructions.
    // Use DropoffDetails.DropOffOption.instructions instead.
    google.protobuf.StringValue dropoff_instructions = 14 [deprecated = true];

    /** Drop off details */
    message DropOffDetails {
      /** Drop off options */
      enum DropOffOption {
        // Dasher can leave the delivery at the manual pin [DeliveryAddress.manual_latitude] & [DeliveryAddress.manual_longitude] specified by the consumer.
        // This is the default option that OTS sends as a fallback.
        DROP_OFF_OPTION_LEAVE_IT_AT_MY_DOOR_UNSPECIFIED = 0;
        // Dasher has to hand the delivery to the consumer in person.
        DROP_OFF_OPTION_HAND_IT_TO_ME = 1;
      }

      // 1 == DropOffDetails.DropOffOption.DROP_OFF_OPTION_HAND_IT_TO_ME .DropOffOption.DROP_OFF_OPTION_HAND_IT_TO_ME
      // 2 == DropOffDetails.DropOffOption.DROP_OFF_OPTION_HAND_IT_TO_ME .DropOffOption.DROP_OFF_OPTION_LEAVE_IT_AT_MY_DOOR
      DropOffOption option = 1;
      // Drop off instructions.
      google.protobuf.StringValue instructions = 2;
    }
    // Drop off details.
    DropOffDetails dropoff_details = 15;
  }
  // Delivery address.
  DeliveryAddress address = 4;

  // the order creator's consumer_id
  google.protobuf.StringValue creator_consumer_id = 5;

  // Consumer DashPass status
  google.protobuf.BoolValue is_dp_subscriber = 6;
  // List of consumer Ids
  repeated google.protobuf.StringValue consumer_ids = 7;
  // If it's a group cart
  google.protobuf.BoolValue is_group_cart = 8;
  // If it's a guest consumer
  google.protobuf.BoolValue is_guest = 9;

  // Defines the consumer experience that was used for this order eg Doordash / Caviar etc
  enum ConsumerExperience {
    // Unknown
    CONSUMER_EXPERIENCE_UNSPECIFIED = 0;
    // Cx is using DD apps
    CONSUMER_EXPERIENCE_DOORDASH = 1;
    // Cx is using Caviar app
    CONSUMER_EXPERIENCE_CAVIAR = 2;
    // Cx is using Store Front web app
    CONSUMER_EXPERIENCE_STOREFRONT = 3;
    // Cx orders direct from Drive partner
    CONSUMER_EXPERIENCE_DRIVE = 4;
    // Cx orders direct from Voice Ordering UI
    CONSUMER_EXPERIENCE_VOICE = 5;
    // Cx is using Bbot web app
    CONSUMER_EXPERIENCE_BBOT = 6;
  }
  // Defines the consumer experience that was used for this order eg Doordash / Caviar etc
  ConsumerExperience consumer_experience = 10;
}

/** Contains all of the dasher details. */
message DasherDetails {
  // Dasher name.
  google.protobuf.StringValue name = 1;
  // Dasher latitude.
  google.protobuf.StringValue latitude = 2;
  // Dasher longitude.
  google.protobuf.StringValue longitude = 3;
  // Dasher is textable.
  google.protobuf.BoolValue contact_is_textable = 4;
  /* Pending deprecation in favor of is_same_dasher_for_bundle
     Whether or not Dasher is delivering bundled and parent/primary order.
     For O1 (primary order), this value will always be null
     For O2s (bundled order),
       null -> order is not a Doubledash order.
       true -> same Dasher is delivering both secondary order and parent (primary order)
       false -> two different Dashers are separately delivering bundled order and parent (primary order)
  */
  google.protobuf.BoolValue delivering_bundled_parent_order = 5;
  // Dasher confirmed time (from delivery service)
  google.protobuf.Timestamp dasher_confirmed_time = 6;
  // Dasher details for bundle orders uniquely identified by order_uuid/cart_uuid
  map<string, DasherDetails> bundle_dasher_details = 7;
  // Dasher id
  google.protobuf.StringValue dasher_id = 8;
  // is same dasher for bundle
  google.protobuf.BoolValue is_same_dasher_for_bundle = 9;
  // Location update timestamp.
  google.protobuf.Timestamp timestamp = 10;
  // Dasher speed.
  google.protobuf.DoubleValue speed = 11;
  // Dasher course.
  google.protobuf.DoubleValue course = 12;
  // Shopper profile.
  ShopperProfile shopper_profile = 13;
  /** Contains shopper profile info. */
  message ShopperProfile {
    // Top Shopper title. Example: "Top Rated"
    google.protobuf.StringValue top_shopper = 1;
    // Shopper rating
    google.protobuf.DoubleValue rating = 2;
    // Description of Dx achievements. Example: "153 deliveries"
    google.protobuf.StringValue achievements = 3;
    // Deprecated - Use profile_picture_url in DasherDetails
    google.protobuf.StringValue photo_url = 4 [deprecated = true];
    // shopper title with text color, style
    TextAttribute title = 5;
    /** Shopper profile type. */
    enum ShopperProfileType {
      // unspecified
      SHOPPER_PROFILE_TYPE_UNSPECIFIED = 0;
      // top grocery shopper
      SHOPPER_PROFILE_TYPE_TOP_SHOPPER = 1;
      // top dasher
      SHOPPER_PROFILE_TYPE_TOP_DASHER = 2;
      // highly rated dasher
      SHOPPER_PROFILE_TYPE_HIGHLY_RATED_DASHER = 3;
      // repeat shopper: done high-quality shopping for the consumer before
      SHOPPER_PROFILE_TYPE_REPEAT_SHOPPER = 4;
    }
    // Profile type to display
    ShopperProfileType type = 6;
    // deliveries icon (a small shopping bag icon)
    google.protobuf.StringValue deliveries_icon = 7;
    // shopper description text
    google.protobuf.StringValue shopper_description = 8;
  }
  // Badge
  Badge badge = 14;
  // Dasher profile picture url
  google.protobuf.StringValue profile_picture_url = 15;
  // Profile picture expiration timestamp
  google.protobuf.Timestamp profile_picture_expiry_time = 16;
}

// Contains Dasher Badge info
message Badge {
  // Badge text
  google.protobuf.StringValue text = 1;
  // Badge icon
  google.protobuf.StringValue icon_token = 2;
  // Badge color
  // Please refer here for accepted values: https://github.com/doordash/services-protobuf/blob/master/protos/component-catalog.common/prism/tokens/color.proto
  google.protobuf.StringValue color_token = 3;
}

/** Contains all of the merchant details. */
message MerchantDetails {
  // Merchant name.
  google.protobuf.StringValue name = 1;
  // Merchant latitude.
  google.protobuf.StringValue latitude = 2;
  // Merchant longitude.
  google.protobuf.StringValue longitude = 3;
  // Merchant phone number.
  google.protobuf.StringValue phone_number = 4;

  /** Contains pickup address info. */
  message PickupAddress {
    // Pickup street address.
    google.protobuf.StringValue street = 1;
    // Pickup city address.
    google.protobuf.StringValue city = 2;
    // Pickup state address.
    google.protobuf.StringValue state = 3;
    // Pickup zipcode address.
    google.protobuf.StringValue zipcode = 4;
    // Pickup subpremise address.
    google.protobuf.StringValue subpremise = 5;
    // Pickup printable address.
    google.protobuf.StringValue printable_address = 6;
    // Pickup latitude address.
    google.protobuf.StringValue latitude = 7;
    // Pickup longitude address.
    google.protobuf.StringValue longitude = 8;
  }
  // Pickup address info.
  PickupAddress address = 5;
  // Merchant timezone.
  google.protobuf.StringValue timezone = 6;
  // Merchant order confirmed time (from delivery service)
  google.protobuf.Timestamp store_order_confirmed_time = 7;
  // Merchant details for bundle orders uniquely identified by order_uuid/cart_uuid
  map<string, MerchantDetails> bundle_merchant_details = 8;
  // absolute path of business cover square img url
  google.protobuf.StringValue cover_square_img_url = 9;
}

/** Contains all of the ETA details. */
message ETADetails {
  // ETA type.
  google.protobuf.StringValue type = 1;
  // ETA estimated delivery time.
  google.protobuf.StringValue estimated_delivery_time = 2;
  // ETA actual delivery time.
  google.protobuf.StringValue actual_delivery_time = 3;
  // ETA quoted delivery time.
  google.protobuf.StringValue quoted_delivery_time = 4;
  // ETA max estimated delivery time.
  google.protobuf.StringValue max_estimated_delivery_time = 5;
  // ETA min estimated delivery time.
  google.protobuf.StringValue min_estimated_delivery_time = 6;
  // ETA estimated pickup time.
  google.protobuf.StringValue estimated_pickup_time = 7;
  // ETA actual pickup time.
  google.protobuf.StringValue actual_pickup_time = 8;

  // Expected Lateness - for Proactive Late Comms
  message ExpectedLateness {
    // the expected lateness state of the order
    enum State {
      // unspecified
      STATE_NOT_LATE_UNSPECIFIED = 0;
      // the order is running late
      STATE_LATE = 1;
    }

    // LatenessReason indicates why the order is expected to be late
    enum LatenessReason {
      // unspecified
      LATENESS_REASON_UNSPECIFIED = 0;
      // the order is expected late because it took too long to find a dasher
      LATENESS_REASON_DASHER_CONFLAT = 1;
      // the order is expected late because the merchant needs more time to prepare the order
      LATENESS_REASON_MERCHANT_CONFLAT = 2;
    }

    // Resolutions indicates the available resolutions (currently only waiting (apology only))
    enum Resolutions {
      // unspecified
      RESOLUTIONS_UNSPECIFIED = 0;
      // ask the Cx to keep waiting with apology
      RESOLUTIONS_WAIT = 1;
      // above with credits info
      RESOLUTIONS_WAIT_WITH_CREDITS = 2;
    }

    // this value will always be 'LATE' (for backwards compatibility)
    State state = 1;
    // the reason the order is expected late, one of 'dasher_conflat' || 'merchant_prep_time'
    LatenessReason lateness_reason = 2;
    // this value will always be 'wait' (for backwards compatibility)
    Resolutions resolutions = 3;
    // this value will always be 0 (for backwards compatibility)
    google.protobuf.Int32Value credit_amount = 4;
    // this value is a reference id that OTS callers can leverage to verify credit amount info from DRS directly
    google.protobuf.StringValue status_reqtype_uuid = 5;
  }

  // Expected Lateness will be null if the order is not expected to be late
  ExpectedLateness expected_lateness = 9;
  // ETA details for bundle orders uniquely identified by order_uuid/cart_uuid
  map<string, ETADetails> bundle_eta_details = 10;
  // ETA details for overall aggregated bundle
  ETADetails aggregated_bundle_eta_details = 11;

  // ETA message object used for generating order tracker subtitle
  message ETAMessage {
    // Message text
    google.protobuf.StringValue text = 1;

    // ETA message types
    enum ETAMessageType {
      // Unspecified
      ETA_MESSAGE_TYPE_UNSPECIFIED = 0;
      // Early
      ETA_MESSAGE_TYPE_EARLY = 1;
      // On time
      ETA_MESSAGE_TYPE_ON_TIME = 2;
      // Late
      ETA_MESSAGE_TYPE_LATE = 3;
    }
    // Message type
    ETAMessageType type = 2;
    // Flag for should show eta time behind the text
    google.protobuf.BoolValue should_show_eta_time = 3;
  }

  // ETA message used to generate order tracker eta subtitle
  ETAMessage eta_message = 12;

  // ETA banner details to driven the ETABanner UI
  message ETABannerDetails {
    // Tag text: "Early", "On time", "Updated time", "Delayed", etc.
    google.protobuf.StringValue tag_text = 1;

    // Tag color's token name. It should be a Prism color from https://prism.doordash.com/latest/tokens/usage-tokens/consumer-theme.html. If the color name is "default" under "usage / color / action / primary", then "usage/color/action/primary/default" should be put here.
    google.protobuf.StringValue tag_color_token = 2;

    // Eta message: the BE-driven message like 11:40 PM-12:01 PM
    google.protobuf.StringValue eta_text = 3;

    // The trailing icon's token token name. It should be a Prism icon from https://prism.doordash.com/latest/design/foundations/icons/icon-library.html. If the icon name is "info-line", then "info/line" should be put here.
    google.protobuf.StringValue trailing_icon_token = 4;

    // Which type of content to show when ETA banner clicked
    enum ClickableContentType {
      // Unspecified. Will never be this value
      CLICKABLE_CONTENT_TYPE_UNSPECIFIED = 0;
      // The ETA Banner is not clickable
      CLICKABLE_CONTENT_TYPE_NONE = 1;
      // Click to show a Bottom Sheet on Mobile and a Popup Modal on Web
      CLICKABLE_CONTENT_TYPE_POPUP = 2;
    }

    // Type of the clickable contents
    ClickableContentType clickable_content_type = 5;

    // The source of the clickable contents. Client needs to call the SDUI APIs to fetch the Mosaic page contents.
    common.post_checkout.v1.SduiApiDetails clickable_content_source = 6;
  }

  // ETA banner details to driven the ETABanner UI
  ETABannerDetails eta_banner_details = 13;
}

/** Contains all of the route details. */
message RouteDetails {
  // Route polyline.
  google.protobuf.StringValue polyline = 1;
  // Route vehicle type.
  google.protobuf.StringValue vehicle_type = 2;

  /** Contains all detour details. */
  message Detour {
    // Detour pin type. [One of Store, Dasher, Detour, Consumer].
    // Supported types that are never seen Consumer_pickup, Bundled_store.
    google.protobuf.StringValue pin_type = 1;
    // Detour lat.
    google.protobuf.DoubleValue lat = 2;
    // Detour lng.
    google.protobuf.DoubleValue lng = 3;
    // Detour sort order.
    // Note that sortOrder is not used everywhere, instead the Detour array is assumed to be
    // sorted by sortOrder at clients and they use index in the Detour array.
    // TODO: Consider deprecating it.
    google.protobuf.Int32Value sort_order = 4;
    // Detour bundled image url.
    google.protobuf.StringValue bundled_image_url = 5 [deprecated = true];
  }
  // Route detours.
  repeated Detour detours = 3;
}

/** Contains all of the order details. */
message OrderDetails {
  // Order cart id.
  google.protobuf.StringValue order_cart_id = 1;
  // Order UUID.
  google.protobuf.StringValue order_uuid = 2;
  // Order status.
  google.protobuf.StringValue order_status = 3;
  // Order status last updated.
  google.protobuf.Timestamp order_status_last_updated = 4;
  // If order pickup.
  google.protobuf.BoolValue is_pickup = 5;
  // If requires consumer order release.
  google.protobuf.BoolValue requires_consumer_order_release = 6;
  // Order cancellation reason.
  google.protobuf.StringValue cancellation_reason = 7;

  /** Contains AOR details. */
  message AorDetails {
    /** AOR status. */
    enum AORCheckInStatus {
      // Unspecified.
      AOR_CHECK_IN_STATUS_UNSPECIFIED = 0;
      // Success.
      AOR_CHECK_IN_STATUS_SUCCESS = 1;
      // Failure.
      AOR_CHECK_IN_STATUS_FAILURE = 2;
      // Not checked in.
      AOR_CHECK_IN_STATUS_NOT_CHECKED_IN = 3;
    }
    // AOR check in status.
    AORCheckInStatus check_in_status = 1;
  }
  // AOR details.
  AorDetails aor_details = 8;

  /** Age restricted ID verification details. */
  message AgeRestrictedIdVerification {
    // ID photo url.
    google.protobuf.StringValue id_photo_url = 1;
    // Vendor.
    google.protobuf.StringValue vendor = 2;
    // Min age requirements.
    google.protobuf.Int32Value min_age_requirement = 3;

    // Flag to indicate if it's bouncer case delivery
    google.protobuf.BoolValue is_bouncer_case_enabled = 4;
  }
  // Age restricted ID verification.
  AgeRestrictedIdVerification age_restricted_id_verification = 9;
  // The bundled primary order uuid.
  google.protobuf.StringValue primary_bundled_order_uuid = 10;
  // All the bundled order uuids.
  repeated google.protobuf.StringValue bundled_order_uuids = 11;
  // Retail order substitution type.
  google.protobuf.StringValue order_substitution_type = 12;

  // Retail order shopping state details
  message ShoppingStateInfo {
    // shopping states for retail order
    enum ShoppingState {
      // unspecified
      SHOPPING_STATE_UNSPECIFIED = 0;
      // hides entrypoint: shopping not started / ended / not retail
      SHOPPING_STATE_NONE = 1;
      // shows entry point: shopping in progress
      SHOPPING_STATE_SHOPPING_IN_PROGRESS = 2;
      // shows entry point: review substitutions
      SHOPPING_STATE_SUBSTITUTION_PENDING = 3;
      // shows entry point: hopping finished but not delivered yet
      SHOPPING_STATE_SHOPPING_FINISHED = 4;
    }
    // order shopping state
    ShoppingState shopping_state = 1;
    // if SHOPPING_STATE_SUBSTITUTION_PENDING, also include # of items for cx to review
    // otherwise default to null
    google.protobuf.Int32Value items_to_review = 2;
  }
  // Retail order shopping state info.
  ShoppingStateInfo shopping_state_info = 13;
  // indicates if signature is required
  google.protobuf.BoolValue signature_required = 14;

  /** Catering specific order info for web and mobile clients */
  message CateringSupportInfo {
    // Variable message which is associated with the current state of the order
    google.protobuf.StringValue catering_support_message = 1;
    // Localized phone number for the catering Tx
    google.protobuf.StringValue support_phone_number = 2;
  }
  // Catering specific order info
  CateringSupportInfo catering_support_info = 15;

  // a flag to indicate if this order is a group order
  google.protobuf.BoolValue is_group_cart = 16;

  // Flag to indicate if the order can be adjusted by consumer
  google.protobuf.BoolValue is_adjustable = 17 [deprecated = true];

  // Flag to indicate if DashPass discounts we're applied to the order
  google.protobuf.BoolValue is_dash_pass_order = 18;
  // Flag to indicate that order is a package return
  google.protobuf.BoolValue is_package_return = 19;
  // Bundle order info
  common.bundle_order_info.v1.BundleOrderInfo bundle_order_info = 20;
  // Order details for bundle orders uniquely identified by order_uuid/cart_uuid
  map<string, OrderDetails> bundle_order_details = 21;
  // Reserved 22 for rollback the change
  reserved 22;
  reserved "gift_info";
  // Flag to indicate if order is a gift order
  google.protobuf.BoolValue is_gift = 23;
  /** Package order specific info for web and mobile clients */
  message PackageOrderInfo {
    // Indicates the type of package order used for customizing order experience e.g: qr_code, label
    common.order_config.v1.OrderConfig.PackageOrderType package_order_type = 1;
  }
  // Package order info
  PackageOrderInfo package_order_info = 24;
  /** Metadata related to grocery pro */
  message GroceryProMetadata {
    // Wheteher to show grocery pro photo request photo modal
    google.protobuf.BoolValue show_request_photo_modal = 1;
  }
  // Grocery Pro Metadata
  GroceryProMetadata grocery_pro_metadata = 25;
  // Auto reorder child order uuid for same store auto reorder experience.
  google.protobuf.StringValue auto_reorder_child_order_uuid = 26;
  /* Information related to displaying bundle availability info on non-DoubleDash orders */
  message BundleAvailabilityInfo {
    // Date at which an order is no longer eligible for bundle opportunities
    google.protobuf.Timestamp expiration_date = 1;
    // The date at which to begin counting down to the expiration date
    google.protobuf.Timestamp countdown_start_date = 2;
    // Text to display before the countdown is displayed ("e.g. Bundle until scheduled time")
    google.protobuf.StringValue pre_countdown_text = 3;
    // Text to display with the countdown (e.g. "8:59 mins left to bundle")
    google.protobuf.StringValue countdown_text = 4;
    // Whether to get DoubleDash for homepage reminder
    google.protobuf.BoolValue should_display_homepage_reminder = 5;
  }
  // Information related to displaying bundle availability info on non-DoubleDash orders
  BundleAvailabilityInfo bundle_availability_info = 27;

  // Information related to the rendering of tracking link.
  message TrackingLinkInfo {
    // The URL that allows users other than the Cx who placed the order to track the order status.
    google.protobuf.StringValue share_link_url = 1;
    // Whether to display the button that allows Cx to share tracking with another person.
    google.protobuf.BoolValue share_button_visible = 2;
  }
  // Information related to the rendering of tracking link.
  TrackingLinkInfo tracking_link_info = 28;
}

/** Contains all of the delivery details. */
message DeliveryDetails {
  // Delivery ID.
  google.protobuf.StringValue delivery_id = 1;
  // Delivery UUID.
  google.protobuf.StringValue delivery_uuid = 2;
  // Delivery fulfillment type.
  google.protobuf.StringValue fulfillment_type = 3;
  // If has courier tracking.
  google.protobuf.BoolValue has_courier_tracking = 4;
  // Delivery order protocol type.
  google.protobuf.StringValue order_protocol_type = 5;
  // If delivery is batched.
  google.protobuf.BoolValue is_batched = 6;
  // Delivery created at
  google.protobuf.Timestamp created_at = 7;
  // If it is a drive order
  google.protobuf.BoolValue is_from_store_to_us = 8;
  // Delivery details for bundle orders uniquely identified by order_uuid/cart_id
  map<string, DeliveryDetails> bundle_delivery_details = 9;
  // Drop off details
  DeliveryDropOffDetails drop_off_details = 10;
  // Pick up details
  DeliveryPickUpDetails pick_up_details = 11;
}

/** Contains the Delivery drop off details. */
message DeliveryDropOffDetails {
  // Order dropoff location latitude
  google.protobuf.StringValue latitude = 1;
  // Order dropoff location longitude
  google.protobuf.StringValue longitude = 2;
  // Title for the order drop off card
  google.protobuf.StringValue title = 3;
  // Subtitle for the order drop off card
  google.protobuf.StringValue subtitle = 4;
  // Action text for the order drop off card
  google.protobuf.StringValue action_text = 5;
  // Action type for the order drop off card cta button
  DropOffActionType action_type = 6;
  // Drop off image URL
  google.protobuf.StringValue image_url = 7;
  // Receipt photo url
  google.protobuf.StringValue receipt_photo_url = 8;
  // Deep link url for button action
  repeated DeepLink deep_link = 9;
}

/** Contains delivery pick up details. */
message DeliveryPickUpDetails {
  // Title
  google.protobuf.StringValue title = 1;
  // Subtitle
  google.protobuf.StringValue subtitle = 2;
  // Image photo url for pick up
  google.protobuf.StringValue image_url = 3;
  // Should dx receipt photo be displayed in order tracker
  google.protobuf.BoolValue show_in_order_tracker = 4;
  // Dasher id of dasher who took verification photo. Used to determine if image_url is outdated.
  google.protobuf.StringValue dasher_id = 8;
}

/** Action types for the Drop Off details card CTA button*/
enum DropOffActionType {
  // Unspecified
  DROP_OFF_ACTION_TYPE_UNSPECIFIED = 0;

  // View photo
  DROP_OFF_ACTION_TYPE_VIEW_PHOTO = 1;

  // Deep link
  DROP_OFF_ACTION_TYPE_DEEP_LINK = 2;
}

/** Contains all of the translated strings details. */
message TranslatedStrings {
  // Translated strings title.
  google.protobuf.StringValue title = 1;
  // Translated strings subtitle.
  google.protobuf.StringValue subtitle = 2;
  // Translated strings substatus.
  google.protobuf.StringValue substatus = 3;
  // Translated strings for bundle orders uniquely identified by order_uuid/cart_id
  map<string, TranslatedStrings> bundle_translated_strings = 4;
  // Translated strings for overall aggregated bundle
  TranslatedStrings aggregated_bundle_translated_strings = 5;
  // Reserved 6 to rollback a change
  reserved 6;
  reserved "actions";
  // Actions w/ translated messages
  repeated MessageAction message_actions = 7;
  // optional tag that is rendered on the order-tracking-page and history page
  PostCheckoutTag tag = 8;
}

/** Contains all of the dine in voucher details. */
message DineInVoucherDetails {
  // Dine in voucher id.
  google.protobuf.StringValue voucher_id = 1;
  // Dine in voucher title.
  google.protobuf.StringValue title = 2;
  // Dine in voucher subtitle.
  google.protobuf.StringValue subtitle = 3;
  // Dine in voucher title.
  google.protobuf.StringValue voucher_title = 4;
  // Dine in voucher subtitle.
  google.protobuf.StringValue voucher_subtitle = 5;
  // Dine in voucher expiration date.
  google.protobuf.StringValue voucher_expiration_date_display_string = 6;
  // Dine in voucher image.
  google.protobuf.StringValue voucher_image = 7;
}

/** Contains all of the tracking data for shipping orders. */
message ShippingTracking {
  // Post checkout page tracking section header (translated)
  google.protobuf.StringValue translated_label = 1;
  // The carrier name for the shipment
  google.protobuf.StringValue carrier_name = 2;
  // The tracking number for the shipment
  google.protobuf.StringValue tracking_number = 3;
  // The tracking url for the shipment
  google.protobuf.StringValue tracking_url = 4;
}

/** Contains all of the shipping details for shipping orders. */
message ShippingDetails {
  // The status of the shipping order
  order.OrderShipmentInfo.ShipmentStatus shipping_status = 1;
  // The tracking data of the shipping order
  ShippingTracking tracking = 2;
}

/** Contains delivery status for drone deliveries. */
message DroneDetails {
  // List of drones fulfilling delivery and its delivery status.
  repeated Drone drones = 1;
  // If true, render the number of drones that have been delivered at Cx.
  google.protobuf.BoolValue should_show_cx_delivery_info_window = 2;
  // If set, optionally add label to cx_delivery_info_window
  google.protobuf.StringValue cx_delivery_info_window_label = 3;
}

/** Contains information about drone delivery status and order contents in its package. */
message Drone {
  // Drone id
  google.protobuf.StringValue drone_id = 1;
  // Drone location latitude.
  google.protobuf.StringValue latitude = 2;
  // Drone location longitude.
  google.protobuf.StringValue longitude = 3;
  // ETA estimated delivery time for this drone. A delivery is complete once all the drones in the delivery arrive at
  // the destination. We have estimated_delivery_time per drone to render each ETA. Overall order ETA information should
  // be read from ETADetails. See https://docs.google.com/document/d/1ozS7O7bzs7KNQsMMfHr6hRDpZejspVO1xPxz8w-IQYg/edit#
  // for more information.
  google.protobuf.StringValue estimated_delivery_time = 4;
  // Drone delivery state
  DroneState delivery_state = 5;
  // Items in the drone
  repeated google.protobuf.StringValue items_ids = 6;
  // Whether to render polyline from drone to Cx
  google.protobuf.BoolValue should_show_polyline = 7;
  // Whether to render info window per drone
  google.protobuf.BoolValue should_show_info_window = 9;
  // Prefix appended to the info window if set.
  google.protobuf.StringValue info_window_prefix = 10;
  // Cx visible label for this drone in OrderDetails.
  google.protobuf.StringValue name = 11;

  // Possible states for drone delivery status
  enum DroneState {
    // Unspecified state. Not used
    DRONE_STATE_UNSPECIFIED = 0;
    // Pending package loading
    DRONE_STATE_PENDING_LOAD = 1;
    // In flight to Cx
    DRONE_STATE_IN_FLIGHT = 2;
    // Delivery complete
    DRONE_STATE_DELIVERED = 3;
    // Delivery failed during flight
    DRONE_STATE_FAILED = 4;
  }

  // Changed field name for clarity.
  reserved 8;
  reserved "should_show_eta";
}

/** Contains delivery status for robot deliveries. */
message RobotDetails {
  // Robot Provider
  autonomous_delivery_platform.v1.Provider provider = 1 [deprecated = true];
  // If true, allow customer to opt out of Robot delivery
  google.protobuf.BoolValue consumer_opt_out_enabled = 2;
  // Support details for order
  SupportInformation support_information = 3;
  // List of robots fulfilling delivery and their delivery status.
  repeated Robot robots = 4;
  // Client asset name of the map icon
  google.protobuf.StringValue map_icon_name = 5;
  // Prism asset name of the timeline icon
  google.protobuf.StringValue timeline_icon_name = 6;
  // Meeting point of robot dasher and customer
  Coordinate meeting_point = 7;
  // Robot assignment modal
  DefaultListView av_assigned_modal = 8;
  // Robot AV Type
  autonomous_delivery_platform.v1.AvType av_type = 9;
}

// Coordinate with latitude and longitude
message Coordinate {
  // Latitude
  string lat = 1;
  // Longitude
  string lng = 2;
}

/** Contains support information for deliveries. */
message SupportInformation {
  // Support contact name
  google.protobuf.StringValue name = 1;
  // Support profile image url
  google.protobuf.StringValue profile_image_url = 2;
  // Support phone number
  google.protobuf.StringValue phone_number = 3;
  // Support is callable
  google.protobuf.BoolValue is_callable = 4;
  // Support is textable
  google.protobuf.BoolValue is_textable = 5;
}

/** Contains information about drone delivery status and order contents in its package. */
message Robot {
  // Robot id
  google.protobuf.StringValue id = 1;
  // Robot location latitude.
  google.protobuf.StringValue latitude = 2;
  // Robot location longitude.
  google.protobuf.StringValue longitude = 3;
  // Robot speed
  google.protobuf.DoubleValue speed = 4;
  // Robot heading
  google.protobuf.DoubleValue heading = 5;
  // Robot delivery status
  autonomous_delivery_platform.v1.DeliveryStatus delivery_status = 6;
}

// Contains information about the Live Activities widget.
message LiveActivityDetails {
  // A template value.
  message TemplateValue {
    // Type of the template value.
    enum TemplateValueType {
      // Unused.
      TEMPLATE_VALUE_TYPE_UNSPECIFIED = 0;
      // Time param that uses the string_value.
      TEMPLATE_VALUE_TYPE_TIME = 1;
      // Countdown param that uses the timestamp_value.
      TEMPLATE_VALUE_TYPE_COUNTDOWN = 2;
    }
    // The type of the value.
    TemplateValueType type = 1;
    // Used when the value is in timestamp format.
    google.protobuf.Timestamp timestamp_value = 2;
    // Used when the value is in string format.
    google.protobuf.StringValue string_value = 3;
    // Message to display once the expiry time is reached.
    google.protobuf.StringValue expired_message = 4;
  }
  // Template for shor message
  message ShortMessage {
    // icon to show (base64 encoded string)
    google.protobuf.StringValue icon = 1;
    // text message. This can be a template.
    google.protobuf.StringValue message = 2;
    // Params to use when the message is a template.
    map<string, TemplateValue> template_params = 3;
  }
  // Contains all details for the order status bar.
  message OrderStatusBar {
    // The order status title.
    google.protobuf.StringValue title = 1;
    // The order status subtitle. This can be a template.
    google.protobuf.StringValue subtitle = 2;
    // Params to use when the subtitle is a template.
    map<string, TemplateValue> template_params = 3;
    // The url of the image to display.
    google.protobuf.StringValue image_url = 4 [deprecated = true];
    // Used for displaying info in the dynamic island. This can be a template.
    ShortMessage short_message = 5;
    // The base64 encoded image to display.
    google.protobuf.StringValue image = 6;
  }

  // Contains all details for the action bar.
  message ActionBar {
    // The action message styles available.
    enum ActionMessageStyle {
      // Unused.
      ACTION_MESSAGE_STYLE_UNSPECIFIED = 0;
      // Default style, shows as normal text.
      ACTION_MESSAGE_STYLE_NORMAL = 1;
      // Yellow text.
      ACTION_MESSAGE_STYLE_ATTENTION = 2;
    }
    // The message of the action bar. This can be a template.
    google.protobuf.StringValue message = 1;
    // An icon to add before the message.
    google.protobuf.StringValue icon_url = 2;
    // Params to use when the message is a template.
    map<string, TemplateValue> template_params = 3;
    // Deep link url to navigate to on action bar interaction.
    google.protobuf.StringValue deep_link_url = 4;
    // The style to use for the message.
    ActionMessageStyle action_message_style = 5;
  }

  // Data for the order status bar.
  OrderStatusBar order_status_bar = 1;
  // Data for the action bar.
  ActionBar action_bar = 2;
  // A progress bar with icons for the various stages of the order.
  // This is displayed when the action_bar is empty.
  OrderProgressBar progress_bar = 3;
}

// Alert Badge Details
message AlertBadge {
  // Title
  google.protobuf.StringValue title = 1;
  // Message content
  google.protobuf.StringValue message = 2;
  // The duration that the alert will be visible
  google.protobuf.Duration view_duration = 3;
  // The min duration that we consider cx acknowledge the alert
  google.protobuf.Duration acknowledge_duration = 4;

  // Alert badge types
  enum AlertBadgeType {
    // Unspecified
    ALERT_BADGE_TYPE_UNSPECIFIED = 0;
    // Batching UI
    ALERT_BADGE_TYPE_BATCHING_UI = 1;
    // Dasher assignment wait too long
    ALERT_BADGE_TYPE_DASHER_ASSIGNMENT_WAIT = 2;
    // Delivery is late that shows an alert badge allowing Cx to cancel the order
    ALERT_BADGE_TYPE_DELIVERY_LATE_FOR_CANCELLATION = 3;
    // For a new remake order whose parent order is cancelled by Dx
    ALERT_BADGE_TYPE_AUTO_REORDER_DX_INITIATED = 4;
    // For the event when the top dasher is assigned to the delivery
    ALERT_BADGE_TYPE_TOP_DASHER_ASSIGNMENT = 5;
    // Alert badge that shows credit and refund info
    ALERT_BADGE_TYPE_CREDIT_AND_REFUND_INFO = 6;
    // For the event when a highly rated dasher is assigned to the delivery
    ALERT_BADGE_TYPE_HIGHLY_RATED_DASHER_ASSIGNMENT = 7;
    // Autonomous Delivery assignment
    ALERT_BADGE_TYPE_AUTONOMOUS_DELIVERY = 8;
    // Mx-fulfilled orders
    ALERT_BADGE_TYPE_SELF_DELIVERY = 9;
    // Retail Return in process
    ALERT_BADGE_TYPE_RETURN_IN_PROCESS = 10;
    // Free same day delivery alert badge before dasher confirmation
    ALERT_BADGE_TYPE_FREE_SAME_DAY_DELIVERY = 11;
    // Disclaimer for hiding the map
    ALERT_BADGE_TYPE_HIDE_MAP_DISCLAIMER = 12;
    // Loyalty points summary
    ALERT_BADGE_TYPE_LOYALTY_POINTS_SUMMARY = 13;
    // Multi store fulfillment alert badge to help the Cx navigate between orders/stores
    ALERT_BADGE_TYPE_MULTI_STORE_FULFILLMENT = 14;
  }
  // Type
  AlertBadgeType type = 5;

  // Alert badge key message
  google.protobuf.StringValue key_message = 6;
  // Position to display the alert badge
  repeated Position positions = 7;

  // Buttons to display on the alert badge
  repeated Button buttons = 8;

  // Type of the icon to show next to the title, if any
  enum IconType {
    // required by linter, won't use in backend, treat as no icon
    ICON_TYPE_UNSPECIFIED = 0;
    // no icon
    ICON_TYPE_NONE = 1;
    // dashpass icon
    ICON_TYPE_DASHPASS = 2;
  }

  // Type of the icon to show next to the title, if any
  IconType icon_type = 9 [deprecated = true];

  // Icon token to show next to the title, if any
  google.protobuf.StringValue icon_token = 10;

  // Color of the title text
  // Please refer here for accepted values: https://github.com/doordash/services-protobuf/blob/master/protos/component-catalog.common/prism/tokens/color.proto
  google.protobuf.StringValue color_token = 11;

  // (optional) allows client to stack buttons vertically or horizontally
  google.protobuf.Int32Value buttons_per_row = 12;

  // (optional) url for trailing image
  google.protobuf.StringValue trailing_image_url = 13;

  // Color of the background of the alert badge
  // Please refer here for accepted values: https://github.com/doordash/services-protobuf/blob/master/protos/component-catalog.common/prism/tokens/color.proto
  google.protobuf.StringValue background_color = 14;
}

// Mini Alert Details
message MiniAlert {
  // Message content
  google.protobuf.StringValue message = 1;
  // Position to display the mini alert
  repeated Position positions = 2;
  // Color of the background of the mini alert
  // Please refer here for accepted values: https://github.com/doordash/services-protobuf/blob/master/protos/component-catalog.common/prism/tokens/color.proto
  google.protobuf.StringValue background_color = 14;
  // Color of the text of the mini alert
  // Please refer here for accepted values: https://github.com/doordash/services-protobuf/blob/master/protos/component-catalog.common/prism/tokens/color.proto
  google.protobuf.StringValue text_color = 4;
}

// Position on client describing the location of the alert badge or mini alert
enum Position {
  // Unspecified
  POSITION_UNSPECIFIED = 0;
  // preview tracker
  POSITION_PREVIEW_TRACKER = 1;
  // full tracker
  POSITION_FULL_TRACKER = 2;
}

/*
   Button that describes the action to take on the alert badge

   Note: Backend will find all the appropriate buttons based on the Frontend Platform Type.
   See MultiReturnPlatform enum for more details.
*/
message Button {
  // Text on the button
  google.protobuf.StringValue text = 1;

  // Alternative Deep link
  repeated DeepLink deep_link = 2;

  // Style of the button
  ButtonType button_type = 3;
  // timestamp to control when this button should be hidden
  google.protobuf.Timestamp display_until = 4;

  // Action type of the button
  ButtonActionType button_action_type = 5;

  // button size
  component_catalog.common.prism.shared.v1.ButtonSize size = 6;

  // platform to which the button is valid
  MultiPlatformFilter platform = 7;
}

/**
   Deep link to navigate to on button interaction

   Note: Backend will find the best matching deep link based on the Frontend Platform Type.
   See Platform enum for more details.
*/
message DeepLink {
  // path. The path to the deep link without host and schema.
  google.protobuf.StringValue path = 1;
  // Type: can be iOS, android, web, or unspecified.
  Platform platform = 2;
}

/*
   Use for repeated fields that require a singular response from the backend, ie: deeplinks

   Backend will return first matching value in order in relation to frontend platform type:
   - iOS: PLATFORM_IOS -> PLATFORM_MOBILE -> PLATFORM_UNSPECIFIED
   - Android: PLATFORM_ANDROID -> PLATFORM_MOBILE -> PLATFORM_UNSPECIFIED
   - Web: PLATFORM_WEB -> PLATFORM_UNSPECIFIED
   - Unknown -> PLATFORM_UNSPECIFIED

   Note: For multi-value platform filtering, use MultiReturnPlatform enum instead.
*/
enum Platform {
  // indicates that all platforms are supported.
  PLATFORM_UNSPECIFIED = 0;
  // Please use PLATFORM_IOS and PLATFORM_ANDROID instead, this field is deprecated.
  PLATFORM_MOBILE = 1 [deprecated = true];
  // Platform that means the deep link is for iOS.
  PLATFORM_IOS = 2;
  // Platform that means the deep link is for Android.
  PLATFORM_ANDROID = 3;
  // Platform that means the deep link is for web.
  PLATFORM_WEB = 4;
}

/*
   Use for repeated fields that can tolerate multiple responses from the Backend. ie: buttons

   Backend will return ALL values matching the Frontend platform type:
   - iOS: returns MULTI_PLATFORM_FILTER_IOS + UNSPECIFIED objects
   - Android: returns MULTI_PLATFORM_FILTER_ANDROID + UNSPECIFIED objects
   - Web: returns MULTI_PLATFORM_FILTER_WEB + UNSPECIFIED objects
   - Unknown: returns MULTI_PLATFORM_FILTER_UNSPECIFIED

   Note: If you are looking for a reconciliation strategy that only returns a single value, see the Platform message above.
*/
enum MultiPlatformFilter {
  // indicates that all platforms are supported.
  MULTI_PLATFORM_FILTER_UNSPECIFIED = 0;
  // Platform that means this field is for iOS.
  MULTI_PLATFORM_FILTER_IOS = 2;
  // Platform that means this field is for Android.
  MULTI_PLATFORM_FILTER_ANDROID = 3;
  // Platform that means this field is for web.
  MULTI_PLATFORM_FILTER_WEB = 4;
}

/*
 * Identifies the type of button that should be displayed.
 */
enum ButtonType {
  // required by linter, won't use in backend, treat as PRIMARY
  BUTTON_TYPE_UNSPECIFIED = 0;
  // Red action button, white text
  BUTTON_TYPE_PRIMARY = 1;
  // Grey action button, black text
  BUTTON_TYPE_TERTIARY = 2;
  // White action button, black text
  BUTTON_TYPE_FLAT_SECONDARY = 3;
}

/*
 * Identifies the action type of button.
 */
enum ButtonActionType {
  // required by linter, won't use in backend
  BUTTON_ACTION_TYPE_UNSPECIFIED = 0;
  // Red action button, white text
  BUTTON_ACTION_TYPE_SWITCH_PAYMENT_METHOD = 1;
}

// Surface styling details
message SurfaceStylingDetails {
  // Surface type
  Surface surface = 1;
  // Styling details
  StylingDetails styling_details = 2;
}

// Identify the type of surface
enum Surface {
  // Surface is unspecified
  SURFACE_POST_CHECKOUT_UNSPECIFIED = 0;
  // Surface is the full tracker
  SURFACE_POST_CHECKOUT_FULL_TRACKER = 1;
  // Surface is the mini tracker
  SURFACE_POST_CHECKOUT_MINI_TRACKER = 2;
  // Surface is the live activity
  SURFACE_POST_CHECKOUT_LIVE_ACTIVITY = 3;
}

// Styling details of the surface. Styling information for the post checkout screen will live here
message StylingDetails {
  // Map style
  MapStyle map_style = 1;
}

// Map style
message MapStyle {
  // boolean to hide the map
  google.protobuf.BoolValue hidden = 1;
  // The decoration of the route for dasher delivery order
  MapRouteDecoration dasher_route_decoration = 2;
  // The decoration of the dasher pin
  MapPinDecoration dasher_pin_decoration = 3;
}

// The decoration items for pins on the map
message MapPinDecoration {
  // The text of an extra info banner presented on the map pin
  google.protobuf.StringValue info_banner_text = 1;
}

// The decoration items for routes on the map
message MapRouteDecoration {
  // The style of the rout
  RouteStyle style = 1;
}

// The style of the route
enum RouteStyle {
  // Won't send this value in real world. FE could interpret as ROUTE_STYLE_NONE
  ROUTE_STYLE_UNSPECIFIED = 0;
  // No route line
  ROUTE_STYLE_NONE = 1;
  // An arch from the source to the destination
  ROUTE_STYLE_ARCH = 2;
  // An solid polyline pass through the road network from the source to the destination
  ROUTE_STYLE_POLYLINE = 3;
  // An dashed polyline pass through the road network from the source to the destination
  ROUTE_STYLE_DASHED_POLYLINE = 4;
}

/*
 * Dasher Location stored as a byte array in OTS cache
 */
message DasherLocation {
  // Latitude of dasher location
  google.protobuf.DoubleValue lat = 1;
  // Longitude of dasher location
  google.protobuf.DoubleValue lng = 2;
  // Dasher id of dasher location
  google.protobuf.StringValue dasher_id = 3;
  // Timestamp of dasher location
  google.protobuf.Timestamp timestamp = 4;
  // Speed of dasher location
  google.protobuf.DoubleValue speed = 5;
}

// The progress bar / timeline with a list of icons for various stages of the order
message OrderProgressBar {
  // A step to display in the progress bar.
  message Step {
    // An icon name from the Prism icon library. For example 'logo-doordash'
    // See https://prism.doordash.com/latest/design/foundations/icons/icon-library.html
    // This field is required, even if type is not ICON_TYPE_PRISM_ICON. That way if the frontend doesn't know
    // how to handle a given IconType, it can fall back on assuming it's a prism icon and use the `icon_name` field.
    google.protobuf.StringValue icon_name = 1;
    // True if this is the current step the timeline is on
    // Only one item in the steps list should be marked as current
    google.protobuf.BoolValue is_current = 2;
    // The type of icon - tells the frontend how to interpret the icon
    IconType type = 3;
    // What general step this is. Should be vertical agnostic.
    // UI producers can key on this step type to replace an existing step with a new, vertical-specific one.
    // For example, replacing the car icon with a drone icon in the Dasher step.
    StepType step_type = 4;
  }

  // The type of icon - tells the frontend how to interpret the icon
  enum IconType {
    // Unspecified - the client should fall back on assuming it's a prism icon and using the `icon_name` field
    ICON_TYPE_UNSPECIFIED = 0;
    // An icon from the Prism icon library. Use the `icon_name` field to get the prism icon name
    ICON_TYPE_PRISM_ICON = 1;
    // A logo to match the theme of the app. Typically this is either the DoorDash or Caviar logo depending on the app
    ICON_TYPE_THEMED_LOGO = 2;
    // The client should display an icon matching the last used pickup travel mode.
    // For example, walking or driving.
    // On iOS, use `@AppStorage(UserDefaults.Key.lastUsedPickupTravelMode, store: .consumer)` to get the last used
    // travel mode.
    ICON_TYPE_PICKUP_TRAVEL_MODE = 3;
  }

  // What general step this is. Should be vertical agnostic.
  // UI producers can key on this step type to replace an existing step with a new, vertical-specific one.
  // For example, replacing the car icon with a drone icon in the Dasher step.
  enum StepType {
    // Unspecified
    STEP_TYPE_UNSPECIFIED = 0;
    // By default this is the first step, with a DoorDash logo icon.
    STEP_TYPE_ORDER_PLACED = 1;
    // By default this is the second step, with a merchant building icon.
    STEP_TYPE_MERCHANT = 2;
    // By default this is the third step, with a car icon.
    STEP_TYPE_DASHER = 3;
    // By default this is the fourth step, with a home icon.
    STEP_TYPE_ORDER_COMPLETE = 4;
  }

  // A list of steps to display on the progress bar
  repeated Step steps = 1;
}

// Payment Method Details message type
message PaymentMethodDetails {
  // Buttons to display on the payment card
  repeated Button buttons = 1;
}

/** Contains information about the return of an order **/
message ReturnOrderInfo {
  reserved 12;
  reserved "order_resolution_preview_id";

  // Title of the return card
  google.protobuf.StringValue title = 1;
  // Subtitle of the return card
  google.protobuf.StringValue subtitle = 2;
  // Title of the return primary button
  google.protobuf.StringValue button_title = 3;
  // Deep link url to navigate to on button interaction.
  google.protobuf.StringValue deep_link_url = 4;
  // Original order barcode "123456"
  google.protobuf.StringValue original_order_barcode = 5;
  // What step of the return is the Cx in right now
  ReturnOrderStatus status = 6;
  // Items eligible to be returned
  repeated google.protobuf.StringValue returnable_item_ids = 7;
  // Resolution options for the return
  google.protobuf.StringValue resolution_metadata = 8;
  // 30 days from now for example
  google.protobuf.Timestamp final_return_date = 9;
  // true v false depending on Mx
  google.protobuf.BoolValue receipt_upload_required = 10;
  // Original receipt captured by Dx
  google.protobuf.StringValue original_receipt_image = 11;
  // Different copy for inflating Mx
  google.protobuf.BoolValue is_inflating_mx = 13;
  // Return policy URL
  google.protobuf.StringValue return_policy_url = 14;

  /** Indicates the status of a return **/
  enum ReturnOrderStatus {
    // UNSPECIFIED
    RETURN_ORDER_STATUS_UNSPECIFIED = 0;
    // NOT STARTED
    RETURN_ORDER_STATUS_NOT_STARTED = 1;
    // INITIATED
    RETURN_ORDER_STATUS_INITIATED = 2;
    // BARCODE SCANNED
    RETURN_ORDER_STATUS_BARCODE_SCANNED = 3;
    // RETURN RECEIPT UPLOADED
    RETURN_ORDER_STATUS_RETURN_RECEIPT_UPLOADED = 4;
    // RETURN RECEIPT RETURN COMPLETE
    RETURN_ORDER_STATUS_RETURN_COMPLETE = 5;
    // RETURN RECEIPT REFUND COMPLETE
    RETURN_ORDER_STATUS_REFUND_COMPLETE = 6;
    // RETURN APPROVED
    RETURN_ORDER_STATUS_RETURN_APPROVED = 7;
    // RETURN REJECTED
    RETURN_ORDER_STATUS_RETURN_REJECTED = 8;
  }
}

// Default list view information
message DefaultListView {
  // Title of the list view
  google.protobuf.StringValue title = 1;
  // Details of the list view
  repeated DefaultRowItem details = 2;
  // Buttons shown on the list view
  repeated Button buttons = 3;
  // Url of header image
  google.protobuf.StringValue header_image_url = 4;
}

// Default row item information
message DefaultRowItem {
  // Start icon name of the row item
  google.protobuf.StringValue start_icon_name = 1;
  // Text for the row item
  google.protobuf.StringValue text = 2;
}

// Represents UI for explaining orders fulfilled across multiple stores
message MultiStoreBottomSheet {
  // Information about a single store fulfilling part of the order
  message StoreRow {
    // Store name displayed to user
    common.StyledText store_name = 1;
    // Store logo URL
    google.protobuf.StringValue image_url = 2;
    // Optional tag providing store context
    PostCheckoutTag tag = 3;
    // Estimated delivery time for items from this store
    common.StyledText eta_string = 4;
    // Additional store context shown below title
    common.StyledText subtitle = 5;
  }

  // Multi-store fulfillment bottom sheet title
  common.StyledText title = 1;
  // Supporting explanation text
  common.StyledText subtitle = 2;
  // List of stores fulfilling this order
  repeated StoreRow stores = 3;
  // Bottom sheet action buttons
  repeated Button button = 4;
  // Hero image URL for bottom-sheet
  google.protobuf.StringValue hero_image_url = 5;
}

// Represents UI for explaining silent store switch
message SilentInfoBanner {
  // Indicates use case
  enum UseCase {
    // Unspecified
    USE_CASE_UNSPECIFIED = 0;

    // Silent Hero (route to diff store/merchant altogether)
    USE_CASE_SILENT_HERO = 1;

    // Extended Hulk (route to same merchant/store type but diff store location)
    USE_CASE_EXTENDED_HULK = 2;
  }

  // Use case
  UseCase use_case = 1;

  // Banner title
  component_catalog.common.prism.components.v1.Text title = 2;

  // Banner subtitle
  component_catalog.common.prism.components.v1.Text subtitle = 3;

  // Banner trailing icon
  component_catalog.common.prism.shared.v1.Icon trailing_icon = 4;

  // Deep link url to navigate to an in-app destination
  google.protobuf.StringValue deep_link_action = 5;
}

// Represents a tag that can be displayed on the order tracking page
message PostCheckoutTag {
  // Message within the tag
  google.protobuf.StringValue display_string = 1;
  // Type of Tag
  PostCheckoutTagType type = 2;

  // Type of PostCheckoutTag
  enum PostCheckoutTagType {
    // Default state. Should never happen.
    POST_CHECKOUT_TAG_TYPE_UNSPECIFIED = 0;
    // Backup Order tag.
    POST_CHECKOUT_TAG_TYPE_BACKUP_ORDER = 1;
  }
}
