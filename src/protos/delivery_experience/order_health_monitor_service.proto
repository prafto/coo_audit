syntax = "proto3";

package delivery_experience.v1;

import "google/protobuf/wrappers.proto";
import "google/protobuf/timestamp.proto";

option java_multiple_files = true;
option java_generic_services = true;
option java_package = "delivery.experience";

/* The main Order Health Monitor gRPC service. */
service OrderHealthMonitorService {
   /* Creates the order monitor workflow for the requested delivery. */
   rpc CreateOrderMonitorWorkflow (CreateOrderMonitorWorkflowRequest) returns (CreateOrderMonitorWorkflowResponse) {}
   /* Creates the order monitor workflow for expected lateness. */
   rpc CreateLatenessMonitorWorkflow (CreateLatenessMonitorWorkflowRequest) returns (CreateLatenessMonitorWorkflowResponse) {}
   /* Updates the order monitor workflow for expected lateness. */
   rpc UpdateLatenessMonitorWorkflow (UpdateLatenessMonitorWorkflowRequest) returns (UpdateLatenessMonitorWorkflowResponse) {}
   /* Updates delivery's dropoff or cancel status. */
   rpc UpdateDeliveryStatus (UpdateDeliveryStatusRequest) returns (UpdateDeliveryStatusResponse) {}
   /* Creates the Mx late confirmation notification workflow for the requested pickup order */
   rpc CreatePickupMxLateConfirmWorkflow (CreatePickupMxLateConfirmWorkflowRequest) returns (CreatePickupMxLateConfirmWorkflowResponse) {}
   /* Creates the Cancellation Refund workflow for the cancelled order */
   rpc CreateCancellationRefundWorkflow (CreateCancellationRefundWorkflowRequest) returns (CreateCancellationRefundWorkflowResponse) {}
   /* Updates the Cancellation Refund workflow for the cancelled order */
   rpc UpdateCancellationRefundWorkflow (UpdateCancellationRefundWorkflowRequest) returns (UpdateCancellationRefundWorkflowResponse) {}
   /* Kick off the notification flow for Order May Be Ready */
   rpc HandleOrderMayBeReadyNotification(HandleOrderMayBeReadyNotificationRequest) returns (HandleOrderMayBeReadyNotificationResponse) {}
   /* Returns a list of deliveries which are late, used by realtime disaster tracker only */
   rpc GetRealtimeDisasterTrackerLateDeliveries(GetRealtimeDisasterTrackerLateDeliveriesRequest) returns (GetRealtimeDisasterTrackerLateDeliveriesResponse) {}
}

/* Contains info about the requested delivery. */
message CreateOrderMonitorWorkflowRequest {
  /* The requested delivery UUID. */
  string delivery_uuid = 1;
}

/* The response of creating order monitor workflow. */
message CreateOrderMonitorWorkflowResponse {
  /* Delivery UUID. */
  string delivery_uuid = 1;
}

/* Contains info about the requested delivery. */
message CreateLatenessMonitorWorkflowRequest {
  /* The requested delivery UUID. */
  string delivery_uuid = 1;
}

/* The response of creating order monitor workflow. */
message CreateLatenessMonitorWorkflowResponse {
  /* Delivery UUID. */
  string delivery_uuid = 1;
}

/* Contains info about the requested delivery. */
message UpdateLatenessMonitorWorkflowRequest {
  /* The requested delivery UUID. */
  string delivery_uuid = 1;
  /* The delivery has been dropped off. */
  bool dropped_off = 2;
  /* The delivery has been cancelled. */
  bool cancelled = 3;
  /* detail. */
  Detail detail = 4;

  /* Detail class */
  message Detail {
    /* The delivery is far away. */
    bool is_far_away_delivery = 1;
    /* Dasher geospoofing location */
    bool is_dasher_geospoofing = 2;
  }
}

/* The response of delivery status updating. */
message UpdateLatenessMonitorWorkflowResponse {
  /* Delivery UUID. */
  string delivery_uuid = 1;
}

/* Contains info about the requested delivery. */
message UpdateDeliveryStatusRequest {
  /* The requested delivery UUID. */
  string delivery_uuid = 1;
  /* The delivery has been dropped off. */
  bool dropped_off = 2;
  /* The delivery has been cancelled. */
  bool cancelled = 3;
}

/* The response of delivery status updating. */
message UpdateDeliveryStatusResponse {
  /* Delivery UUID. */
  string delivery_uuid = 1;
}

/* Request of CreatePickupMxLateConfirmWorkflow */
message CreatePickupMxLateConfirmWorkflowRequest {
  /* Delivery UUID */
  google.protobuf.StringValue delivery_uuid = 1;
  /* Delivery ID */
  google.protobuf.Int64Value delivery_id = 2;
}

/* Response of CreatePickupMxLateConfirmWorkflow */
message CreatePickupMxLateConfirmWorkflowResponse {
}

/* Request of CreateCancellationRefundWorkflow */
message CreateCancellationRefundWorkflowRequest {
  /* Delivery UUID */
  google.protobuf.StringValue delivery_uuid = 1;
  /* Order UUID. */
  google.protobuf.StringValue order_uuid = 2;
}

/* Response of CreateCancellationRefundWorkflow */
message CreateCancellationRefundWorkflowResponse {
}

/* Request of UpdateCancellationRefundWorkflow */
message UpdateCancellationRefundWorkflowRequest {
  /* Delivery UUID */
  google.protobuf.StringValue delivery_uuid = 1;
  /* Is The delivery refunded */
  google.protobuf.BoolValue is_refunded = 2;
}

/* Response of UpdateCancellationRefundWorkflow */
message UpdateCancellationRefundWorkflowResponse {
}

/* Request to HandleOrderMayBeReadyNotification */
message HandleOrderMayBeReadyNotificationRequest {
  /* Delivery UUID */
  google.protobuf.StringValue delivery_uuid = 1;
  /* Delivery ID */
  google.protobuf.Int64Value delivery_id = 2;
}

/*
  Response of HandleOrderMayBeReadyNotification
  This is a standard response recommended by google
  example for how client handles the response here
  https://www.grpc.io/docs/guides/error/#richer-error-model
*/
message HandleOrderMayBeReadyNotificationResponse {
}

/* problem type */
enum ProblemType {
  /* unspecified */
  PROBLEM_TYPE_UNSPECIFIED = 0;
  /* RDT Predicted Late (20 min+), got from eta service */
  PROBLEM_TYPE_EXPECTED_LATE = 1;
  /* RDT Actual Late (5 min+), calculated from (current time - quoted time) */
  PROBLEM_TYPE_LATE = 2;
  /* delivery promise late */
  PROBLEM_TYPE_DELIVERY_PROMISE_LATE = 3 [deprecated = true];
  /* RDT Expected Late (5 min+), calculated from (dynamic eta - quoted time) */
  PROBLEM_TYPE_EXPECTED_LATE_CALCULATED = 4;
  /* delivery promise predicted late (dynamic eta - promised time) */
  PROBLEM_TYPE_DELIVERY_PROMISE_PREDICTED_LATE = 5;
  /* delivery promise actual late (current time - promised time) */
  PROBLEM_TYPE_DELIVERY_PROMISE_ACTUAL_LATE = 6;
  /* RDT Cancellation */
  PROBLEM_TYPE_CANCELLATION = 7;
  /* pickup: Mx late confirmation notification https://docs.google.com/document/d/11oYYh9_WFA1kv7-YGdfO1zbD_2SXlNW8_HmFmUlBwe8/edit# */
  PROBLEM_TYPE_PICKUP_ORDER_MX_LATE_CONFIRM = 8;
  /* CXL Refund Method Not Selected */
  PROBLEM_TYPE_REFUND_METHOD_NOT_SELECTED = 9;
  /* RDT Far Away Delivery */
  PROBLEM_TYPE_FAR_AWAY_DELIVERY = 10;
  /* Dasher geospoofing */
  PROBLEM_TYPE_DASHER_GEOSPOOFING = 11;
  /* McDonald cancelled orders */
  PROBLEM_TYPE_MCDONALD_CANCELLATION = 12;
  /* Valentine's day scheduled orders */
  PROBLEM_TYPE_VALENTINE_SCHEDULE = 13;
  /* Valentine's day late orders */
  PROBLEM_TYPE_VALENTINE_LATE = 14;
}

/* Message for kafka topic order_health_monitor_time_based_event */
message OrderHealthMonitorTimeBasedEvent {
  /* Delivery UUID */
  string delivery_uuid = 1;
  reserved 2;
  reserved "expected_late";
  /* problem type */
  ProblemType problem_type = 3;
}

/* Message for expected late event */
message ExpectedLateEvent {
  /* DynamicETAResponse.ETA.estimate */
  google.protobuf.Timestamp estimate = 1;
  /* DynamicETAResponse.ETA.range_min */
  google.protobuf.Timestamp range_min = 2;
  /* DynamicETAResponse.ETA.range_max */
  google.protobuf.Timestamp range_max = 3;
  /* DynamicETAResponse.ExpectedLateness.lateness_seconds */
  int64 lateness_seconds = 4;
}

/* GetRealtimeDisasterTrackerLateDeliveriesRequest */
message GetRealtimeDisasterTrackerLateDeliveriesRequest {
  /* Maximum output list size, optional (max: 200) */
  google.protobuf.Int32Value list_size = 1;
  /* Past minutes as time range, optional (max: 120 minutes) */
  google.protobuf.Int32Value time_range_minutes = 2;
  /* offset for pagination, optional (default: 0) */
  google.protobuf.Int32Value pagination_offset = 3;
  /* agent id, optional */
  google.protobuf.Int32Value agent_id = 4;
  /* problem type, optional */
  ProblemType problem_type = 5;
  /* delivery address country, optional */
  google.protobuf.StringValue country = 6;
  /* Cx type, optional */
  GetRealtimeDisasterTrackerLateDeliveriesResponse.ConsumerType cx_type = 7;
}

/* GetRealtimeDisasterTrackerLateDeliveriesResponse */
message GetRealtimeDisasterTrackerLateDeliveriesResponse {
  /* List of deliveries which are late */
  repeated Delivery deliveries = 1;
  /* total row count */
  google.protobuf.Int32Value total_row_count = 2;

  /* consumer type */
  enum ConsumerType {
    /* unspecified */
    CONSUMER_TYPE_UNSPECIFIED = 0;
    /* whale */
    CONSUMER_TYPE_WHALE = 1;
    /* non_whale */
    CONSUMER_TYPE_NON_WHALE = 2;
  }

  /* delivery type */
  enum DeliveryType {
    /* unspecified */
    DELIVERY_TYPE_UNSPECIFIED = 0;
    /* delivery */
    DELIVERY_TYPE_DELIVERY = 1;
    /* pickup */
    DELIVERY_TYPE_PICKUP = 2;
  }

  /* Wrapper class for each returned row of record */
  message Delivery {
    /* order unique identifier */
    google.protobuf.Int64Value order_id = 1;
    /* consumer name */
    google.protobuf.StringValue consumer_name = 2;
    /* latest milestone reached in the order */
    google.protobuf.StringValue order_status = 3;
    /* consumerâ€™s phone number */
    google.protobuf.StringValue consumer_phone_number = 4;
    /* ETA we promised customers at checkout */
    google.protobuf.Timestamp quoted_delivery_time = 5;
    /* current ETA that takes into account latest order events */
    google.protobuf.Timestamp dynamic_eta = 6;
    /* difference between dynamic ETA and quoted ETA */
    google.protobuf.Int64Value lateness = 7;
    /* Mx confirmation latency, time between delivery being created and the order being confirmed by store */
    google.protobuf.Int64Value time_to_confirm_order = 8;
    /* Dx confirmation latency, time between delivery being created and Dx being confirmed */
    google.protobuf.Int64Value time_to_assign_dx = 9;
    /* number of times Dx was unassigned */
    google.protobuf.Int32Value number_of_dx_unassigns = 10;
    /* time spent by Dx at the Mx to collect items */
    google.protobuf.Int64Value pickup_time = 11;
    /* Delivery or Pickup */
    DeliveryType delivery_type = 12;
    /* ID of existing Salesforce case for that order, in case Cx have already reached out to support */
    google.protobuf.StringValue salesforce_case_id = 13;
    /* Whales or non-whales */
    ConsumerType cx_type = 14;
    /* Delivery UUID */
    google.protobuf.StringValue delivery_uuid = 15;
    /* EXPECTED_LATE or LATE */
    ProblemType problem_type = 16;
    /* time when the problem got created */
    google.protobuf.Timestamp created_at = 17;
    /* time when the Dx collect items */
    google.protobuf.Timestamp pickup_timestamp = 18;
    /* agent id */
    google.protobuf.Int32Value agent_id = 19;
    /* delivery address country */
    google.protobuf.StringValue country = 20;
  }
}

/*
    A segment message proto for tracking pickup order may be ready notification
*/
message PickupOrderMayBeReadySegmentMessage {
  /* the delivery uuid from delivery service */
  string delivery_uuid = 1;
  /* the delivery id from delivery service */
  string delivery_id = 2;
  /* pickup order ready eta timestamp from geo_intel */
  string pickup_eta = 3;
  /* the store id from delivery service */
  string store_id = 4;
  /* order creator_id from delivery service */
  string user_id = 5;
}
