syntax = "proto3";
// buf:lint:ignore DIRECTORY_SAME_PACKAGE
// buf:lint:ignore PACKAGE_VERSION_SUFFIX
package merchant_affordability;

import "common/service_client_config.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.merchant_affordability";

// Service that exposes APIs to determine inflation intel on merchants
service AffordabilityService {
  // Endpoint to trigger inflation intel matching workflow
  rpc GetInflationIntel(GetInflationIntelRequest) returns (GetInflationIntelResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 1500;
    option (service_client.client_method_config).retry_config.max_attempts = 1;
  }

  // Endpoint to trigger inflation intel matching workflow for businesses
  rpc TriggerMatchingWorkflowByBusiness(TriggerMatchingWorkflowByBusinessRequest) returns (TriggerMatchingWorkflowByBusinessResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 1500;
    option (service_client.client_method_config).retry_config.max_attempts = 1;
  }

  // Endpoint to trigger inflation intel matching workflow for stores
  rpc TriggerMatchingWorkflowForDxPhotosStores(TriggerMatchingWorkflowForDxPhotosStoresRequest) returns (TriggerMatchingWorkflowForDxPhotosStoresResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 1500;
    option (service_client.client_method_config).retry_config.max_attempts = 1;
  }

  // Endpoint to upsert Web Scraper menu items data
  rpc UpsertWebScraperMenuItems(UpsertWebScraperMenuItemsRequest) returns (UpsertWebScraperMenuItemsResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 1500;
    option (service_client.client_method_config).retry_config.max_attempts = 1;
  }

  // Endpoint to upsert Web Scraper menu options data
  rpc UpsertWebScraperMenuOptions(UpsertWebScraperMenuOptionsRequest) returns (UpsertWebScraperMenuOptionsResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 1500;
    option (service_client.client_method_config).retry_config.max_attempts = 1;
  }

  // Endpoint to trigger dx photos s3 to google drive upload workflow
  rpc TriggerDxPhotosS3ToGDUploadWorkflow(TriggerDxPhotosS3ToGDUploadWorkflowRequest) returns (TriggerDxPhotosS3ToGDUploadWorkflowResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 1500;
    option (service_client.client_method_config).retry_config.max_attempts = 1;
  }

  // Endpoint to trigger dx photos ocr to google drive upload workflow
  rpc TriggerDxPhotosOCRToGDUploadWorkflow(TriggerDxPhotosOCRToGDUploadWorkflowRequest) returns (TriggerDxPhotosOCRToGDUploadWorkflowResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 1500;
    option (service_client.client_method_config).retry_config.max_attempts = 1;
  }

  // Endpoint to trigger inflation insights s3 to google drive upload workflow
  rpc TriggerInflationInsightsS3ToGDUploadWorkflow(TriggerInflationInsightsS3ToGDUploadWorkflowRequest) returns (TriggerInflationInsightsS3ToGDUploadWorkflowResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 1500;
    option (service_client.client_method_config).retry_config.max_attempts = 1;
  }

  // Endpoint to trigger dx photos google drive to crdb upload workflow
  rpc TriggerDxPhotosGDToCrdbUploadWorkflow(TriggerDxPhotosGDToCrdbUploadWorkflowRequest) returns (TriggerDxPhotosGDToCrdbUploadWorkflowResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 1500;
    option (service_client.client_method_config).retry_config.max_attempts = 1;
  }

  // Endpoint to trigger dx photos ocr google drive to crdb upload workflow
  rpc TriggerDxPhotosOCRGDToCrdbUploadWorkflow(TriggerDxPhotosOCRGDToCrdbUploadWorkflowRequest) returns (TriggerDxPhotosOCRGDToCrdbUploadWorkflowResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 1500;
    option (service_client.client_method_config).retry_config.max_attempts = 1;
  }

  // Endpoint to add new stores to dx photos
  rpc AddNewStoresToDxPhotos(AddNewStoresToDxPhotosRequest) returns (AddNewStoresToDxPhotosResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 5000;
    option (service_client.client_method_config).retry_config.max_attempts = 1;
  }

  // Endpoint to trigger recollect dx photos for stores
  rpc TriggerDxPhotosRecollectionForStoresWorkflow(TriggerDxPhotosRecollectionForStoresWorkflowRequest) returns (TriggerDxPhotosRecollectionForStoresWorkflowResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 1500;
    option (service_client.client_method_config).retry_config.max_attempts = 1;
  }

  // Endpoint to get metadata for stores enabled for dx photos
  rpc GetDxPhotosStoreMetadata(GetDxPhotosStoreMetadataRequest) returns (GetDxPhotosStoreMetadataResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 1500;
    option (service_client.client_method_config).retry_config.max_attempts = 1;
  }

  // Endpoint to create folders/excel sheets in GoogleDrive
  rpc CreateFilesWithOnlyMetadata(CreateFilesWithOnlyMetadataRequest) returns (CreateFilesWithOnlyMetadataResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 1500;
    option (service_client.client_method_config).retry_config.max_attempts = 1;
  }

  // Endpoint to trigger recollect stores identification workflow
  rpc TriggerDxPhotosRecollectStoresIdentificationWorkflow(TriggerDxPhotosRecollectStoresIdentificationWorkflowRequest) returns (TriggerDxPhotosRecollectStoresIdentificationWorkflowResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 1500;
    option (service_client.client_method_config).retry_config.max_attempts = 1;
  }

  // Endpoint to trigger recollect stores identification workflow
  rpc TriggerS3GDStoresListUpdateWorkflow(TriggerS3GDStoresListUpdateWorkflowRequest) returns (TriggerS3GDStoresListUpdateWorkflowResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 1500;
    option (service_client.client_method_config).retry_config.max_attempts = 1;
  }

  // Endpoint to trigger manual rematch data generation workflow
  rpc TriggerDxPhotosManualRematchWorkflow(TriggerDxPhotosManualRematchWorkflowRequest) returns (TriggerDxPhotosManualRematchWorkflowResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 1500;
    option (service_client.client_method_config).retry_config.max_attempts = 1;
  }

  // Endpoint to trigger manual match data ingestion workflow
  rpc TriggerDxPhotosManualMatchIngestionWorkflow(TriggerDxPhotosManualMatchIngestionWorkflowRequest) returns (TriggerDxPhotosManualMatchIngestionWorkflowResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 1500;
    option (service_client.client_method_config).retry_config.max_attempts = 1;
  }

  // Endpoint to trigger adding newly onboarded stores to dx photos workflow
  rpc TriggerDxPhotosAddNewlyOnboardedStoresWorkflow(TriggerDxPhotosAddNewlyOnboardedStoresWorkflowRequest) returns (TriggerDxPhotosAddNewlyOnboardedStoresWorkflowResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 1500;
    option (service_client.client_method_config).retry_config.max_attempts = 1;
  }

  // Endpoint to trigger adding stores with expired photos to dx photos workflow
  rpc TriggerDxPhotosAddStoresWithExpiredPhotosWorkflow(TriggerDxPhotosAddStoresWithExpiredPhotosWorkflowRequest) returns (TriggerDxPhotosAddStoresWithExpiredPhotosWorkflowResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 1500;
    option (service_client.client_method_config).retry_config.max_attempts = 1;
  }

  // Endpoint to trigger adding newly onboarded stores to dx photos workflow
  rpc TriggerDxPhotosS3MetadataUpdateWorkflow(TriggerDxPhotosS3MetadataUpdateWorkflowRequest) returns (TriggerDxPhotosS3MetadataUpdateWorkflowResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 1500;
    option (service_client.client_method_config).retry_config.max_attempts = 1;
  }

  // Endpoint to validate menu photos
  rpc ValidateMenuPhotos(ValidateMenuPhotosRequest) returns (ValidateMenuPhotosResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 8000;
    option (service_client.client_method_config).retry_config.max_attempts = 2;
  }

  // Endpoint to promote valid images to prod folder
  rpc PromoteValidImagesToProdFolder(PromoteValidImagesToProdFolderRequest) returns (PromoteValidImagesToProdFolderResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 1500;
    option (service_client.client_method_config).retry_config.max_attempts = 3;
  }

  // Endpoint to add stores for recollection
  rpc AddStoresForRecollection(AddStoresForRecollectionRequest) returns (AddStoresForRecollectionResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 1500;
    option (service_client.client_method_config).retry_config.max_attempts = 3;
  }

  // Endpoint to remove low res images from prod folder
  rpc RemoveLowResImagesFromProdFolder(RemoveLowResImagesFromProdFolderRequest) returns (RemoveLowResImagesFromProdFolderResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 5000;
    option (service_client.client_method_config).retry_config.max_attempts = 3;
  }
}

// RemoveLowResImagesFromProdFolderResponse
message RemoveLowResImagesFromProdFolderResponse {
  // Number of images removed
  google.protobuf.Int32Value num_images_removed = 1;
}

// RemoveLowResImagesFromProdFolderRequest
message RemoveLowResImagesFromProdFolderRequest {
  // Store Id
  google.protobuf.StringValue store_id = 1;

  // Delivery UUID
  google.protobuf.StringValue delivery_uuid = 2;
}

// AddStoresForRecollectionRequest
message AddStoresForRecollectionRequest {
  // Store Ids
  repeated google.protobuf.Int32Value store_id = 1;
}

// AddStoresForRecollectionResponse
message AddStoresForRecollectionResponse {
  // Store recollection response
  repeated StoreRecollectionResponse store_recollection_response = 1;
}

// Store Recollection Response
message StoreRecollectionResponse {
  // Store Id
  google.protobuf.Int32Value store_id = 1;

  // Response Status
  RecollectStoreResponseStatus store_recollection_status = 2;
}

// PromoteValidImagesToProdFolderRequest
message PromoteValidImagesToProdFolderRequest {
  // Store Id
  google.protobuf.StringValue store_id = 1;

  // Delivery UUID
  google.protobuf.StringValue delivery_uuid = 2;
}

// PromoteValidImagesToProdFolderResponse
message PromoteValidImagesToProdFolderResponse {
  // Response Status
  ResponseStatus response_status = 1;

  // Number of photos in S3
  google.protobuf.Int32Value num_photos_in_s3 = 2;

  // Number of good photos
  google.protobuf.Int32Value num_good_photos = 3;

  // Number of bad photos
  google.protobuf.Int32Value num_bad_photos = 4;
}

// ValidateMenuPhotoRequest
message ValidateMenuPhotosRequest {
  // Menu photo s3 link
  repeated google.protobuf.StringValue photo_s3_link = 1;
}

// MenuPhotoValidationResults
message MenuPhotoValidationResult {
  // Menu photo s3 link
  google.protobuf.StringValue photo_s3_link = 1;

  // Validation status
  google.protobuf.BoolValue is_photo_a_menu = 2;
}

// ValidateMenuPhotoResponse
message ValidateMenuPhotosResponse {
  // Validation status
  repeated MenuPhotoValidationResult validation_results = 1;
}

// TriggerDxPhotosS3MetadataUpdateWorkflowRequest
message TriggerDxPhotosS3MetadataUpdateWorkflowRequest {
  // Workflow date string in YYYY_MM_DD format.
  google.protobuf.StringValue workflow_date_str = 1;

  // Max look back days.
  google.protobuf.Int32Value max_look_back_days = 2;
}

// TriggerDxPhotosS3MetadataUpdateWorkflowResponse
message TriggerDxPhotosS3MetadataUpdateWorkflowResponse {
  // Dx Photos s3 metadata update workflow Id(s)
  repeated google.protobuf.StringValue workflow_ids = 1;
}

// TriggerDxPhotosAddStoresWithExpiredPhotosWorkflowRequest
message TriggerDxPhotosAddStoresWithExpiredPhotosWorkflowRequest {
  // Workflow date string in YYYY_MM_DD format.
  google.protobuf.StringValue workflow_date_str = 1;

  // Max look back days.
  google.protobuf.Int32Value max_look_back_days = 2;
}

// TriggerDxPhotosAddStoresWithExpiredPhotosWorkflowResponse
message TriggerDxPhotosAddStoresWithExpiredPhotosWorkflowResponse {
  // Dx Photos add stores with expired photos to dx photos workflow Id(s)
  repeated google.protobuf.StringValue workflow_ids = 1;
}

// TriggerDxPhotosAddNewlyOnboardedStoresWorkflowRequest
message TriggerDxPhotosAddNewlyOnboardedStoresWorkflowRequest {
  // Workflow date string in YYYY_MM_DD format.
  google.protobuf.StringValue workflow_date_str = 1;

  // Max look back days.
  google.protobuf.Int32Value max_look_back_days = 2;
}

// TriggerDxPhotosAddNewlyOnboardedStoresWorkflowResponse
message TriggerDxPhotosAddNewlyOnboardedStoresWorkflowResponse {
  // Dx Photos add newly onboarded stores to dx photos workflow Id(s)
  repeated google.protobuf.StringValue workflow_ids = 1;
}

// TriggerDxPhotosManualMatchIngestionWorkflowRequest
message TriggerDxPhotosManualMatchIngestionWorkflowRequest {
  // Workflow date string in YYYY_MM_DD format.
  google.protobuf.StringValue workflow_date_str = 1;

  // Max look back days.
  google.protobuf.Int32Value max_look_back_days = 2;
}

// TriggerDxPhotosManualMatchIngestionWorkflowResponse
message TriggerDxPhotosManualMatchIngestionWorkflowResponse {
  // Dx Photos manual match ingestion workflow Id(s)
  repeated google.protobuf.StringValue workflow_ids = 1;
}

// TriggerDxPhotosManualRematchWorkflowRequest
message TriggerDxPhotosManualRematchWorkflowRequest {
  // Workflow date string in YYYY_MM_DD format.
  google.protobuf.StringValue workflow_date_str = 1;

  // Max look back days.
  google.protobuf.Int32Value max_look_back_days = 2;

  // Max look back days for active deliveries.
  google.protobuf.Int32Value max_look_back_days_for_active_deliveries = 3;
}

// TriggerDxPhotosManualRematchWorkflowResponse
message TriggerDxPhotosManualRematchWorkflowResponse {
  // Dx Photos manual rematch Workflow Id(s)
  repeated google.protobuf.StringValue workflow_ids = 1;
}

// TriggerS3GDStoresListUpdateWorkflowRequest
message TriggerS3GDStoresListUpdateWorkflowRequest {
  // Workflow date string in YYYY_MM_DD format.
  google.protobuf.StringValue workflow_date_str = 1;

  // Max look back date string (inclusive) in YYYY_MM_DD format.
  google.protobuf.StringValue max_look_back_date_str = 2;

  // Store priority to process
  repeated google.protobuf.Int32Value store_priority_list = 3;

  // Offset for each priority
  repeated google.protobuf.Int64Value offset_list = 4;

  // should backfill permissions
  google.protobuf.BoolValue should_backfill_permissions = 5;

  // batch size for google drive permissions update
  google.protobuf.Int32Value batch_size = 6;
}

// TriggerS3GDStoresListUpdateWorkflowResponse
message TriggerS3GDStoresListUpdateWorkflowResponse {
  // Dx Photos recollect stores identification Workflow Id
  repeated google.protobuf.StringValue workflow_ids = 1;
}

// TriggerDxPhotosRecollectStoresIdentificationWorkflowRequest
message TriggerDxPhotosRecollectStoresIdentificationWorkflowRequest {
  // Workflow date string in YYYY_MM_DD format.
  google.protobuf.StringValue workflow_date_str = 1;

  // Max look back date string (inclusive) in YYYY_MM_DD format.
  google.protobuf.StringValue max_look_back_date_str = 2;
}

// TriggerDxPhotosRecollectStoresIdentificationWorkflowResponse
message TriggerDxPhotosRecollectStoresIdentificationWorkflowResponse {
  // Dx Photos recollect stores identification Workflow Id
  repeated google.protobuf.StringValue workflow_ids = 1;
}

// CreateFilesWithOnlyMetadataResponse
message CreateFilesWithOnlyMetadataResponse {
  // File Ids
  repeated google.protobuf.StringValue file_ids = 1;
}

// CreateFilesWithOnlyMetadataRequest
message CreateFilesWithOnlyMetadataRequest {
  // List of FileWithMetadata
  repeated FileWithMetadata files_with_metadata = 1;
}

// FileWithMetadata
message FileWithMetadata {
  // File name
  google.protobuf.StringValue file_name = 1;

  // File type - should be either
  // application/vnd.google-apps.spreadsheet or
  // application/vnd.google-apps.folder
  google.protobuf.StringValue file_type = 2;

  // Id of parent folder
  google.protobuf.StringValue parent_id = 3;
}

// GetDxPhotosStoreMetadataRequest
message GetDxPhotosStoreMetadataRequest {
  // Store Id
  google.protobuf.Int32Value store_id = 1;
}

// GetDxPhotosStoreMetadataResponse
message GetDxPhotosStoreMetadataResponse {
  // Store with metadata
  StoreWithMetadata stores_with_metadata = 1;
}

// TriggerDxPhotosRecollectionForStoresWorkflowRequest
message TriggerDxPhotosRecollectionForStoresWorkflowRequest {
  // Workflow date string in YYYY_MM_DD format.
  google.protobuf.StringValue workflow_date_str = 1;

  // Max look back date string (inclusive) in YYYY_MM_DD format.
  google.protobuf.StringValue max_look_back_date_str = 2;
}

// TriggerDxPhotosRecollectionForStoresWorkflowResponse
message TriggerDxPhotosRecollectionForStoresWorkflowResponse {
  // Dx Photos recollection for stores Workflow Id
  repeated google.protobuf.StringValue workflow_ids = 1;
}

// AddNewStoresToDxPhotosRequest
message AddNewStoresToDxPhotosRequest {
  // List of stores with metadata to be added to Dx Photos flow
  repeated StoreWithMetadata stores_with_metadata = 1;
}

// AddNewStoresToDxPhotosResponse
message AddNewStoresToDxPhotosResponse {
  // Response Status
  ResponseStatus response_status = 1;

  // Net new stores added count
  google.protobuf.Int32Value net_new_stores_added_count = 2;

  // Recollection stores added count
  google.protobuf.Int32Value recollection_stores_added_count = 3;

  // Unique stores in request count
  google.protobuf.Int32Value unique_stores_count = 4;
}

// StoreWithMetadata
message StoreWithMetadata {
  // Store Id
  google.protobuf.Int32Value store_id = 1;

  // Store Priority for copying from s3 to google drive as well as from google drive to crdb.
  google.protobuf.Int32Value store_priority = 2;

  // store metadata
  google.protobuf.StringValue metadata = 3;

  // Number of times photos have been recollected for store.
  google.protobuf.Int32Value recollect_count = 4;

  // Max number of times photos can be recollected for a store.
  google.protobuf.Int32Value max_recollect_count = 5;

  // Upper limit of the number of photos uploaded for a store.
  // If number of photos for store in S3 >= max_num_photos, store will not be part of dx photos.
  google.protobuf.Int32Value max_num_photos = 6;

  // Number of photos uploaded for a store.
  google.protobuf.Int32Value current_num_photos = 7;
}

// TriggerDxPhotosGDToCrdbUploadWorkflowRequest
message TriggerDxPhotosGDToCrdbUploadWorkflowRequest {
  // Workflow date string in YYYY_MM_DD format.
  google.protobuf.StringValue workflow_date_str = 1;

  // Max look back date string (inclusive) in YYYY_MM_DD format.
  google.protobuf.StringValue max_look_back_date_str = 2;
}

// TriggerDxPhotosGDToCrdbUploadWorkflowResponse
message TriggerDxPhotosGDToCrdbUploadWorkflowResponse {
  // Dx Photos GD to Crdb Upload Workflow Id
  repeated google.protobuf.StringValue workflow_ids = 1;
}

// TriggerDxPhotosOCRGDToCrdbUploadWorkflowRequest
message TriggerDxPhotosOCRGDToCrdbUploadWorkflowRequest {
  // Workflow date string in YYYY_MM_DD format.
  google.protobuf.StringValue workflow_date_str = 1;

  // Max look back date string (inclusive) in YYYY_MM_DD format.
  google.protobuf.StringValue max_look_back_date_str = 2;
}

// TriggerDxPhotosOCRGDToCrdbUploadWorkflowResponse
message TriggerDxPhotosOCRGDToCrdbUploadWorkflowResponse {
  // Dx Photos OCR GD to Crdb Upload Workflow Id
  repeated google.protobuf.StringValue workflow_ids = 1;
}

// TriggerDxPhotosS3ToGDUploadWorkflowRequest
message TriggerDxPhotosS3ToGDUploadWorkflowRequest {
  // Workflow date string in YYYY_MM_DD format.
  google.protobuf.StringValue workflow_date_str = 1;

  // Max look back date string (inclusive) in YYYY_MM_DD format.
  google.protobuf.StringValue max_look_back_date_str = 2;
}

// TriggerDxPhotosS3ToGDUploadWorkflowResponse
message TriggerDxPhotosS3ToGDUploadWorkflowResponse {
  // Dx Photos S3 to GD Upload Workflow Id
  repeated google.protobuf.StringValue workflow_ids = 1;
}

// TriggerDxPhotosOCRToGDUploadWorkflowRequest
message TriggerDxPhotosOCRToGDUploadWorkflowRequest {
  // Workflow date string in YYYY_MM_DD format.
  google.protobuf.StringValue workflow_date_str = 1;

  // Max look back date string (inclusive) in YYYY_MM_DD format.
  google.protobuf.StringValue max_look_back_date_str = 2;
}

// TriggerDxPhotosOCRToGDUploadWorkflowResponse
message TriggerDxPhotosOCRToGDUploadWorkflowResponse {
  // Dx Photos OCR to GD Upload Workflow Id
  repeated google.protobuf.StringValue workflow_ids = 1;
}

// TriggerInflationInsightsS3ToGDUploadWorkflowRequest
message TriggerInflationInsightsS3ToGDUploadWorkflowRequest {
  // Workflow date string in YYYY_MM_DD format.
  google.protobuf.StringValue workflow_date_str = 1;

  // Max look back days.
  google.protobuf.Int64Value max_look_back_days = 2;
}

// TriggerInflationInsightsS3ToGDUploadWorkflowResponse
message TriggerInflationInsightsS3ToGDUploadWorkflowResponse {
  // Inflation Insights S3 to GD Upload Workflow Id
  repeated google.protobuf.StringValue workflow_ids = 1;
}

// GetInflationIntelRequest
message GetInflationIntelRequest {
  // Data source
  google.protobuf.StringValue source = 1;
  // Store Details
  repeated StoreDetails store_details = 2;
}

// Store details to retrieve inflation intel
message StoreDetails {
  // Store Id
  google.protobuf.StringValue store_id = 1;
  // Business Id
  google.protobuf.StringValue business_id = 2;
  // Merchant Name
  google.protobuf.StringValue merchant_name = 3;
  // Ingestion Timestamp
  google.protobuf.Timestamp ingestion_timestamp = 4;
}

// GetInflationIntelResponse
message GetInflationIntelResponse {
  // Inflation intel matching workflow Id
  google.protobuf.StringValue workflow_id = 1;
}

// TriggerMatchingWorkflowByBusinessRequest
message TriggerMatchingWorkflowByBusinessRequest {
  // Data source
  google.protobuf.StringValue source = 1;
  // Business Details
  BusinessDetails business_details = 2;
}

// Store details to retrieve inflation intel
message BusinessDetails {
  // Store Id
  google.protobuf.StringValue business_name = 1;
  // Business Id
  repeated google.protobuf.StringValue business_id = 2;
  // Country Short Name. Ex: US
  google.protobuf.StringValue country_short_name = 3;
}

// TriggerMatchingWorkflowByBusinessResponse
message TriggerMatchingWorkflowByBusinessResponse {
  // Inflation intel matching workflow Ids
  repeated google.protobuf.StringValue workflow_ids = 1;
}

// UpsertWebScraperMenuItemsRequest
message UpsertWebScraperMenuItemsRequest {
  // Web Scraper Menu Items
  repeated WebScraperMenuItem web_scraper_menu_items = 1;
}

// // Web Scraper Menu Item
message WebScraperMenuItem {
  // Store Id
  google.protobuf.StringValue store_id = 1;
  // Business Id
  google.protobuf.StringValue business_id = 2;
  // Item Id
  google.protobuf.StringValue item_id = 3;
  // Item Price
  google.protobuf.FloatValue item_price = 4;
  // Item Name
  google.protobuf.StringValue item_name = 5;
  // Item Description
  google.protobuf.StringValue item_description = 6;
  // Item Category Name
  google.protobuf.StringValue item_category_name = 7;
  // Source Creation Timestamp
  google.protobuf.Timestamp source_creation_timestamp = 8;
  // Metadata
  google.protobuf.StringValue metadata = 9;
  // Item Delivery Price
  google.protobuf.FloatValue item_delivery_price = 10;
}

// UpsertWebScraperMenuItemsResponse
message UpsertWebScraperMenuItemsResponse {
  // Response Status
  ResponseStatus response_status = 1;
}

// UpsertWebScraperMenuOptionsRequest
message UpsertWebScraperMenuOptionsRequest {
  // Web Scraper Menu Options
  repeated WebScraperMenuOption web_scraper_menu_options = 1;
}

// // Web Scraper Menu Option
message WebScraperMenuOption {
  // Store Id
  google.protobuf.StringValue store_id = 1;
  // Business Id
  google.protobuf.StringValue business_id = 2;
  // Option Id
  google.protobuf.StringValue option_id = 3;
  // Option Price
  google.protobuf.FloatValue option_price = 4;
  // Option Name
  google.protobuf.StringValue option_name = 5;
  // Option Description
  google.protobuf.StringValue option_description = 6;
  // Item Category Name
  google.protobuf.StringValue item_category_name = 7;
  // Source Creation Timestamp
  google.protobuf.Timestamp source_creation_timestamp = 8;
  // Metadata
  google.protobuf.StringValue metadata = 9;
  // Item Id
  google.protobuf.StringValue item_id = 10;
  // Option Delivery Price
  google.protobuf.FloatValue option_delivery_price = 11;
}

// UpsertWebScraperMenuOptionsResponse
message UpsertWebScraperMenuOptionsResponse {
  // Response Status
  ResponseStatus response_status = 1;
}

// TriggerMatchingWorkflowForDxPhotosStoresRequest
message TriggerMatchingWorkflowForDxPhotosStoresRequest {
  // List of store_ids for which to trigger the matching workflow.
  repeated google.protobuf.Int32Value store_ids = 1;
}

// TriggerMatchingWorkflowForDxPhotosStoresResponse
message TriggerMatchingWorkflowForDxPhotosStoresResponse {
  // Response Status
  ResponseStatus response_status = 1;
}

// gRPC call status
enum ResponseStatus {
  // Unspecified
  RESPONSE_STATUS_UNSPECIFIED = 0;
  // gRPC call Success
  RESPONSE_STATUS_SUCCESS = 1;
  // gRPC call Failure
  RESPONSE_STATUS_FAILURE = 2;
}

// Recollect Store Response Status
enum RecollectStoreResponseStatus {
  // Unspecified
  RECOLLECT_STORE_RESPONSE_STATUS_UNSPECIFIED = 0;
  // Success - Updated Max Num Photos
  RECOLLECT_STORE_RESPONSE_STATUS_SUCCESS_UPDATED_MAX_NUM_PHOTOS = 1;
  // No Op - Current Num Photos Less Than Max Num Photos
  RECOLLECT_STORE_RESPONSE_STATUS_NO_OP_CURRENT_NUM_PHOTOS_LESS_THAN_MAX_NUM_PHOTOS = 2;
  // No Op - Recollect Count Greater Than Max Recollect Count
  RECOLLECT_STORE_RESPONSE_STATUS_NO_OP_RECOLLECT_COUNT_GREATER_THAN_MAX_RECOLLECT_COUNT = 3;
  // No Op - Store Recently Added For Recollection
  RECOLLECT_STORE_RESPONSE_STATUS_NO_OP_STORE_RECENTLY_ADDED_FOR_RECOLLECTION = 4;
  // No Op - Store Not In Dx Photos Stores Metadata Table
  RECOLLECT_STORE_RESPONSE_STATUS_NO_OP_STORE_NOT_IN_DX_PHOTOS_STORES_METADATA_TABLE = 5;
}
