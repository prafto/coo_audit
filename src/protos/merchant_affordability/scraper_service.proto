syntax = "proto3";
// buf:lint:ignore DIRECTORY_SAME_PACKAGE
// buf:lint:ignore PACKAGE_VERSION_SUFFIX
package merchant_affordability;

import "common/service_client_config.proto";
import "google/protobuf/wrappers.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.merchant_affordability";

// Service that exposes APIs to adhoc scrape enterprise merchant data
service ScraperService {
  // Endpoint to issue adhoc mx data scraper requests
  rpc ScrapeMerchant(ScrapeMerchantRequest) returns (ScrapeMerchantResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 1500;
    option (service_client.client_method_config).retry_config.max_attempts = 1;
  }

  // Endpoint to issue adhoc competitor data scraper requests
  rpc ScrapeCompetitor(ScrapeCompetitorRequest) returns (ScrapeCompetitorResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 1500;
    option (service_client.client_method_config).retry_config.max_attempts = 1;
  }

  // Endpoint to issue phone number verification workflow
  rpc VerifyMerchantPhoneNumbers(VerifyMerchantPhoneNumbersRequest) returns (VerifyMerchantPhoneNumbersResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 1500;
    option (service_client.client_method_config).retry_config.max_attempts = 1;
  }

  // Endpoint to sync data from 3P data aggregators
  rpc SyncDataFromProvider(SyncDataFromProviderRequest) returns (SyncDataFromProviderResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 1500;
    option (service_client.client_method_config).retry_config.max_attempts = 1;
  }

  // Endpoint to issue adhoc instagram scraper requests
  rpc ScrapeInstagram(ScrapeInstagramRequest) returns (ScrapeInstagramResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 1500;
    option (service_client.client_method_config).retry_config.max_attempts = 1;
  }

  // Endpoint to issue adhoc instagram influencer scraper requests
  rpc ScrapeInstagramInfluencer(ScrapeInstagramInfluencerRequest) returns (ScrapeInstagramInfluencerResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 1500;
    option (service_client.client_method_config).retry_config.max_attempts = 1;
  }

  // Endpoint to issue adhoc instagram video metadata scraper requests
  rpc ScrapeInstagramVideoMetadata(ScrapeInstagramVideoMetadataRequest) returns (ScrapeInstagramVideoMetadataResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 1500;
    option (service_client.client_method_config).retry_config.max_attempts = 1;
  }

  // Endpoint to perform real-time merchant menu scraping
  rpc ScrapeMerchantRealTime(ScrapeMerchantRealTimeRequest) returns (ScrapeMerchantRealTimeResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 1500;
    option (service_client.client_method_config).retry_config.max_attempts = 1;
  }

  // Endpoint to issue adhoc mx data scraper requests
  rpc ScrapeMerchantFromProvidedWebsite(ScrapeMerchantFromProvidedWebsiteRequest) returns (ScrapeMerchantFromProvidedWebsiteResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 1500;
    option (service_client.client_method_config).retry_config.max_attempts = 1;
  }

  // Endpoint to get scraped merchant data
  rpc GetScrapedMerchant(GetScrapedMerchantRequest) returns (GetScrapedMerchantResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 1500;
    option (service_client.client_method_config).retry_config.max_attempts = 1;
  }
}

// Verify phone number workflow request
message VerifyMerchantPhoneNumbersRequest {
  // starting store_id to begin scan
  google.protobuf.StringValue starting_store_id = 1;
}

// Verify phone number workflow response
message VerifyMerchantPhoneNumbersResponse {}

// Adhoc mx data scraping request
message ScrapeMerchantRequest {
  // DD business ids list
  repeated google.protobuf.Int64Value business_ids = 1;

  // Merchant name
  google.protobuf.StringValue merchant_name = 2;

  // Is test request
  // Scrape first 5 stores only
  google.protobuf.BoolValue is_test_request = 3;

  // [Deprecated] Scrape random n stores - only used for testing
  google.protobuf.Int32Value random_n_stores = 99;
}

// Adhoc mx data scraping response
message ScrapeMerchantResponse {
  // Workflow id
  google.protobuf.StringValue workflow_id = 1;
}

// Sync data from 3P provider request
message SyncDataFromProviderRequest {
  // Provider
  google.protobuf.StringValue provider = 1;
}

// Sync data from 3P provider response
message SyncDataFromProviderResponse {}

// Adhoc competitor data scraping request
message ScrapeCompetitorRequest {
  // Refresh existing data
  google.protobuf.BoolValue refresh_existing_data = 1;

  // Competitor name
  google.protobuf.StringValue competitor_name = 2;
}

// Adhoc competitor data scraping response
message ScrapeCompetitorResponse {
  // Workflow id
  google.protobuf.StringValue workflow_id = 1;
}

// Adhoc instagram data scraping request
message ScrapeInstagramRequest {
  // IG business account name (optional and if not passed will account for all known IG Mx business accounts)
  google.protobuf.StringValue business_account_name = 1;

  // DD business id
  google.protobuf.StringValue business_id = 2;

  // Video limit
  google.protobuf.StringValue video_limit = 3;

  // Perform IG profile discovery only
  google.protobuf.BoolValue run_profile_discovery = 4;

  // Refresh and pull most recent videos
  google.protobuf.BoolValue scrape_new_content = 5;
}

// Adhoc instagram data scraping response
message ScrapeInstagramResponse {
  // Workflow id
  google.protobuf.StringValue workflow_id = 1;
}

// Adhoc instagram influencer data scraping request
message ScrapeInstagramInfluencerRequest {
  // IG influencer account name (optional and if not passed will account for all known IG influencer accounts)
  google.protobuf.StringValue influencer_account_name = 1;

  // Video limit
  google.protobuf.StringValue video_limit = 2;

  // Refresh and pull most recent videos
  google.protobuf.BoolValue scrape_new_content = 3;
}

// Adhoc instagram influencer data scraping response
message ScrapeInstagramInfluencerResponse {
  // Workflow id
  google.protobuf.StringValue workflow_id = 1;
}

// Adhoc instagram video metadata scraping request
message ScrapeInstagramVideoMetadataRequest {
  // Query for videos approved after provided timestamp
  google.protobuf.StringValue approved_after_timestamp = 1;

  // Query for videos approved before provided timestamp
  google.protobuf.StringValue approved_before_timestamp = 2;
}

// Adhoc instagram video metadata scraping response
message ScrapeInstagramVideoMetadataResponse {
  // Workflow id
  google.protobuf.StringValue workflow_id = 1;
}

// Real-time merchant scraping request
message ScrapeMerchantRealTimeRequest {
  // Source platform to scrape from
  Source source = 1;

  // Website URL to scrape
  google.protobuf.StringValue website = 2;
}

// Real-time merchant scraping response
message ScrapeMerchantRealTimeResponse {
  // Menu data scraped from the source
  Menu menu = 1;
}

// Ad hoc mx data scraping request
message ScrapeMerchantFromProvidedWebsiteRequest {
  // Source
  Source source = 1;
  // Website URL to scrape
  google.protobuf.StringValue website = 2;
}

// Ad hoc mx data scraping response
message ScrapeMerchantFromProvidedWebsiteResponse {
  // vendor name
  google.protobuf.StringValue vendor_name = 1;
  // vendor id
  google.protobuf.StringValue vendor_id = 2;
}

// get scraped merchant request
message GetScrapedMerchantRequest {
  // vendor name
  google.protobuf.StringValue vendor_name = 1;
  // vendor id
  google.protobuf.StringValue vendor_id = 2;
}

// get scraped merchant response
message GetScrapedMerchantResponse {
  // Menu data scraped from the source
  Menu menu = 1;
}

// Enum representing scraping source platforms
enum Source {
  // Unspecified source
  SOURCE_UNSPECIFIED = 0;

  // UberEats platform source
  SOURCE_UBER_EATS = 1;
}

// Menu data structure
message Menu {
  // List of menu categories
  repeated MenuCategory categories = 1;
}

// Menu category information
message MenuCategory {
  // Name of the category
  google.protobuf.StringValue name = 1;

  // Subtitle or description of the category
  google.protobuf.StringValue subtitle = 2;

  // List of menu items in this category
  repeated MenuItem items = 3;
}

// Menu item information
message MenuItem {
  // Name of the menu item
  google.protobuf.StringValue name = 1;

  // Description of the menu item
  google.protobuf.StringValue description = 2;

  // Price in cents
  google.protobuf.Int32Value price_in_cents = 3;
}
