syntax = "proto3";

package review_service.web.v1;

import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option go_package = "github.com/doordash/services-protobuf/generated/review_service.web.v1";

// ReviewEventType represents different event types that fire based on the current status of the review
enum ReviewEventType {
  // REVIEW_TYPE_UNSPECIFIED represents an unspecified status
  REVIEW_EVENT_TYPE_UNSPECIFIED = 0;
  // REVIEW_EVENT_TYPE_APPROVED represents a review that has been approved fully (all requirements have been made)
  REVIEW_EVENT_TYPE_APPROVED = 1;
  // REVIEW_EVENT_TYPE_DECLINED represents a review that has been declined
  REVIEW_EVENT_TYPE_DECLINED = 2;
  // REVIEW_EVENT_TYPE_DECISION_MADE represents any decision that has been made to a review but the review is still in a pending state
  REVIEW_EVENT_TYPE_DECISION_MADE = 3;
  // REVIEW_EVENT_TYPE_EXPIRED represents a review that has expired, meaning that reviewers did not approve/decline it in time
  REVIEW_EVENT_TYPE_EXPIRED = 4;
  // REVIEW_EVENT_TYPE_CREATED represents when a new review has been created
  REVIEW_EVENT_TYPE_CREATED = 5;
  // REVIEW_EVENT_TYPE_UPDATED represents when the content of a review have been updated
  REVIEW_EVENT_TYPE_UPDATED = 6;
}

// ReviewEvent represents the data published to kafka for an event
message ReviewEvent {
  // review_id represents the review id for which this event is associated
  google.protobuf.StringValue review_id = 1;
  // type represents what type of event this is
  ReviewEventType type = 2;
  // key will be unique per service here or omitted if unrelated to a specific service's event
  google.protobuf.StringValue key = 3;
  // message will be a nicely formatted message passed along by review-service
  google.protobuf.StringValue message = 4;
}
