syntax = "proto3";

package doordash.retail.inventory.event.v1;

import "common/money.proto";
import "google/protobuf/wrappers.proto";
import "google/protobuf/timestamp.proto";

/*
    A kafka message proto for retail_inventory_hydration_cdc_event topic
*/
message RetailInventoryHydrationItemCDCEvent {
  // The store id of this item
  google.protobuf.Int64Value store_id = 1;
  // The business id of this store
  google.protobuf.Int64Value business_id = 2;
  // The merchant supplied store id
  google.protobuf.StringValue merchant_supplied_store_id = 3;
  // The merchant supplied item id
  google.protobuf.StringValue merchant_supplied_item_id = 4;
  // The merchant name of this item
  google.protobuf.StringValue merchant_name = 5;
  // The price of this item
  money.MonetaryFields price = 6;
  // The item name of this item
  google.protobuf.StringValue item_name = 7;
  // The description of this item
  google.protobuf.StringValue description = 8;
  // The category of this item
  google.protobuf.StringValue category = 9;
  // The tax rate of this item
  google.protobuf.DoubleValue tax_rate = 10;
  // Indicates if this item is alcohol
  google.protobuf.BoolValue is_alcohol = 11;
  // Indicates if this item is weighted item
  google.protobuf.BoolValue is_random_weight = 12;
  // Indicates if this item is deactivated by catalog
  google.protobuf.BoolValue is_deactivated_by_catalog = 13;
  // The measurement price of this item
  money.MonetaryFields measurement_price = 14;
  // The approximate sold as quantity
  google.protobuf.DoubleValue approximate_sold_as_quantity = 15;
  // The item location of this item in store
  StoreItemLocationData item_location = 16;
  // The approximate sold as unit
  google.protobuf.StringValue approximate_sold_as_unit = 17;
  // The measurement factor of this item
  google.protobuf.DoubleValue measurement_factor = 18;
  // The increment of this item if it is weighted item.
  google.protobuf.DoubleValue increment = 19;
  // The measurement unit of this item, such as kg, lb, ea
  google.protobuf.StringValue measurement_unit = 20;
  // The purchase type of this item
  google.protobuf.StringValue purchase_type = 21;
  // The version of this item event
  google.protobuf.Int64Value version = 23;
  // The item created timestamp
  google.protobuf.Timestamp created_at  = 24;
  // The item is created by whom
  google.protobuf.StringValue created_by = 25;
  // The item is updated at when
  google.protobuf.Timestamp updated_at = 26;
  // The item is updated by whom recently
  google.protobuf.StringValue updated_by = 27;
  // The non discount price of this item
  money.MonetaryFields non_discount_price = 28;
  // The non discount measurement price of this item
  money.MonetaryFields non_discount_measurement_price = 29;
  // The in feed price of this item
  money.MonetaryFields in_feed_price = 30;
  // Indicates if this item is orerable
  google.protobuf.BoolValue is_orderable = 31;
  // Indicates if this item is in stock
  google.protobuf.BoolValue is_instock = 32;
  // How many items are still in stock
  google.protobuf.StringValue quantity_in_stock = 33;
}

// Class defining the store item location data
message StoreItemLocationData {
  //the aisle the item is located at
  google.protobuf.StringValue aisle = 1;
  // zone the item is located at
  google.protobuf.StringValue zone = 2;
  // Section the item is located at
  google.protobuf.StringValue section = 3;
  // Shelf the item is on
  google.protobuf.StringValue shelf = 4;
  // Which side of the aisle the item is located
  google.protobuf.StringValue side = 5;
  // Unparsed raw data that comes from merchants
  google.protobuf.StringValue raw_text = 6;
}
