syntax = "proto3";

package data_tool_grpc_service.v1;

import "data_tool_grpc_service.v1/common.proto";
import "google/protobuf/any.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.data.tools.v1";

// create datalake personal database request
message CreateDatalakePersonalDatabaseRequest {
  // user name who submitted the request
  google.protobuf.StringValue user_name = 1;
  // The timestamp of when the request was submitted
  google.protobuf.Timestamp submitted_at = 2;
  // user database name
  google.protobuf.StringValue database_name = 3;
  // user database location
  google.protobuf.StringValue database_location = 4;
}

// create datalake personal database response
message CreateDatalakePersonalDatabaseResponse {
  // Response code
  ResponseCode response_code = 1;
  // misc message for error handling
  google.protobuf.StringValue error_message = 2;
}

// create datalake domain database request
message CreateDatalakeDomainDatabaseRequest {
  // user name who submitted the request
  google.protobuf.StringValue user_name = 1;
  // domain name
  google.protobuf.StringValue domain_name = 2;
  // s3 prefix (optional)
  google.protobuf.StringValue s3_prefix = 3;
  // s3 bucket name (optional)
  google.protobuf.StringValue s3_bucket = 4;
  // The timestamp of when the request was submitted
  google.protobuf.Timestamp submitted_at = 5;
  // comments on why this database is required
  google.protobuf.StringValue comments_by_user = 6;
  // status name
  google.protobuf.StringValue status_name = 7;
}

// create datalake database response
message CreateDatalakeDomainDatabaseResponse {
  // Response code
  ResponseCode response_code = 1;
  // misc message for error handling
  google.protobuf.StringValue error_message = 2;
}

// create database request view
message CreateDatabaseDomainRequestView {
  // system generated request id
  google.protobuf.StringValue request_id = 1;
  // domain name
  google.protobuf.StringValue domain = 2;
  // s3 prefix
  google.protobuf.StringValue s3_prefix = 3;
  // s3 bucket name
  google.protobuf.StringValue s3_bucket = 4;
  // The timestamp of when the request was submitted
  google.protobuf.Timestamp submitted_at = 5;
  // comments on why this database is required
  google.protobuf.StringValue comments_by_user = 6;
  // status name
  google.protobuf.StringValue status_name = 7;
  // requested by name
  google.protobuf.StringValue requested_by_name = 9;
}

// list domain database request
message ListDatalakeDomainDatabaseRequest {
  // filter
  repeated Filter filter = 1;
  // page number
  int32 offset = 2;
  // page size
  int32 pagination = 3;
}

// list domain database response
message ListDatalakeDomainDatabaseResponse {
  // Response code
  ResponseCode response_code = 1;
  // misc message for error handling
  google.protobuf.StringValue error_message = 2;
  // list of database creation requests
  repeated CreateDatabaseDomainRequestView database_creation_requests = 3;
  // total count of requests for pagination on UI
  int32 count = 4;
}

// datalake database creation approval request
message ApproveDatalakeDomainDatabaseRequest {
  // system generated request id
  google.protobuf.StringValue request_id = 1;
  // approved by name
  google.protobuf.StringValue approved_by_name = 2;
  // approved at
  google.protobuf.Timestamp approved_at = 3;
  // decision status name (Approved / Rejected)
  string decision_status_name = 4;
  // comments by the admin
  google.protobuf.StringValue comments_by_approver = 5;
}

// datalake database creation approval response
message ApproveDatalakeDomainDatabaseResponse {
  // Response code
  ResponseCode response_code = 1;
  // misc message for error handling
  google.protobuf.StringValue error_message = 2;
}

// list distinct projection in datalake database creation requests
message ListDistinctProjectionInDatabaseCreationRequest {
  // distinct property which needs to be projected.
  Distinct projection = 1;
}

// list distinct projection in datalake database creation requests response
message ListDistinctProjectionInDatabaseCreationResponse {
  // distinct projections from createDatabaseRequestView
  repeated google.protobuf.StringValue projections = 1;
  // Response code
  ResponseCode response_code = 2;
  // misc message for error handling
  google.protobuf.StringValue error_message = 3;
}

// list user database view based on user name
message ListDatalakePersonalDatabaseRequestView {
  // request id
  string database_request_id = 1;
  // user name
  string user_name = 2;
  // requested at
  google.protobuf.Timestamp created_at = 3;
}

// list datalake database user request
message ListDatalakePersonalDatabaseRequest {
  // user name
  string user_name = 1;
}

// list datalake database user response
message ListDatalakePersonalDatabaseResponse {
  // list user database view as output
  ListDatalakePersonalDatabaseRequestView database_request = 1;
  // Response code
  ResponseCode response_code = 2;
  // misc message for error handling
  google.protobuf.StringValue error_message = 3;
}

// data tool datalake database creation grpc service
service DataToolDataLakeDatabaseCreationGrpcService {
  // create datalake personal database request
  rpc CreateDatalakePersonalDatabase(CreateDatalakePersonalDatabaseRequest) returns (CreateDatalakePersonalDatabaseResponse);
  // list datalake personal database request
  rpc ListDatalakePersonalDatabase(ListDatalakePersonalDatabaseRequest) returns (ListDatalakePersonalDatabaseResponse);
  // create datalake domain database request
  rpc CreateDatalakeDomainDatabase(CreateDatalakeDomainDatabaseRequest) returns (CreateDatalakeDomainDatabaseResponse);
  // list prod datalake database creation requests
  rpc ListDatalakeDomainDatabase(ListDatalakeDomainDatabaseRequest) returns (ListDatalakeDomainDatabaseResponse);
  // approve prod datalake database request
  rpc ApproveDatalakeDomainDatabase(ApproveDatalakeDomainDatabaseRequest) returns (ApproveDatalakeDomainDatabaseResponse);
  // list distinct projection in createDatabaseRequestView
  rpc ListDistinctProjectionInDatabaseCreation(ListDistinctProjectionInDatabaseCreationRequest) returns (ListDistinctProjectionInDatabaseCreationResponse);
}
