syntax = "proto3";
package money;

import "common/common.proto";
import "common/dayparts.proto";
import "common/payin.proto";
import "common/store_loyalty.proto";
import "common/subscription.proto";
import "google/protobuf/any.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option go_package = "github.com/doordash/services-protobuf/generated/common";
option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.common";

message MonetaryFields {
  // The amount of minor units.
  // For example, if `currencyCode` is `"USD"`, then 1 unit is 1 US cent.
  google.protobuf.Int32Value unit_amount = 1;

  // The 3-letter currency code defined in ISO 4217.
  // (https://en.wikipedia.org/wiki/ISO_4217)
  google.protobuf.StringValue currency = 2;

  google.protobuf.StringValue display_string = 3;

  // The number of digits after the decimal separator.
  // Can be looked up from the "Active codes" section on
  // https://en.wikipedia.org/wiki/ISO_4217
  // For example, if `currencyCode` is `"USD"`, then 2 decimal places are
  // needed for US cents.
  google.protobuf.Int32Value decimal_places = 4;
  // True = +ve charge, False = -ve charge towards total
  // e.g. fees, taxes and subtotals are positive and all discounts and credits applied
  // will be negative
  google.protobuf.BoolValue sign = 5;
  // Symbol for provided currency, ie '$'
  google.protobuf.StringValue symbol = 6;
}

message BasisPoint {
  google.protobuf.Int32Value rate = 1;
}

enum PricingProfile {
  PRICING_PROFILE_UNSET = 0;
  CREATOR_PAYS_ENTIRELY = 1;
  COMPANY_SPONSORED = 2;
  SPLIT_BILL = 3;
  // RESERVED_PRICING_PROFILE_1 will be used for CREATOR_SPONSORED (cart topper) orders
  RESERVED_PRICING_PROFILE_1 = 4;
  RESERVED_PRICING_PROFILE_2 = 5;
  RESERVED_PRICING_PROFILE_3 = 6;
  RESERVED_PRICING_PROFILE_4 = 7;
  RESERVED_PRICING_PROFILE_5 = 8;
}

enum CurrencySymbol {
  UNKNOWN_CURRENCY = 0;
  USD = 1;
  AUD = 2;
  CAD = 3;
  NZD = 4;
}

message ConsumerPricingDetails {
  // these are deleted fields, do not reuse
  reserved 24;

  ConsumerInfoV2 consumer_info = 1;

  MonetaryFields total_before_tip = 2;
  MonetaryFields subtotal = 3;
  MonetaryFields grand_total = 4;

  ServiceRateDetails service_rate_details = 5;
  DeliveryFeeDetails delivery_fee_details = 6;
  DasherFeeDetails dasher_fee_details = 7;
  MinOrderFeeDetails min_order_fee_details = 8;
  LegislativeFeeDetails legislative_fee_details = 17;

  TaxDetails tax_details = 9;
  TipDetails tip_details = 10;

  DiscountDetails discount_details = 11;
  CreditDetails credit_details = 12;

  google.protobuf.BoolValue is_dashpass_applied = 13;
  TaxesAndFeesSumDetails taxes_and_fees_sum_details = 14;

  TipSuggestionDetails tip_suggestion_details = 15;

  repeated ItemPriceDetails item_price_details = 16;
  PickupSavingDetails pickup_saving_details = 18;
  SubtotalDetails subtotal_details = 19;
  GrandTotalDetails grand_total_details = 20;
  repeated PromotionMetadata active_promotions = 21;

  ConsumerPricingAdjustment pricing_adjustment = 22;
  repeated TipSuggestionDetails tips_suggestion_details = 23;
  repeated TipDetails tips_details = 25;
  PriorityFeeDetails priority_fee_details = 26;

  LegislativeFeeBreakdown legislative_fee_breakdown = 27;

  // This field contains all the loyalty rewards APPLICABLE for an order
  LoyaltyRewardDetails loyalty_rewards_details = 28;

  // The points summary information of DoorDash loyalty platform
  DoorDashLoyaltyPointsSummary doordash_loyalty_points_summary = 29;

  repeated GenericFeeItemDetails generic_fee_items = 30;

  // This field contains all the loyalty rewards APPLIED for an order
  LoyaltyRewardDetails applied_loyalty_rewards = 31;

  // This field contains all the external gift cards details
  ExternalGiftCardDetails external_gift_card_details = 32;

  // This field contains all the pay with points reward balance APPLIED for an order
  RewardBalanceDetails reward_balance_applied = 33;

  // This field contains all schedule and save nudgeable campaign details
  ScheduleAndSaveDetails schedule_and_save_details = 34;

  // This field contains all the info regarding hsa/fsa like subtotal, tax, etc
  HsaFsaDetailsV2 hsa_fsa_details_v2 = 35;

  // This field contains information about different delivery assignment flags, e.g. Top Dasher, Priority Status etc
  DeliveryOptionDetails delivery_option_details = 36;
}

message ConsumerPricingAdjustment {
  MonetaryFields original_order_total_before_credits_applied = 1;
  MonetaryFields new_order_total_before_credits_applied = 2;

  // The delta amount between the new and old totals.
  // = new_order_total_before_credits_applied - original_order_total_before_credits_applied
  // = charge_amount + credit_amount
  MonetaryFields delta_amount_to_process = 3;

  // The amount of card payment to process. Positive amount to charge; negative amount to refund
  MonetaryFields charge_amount = 4;
  // The amount of credit to process. Positive amount to deduct credits; negative amount to issue credits
  MonetaryFields credit_amount = 5;

  // Represents the amount we have adjusted the merchant tip by. Negative amount is CX refund amount
  MonetaryFields merchant_tip_adjustment = 6;

  // The amount to issue apology credit in case of cancellation.
  MonetaryFields apology_credit_amount = 7;

  // The amount of $$ to be refunded as credit
  MonetaryFields charge_as_credit_amount = 8;

  // Represents the amount we have adjusted the dasher tip by. Negative amount is Cx refund amount
  MonetaryFields dasher_tip_adjustment = 9;

  // Represents the amount we have adjusted the external gift cards by. Negative amount is Cx refund amount
  MonetaryFields external_gift_card_adjustment = 10;

  // The amount of reward points to process. Positive amount to deduct reward points; negative amount to issue reward points refund
  MonetaryFields reward_points_adjustment = 11;

  // The accrued amount of reward points that were adjusted from the original reward balance applied. This exlucdes cnr/self-help reward points refunds. Positve means added negative means refunded to date.
  MonetaryFields total_reward_points_adjustment = 12;
}

// V2 version to support multiple payers for a cart
message OrderQuoteV2 {
  string quote_id = 1;
  string creator_consumer_id = 2;
  string company_consumer_id = 3;
  PricingProfile pricing_strategy = 4;

  // OrderPricingDetails would provide order level (aggregated) monetary fields
  // For bundles, this will present the aggregation of each individual order.
  OrderPricingDetails total_pricing_details = 5;

  // The map of ConsumerPricingDetails will provide consumer level monetary fields
  // This will flexibly handle both, normal carts and group carts for eg if its a mp cart
  // For bundles, each ConsumerPricingDetails will be per payer per individual order (ie. at store level)
  map<string, ConsumerPricingDetails> consumer_pricing_details = 6;
  google.protobuf.Timestamp quote_created_at = 7; // DEPRECATING
  int64 quote_created_at_in_seconds = 8;

  // bundle_pricing_details is only used for bundles to provide individual order level
  // (store level) aggregated monetary fields. For GenerateOrderQuoteV2, this will be used
  // as source of truth for individual order at store level.
  map<string, OrderPricingDetails> bundle_pricing_details = 9;

  // The delivery_option_quote will provide quote for delivery options e.g. priority and no rush
  // This quote is used for display only, where the extra fee or discount will not be
  // added into the order total.
  DeliveryOptionQuote delivery_option_quote = 10;

  google.protobuf.StringValue merchant_tax_transaction_uuid = 11;

  // the map of SplitBillPricingDetails will provide pricing breakdowns on consumer level for receipt purpose only
  map<string, ConsumerPricingDetails> split_bill_pricing_details = 12;

  // post redcard swipe info
  PostRedCardSwipePricingDetails red_card_swipe_total_info = 13;

  // data requested by generate order quote v2 for display purposes
  DisplayQuote display_quote = 14;

  // Cx-pricing as source of truth to define the each fee line item rendering info
  // on the checkout page or receipt
  PricingLineItemRenderDetails pricing_line_item_render_details = 15;
}

// data requested by generate order quote v2 for display purposes
message DisplayQuote {
  // A summary of what the quote is for
  Paragraph summary = 1;

  // a breakdown of line items
  repeated LineItemGroup line_item_groups = 2;

  // Total amount adding up subtotal and total fees (excluding government fees)
  MonetaryFields total_before_taxes = 3;

  // A styled summary supports strikethrough and color etc.
  common.StyledText styled_summary = 4;
}

// Use cases which determine what data a quote should display
enum DisplayQuoteType {
  // default unspecific use case
  DISPLAY_QUOTE_TYPE_UNSPECIFIED = 0;

  // Display quote including subtotal, total fees excluding government fees on store page
  DISPLAY_QUOTE_TYPE_TOTAL_FEE_TALLY = 1;

  // Display quote with text for total fee tally preview page footer. Currently only used by iOS cart page
  DISPLAY_QUOTE_TYPE_PREVIEW_PAGE_FOOTER = 2;
}

// Cx-pricing as SOT to define each feeLineItem rendering info
message PricingLineItemRenderDetails {
  // Each Fee line item will show up separately as the single fee line item
  repeated LineItem line_items_for_flatten_display = 1;
  // Some Fee line items need to be wrapped as the specific line item. E.g TaxesAndFeesSumDetails
  repeated LineItem line_items_for_wrapped_display = 2;
  // Only used for collecting all bundle carts line items display info
  repeated BundleCartLineItem bundle_cart_line_items_for_display = 3;
}

// data after recalculating value after red card swipe.
message PostRedCardSwipePricingDetails {
  // new subtotal
  MonetaryFields subtotal = 1;
  // new subtotal tax
  MonetaryFields subtotal_tax = 2;
  // new service fee
  MonetaryFields service_fee = 3;
  // new service fee tax
  MonetaryFields service_fee_tax = 4;
  // tax transactionId
  google.protobuf.StringValue tax_transaction_id = 5;
  // grand total
  MonetaryFields grand_total = 6;
  // credits applied
  MonetaryFields credits_applied = 7;
  // credits refund
  MonetaryFields credits_refund = 8;
  // pre discount subtotal (pre mx ingested item promo subtotal, while the subtotal is the post mx ingested item promo subtotal)
  MonetaryFields pre_discount_subtotal = 9;
}

message HsaFsaFeesAndTaxesDetail {
  MonetaryFields subtotal = 1;
  MonetaryFields subtotal_tax = 2;
  google.protobuf.FloatValue ratio = 3;
  MonetaryFields tip = 4;
  MonetaryFields delivery_fee = 5;
  MonetaryFields service_fee = 6;
  MonetaryFields legislative_fee = 7;
  MonetaryFields priority_fee = 8;
  MonetaryFields small_order_fee = 9;
  MonetaryFields generic_fee = 10;
  MonetaryFields delivery_fee_tax = 11;
  MonetaryFields service_fee_tax = 12;
  MonetaryFields legislative_fee_tax = 13;
  MonetaryFields priority_fee_tax = 14;
  MonetaryFields smallOrder_fee_tax = 15;
  MonetaryFields generic_fee_tax = 16;
  MonetaryFields discount_amount = 17;
  MonetaryFields pre_discount_eligible_grand_total = 18;
  MonetaryFields post_discount_eligible_grand_total = 19;
}

enum CommissionOrderType {
  UNKNOWN_COMMISSION_ORDER_TYPE = 0;
  DASH_PASS = 1;
  CLASSIC = 2;
  TASTE_OF_DASH_PASS = 3;
}

message OrderPricingDetails {
  // these are deleted fields, do not reuse
  reserved 21, 23;

  MonetaryFields total_before_tip = 2;
  MonetaryFields subtotal = 3;
  MonetaryFields grand_total = 4;

  ServiceRateDetails service_rate_details = 5;
  DeliveryFeeDetails delivery_fee_details = 6;
  DasherFeeDetails dasher_fee_details = 7;
  MinOrderFeeDetails min_order_fee_details = 8;
  LegislativeFeeDetails legislative_fee_details = 15;

  TaxDetails tax_details = 9;
  TipDetails tip_details = 10;

  DiscountDetails discount_details = 11;
  CreditDetails credit_details = 12;

  google.protobuf.BoolValue is_dashpass_applied = 13;
  TaxesAndFeesSumDetails taxes_and_fees_sum_details = 14;
  PickupSavingDetails pickup_saving_details = 16;
  SubtotalDetails subtotal_details = 17;
  GrandTotalDetails grand_total_details = 18;

  CreditsbackDetails creditsback_details = 19;

  SubscriptionDetails subscription_details = 20;
  repeated TipDetails tips_details = 22;
  PriorityFeeDetails priority_fee_details = 24;
  EligibleSubscriptionSavingDetails eligible_subscription_saving_details = 25;

  LegislativeFeeBreakdown legislative_fee_breakdown = 26;

  MonetaryFields vat_exclusive_subtotal = 27;

  repeated GenericFeeItemDetails generic_fee_items = 28;

  DasherPaymentDetails dasher_payment_details = 29;
  TotalBeforeCreditsAppliedDetails total_before_credits_applied_details = 30;

  FeesSumDetails fees_sum_details = 31; // The sum of all FEES from TaxesAndFeesSumDetails AND Delivery Fee
  DashpassDiscountsSumDetails dashpass_discounts_sum_details = 32; // Service fee discount + delivery fee discount (A) OR Service fee discount only (B)

  AlternativeQuoteDetails alternative_quote_details = 33;
  HsaFsaFeesAndTaxesDetail hsa_fsa_fees_and_taxes_detail = 34; // Deprecated. Use hsa_fsa_details_v2

  TotalSavingsMessage total_savings_message = 35;

  CommissionOrderType commission_order_type = 36; // The commission orderType of the order
  HsaFsaDetailsV2 hsa_fsa_details_v2 = 37;
  MembershipFeeDetail membership_fee_detail = 38;
  TotalSavingsMessage loyalty_saving_message = 39;

  UndeliverableItemFeeDetails undeliverable_item_fee_details = 40;

  // total before tip, excluding any discounts or credits
  MonetaryFields total_before_tip_and_discounts = 41;

  // This field contains information about different delivery assignment flags, e.g. Top Dasher, Priority Status etc
  DeliveryOptionDetails delivery_option_details = 42;
}

message MembershipFeeDetail {
  MonetaryFields membership_fee = 3;
  string description = 6;
  string line_item_id = 7;
  string line_item_label = 8;
  Paragraph tooltip = 9;
}

message TotalSavingsMessage {
  google.protobuf.StringValue title = 1;
  google.protobuf.StringValue description = 2;
  MonetaryFields amount = 3;
  google.protobuf.StringValue highlight = 4;
}

message ConsumerInfoV2 {
  string consumer_id = 1;
  bool is_guest = 2;
  bool is_creator = 3;
  bool is_company_account = 4;
  bool is_employee = 5;
}

message OrderQuote {
  // these are deleted fields, do not reuse
  reserved 25;

  string quote_id = 1;
  MonetaryFields total_before_tip = 2;
  MonetaryFields subtotal = 3; // DEPRECATING!!!
  ServiceRateDetails service_rate_details = 4;
  DeliveryFeeDetails delivery_fee_details = 5;
  MinOrderFeeDetails min_order_fee_details = 6;
  TaxDetails tax_details = 7;
  TipSuggestionDetails tip_suggestion_details = 8;
  TipDetails tip_details = 9;
  DiscountDetails discount_details = 10;
  CreditDetails credit_details = 11;
  google.protobuf.BoolValue is_dashpass_applied = 12;
  MonetaryFields grand_total = 13; // DEPRECATING!!!
  DasherFeeDetails dasher_fee_details = 14;
  TaxesAndFeesSumDetails taxes_and_fees_sum_details = 15;
  repeated ItemPriceDetails item_price_details = 16;
  LegislativeFeeDetails legislative_fee_details = 18;
  SubtotalDetails subtotal_details = 19;
  GrandTotalDetails grand_total_details = 20;
  PickupSavingDetails pickup_saving_details = 21;
  CreditsbackDetails creditsback_details = 22;
  SubscriptionDetails subscription_details = 23;
  repeated PromotionMetadata active_promotions = 24;
  repeated TipDetails tips_details = 26;
  repeated TipSuggestionDetails tips_suggestion_details = 27;
  google.protobuf.Timestamp quote_created_at = 28; // DEPRECATING
  int64 quote_created_at_in_seconds = 29;

  // bundle_pricing_details is only used for bundles to provide individual order level
  // (store level) aggregated monetary fields. For GenerateOrderQuote, this will be used
  // as source of truth for individual order at store level in order submission.
  map<string, OrderPricingDetails> bundle_pricing_details = 30;

  // The delivery_option_quote will provide quote for delivery options e.g. priority and no rush
  // This quote is used for display only, where the extra fee or discount will not be
  // added into the order total.
  DeliveryOptionQuote delivery_option_quote = 31;

  PriorityFeeDetails priority_fee_details = 32;
  EligibleSubscriptionSavingDetails eligible_subscription_saving_details = 33;

  LegislativeFeeBreakdown legislative_fee_breakdown = 34;

  // This field contains all the loyalty rewards APPLICABLE for an order
  LoyaltyRewardDetails loyalty_reward_details = 35;

  // The points summary information of DoorDash loyalty platform
  DoorDashLoyaltyPointsSummary doordash_loyalty_points_summary = 36;

  repeated GenericFeeItemDetails generic_fee_items = 37;

  // This field contains all the loyalty rewards APPLIED for an order
  LoyaltyRewardDetails applied_loyalty_rewards = 38;

  TotalBeforeCreditsAppliedDetails total_before_credits_applied_details = 39;

  // Contains the list of gift cards to redeem
  ExternalGiftCardDetails external_gift_card_details = 40;

  google.protobuf.StringValue merchant_tax_transaction_uuid = 41;

  // This field contains all the pay with points reward balance APPLIED for an order
  RewardBalanceDetails reward_balance_applied = 42;

  TotalSavingsMessage total_savings_message = 43;

  CommissionOrderType commission_order_type = 44; // The commission orderType of the order

  HsaFsaDetailsV2 hsa_fsa_details_v2 = 45; // The field contains hsa-fsa specific details

  MembershipFeeDetail membership_fee_detail = 46;
  TotalSavingsMessage loyalty_saving_messages = 47;

  UndeliverableItemFeeDetails undeliverable_item_fee_details = 48;

  // This field contains information about different delivery assignment flags, e.g. Top Dasher, Priority Status etc
  DeliveryOptionDetails delivery_option_details = 49;

  // Cx-pricing as source of truth to define the each fee line item rendering info
  // on the checkout page or receipt
  PricingLineItemRenderDetails pricing_line_item_render_details = 50;
}

enum DeliveryOptionDisplayStrategy {
  NOT_SET = 0;
  DEFAULT_LAYOUT = 1;
  HIDE_OPTION_TITLE = 2;
}

enum NoRushScheduleStrategy {
  STRATEGY_NOT_SET = 0;
  SECOND_SCHEDULE_WINDOW = 1;
  ASAP_ETA_PLUS_PADDING = 2;
  ASAP_MIDPOINT_ETA_PLUS_PADDING = 3;
}

message DeliveryOptionQuote {
  // extra fee for priority delivery
  google.protobuf.BoolValue is_priority_option_available = 1;
  MonetaryFields priority_fee_amount = 2;
  google.protobuf.StringValue priority_quote_message = 3;
  // discount for no rush delivery
  google.protobuf.BoolValue is_no_rush_option_available = 4;
  MonetaryFields no_rush_discount_amount = 5;
  google.protobuf.StringValue no_rush_discount_message = 6;
  // the format strategy how we display the option at checkout page
  DeliveryOptionDisplayStrategy delivery_option_display_strategy = 7;
  // the strategy to construct no rush schedule time
  NoRushScheduleStrategy no_rush_schedule_strategy = 8;
  google.protobuf.StringValue priority_option_title = 9;
  // new fields for express strings with backend-driven styling
  StyledDeliveryOptionFields priority_fields = 10;
  google.protobuf.BoolValue priority_option_show_eta = 11;
  google.protobuf.BoolValue is_priority_option_selectable = 12;
  // discount for schedule delivery
  google.protobuf.BoolValue is_schedule_option_available = 13;
  MonetaryFields schedule_discount_amount = 14;
  google.protobuf.StringValue schedule_discount_message = 15;
  // flag to override default delivery option on cart page.
  google.protobuf.BoolValue is_preselected = 16;
}

message StyledDeliveryOptionFields {
  common.StyledText title = 1;
  common.StyledText sub_title = 2;
  common.StyledText eta = 3;
  common.StyledText quote_message = 4;
  common.DeliveryOptionTooltip tooltip_layout = 5;
}

message SubscriptionDetails {
  google.protobuf.Int64Value consumer_subscription_id = 1;
  google.protobuf.StringValue consumer_subscription_status = 2;
  google.protobuf.Int64Value eligible_stores = 3;
  google.protobuf.BoolValue is_new_dp_subscriber = 4;
  // When a non-subscription discount has been applied and need reference to subscription values in adjust order flow
  BasisPoint discounted_service_rate = 5;
  MonetaryFields minimum_subtotal = 6;
  google.protobuf.Int64Value consumer_subscription_plan_id = 7;

  // List of subscription benefits and whether or not a user is eligible for each benefit
  repeated common.subscription.v1.SubscriptionBenefitEligibility benefit_eligibility = 8;
}

message PickupSavingDetails {
  MonetaryFields pickup_saving_total = 1;

  // message will be displayed to consumer like "You're saving $7.99" or "Save $7.99"
  google.protobuf.StringValue message = 2;
}

message AlternativeQuoteDetails {
  // delta_total = normal_quote's grand_total - alternative_quote's grand_total
  MonetaryFields delta_total = 1;
}

message CreditsbackDetails {
  MonetaryFields amount = 1;
  string title = 2;
  string description = 3;
  string promotion_id = 4;
  CreditsbackType creditsback_type = 5;
}
enum CreditsbackType {
  UNKNOWN = 0;
  PICKUP_DASHPASS_BENEFIT = 1;
  ROUTINE_REORDER = 2;
  LARGE_ORDER_DASHPASS_BENEFIT = 3;
}

message SubtotalDetails {
  MonetaryFields amount = 1;
  string line_item_id = 2;
  string line_item_label = 3;

  // Needed for Alcohol Flat Fee:
  //   order service retrieves this from pricing service and passes to MFS for flat fee calculation.
  // Design doc:
  //   https://docs.google.com/document/d/1hDQ8Glteus-JTx-K6PtNU72fO59OMpHBYwoxhj_VLbY/edit#heading=h.qrlhbc4jjuic
  MonetaryFields alcohol_amount = 4;

  // The amount of inflation DD applied.
  // Design doc: https://docs.google.com/document/d/1ASF8DrEYRWJkLb199B6uLAfRBjNLtIB7e0wxvWhTv04/edit
  MonetaryFields inflation_amount = 5;

  Paragraph subtotal_tooltip = 6;

  money.MonetaryFields original_subtotal = 7;
  money.MonetaryFields discounted_subtotal = 8;
  money.MonetaryFields pre_inflated_subtotal = 9;
  money.MonetaryFields inflated_subtotal = 10;
  money.MonetaryFields redcard_swiped_subtotal = 11;
  repeated SupplementalPaymentEligibleSubtotal supplemental_payment_eligible_subtotal = 12;
  money.MonetaryFields hsa_fsa_subtotal = 13;

  // Minimum Advertised price items, not eligible for promotions
  // https://docs.google.com/document/d/1NmdVvkHCtKRQOunHrPHlgAiBg16kbVScu32y_bF1eXs/edit#heading=h.x9grhbueub3u
  money.MonetaryFields map_item_subtotal = 14;
}

message GrandTotalDetails {
  MonetaryFields amount = 1;
  string line_item_id = 2;
  string line_item_label = 3;
  repeated PaymentDetail payment_breakdown = 4;
}

message DiscountDetails {
  MonetaryFields total_discount = 1;
  MonetaryFields total_promotion_discount = 2;
  repeated DiscountBreakdown discount_breakdowns = 3;
  string message = 4 [deprecated = true]; // Moved to DiscountDetailMessage
  DiscountRequiredActionType required_action = 5 [deprecated = true]; // Moved to DiscountDetailMessage
  MonetaryFields additional_subtotal = 6 [deprecated = true]; // Moved to DiscountDetailMessage
  string add_subtotal_line_item_id = 7;
  string add_subtotal_line_item_label = 8;
  Paragraph add_subtotal_tooltip = 9;
  string promo_discount_line_item_id = 10;
  string promo_discount_line_item_label = 11;
  MonetaryFields total_promotion_discount_without_credit = 12;
  google.protobuf.StringValue message_title = 13 [deprecated = true]; // Moved to DiscountDetailMessage
  google.protobuf.StringValue message_description = 14 [deprecated = true]; // Moved to DiscountDetailMessage
  BadgeType badge_Type = 15 [deprecated = true]; // Moved to DiscountDetailMessage
  UpsellDetails banner_action = 16 [deprecated = true]; // Moved to DiscountDetailMessage
  google.protobuf.DoubleValue minimum_subtotal_percentage = 17 [deprecated = true]; // Moved to DiscountDetailMessage
  google.protobuf.StringValue promotion_id = 18 [deprecated = true]; // Moved to DiscountDetailMessage
  repeated DiscountDetailMessage messages = 19;
  MonetaryFields promotion_required_subtotal = 20 [deprecated = true]; // Moved to DiscountDetailMessage
  MonetaryFields total_discount_without_credit = 21;

  // True if cart's subtotal is greater or equal to its own vertical/store specific DashPass min.
  // Design doc: https://docs.google.com/document/d/1cEdeUDW6-HHvBcEvNQpBsmp3MzCTO-9oTStNyTU6k0s/edit
  google.protobuf.BoolValue cart_meets_store_dp_min = 22;

  // Describes highlight for the promo discount line item. Options included no hiighlight,
  // fee highlight only, and full line highlight
  HighlightType promo_discount_line_item_highlight = 23;

  // list of item-level discount details and messaging
  repeated ItemLevelDiscountDetailMessage item_level_discount_detail_messages = 24;

  // This field is used to power the promotion-related discount lines on Cart/Checkout pages
  PromotionDiscountLineDetailsMessage promotion_discount_line_details_message = 25;
}

message PromotionDiscountLineDetailsMessage {
  // This field represents the cart-level promotion discount amount.
  // A cart-level promo is a promo that discounts the cart's subtotal, and not specific items in the cart.
  // An example is a $5 off $20+ promotion.
  MonetaryFields cart_level_promotion_discount_amount = 1;
}

message DiscountDetailMessage {
  string message = 1;
  DiscountRequiredActionType required_action = 2;
  google.protobuf.StringValue message_title = 3;
  google.protobuf.StringValue message_description = 4;
  BadgeType badge_Type = 5;
  UpsellDetails banner_action = 6;
  google.protobuf.DoubleValue minimum_subtotal_percentage = 7;
  google.protobuf.StringValue promotion_id = 8;
  MonetaryFields promotion_required_subtotal = 9;
  // The type of the promotion.
  google.protobuf.StringValue promotion_type = 10;
  // An estimate of how much money it would save if the nudge promotion is applied.
  MonetaryFields nudge_promotion_incentive = 11;
  // How much more money is needed to redeem the promotion.
  MonetaryFields additional_subtotal = 12;

  DiscountBannerDetailsBannerType banner_type = 15;
  repeated DiscountBannerDetailsBannerLocation banner_location = 16;

  // This is a rich UI flow component which is displayed when required_action = OPEN_DASHPASS_PROMO_BOTTOMSHEET
  common.UIFlowScreen expanded_tooltip_bottomsheet = 17;
  // Metadata to control the progress bar
  ProgressBarMetadata progress_bar_metadata = 18;
}

message ProgressBarMetadata {
  reserved "progress_segments_count";
  reserved 1;
  // background color of the progress bar
  google.protobuf.StringValue background_color = 2;
  // progress bar position
  google.protobuf.BoolValue positioned_at_top = 3;
  // number of segments in the progress bar
  google.protobuf.Int32Value segments_count = 4;
}

message ItemLevelDiscountDetailMessage {
  // nudge message which applies to all items in campaign
  google.protobuf.StringValue nudge_message = 1;
  // list of item level nudge info
  repeated ItemPromoNudgeDetail item_promo_nudge_details = 2;
  // indicates whether items in campaign are mix-and-match
  google.protobuf.BoolValue is_mix_and_match = 3;
  // collection_id used by FE to fetch collection page for the promotion
  google.protobuf.StringValue collection_id = 4;
  // promotion id associated with campaign
  google.protobuf.StringValue promo_id = 5;
  // campaign-level message that applies to all items in the campaign
  // to replace nudge_message in the future to be more generic, e.g. "20% off bestsellers"
  google.protobuf.StringValue message = 6;
  // item-level promo detail to replace item_promo_nudge_details in the future to be more generic
  repeated ItemPromoDetail item_promo_details = 7;
  // indicates whether the promo is exclusive to DashPass subscribers
  google.protobuf.BoolValue is_dashpass_exclusive_promo = 8;
  // campaign tags, e.g. "MEMBER_PRICING_V2"
  repeated google.protobuf.StringValue tags = 9;
  // indicates whether the promo is nudgeable
  google.protobuf.BoolValue is_campaign_nudgeable = 10;
  // identifies the nudge type which applies to all items in the campaign
  common.ItemLevelNudgeType nudge_type = 11;

  message ItemPromoNudgeDetail {
    // item id
    google.protobuf.StringValue item_id = 1;
    // e.g. add X more to apply the deal
    google.protobuf.StringValue description = 2;
    // percent nudge completion as float value
    google.protobuf.FloatValue progress = 3;
  }

  message ItemPromoDetail {
    // item id
    google.protobuf.StringValue item_id = 1;
    // carnival item id - used for correct order item identification in the Cx's cart
    google.protobuf.StringValue carnival_item_id = 2;
  }
}

enum BadgeType {
  reserved 3;
  reserved "BADGE_TYPE_PROMOPTION";
  BADGE_TYPE_UNKNOWN = 0;
  BADGE_TYPE_DASHPASS = 1;
  BADGE_TYPE_DASHPASS_BADGE_AND_TEXT = 2;
  BADGE_TYPE_PROMOTION = 4;
  BADGE_TYPE_DASHMART = 5;
  BADGE_TYPE_DASHMART_BADGE_AND_TEXT = 6;
  BADGE_TYPE_EXPRESS_DELIVERY = 7;
  BADGE_TYPE_DEAL_DROPS = 8;
}

enum PromotionType {
  CONSUMER_PROMOTION = 0;
  MERCHANT_PROMOTION = 1;
  PROMO_SERVICE_CONSUMER_PROMOTION = 2;
  PROMO_SERVICE_MERCHANT_PROMOTION = 3;
  MERCHANT_INSTORE_PROMOTION = 4; // Design doc: https://docs.google.com/document/d/1dYLFDUChizeT6mjJRRjASM2aROgsojOSgizCy12AgEg/edit#
  PROMO_SERVICE_THIRDPARTY_PROMOTION = 5;
  PROMO_SERVICE_MULTIFUNDED_PROMOTION = 6; // Design doc: https://docs.google.com/document/d/1TSZSpPElMs9rAjwmD7zVoTKVHh9nhvo0XdgdfllffL8/edit?usp=sharing
}

enum DiscountMonetaryField {
  DISCOUNT_MONETARY_FIELD_SUBTOTAL = 0;
  DISCOUNT_MONETARY_FIELD_DELIVERY_FEE = 1;
  DISCOUNT_MONETARY_FIELD_SERVICE_FEE = 2;
  DISCOUNT_MONETARY_FIELD_SMALL_ORDER_FEE = 3;
  DISCOUNT_MONETARY_FIELD_TOTAL_BEFORE_TIP = 4;
  DISCOUNT_MONETARY_FIELD_EXTRA_SOS_FEE = 5;
  DISCOUNT_MONETARY_FIELD_VALUE_DELIVERY_FEE = 6;
  DISCOUNT_MONETARY_FIELD_ITEM_PRICE = 7;
  DISCOUNT_MONETARY_FIELD_ITEM_EXTRA_OPTION_PRICE = 8;
  DISCOUNT_MONETARY_FIELD_CREDITS_BACK = 9;
  DISCOUNT_MONETARY_FIELD_REDELIVERY = 10;
  DISCOUNT_MONETARY_FIELD_LEGISLATIVE_FEE = 11;
  DISCOUNT_MONETARY_FIELD_SUBTOTAL_TAX = 12;
  DISCOUNT_MONETARY_FIELD_EXPANDED_RANGE_FEE = 13;
  DISCOUNT_MONETARY_FIELD_PRIORITY_FEE = 14;
  DISCOUNT_MONETARY_FIELD_NON_MONETARY_DASHER_ASSIGNMENT = 15;
}

enum DiscountTarget {
  DISCOUNT_TARGET_UNSET = 0;
  DISCOUNT_TARGET_SUBTOTAL = 1;
  DISCOUNT_TARGET_DELIVERY_FEE = 2;
  DISCOUNT_TARGET_SERVICE_FEE = 3;
  DISCOUNT_TARGET_SMALL_ORDER_FEE = 4;
  DISCOUNT_TARGET_ITEM = 5;
  DISCOUNT_TARGET_OPTION = 6;
  DISCOUNT_TARGET_EXTRA_OPTION = 7;
  DISCOUNT_TARGET_ITEM_EXTRA = 8;
  DISCOUNT_TARGET_CREDITS_BACK = 9;
  DISCOUNT_TARGET_LEGISLATIVE_FEE = 10;
  DISCOUNT_TARGET_SUBTOTAL_TAX = 11;
  DISCOUNT_TARGET_EXPANDED_RANGE_FEE = 12;
  DISCOUNT_TARGET_PRIORITY_FEE = 13;
}

enum DiscountBannerDetailsBannerType {
  BANNER_TYPE_UNKNOWN = 0;
  BANNER_TYPE_GENERIC = 1;
  BANNER_TYPE_EXPRESS_DELIVERY = 2;
  BANNER_TYPE_HIDE_ON_SCROLL = 3;
  BANNER_TYPE_TOP_DASHER = 4;
  BANNER_TYPE_TOP_DASHER_EXPRESS_DELIVERY = 5;
  BANNER_TYPE_PRIORITY_ORDER = 6;
  BANNER_TYPE_PRIORITY_ORDER_EXPRESS_DELIVERY = 7;
}

enum DiscountBannerDetailsBannerLocation {
  BANNER_LOCATION_UNKNOWN = 0;
  BANNER_LOCATION_CART = 1;
  BANNER_LOCATION_CHECKOUT = 2;
}

message AppliedBy {
  AppliedByType type = 1;
  enum AppliedByType {
    APPLIED_BY_TYPE_INVALID = 0;
    APPLIED_BY_TYPE_UNSET = 1;
    APPLIED_BY_TYPE_CLAIM = 2; // must be claimed to be used at a later time
    APPLIED_BY_TYPE_CODE = 3; // user must enter a code
    APPLIED_BY_TYPE_CLICK = 4; // user must explicitly click
    APPLIED_BY_TYPE_AUTO = 5; // get best eligible
  }
}

message PromotionMetadata {
  PromotionType promotion_type = 1;
  string promotion_id = 2;
  DiscountTarget target = 3;
  string promotion_title = 4;
  string promotion_description = 5;
  oneof value { // set during audience evaluation or during configuration
    google.protobuf.StringValue item_id = 6;
    google.protobuf.StringValue option_id = 7;
    google.protobuf.StringValue item_extra_option_id = 8;
    google.protobuf.StringValue item_extra_id = 9;
  }
  google.protobuf.StringValue external_campaign_id = 10;

  Funding promotion_fund = 11;

  PromoQuantity promo_quantity = 12;

  PromotionAudience promotion_audience = 13;

  // Number of redemptions applied, default to 1
  // Complex deals can be applied multiple times per order.
  // i.e. buy 1 get $1 off, buy 2 will get $2 off. num_applications is 2.
  google.protobuf.Int32Value num_applications = 14;
  // Is a mix and match complex deals, default false.
  google.protobuf.BoolValue is_mix_and_match = 15;
  // determines how the can be "applied" if still valid
  repeated AppliedBy applied_by = 16;
  // set campaign term and condition
  common.CampaignTermAndConditionContent term_condition_content = 17;

  FederatedSource.Type federated_source = 18;

  // Map to campaign membership_id
  google.protobuf.StringValue ad_group_id = 19;

  // Map to the real id of promotion (not the same as promotion_id above)
  google.protobuf.StringValue ad_id = 20;

  google.protobuf.StringValue campaign_id = 21;

  // fields added for item promo discount calculation during OCA
  google.protobuf.Int32Value translatedPurchaseQuantity = 22;
  MonetaryFields translatedFlatAmountOff = 23;
  google.protobuf.StringValue incentiveTargetType = 24;
  google.protobuf.StringValue incentiveValueType = 25;

  // If true, the discount is only applied if the right payment is used for the order
  google.protobuf.BoolValue should_block_payment_method_switch = 26;

  // A list of consumer tokens information that is used for this specific Promotion
  repeated ConsumerToken consumer_tokens = 27;

  // If set, we will use this validate to validate that a payment method promotion is valid
  payin.v1.PaymentMethodType required_payment_method_type = 28;

  // A list of surface the campaign should be hidden from
  repeated DisabledDisplaySurface disabled_display_surfaces = 29;
}

enum PromotionAudience {
  PROMOTION_AUDIENCE_UNSET = 0;
  PROMOTION_AUDIENCE_DP_SUBSCRIBER = 1;
}

enum DisabledDisplaySurface {
  DISABLED_DISPLAY_SURFACE_UNSPECIFIED = 0;
  DISABLED_DISPLAY_SURFACE_WALLET = 1;
}

message DiscountBreakdown {
  DiscountType discount_type = 1;
  MonetaryFields discount_amount = 2;
  PromotionMetadata promotion_metadata = 3;
  BasisPoint discount_rate = 4;
  MonetaryFields discount_max_amount = 5;
  DiscountMonetaryField discount_monetary_field = 6;
  string source_id = 7;
  MonetaryFields minimum_subtotal = 8;
  DiscountStatus status = 9;
  // values for populating maindblocal_order_cart_discount_component "group", "source_type_id" and "monetary_field"
  string ocdc_discount_group = 10;
  string ocdc_monetary_field = 11;
  int32 ocdc_source_type_id = 12;
  DiscountVertical discount_vertical = 13;
  // The source_id in this object and promotion_id in PromotionMetadata could either be promo campaign or promo code
  // Adding this new field to always populate campaign id to avoid breaking existing feature
  google.protobuf.StringValue campaign_id = 14;
  // The promotion type for tax calculation purpose. It is different from the promotion type on promotion service.
  TaxPromotionType tax_promotion_type = 15;
  // Adding this new field to always populate ad_id to save into OCDC for accounting usage purpose
  google.protobuf.StringValue ad_id = 16;
  // Adding this new field to always populate ad_group_id to save into OCDC for accounting usage purpose
  google.protobuf.StringValue ad_group_id = 17;
}

enum DiscountType {
  DISCOUNT_TYPE_UNSET = 0;
  DISCOUNT_TYPE_FIRST_DELIVERY_PROMOTION = 1;
  DISCOUNT_TYPE_CONSUMER_SUBSCRIPTION = 2;
  DISCOUNT_TYPE_CONSUMER_PROMOTION = 3;
  DISCOUNT_TYPE_NEW_USER_CONSUMER_PROMOTION = 4;
  DISCOUNT_TYPE_MERCHANT_PROMOTION = 5;
  DISCOUNT_TYPE_UPSELL_DELIVERY_DISCOUNT = 6;
  DISCOUNT_TYPE_REFERREE_CREDIT = 7;
  DISCOUNT_TYPE_CONSUMER_TRAIN_DISCOUNT = 8;
  DISCOUNT_TYPE_FIRST_MONTH_DELIVERY_DISCOUNT = 9; // fmx
  DISCOUNT_TYPE_ITEM_LEVEL_PROMOTION = 10;
  DISCOUNT_TYPE_BUNDLING_DISCOUNT = 11; // discounts min order and delivery fees
  DISCOUNT_TYPE_SUBSCRIPTION_PICKUP_CREDIT = 12;
  DISCOUNT_TYPE_MERCHANT_INSTORE_DISCOUNT = 13; // A type of Mx discount that is not part of any campaign or promotion from the promotion service.
  // Design doc: https://docs.google.com/document/d/1dYLFDUChizeT6mjJRRjASM2aROgsojOSgizCy12AgEg/edit#
  DISCOUNT_TYPE_MASTERCARD_PARTNERSHIP_PROMOTION = 14; // detail https://docs.google.com/document/d/14PKeiqjdMFFv6eNXwf_zvhixSpsbkd-XkQTFfJlCJEM/edit?usp=sharing
  DISCOUNT_TYPE_REDELIVERY = 15;
  // Discounts from loyalty rewards (currently the ones that the Cx has on the Mx external platform)
  // TDD: https://docs.google.com/document/d/1zFrRGxuu-2fKm_Cy3mTazIg8EqtLmCizvdjL3sxAMgg/edit#
  DISCOUNT_TYPE_LOYALTY_REWARDS = 16;
  DISCOUNT_TYPE_LARGE_RETAIL_ORDER = 17;
  DISCOUNT_TYPE_RECURRING_DELIVERY = 18;
  DISCOUNT_TYPE_MEAL_PLAN_DISCOUNT = 19;
  DISCOUNT_TYPE_SNAP_PAYMENT = 20;
  DISCOUNT_TYPE_RETURN_ORDER = 21;
  DISCOUNT_TYPE_FREE_SAME_DAY_DELIVERY = 22;
  DISCOUNT_TYPE_REWARD_POINTS_DISCOUNT = 23;
  DISCOUNT_TYPE_NV_FLAT_FEE = 24;
  DISCOUNT_TYPE_THRIDPARTY_PROMOTION = 25;
  DISCOUNT_TYPE_HIGH_AOV_DISCOUNT = 26;
  DISCOUNT_TYPE_WELCOME_BACK_DISCOUNT = 27;
  DISCOUNT_TYPE_NEARBY_V5_DISCOUNT = 28;
  DISCOUNT_TYPE_MULTIFUNDED_PROMOTION = 29; // Design Doc: https://docs.google.com/document/d/1TSZSpPElMs9rAjwmD7zVoTKVHh9nhvo0XdgdfllffL8/edit?usp=sharing
  DISCOUNT_TYPE_SUPERSAVE = 30;
  // Offer priority delivery for free to Cx when their order is cancelled by DoorDash
  DISCOUNT_TYPE_POST_CANCELLATION_PRIORITY_DELIVERY_PROMOTION = 31;
  // Offer discount on service fee used by flat fee V3
  DISCOUNT_TYPE_SERVICE_FEE_RANGE_CAPPED = 32;
  DISCOUNT_TYPE_CROSS_SHOPPING_CUSTOMER_DISCOUNT = 33;
  DISCOUNT_TYPE_AUTOMATIC_REORDER = 34;
  DISCOUNT_TYPE_LONG_DISTANCE_DELIVERY = 35;
  DISCOUNT_TYPE_MAKE_IT_CHEAPER = 36;
  DISCOUNT_TYPE_WEEKLY_DEALS = 37;
  DISCOUNT_TYPE_PRESCRIPTION_DELIVERY = 38;
  // Offer priority delivery for free to Cx for Turbo Lunch experiment
  DISCOUNT_TYPE_TURBO_LUNCH_PRIORITY_DELIVERY_PROMOTION = 39;
  // Offer discount for Affordable Meal Experiment
  DISCOUNT_TYPE_AFFORDABLE_MEAL_DISCOUNT = 40;
}

message CreditDetails {
  MonetaryFields total_credits_applied = 1;
  repeated CreditBreakdown credit_breakdowns = 2;
  MonetaryFields credits_applicable_before_tip = 3;
  string line_item_id = 4;
  string line_item_label = 5;
  Paragraph tooltip = 6;
  MonetaryFields total_credits_available = 7;
}

message CreditBreakdown {
  CreditType credit_type = 1;
  MonetaryFields credit_amount_applied = 2;
}

enum CreditType {
  CREDIT_TYPE_CX_SUPPORT = 0;
  CREDIT_TYPE_REFERREE = 1;
  CREDIT_TYPE_REFERRER = 2;
  CREDIT_TYPE_GIFT_CODE = 3;
  CREDIT_TYPE_DELIVERY_GIFT = 4;
  CREDIT_TYPE_OTHER = 5;
  CREDIT_TYPE_DELIVERY_UPDATE = 6;
  CREDIT_TYPE_MANUAL_CREDIT = 7;
  CREDIT_TYPE_ACCOUNTING_CONSISTENCY = 8;
  CREDIT_TYPE_PROMOTION_CREDIT = 9;
  CREDIT_TYPE_EXTERNAL_GIFT_CARD_CREDIT = 10;
  CREDIT_TYPE_MEAL_PLAN = 11;

  CREDIT_TYPE_UNKNOWN = 1000;
}

message ServiceRateDetails {
  MonetaryFields original_fee = 1;
  MonetaryFields final_fee = 2;
  BasisPoint original_rate = 3;
  BasisPoint final_rate = 4;
  repeated ServiceFeeDiscount service_fee_discounts = 5;
  // service rate message shown to consumers
  string message = 6;
  string line_item_id = 7;
  string line_item_label = 8;
  Paragraph tooltip = 9;
  FeesLineItemOverride fees_line_item_override = 10;

  common.UIFlowScreen expanded_tooltip_bottomsheet = 11;
  string algo_version = 12; // short string representing the algo used by pricing to compute service fee
  // for service fee line item description mapping
  string line_item_description = 13;
}

message ServiceFeeDiscount {
  BasisPoint discounted_service_rate = 1;
  MonetaryFields minimum_subtotal = 2;
  ServiceFeeDiscountSource source = 3;
  DiscountStatus status = 4;
  MonetaryFields discount_amount = 5;
}

message ServiceFeeDiscountSource {
  string id = 1;
  DiscountSourceType type = 2;
}

// Used for Palo Alto Delivery(PAD) project.
message TotalFeeOverride {
  // if no discount applied, final_total_Fee will equal to original_total_fee.
  MonetaryFields original_total_fee = 1;
  MonetaryFields final_total_Fee = 2;
}

message FeesLineItemOverride {
  google.protobuf.BoolValue force_unbundled_fees_line_items = 1;
  google.protobuf.BoolValue force_hide_service_fee_line_item = 2;
  // Used for Palo Alto Delivery(PAD) project. Will force hide Fees & Taxes line item.
  google.protobuf.BoolValue force_render_total_fee_line_item = 3;
  // Only populate this field if force_render_total_fee_line_item == true
  TotalFeeOverride total_fee_override = 4;
}

enum DiscountSourceType {
  SUBSCRIPTION = 0; // more to be added
  SERVICE_FEE_DISCOUNT_SOURCE_TYPE_CONSUMER_PROMOTION = 1;
  SERVICE_FEE_DISCOUNT_SOURCE_TYPE_LARGE_RETAIL_ORDER = 2;
  SERVICE_FEE_DISCOUNT_SOURCE_TYPE_FREE_SAME_DAY_DELIVERY = 3;
  SERVICE_FEE_DISCOUNT_SOURCE_TYPE_AFFORDABLE_MEAL = 4;
}

enum DiscountStatus {
  APPLIED = 0;
  CHECK_MIN_SUBTOTAL = 1;
}

enum DiscountRequiredActionType {
  NO_ACTION = 0;
  ADD_MORE_ITEMS = 1;
  PAYMENT_METHOD_INVALID = 2;
  OPEN_DASHPASS_PROMO_BOTTOMSHEET = 3;
  ADD_STORE_TO_SUPERSAVE = 4;
}

message DeliveryFeeDetails {
  MonetaryFields original_delivery_fee = 1;
  MonetaryFields extra_sos_delivery_fee = 2;
  MonetaryFields final_delivery_fee = 3;
  DeliveryFeeDiscount delivery_fee_discount = 4;
  MonetaryFields delivery_fee_after_mx_promo = 5;
  string message = 6;
  string line_item_id = 7;
  string line_item_label = 8;
  Paragraph tooltip = 9;
  Paragraph dashpass_tooltip = 10;
  string free_delivery_display_string = 11;

  common.UIFlowScreen expanded_tooltip_bottomsheet = 12;
  string algo_version = 13; // short string representing the algo used by pricing to compute delivery fee
  // for delivery fee line item description mapping
  string line_item_description = 14;
}

// this is for feed
message StoreDeliveryFeeDetails {
  MonetaryFields final_delivery_fee = 1;
  MonetaryFields extra_sos_delivery_fee = 2;
  MonetaryFields minimum_subtotal = 3;
  string display_delivery_fee = 4;
  DistanceBasedPricingDetails dbp_details = 5;
  DeliveryFeeRenderDetails render_details = 6;
  MonetaryFields original_delivery_fee = 7;
  bool is_accurate = 8; // default false, used for optimization path for ranking
  // type of discount applied to delivery fee; if no discount applicable, default to DISCOUNT_TYPE_UNSET
  DiscountType discountType = 9;
  AgencyRenderDetails agency_render_details = 10;
}

// this is for feed
message StoreServiceFeeDetails {
  MonetaryFields minimum_subtotal = 1;
  string dashpass_display_service_fee = 2;
  string classic_display_service_fee = 3;
  google.protobuf.FloatValue classic_service_rate = 4;
  MonetaryFields classic_service_fee_min = 5;
  MonetaryFields classic_service_fee_max = 6;
  google.protobuf.FloatValue dashpass_service_rate = 7;
  MonetaryFields dashpass_service_fee_min = 8;
  MonetaryFields dashpass_service_fee_max = 9;
  StoreServiceFeeConfigPolicy store_service_fee_config_policy = 10;
  SubscriptionPlanDetails eligiblePlan = 11;
  // disclosure information for service fee on store page
  google.protobuf.StringValue service_fee_disclosure = 12;
}

enum StoreServiceFeeConfigPolicy {
  // unspecified
  UNSPECIFIED = 0;
  // enable floor service fee
  SERVICE_FEE_MIN = 1;
  // enable capped service fee
  SERVICE_FEE_MAX = 2;
  // enable flat service fee
  SERVICE_FEE_FLAT = 3;
  // enable ranged service fee
  SERVICE_FEE_RANGE = 4;
  // default percentage service fee
  SERVICE_FEE_PERCENTAGE = 5;
}

message DistanceBasedPricingDetails {
  DistanceDisplayStrategy distance_display_strategy = 1;
  DbpUiDecorationConfig dbp_ui_decoration_config = 2;
  MonetaryFields expanded_range_fee = 3;
  MonetaryFields original_expanded_range_fee = 4;
  MonetaryFields erf_discount_minimum_subtotal = 5;
  DiscountType erf_discount_type = 6;
}

// this is for feed
message DeliveryFeeRenderDetails {
  DeliveryFeeDisplayStrategy delivery_fee_display_strategy = 1;
  // used if SHOW_DUAL_TOTAL_FEE
  // Pricing sends back 2 sets of prices.
  TotalFeeDualModelRenderDetails total_fee_dual_model_render_details = 2;
}

// this is for agency box under the pricing layout:
// https://docs.google.com/document/d/1ABoaP1xZgHfQvBi93Q1Pygz3Dort5MDa1PCTAc8DfY0/edit#heading=h.c0q2ijnvsn17
message AgencyRenderDetails {
  repeated AgencyComponent agency_components = 1;

  message AgencyComponent {
    Status status = 1;
    Type type = 2;
    string value = 3;
    map<string, google.protobuf.Any> additional_info = 4;

    enum Status {
      UNSPECIFIED_STATUS = 0; // default
      TO_BE_CLAIMED = 1; // show the banner, but not claimed
      CLAIMED = 2; // show the banner, and claimed
    }

    enum Type {
      UNSPECIFIED_TYPE = 0;
      DISCOUNT = 1;
    }
  }
}

// this is for feed
message TotalFeeDualModelRenderDetails {
  MonetaryFields final_total_fee = 1;
  google.protobuf.BoolValue is_discounted_total_fee = 2;
  TotalFeeBreakdown non_discounted_total_fee_breakdown = 3;
  TotalFeeBreakdown discounted_total_fee_breakdown = 4;
  string non_discounted_display_total_fee_message = 5; // e.g. total fee
  string discounted_display_total_fee_message = 6; // e.g. total fee over $12
  MonetaryFields total_discount = 7; // discounted amount on total fees with DashPass.
  DiscountType discount_type = 8; // source of discount. used to control styling/other experience attributes by Feed
}

message TotalFeeBreakdown {
  MonetaryFields total_fee = 1;
  MonetaryFields total_service_fee = 2;
  MonetaryFields total_delivery_fee = 3;
}

enum DeliveryFeeDisplayStrategy {
  DEFAULT_STRATEGY = 0;
  SHOW_DELIVERY_FEE = 1;
  DO_NOT_SHOW_DELIVERY_FEE = 2;
  SHOW_AS_TOTAL_FEE = 3;
  SHOW_DUAL_TOTAL_FEE = 4;
  // Used in cases where we need to show a strike through for delivery fees
  // eg: "-$5.99- $0 delivery fees"
  // used by PAD projects specifically
  SHOW_DUAL_DELIVERY_FEE = 5;
  // Delivery fee discount display on homepage and store page
  // For all delivery fee discounts with $0 minimum subtotal
  SHOW_STRIKETHROUGH_DELIVERY_FEE = 6;
  // Fee discount display on store page
  // Mostly used for delivery fee discounts with $0 minimum subtotal
  SHOW_STRIKETHROUGH_FEE_STORE_PAGE = 7;
}

enum DistanceDisplayStrategy {
  UNKNOWN_LAYOUT = 0;
  DO_NOT_SHOW_DISTANCE = 1;
  SHOW_DISTANCE = 2;
  SHOW_NEARBY_DELIVERY = 3;
  SHOW_TOTAL_FEE = 4;
  SHOW_FARTHER_AWAY_DELIVERY = 5;
  SHOW_DP_UPSELL = 6;
  SHOW_TASTE_OF_DASHPASS = 7;
}

enum DbpUiDecorationConfig {
  UNDEFINED = 0;
  CONFIG_1 = 1; // Control
  CONFIG_2 = 2; // Home/Search only
  CONFIG_3 = 3; // Home/Search + Store, Arm 1: "Expanded Delivery" Peru Scheme 1 (List of [SM, R2C])
  CONFIG_4 = 4; // Home/Search + Store, Arm 1: "Expanded Delivery" Peru Scheme 2
  CONFIG_5 = 5; // Home/Search + Store, Arm 2: "Expanded Range Delivery" Peru Scheme 1
  CONFIG_6 = 6; // Home/Search + Store, Arm 2: "Expanded Range Delivery" Peru Scheme 2
}

message DasherFeeDetails {
  MonetaryFields dasher_fee = 1;
  string line_item_id = 2;
  string line_item_label = 3;
  Paragraph tooltip = 4;
}

message DeliveryFeeDiscount {
  MonetaryFields amount = 1;
  MonetaryFields min_subtotal = 2;
  // customer-facing display text
  string text = 3;
  DeliveryFeeDiscountSourceType source_type = 4;
  DeliveryFeeDiscountType discount_type = 5;
  bool is_discount_visible = 6;
}

enum DeliveryFeeDiscountSourceType {
  DELIVERY_FEE_DISCOUNT_SOURCE_TYPE_EXPERIMENT = 0;
  DELIVERY_FEE_DISCOUNT_SOURCE_TYPE_CONSUMER_PROMOTION = 1;
  DELIVERY_FEE_DISCOUNT_SOURCE_TYPE_FIRST_DELIVERY = 2;
  DELIVERY_FEE_DISCOUNT_SOURCE_TYPE_MERCHANT_PROMOTION = 3;
  DELIVERY_FEE_DISCOUNT_SOURCE_TYPE_SUBSCRIPTION = 4;
  DELIVERY_FEE_DISCOUNT_SOURCE_TYPE_FIRST_MONTH_PROMOTION = 5;
  DELIVERY_FEE_DISCOUNT_SOURCE_TYPE_BUNDLING_DISCOUNT = 6;
  DELIVERY_FEE_DISCOUNT_SOURCE_TYPE_REDELIVERY = 7;
  DELIVERY_FEE_DISCOUNT_SOURCE_TYPE_LARGE_RETAIL_ORDER = 8;
  DELIVERY_FEE_DISCOUNT_SOURCE_TYPE_FREE_SAME_DAY_DELIVERY = 9;
  DELIVERY_FEE_DISCOUNT_SOURCE_TYPE_AFFORDABLE_MEAL_DISCOUNT = 10;
}

enum DeliveryFeeDiscountType {
  DELIVERY_FEE_DISCOUNT_TYPE_FREE = 0;
  DELIVERY_FEE_DISCOUNT_TYPE_TRY_FREE = 1;
  DELIVERY_FEE_DISCOUNT_TYPE_TRY_REDUCED_FEE = 2;
  DELIVERY_FEE_DISCOUNT_TYPE_REDUCED_FEE = 3;
}

message PriorityFeeDiscount {
  MonetaryFields amount = 1;
  // customer-facing display text
  string text = 2;
  PriorityFeeDiscountSourceType source_type = 3;
  PriorityFeeDiscountType discount_type = 4;
}

enum PriorityFeeDiscountSourceType {
  PRIORITY_FEE_DISCOUNT_SOURCE_TYPE_UNSET = 0;
  PRIORITY_FEE_DISCOUNT_SOURCE_TYPE_SEAMLESS_EXPERIENCE_PROMOTION = 1;
  PRIORITY_FEE_DISCOUNT_SOURCE_TYPE_SUBSCRIPTION_BENEFIT_GRANT = 2;
  PRIORITY_FEE_DISCOUNT_SOURCE_TYPE_SUBSCRIPTION_BENEFIT_TOKEN = 3;
  PRIORITY_FEE_DISCOUNT_SOURCE_TYPE_TURBO_LUNCH_PROMOTION = 4;
}

enum PriorityFeeDiscountType {
  PRIORITY_FEE_DISCOUNT_TYPE_UNSET = 0;
  PRIORITY_FEE_DISCOUNT_TYPE_FREE = 1;
}

message MinOrderFeeDetails {
  // The minimum amount of subtotal in order to waive min order fee
  MonetaryFields min_order_subtotal = 1;
  // Extra fee applied on small orders
  MonetaryFields min_order_fee = 2;
  string line_item_id = 3;
  string line_item_label = 4;
  Paragraph tooltip = 5;
  MonetaryFields original_min_order_fee = 6;
}

message TaxBreakdownItem {
  money.MonetaryFields tax_amount = 1;
  money.BasisPoint tax_rate = 2;
  money.MonetaryFields total = 3;
}

enum TaxStrategy {
  DEFAULT_TAX_STRATEGY = 0;
  MERCHANT_CALCULATE = 1;
  RETAILER = 2;
  FACILITATOR = 3;
  DISABLE_TAX_CHARGE_AT_MERCHANT = 4;
  FOLLOW_BUSINESS = 5;
}

message TaxDetails {
  MonetaryFields tax_amount = 1;
  MonetaryFields subtotal_tax_amount = 2;
  MonetaryFields fees_tax_amount = 3;
  BasisPoint tax_rate = 4;
  FeesTaxDetail fees_tax_amount_detail = 5;
  string line_item_id = 6;
  string line_item_label = 7;
  Paragraph tooltip = 8;
  google.protobuf.BoolValue is_marketplace_facilitator_state = 9;
  repeated TaxBreakdownItem tax_breakdown_item = 10;
  string transaction_id = 11;
  // aggregated subtotal amount used for tax calculation on subtotal line items
  MonetaryFields subtotal_for_tax = 12;
  // please use is_tax_inclusive in VatTaxDetails
  google.protobuf.BoolValue is_tax_inclusive = 13;
  VatTaxDetails vat_tax_details = 14;
  TaxStrategy tax_strategy = 15;
  // breakdown of tax rates applied to subtotal (charged on behalf of merchant)
  repeated TaxBreakdownItem subtotal_tax_breakdown_items = 16;
  // breakdown of tax rates applied to fees (charged on behalf of doordash)
  repeated TaxBreakdownItem fees_tax_breakdown_items = 17;
  MonetaryFields alcohol_subtotal_tax_amount = 18;

  // A breakdown of multiple tax transactions if it exists (returned from tax-service).
  // Only used if > 1 TaxDetail exists in this list.
  repeated TaxDetails sub_tax_details = 19;

  common.UIFlowScreen expanded_tooltip_bottomsheet = 20;
  MonetaryFields hsa_fsa_subtotal_tax_amount = 21;

  // Tax breakdown for order level to be passed to Order Payload
  OrderTaxBreakdown order_tax_breakdown = 22;

  // hyperlink for estimated tax usecase
  // PRD: https://docs.google.com/document/d/1ZZRz5AzFXReWlditw6MOigfqs4x9TnfO_-axSysHNUc/edit?tab=t.0
  google.protobuf.StringValue hyperlink = 23;
  google.protobuf.StringValue hyperlink_title = 24;
}

message VatTaxDetails {
  MonetaryFields tax_amount = 1;
  MonetaryFields subtotal_tax_amount = 2;
  MonetaryFields fees_tax_amount = 3;
  FeesTaxDetail fees_tax_amount_detail = 4;
  google.protobuf.BoolValue is_tax_inclusive = 5;
  MonetaryFields vat_exclusive_subtotal = 6;
  MonetaryFields vat_exclusive_alcohol_subtotal = 7;
  MonetaryFields alcohol_subtotal_vat = 8;
}

message FeesTaxDetail {
  MonetaryFields delivery_fee_tax_amount = 1;
  MonetaryFields service_fee_tax_amount = 2;
  MonetaryFields min_order_fee_tax_amount = 3;
  MonetaryFields legislative_fee_tax_amount = 4;
  repeated GenericFeeTaxDetail generic_fee_taxes = 5;
  MonetaryFields priority_fee_tax_amount = 6;
}

message GenericFeeTaxDetail {
  string fee_config_id = 1;
  FeeCategoryType fee_category_type = 2;
  MonetaryFields fee_tax_amount = 3;
  string tax_line_item_type = 4;
}

message TaxesAndFeesSumDetails {
  MonetaryFields original_taxes_and_fees_amount = 1;
  MonetaryFields final_taxes_and_fees_amount = 2;
  string line_item_id = 3;
  string line_item_label = 4;
  Paragraph tooltip = 5;

  common.UIFlowScreen expanded_tooltip_bottomsheet = 6;

  LineItemCalloutModal flat_fee_callout = 7;
  // This field is used to show call out for dashpass message, such as upsell.
  // We put it here for rendering purpose
  LineItemCalloutModal dashpass_message_callout = 8;
}

message TipAmount {
  google.protobuf.StringValue amount = 1;
  TipRecipient recipient = 2;
}

message TipDetails {
  MonetaryFields tip_amount = 1;
  string line_item_id = 2;
  string line_item_label = 3;
  Paragraph tooltip = 4;
  TipRecipient tip_recipient = 5;
}

message TipSuggestionDetails {
  TipSuggestionType type = 1;

  // This field is not empty only if the tip suggestion type is PERCENTAGE.
  // The values are in percent, e.g. [10, 15, 20, 25] represents [10%, 15%, 20%, 25%].
  repeated int32 percentage_values = 2;

  // This field is not empty only if the tip suggestion type is AMOUNT.
  repeated MonetaryFields monetary_values = 3;

  // Default choice of the tipping values
  int32 default_index = 4;

  // This field is not empty only if the tip suggestion type is PERCENTAGE.
  repeated MonetaryFields percentage_to_amount_monetary_values = 5;

  // This field is not null only if the tip suggestion type is PERCENTAGE.
  google.protobuf.Int32Value tip_percentage_argument = 6;

  // This field specifies whom the tip is meant for
  TipRecipient tip_recipient = 7;

  // This field specifies the copy that clients will render
  TipMessaging tip_messaging = 8;

  // This will be preferred way of specifying tip index in favor of default_index
  google.protobuf.Int32Value default_tip_index = 9;

  // This field will be used to provide dynamic suggestions (combination of amount/percent and other types)
  repeated TipSuggestion suggestions = 10;
}

message TipSuggestion {
  google.protobuf.StringValue display_string = 1;
  DynamicTipType dynamic_tip_type = 2;
  google.protobuf.Int32Value percentage_value = 3;
  MonetaryFields monetary_value = 4;
}

enum TipSuggestionType {
  PERCENTAGE = 0;
  AMOUNT = 1;
  DYNAMIC = 2;
}

enum DynamicTipType {
  TIP_TYPE_PERCENTAGE = 0;
  TIP_TYPE_AMOUNT = 1;
  TIP_TYPE_DEFERRED = 2;
  TIP_TYPE_CUSTOM = 3;
}

enum TipRecipient {
  TIP_RECIPIENT_UNKNOWN = 0;
  DASHER = 1;
  MERCHANT = 2;

  // Deprecated
  COURIER = 3;
}

message TipMessaging {
  string info_sheet_title = 1;
  string info_sheet_detail = 2;
  string checkout_title = 3;
  string checkout_subtitle = 4;
  string checkout_effort_based_subtitle = 5;
  string line_item_title = 6;
  string custom_tip_title = 7;
  string custom_tip_subtitle = 8;
  string fullscreen_title = 9;
  string fullscreen_subtitle = 10;
  string fullscreen_body = 11;
  string fullscreen_custom_tip_subtitle = 12;
  string fullscreen_image_url = 13;
  string fullscreen_caption = 14;
  string split_bill_tip_subtitle = 15;
  string hsa_fsa_tip_subtitle = 16;
  common.StyledText zero_tip_dialog_title = 17;
  common.StyledText zero_tip_dialog_description = 18;
  common.StyledText zero_tip_dialog_action_button = 19;
  common.StyledText zero_tip_dialog_cancel_button = 20;
  Banner fullscreen_custom_tip_banner = 21;

  message Banner {
    string description = 1;
  }
}

message TotalBeforeCreditsAppliedDetails {
  MonetaryFields amount = 1;
  string line_item_id = 2;
  string line_item_label = 3;
  Paragraph tooltip = 4;
}

message FeesSumDetails {
  MonetaryFields non_dashpass_fees_sum = 1;
}

message PercentageFields {
  BasisPoint rate = 1; // e.g. 1720
  google.protobuf.FloatValue percentage = 2; // e.g. 17.2
  google.protobuf.StringValue display_string = 3; // e.g. "17.2%"
}

message DashpassDiscountsSumDetails {
  MonetaryFields delivery_fee_discount = 1;
  MonetaryFields service_fee_discount = 2;
  MonetaryFields delivery_and_service_fees_discount = 3;
  MonetaryFields delivery_and_service_fees_and_promotion_discount = 4;
  PercentageFields service_fee_discount_rate = 5;
  PercentageFields original_service_fee_rate = 6;
  google.protobuf.StringValue original_service_fee_tooltip_message = 7;
}

message LegislativeFeeBreakdown {
  repeated LegislativeFeeBreakdownFeeComponent fees = 1;
}

message LegislativeFeeBreakdownFeeComponent {
  // fee type of the breakdown fee component, required field
  string fee_type = 1;
  // amount of the fee, required field
  int32 amount = 2;
  // distinguish different legislative fee categories
  google.protobuf.StringValue fee_config_id = 3;
  // distinguish different flow(e.g GFO order, CFA order.) based on the same fee_config
  google.protobuf.StringValue fee_config_flow_type = 4;
  // long term usage purpose, to decide if leg fee bundle display with TaxAndFeesSum
  // true: leg fee info will bundle display with "Fees & Tax" on UI checkout page
  // false: leg fee info will show as single line item "Regulatory Response Fee"
  google.protobuf.BoolValue is_bundle_display_applied = 5;
}

message LegislativeFeeDetails {
  // localized name of the fee, displayed on receipt
  string label = 1;
  // amount of the fee
  MonetaryFields amount = 2;
  // message shown below the line item
  string line_message = 3;
  // message shown in the tooltip box
  string tooltip_message = 4;
  string line_item_id = 5;
  // for leg fee line item description mapping
  string line_item_description = 6;
}

message PriorityFeeDetails {
  // Extra fee applied on priority delivery orders
  MonetaryFields priority_fee = 1;
  string line_item_id = 2;
  string line_item_label = 3;
  Paragraph tooltip = 4;
  // Final priority fee after discount/promotions
  MonetaryFields final_priority_fee = 5;
  PriorityFeeDiscount priority_fee_discount = 6;

  common.UIFlowScreen expanded_tooltip_bottomsheet = 7;
}

message ItemPriceDetails {
  string carnival_item_id = 1;
  MonetaryFields subtotal = 2;
  // migrating to quantities to support weighted items
  int64 quantity = 3;
  MonetaryFields original_unit_price = 4;
  MonetaryFields final_unit_price = 5;
  // [DEPRECATED] MonetaryFields additional_cost = 6;
  MonetaryFields bottle_deposit_amount = 7;
  // [DEPRECATED] MonetaryFields tax_amount = 8;
  PriceSource price_source = 9;

  repeated ItemExtraOptionPriceDetails item_extra_option_price_details = 20;
  AppliedDiscounts item_level_discount = 21;
  string item_id = 22;
  repeated money.PricingQuantity quantities = 23;

  // The amount of inflation DD applied.
  // Design doc: https://docs.google.com/document/d/1ASF8DrEYRWJkLb199B6uLAfRBjNLtIB7e0wxvWhTv04/edit
  MonetaryFields inflation_amount = 24;
  MonetaryFields pre_inflation_unit_price = 25;
  // A breakdown of amount paid by payment method.
  // This helps identify the breakdown of which payment method was used to cover for taxes.
  // NOTE: This will be sent only when a special payment method is used
  repeated PaymentDetail item_payment_breakdown = 26;

  // This field aims to provide the list of discounts for complex deal that order service could get it from
  // FinalizeOrderQuoteResponse from the pricing service. Field 21 for single discount is still applied.
  repeated AppliedDiscounts item_level_discounts_applicable = 27;

  // This is the unit price for the strike-through pricing
  MonetaryFields non_discount_unit_price = 28;

  // This is the non discount subtotal used to display in strike-through on Frontend
  MonetaryFields non_discount_subtotal = 29;

  // This is the tax breakdown for the item from tax service to be passed to Order Payload
  ItemTaxBreakdown item_tax_breakdown = 30;

  // This field will be used with the subtotal field to enable the strikethrough experience
  // This field is only used on the Rx-side currently
  // discountedSubtotal = item's subtotal - ItemLevelDiscount.discountAmount
  // RFC link: https://docs.google.com/document/d/1o6UNn8Ea9SY4Jr1IAi_dYYbVkwnQxywzkoAAr_jUsxc/edit?tab=t.0#heading=h.516repk7lqu0
  MonetaryFields discounted_subtotal = 31;
}

message PaymentDetail {
  enum PaymentType {
    PAYMENT_TYPE_UNSPECIFIED = 0;
    PAYMENT_TYPE_CREDIT_CARD = 1;
    PAYMENT_TYPE_SNAP_EBT = 2;
    PAYMENT_TYPE_HSA_FSA = 3;
  }
  PaymentType payment_type = 1;
  money.MonetaryFields amount = 2;
  money.MonetaryFields tax_amount = 3;
}

message ItemExtraOptionPriceDetails {
  string menu_item_extra_option_id = 1;
  int64 quantity = 2;
  MonetaryFields original_unit_price = 3;
  bool isFree = 4;
  string reference_uuid = 5; // The order item extra option reference UUID in the cart
  PriceSource price_source = 6;
  ItemTaxBreakdown item_extra_option_tax_breakdown = 7; // Tax breakdown for the extra option for Order Payload
}

enum PriceSource {
  PRICE = 0;
  BASE_PRICE = 1;
  // Mx supplied in-store price for non-weighted items
  IN_FEED_PRICE = 2;
  NON_DISCOUNT_PRICE = 3;
  NON_DISCOUNT_MEASUREMENT_PRICE = 4;
  LOYALTY_PRICE = 5;
  LOYALTY_MEASUREMENT_PRICE = 6;
  // Mx supplied in-store price for weighted items
  IN_FEED_MEASUREMENT_PRICE = 7;
  // affordable meal price
  AFM_PRICE = 8;
  // POS Menu Hub (Inflation)
  POS_MX_ORIGINAL_PRICE = 9;
  // Mx supplied in-store loyalty price for non-weighted items
  IN_FEED_LOYALTY_PRICE = 10;
  // Mx supplied in-store non-discount (strikethrough) price for weighted items
  IN_FEED_NON_DISCOUNT_MEASUREMENT_PRICE = 11;
  // Mx supplied in-store loyalty price for weight items
  IN_FEED_LOYALTY_MEASUREMENT_PRICE = 12;
  // Mx supplied in-store non-discount (strikethrough) price for non-weighted items
  IN_FEED_NON_DISCOUNT_PRICE = 13;
}

enum IconType {
  NONE = 0;
  INFO = 1;
  DASHPASS = 2;
  SURGE = 3;
  FREE_SAME_DAY_DELIVERY = 4;
}

enum HighlightType {
  DEFAULT_HIGHLIGHT = 0;
  BRANDED = 1;
  BOLD = 2;
  BRANDED_LINE = 3;
}

enum ChargeId {
  DEFAULT = 0;
  LEGISLATIVE_FEE = 1;
  TAXES_AND_FEES = 2;
  FEES = 3;
  TAX = 4;
  SERVICE_FEE = 5;
  MIN_ORDER_FEE = 6;
  DELIVERY_FEE = 7;
  REFUND = 8;
  PROMOTION_DISCOUNT = 9;
  CREDITS = 10;
  DASHER_FEE = 11;
  TIP = 12; // This is meant for only dasher tips, see below for merchant tips
  TOTAL = 13;
  SUBTOTAL = 14;
  MERCHANT_TIP = 15;
  EXPENSED_MEAL_COMPANY_PAY = 16;
  PRIORITY_FEE = 17;
  TOTAL_EXCL_VAT = 18;
  VAT_BREAKDOWN = 19;
  CHARGE_ID_BAG_FEE = 20;
  CHARGE_ID_CUP_FEE = 21;
  TOTAL_BEFORE_CREDITS = 22;
  CHARGE_ID_REGULATORY_RESPONSE_FEE = 23;
  CHARGE_ID_RETAIL_DELIVERY_FEE = 24;
  CHARGE_ID_BOTTLE_DEPOSIT_FEE = 25;
  CHARGE_ID_DBP_EXPAND_RANGE_FEE = 26;
  SNAP_EBT = 27;
  DASHPASS_DISCOUNT = 28;
  DASHPASS_DISCOUNT_AND_DELIVERY_FEE = 29;
  PRE_DELIVERY_TIP = 30;
  POST_DELIVERY_TIP = 31;
  CHARGE_ID_DASHER_EQUITY_FEE = 32;
  CASH_BACK_REWARDS_APPLIED = 33;
  HSA_FSA = 34;
  CHARGE_ID_PAD_DISCOUNT = 35;
  CHARGE_ID_MEMBERSHIP_FEE = 36;
  CHARGE_ID_UNDELIVERABLE_FEE = 37;
  HSA_FSA_ELIGIBLE_AMOUNT = 38;
  CHARGE_ID_SF_HEALTH_MANDATE_FEE = 39;
  CHARGE_ID_STAFF_BENEFITS_FEE = 40;
  CHARGE_ID_RESTAURANT_OPERATIONS_FEE = 41;
}

message LineItemCalloutModal {
  google.protobuf.StringValue title = 1;
  google.protobuf.StringValue description = 2;
  LineItemCalloutModalType type = 3;
}

enum LineItemCalloutModalType {
  LINE_ITEM_CALLOUT_TYPE_UNKNOWN = 0;
  LINE_ITEM_CALLOUT_TYPE_PROMOTION = 1;
}

message LineItem {
  // id of the charge, unique identifier across all platforms
  ChargeId charge_id = 1;

  // Localized string of the charge
  string label = 2;

  // Final price (post-discount) of the line item, adding a new field sign to monetaryfield,
  // to indicate whether it's a positive (true) or negative (false) charge
  MonetaryFields final_money = 3;

  // Original price (pre-discount) of the line item, adding a new field sign to monetaryfield,
  // to indicate whether it's a positive (true) or negative (false) charge
  MonetaryFields original_money = 4;

  // what's to be displayed in the tooltip
  LineItemToolTipModal tooltip = 5;

  // Extra note for the line item
  string note = 6;

  // Icon type of the one next right to label
  IconType label_icon = 7;

  // Icon type of the one left to original price
  IconType price_icon = 8;

  // Icon type of the one in between original and final price
  IconType discount_icon = 9;

  // In what way the line needs to be highlighted
  HighlightType highlight = 10;

  // tooltip_v2 contains extra banner and buttons
  // tooltip will not be deprecated because not all lineitem needs extra banner and buttons
  ModalWithBanner tooltip_v2 = 11;

  common.UIFlowScreen line_item_bottomsheet = 13;

  LineItemCalloutModal line_item_callout_modal = 14;

  // Descriptions for line item
  string description = 15;
}

message LineItemGroup {
  // line item group id
  google.protobuf.StringValue group_id = 1;
  // line item group label
  google.protobuf.StringValue group_label = 2;
  // flag on whether to display group label
  google.protobuf.BoolValue is_group_label_visible = 3;
  // aggregated line items' value within the group
  MonetaryFields group_total = 4;
  // ordered list of line items
  repeated LineItem line_items = 5;
}

message BundleCartLineItem {
  // used for display, store name is applied for bundle use case
  google.protobuf.StringValue title = 1;

  // line items for individual bundle cart
  repeated LineItem line_items = 2;
}

message LineItemToolTipModal {
  string title = 1;
  repeated Paragraph paragraphs = 2;
  // hyperlink for estimated tax usecase
  // PRD: https://docs.google.com/document/d/1ZZRz5AzFXReWlditw6MOigfqs4x9TnfO_-axSysHNUc/edit?tab=t.0
  google.protobuf.StringValue hyperlink = 3;
  google.protobuf.StringValue hyperlink_title = 4;
}

message Paragraph {
  string title = 1;
  string description = 2;
  // hyperlink for estimated tax usecase
  // PRD: https://docs.google.com/document/d/1ZZRz5AzFXReWlditw6MOigfqs4x9TnfO_-axSysHNUc/edit?tab=t.0
  google.protobuf.StringValue hyperlink = 3;
  google.protobuf.StringValue hyperlink_title = 4;
}

message Entity {
  enum EntityType {
    ENTITY_TYPE_INVALID = 0;
    ENTITY_TYPE_UNSET = 1;
    ENTITY_TYPE_DOORDASH = 2;
    ENTITY_TYPE_MERCHANT = 3; // this means a single store
    // add third party types, business level, etc here as needed
    ENTITY_TYPE_CORPORATE = 4;
    // add third party type to support CPG (Ax) funded promotions.
    // ENTITY_TYPE_CORPORATE - Mx business level
    // ENTITY_TYPE_THIRDPARTY - 3rd party advertiser, not related to the Mx.
    ENTITY_TYPE_THIRDPARTY = 5;
  }

  EntityType type = 1;
  google.protobuf.StringValue entity_id = 2;
}

enum FundingTag {
  FUNDING_TAG_INVALID = 0;
  FUNDING_TAG_UNSET = 1;
  REGULAR = 2;
  REFERRAL = 3;
  GIFT_CARD = 4;
}

message FundedBy {
  Entity entity = 1; // who is responsible for funding
  // String representation of sql Decimal percentage (java type java.math.BigDecimal)
  google.protobuf.StringValue percentage = 2; // what percentage is the entity responsible for funding

  // can add maximum value if/when needed

  FundingTag funding_tag = 3;
  reserved 4;
  reserved "flat_amount";

  FundedByType funding_rule_type = 5;
  money.MonetaryFields flat_monetary_amount = 6; // what flat amount is the entity responsible for funding

  // Max amount that can be funded by the entity.
  message FundingLimitation {
    // Type of max limitation.
    enum Type {
      // Unknown or not set type.
      TYPE_UNSET = 0;
      // Max percentage of the subtotal that can be funded by the entity.
      TYPE_PERCENTAGE = 1;
      // Max amount that can be funded by the entity.
      TYPE_FLAT_AMOUNT = 2;
    }
    // Type of max limitation.
    Type type = 1;
    // Max percentage of the subtotal that can be funded by the entity.
    MaxPercentage percentage = 2;
    // Max amount that can be funded by the entity.
    MaxAmount flat_amount = 3;
    // Max percentage of the subtotal that can be funded by the entity.
    message MaxPercentage {
      // Percentage value.
      int32 value = 1;
    }
    // Max amount that can be funded by the entity.
    message MaxAmount {
      // Flat amount value.
      money.MonetaryFields flat_amount = 1;
    }
  }
  repeated FundingLimitation funding_limitations = 7;

  // The funding source of the subsidy.
  message FundingSource {
    // The type of the funding source.
    // i.e the subsidy can be from a campaign/enrichment/adgroup/ad etc.
    enum Type {
      // Unknown or not set type.
      TYPE_UNSPECIFIED = 0;
      // Type of the funding source is a campaign.
      TYPE_CAMPAIGN = 1;
      // Type of the funding source is an enrichment.
      TYPE_ENRICHMENT = 2;
    }
    // Type of the funding source.
    Type target_type = 1;

    google.protobuf.StringValue entity_id = 2;
  }
  // The funding source of the subsidy.
  FundingSource funding_source = 8;

  // billing profile id of the entity
  google.protobuf.StringValue billing_profile_id = 9;

  // fundedBy Id of the entity which is auto generated when campaign is created
  google.protobuf.StringValue funded_by_id = 10;
}

// To differentiate in the FundedBy proto which of percent or flat amount fields should be used
// Remainder type is used when multiple entities are funding the same thing and one entity covers a flat/percent amount
// of the total and the other covers the rest of the total
enum FundedByType {
  FUNDED_BY_UNSET = 0;
  FUNDED_BY_PERCENTAGE = 1;
  FUNDED_BY_FLAT_AMOUNT = 2;
  FUNDED_BY_REMAINDER = 3;
}

enum TaxPromotionType {
  UNDEFINED_PROMOTION_TYPE = 0;
  FIXED = 1;
  NOT_FIXED = 2;
}

enum BillingType {
  BILLING_TYPE_UNSPECIFIED = 0;
  BILLING_TYPE_WITHHOLDING = 1;
  BILLING_TYPE_INVOICING = 2;
  BILLING_TYPE_MARKETING_FUND = 3;
}

// Used for pricing <> MTS during tax call to account for item level promotions
message AppliedDiscounts {
  money.MonetaryFields discount_amount = 1;
  repeated google.protobuf.StringValue order_item_id = 2; //DEPRECATED
  string promo_id = 3; // string representation of UUID or long
  google.protobuf.StringValue promo_code = 4; // optional

  // only one of the following
  oneof target_id {
    google.protobuf.StringValue item_id = 5; // menu item id that promotion is being applied to
    google.protobuf.StringValue item_extra_option_id = 6; // item_extra_option_id that promo is being applied to
    google.protobuf.BoolValue is_subtotal_discount = 7; // should always be true if set
  }

  google.protobuf.StringValue external_campaign_id = 8;
  Funding campaign_funding = 9;
  PromoQuantity promo_quantity = 10;
  TaxPromotionType tax_promotion_type = 11;
}

message PromoQuantity {
  oneof promo_item_quantity {
    google.protobuf.Int32Value free_item_promo_quantity = 1;
    google.protobuf.Int32Value discount_item_promo_quantity = 2;
  }

  oneof promo_option_quantity {
    google.protobuf.Int32Value free_option_promo_quantity = 3;
    google.protobuf.Int32Value discount_option_promo_quantity = 4;
  }
}

// will be replacing Fee object
message Funding {
  repeated PlatformFee platform_fees = 1;
  repeated FundedBy discount_subsidy_funded_by = 2;
  google.protobuf.BoolValue is_invoiced = 3;
  // Flag to indicate if the discount should be excluded from marketing fee calculation in Merchant Finance Service
  // The Mx funded item discount from Mx ingested flow (CnG) should be excluded, whereas it should be included in Rx
  google.protobuf.BoolValue disable_pass_through_for_item_promo = 4;
  BillingType billing_type = 5;
}

message PlatformFee {
  PlatformFeeType type = 1;

  enum PlatformFeeType {
    PLATFORM_FEE_TYPE_INVALID = 0;
    PLATFORM_FEE_TYPE_UNSET = 1;
    PLATFORM_FEE_TYPE_FLAT_FEE = 2;
    PLATFORM_FEE_TYPE_PERCENTAGE_FEE = 3;
  }

  repeated FundedBy funded_by = 2;

  oneof value {
    PercentageFee percentage_fee = 3;
    FlatFee flat_fee = 4;
  }
}

message FlatFee {
  money.MonetaryFields amount = 1;

  // to distinguish whether the flat fee is for discount or extra fee charged by DD
  enum FlatFeeType {
    // unset, for backward compatibility of legacy campaigns
    FLAT_FEE_TYPE_UNSET = 0;
    // redemption platform fee, typically 0.99$ extra fee per redemption
    FLAT_FEE_TYPE_REDEMPTION_PLATFORM_FEE = 1;
    // discount fee, should match with actual flat discount
    FLAT_FEE_TYPE_DISCOUNT = 2;
  }

  // flat fee type
  FlatFeeType type = 2;
}

message PercentageFee {
  google.protobuf.StringValue percentage = 2;

  money.MonetaryFields max_amount = 3;
}

message EligibleSubscriptionSavingDetails {
  money.MonetaryFields refund_amount = 1;
  SubscriptionPlanDetails plan_details = 2;
  money.MonetaryFields fees_and_tax_after_subscription = 3;
  money.MonetaryFields delivery_fee_after_subscription = 4;
  money.MonetaryFields total_after_subscription = 5;
}
message SubscriptionPlanDetails {
  google.protobuf.StringValue id = 1;
  money.MonetaryFields fee = 2;
  google.protobuf.StringValue country_code = 3;
  google.protobuf.BoolValue is_partner_plan = 4;
  google.protobuf.BoolValue is_annual_plan = 5;
  money.SubscriptionRecurrenceIntervalType recurrence_interval_type = 6;
  money.SubscriptionPlanDiscount consumer_discount = 7;
  money.SubscriptionTermsAndConditions terms_and_conditions = 8 [deprecated = true]; // Moved to UpsellDetails
  repeated money.EligibleSubscriptionTrialPlan subscription_trial_plans = 9 [deprecated = true]; // Moved to UpsellDetails
  google.protobuf.StringValue subscription_signup_title = 10 [deprecated = true]; // Moved to UpsellDetails
  UpsellDetails upsell_details = 11;
}

enum UpsellOfferType {
  UPSELL_OFFER_TYPE_UNSPECIFIED = 0;
  UPSELL_OFFER_TYPE_EXPRESS_DELIVERY = 1;
  UPSELL_OFFER_TYPE_DEALSPROMO = 2;
  UPSELL_OFFER_TYPE_MPV2 = 3;
}

enum BannerDetailsBadgeType {
  BANNER_DETAILS_BADGE_TYPE_UNSPECIFIED = 0;
  BANNER_DETAILS_BADGE_TYPE_DASHPASS = 1;
}

enum BannerDetailsBannerType {
  BANNER_DETAILS_BANNER_TYPE_UNSPECIFIED = 0;
  BANNER_DETAILS_BANNER_TYPE_DASHPASS_DEALS = 1;
}

message UpsellBannerDetails {
  google.protobuf.StringValue title = 1;
  BannerDetailsBadgeType badge_type = 2;
  BannerDetailsBannerType banner_type = 3;
}

message UpsellDetails {
  google.protobuf.StringValue checkbox_title = 1;
  google.protobuf.StringValue checkbox_subtitle = 5;
  SubscriptionTermsAndConditions checkbox_terms_and_conditions = 2;
  google.protobuf.StringValue acknowledgement_message = 10;
  UpsellConfirmation upsell_confirmation = 3;
  UpsellType upsell_type = 4;
  UpsellLocation upsell_location = 6;
  UpsellAudience upsell_audience = 7;
  UpsellBannerDetails banner_details = 8;
  repeated UpsellOfferType upsell_offer_types = 9;
  google.protobuf.BoolValue is_pre_selected = 11;
  google.protobuf.BoolValue use_get_upsell_details_for_order_cart = 12;
}

enum UpsellType {
  UPSELL_TYPE_UNSPECIFIED = 0;
  UPSELL_TYPE_UNKNOWN = 1;
  UPSELL_TYPE_TRIAL = 2;
  UPSELL_TYPE_RESUME_PAUSED_PLAN = 3; // Resuming a previously paused plan for dashpass pause
  UPSELL_TYPE_POST_SIGNUP = 4;
  UPSELL_TYPE_NON_DP_PARTNER_STORE_DELIVERY = 5;
  UPSELL_TYPE_NON_DP_PARTNER_STORE_PICKUP = 6;
  UPSELL_TYPE_MINIMUM_SUBTOTAL_STANDARD = 7;
  UPSELL_TYPE_MINIMUM_SUBTOTAL_GROCERY = 8;
  UPSELL_TYPE_ANNUAL_PLAN = 9;
  UPSELL_TYPE_RESUME_PAUSED_PLAN_AND_CONTINUE = 10; // New version of cart resume upsell
  UPSELL_TYPE_LATE_CREDITS_MORE_INFO = 11;
  UPSELL_TYPE_RESURRECTED_TRIAL = 12;
  UPSELL_TYPE_DTP = 13;
  UPSELL_TYPE_RESUME_PAUSED_PAYMENT_FAILED_PLAN = 14;
  UPSELL_TYPE_TRIAL_TO_ANNUAL_PLAN = 15;
  UPSELL_TYPE_DASHMART_SATISFACTION_GUARANTEED = 16;
  UPSELL_TYPE_PARTNER_PLAN = 17;
  UPSELL_TYPE_TODP = 18;
  UPSELL_TYPE_MINIMUM_SUBTOTAL_EXPRESS_DELIVERY = 19;
  UPSELL_TYPE_TRIAL_MULTI_PLANS = 20;
  UPSELL_TYPE_DTP_MULTI_PLANS = 21;
  // New version of UPSELL_TYPE_RESUME_PAUSED_PLAN which removes the upsell bottom-sheet and shows inline upsell in checkout.
  UPSELL_TYPE_SEAMLESS_RESUME_PAUSED_PLAN = 22;
  UPSELL_TYPE_RESURRECTION_RESUME = 23;
  UPSELL_TYPE_RESURRECTION_RESUBSCRIBE = 24;
}

enum UpsellLocation {
  DEFAULT_NONSTICKY = 0;
  STICKY_ABOVE_CTA = 1;
  STICKY_BELOW_CTA = 2;
}

enum UpsellAudience {
  UNSPECIFIED_AUDIENCE = 0;
  WBD_TRIAL_2_MONTHS = 1;
  WBD_TRIAL_3_MONTHS = 2;
  WBD_TRIAL_4_MONTHS = 3;
  CLASSIC_FREE_TRIAL = 4;
  RESURRECTED_FREE_TRIAL = 5;
  WBD_DTP_1_MONTHS = 6;
  WBD_DTP_2_MONTHS = 7;
  WBD_DTP_3_MONTHS = 8;
  WBD_DTP_4_MONTHS = 9;
  PARTNER_PLAN_TRIAL = 10;
  WBD_TRIAL_1_MONTH = 11;
  MULTI_PLANS_TRIAL = 12;
  PAUSE_RESUME_FREE_TRIAL = 13;
  MULTI_PLANS_DTP = 14;
  EASY_UNPAUSE_V2 = 15;
  RESUME_DTP_OHAR = 16;
  EASY_UNPAUSE_V1 = 17;
  MASTER_CARD_ANNUAL_PLAN = 18;
  SODP_ANNUAL_PLAN = 19;
  BF_ANNUAL_PLAN = 20;
  TRIAL_TO_ANNUAL_PLAN = 21;
  ANNUAL_UPGRADE_MAX_FOR_ANNUAL_PLAN_WITH_INTRO_OFFERS = 22;
  ANNUAL_UPGRADE_MAX_FOR_ANNUAL_PLAN_WITHOUT_INTRO_OFFERS = 23;
  ANNUAL_UPGRADE_MAX_FOR_MULTI_PLAN_DTP = 24;
  ANNUAL_UPGRADE_MAX_FOR_MULTI_PLAN_TRIAL = 25;
  RESURRECTION_RESUME = 26;
  RESURRECTION_RESUBSCRIBE = 27;
  ANNUAL_UPGRADE_MAX_FOR_ANNUAL_PLAN_FROM_INTRO_PRICING = 28;
  SNAP_MONTHLY_PLAN_TRIAL = 29;
  SNAP_MONTHLY_PLAN_DTP = 30;
  ANNUAL_UPGRADE_MAX_AND_LCB_FOR_ANNUAL_PLAN_WITH_INTRO_OFFERS = 31;
  ANNUAL_UPGRADE_MAX_AND_LCB_FOR_ANNUAL_PLAN_WITHOUT_INTRO_OFFERS = 32;
  ANNUAL_UPGRADE_MAX_AND_LCB_FOR_MULTI_PLAN_DTP = 33;
  ANNUAL_UPGRADE_MAX_FOR_MULTI_PLAN_DTP_WITH_INTRO_OFFERS = 34;
  ANNUAL_UPGRADE_MAX_AND_LCB_FOR_MULTI_PLAN_TRIAL = 35;
  // audience for monthly drop
  ANNUAL_UPGRADE_MAX_AND_MD_FOR_ANNUAL_PLAN_WITH_INTRO_OFFERS = 36;
  ANNUAL_UPGRADE_MAX_AND_MD_FOR_ANNUAL_PLAN_WITHOUT_INTRO_OFFERS = 37;
  ANNUAL_UPGRADE_MAX_AND_MD_FOR_MULTI_PLAN_DTP = 38;
  ANNUAL_UPGRADE_MAX_AND_MD_FOR_MULTI_PLAN_TRIAL = 39;
  PAD_REVERSE_TRIAL = 40;
  ANNUAL_UPGRADE_MAX_AND_AP_EXPANSION = 41;
}

message UpsellConfirmation {
  google.protobuf.StringValue title = 1;
  repeated UpsellConfirmationDescriptionSection description = 2;
  repeated UpsellConfirmationAction actions = 3;
  SubscriptionTermsAndConditions terms_and_conditions = 4;
  google.protobuf.StringValue billing_info = 5;
  UpsellConfirmationAccessoryType accessory_type = 6;
  BadgeType header_badge = 7;
  UpsellConfirmationPaymentStyleType payment_style_type = 8;
  SubscriptionPaymentCard subscription_payment_method = 9;
}

message SubscriptionPaymentCard {
  google.protobuf.StringValue id = 1;
  google.protobuf.StringValue stripe_id = 2;
  // Not used
  google.protobuf.StringValue consumer_id = 3;
  google.protobuf.StringValue last4 = 4;
  google.protobuf.StringValue type = 5;
  google.protobuf.StringValue exp_month = 6;
  google.protobuf.StringValue exp_year = 7;
  google.protobuf.StringValue card_benefit_membership_link_status = 8;
  // Not used, use the display name in membership type instead
  google.protobuf.StringValue partner_card_display_name = 9;
  // Not used, use the partner name in membership type instead
  PartnerName partner_name = 10;
  google.protobuf.StringValue fingerprint = 11;
  google.protobuf.StringValue dynamic_last4 = 12;
  SubscriptionCardMembershipInfo membership_type = 13;
}

message SubscriptionCardMembershipInfo {
  google.protobuf.StringValue partner_card_display_name = 1;
  google.protobuf.StringValue partner_card_last4 = 2;
  PartnerName partner_name = 3;
}

enum PartnerName {
  UNKNOWN_PARTNER_NAME = 0;
  PARTNER_NAME_CHASE = 1;
  PARTNER_NAME_MASTERCARD = 2;
  PARTNER_NAME_RBC = 3;
  PARTNER_NAME_AFTERPAY = 4;
}

enum UpsellConfirmationPaymentStyleType {
  UPSELL_CONFIRMATION_PAYMENT_STYLE_TYPE_UNKNOWN = 0;
  UPSELL_CONFIRMATION_PAYMENT_STYLE_TYPE_DEFAULT = 1;
  UPSELL_CONFIRMATION_PAYMENT_STYLE_TYPE_NATIVE = 2;
}

enum UpsellConfirmationAccessoryType {
  UPSELL_CONFIRMATION_ACCESSORY_TYPE_UNKNOWN = 0;
  UPSELL_CONFIRMATION_ACCESSORY_TYPE_PAYMENT_METHOD_SELECTION = 1;
  UPSELL_CONFIRMATION_ACCESSORY_TYPE_ADDITIONAL_BILLING_INFO = 2;
  UPSELL_CONFIRMATION_ACCESSORY_TYPE_PAYMENT_METHOD_DEFAULT = 3;
  UPSELL_CONFIRMATION_ACCESSORY_TYPE_ADD_NEW_PAYMENT_METHOD = 4;
}

// Used for both UpsellConfirmation and UpsellBanner
message UpsellConfirmationDescriptionSection {
  UpsellConfirmationDescriptionSectionType type = 1;
  google.protobuf.StringValue text = 2;

  // Usually there is spacing between description sections
  // If there are nested children, they will be displayed without spacing
  repeated UpsellConfirmationDescriptionSection description = 3;
  google.protobuf.StringValue badge_url = 4;
  UpsellConfirmationBadgeSize badge_size = 5;
}

enum UpsellConfirmationBadgeSize {
  UPSELL_CONFIRMATION_BADGE_SIZE_UNSPECIFIED = 0;
  UPSELL_CONFIRMATION_BADGE_SIZE_XXX_SMALL = 1;
  UPSELL_CONFIRMATION_BADGE_SIZE_XX_SMALL = 2;
  UPSELL_CONFIRMATION_BADGE_SIZE_X_SMALL = 3;
  UPSELL_CONFIRMATION_BADGE_SIZE_SMALL = 4;
  UPSELL_CONFIRMATION_BADGE_SIZE_MEDIUM = 5;
  UPSELL_CONFIRMATION_BADGE_SIZE_LARGE = 6;
  UPSELL_CONFIRMATION_BADGE_SIZE_X_LARGE = 7;
  UPSELL_CONFIRMATION_BADGE_SIZE_XX_LARGE = 8;
  UPSELL_CONFIRMATION_BADGE_SIZE_XXX_LARGE = 9;
  UPSELL_CONFIRMATION_BADGE_SIZE_XXXX_LARGE = 10;
}

enum UpsellConfirmationDescriptionSectionType {
  UPSELL_CONFIRMATION_DESCRIPTION_SECTION_TYPE_UNKNOWN = 0;
  UPSELL_CONFIRMATION_DESCRIPTION_SECTION_TYPE_PLAIN_TEXT = 1;
  UPSELL_CONFIRMATION_DESCRIPTION_SECTION_TYPE_LIST_ITEM = 2;
  UPSELL_CONFIRMATION_DESCRIPTION_SECTION_TYPE_TITLE_TEXT = 3;
  UPSELL_CONFIRMATION_DESCRIPTION_SECTION_TYPE_SUBTITLE_TEXT = 4;
  UPSELL_CONFIRMATION_DESCRIPTION_SECTION_TYPE_TAG_TEXT = 5;
  UPSELL_CONFIRMATION_DESCRIPTION_SECTION_TYPE_TAG_TEXT_EMPHASIZED = 6;
}

message UpsellConfirmationAction {
  google.protobuf.StringValue label = 1;
  UpsellConfirmationActionType type = 2;
  repeated UpsellConfirmationActionParameter parameters = 3;
}

enum UpsellConfirmationActionType {
  UPSELL_CONFIRMATION_ACTION_TYPE_UNSPECIFIED = 0;
  UPSELL_CONFIRMATION_ACTION_TYPE_UNKNOWN = 1;
  UPSELL_CONFIRMATION_ACTION_TYPE_RESUME_SUBSCRIPTION = 2;
  UPSELL_CONFIRMATION_ACTION_TYPE_START_FREE_TRIAL = 3;
  UPSELL_CONFIRMATION_ACTION_TYPE_GO_BACK = 4;
  UPSELL_CONFIRMATION_ACTION_TYPE_DP_STORES = 5;
  UPSELL_CONFIRMATION_ACTION_TYPE_ALL_STORES = 6;
  UPSELL_CONFIRMATION_ACTION_TYPE_ADD_MORE_ITEMS = 7;
  UPSELL_CONFIRMATION_ACTION_TYPE_ANNUAL_SUBSCRIPTION = 8;
  UPSELL_CONFIRMATION_ACTION_TYPE_RESUME_SUBSCRIPTION_AND_CONTINUE = 9;
  UPSELL_CONFIRMATION_ACTION_TYPE_MORE_INFO = 10;
  UPSELL_CONFIRMATION_ACTION_TYPE_LEARN_MORE = 11;
  UPSELL_CONFIRMATION_ACTION_TYPE_SUBSCRIBE = 12;
  UPSELL_CONFIRMATION_ACTION_TYPE_TRANSITION_SUBSCRIPTION = 13;
  UPSELL_CONFIRMATION_ACTION_TYPE_CHECKOUT_MODAL = 14;
  UPSELL_CONFIRMATION_ACTION_TYPE_RESUME_SUBSCRIPTION_AND_PLACE_ORDER = 15;
  UPSELL_CONFIRMATION_ACTION_TYPE_ANNUAL_UPGRADE = 16;
}

message UpsellConfirmationActionParameter {
  UpsellConfirmationActionParameterType key = 1;
  google.protobuf.StringValue value = 2;
}

enum UpsellConfirmationActionParameterType {
  UPSELL_CONFIRMATION_ACTION_PARAMETER_TYPE_UNSPECIFIED = 0;
  UPSELL_CONFIRMATION_ACTION_PARAMETER_TYPE_UNKNOWN = 1;
  //Deprecated, plan id will be used instead
  UPSELL_CONFIRMATION_ACTION_PARAMETER_TYPE_TRIAL_PLAN_ID = 2;
  UPSELL_CONFIRMATION_ACTION_PARAMETER_TYPE_TOOL_TIP_TEXT = 3;
  UPSELL_CONFIRMATION_ACTION_PARAMETER_TYPE_LEARN_MORE_LINK = 4;
  UPSELL_CONFIRMATION_ACTION_PARAMETER_TYPE_PLAN_ID = 5;
  UPSELL_CONFIRMATION_ACTION_PARAMETER_TYPE_NATIVE_PAYMENT_STYLE = 6;
  UPSELL_CONFIRMATION_ACTION_PARAMETER_TYPE_SUCCESS_MESSAGE = 7;
  UPSELL_CONFIRMATION_ACTION_PARAMETER_TYPE_FAILURE_MESSAGE = 8;
  UPSELL_CONFIRMATION_ACTION_PARAMETER_TYPE_TRANSITION_TYPE = 9;
  UPSELL_CONFIRMATION_ACTION_PARAMETER_TYPE_ENTRY_POINT = 10;
  UPSELL_CONFIRMATION_ACTION_PARAMETER_TYPE_FEE_UNIT_AMOUNT = 11;
  UPSELL_CONFIRMATION_ACTION_PARAMETER_TYPE_COUNTRY_CODE = 12;
  UPSELL_CONFIRMATION_ACTION_PARAMETER_TYPE_FEE_CURRENCY = 13;
  UPSELL_CONFIRMATION_ACTION_PARAMETER_TYPE_PAYMENT_OPTION = 14;
}

enum CartVersion {
  CART_VERSION_UNSPECIFIED = 0;
  CART_VERSION_UNKNOWN = 1;
  CART_VERSION_TWO_PAGE = 2;
  CART_VERSION_ONE_PAGE = 3;
}

message UpsellOptions {
  // Whether the user has checked the cart upsell checkbox or not
  // Based on this, for some upsells we will generate the order quote or parts of the upsell differently
  google.protobuf.BoolValue cart_upsell_selected = 1;

  // Depending on the cart version, some details in the upsell may change
  CartVersion cart_upsell_version = 2;
}

enum GrantFreeDashpassReason {
  GRANT_FREE_DASHPASS_REASON_UNSPECIFIED = 0;
  GRANT_FREE_DASHPASS_REASON_UNKNOWN = 1;
  GRANT_FREE_DASHPASS_REASON_CUSTOMER_SUPPORT = 2;
  GRANT_FREE_DASHPASS_REASON_ON_TIME_DELIVERY_PROMISE = 3;
  GRANT_FREE_DASHPASS_REASON_CANCELLATION_SURVEY_UPSELL = 4;
  GRANT_FREE_DASHPASS_REASON_GIFTING = 5;
}

message UpsellBanner {
  BadgeType badge_type = 1;
  google.protobuf.StringValue title = 2;
  repeated UpsellConfirmationDescriptionSection sections = 3;
  UpsellConfirmationAction action = 4;
}

message EligibleSubscriptionTrialPlan {
  google.protobuf.StringValue id = 1;
  SubscriptionRecurrenceIntervalType recurrence_interval_type = 2;
  google.protobuf.Int32Value recurrence_interval_units = 3;
  SubscriptionTrialPlanMetaData trial_plan_meta_data = 4;
}

message SubscriptionTermsAndConditions {
  google.protobuf.StringValue description = 1;
  repeated SubscriptionTermsAndConditionsSubtext subtext = 2;
}

message SubscriptionTermsAndConditionsSubtext {
  google.protobuf.Int32Value length = 1;
  google.protobuf.StringValue hyperlink = 2;
  google.protobuf.Int32Value start_index = 3;
}

message SubscriptionPlanDiscount {
  money.MonetaryFields delivery_fee = 1;
  google.protobuf.FloatValue service_rate_percentage = 2;
  money.MonetaryFields minimum_subtotal = 3;
  money.MonetaryFields extra_sos_fee = 4;
}

message SubscriptionTrialPlanMetaData {
  google.protobuf.StringValue callout_text = 1;
  google.protobuf.StringValue policy_url = 2;
  google.protobuf.StringValue trial_consent_text = 3;
}

enum SubscriptionRecurrenceIntervalType {
  UNKNOWN_RECURRENCE_INTERVAL_TYPE = 0;
  DAY = 1;
  WEEK = 2;
  MONTH = 3;
  YEAR = 4;
}

message PricingQuantity {
  oneof value {
    google.protobuf.Int32Value discrete_quantity = 1;
    google.protobuf.DoubleValue continuous_quantity = 2;
  }
}

message ClientFraudContext {
  google.protobuf.StringValue stripe_radar_session_id = 1;
  google.protobuf.StringValue braintree_device_data_id = 2;
  map<string, string> context_map = 3;
}

// Struct representing the identifier of a reward
message LoyaltyRewardIdentifier {
  // In some external systems(Paytronix specifically), there are two fields to identify a reward: id and code while
  // some might require only the id. This struct gives us the flexibility to specify one or both
  google.protobuf.StringValue id = 1;
  google.protobuf.StringValue code = 2;
}

enum LoyaltyRewardFundingSource {
  // Default
  UNKNOWN_LOYALTY_REWARD_FUNDING_SOURCE = 0;
  // Mx external loyalty platform
  MERCHANT_EXTERNAL = 1;
}

// This is very similar to a Promotion.Incentive.IncentiveValue message.
message LoyaltyRewardValue {
  enum LoyaltyRewardValueType {
    UNKNOWN_LOYALTY_REWARD_VALUE_TYPE = 0;
    PERCENT_OFF_LOYALTY_REWARD_VALUE_TYPE = 1;
    FLAT_AMOUNT_OFF_LOYALTY_REWARD_VALUE_TYPE = 2;
    SET_VALUE_LOYALTY_REWARD_VALUE_TYPE = 3;
  }
  LoyaltyRewardValueType type = 1;
  oneof value {
    // Percent off if the discount is of type PERCENT_OFF
    int32 percent_off = 2;

    // Flat amount off if the discount is of type FLAT_AMOUNT_OFF
    money.MonetaryFields flat_amount_off = 3;

    // Specific value if the discount is of type SPECIFIC_VALUE (e.g. $1 delivery fee)
    money.MonetaryFields set_value = 4;
  }
}

// This is used to filter the items that are eligible for a LoyaltyReward
message LoyaltyRewardItemFilterCondition {
  enum LoyaltyRewardItemFilterConditionType {
    LOYALTY_REWARD_ITEM_FILTER_CONDITION_TYPE_UNKNOWN = 0;
    LOYALTY_REWARD_ITEM_FILTER_CONDITION_TYPE_ITEM_ID = 1;
    LOYALTY_REWARD_ITEM_FILTER_CONDITION_TYPE_BRAND_ID = 2;
  }
  // The type of the filter condition
  LoyaltyRewardItemFilterConditionType type = 1;
  // The value of the filter condition
  google.protobuf.StringValue value = 2;
}

message LoyaltyReward {
  // Represents the funding source of the loyalty reward. Here funding source = who hosts the reward
  LoyaltyRewardFundingSource source = 1;
  // Represents the target for the reward. Example: subtotal, item, delivery_fee etc
  DiscountTarget discount_target = 2;
  // Represents the type of reward. Example: flat_amount, % off etc
  LoyaltyRewardValue value = 3;
  // Unique identifier for the reward in the external or internal system. This along with the
  // LoyaltyRewardFundingSource uniquely identifies the reward in the external or internal system
  LoyaltyRewardIdentifier identifier = 4;
  // The human readable name of the reward
  google.protobuf.StringValue name = 5;
  // Quantity of the reward applicable
  google.protobuf.Int32Value quantity = 6;
  // reward expiration date
  google.protobuf.Timestamp expires_on = 7;
  // When discountTarget == item, this field represents the filter condition for which items are eligible for the reward
  LoyaltyRewardItemFilterCondition item_filter_condition = 8;
  // points required, added as part of spoton integration
  google.protobuf.Int32Value points_required = 9;
  // The human readable description of the reward
  google.protobuf.StringValue description = 10;
  // The URL value of the image of the reward
  google.protobuf.StringValue image_url = 11;
  // A decimal value referring to the amount of cash rewards accrued, added for punchh
  LoyaltyRewardValue banked_rewards_amount = 12;
}

message LoyaltyRewardDetails {
  // The list of rewards that are applicable for an order
  repeated LoyaltyReward rewards = 1;
  // The sum total of rewards that are applicable for an order.
  google.protobuf.Int32Value rewards_total = 2;
}

message LoyaltyRewardBalances {
  // The list of applicable reward balances after redemption
  repeated LoyaltyReward rewards = 1;
}

// Monetary fields related to coupon promotion
message PromoCouponDetails {
  // Coupon code
  google.protobuf.StringValue coupon_code = 1;
  // Discount amount value of coupon in USD, as that is the format provided back to us in response
  google.protobuf.Int32Value discount_amount = 2;
  // Total after coupon applied, in USD, as that is the format in response.
  // $32.42 will have a value of 3242 here.
  google.protobuf.Int32Value total = 3;
}

// Enum to denote which type of coupon
enum PromoCouponType {
  // Unknown
  PROMO_COUPON_TYPE_UNSPECIFIED = 0;
  // Amount
  PROMO_COUPON_TYPE_AMOUNT = 1;
  // Percentage
  PROMO_COUPON_TYPE_PERCENTAGE = 2;
}

// Data fields related to 3P coupon promotion used in both MIS and CIS
message PromoCouponData {
  // Identifier for the user's external loyalty membership account.
  // This could point towards a membership_id, user_id or some unique identifier in the external system
  google.protobuf.StringValue external_user_identifier = 1;
  // Merchant id in the external loyalty provider
  google.protobuf.StringValue external_merchant_id = 2;
  // Store id in the external loyalty provider
  google.protobuf.StringValue external_store_id = 3;
  // Identifier UUID associated with delivery
  google.protobuf.StringValue delivery_uuid = 4;
  // Identifier for internal cart id
  google.protobuf.StringValue cart_uuid = 5;
  // This is the coupon code in external system
  google.protobuf.StringValue coupon_code = 6;
  // Amount that the coupon intends to remove
  google.protobuf.Int32Value coupon_amount = 7;
  // Type of coupon
  PromoCouponType coupon_type = 8;
  // store id - internal DD store id
  google.protobuf.StringValue internal_store_id = 9;
  // Identifier for external provider cart id
  google.protobuf.StringValue external_cart_id = 10;
}

message DoorDashLoyaltyPointsSummary {
  // The total amount of loyalty points
  google.protobuf.Int32Value loyalty_points = 1;
  // The loyalty program ID
  google.protobuf.StringValue program_id = 2;
  // The loyalty membership ID
  google.protobuf.StringValue membership_id = 3;
  // The reward progress display message
  google.protobuf.StringValue rewards_progress_display_text = 4;
  // Store Loyalty Program Type
  common.loyalty.v1.StoreLoyaltyProgramType store_loyalty_program_type = 5;
  // program metadata
  common.loyalty.v1.StoreLoyaltyProgramData store_loyalty_program_data = 6;
  // user loyalty state type
  common.loyalty.v1.UserLoyaltyStateType user_loyalty_state_type = 7;
  // external loyalty provider, indicates the type of loyalty provider
  common.LoyaltyProviderType loyalty_provider = 8;
  // list of loyalty program summaries that is applicable on the order
  repeated common.loyalty.v1.LoyaltyProgramSummary loyalty_program_summaries = 9;
}

enum FeeCategoryType {
  // unspecified fee category
  UNSPECIFIED_FEE_CATEGORY_TYPE = 0;
  // for cup fee
  CUP_FEE = 1;
  // for bag fee
  BAG_FEE = 2;
  // for LEGISLATIVE_FEE and TX_REGULATORY_RECOVERY_FEE
  LEG_FEE = 3;
  // for REGULATORY RESPONSE FEE
  REGULATORY_RESPONSE_FEE = 4;
  // for bottle deposit fee
  BOTTLE_DEPOSIT_FEE = 5;
  // for RETAIL_DELIVERY_FEE
  RETAIL_DELIVERY_FEE = 6;
  // for dbp expand range fee
  DBP_EXPAND_RANGE_FEE = 7;
  // for affordable meals - overrides item price
  AFM_PRICE_FEE = 8;
  // for dasher equity fee
  DASHER_EQUITY_FEE = 9;
  // for membership purchase
  MEMBERSHIP_FEE = 10;
  // for marketplace return
  UNDELIVERABLE_FEE = 11;
  // for SF Health Mandate fee
  SF_HEALTH_MANDATE_FEE = 12;
  // for staff benefits fee
  STAFF_BENEFITS_FEE = 13;
  // for restaurant operations fee
  RESTAURANT_OPERATIONS_FEE = 14;
}

message FeeCategory {
  FeeCategoryType fee_category_type = 1;
}

message ItemFee {
  // fee category type: e.g. bag_fee, cup_fee
  FeeCategoryType fee_category_type = 1;
  // amount of the fee in cents.
  google.protobuf.Int64Value fee_amount = 2;
}

// individual generic fee amount and it's root which cause the generic fee
message GenericFeeLink {
  // Item or Item Option's id that generated the individual costs
  google.protobuf.StringValue rootId = 1;
  MonetaryFields feeAmount = 2;
}

// hold non-Doordash fee details
message GenericFeeItemDetails {
  // localized name of the fee, displayed on receipt
  string label = 1;
  // message shown in the tooltip box
  string tooltip_message = 2;
  // fee configuration id
  string fee_config_id = 3;
  // fee category type: e.g. bag_fee, cup_fee
  FeeCategoryType fee_category_type = 4;
  // amount of the final fee
  MonetaryFields fee_amount = 5;
  // fee tax
  MonetaryFields fee_tax_amount = 6;
  string tax_line_item_type = 7;
  repeated GenericFeeLink generic_fee_links = 8;
  // Flag to indicate if the fee should be part of taxes and fees or should be a line item on itself
  google.protobuf.BoolValue should_bundle_with_tax_and_fees = 9;
  google.protobuf.Int32Value fee_units_charged = 10;
  MonetaryFields unit_fee_amount = 11;
  // amount of the original fee to show as strikethrough
  MonetaryFields original_fee_amount = 12;
  // for generic fee line item description mapping
  string line_item_description = 13;
}

message DasherPaymentDetails {
  MonetaryFields in_store_checkout_amount = 1;
}

message ExternalGiftCard {
  google.protobuf.StringValue external_gift_card_number_token = 1;
  MonetaryFields value_to_redeem = 2;
}

message ExternalGiftCardDetails {
  repeated ExternalGiftCard external_gift_cards = 1;
}

message ScheduleAndSaveDetails {
  repeated dayparts.DayPart day_part = 1;
  google.protobuf.StringValue timezone = 2;
}

message SupplementalPaymentAuthorizedAmount {
  SupplementalPaymentType type = 1;
  money.MonetaryFields authorized_amount = 2;
}

message SupplementalPaymentEligibleSubtotal {
  SupplementalPaymentType type = 1;
  money.MonetaryFields eligible_amount = 2;
}

enum SupplementalPaymentType {
  SUPPLEMENTAL_PAYMENT_TYPE_UNSPECIFIED = 0;
  SUPPLEMENTAL_PAYMENT_TYPE_SNAP = 1;
  SUPPLEMENTAL_PAYMENT_TYPE_HSA_FSA = 2;
}

message OrderSupplementalPaymentInfo {
  // Amount charged to a supplemental payment method
  SupplementalPaymentType type = 1;
  money.MonetaryFields amount = 2;
  // Payment method id for the payment type like SNAP/EBT etc
  google.protobuf.StringValue payment_method_id = 3;
  // Payment card id for the payment type like SNAP/EBT etc
  google.protobuf.Int64Value payment_card_id = 4;
}

// Modal with title, content, banner and button in vertical order
// Currently it is used to disclose service fee in multiple pages with the same look and feel
// To avoid duplicated code, it is created as a common data structure to share in multiple services
message ModalWithBanner {
  // Title of the modal
  google.protobuf.StringValue title = 1;
  // Text content of the modal
  google.protobuf.StringValue description = 2;
  // Optional bullet description
  repeated google.protobuf.StringValue bullet_descriptions = 3;
  // Banner within the modal, currently right above buttons
  repeated Banner banners = 4;
  // A list of buttons at the bottom of the modal
  repeated Button buttons = 5;

  // Button at the bottom of the modal
  message Button {
    // Text on the button
    google.protobuf.StringValue text = 1;
    // URL that the button leads to
    google.protobuf.StringValue action = 2;
    // Leading icon of the button
    IconType icon_type = 3;
    // Style of the button
    ButtonType button_type = 4;
  }

  // Banner, currently above the buttons
  message Banner {
    // Banner title
    google.protobuf.StringValue title = 1;
    // Leading icon of the title
    IconType title_icon_type = 2;
    // Text content inside the banner
    google.protobuf.StringValue description = 3;
    // A image within the banner beside text content
    // [DEPRECATED] as of 2022/08/22, new Figma design no longer contain icon in banner body
    google.protobuf.StringValue description_icon_url = 4;
    // A list of buttons at the bottom of the banner
    repeated Button buttons = 5;
  }

  // Button types, only two right now since SECONDARY is deprecated
  enum ButtonType {
    // required by linter, won't use in backend, treat as PRIMARY
    BUTTON_TYPE_UNSPECIFIED = 0;
    // red button
    BUTTON_TYPE_PRIMARY = 1;
    // white button
    BUTTON_TYPE_TERTIARY = 2;
  }

  // Icon types, only two right now
  enum IconType {
    // required by linter, won't use in backend, treat as no icon
    ICON_TYPE_UNSPECIFIED = 0;
    // no icon
    ICON_TYPE_NONE = 1;
    // dashpass icon
    ICON_TYPE_DASHPASS = 2;
  }
}

enum RewardBalancePaymentIdType {
  UNKNOWN_ID = 0;
  PAYMENT_METHOD_UUID = 1;
  STRIPE_CARD_ID = 2;
}

// Dashcard pay with points rewards balance details
message RewardBalanceDetails {
  // Monetary value of the reward balance
  MonetaryFields monetary_value = 1;
  // Indicates transaction detail of the reward
  RewardTransactionDetails transaction_amount = 2;
  // Indicates the payment card id of the payment card used order checkout
  google.protobuf.StringValue payment_card_id = 3;
  // Indicates the payment card id type of payment_card_id
  RewardBalancePaymentIdType payment_card_id_type = 4;
}

// Dashcard pay with points rewards transaction details
message RewardTransactionDetails {
  // Numeric amount for the transaction
  int64 amount = 1;
  // Labels of the amount value such as points, labels, etc ...
  google.protobuf.StringValue label = 2;
  // How many miles/points each dollar is worth
  float conversion_rate = 3;
}

// Dashcard pay with points rewards balance info
message RewardBalanceInfo {
  // How much reward balance is remaining
  RewardBalanceDetails reward_balance_available = 1;
  // How much reward balance has been applied
  RewardBalanceDetails reward_balance_applied = 2;
}

// Different types of order flows
enum OrderFlowType {
  // Default unspecified order flow type if type is unknown or not set
  ORDER_FLOW_TYPE_UNSPECIFIED = 0;
  // OCA - order adjustment made without cx intervention
  ORDER_FLOW_TYPE_ADJUST_ORDER_WITHOUT_CX_CONTROL = 1;
  // DYF - order adjustment made with cx intervention
  ORDER_FLOW_TYPE_ADJUST_ORDER_WITH_CX_CONTROL = 2;
}

message FederatedSource {
  enum Type {
    UNSET = 0;
    RETAIL_INVENTORY = 1;
    MX_3P_FUNDED = 2;
    NV_INCENTIVE_SERVICE = 3;
  }
}

enum DiscountVertical {
  // other verticals will be mapped to INVALID
  INVALID = 0;
  MX_INGESTED = 1;
  MX_3P_FUNDED = 2;
  EXT_DEALS_AGGREGATOR_IBOTTA = 3;
}

// Details in the HsaFsaDetailsV2 are specific to hsa-fsa
// Ex: subtotal is actually hsa-fsa subtotal
message HsaFsaDetailsV2 {
  message HsaFsaDiscount {
    MonetaryFields amount = 1;
    string assigned_to_item_id = 2;
  }
  message HsaFsaGenericFee {
    string fee_type = 1;
    MonetaryFields amount = 2;
    MonetaryFields tax_amount = 3;
    string assigned_to_item_id = 4; // optional
  }
  // All eligible charges. All the fees are final fees i.e. after subscription and other discounts
  google.protobuf.FloatValue hsa_fsa_subtotal_ratio = 1;
  MonetaryFields subtotal = 2;
  MonetaryFields delivery_fee = 3;
  MonetaryFields service_fee = 4;
  MonetaryFields small_order_fee = 5;
  MonetaryFields priority_fee = 6;
  MonetaryFields dbp_extended_range_fee = 7;
  MonetaryFields legislative_fee = 8;
  // All the applicable taxes
  MonetaryFields subtotal_tax = 9;
  MonetaryFields delivery_fee_tax = 10;
  MonetaryFields service_fee_tax = 11;
  MonetaryFields small_order_fee_tax = 12;
  MonetaryFields priority_fee_tax = 13;
  MonetaryFields dbp_extended_range_fee_tax = 14;
  MonetaryFields legislative_fee_tax = 15;
  // Generic fee applicable: BAG_FEE, Bottle Fee, Regulatory Response Fee. Some are item level, some are prorated
  repeated HsaFsaGenericFee generic_fees = 16;
  // Discounts. Only includes MENU_ITEM discounts
  repeated HsaFsaDiscount item_level_discounts = 17;
  // Discounts excluding subscription discounts like delivery_fee, service_fee, etc
  MonetaryFields order_level_discount_amount = 18;
  // final calculation
  MonetaryFields pre_discount_eligible_grand_total = 19;
  MonetaryFields post_discount_eligible_grand_total = 20;
  MonetaryFields undeliverable_item_fee = 21;
}

message UndeliverableItemFeeDetails {
  MonetaryFields undeliverable_item_fee = 1;
  string line_item_id = 2;
  string line_item_label = 3;
  Paragraph tooltip = 4;
}

message DeliveryOptionDetails {
  common.DeliveryOptionType delivery_option_type = 1;
  DeliveryAssignmentStrategy delivery_assignment_strategy = 2;
}

enum DeliveryAssignmentStrategy {
  DELIVERY_ASSIGNMENT_STRATEGY_UNSPECIFIED = 0;
  DELIVERY_ASSIGNMENT_STRATEGY_TOP_DASHER = 1;
  DELIVERY_ASSIGNMENT_STRATEGY_PRIORITY_STATUS = 2;
  DELIVERY_ASSIGNMENT_STRATEGY_TOP_DASHER_NO_MESSAGING = 3;
}

// Contains aggregated tax breakdown details of all item level breakdowns
message OrderTaxBreakdown {
  repeated TaxBreakdownInfo tax_breakdowns = 1;
  google.protobuf.StringValue destination_tax_area_id = 2;
  google.protobuf.StringValue origin_tax_area_id = 3;
  MonetaryFields subtotal_for_tax = 4;
  MonetaryFields tax_amount = 5;
  MonetaryFields dd_remit_tax_amount = 6;
  MonetaryFields mx_remit_tax_amount = 7;
  MonetaryFields fee_for_tax = 8;
  MonetaryFields tax_on_fee_amount = 9;
  MonetaryFields tax_on_fee_passed_to_merchant = 10;
  MonetaryFields tax_on_fee_remitted_for_tax_authorities = 11;
}

// Contains tax breakdowns details for each jurisdiction tax details
message ItemTaxBreakdown {
  // Unique line item id for either menu item or menu option
  // This field represents cart_item_id and reference_uuid in Order Service
  // This field represents carnival_item_id and reference_uuid in Pricing Service
  // This field represents reference_id and root_reference_id in Tax Service
  string reference_uuid = 1;
  repeated TaxBreakdownInfo tax_breakdowns = 2;
  MonetaryFields subtotal_for_tax = 3;
  MonetaryFields tax_amount = 4;
  MonetaryFields dd_remit_tax_amount = 5;
  MonetaryFields mx_remit_tax_amount = 6;
}

// Breakdown info for details on each jurisdiction tax
message TaxBreakdownInfo {
  string jurisdiction_level = 1;
  string jurisdiction_name = 2;
  string imposition_type = 3;
  string imposition = 4;
  google.protobuf.StringValue taxpayer = 5;
  MonetaryFields taxable_basis = 6;
  MonetaryFields nontaxable_basis = 7;
  MonetaryFields tax_amount = 8;
  google.protobuf.StringValue tax_rate = 9;
}

// An object encapsulating consumer tokens information required in promotion metadata
message ConsumerToken {
  // Token Benefit Type
  google.protobuf.StringValue token_benefit_type = 1;
  // Token Quantity
  google.protobuf.Int32Value quantity = 2;
}

// Extra fee charged for reschedule
message RescheduleFee {
  // fee amount
  MonetaryFields amount = 1;
  // fee type
  RescheduleFeeType fee_type = 2;
}

// Reschedule fee type
enum RescheduleFeeType {
  // fee type unknown
  RESCHEDULE_FEE_TYPE_UNSPECIFIED = 0;
  // delivery fee
  RESCHEDULE_FEE_TYPE_DELIVERY = 1;
  // service fee
  RESCHEDULE_FEE_TYPE_SERVICE = 2;
  // priority fee
  RESCHEDULE_FEE_TYPE_PRIORITY = 3;
}

/*
   Payment method summary of Cart Payment.
*/
message PaymentMethodDetails {
  // Identifier of payment method
  google.protobuf.StringValue dd_payment_method_id = 1;

  // Type
  google.protobuf.StringValue type = 2;

  // Remaining balance if payment method is EBT
  money.MonetaryFields ebt_remaining_balance = 3;

  // last 4
  google.protobuf.StringValue last4 = 8;

  // brand
  google.protobuf.StringValue brand = 9;

  // Metadata associated with this payment method
  google.protobuf.Struct metadata = 10;

  // wallet
  payin.v1.Wallet wallet = 11;
}

/*
   List of payment details included as part of cart payment.
*/
message PaymentDetailsList {
  // Number of details
  google.protobuf.Int32Value count = 1;

  // List of detail elements
  repeated PaymentDetails data = 2;
}

/*
   payment charge details for order receipt
*/
message PaymentDetails {
  // Current amount for charge
  money.MonetaryFields net_amount = 1;

  // Original amount of charge
  money.MonetaryFields original_amount = 2;

  // Status of charge
  google.protobuf.StringValue status = 3;

  // Timestamp of when this charge was created
  google.protobuf.Timestamp created_at = 4;

  // Timestamp of when this charge was last updated
  google.protobuf.Timestamp updated_at = 5;

  // Summary of payment method used
  PaymentMethodDetails payment_method = 6;

  // details related to batching of this payment with other orders
  payin.v1.PaymentBatchingDetails batching_details = 7;

  // Id of payment intent
  google.protobuf.StringValue dd_payment_intent_id = 8;

  // Amount captured for a charge
  google.protobuf.Int64Value amount_captured = 9;

  // The 3-letter currency code defined in ISO 4217.
  // (https://en.wikipedia.org/wiki/ISO_4217)
  google.protobuf.StringValue currency = 10;
}
