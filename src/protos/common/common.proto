syntax = "proto3";
package common;

import "common/names.proto";
import "doordash.api/annotations.proto";
import "doordash.api/field_validate.proto";
import "google/protobuf/descriptor.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option go_package = "github.com/doordash/services-protobuf/generated/common";
option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.common";

// This was original called Address, but changed to CommonAddress because doordash-service-lib has a conflict proto
// message Address in the same name package common:
// https://github.com/doordash/doordash-service-lib/blob/master/doordash_service/protobuf/common.proto#L68,
// which prevented using services-protobuf and doordash-service-lib at the same time.
// Since services-protobuf is relatively new, common.Address in services-protobuf was changed to common.CommonAddress
// (instead of changing doordash-service-lib) to avoid breaking/changing all legacy DD services that still depend on
// doordash-service-lib.
message CommonAddress {
  google.protobuf.StringValue printable_address = 1;
  google.protobuf.StringValue street = 2;
  google.protobuf.StringValue city = 3;
  google.protobuf.StringValue subpremise = 4;
  google.protobuf.StringValue state = 5;
  google.protobuf.StringValue zip_code = 6;
  google.protobuf.StringValue lng = 7;
  google.protobuf.StringValue lat = 8;
  google.protobuf.StringValue country_code = 9;
  google.protobuf.StringValue timezone = 10;
  google.protobuf.StringValue postal_code_suffix = 11;
}

// Timestamps that are more dynamically calculated (more real-time) for the order
message DynamicETATimestamps {
  // dynamic ETA on when the order would be picked up
  google.protobuf.Timestamp dynamic_pickup_time = 1;
  // dynamic ETA on when the order would be dropped off
  google.protobuf.Timestamp dynamic_dropoff_time = 2;
}

message MenuItem {
  string id = 1;
  google.protobuf.StringValue name = 2;
  google.protobuf.StringValue store_internal_sku = 3;
  google.protobuf.Int32Value sort_id = 4;
  Category category = 5;
  google.protobuf.StringValue merchant_supplied_id = 6;
  bool is_recipe = 7;

  message Category {
    google.protobuf.StringValue title = 1;
    string id = 2;
    google.protobuf.StringValue sort_id = 3;
    google.protobuf.StringValue merchant_supplied_id = 4;
    google.protobuf.StringValue name = 5;
  }
}

message Creator {
  string id = 1;
  google.protobuf.StringValue email = 2;
  google.protobuf.StringValue first_name = 3;
  google.protobuf.StringValue last_name = 4;
  names.LocalizedNames localized_names = 5;
}

enum Experience {
  DOORDASH = 0;
  CAVIAR = 1;
  WHITE_LABELED = 2;
  STOREFRONT = 3;
  DOORDASH_CHECKOUT = 4;
  DRIVE = 5;
  VOICE = 6;
  WOLT = 7;
  DD_POS = 8;
  BBOT = 9;
  THIRD_PARTY = 10;
  SELF_KIOSK = 11;
  OMNICHANNEL = 12;
  DINEOUT = 13;
  IN_STORE = 14;

  ANY_EXPERIENCE = 100;
}

enum Channel {
  MARKETPLACE = 0;
  DRIVE_CHANNEL = 1;
  ONLINE_ORDERING = 3;
  WEBLINK = 4;
  PHONE_REFERRAL = 5;
  DEMAND_GEN = 6;
  // contactless product spec: https://docs.google.com/document/d/1Q6kWZT-qA6qoUx7Yw4l-b7k3R6Ngk5CqszME5Am46Mw/edit?usp=sharing
  // for consumers ordering at store with contactless QR codes
  CONTACTLESS = 7;
  // Ship Anywhere brief: https://docs.google.com/document/d/1qx_0hmGIFrcJyb9fVBdIKHo9VHOepW0W6-6gkf3CQC0/edit
  SHIP_ANYWHERE = 8;
  VOICE_CHANNEL = 9;
  DD_POS_CHANNEL = 10;
  SELF_KIOSK_CHANNEL = 11;
  DINEOUT_CHANNEL = 12;

  ANY_CHANNEL = 100;
}

enum Audience {
  NON_SUBSCRIBER = 0;
  SUBSCRIBER = 1;
  GUEST = 2;
  ANY_AUDIENCE = 3;
}

enum DeliveryOptionType {
  NOT_SET = 0;
  STANDARD = 1;
  PRIORITY = 2;
  NO_RUSH = 3;
  SCHEDULE = 4;
  // Deliveries that should act as 'unscheduled' and will likely be rescheduled
  DEFERRED = 5;
  FREE_SAME_DAY = 6;
  DRONE = 7;
  GROCERY_PRO = 8;
  FAST = 9;
  // for use in the speed gating experiment (2/17/2025)
  // https://docs.google.com/document/d/1ETYxrjilkP2CsjESVQJ-TyYac8MGOKOfL8-aSQ8npnA/
  // Delivery is in experiment for speed gating (priority is QDT)
  QUOTED = 10;
  // Delivery is in experiment for speed gating (standard is QDT plus additional time)
  QUOTED_WITH_DELAY = 11;
}

// This one is now being used
enum FulfillmentType {
  DELIVERY = 0;
  PICKUP = 1;
  DINE_IN = 3;

  ANY_FULFILLMENT_TYPE = 2;
  SHIPPING = 4;

  // DoorDash fleet delivery for flexible fulfillment enabled stores
  DX_FLEET_FF_DELIVERY = 5;
  // Merchant fleet delivery
  MX_FLEET_DELIVERY = 6;
  // Drone delivery
  DRONE_DELIVERY = 7;
  // Virtual delivery
  VIRTUAL = 8;
  // Pathfinder dine_in type
  DD_POS_DINE_IN = 9;
  // Pathfinder self-serve take_out type
  DD_POS_TAKE_OUT = 10;

  // Team Verano / Going Out's type
  DINEOUT_FULFILLMENT_TYPE = 11;

  UNKNOWN_FULFILLMENT_TYPE = 1000;
}

message ConsumerExperienceContext {
  Experience experience = 1;
  Channel channel = 2;
  Audience audience = 3;
  FulfillmentType fulfillment_type = 4;
}

// These are used to represent Client_Version in request headers
// in the format of "<device type> v<version> b<build>", i.e. "ios v1.0 b123"
enum ClientDeviceType {
  IOS = 0;
  ANDROID = 1;

  UNKNOWN = 1000;
}

enum PaymentMethod {
  CREDIT_CARD = 0;
  DEBIT_BANK_ACCOUNT = 1;
  PAYMENT_WITHHOLDING = 2;
  CASH = 3;
  INVOICE = 4;
  DD_POS_CASH = 5; // for Pathfinder specific cash payment
  DD_POS_CREDIT_CARD = 6; // for Pathfinder specific cash payment
  DD_POS_EXTERNAL = 7; // for Pathfinder specific external payment
  DD_POS_SPLIT_PAYMENT = 8; // for Pathfinder specific split payment

  UNSPECIFIED_PAYMENT_METHOD = 1000; // Used to map OrderCartPaymentMethodId - UNSPECIFIED
}

enum PlatformType {
  PT_ANDROID = 0;
  PT_DESKTOP = 1;
  PT_IOS = 2;
  PT_MOBILE_WEB = 3;
  PT_GOOGLE_AMP = 4;
  PT_GOOGLE_NATIVE = 5;
  PT_ONLINE_ORDERING = 6;
  PT_EXTERNAL_CHECKOUT = 7;
  PT_DRIVE_API = 8;
  PT_DRIVE_DESKTOP = 9;
  PT_SCHEDULED_RECURRING_DELIVERY = 10;
  PT_VOICE = 11;
  PT_DD_POS = 12; // pathfinder platform type
  PT_SELF_KIOSK = 13; // self-serve kiosk platform type
  PT_DINEOUT = 14;

  PT_UNKNOWN = 1000;
}

enum AORProtocol {
  UNSPECIFIED = 0;
  DELIVERY_LEVEL = 1; // Can be any of the other protocols below if this is configured for store/business
  INSTANT_ASSIGN_STATIC_DIST = 2;
  INSTANT_ASSIGN_DYNAMIC_DIST = 3;
  INSTANT_RELEASE = 4;
}

// Distinct online ordering platforms
enum OOPlatform {
  OO_PLATFORM_UNSPECIFIED = 0;
  OO_PLATFORM_CLASSIC = 1;
  OO_PLATFORM_MX_WEBSITE = 2;
  OO_PLATFORM_MOBILE = 3;
  OO_PLATFORM_EXTERNAL = 4;
  OO_PLATFORM_GFO = 5;
}

enum OOSubPlatform {
  OO_SUB_PLATFORM_UNSPECIFIED = 0;
  OO_SUB_PLATFORM_IOS = 1;
  OO_SUB_PLATFORM_ANDROID = 2;
}

message OOPlatformDetails {
  OOPlatform oo_platform = 1;
  /* optional sub platform */
  OOSubPlatform oo_sub_platform = 2;
}

message SemanticVersion {
  google.protobuf.Int32Value major = 1;
  google.protobuf.Int32Value minor = 2;
  google.protobuf.Int32Value patch = 3;
}

message ClientVersion {
  ClientDeviceType device_type = 1;
  SemanticVersion semantic_version = 2;
  google.protobuf.StringValue build = 3;
}

message IOSDeviceDetails {
  google.protobuf.StringValue ios_user_agent = 1;
  google.protobuf.StringValue ios_device_idfv = 2;
  google.protobuf.StringValue ios_device_idfa = 3;
  google.protobuf.StringValue ios_device_dc_token = 4;
}

message ClientDeviceCtx {
  google.protobuf.StringValue ip_address = 1;
  google.protobuf.StringValue dd_device_id = 2;
  google.protobuf.StringValue dd_session_id = 3;
  // DEPRECATED google.protobuf.StringValue ios_device_id = 4;
  // DEPRECATED common.ClientDeviceType device_type = 5;
  // DEPRECATED SubmitPlatform submit_platform = 6;
  PlatformType submit_platform = 7;
  google.protobuf.StringValue dd_login_id = 8;
  google.protobuf.StringValue user_agent = 9;
  IOSDeviceDetails ios_device_details = 10;
  ClientVersion version = 11;
  repeated google.protobuf.StringValue x_forwarded_for = 12;
  Location location = 13;

  /* optional oo platform */
  // Used by online ordering team (Storefront) to track all different
  // online ordering surfaces and meta data
  OOPlatformDetails oo_platform_details = 14;
}

message Location {
  // latitude
  google.protobuf.DoubleValue lat = 1;
  // longitude
  google.protobuf.DoubleValue lng = 2;
}

message ConsumerLocation {
  // consumer location
  Location location = 1;
  // consumer district id
  google.protobuf.StringValue district_id = 2;
  // consumer submarket id
  google.protobuf.StringValue submarket_id = 3;
}

message ConsumerLocationGeoInfo {
  // consumer location
  Location location = 1;
  // consumer district id
  google.protobuf.StringValue district_id = 2;
  // consumer submarket id
  google.protobuf.StringValue submarket_id = 3;
  // consumer location market id
  google.protobuf.StringValue market_id = 4;
  // consumer location country short name
  google.protobuf.StringValue country_short_name = 5;
  // consumer location timezone
  google.protobuf.StringValue timezone = 6;
  // consumer location city
  google.protobuf.StringValue city = 7;
  // consumer location state
  google.protobuf.StringValue state = 8;
  // consumer location zipcode
  google.protobuf.StringValue zipcode = 9;
}

message StoreLocation {
  // store location
  Location location = 1;
  // store starting point id
  google.protobuf.StringValue starting_point_id = 2;
  // country name for the store
  string country_shortname = 3;
  // store submarket id
  google.protobuf.StringValue submarket_id = 4;
}

/*
 * Distance units.
 */
enum DistanceUnit {
  DISTANCE_UNIT_UNSPECIFIED = 0;
  DISTANCE_UNIT_MILES = 1;
  DISTANCE_UNIT_KM = 2;
}

/*
 * Distance
 */
message Distance {
  double value = 1; /* Distance in the given unit */
  DistanceUnit unit = 2; /* Distance units of value */
}

message EmailAddressComponents {
  google.protobuf.StringValue full_email_address = 1;
}

message PhoneNumberComponents {
  google.protobuf.StringValue country_code = 1;
  google.protobuf.StringValue country_shortname = 2;
  google.protobuf.StringValue formatted_international_number = 3;
  google.protobuf.StringValue formatted_national_number = 4;
  google.protobuf.StringValue international_number = 5;
  google.protobuf.StringValue national_number = 6;
}

enum DasherAttributeType {
  UNKNOWN_ATTRIBUTE = 0;

  AGE_21 = 1;
  TOP_DASHER = 2;
}

enum DasherEquipmentType {
  UNKNOWN_EQUIPMENT = 0;

  CATERING_HOTBAG = 1;
  CART = 2;
  BATCH = 3;
  DD_POLOS = 4;
  PIZZA_BAG = 5;
  CATERING_OR_PIZZA_BAG = 6;
  COD_CASH = 7;
  CATER_WAGON = 8;
  CARGO_BIKE = 9;
  CATER_ATTACHMENT = 10;
  DRIVE_TEST_ONLY = 11;
  MA_ALCOHOL_PERMIT = 12;
  CA_ON_ALCOHOL_PERMIT = 13;
  CA_BC_ALCOHOL_PERMIT = 14;
  US_CA_ALCOHOL_PERMIT = 15;
  SHOP_DELIVER_ONBOARDED = 16;
  US_NC_ALCOHOL_PERMIT = 17;
  US_GA_ALCOHOL_PERMIT = 18;
  US_ALCOHOL_CERTIFICATE = 19;
  CA_AB_ALCOHOL_PERMIT = 20;
  CA_MB_ALCOHOL_PERMIT = 21;
  PETSMART_PREFERRED = 22;
  DSD_GROCERY_PREFERRED = 23;
  US_TN_ALCOHOL_PERMIT = 24;
  NSW_ALCOHOL_CERTIFICATE = 25;
  AUS_ALCOHOL_CERTIFICATE = 26;
  VIC_ALCOHOL_CERTIFICATE = 27;
  SPECS_APPROVED = 28;
  INSULATED_BAG = 29;
  PT_TAVERN_APPROVED = 30;
  DSD_CNG_AUSTRALIA = 31;
  MILITARY_ID = 32;
  LARGE_VEHICLE_PREFERRED = 33;
  GROCERY_CATERING_BAG = 34;
  COLES_LIQUOR_APPROVED = 35;
  US_LA_ALCOHOL_PERMIT = 36;
  COLES_GROCERIES_APPROVED = 37;
  US_VA_ALCOHOL_PERMIT = 38;
  LO_ONBOARDED = 39;
  AUS_IDV2_MIN_APP = 40;
  AUS_IDV2_CLIQ_CONTROL = 41;
  PIZZA_ZONE1 = 42;
  PIZZA_ZONE2 = 43;
  HIGH_SUBTOTAL_PREFERRED = 72;
  W2_PREFERRED = 105;
  EMPLOYEE = 138;
  MA_ALCOHOL_COURSE = 171;
  PARCEL_RUNNER = 204;
  DRIVER_DOCS_ELIGIBLE = 237;
  GA_ELEVATED_BGC = 270;
  TN_ELEVATED_BGC = 271;
  CA_SK_ALCOHOL_PERMIT = 303;
  ACT_ALCOHOL_CERTIFICATE = 5000;
  OR_ELEVATED_BGC = 5001;
  PA_MAGNET = 5005;
  ROUND_TRIP = 5007;
  // Indicates if controlled substance can be delivered
  ELIGIBLE_CONTROLLED_SUBSTANCE_APPROVED = 5008;
  // The following 3 are needed for diagnostics lab orders
  // Dx need to complete 2 trainings and have a special tote bag
  BLOODBORNE_PATHOGEN_TRAINING = 5009;
  HAZ_MAT_TRAINING = 5010;
  DIAGNOSTICS_TOTE = 5011;
  US_NM_ALCOHOL_PERMIT = 5012;
}

enum DasherOnboardingType {
  UNKNOWN_ONBOARDING = 0;

  GROCERY = 1;
}

enum DasherPickupProtocol {
  DASHER_PICKUP_PROTOCOL_UNSPECIFIED = 0;
  DASHER_PICKUP_PROTOCOL_IN_STORE = 1;
  DASHER_PICKUP_PROTOCOL_CURBSIDE = 2;
}

message DasherPickupVerificationInfo {
  DasherPickupVerifyProtocol type = 1;
  google.protobuf.StringValue code = 2;
  DasherPickupVerificationFormat format = 3; // Optional field
  google.protobuf.StringValue verified_code = 4;
  google.protobuf.Timestamp verified_timestamp = 5;
}

/*
 * Enum of different protocols on a delivery for dashers to verify at
 * pickup. Stored in the delivery_fulfillment_table.
 */
enum DasherPickupVerifyProtocol {
  // Unspecified / none
  NO_PICKUP_VERIFY_PROTOCOL = 0;

  // Dx verifies order number to confirm pickup
  VERIFY_ORDER_NUM = 1;

  // Dx scans barcode for verification
  VERIFY_SCAN_BARCODE = 2;

  // Dx scans barcode for verification without showing items
  VERIFY_SCAN_BARCODE_HIDE_ITEMS = 3;
}

/*
 * Enum of different formats of scanning on a delivery for dashers to verify at
 * pickup. Stored in the delivery_fulfillment_table.
 */
enum DasherPickupVerificationFormat {
  QR_CODE = 0;
  DATA = 1;
  ATRIX = 2;
  AZTEC = 3;
  CODE_128 = 4;
  CODE_39 = 5;
  CODE_93 = 6;
  CODABAR = 7;
  EAN_13 = 8;
  EAN_8 = 9;
  ITF = 10;
  UPC_A = 11;
  UPC_E = 12;
  PDF417 = 13;
}

// Represents a Decimal number.
// unitAmount equivalent to BigDecimal(10.2).unscaled() == 102.
// decimalPlaces equivalent to BigDecimal(10.2).scale() == 1
message Decimal {
  google.protobuf.Int32Value decimal_places = 1;
  // unscale value of the decimal, ie. decimal is 1.25 then the unit_amount is 125
  google.protobuf.Int32Value unit_amount = 2;
}

message PricingEventLogging {
  bool is_dashpass = 1;
  string address_id = 2;
  string free_delivery_min_subtotal = 3;
  string delivery_fee_promotion_amount = 4;
  string total_promotion_amount = 5;
}

enum PageType {
  INVALID = 0;
  HOMEPAGE = 1; // cross-vertical homepage
  VERTICAL_LANDING_PAGE = 2; // cross-vertical vertical landing page
  DEFAULT_HOMEPAGE = 3; // old homepage
}

message DiscreteQuantityInfo {
  google.protobuf.Int32Value quantity = 1;
  google.protobuf.StringValue unit = 2;
}

message ContinuousQuantityInfo {
  google.protobuf.DoubleValue quantity = 1;
  google.protobuf.StringValue unit = 2;
}

message QuantityInfo {
  DiscreteQuantityInfo discrete_quantity = 1 [(doordash.api.validate.rules).missing_value = {action: IGNORE}];
  ContinuousQuantityInfo continuous_quantity = 2 [(doordash.api.validate.rules).missing_value = {action: IGNORE}];
}

message AgeRestrictedIdVerificationInfo {
  string vendor_account_id = 1;
  AgeRestrictedIdVerificationStatus status = 2;
  string id_photo_url = 3;
  AgeRestrictedIdVerificationVendor vendor = 4;
  google.protobuf.BoolValue is_bouncer_case_enabled = 5;
}

enum AgeRestrictedIdVerificationVendor {
  VENDOR_NONE = 0;
  VENDOR_PERSONA = 1;
}

enum AgeRestrictedIdVerificationStatus {
  VERIFICATION_STATUS_UNKNOWN = 0;
  VERIFICATION_STATUS_NOT_SUBMITTED = 1;
  VERIFICATION_STATUS_VALID = 2;
  VERIFICATION_STATUS_NOT_VALID = 3;
  VERIFICATION_STATUS_EXPIRED = 4;
  VERIFICATION_STATUS_NO_CACHE = 5;
}

message DietaryTag {
  DietaryTagType type = 1;
  google.protobuf.StringValue abbreviated_tag_display_string = 2;
  google.protobuf.StringValue full_tag_display_string = 3;

  enum DietaryTagType {
    UNSUPPORTED = 0;

    DEFAULT = 1;

    /* indicates that the consumer prefers items with this tag */
    PREFERENCE = 2;

    /* indicates that the consumer prefers NOT to see items with this tag */
    RESTRICTION = 3;
  }
}

enum AlcoholFoodConstraintItemLevel {
  UNKNOWN_REQUIREMENT = 0;
  REQUIRES_ANY_FOOD = 1;
  REQUIRES_ENTREE = 2;
  REQUIRES_NONE = 3;
}

enum AlcoholFoodConstraintCartLevel {
  UNKNOWN_ITEM_REQUIREMENT = 0;
  REQUIRES_ANY_FOOD_ITEM = 1;
  REQUIRES_ENTREE_ITEM = 2;
  REQUIRES_NO_FOOD_ITEM = 3;
}

enum AlcoholBehaviorOverride {
  NONE = 0;
  NO_ID_CHECK_AND_MESSAGING = 1;
  BOUNCER_IDV_RESCAN = 2;
  BOUNCER_IDV_RESCAN_SCANDIT = 3;
}

// Different types of scanners used during ID verification process
enum IdVerificationScannerType {
  // Default value if this is not set
  SCANNER_TYPE_UNSPECIFIED = 0;
  // Scandit - 3rd party ID scanning and verification vendor
  SCANDIT = 1;
  // Persona - 3rd party ID scanning and verification vendor
  PERSONA = 2;
  // Doordash legacy scanner
  DOORDASH_LEGACY_SCANNER = 3;
  // Human manual verification
  HUMAN = 4;
}

// Different ways an ID can be scanned and verified
enum IdVerificationMethodType {
  // Default value if this is not set
  METHOD_TYPE_UNSPECIFIED = 0;
  // Scan either front or back
  FRONT_OR_BACK_OF_ID = 1;
  // Scan front
  FRONT_OF_ID = 2;
  // Scan back
  BACK_OF_ID = 3;
  // Manually enter the ID details
  MANUAL_ENTRY = 4;
  // Scan both front and back
  FRONT_AND_BACK = 5;
}

enum ReturnType {
  NO_RETURN = 0;
  MARKETPLACE_RETURN = 1;
  REDELIVERY = 2;
  DRIVE_CASH_RETURN = 3;
}

/*
 * Store-level premium_type values in store_extension table in MDS
 */
enum PremiumType {
  // default value if client does not set
  PREMIUM_TYPE_UNSPECIFIED = 0;

  // Fine Dining Premium Type
  // buf:lint:ignore ENUM_VALUE_PREFIX
  FINE_DINING = 1;

  // Small/Medium Premium Type
  // buf:lint:ignore ENUM_VALUE_PREFIX
  SMB = 2;

  // Casual Premium Type
  // buf:lint:ignore ENUM_VALUE_PREFIX
  CASUAL = 3;

  // Chain Premium Type
  // buf:lint:ignore ENUM_VALUE_PREFIX
  CHAIN = 4;
}

/*
 * Values for different types of kitchen capacities
 */
enum KitchenCapacityType {
  // Type when kitchen capacity is not set
  KITCHEN_CAPACITY_TYPE_UNSPECIFIED = 0;

  // Type when kitchen capacity is turned off from portal
  KITCHEN_CAPACITY_TYPE_NO_CAPACITY = 1;

  // Flexible capacity - managed by DoorDash
  KITCHEN_CAPACITY_TYPE_FLEXIBLE_CAPACITY = 2;

  // Custom capacity
  KITCHEN_CAPACITY_TYPE_CUSTOM_CAPACITY = 3;
}

/*
 * Generic UI guided flow protos designed to be re-used as much as possible.
 * Can express a collection of UI screens that can lead to each other in any order
 * with custom information shown on the screen in multiple formats.
 * Example uses: guided cancellation survey flow for dashpass, modal upsells
 */

/*
 * A UIFlowScreen is the basic UI screen unit. Made up of multiple sections (info presented to the user)
 * and actions (elements a user can tap/click to go to a different UI screen)
 *
 * Wiki: https://doordash.atlassian.net/wiki/spaces/Eng/pages/2880995456/UIFlow+Screen+Design
 * Do not update this without review from @nikhil.mattu or @cesar.ramirez.
 */
message UIFlowScreen {
  UIFlowScreenDisplayType screen_display_type = 1;
  google.protobuf.StringValue screen_identifier = 2; // To be used for analytics
  repeated UIFlowScreenSection sections = 3;
  repeated UIFlowScreenAction actions = 4;
  bool allow_back_navigation = 5;

  // Used for passing analytics info about this UIFlowScreen
  Analytics analytics = 6;
}

message Analytics {
  repeated AnalyticsKeyValuePair metadata = 1;
}

message AnalyticsKeyValuePair {
  AnalyticsKey key = 1;
  google.protobuf.StringValue value = 2;
}

// AnalyticsKey is an enum instead of a string to constrain the cardinality of keys, since these are used in analytics events
// It also serves as a reminder that analytics keys need to be manually added to iguazu config
// Adding a new key to the enum here will not work out of the box
enum AnalyticsKey {
  ANALYTICS_KEY_UNKNOWN = 0;
  ANALYTICS_KEY_SHARING_CODE = 1;
}

/*
 * How should the screen be displayed on client
 * Wiki: https://doordash.atlassian.net/wiki/spaces/Eng/pages/2880995456/UIFlow+Screen+Design
 * Do not update this without review from @nikhil.mattu or @cesar.ramirez.
 */
enum UIFlowScreenDisplayType {
  UNKNOWN_SCREEN_DISPLAY_TYPE = 0;
  REGULAR = 1;
  MODAL = 2;
}

/*
 * A UIFlowScreenSection models a section of the UI screen that displays info to the user.
 * This can be text, a list of items, images, etc. It can also support an action, meaning
 * which UI screen we should go to if the user taps/clicks on this section. (E.G. radio button)
 *
 * Wiki: https://doordash.atlassian.net/wiki/spaces/Eng/pages/2880995456/UIFlow+Screen+Design
 * Do not update this without review from @nikhil.mattu or @cesar.ramirez.
 */
message UIFlowScreenSection {
  UIFlowScreenSectionType type = 1;

  repeated google.protobuf.StringValue content = 2;

  UIFlowScreenAction action = 3;
  UIFlowScreenTextAlignment alignment = 4;

  // Frontend will prefer using this instead of the "content" field
  repeated UIFlowRichContent rich_content = 5;

  repeated UIFlowSelectContent select_content = 6;
}

message UIFlowSelectContent {
  google.protobuf.StringValue select_content_id = 1;
  repeated google.protobuf.StringValue content = 2;
}

message UIFlowRichContent {
  repeated google.protobuf.StringValue content = 1;
  repeated FormatStyle format_style = 2;
  FormatColor format_color = 3;
  FormatType format_type = 4;
  FormatAlignment format_alignment = 5;
  google.protobuf.StringValue image_url = 6;
}

enum FormatColor {
  COLOR_UNKNOWN = 0;
  COLOR_HIGHLIGHT = 1;
  COLOR_PRIMARY = 2;
  COLOR_SECONDARY = 3;
  COLOR_TERTIARY = 4;
  COLOR_DISABLED = 5;
}

enum FormatStyle {
  STYLE_UNKNOWN = 0;
  STYLE_BOLD = 1;
  STYLE_STRIKETHROUGH = 2;
}

enum FormatType {
  TYPE_UNKNOWN = 0;
  TYPE_BADGE = 1;
  TYPE_TEXT = 2;
  TYPE_BANNER = 3;
  TYPE_IMAGE_URL = 4;
}

enum FormatAlignment {
  ALIGN_UNKNOWN = 0;
  ALIGN_LEFT = 1;
  ALIGN_CENTER = 2;
  ALIGN_RIGHT = 3;
}

/*
 * What kind of section content is it
 *
 * Wiki: https://doordash.atlassian.net/wiki/spaces/Eng/pages/2880995456/UIFlow+Screen+Design
 * Do not update this without review from @nikhil.mattu or @cesar.ramirez.
 */
enum UIFlowScreenSectionType {
  UNKNOWN_SECTION_TYPE = 0;
  TEXT = 1;
  LIST_ITEM_WITH_IMAGE = 2;
  RADIO_BUTTON = 3;
  CENTERED_IMAGE = 4;
  BOLDED_TITLE_TEXT = 5;
  BULLET_POINT_LIST_ITEM = 6;
  USER_INPUT_TEXT_BOX = 7;
  BADGE = 8;
  DIVIDER_SPACER = 9;
  DIVIDER_RULER = 10;
  HEADER_IMAGE = 11;
  TERMS_AND_CONDITIONS = 12;
  PRICE_LINE_ITEM = 13;
  PRICE_LINE_ITEM_HIGHLIGHTED = 14; // Deprecated, do not use for anything new
  BANNER = 15;
  TEXT_WITH_SEPARATE_LABEL_OR_ACTION = 16; // Text is left aligned, label or button is right aligned
  IMAGE = 17; // Different from CENTERED_IMAGE - this one is generic, not centered, and has no innate padding on left or right
  RICH_CARD_RADIO_BUTTON = 18;
  PAYMENT_SELECTION_TILE = 19; // Payment selection section
}

/*
 * A UIFlowScreenAction is an action the user can take by clicking/tapping that navigates to a
 * new UI screen or performs an API call. Example: user clicks "continue" action and goes to next screen,
 * or user clicks "Pause Dashpass" action and performs an API call to pause their subscription, or
 * the user clicks on one of many list items with image, which brings up a modal with more details about
 * that list item, etc.
 *
 * Wiki: https://doordash.atlassian.net/wiki/spaces/Eng/pages/2880995456/UIFlow+Screen+Design
 * Do not update this without review from @nikhil.mattu or @cesar.ramirez.
 */
message UIFlowScreenAction {
  google.protobuf.StringValue label = 1;
  UIFlowScreenActionIdentifier type = 2;
  UIFlowScreen screen = 3;
  UIFlowScreenActionDisplayType action_display_type = 4;
  repeated UIFlowScreenActionParameter action_parameters = 5;
  UIFlowScreenActionIdentifier post_action = 6;
  repeated UIFlowScreenActionParameter post_action_parameters = 7;
  google.protobuf.StringValue telemetry_id = 8;
}

/*
 * Tells where we should direct the action taken by the user
 *
 * Wiki: https://doordash.atlassian.net/wiki/spaces/Eng/pages/2880995456/UIFlow+Screen+Design
 * Do not update this without review from @nikhil.mattu or @cesar.ramirez.
 */
enum UIFlowScreenActionIdentifier {
  UNKNOWN_ACTION_IDENTIFIER = 0;

  // Generic
  GO_BACK = 1;
  CONTINUE = 2;

  // Dashpass specific API calls
  CANCEL_DASHPASS = 3;
  SWITCH_TO_MONTHLY_DASHPASS = 4; // DO NOT USE - REPLACED BY TRANSITION_SUBSCRIPTION
  GRANT_FREE_DASHPASS = 5;
  PAUSE_DASHPASS = 6;
  SUBSCRIBE_TO_DASHPASS = 17; // PENDING IMPLEMENTATION
  TRANSITION_SUBSCRIPTION = 18;
  SEND_SHARED_DASHPASS_MEMBERSHIP_LINK = 20;
  INVALIDATE_SHARED_DASHPASS_MEMBERSHIP = 21;
  RESUME_DASHPASS = 26;
  RESUBSCRIBE_TO_DASHPASS = 27;

  // Go to somewhere in app
  GO_TO_MANAGE_DASHPASS = 7;
  GO_TO_RESTAURANT_FEED = 8;
  GO_TO_GROCERY_FEED = 9; // DEPRECATED. DO NOT USE
  GO_TO_HEALTHY_FEED = 10; // DEPRECATED. DO NOT USE
  GO_TO_PICKUP_FEED = 11; // DEPRECATED. DO NOT USE
  GO_TO_CONVENIENCE_FEED = 12; // DEPRECATED. DO NOT USE
  GO_BACK_TO_ROOT = 13;

  // Support
  CALL_SUPPORT = 14;
  CHAT_WITH_SUPPORT = 15;

  OPEN_DEEPLINK = 16;

  GO_TO_HOMEPAGE = 19; // DEPRECATED. DO NOT USE

  SELECT_RADIO_BUTTON_ACTION = 22; // Use with radio button sections
  CHANGE_PAYMENT = 23; // Use to update the payment method
  SET_ACTION_DURING_CANCELLATION_FLOW = 24;
  CUSTOM_ACTION_DURING_CANCELLATION_FLOW = 25;
}

/*
 * How should the action be displayed on client (styling, etc)
 *
 * Wiki: https://doordash.atlassian.net/wiki/spaces/Eng/pages/2880995456/UIFlow+Screen+Design
 * Do not update this without review from @nikhil.mattu or @cesar.ramirez.
 */
enum UIFlowScreenActionDisplayType {
  UNKNOWN_ACTION_DISPLAY_TYPE = 0;
  PRIMARY = 1; // Red action button, white text
  TERTIARY = 2; // Grey action button, black text
  FLAT_SECONDARY = 3; // White action button, black text
}

/*
 * Parameter passed on an action call, used for API call actions
 *
 * Wiki: https://doordash.atlassian.net/wiki/spaces/Eng/pages/2880995456/UIFlow+Screen+Design
 * Do not update this without review from @nikhil.mattu or @cesar.ramirez.
 */
message UIFlowScreenActionParameter {
  UIFlowScreenActionParameterType key = 1;
  google.protobuf.StringValue value = 2;
}

/*
 * Action parameter key types, specific to API calls
 *
 * Wiki: https://doordash.atlassian.net/wiki/spaces/Eng/pages/2880995456/UIFlow+Screen+Design
 * Do not update this without review from @nikhil.mattu or @cesar.ramirez.
 */
enum UIFlowScreenActionParameterType {
  UNKNOWN_ACTION_PARAMETER_TYPE = 0;
  PLAN_ID = 1;
  NUMBER_FREE_DAYS = 2;
  FREE_DAYS_GRANT_REASON = 3;
  DEEPLINK_URL = 4;
  TRANSITION_TYPE = 5;
  TRIAL_ID = 6;
  REFUND_TYPE = 7;
  ORDER_UUID = 8;
  SUCCESS_MESSAGE = 9;
  NATIVE_PAYMENT_STYLE = 10;
  FEE_CURRENCY = 11;
  COUNTRY_CODE = 12;
  TRIAL_INTERVAL_UNITS = 13;
  TRIAL_INTERVAL_TYPE = 14;
  FEE_UNIT_AMOUNT = 15;
  SAVINGS_VALUE = 16;
  ENTRY_POINT = 17;
  SHARING_CODE = 18;
  DESCRIPTION = 19;
  TITLE = 20;
  STRIPE_TOKEN = 21;
  STRIPE_ID = 22;
  CONSENT_OBTAINED = 23;
  PAYMENT_METHOD_OPTIONAL = 24;
  ORDER_CART_ID = 25;
  SET_ACTION_DURING_CANCELLATION_FLOW_ACTION_TYPE = 26;
  CUSTOM_ACTION_DURING_CANCELLATION_FLOW_ACTION_TYPE = 27;
}

message StyledText {
  google.protobuf.StringValue display_string = 1;
  google.protobuf.StringValue text_style = 2;
  google.protobuf.StringValue text_color = 3;
  // This is the value for overriding the display_string by applying a strikethrough and displaying new text as
  // an "override" of the original text.
  // We are not using StyledText as it's type because we do not want this field to be recursive.
  StrikethroughOverrideText strikethrough_override_text = 4;
}

/*
   This provides support for striking through text and displaying new text as an "override" of the original text.
   The values in this message are the same as StyledText above.
*/
message StrikethroughOverrideText {
  google.protobuf.StringValue display_string = 1;
  google.protobuf.StringValue text_style = 2;
  google.protobuf.StringValue text_color = 3;
}

/*
   This provides granular control over what recipient information should be displayed on Consumer's UI
   THIS IS NOT FOR THE USAGE OF DASHER UI.
*/
message PrivateRecipientInfo {
  // if true, recipient phone number should be hidden when Cx views order
  google.protobuf.BoolValue should_hide_phone_number = 1;
  // if true, recipient address should be hidden when Cx views order
  google.protobuf.BoolValue should_hide_address = 2;
}

message DeliveryOptionTooltip {
  google.protobuf.StringValue display_string = 1;
  google.protobuf.StringValue leading_icon = 2;
  google.protobuf.Int32Value leading_icon_size = 3;
}

/*
 *  This is the promo campaign term and condition
 */
message CampaignTermAndConditionContent {
  // The title on the button which can open the campaign T&C
  google.protobuf.StringValue title = 1;
  // content data
  oneof value {
    // setup the action if ops uses custom T&C: "doordash://cms/contentstore/{content_id}"
    google.protobuf.StringValue action = 2;
    // setup up disclaimer if there is no custom T&C
    google.protobuf.StringValue disclaimer = 3;
  }
  // setup up bullet point T&Cs
  repeated google.protobuf.StringValue bullet_list_details = 4;
}

enum DeliveryOptionUnavailableReason {
  UNDEFINED = 0;
  UNDER_SUPPLY = 1;
  MX_EXCLUDED = 2;
}

/*
 * Product identifier type.
 * https://docs.google.com/document/d/1jOkHS9USSFmWr5ld5RclVyrlW6RBFE-P_Sp-NQchWio/edit?usp=sharing
 */
enum ProductIdType {
  PRODUCT_ID_TYPE_UNSPECIFIED = 0;
  PRODUCT_ID_TYPE_UNKNOWN = 1;
  // Global Trade Item Number. A universal 14-digit identifier used to identify
  // packaged products. Not used extensively in DD but will be planned for the Global Catalog initiative.
  PRODUCT_ID_TYPE_GTIN = 2;
  // Universal Product Code. A 12-digit code assigned by the Global
  // Standards Organization (GS1 US). Most commonly used on consumer packaged goods (CPGs).
  PRODUCT_ID_TYPE_UPC = 3;
  // Price Look-Up. A 4-5-digit number assigned by the International
  // Federation for Produce Standards (IFPS).
  // Most commonly used on fresh produce items.
  PRODUCT_ID_TYPE_PLU = 4;
  // DD specific Catalog ID.
  PRODUCT_ID_TYPE_DD_SIC = 5;
  // Stock Keeping Unit. These are codes assigned by Mxs to organize inventory.
  PRODUCT_ID_TYPE_SKU = 6;
  // Codes provided by a Mx to DD. Loosely map to a SKU.
  PRODUCT_ID_TYPE_MERCHANT_SUPPLIED_ID = 7;
  // DD internal id that represents an item at a particular store.
  PRODUCT_ID_TYPE_ITEM_ID = 8;
  // DD internal id that represents an item extra option at a particular store.
  PRODUCT_ID_TYPE_ITEM_EXTRA_OPTION_ID = 9;
  // name of product used as an identifier
  PRODUCT_ID_TYPE_ITEM_NAME = 10;
  // taxonomy id of the item
  PRODUCT_ID_TYPE_TAXONOMY_ID = 11;
}

/*
 * Merchant identifier type.
 */
enum MerchantIdType {
  MERCHANT_ID_TYPE_UNSPECIFIED = 0;
  MERCHANT_ID_TYPE_UNKNOWN = 1;
  MERCHANT_ID_TYPE_BUSINESS_ID = 2;
  MERCHANT_ID_TYPE_STORE_ID = 3;
  MERCHANT_ID_TYPE_BUSINESS_GROUP_ID = 4;
}

enum UIFlowScreenTextAlignment {
  DEFAULT = 0;
  CENTER = 1;
  LEFT = 2;
  RIGHT = 3;
}

// formats of country code
// buf:lint:ignore ENUM_VALUE_PREFIX
enum CountryCode {
  // unspecified country code
  COUNTRY_CODE_UNSPECIFIED = 0;
  AD = 1;
  AE = 2;
  AF = 3;
  AG = 4;
  AI = 5;
  AL = 6;
  AM = 7;
  AO = 8;
  AQ = 9;
  AR = 10;
  AS = 11;
  AT = 12;
  AU = 13;
  AW = 14;
  AX = 15;
  AZ = 16;
  BA = 17;
  BB = 18;
  BD = 19;
  BE = 20;
  BF = 21;
  BG = 22;
  BH = 23;
  BI = 24;
  BJ = 25;
  BL = 26;
  BM = 27;
  BN = 28;
  BO = 29;
  BQ = 30;
  BR = 31;
  BS = 32;
  BT = 33;
  BV = 34;
  BW = 35;
  BY = 36;
  BZ = 37;
  CA = 38;
  CC = 39;
  CD = 40;
  CF = 41;
  CG = 42;
  CH = 43;
  CI = 44;
  CK = 45;
  CL = 46;
  CM = 47;
  CN = 48;
  CO = 49;
  CR = 50;
  CU = 51;
  CV = 52;
  CW = 53;
  CX = 54;
  CY = 55;
  CZ = 56;
  DE = 57;
  DJ = 58;
  DK = 59;
  DM = 60;
  DO = 61;
  DZ = 62;
  EC = 63;
  EE = 64;
  EG = 65;
  EH = 66;
  ER = 67;
  ES = 68;
  ET = 69;
  FI = 70;
  FJ = 71;
  FK = 72;
  FM = 73;
  FO = 74;
  FR = 75;
  GA = 76;
  GB = 77;
  GD = 78;
  GE = 79;
  GF = 80;
  GG = 81;
  GH = 82;
  GI = 83;
  GL = 84;
  GM = 85;
  GN = 86;
  GP = 87;
  GQ = 88;
  GR = 89;
  GS = 90;
  GT = 91;
  GU = 92;
  GW = 93;
  GY = 94;
  HK = 95;
  HM = 96;
  HN = 97;
  HR = 98;
  HT = 99;
  HU = 100;
  ID = 101;
  IE = 102;
  IL = 103;
  IM = 104;
  IN = 105;
  IO = 106;
  IQ = 107;
  IR = 108;
  IT = 109;
  JE = 110;
  JM = 111;
  JO = 112;
  JP = 113;
  KE = 114;
  KG = 115;
  KH = 116;
  KI = 117;
  KM = 118;
  KN = 119;
  KP = 120;
  KR = 121;
  KW = 122;
  KY = 123;
  KZ = 124;
  LA = 125;
  LB = 126;
  LC = 127;
  LI = 128;
  LK = 129;
  LR = 130;
  LS = 131;
  LT = 132;
  LU = 133;
  LV = 134;
  LY = 135;
  MA = 136;
  MC = 137;
  MD = 138;
  ME = 139;
  MF = 140;
  MG = 141;
  MH = 142;
  MK = 143;
  ML = 144;
  MM = 145;
  MN = 146;
  MO = 147;
  MP = 148;
  MQ = 149;
  MR = 150;
  MS = 151;
  MT = 152;
  MU = 153;
  MV = 154;
  MW = 155;
  MX = 156;
  MY = 157;
  MZ = 158;
  NA = 159;
  NC = 160;
  NE = 161;
  NF = 162;
  NG = 163;
  NI = 164;
  NL = 165;
  NO = 166;
  NP = 167;
  NR = 168;
  NU = 169;
  NZ = 170;
  OM = 171;
  PA = 172;
  PE = 173;
  PF = 174;
  PG = 175;
  PH = 176;
  PK = 177;
  PL = 178;
  PM = 179;
  PN = 180;
  PR = 181;
  PS = 182;
  PT = 183;
  PW = 184;
  PY = 185;
  QA = 186;
  RE = 187;
  RO = 188;
  RS = 189;
  RU = 190;
  RW = 191;
  SA = 192;
  SB = 193;
  SC = 194;
  SD = 195;
  SE = 196;
  SG = 197;
  SH = 198;
  SI = 199;
  SJ = 200;
  SK = 201;
  SL = 202;
  SM = 203;
  SN = 204;
  SO = 205;
  SR = 206;
  SS = 207;
  ST = 208;
  SV = 209;
  SX = 210;
  SY = 211;
  SZ = 212;
  TC = 213;
  TD = 214;
  TF = 215;
  TG = 216;
  TH = 217;
  TJ = 218;
  TK = 219;
  TL = 220;
  TM = 221;
  TN = 222;
  TO = 223;
  TR = 224;
  TT = 225;
  TV = 226;
  TW = 227;
  IS = 228;
  TZ = 229;
  UA = 230;
  UG = 231;
  UM = 232;
  US = 233;
  UY = 234;
  UZ = 235;
  VA = 236;
  VC = 237;
  VE = 238;
  VG = 239;
  VI = 240;
  VN = 241;
  VU = 242;
  WF = 243;
  WS = 244;
  YE = 245;
  YT = 246;
  ZA = 247;
  ZM = 248;
}

enum GiftDeliveryChannel {
  // unspecified
  DELIVERY_CHANNEL_UNSPECIFIED = 0;
  // email
  DELIVERY_CHANNEL_EMAIL = 1;
  // sms
  DELIVERY_CHANNEL_SMS = 2;
  // send by sender
  DELIVERY_CHANNEL_SENDER = 3;
}

/*
 * Gift information which used to send the order or item to another person
 */
message CommonGiftInfo {
  // Recipient Name
  google.protobuf.StringValue recipient_name = 1;
  // Recipient phone
  google.protobuf.StringValue recipient_phone = 2;
  // Message sender write for recipient
  google.protobuf.StringValue card_message = 3;
  // Email address of the recipient
  google.protobuf.StringValue recipient_email = 4;
  // Cx select image's URL
  google.protobuf.StringValue customer_select_image_url = 5;
  // masked phone number to send the SMS to recipient
  google.protobuf.StringValue masked_phone_number = 6;
  // animation image's URL
  google.protobuf.StringValue animation_asset_url = 7;
  // customer select image's ID
  google.protobuf.StringValue customer_select_image_id = 8;
  // sender's name
  google.protobuf.StringValue sender_name = 9;
  // is_virtual_gift_card
  google.protobuf.BoolValue type_virtual_gift_card = 10;
  // gift send method SMS/Email/ShareByMyself/DasherDelivery
  GiftDeliveryChannel delivery_channel = 11;
}

extend google.protobuf.FieldOptions {
  string pii_type = 57012;
}

extend google.protobuf.FieldOptions {
  string timestamp_granularity = 57013;
}

extend google.protobuf.MessageOptions {
  string dataframe_transformations = 57014;
}

// Allergen Enums
// https://docs.google.com/document/d/1P5RnZaTpBErVxZ8Pj89Q2UbPH4s1QQ-Q7oCaGroOyOA/edit
// IMPORTANT: Please keep this (both values and their order) in sync with the allergen definition in address_link.proto in merchant_data_service_store_service
enum Allergen {
  // unspecified
  ALLERGEN_UNSPECIFIED = 0;
  // milk
  MILK = 1;
  // egg
  EGG = 2;
  // fish
  FISH = 3;
  // shellfish
  SHELLFISH = 4;
  // tree nut
  TREE_NUT = 5;
  // peanut
  PEANUT = 6;
  // wheat
  WHEAT = 7;
  // sesame
  SESAME = 8;
  // soybean
  SOYBEAN = 9;
  // meat
  MEAT = 10;
  // pork
  PORK = 11;
  // alcohol
  ALCOHOL = 12;
  // crustacean shellfish
  CRUSTACEAN_SHELLFISH = 13;
  // beef
  BEEF = 14;
}

// DD POS loyalty information in request
message DDPosLoyaltyDetails {
  // Consumer loyalty experience from OCL
  Experience consumer_loyalty_experience = 1;
  // Whether to apply loyalty discount to the cart
  google.protobuf.BoolValue should_apply_loyalty_discount = 2;
}

//used for identifying the payment profile option preference of the payer
enum PaymentProfileType {
  // unknown type
  PAYMENT_PROFILE_TYPE_UNKNOWN = 0;
  // personal
  PAYMENT_PROFILE_TYPE_PERSONAL = 1;
  // business
  PAYMENT_PROFILE_TYPE_BUSINESS = 2;
}

/**
 * A message that contains an icon in the middle.
 * An example use case is to show "with [Logo] DashPass", which can be represented by a list of
 * segments ["with", {Icon}, "DashPass"] and rendered by clients in sequence
 */
message MessageWithIcon {
  // MessageWithIcon consists of a list of segments
  repeated MessageWithIconSegment segments = 1;

  // A segment object that can be used to build a message that contains an icon in the middle.
  message MessageWithIconSegment {
    // Indicate the type of the segment
    SegmentType type = 1;
    // A segment can be either a icon or text
    oneof segment {
      Icon icon = 2;
      StyledText text = 3;
    }
    // Segment type enum
    enum SegmentType {
      UNSPECIFIED = 0;
      ICON = 1;
      TEXT = 2;
    }
  }
}

message Icon {
  // Icon type, eg."logo/dashpass/new/16"
  google.protobuf.StringValue type = 1;
  // Icon color, eg.USAGE_COLOR_HIGHLIGHT_DEFAULT
  google.protobuf.StringValue color = 2;
}

// Order category enum, includes NV and Rx
enum OrderCategory {
  // unspecified
  ORDER_CATEGORY_UNSPECIFIED = 0;
  // New Verticals
  ORDER_CATEGORY_NV = 1;
  // Rx
  ORDER_CATEGORY_RX = 2;
}

// custom decorator
message BrandedView {
  google.protobuf.StringValue prefix_text = 1;
  google.protobuf.StringValue postfix_text = 2;
  google.protobuf.StringValue postfix_text_leading_icon = 3;
}

// Used for prescription delivery order items, define what info we need on the item level
message PrescriptionItemInfo {
  // Prescription patient first name
  google.protobuf.StringValue patient_first_name = 1;
  // Prescription patient last name
  google.protobuf.StringValue patient_last_name = 2;
  // Prescription patient phone number
  google.protobuf.StringValue patient_phone_number = 3;
  // Prescription patient address
  CommonAddress patient_address = 4;
  // Geo address id of the patient
  google.protobuf.StringValue patient_address_id = 5;
}

// Used for identifying the item level nudge type. A nudge is an action which the Cx is encouraged to take.
enum ItemLevelNudgeType {
  NUDGE_TYPE_UNSPECIFIED = 0;
  // Cx is nudged to add quantity of an item to their cart
  NUDGE_TYPE_ADD_ITEM = 1;
  // Cx is nudged to clip a coupon on an item in their cart
  NUDGE_TYPE_CLIP_COUPON = 2;
}

// List of external loyalty providers
enum LoyaltyProviderType {
  // Default value
  UNSPECIFIED_LOYALTY_PROVIDER = 0;
  // PC Optimum in Canada
  PCO = 1;
}
