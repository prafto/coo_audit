syntax = "proto3";
package common.inventory.v1;

import "common/common.proto";
import "common/money.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option go_package = "github.com/doordash/services-protobuf/generated/common/inventory";
option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.common.inventory";

// VerticalType enum will decide which vertical specific field client needs to pick.
enum VerticalType {
  // Should never happens.
  VERTICAL_TYPE_UNSPECIFIED = 0;
  // Restaurant vertical.
  VERTICAL_TYPE_RESTAURANT = 1;
  // Retail vertical.
  VERTICAL_TYPE_RETAIL = 2;
}

// Core information for an entity.
// We only keep minimal information for now to make it easier for consumer to parse.
message CoreInfo {
  // Internal item id.
  string item_id = 1;
  // Merchant supplied id.
  string mx_supplied_id = 2;
  // Store id for the entity.
  string store_id = 3;
  // Ddsic for the entity.
  string dd_sic = 4;
  // Item name for the entity.
  string item_name = 5;
  // Price info for the entity.
  ItemPriceInfo item_price_info = 6;
  // VerticalType enum will decide which vertical specific field client needs to pick.
  VerticalType vertical_type = 7;
  // Restriction info, currently only alcohol info
  ItemRestrictionInfo restriction_info = 8;
}

// Restriction info of an entity, adapting from menu/menu.proto
// Currently only contains alcohol info
message ItemRestrictionInfo {
  // Identifies the type of a restricted menu item.
  enum RestrictionType {
    // No restriction.
    RESTRICTION_TYPE_UNSPECIFIED = 0;
    // Item is alcohol
    RESTRICTION_TYPE_ALCOHOL = 1;
  }
  // Restriction type, whether it has the alcohol label or not.
  RestrictionType restriction_type = 2;
}

// Item price info of entity.
// We only keep the base price and price for now to support current use cases.
message ItemPriceInfo {
  // Item base price.
  ItemPrice base_price = 1;
  // Item price.
  ItemPrice price = 2;
}

// Item price of entity.
// We only maintain the basic fields now but leave room for expanding other use cases in the future.
message ItemPrice {
  // monetary fields containing currency, unit amount, etc
  money.MonetaryFields monetary_fields = 1;
}

// Deprecated.
message CatalogInfo {
  option deprecated = true;
  // l1 category id.
  string l1_category_id = 1;
  // l2 category id.
  string l2_category_id = 2;
  // l1 category name.
  string l1_category_name = 3;
  // l2 category name.
  string l2_category_name = 4;
  // List of UPCs.
  repeated string upcs = 8;
}

// Retail vertical specific information.
message RetailInfo {
  // l1 category id.
  string l1_category_id = 1;
  // l2 category id.
  string l2_category_id = 2;
  // l1 category name.
  string l1_category_name = 3;
  // l2 category name.
  string l2_category_name = 4;
  // List of UPCs.
  repeated string upcs = 5;
  // List of Normalized UPCs.
  repeated string gtin14_codes = 6;
}

// Restaurant related information for an entity.
// We only keep minimal information for now to make it easier for consumer to parse.
message RestaurantInfo {}

// Aggregated inventory entity information.
message InventoryEntityInfo {
  // Core entity information from menu.
  CoreInfo core_info = 1;
  // Restaurant related information from menu.
  RestaurantInfo restaurant_info = 2;
  // Deprecated.
  CatalogInfo catalog_info = 3 [deprecated = true];
  // Retail related information from catalog.
  RetailInfo retail_info = 4;
}

// GetInventoryEntitiesByMerchantSuppliedIdsRequest is the request body for fetching inventory entities by merchant supplied ids.
message GetInventoryEntitiesByMerchantSuppliedIdsRequest {
  // Store id for the entities.
  string store_menu_id = 1;
  // Menu id for the entities.
  string menu_id = 2;
  // Merchant supplied ids for the entities.
  repeated string mx_supplied_ids = 3;
}

// GetInventoryEntitiesByMerchantSuppliedIdsResponse is the response body for fetching inventory entities by merchant supplied ids.
message GetInventoryEntitiesByMerchantSuppliedIdsResponse {
  // List of inventory entities.
  repeated InventoryEntityInfo inventory_entity_info = 1;
}

// Orderability Info
message OrderabilityInfo {
  // orderable or not
  bool orderable = 1;
  // reason
  OrderabilityReason reason = 2;
}

// Orderability Reason
enum OrderabilityReason {
  // unspecified
  ORDERABILITY_REASON_UNSPECIFIED = 0;
  // store hours
  ORDERABILITY_REASON_STORE_HOURS = 1;
  // suspension
  ORDERABILITY_REASON_PRODUCT_SUSPENSION = 2;
  // deactivation
  ORDERABILITY_REASON_PRODUCT_DEACTIVATION = 3;
  // visibilty / product level hours
  ORDERABILITY_REASON_PRODUCT_VISIBILITY = 4;
  // historical item is not orderable
  ORDERABILITY_REASON_HISTORICAL = 5;
}

// Contains all information to be used in RPSv1
message ItemPromotionInfo {
  // Supported promotion types enum
  ItemPromotionType promotion_type = 1;
  // Required purchase quantity qualified for promotion
  google.protobuf.Int64Value purchase_quantity = 2;
  // Total price after promotion
  money.MonetaryFields total_price = 3;
  // Qualified discounted quantity
  google.protobuf.Int64Value discount_quantity = 4;
  // Discount percentage off, max is 100
  google.protobuf.DoubleValue discount_percentage = 5;
  // Discount price off
  money.MonetaryFields discount_price_off = 6;
  // Limited purchasable discounted quantity
  google.protobuf.Int64Value quantity_limit = 7;
  // Promotion start time
  google.protobuf.Timestamp start_date_time = 8;
  // Promotion end time
  google.protobuf.Timestamp end_date_time = 9;
  // Promotion id
  google.protobuf.StringValue promotion_info_id = 10;
  // Promotion terms and condition
  google.protobuf.StringValue terms_and_conditions_content_id = 11;
  // Mx provided promotion id
  google.protobuf.StringValue mx_provided_promotion_id = 12;
}

// PromotionType defines dd supported promotion types
enum ItemPromotionType {
  // Unspecified
  ITEM_PROMOTION_TYPE_UNSPECIFIED = 0;
  // Buy X items for total Y
  ITEM_PROMOTION_TYPE_BUY_X_FOR_Y = 1;
  // Buy X items get Y items Z percent off
  ITEM_PROMOTION_TYPE_BUY_X_GET_Y_Z_PERCENT_OFF = 2;
  // Buy X items save Y
  ITEM_PROMOTION_TYPE_BUY_X_SAVE_Y = 3;
}
