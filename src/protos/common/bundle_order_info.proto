syntax = "proto3";
package common.bundle_order_info.v1;

import "google/protobuf/wrappers.proto";

option go_package = "github.com/doordash/services-protobuf/generated/common";
option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.common";

// Defines the metadata for bundle order information
message BundleOrderInfo {
  google.protobuf.StringValue primary_bundle_order_uuid = 1;
  google.protobuf.Int64Value primary_bundle_order_id = 2;
  repeated google.protobuf.StringValue bundle_order_uuids = 3;
  BundleType bundle_type = 5;
  BundleOrderRole bundle_order_role = 6;
  BundleDomain bundle_domain = 7;

  // Deprecated: Use bundle_type and bundle_order_role under BundleOrderInfo instead.
  BundleOrderConfig bundle_order_config = 4 [deprecated = true];
}

// To be deprecated: Please don't put new fields under this.
message BundleOrderConfig {
  BundleType bundle_type = 1;
  BundleOrderRole bundle_order_role = 2;
}

// Defines if this order is a bundle order bundled pre or post of checkout
enum BundleType {
  // Unknown
  BUNDLE_TYPE_UNSPECIFIED = 0;
  // Bundle orders which were bundled pre-checkout
  BUNDLE_TYPE_PRE_CHECKOUT = 1;
  // Bundle orders which were bundled after the first order was already checked out
  BUNDLE_TYPE_POST_CHECKOUT = 2;
  // Bundle orders which were bundled alcohol menu pre-checkout
  BUNDLE_TYPE_ALCOHOL_MENU_BUNDLE = 3;
  // Bundle orders which were bundled using new pre-checkout
  BUNDLE_TYPE_PRE_CHECKOUT_V1 = 4;
  // Bundle orders which were bundled using S4FE
  BUNDLE_TYPE_PRE_CHECKOUT_S4FE = 5;
  // Bundle orders which were bundled using pre-checkout cart
  BUNDLE_TYPE_PRE_CHECKOUT_CART = 6;
  // Bundle orders which were bundled using pre-checkout retail search
  BUNDLE_TYPE_PRE_CHECKOUT_RETAIL_SEARCH = 7;
  // Bundle orders which were bundled using pre-checkout item page
  BUNDLE_TYPE_PRE_CHECKOUT_ITEM = 8;
  // Bundle orders which were bundled from pre-checkout NV aggregate store
  BUNDLE_TYPE_NV_AGGREGATE_STORE = 9;
}

// Defines the role the order plays in the bundle order case
enum BundleOrderRole {
  // Unknown
  BUNDLE_ORDER_ROLE_UNSPECIFIED = 0;
  // Order acts as the primary order for this bundle order
  BUNDLE_ORDER_ROLE_PRIMARY_ORDER = 1;
  // Order acts as a secondary bundle order for this bundle order
  BUNDLE_ORDER_ROLE_BUNDLE_ORDER = 2;
}

// Defines the general bundle experience for a bundle order
enum BundleDomain {
  // Unknown
  BUNDLE_DOMAIN_UNSPECIFIED = 0;
  // Bundle pre-checkout experience
  BUNDLE_DOMAIN_PRE_CHECKOUT = 1;
  // Bundle post-checkout experience
  BUNDLE_DOMAIN_POST_CHECKOUT = 2;
}
