syntax = "proto3";

package common.travel.v1;

import "common/common.proto";
import "common/trip.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option go_package = "github.com/doordash/services-protobuf/generated/rpc/common/travel";
option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.common.travel";

// message that denotes coordinate with lat and long info
message Coordinate {
  // latitude
  google.protobuf.DoubleValue lat = 1;
  // longitude
  google.protobuf.DoubleValue lng = 2;
}

// Response Status Type
enum Status {
  // default status
  STATUS_UNSPECIFIED = 0;
  // Successful request
  STATUS_OK = 1;
  // Successful request but fallback was used
  STATUS_OK_WITH_FALLBACK = 2;
  // Request yielded zero results
  STATUS_ZERO_RESULTS = 3;
  // Request returned Not Found Response
  STATUS_NOT_FOUND = 4;
  // Request exceeds daily limit for client
  STATUS_OVER_DAILY_LIMIT = 5;
  // Request exceeds daily limit for client
  STATUS_OVER_QUERY_LIMIT = 6;
  // Request was denied because of wrong credentials
  STATUS_REQUEST_DENIED = 7;
  // Invalid Request
  STATUS_INVALID_REQUEST = 8;
  // The maximum allowed number of waypoints is 25, plus the origin and destination or else the status below
  STATUS_MAX_WAYPOINTS_EXCEEDED = 9;
  // Indicates the requested route is too long and cannot be processed. This error occurs when more complex directions are returned
  STATUS_MAX_ROUTE_LENGTH_EXCEEDED = 10;
  // default status chosen if error is not identified
  STATUS_UNKNOWN_ERROR = 11;
}

// Route Leg
message RouteLeg {
  // origin of the leg
  Coordinate start_location = 1;
  // destination of the leg
  Coordinate end_location = 2;
  // steps within the route leg
  repeated Step steps = 3;
}

// Steps
message Step {
  // step polyline - only available for successful high precision requests
  google.protobuf.StringValue step_polyline = 1;
}

// Bounds
message Bounds {
  // northeast boundary
  Coordinate northeast = 1;
  // southwest boundary
  Coordinate southwest = 2;
}
