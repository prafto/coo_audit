syntax = "proto3";

package risk_platform.event.v1.risk_stream.v1;

import "google/protobuf/timestamp.proto";

option java_package = "com.doordash.rpc.risk_stream.realtime";

// an event which fires when case dedupping comparison is done.
message ReviewQueueCaseDedupComparisonEvent {
  // unique name of review queue
  string queue_name = 1;
  // entity ID, eg: consumer_id or dasher_id
  string entity_id = 2;
  // case details, this is the same info shown in workstation
  map<string, string> case_details = 3;
  // whether the case should be dedupped based on RDP.
  bool should_be_deduped_rdp = 4;
  // whether the case should be dedupped based on CMP.
  bool should_be_deduped_cmp = 5;
}

// an event which fires when case capacity check comparison is done.
message ReviewQueueCaseCapacityCheckComparisonEvent {
  // unique name of review queue
  string queue_name = 1;
  // entity ID, eg: consumer_id or dasher_id
  string entity_id = 2;
  // case details, this is the same info shown in workstation
  map<string, string> case_details = 3;
  // whether the case should be capped based on RDP.
  bool should_be_capped_rdp = 4;
  // whether the case should be capped based on CMP.
  bool should_be_capped_cmp = 5;
}
