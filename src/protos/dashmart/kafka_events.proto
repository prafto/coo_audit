syntax = "proto3";

package dashmart.v1;

import "common/date.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option go_package = "dashmart_service";
option java_multiple_files = true;
option java_package = "com.doordash.rpc.dashmart.v1";

// Kafka event that fires when regional or strike through price is applied in dashmart service for a ddid in a facility.
message SkuPriceUpdateEvent {
  // [Required] Id of the facility
  int32 facility_id = 1;
  // [Required] Id of the sku with the price update
  string ddid = 2;
  // [Required] Id of the user that applied the price update
  string user_id = 3;
  // [Optional] id(s) of the store page collection(s) the sku with price update will appear in.
  repeated string collection_ids = 4;
  // [Optional] sort index determines the order the sku with price update will appear in the collection.
  // Sort index is the same for a particular sku on the facility level.
  google.protobuf.StringValue collection_sort_index = 5;
  // [Required] Boolean value determining if sku should be removed from existing collection(s).
  bool should_remove_sku_from_existing_collections = 6;
  // [Optional] discount sellable quantity is the quantity we intend to sell on a discount.
  google.protobuf.Int32Value discount_sellable_qty = 7;
  // [Required] Sku price type either regional or strikethrough price
  PricingType pricing_type = 8;
}

// Represents an item with ddid, quantity, and optional expiration date
message ReceiptItem {
  // Unique identifier for the item
  string ddid = 1;
  // Quantity of the item
  int32 quantity = 2;
  // [Optional] Expiration date of the item
  google.protobuf.Timestamp expiration = 3;
}

// Represents when item is received in a facility
message ItemReceiptEvent {
  // ID of the receiving unit
  int64 receiving_unit_id = 1;
  // Purchase order number
  string po_nbr = 2;
  // ID of the facility
  int32 facility_id = 3;
  // List of items
  repeated ReceiptItem items = 4;
  // [Optional] Transaction date
  date.Date tran_date = 5;
}

// Pricing type
enum PricingType {
  // Unspecified
  PRICING_TYPE_UNSPECIFIED = 0;
  // Regional price
  PRICING_TYPE_REGIONAL = 1;
  // Strikethrough price
  PRICING_TYPE_DISCOUNT = 2;
}
