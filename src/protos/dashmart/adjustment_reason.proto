syntax = "proto3";

package dashmart.v1;

import "common/date.proto";
import "doordash.api/annotations.proto";
import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option go_package = "dashmart_service";
option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.dashmart.v1";

// APIs for dashmart service
service AdjustmentReasonService {
  option (doordash.api.service) = {
    port: 50051
    name_spaces: ["dashmart"]
    owner: {
      name: "dashmart"
      id: "dashmart"
      slack_channel: "#dashmart-eng"
      email_alias: "dashmart-eng@doordash.com"
    }
  };

  // List all adjustment reasons
  rpc ListAdjustmentReasons(ListAdjustmentReasonsRequest) returns (ListAdjustmentReasonsResponse) {
    option (google.api.http) = {get: "/dashmart/v1/adjustment-reasons"};
    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: DEV
      authorization: [NONE]
      target_products: [INTERNAL]
    };
  }

  // Get a specific adjustment reason by code
  rpc GetAdjustmentReason(GetAdjustmentReasonRequest) returns (GetAdjustmentReasonResponse) {
    option (google.api.http) = {get: "/dashmart/v1/adjustment-reasons/{code}"};
    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: DEV
      authorization: [NONE]
      target_products: [INTERNAL]
    };
  }
}

// Request to list all adjustment reasons
message ListAdjustmentReasonsRequest {
  // Filters to apply
  repeated string filter = 1;

  // page size
  int32 page_size = 2;

  // pagination token
  string page_token = 3;
}

// Internal pagination token
message InternalListAdjustmentReasonsPaginationToken {
  // key used for pagination
  string key = 1;
  // used in pagination
  repeated string filter = 2;
}

// Request to get a specific adjustment reason
message GetAdjustmentReasonRequest {
  // Code of the adjustment reason
  string code = 1;
}

// Adjustment reason data
message AdjustmentReason {
  // Status of the adjustment reason
  enum Status {
    // Default value, should not be used
    STATUS_UNSPECIFIED = 0;
    // Active status
    STATUS_ACTIVE = 1;
    // Backend only status
    STATUS_BE_ONLY = 2;
    // Deprecated status
    STATUS_DEPRECATED = 3;
    // Not mapped in NS status
    STATUS_NOT_MAPPED_NS = 4;
  }

  // Code of the reason
  string reason_code = 1;
  // Status of the reason
  Status status = 2;
  // Operation of the reason
  string operation = 3;
  // NS GL account ID
  int32 ns_gl_account_id = 4;
  // NS reason ID
  int32 ns_reason_id = 5;
  // NS inventory adjustment type
  string ns_inventory_adjustment_type = 6;
  // Default display name
  string default_display_name = 7;
}

// Response for ListAdjustmentReasons RPC
message ListAdjustmentReasonsResponse {
  // List of adjustment reasons
  repeated AdjustmentReason adjustment_reasons = 1;

  // pagination token
  string next_page_token = 3;
}

// Response for GetAdjustmentReason RPC
message GetAdjustmentReasonResponse {
  // Adjustment reason
  AdjustmentReason adjustment_reason = 1;
}
