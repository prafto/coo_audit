syntax = "proto3";

package dashmart.v1;

import "doordash.api/annotations.proto";
import "google/api/annotations.proto";

option go_package = "dashmart_service";
option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.dashmart.v1";

// API's related to DashMart consumables
service ConsumablesService {
  // Unified gateway config, comment out if using kreya for local testing
  option (doordash.api.service) = {
    port: 50051
    name: "dashmart-service-web"
    url: "dashmart-service-web.service.prod.ddsd"
    name_spaces: ["dashmart"]
    api_key_name: "DASHMART-API-KEY"
    owner: {
      name: "dashmart"
      id: "dashmart"
      slack_channel: "#dashmart-eng"
      email_alias: "dashmart-eng@doordash.com",
    }
    target_products: [INTERNAL]
  };
  // list consumables associated with a delivery
  rpc ListConsumablesForDelivery(ListConsumablesForDeliveryRequest) returns (ListConsumablesForDeliveryResponse) {
    option (google.api.http) = {
      post: "/dashmart/v1/delivery/packing-info",
      body: "*"
    };
    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: TEST
      authorization: [CX_USER]
      target_products: [CX]
    };
  }
}

// Request for ListConsumablesForDelivery
message ListConsumablesForDeliveryRequest {
  // delivery uuid of order
  string delivery_uuid = 1;
}

// Consumables for delivery response, to display on DMC app
message ListConsumablesForDeliveryResponse {
  // list of consumable skus associated with the delivery
  repeated ConsumableSku consumable_skus = 1;
}

// shape of consumable sku
message ConsumableSku {
  // ddid the consumable is stored as
  string ddid = 1;
  // name of consumable (bag, sticker etc.)
  string item_name = 2;
  // image url
  string image_url = 3;
}
