syntax = "proto3";

package dashmart.v1;

import "common/money.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option go_package = "dashmart_service";
option java_multiple_files = true;
option java_package = "com.doordash.rpc.dashmart.v1";

// Temperature at which items in a DashMart should be stored at
enum Temperature {
  // Unspecified
  TEMPERATURE_UNSPECIFIED = 0;
  // Ambient
  TEMPERATURE_AMBIENT = 1;
  // Refrigerated
  TEMPERATURE_REFRIGERATED = 2;
  // Frozen
  TEMPERATURE_FROZEN = 3;
}

// Dimensions
message Dimensions {
  // Length
  double length = 1;
  // Width
  double width = 2;
  // Height
  double height = 3;
}

// Information about a user
message UserInfo {
  // User id
  string user_id = 1;
  // Fist name
  string first_name = 2;
  // Last name
  string last_name = 3;
  // Email
  string email = 4;
  // Phone number
  google.protobuf.StringValue phone_number = 5;
}

// Represents a time interval between start_time and end_time
message TimeInterval {
  // Start time of the range. Should be less than or equal to end_time.
  google.protobuf.Timestamp start_time = 1;
  // end_time of this range
  google.protobuf.Timestamp end_time = 2;
}

// Mx code information
message MxCode {
  // code. Eg. DD/LCL
  string code = 1;
  // flag to indicate if the mx code is consigned or not.
  bool is_consigned = 2;
}

// Business information
message Business {
  // id of the business
  string business_id = 1;
  // Name of the business
  string business_name = 2;
}

// Experiment details
message PricingExperimentOverride {
  // [Required] Dynamic Value name
  string experiment_name = 1;
  // [Required] Treatments in the experiment
  repeated PricingExperimentConfiguration configurations = 2;
}

// Treatment price mapping message
message PricingExperimentConfiguration {
  // [Required] Variant name
  string bucket_name = 1;
  // [Required] Experimental price value for the sku
  money.MonetaryFields price = 2;
}
