syntax = "proto3";

package doordash.retail.inventory.v1;

import "common/code.proto";
import "doordash.retail.inventory.v1/common.proto";
import "google/protobuf/wrappers.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.retail.inventoryservice";

// Service to update the individual feed
service ItemFeedSubmissionService {
  // Create a new retail feed item, or update an existing retail feed item.
  rpc CreateOrUpdateRetailFeed(CreateOrUpdateRetailFeedRequest) returns (CreateOrUpdateRetailFeedResponse);
  // Batch create or update inventory
  rpc CreateOrUpdateInventory(CreateOrUpdateInventoryRequest) returns (CreateOrUpdateInventoryResponse);
  // Batch create or update inventory with suspension flow
  rpc CreateOrUpdateInventoryWithSuspensions(CreateOrUpdateInventoryWithSuspensionsRequest) returns (CreateOrUpdateInventoryWithSuspensionsResponse);
  // Create a new retail feed availability entry, or update an existing retail feed item availability.
  // Availability update only API for use cases such as Dasher reported inventory update
  rpc CreateOrUpdateRetailFeedAvailability(CreateOrUpdateRetailFeedAvailabilityRequest) returns (CreateOrUpdateRetailFeedAvailabilityResponse);
  // Batch create or update inventory signals from non-Mx sources
  rpc CreateOrUpdateInventoryOverride(CreateOrUpdateInventoryOverrideRequest) returns (CreateOrUpdateInventoryOverrideResponse);
  // Refresh inventory without inventory files
  rpc RefreshInventory(RefreshInventoryRequest) returns (RefreshInventoryResponse);
}

// Update individual retail feed
// Combine update and insert into one request to simplify tooling <> backend interaction.
// Support partial update of the item:
// If attribute use google protobuf wrapper, it's an optional field
// 1. When attribute is set (either nil or not nil) -> overwrite the current value of the attribute
// 2. When attribute is absent (isInitialized() function returns false) -> keep the current value of the attribute
message CreateOrUpdateRetailFeedRequest {
  // Raw inventory feed
  RawInventoryFeed raw_inventory_feed = 1;
  // By default prevew only, changes won't be applied, client will receive a diff comparison result
  // When disabled, changes will be applied in the request.
  google.protobuf.BoolValue preview_only = 2;
  // UUID to associate and track the request. If not
  // provided, a new UUID will be generated and provided
  // in the response.
  google.protobuf.StringValue request_id = 3;
}

// Upsert inventory feed response
message CreateOrUpdateRetailFeedResponse {
  // Status of create/update feed item request
  // Used to inform valid feed-centric status information.
  // For unhandled exception cases, ERROR is set (look at
  // code and error_message for more details).
  enum StatusCode {
    // Unspecified status
    STATUS_CODE_UNSPECIFIED = 0;
    // Item created successfully
    STATUS_CODE_ITEM_CREATED = 1;
    // Item updated successfully
    STATUS_CODE_ITEM_UPDATED = 2;
    // Generic error
    STATUS_CODE_ERROR = 20;
  }
  // Response
  RawInventoryFeedUpdateResponse response = 1;
  // Feed item update status code
  StatusCode feed_status_code = 2;
  // UUID to associate and track the request. If request ID
  // was provided in the request, this will be the same value as that.
  // Otherwise, a new UUID will be generated by the service.
  google.protobuf.StringValue request_id = 3;
  // gRPC response code
  code.Code code = 20;
  // Error message
  google.protobuf.StringValue error_message = 21;
}

// Create or update one or multiple inventory request
message CreateOrUpdateInventoryRequest {
  // Store information such as businessId and storeId for inventory request, required
  StoreInfo store_info = 1;
  // The inventory items to create or update
  repeated Inventory inventory = 2;
  // UUID to associate and track the request
  google.protobuf.StringValue request_id = 3;
  // Determine if this request is to do a full_menu_update,
  // if true, the existing items which were not mentioned in the inventory list will be set to inactive
  // if false, the existing unmentioned items will keep as they are
  google.protobuf.BoolValue full_menu_update = 4;
  // Determine if the request wants to return the update result immediately, the response will include the item level update info, and the request will take longer
  // This flag is only applicable to partial update
  google.protobuf.BoolValue real_time_update = 5;
  // Determine if we want to send the partial update to menu immediately without the aggregation window
  // This could cause some race condition on menu side if there are multiple channels updating that menu at the same time
  // This flag is only applicable to partial update
  google.protobuf.BoolValue skip_aggregation = 6;
  // Determine if we want the request to only persist inventory info in Raw Inventory Feed and skip sending to menu.
  // If true, will persist inventory attributes in Raw Inventory Feed and skip send to Menu.
  // If false, will skip persist inventory attributes in Raw Inventory Feed and continue the normal update workflow.
  google.protobuf.BoolValue skip_sending_to_menu = 7;
  // Source of the inventory
  SourceOfFeed source = 20;
  // Determine if we want to skip price guardrail in the inventory process.
  google.protobuf.BoolValue skip_price_guardrail = 21;
  // Whether to clean existing promotionInfo.
  google.protobuf.BoolValue clean_existing_promo = 22;
  // cleaning flags for inventory updates
  InventoryCleaningFlags cleaning_flags = 23;
}

// Create or update one or multiple inventory request
message CreateOrUpdateInventoryWithSuspensionsRequest {
  // Defines operation type POST or PATCH
  enum OperationType {
    // Undefined operation
    OPERATION_TYPE_UNSPECIFIED = 0;
    // PATCH operation
    OPERATION_TYPE_PATCH = 1;
    // POST operation
    OPERATION_TYPE_POST = 2;
  }
  // Store information such as businessId and storeId for inventory request, required
  StoreInfo store_info = 1;
  // The inventory items to create or update
  repeated Inventory inventory = 2;
  // UUID to associate and track the request
  google.protobuf.StringValue request_id = 3;
  // Determine if this request is to do a full_menu_update,
  // if true, the existing items which were not mentioned in the inventory list will be set to inactive
  // if false, the existing unmentioned items will keep as they are
  google.protobuf.BoolValue full_menu_update = 4;
  // Determine if the request wants to return the update result immediately, the response will include the item level update info, and the request will take longer
  // This flag is only applicable to partial update
  google.protobuf.BoolValue real_time_update = 5;
  // Determine if we want to send the partial update to menu immediately without the aggregation window
  // This could cause some race condition on menu side if there are multiple channels updating that menu at the same time
  // This flag is only applicable to partial update
  google.protobuf.BoolValue skip_aggregation = 6;
  // Determine if we want the request to only persist inventory info in Raw Inventory Feed and skip sending to menu.
  // If true, will persist inventory attributes in Raw Inventory Feed and skip send to Menu.
  // If false, will skip persist inventory attributes in Raw Inventory Feed and continue the normal update workflow.
  google.protobuf.BoolValue skip_sending_to_menu = 7;
  // Determine whether or not this is a create or update request.
  // This helps determine if suspensions go through after a successful create.
  // If update operation, there is no need to wait for menu callback before suspending items.
  OperationType operation_type = 8;
  // Source of the inventory
  SourceOfFeed source = 20;
  // Determine if we want to skip price guardrail in the inventory process.
  google.protobuf.BoolValue skip_price_guardrail = 21;
}

// Create or update one or multiple inventory override request
message CreateOrUpdateInventoryOverrideRequest {
  // Store information such as businessId and storeId for inventory request, required
  StoreInfo store_info = 1;
  // The inventory items to create or update
  repeated InventoryOverride inventory_override = 2;
  // UUID to associate and track the request
  google.protobuf.StringValue request_id = 3;
  // Source of the inventory
  SourceOfOverrideFeed source = 20;
}

// Refresh inventory request
message RefreshInventoryRequest {
  // business id list to refresh.
  // if business ids filled, the store id should not be filled otherwise will fail
  repeated int64 business_id = 1;
  // store id list to refresh.
  // if store ids filled, the business id should not be filled otherwise will fail
  repeated int64 store_id = 2;
}

// Refresh inventory response
message RefreshInventoryResponse {
  // UUID to track the request
  google.protobuf.StringValue request_id = 1;
  // gRPC response code
  code.Code code = 5;
  // Error message if there is any
  google.protobuf.StringValue error_message = 6;
}

// Create or update one or multiple inventory response
message CreateOrUpdateInventoryResponse {
  // Store information such as businessId and storeId for inventory request
  StoreInfo store_info = 1;
  // The update result for each item,
  // This will be included in the response only if the real_time_update was set to true
  repeated InventoryUpdateResult inventory_update_result = 2;
  // UUID to associate and track the request. If request ID
  // was provided in the request, this will be the same value as that.
  // Otherwise, a new UUID will be generated by the service.
  google.protobuf.StringValue request_id = 3;
  // Source of the inventory
  SourceOfFeed source = 19;
  // gRPC response code
  code.Code code = 20;
  // Error message if there is any
  google.protobuf.StringValue error_message = 21;
}

// Create or update one or multiple inventory response
message CreateOrUpdateInventoryWithSuspensionsResponse {
  // Store information such as businessId and storeId for inventory request
  StoreInfo store_info = 1;
  // The update result for each item,
  // This will be included in the response only if the real_time_update was set to true
  repeated InventoryUpdateResult inventory_update_result = 2;
  // UUID to associate and track the request. If request ID
  // was provided in the request, this will be the same value as that.
  // Otherwise, a new UUID will be generated by the service.
  google.protobuf.StringValue request_id = 3;
  // Source of the inventory
  SourceOfFeed source = 19;
  // gRPC response code
  code.Code code = 20;
  // Error message if there is any
  google.protobuf.StringValue error_message = 21;
}

// Response for CreateOrUpdateInventoryOverride
message CreateOrUpdateInventoryOverrideResponse {
  // UUID to associate and track the request. If request ID
  // was provided in the request, this will be the same value as that.
  // Otherwise, a new UUID will be generated by the service.
  google.protobuf.StringValue request_id = 1;
  // Store information such as businessId and storeId
  StoreInfo store_info = 2;
  // gRPC response code
  code.Code code = 20;
  // Error message if there is any
  google.protobuf.StringValue error_message = 21;
}

// Update item availability only.
message CreateOrUpdateRetailFeedAvailabilityRequest {
  // Item Availability
  ItemAvailability item_availability = 1;
  // By default prevew only, changes won't be applied, client will receive a diff comparison result
  // When disabled, changes will be applied in the request.
  google.protobuf.BoolValue preview_only = 2;
  // UUID to associate and track the request. If not
  // provided, a new UUID will be generated and provided
  // in the response.
  google.protobuf.StringValue request_id = 3;
}

// CreateOrUpdateRetailFeedAvailabilityResponse
message CreateOrUpdateRetailFeedAvailabilityResponse {
  // Status of create/update feed availability request.
  // Used to inform valid feed-centric status information.
  // For unhandled exception cases, ERROR is set (look at
  // code and error_message for more details).
  enum StatusCode {
    // Unspecified status
    STATUS_CODE_UNSPECIFIED = 0;
    // Item created successfully
    STATUS_CODE_ITEM_CREATED = 1;
    // Item updated successfully
    STATUS_CODE_ITEM_UPDATED = 2;
    // Generic error
    STATUS_CODE_ERROR = 20;
  }
  // Response
  ItemAvailabilityUpdateResponse response = 1;
  // Feed availability update status code
  StatusCode feed_status_code = 2;
  // UUID to associate and track the request. If request ID
  // was provided in the request, this will be the same value as that.
  // Otherwise, a new UUID will be generated by the service.
  google.protobuf.StringValue request_id = 3;
  // gRPC response code
  code.Code code = 20;
  // Error message
  google.protobuf.StringValue error_message = 21;
}

// wrapper to hold all cleaning flags
message InventoryCleaningFlags {
  // Whether to clean existing openHoursInfo.
  google.protobuf.BoolValue clean_existing_open_hours = 1;
}
