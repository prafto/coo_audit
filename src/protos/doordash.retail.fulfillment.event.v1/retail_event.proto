syntax = "proto3";
package doordash.retail.fulfillment.event.v1;

import "doordash.retail.common.v1/common.proto";
import "doordash.retail.consumer.v1alpha1/cx_sub.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.retail_events";

/*
   event will be triggered when dasher finished shopping
*/
message DasherFinishShoppingEvent {
  // the time that dasher finished picking
  google.protobuf.Timestamp pick_completed_time = 1;
}

/*
   event will be triggered when dasher finished staging
*/
message DasherFinishStagingEvent {
  // the time that dasher finished staging
  google.protobuf.Timestamp staging_completed_time = 1;
  // container information for staging event
  repeated StagedContainer containers = 2;
}

/*
   event will be triggered when item substitution preference is changed
*/
message ItemSubstitutionPreferenceUpdatedEvent {
  // the time that item substitution preference is changed
  google.protobuf.Timestamp preference_changed_time = 1;
  // msid of original item
  common.v1.Identifier original_item_identifier = 2;
  // substitution preference input
  doordash.retail.consumer.v1alpha1.ItemSubstitutionPreference item_substitution_preference = 3;
}

/*
   event will be triggered when dasher adds a new item to cart while shopping and after talking to Cx
*/
message DasherAddedItemEvent {
  // List of items added
  repeated DasherAddedItemDetails dasher_added_items = 1;
}

// Item Details of item added by Dx while shopping
message DasherAddedItemDetails {
  // Name of the item added
  google.protobuf.StringValue item_name = 1;
  // Store ID
  google.protobuf.StringValue store_id = 2;
  // Item msid
  google.protobuf.StringValue merchant_supplied_id = 3;
}

/*
   event will be triggered when dasher completes staging and including details of containers
*/
message StagedContainer {
  // identifier found on the barcode on each container
  google.protobuf.StringValue external_id = 1;
  // The shelf id dasher selected when staging the container
  google.protobuf.StringValue external_location_id = 2;
  // The shelf's temperature zone where dasher staged the container
  google.protobuf.StringValue external_zone_id = 3;
}

/*
   event will be triggered when sales receipt is uploaded by dasher
*/
message SalesReceiptUploadEvent {
  // list of receipt image urls, in most cases, it will be only 1
  // This will be deprecated in the future
  repeated string receipt_image_urls = 1;
  // list of receipts, including image urls, upload timestamps, etc.
  repeated SalesReceipt receipts = 2;

  // sales receipt
  message SalesReceipt {
    // receipt image url
    google.protobuf.StringValue receipt_image_url = 1;
    // upload timestamp
    google.protobuf.Timestamp upload_timestamp = 2;
  }
}

/*
   retail_lifecycle_events topic for QR code ack
*/
message QrCodeAckSubEvent {
  // Event type
  EventType event_type = 1;
  // Event payload
  google.protobuf.StringValue event_payload = 2;

  // Event type
  enum EventType {
    // Unspecified event type
    EVENT_TYPE_UNSPECIFIED = 0;
    // Event type for QR code scan ack
    EVENT_TYPE_SCAN = 1;
    // Event type for QR code payment ack
    EVENT_TYPE_PAYMENT = 2;
  }
}

/*
   event will be triggered when community photo is uploaded
*/
message CommunityPhotoUploadEvent {
  // list of community photo upload meta data
  repeated CommunityPhotoUploadMetaData community_photo_upload_meta_data = 1;
}

/*
   community photo upload meta data
*/
message CommunityPhotoUploadMetaData {
  // store id
  google.protobuf.StringValue store_id = 1;
  // item merchant supplied id
  google.protobuf.StringValue merchant_supplied_id = 2;
  // community photo image url
  google.protobuf.StringValue community_photo_image_url = 3;
}

/*
   A kafka message proto for retail_lifecycle_events topic
*/
message RetailEvent {
  // id of the delivery
  int64 delivery_id = 1;
  // create time of this event
  google.protobuf.Timestamp created_at = 2;
  // id of the shift
  google.protobuf.Int64Value shift_id = 3;
  // uuid of the delivery
  google.protobuf.StringValue delivery_uuid = 4;
  // actual event
  oneof event {
    // event will be triggered when dasher finished shopping
    DasherFinishShoppingEvent dasher_finish_shopping = 5;
    // event will be triggered when dasher finished staging
    DasherFinishStagingEvent dasher_finish_staging = 6;
    // event will be triggered when item substitution preference is updated
    ItemSubstitutionPreferenceUpdatedEvent item_substitution_preference_updated = 8;
    // event will be triggered when sales receipt is uploaded by dasher
    SalesReceiptUploadEvent sales_receipt_upload = 9;
    // event will be triggered when Dx adds a new item to the shopping cart
    DasherAddedItemEvent dasher_added_item = 10;
    // event will be triggered when QR code ack is received
    QrCodeAckSubEvent qr_code_ack = 11;
    // event will be triggered when community photo is uploaded
    CommunityPhotoUploadEvent community_photo_upload = 12;
  }
  // TODO: deprecate this when we moved to the updated event
  repeated StagedContainer containers = 7;
}
