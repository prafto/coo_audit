syntax = "proto3";

import "common/service_client_config.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";

option go_package = "github.com/doordash/services-protobuf/generated/geo_intelligence";
option java_generic_services = true;
option java_multiple_files = true;
option java_outer_classname = "GeoIntelligenceSurvey";
option java_package = "geo.intelligence.survey.proto";

service SurveyService {
  option (service_client.client_config).service_name = "geo-intelligence";
  option (service_client.client_config).service_app = "web";

  rpc CreateSurvey(CreateSurveyRequest) returns (Survey) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 300;
    option (service_client.client_method_config).retry_config.max_attempts = 2;
    option (service_client.client_method_config).circuit_breaker_config.failure_rate_threshold = 0.2;
    option (service_client.client_method_config).circuit_breaker_config.minimum_request_threshold = 50;
    option (service_client.client_method_config).circuit_breaker_config.counter_sliding_window_millis = 60000;
    option (service_client.client_method_config).circuit_breaker_config.circuit_open_window_millis = 30000;
  }
  rpc CreateSurveyQuestion(CreateSurveyQuestionRequest) returns (SurveyQuestion) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 300;
    option (service_client.client_method_config).retry_config.max_attempts = 2;
    option (service_client.client_method_config).circuit_breaker_config.failure_rate_threshold = 0.2;
    option (service_client.client_method_config).circuit_breaker_config.minimum_request_threshold = 50;
    option (service_client.client_method_config).circuit_breaker_config.counter_sliding_window_millis = 60000;
    option (service_client.client_method_config).circuit_breaker_config.circuit_open_window_millis = 30000;
  }
  rpc CreateSurveyQuestionChoice(CreateSurveyQuestionChoiceRequest) returns (SurveyQuestionChoice) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 300;
    option (service_client.client_method_config).retry_config.max_attempts = 2;
    option (service_client.client_method_config).circuit_breaker_config.failure_rate_threshold = 0.2;
    option (service_client.client_method_config).circuit_breaker_config.minimum_request_threshold = 50;
    option (service_client.client_method_config).circuit_breaker_config.counter_sliding_window_millis = 60000;
    option (service_client.client_method_config).circuit_breaker_config.circuit_open_window_millis = 30000;
  }
  rpc CreateSurveyAnswer(CreateSurveyAnswerRequest) returns (google.protobuf.Empty) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 1200;
    option (service_client.client_method_config).retry_config.max_attempts = 2;
    option (service_client.client_method_config).circuit_breaker_config.failure_rate_threshold = 0.2;
    option (service_client.client_method_config).circuit_breaker_config.minimum_request_threshold = 50;
    option (service_client.client_method_config).circuit_breaker_config.counter_sliding_window_millis = 60000;
    option (service_client.client_method_config).circuit_breaker_config.circuit_open_window_millis = 30000;
  }
  rpc GetSurveysByType(GetSurveysByTypeRequest) returns (stream Survey) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 300;
    option (service_client.client_method_config).retry_config.max_attempts = 2;
    option (service_client.client_method_config).circuit_breaker_config.failure_rate_threshold = 0.2;
    option (service_client.client_method_config).circuit_breaker_config.minimum_request_threshold = 50;
    option (service_client.client_method_config).circuit_breaker_config.counter_sliding_window_millis = 60000;
    option (service_client.client_method_config).circuit_breaker_config.circuit_open_window_millis = 30000;
  }
}

enum SurveyType {
  SURVEY_TYPE_UNSPECIFIED = 0; // Required as per proto3 rules
  MERCHANT_ADDRESS_FEEDBACK = 1;
  CUSTOMER_ADDRESS_FEEDBACK = 2;
}

message CreateSurveyRequest {
  google.protobuf.StringValue title = 1;
  SurveyType survey_type = 2;
}

message Survey {
  google.protobuf.StringValue id = 1;
  google.protobuf.StringValue title = 2;
  SurveyType survey_type = 3;
  repeated SurveyQuestion question = 4;
}

message CreateSurveyQuestionRequest {
  google.protobuf.StringValue display_text = 1;
  google.protobuf.StringValue survey_id = 2;
}

message SurveyQuestion {
  google.protobuf.StringValue id = 1;
  google.protobuf.StringValue display_text = 2;
  google.protobuf.StringValue survey_id = 3;
  repeated SurveyQuestionChoice choice = 4;
}

enum QuestionChoiceInputType {
  INPUT_TYPE_UNSPECIFIED = 0; // Required as per proto3 rules
  CHECKBOX = 1;
  TEXT = 2;
}

message CreateSurveyQuestionChoiceRequest {
  google.protobuf.StringValue display_text = 1;
  google.protobuf.StringValue question_id = 2;
  QuestionChoiceInputType input_type = 3;
}

message SurveyQuestionChoice {
  google.protobuf.StringValue id = 1;
  google.protobuf.StringValue display_text = 2;
  QuestionChoiceInputType input_type = 3;
  google.protobuf.StringValue question_id = 4;
}

message CreateSurveyAnswerRequest {
  google.protobuf.StringValue survey_id = 1;
  google.protobuf.StringValue delivery_id = 2;
  google.protobuf.DoubleValue lat = 3;
  google.protobuf.DoubleValue lng = 4;
  repeated QuestionResponse response = 5;
}

message QuestionResponse {
  google.protobuf.StringValue question_id = 1;
  google.protobuf.StringValue question_choice_id = 2;
  google.protobuf.StringValue answer = 3;
}

message GetSurveysByTypeRequest {
  SurveyType survey_type = 1;
}
