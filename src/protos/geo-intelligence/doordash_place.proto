syntax = "proto3";

import "common/service_client_config.proto";
import "geo-intelligence/audit_detail.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option go_package = "github.com/doordash/services-protobuf/generated/geo_intelligence";
option java_generic_services = true;
option java_multiple_files = true;
option java_outer_classname = "GeoIntelligenceProto";
option java_package = "geo.intelligence.doordash_place.proto";

service DoorDashPlaceService {
  option (service_client.client_config).service_name = "geo-intelligence";
  option (service_client.client_config).service_app = "web";

  rpc CreatePlace(CreatePlaceRequest) returns (Place) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 500;
    option (service_client.client_method_config).retry_config.max_attempts = 2;
    option (service_client.client_method_config).circuit_breaker_config.failure_rate_threshold = 0.2;
    option (service_client.client_method_config).circuit_breaker_config.minimum_request_threshold = 50;
    option (service_client.client_method_config).circuit_breaker_config.counter_sliding_window_millis = 60000;
    option (service_client.client_method_config).circuit_breaker_config.circuit_open_window_millis = 30000;
  }
  rpc UpdatePlace(UpdatePlaceRequest) returns (Place) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 500;
    option (service_client.client_method_config).retry_config.max_attempts = 2;
    option (service_client.client_method_config).circuit_breaker_config.failure_rate_threshold = 0.2;
    option (service_client.client_method_config).circuit_breaker_config.minimum_request_threshold = 50;
    option (service_client.client_method_config).circuit_breaker_config.counter_sliding_window_millis = 60000;
    option (service_client.client_method_config).circuit_breaker_config.circuit_open_window_millis = 30000;
  }
  rpc DeletePlace(DeletePlaceRequest) returns (google.protobuf.Empty) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 500;
    option (service_client.client_method_config).retry_config.max_attempts = 2;
    option (service_client.client_method_config).circuit_breaker_config.failure_rate_threshold = 0.2;
    option (service_client.client_method_config).circuit_breaker_config.minimum_request_threshold = 50;
    option (service_client.client_method_config).circuit_breaker_config.counter_sliding_window_millis = 60000;
    option (service_client.client_method_config).circuit_breaker_config.circuit_open_window_millis = 30000;
  }
  rpc GetPlaceById(PlaceByIdRequest) returns (Place) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 200;
    option (service_client.client_method_config).retry_config.max_attempts = 2;
    option (service_client.client_method_config).circuit_breaker_config.failure_rate_threshold = 0.2;
    option (service_client.client_method_config).circuit_breaker_config.minimum_request_threshold = 50;
    option (service_client.client_method_config).circuit_breaker_config.counter_sliding_window_millis = 60000;
    option (service_client.client_method_config).circuit_breaker_config.circuit_open_window_millis = 30000;
    // do not circuit break for NOT_FOUND
    option (service_client.client_method_config).circuit_breaker_config.do_ignore_grpc_code = 5;
  }
  rpc GetPlacesIntersectingPoint(PlacesIntersectingPointRequest) returns (Places) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 200;
    option (service_client.client_method_config).retry_config.max_attempts = 2;
    option (service_client.client_method_config).circuit_breaker_config.failure_rate_threshold = 0.2;
    option (service_client.client_method_config).circuit_breaker_config.minimum_request_threshold = 50;
    option (service_client.client_method_config).circuit_breaker_config.counter_sliding_window_millis = 60000;
    option (service_client.client_method_config).circuit_breaker_config.circuit_open_window_millis = 30000;
  }
  rpc GetPlacesIntersectingGeometry(PlacesIntersectingGeometryRequest) returns (Places) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 200;
    option (service_client.client_method_config).retry_config.max_attempts = 2;
    option (service_client.client_method_config).circuit_breaker_config.failure_rate_threshold = 0.2;
    option (service_client.client_method_config).circuit_breaker_config.minimum_request_threshold = 50;
    option (service_client.client_method_config).circuit_breaker_config.counter_sliding_window_millis = 60000;
    option (service_client.client_method_config).circuit_breaker_config.circuit_open_window_millis = 30000;
  }
  rpc GetPlacesWithinDistanceOfPoint(PlacesWithinDistanceOfPointRequest) returns (Places) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 200;
    option (service_client.client_method_config).retry_config.max_attempts = 2;
    option (service_client.client_method_config).circuit_breaker_config.failure_rate_threshold = 0.2;
    option (service_client.client_method_config).circuit_breaker_config.minimum_request_threshold = 50;
    option (service_client.client_method_config).circuit_breaker_config.counter_sliding_window_millis = 60000;
    option (service_client.client_method_config).circuit_breaker_config.circuit_open_window_millis = 30000;
  }
}

message Place {
  google.protobuf.StringValue id = 1; // uuid
  google.protobuf.StringValue geometry = 2; // GeoJSON format: https://geojson.org/
  PlaceType place_type = 3;
  google.protobuf.BoolValue is_access_restricted = 4;
  google.protobuf.Timestamp created_at = 5;
  google.protobuf.Timestamp updated_at = 6;
}

message PlaceType {
  oneof properties {
    ApartmentCommunity apartment_community = 1;
    Building building = 2;
    Stadium stadium = 3;
    RobotHub robot_hub = 4;
    WeatherEvent weather_event = 5;
    Mall mall = 6;
    BusinessConfig business_config = 7;
    ServiceDisruption service_disruption = 8;
    QualityAction quality_action = 9;
  }
}

message Places {
  repeated Place place = 1;
}

message CreatePlaceRequest {
  google.protobuf.StringValue geometry = 1; // GeoJSON format
  PlaceType place_type = 2;
  AuditDetail audit_detail = 3;
}

message UpdatePlaceRequest {
  google.protobuf.StringValue id = 1;
  google.protobuf.StringValue geometry = 2; // GeoJSON format
  PlaceType place_type = 3;
  google.protobuf.FieldMask update_mask = 4;
  AuditDetail audit_detail = 5;
}

message DeletePlaceRequest {
  google.protobuf.StringValue id = 1;
  AuditDetail audit_detail = 2;
}

message PlaceByIdRequest {
  google.protobuf.StringValue id = 1;
}

message PlacesIntersectingPointRequest {
  google.protobuf.DoubleValue lat = 1;
  google.protobuf.DoubleValue lng = 2;
  repeated PlaceType place_type = 3; // optional, used to filter intersecting places; defaults to returning all places
}

message PlacesIntersectingGeometryRequest {
  google.protobuf.StringValue geometry = 1; // GeoJSON format
  repeated PlaceType place_type = 3; // optional, used to filter intersecting places; defaults to returning all places
}

message PlacesWithinDistanceOfPointRequest {
  google.protobuf.DoubleValue lat = 1;
  google.protobuf.DoubleValue lng = 2;
  google.protobuf.DoubleValue distance_meters = 3;
  repeated PlaceType place_type = 4; // optional, used to filter nearby places; defaults to returning all places
}

message ApartmentCommunity {
  google.protobuf.StringValue name = 1;
}

// Generic building, such as in an apartment community, university campus, etc.
message Building {
  google.protobuf.StringValue name = 1;
}

// A place used for sports, concerts or other events designed to allow spectators to stand or sit and view the event
message Stadium {
  google.protobuf.StringValue name = 1;
}

// A place which associates regions to locations (hubs) used for hub-to-hub transportation of aggregated goods.
message RobotHub {
  google.protobuf.StringValue name = 1;
  RobotHubType robot_hub_type = 2;
}

enum RobotHubType {
  ROBOT_HUB_TYPE_UNSPECIFIED = 0;
  MX_HUB = 1; // Aggregates goods delivered from MX, pending transport to CX_HUB.
  CX_HUB = 2; // Receives goods from MX_HUB, pending delivery to CX.
}

// A place used to draw evolving weather events that would affect intersecting geometries such as Starting Points and Districts
message WeatherEvent {
  google.protobuf.StringValue name = 1;
  google.protobuf.StringValue notes = 2;
}

// A place used to represent a quality action taken by an operator
message QualityAction {
  google.protobuf.StringValue name = 1;
  reserved 2;
  reserved 'reason';
  google.protobuf.Timestamp start_time = 3;
  google.protobuf.Timestamp end_time = 4;
  google.protobuf.Int32Value reason_code = 5;
  QualityActionType quality_action_type = 6;
  google.protobuf.StringValue reason_text = 7;
  reserved 8;
  reserved 'quality_action_configuration';
  QualityActionConfiguration configuration = 9;
}

message CancellationsCriteria {
  google.protobuf.Int32Value min_intraday_cancels = 1;
  google.protobuf.DoubleValue min_intraday_cancellation_threshold = 2;
  reserved 3;
  reserved 'require_recent_cancel';
  google.protobuf.Int32Value require_recent_cancel_in_last_x_min = 4;
}

enum QualityActionType {
  QUALITY_ACTION_TYPE_UNSPECIFIED = 0;
  QUALITY_ACTION_TYPE_CANCELLATIONS = 1;
  QUALITY_ACTION_TYPE_LATENESS = 2;
}

message QualityActionConfiguration {
  oneof properties {
    CancellationsCriteria cancellations_criteria = 1;

    // TODO: Add more quality action configurations here
  }
}

// A place used to represent an area where Doordash services have been disrupted
message ServiceDisruption {
  // Required. Name for the disruption
  google.protobuf.StringValue name = 1;
  // Optional freeform text. Any extra information operators wish to add to describe the disruption for internal users
  google.protobuf.StringValue notes = 2;
  // Required. When the disruption is scheduled to start
  google.protobuf.Timestamp start_time = 3;
  // Required. When the disruption is scheduled to end
  google.protobuf.Timestamp end_time = 4;
  // Defaults to false. If true, pickup orders will still be enabled. If false, no orders are allowed
  bool enable_pickup_only = 5;
  // Required. The reason for disrupting the area. This reason will be shared with customers in external comms
  ServiceDisruptionReason reason = 6;
  // Defaults to false. If true, no communications are sent to dashers or merchants about the disruption.
  // Default behavior is to send comms on both disruption start and end
  bool skip_comms = 7;
  // Defaults to false. If false, waits until groups groups are sent
  // only then individual comms are sent
  bool group_comms_sent = 8;
}

enum ServiceDisruptionReason {
  // Undefined value. Should never be used
  SERVICE_DISRUPTION_REASON_UNDEFINED = 0;
  // Severe weather, such as a hurricane or blizzard
  SERVICE_DISRUPTION_REASON_WEATHER = 1;
  // Protests blocking roads
  SERVICE_DISRUPTION_REASON_PROTEST = 2;
  // Legal restrictions preventing dashers from being on the road
  SERVICE_DISRUPTION_REASON_CURFEW = 3;
  // Emergency situation
  SERVICE_DISRUPTION_REASON_EMERGENCY = 4;
  // Any other scenario requiring us to halt operations
  SERVICE_DISRUPTION_REASON_OTHER = 5;
}

// A place used to represent an open-loop alternative to stadiums
message Mall {
  google.protobuf.StringValue name = 1;
}

// Business configuration zones are arbitrary areas drawn by operators on a map with a given set of
// configurations. They do not represent any real world (ground truth) places such as hotels, schools etc
message BusinessConfig {
  google.protobuf.StringValue name = 1;
  repeated Configuration configurations = 2;
}

// Operator defined configuration for a place type
message Configuration {
  oneof properties {
    RestrictionConfig restriction_config = 1;
    HyperlocalConfig hyperlocal_config = 2;
  }
}

// This message represents restrictions for category and fulfillment type (i.e. Marketplace/Drive, deliveries/pickup)
message RestrictionConfig {
  RestrictionLevel restriction_level = 1;
  repeated RestrictionCategory restriction_category = 2; // list of restricted item types
  // Start time is optional. If unset, restriction is active immediately.
  google.protobuf.Timestamp start_time = 3;
  // End time is optional. If unset, restriction never ends.
  google.protobuf.Timestamp end_time = 4;
}

// category of item that is restricted
enum RestrictionCategory {
  RESTRICTION_CATEGORY_UNSPECIFIED = 0;
  ALL_CATEGORIES = 1;
  ALCOHOL = 2;
}

enum RestrictionLevel {
  // Default value. This value is unused.
  RESTRICTION_LEVEL_UNSPECIFIED = 0;

  // RESTRICTION_LEVEL_ALL_DELIVERIES_BLOCKED currently only blocks Marketplace
  // MID TODO: deprecate this field and change Places that currently have RESTRICTION_LEVEL_ALL_DELIVERIES_BLOCKED switch to using RESTRICTION_LEVEL_MARKETPLACE_DELIVERIES_BLOCKED instead
  RESTRICTION_LEVEL_ALL_DELIVERIES_BLOCKED = 1;

  // marketplace deliveries blocked
  RESTRICTION_LEVEL_MARKETPLACE_DELIVERIES_BLOCKED = 2;

  // pickup deliveries blocked
  RESTRICTION_LEVEL_PICKUP_ORDERS_BLOCKED = 3;

  // No Drive deliveries allowed
  RESTRICTION_LEVEL_DRIVE_DELIVERIES_BLOCKED = 4;

  // No dashers allowed to checkin
  RESTRICTION_LEVEL_DASHER_CHECKIN_BLOCKED = 5;

  // No deliveries assigned/fulfilled
  RESTRICTION_LEVEL_DELIVERY_FULFILLMENT_BLOCKED = 6;
}

// Represents the information around a hyperlocal place
// Please contact Pickup & Hyperlocal team (#ask-pickup) before making changes to HyperlocalConfig
message HyperlocalConfig {
  reserved 8;
  reserved "instruction_display_sections";

  // Deprecated.
  HyperlocalLoopType hyperlocal_loop_type = 1;
  // Indicate the "type" of the place that this Hyperlocal config zone represents.
  HyperlocalExperienceType hyperlocal_experience_type = 2;
  // Will deprecate google_place_id field once permanent_id is ready for use
  google.protobuf.StringValue google_place_id = 3 [deprecated = true];
  // Add the hyperlocal place to Cx address book by this address_id
  google.protobuf.StringValue address_id = 4;
  // Address short names are used for string matching - resolve an address to a hyperlocal place
  repeated google.protobuf.StringValue address_shortnames = 5;
  // Available drop off location options at this hyperlocal place
  repeated HyperlocalDropoffLocationType available_dropoff_location_options = 6;
  // To disable this hyperlocal place
  // It's by default active
  google.protobuf.BoolValue is_disabled = 7;
  // Hyperlocal config zone (place)-specific or drop-off location-specific delivery rules.
  repeated DeliveryRule delivery_rules = 9;
  // Add the hyperlocal place to Cx address book by this source_place_id
  // Meant to replace google_place_id
  google.protobuf.StringValue source_place_id = 10;
}

// The delivery rule of a given Hyperlocal business config zone or of a specific drop-off location within the zone.
// For a better visual, take a look at https://doordash.slack.com/archives/C05EWUR7Y7R/p1690928501814639.
message DeliveryRule {
  // The label of the delivery rule. This should always be displayed whenever the delivery rule applies.
  google.protobuf.StringValue label = 1;

  // The description of the delivery rule. Can be optionally displayed.
  google.protobuf.StringValue description = 2;

  // When specified, the drop-off location that this delivery rule applies to. When not specified, this rule applies to
  // all drop-off location of this Hyperlocal business config zone.
  HyperlocalDropoffLocationType applicable_location = 3;

  // An optional list of image URLs to the photos in CDN.
  repeated google.protobuf.StringValue image_urls = 4;

  // Icon used for this Delivery Rule
  DeliveryRuleIcon icon = 5;
}

enum HyperlocalLoopType {
  LOOP_TYPE_UNSPECIFIED = 0;
  // Open loop ones such as malls and hotels
  OPEN_LOOP = 1;
  // Closed loop ones such as stadiums and arenas
  CLOSED_LOOP = 2;
}

// these are key focus areas / place segments hyperlocal team is trying to capture TAM
// https://docs.google.com/document/d/15FSIkMb_4I_p33NSE5GG47XBkWEfFDUqDvlWqxUpF0Y/edit#heading=h.5gbjesla8tbb
enum HyperlocalExperienceType {
  HYPERLOCAL_EXPERIENCE_TYPE_UNSPECIFIED = 0;
  HYPERLOCAL_EXPERIENCE_TYPE_HOTEL = 1;
  HYPERLOCAL_EXPERIENCE_TYPE_COLLEGE = 2;
  HYPERLOCAL_EXPERIENCE_TYPE_EVENT = 3;
  HYPERLOCAL_EXPERIENCE_TYPE_HOSPITAL = 4;
}

// Specifying drop-off location type as enums may be too restrictive and prevents future extension. This will be
// replaced by the drop-off option rewrite implemented by the Address team in 2023Q4.
enum HyperlocalDropoffLocationType {
  HYPERLOCAL_DROPOFF_LOCATION_TYPE_UNSPECIFIED = 0;
  HYPERLOCAL_DROPOFF_LOCATION_TYPE_ROOM = 1;
  HYPERLOCAL_DROPOFF_LOCATION_TYPE_LOBBY = 2;
}

// Describes icon related to a specific delivery rule, for display to client
enum DeliveryRuleIcon {
  DELIVERY_RULE_ICON_UNSPECIFIED = 0;
  DELIVERY_RULE_ICON_PIN = 1;
  DELIVERY_RULE_ICON_CLOCK = 2;
  DELIVERY_RULE_ICON_BAG = 3;
  DELIVERY_RULE_ICON_RESTRICTION = 4;
  DELIVERY_RULE_ICON_WARNING = 5;
  DELIVERY_RULE_ICON_WALK = 6;
  DELIVERY_RULE_ICON_INFO = 7;
}
