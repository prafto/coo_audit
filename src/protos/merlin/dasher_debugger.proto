syntax = "proto3";

package merlin.dasher_debugger.v1;

import "common/common.proto";
import "common/date.proto";
import "common/service_client_config.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "merlin/alibi.proto";
import "merlin/merlin_common.proto";

option go_package = "merlin";
option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.merlin.dasher_debugger.v1";

/*
   Service to debug dasher
*/
service DasherDebuggerService {
  // Gets all shifts for a dasher in specified time range
  rpc GetAllShifts(GetAllShiftsRequest) returns (GetAllShiftsResponse);

  // Gets dasher's preference history in specified time range
  rpc GetDasherPreferenceByShifts(GetDasherPreferenceByShiftsRequest) returns (GetDasherPreferenceByShiftsResponse);

  // Gets Shifts and their assignment summary
  rpc GetShiftsAssignmentSummary(GetShiftsAssignmentSummaryRequest) returns (GetShiftsAssignmentSummaryResponse);

  // Gets Shifts and their surroundings
  rpc GetShiftsEnvironment(GetShiftsEnvironmentRequest) returns (GetShiftsEnvironmentResponse);

  // Gets Filtered Reasons
  rpc GetFilteredReasonsSummary(GetFilteredReasonsSummaryRequest) returns (GetFilteredReasonsSummaryResponse);

  // Gets Blocked List for Dasher
  rpc GetBlockedListForDasher(GetBlockedListForDasherRequest) returns (GetBlockedListForDasherResponse);

  // Get my Dasher lookups
  rpc GetMyDasherLookups(GetMyDasherLookupsRequest) returns (GetMyDasherLookupsResponse);
}

// shift selector
message ShiftSelector {
  // dasher id
  int64 dasher_id = 1;
  // Date
  date.Date date = 2;
  // start time range
  google.protobuf.Timestamp start_time = 3;
  // end time range
  google.protobuf.Timestamp end_time = 4;
}

// shift info
message ShiftInfo {
  // shift id
  int64 shift_id = 1;
  // dasher id
  int64 dasher_id = 2;
  // check in time
  google.protobuf.Timestamp check_in_time = 3;
  // check out time
  google.protobuf.Timestamp check_out_time = 4;
  // num deliveries
  google.protobuf.Int32Value num_deliveries = 5;
  // sp id
  google.protobuf.Int32Value sp_id = 6;
  // sp name
  google.protobuf.StringValue sp_name = 7;
}

// look up shift infos for this dasher or shift
message GetAllShiftsRequest {
  // union
  oneof selector {
    // shift ids
    Shifts shifts = 1;
    // shift selector
    ShiftSelector shift_selector = 2;
  }
}

// shift lookup response
message GetAllShiftsResponse {
  // list of shifts
  repeated ShiftInfo shifts = 1;
  // response status
  merlin.common.v1.ResponseStatus status = 2;
}

// delivery filter reason for a shift
message DeliveryFilterReasonSummary {
  // shift
  ShiftInfo shift = 1;
  // reason
  google.protobuf.StringValue reason = 2;
  // num deliveries
  google.protobuf.Int64Value num_deliveries = 3;
}

// shift ids
message Shifts {
  // shift ids
  repeated int64 shift_ids = 1;
}

// get delivery filtered reason summary request
message GetFilteredReasonsSummaryRequest {
  // union
  oneof selector {
    // shift ids
    Shifts shifts = 1;
    // shift selector
    ShiftSelector shift_selector = 2;
  }
}

// get delivery filtered reason summary response
message GetFilteredReasonsSummaryResponse {
  // list of delivery filter reason summary
  repeated DeliveryFilterReasonSummary delivery_filter_reason_summary = 1;
  // response status
  merlin.common.v1.ResponseStatus status = 2;
}

// shift preference
message ShiftPreference {
  // shift id
  ShiftInfo shift = 1;
  // vehicle type
  google.protobuf.StringValue vehicle_type = 2;
  // vehicle type id
  google.protobuf.Int64Value vehicle_type_id = 3;
  // order type preference json
  google.protobuf.StringValue order_type_preference = 4;
  // soft skills
  google.protobuf.StringValue soft_skills = 5;
}

// dasher preference request
message GetDasherPreferenceByShiftsRequest {
  // union
  oneof selector {
    // shift ids
    Shifts shifts = 1;
    // shift selector
    ShiftSelector shift_selector = 2;
  }
}

// dasher preference response
message GetDasherPreferenceByShiftsResponse {
  // list of shift preference
  repeated ShiftPreference shift_preferences = 1;
  // response status
  merlin.common.v1.ResponseStatus status = 2;
}

// shift and its surrounding, such as avg flf etc
message ShiftEnvironment {
  // shift id
  ShiftInfo shift = 1;
  // avg flf
  google.protobuf.DoubleValue avg_flf = 2;
}

// shift environment request
message GetShiftsEnvironmentRequest {
  // union
  oneof selector {
    // shift ids
    Shifts shifts = 1;
    // shift selector
    ShiftSelector shift_selector = 2;
  }
}

// shift environment response
message GetShiftsEnvironmentResponse {
  // list of shift environment
  repeated ShiftEnvironment shift_environments = 1;
  // response status
  merlin.common.v1.ResponseStatus status = 2;
}

// Dasher block info
message DasherBlockedInfo {
  // dasher id
  int64 dasher_id = 1;
  // entity id
  int64 entity_id = 2;
  // entity type
  string entity_type = 3;
  // created at
  google.protobuf.Timestamp created_at = 4;
}

// Request to get blocked list for dasher
message GetBlockedListForDasherRequest {
  // dasher id or
  google.protobuf.Int64Value dasher_id = 1;
  // shift id
  google.protobuf.Int64Value shift_id = 2;
}

// Response with blocked list for dasher
message GetBlockedListForDasherResponse {
  // list of shift environment
  repeated DasherBlockedInfo dasher_blocked_infos = 1;
  // response status
  merlin.common.v1.ResponseStatus status = 2;
}

// shift assignment summary request
message GetShiftsAssignmentSummaryRequest {
  // union
  oneof selector {
    // shift ids
    Shifts shifts = 1;
    // shift selector
    ShiftSelector shift_selector = 2;
  }
}

// shift assignment summary
message ShiftAssignmentSummary {
  // shift id
  ShiftInfo shift = 1;
  // num considered for assignment
  google.protobuf.Int32Value num_considered_for_assignment = 2;
  // flf
  google.protobuf.DoubleValue flf = 3;
}

// shift assignment summary response
message GetShiftsAssignmentSummaryResponse {
  // list of shift assignment summary
  repeated ShiftAssignmentSummary shift_assignment_summaries = 1;
  // response status
  merlin.common.v1.ResponseStatus status = 2;
}

// GetMyDasherLookupsRequest
message GetMyDasherLookupsRequest {
  // requester
  string requester = 1;
  // page number
  google.protobuf.StringValue cursor = 2;
  // page size
  google.protobuf.Int32Value page_size = 3;
}

// GetMyDasherLookupsResponse
message GetMyDasherLookupsResponse {
  // delivery lookups
  repeated DasherLookup dasher_lookups = 1;
}

// DeliveryLookup
message DasherLookup {
  // dasher id or shift id
  oneof selector {
    // dasherid and date
    ShiftSelector shift_selector = 1;
    // shift id
    int64 shift_id = 2;
  }
  // requested at
  google.protobuf.Timestamp last_requested_at = 3;
  // warmup status
  merlin.common.v1.WarmupStatusCode warmup_status_code = 4;
}
