syntax = "proto3";

package assets_service.v1;

import "google/protobuf/timestamp.proto";

option go_package = "github.com/doordash/services-protobuf/generated/assets_service";
option java_multiple_files = true;
option java_package = "com.doordash.rpc.assetsservice";

// string filter clause
message StringFilterClause {
  // Valid Operators: ">", "<", "<=", ">=", "=", "!=", "is not null", "is null", "like", "ilike"
  string operator = 1;
  // String value
  string value = 2;
}

// int32 filter clause
message Int32FilterClause {
  // Valid Operators: ">", "<", "<=", ">=", "=", "!=", "is not null", "is null"
  string operator = 1;
  // filter value
  int32 value = 2;
}

// Boolean filter clause
message BoolFilterClause {
  // Valid Operators: "=", "!=", "is not null", "is null"
  string operator = 1;
  // filter value
  bool value = 2;
}

// timestamp filter clause
message TimestampFilterClause {
  // Valid Operators: ">", "<", "<=", ">=", "=", "!=", "is not null", "is null"
  string operator = 1;
  // filter value
  google.protobuf.Timestamp value = 2;
}

// list string filter clause
message ListStringFilterClause {
  // Valid Operators: "is not null", "is null", "in", "not in"
  // Valid for array type: "<@", "@>", "&&", "not &&", "any", "all", "not any"
  string operator = 1;
  // filter value
  repeated string value = 2;
}

// list int32 filter clause
message ListInt32FilterClause {
  // Valid Operators: "is not null", "is null", "in", "not in"
  // Valid for array type: "<@", "@>", "&&", "not &&", "any", "all", "not any"
  string operator = 1;
  // filter value
  repeated int32 value = 2;
}

// map string -> string filter clause
message MapFilterClause {
  // Valid Operators: "contains", "not contains", "is not null", "is null"
  string operator = 1;

  // Map of key value pairs
  map<string, string> key_values = 2;
}
