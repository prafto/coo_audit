syntax = "proto3";

package upss.v1;

import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "upss/attribute.proto";
import "upss/segment.proto";

option go_package = "github.com/doordash/services-protobuf/generated/upss/api/v1";
option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.upss.rpc.api";

// Service for serving and managing attribute metadata and segments in UPSS
service MetadataService {
  // Fetch attribute metadata by attribute names
  rpc GetAttributeMetadataByName(GetAttributeMetadataByNameRequest) returns (GetAttributeMetadataByNameResponse);

  // Fetch metadata for all attributes belonging to a specific entity
  rpc GetAllAttributesMetadata(GetAllAttributesMetadataRequest) returns (GetAllAttributesMetadataResponse);

  // Create a new attribute metadata entry
  rpc CreateAttributeMetadata(CreateAttributeMetadataRequest) returns (CreateAttributeMetadataResponse);

  // Update an existing attribute metadata entry (only updates mutable fields)
  rpc UpdateAttributeMetadata(UpdateAttributeMetadataRequest) returns (UpdateAttributeMetadataResponse);

  // Create a new segment
  rpc CreateSegment(CreateSegmentRequest) returns (CreateSegmentResponse);

  // Update an existing segment
  rpc UpdateSegment(UpdateSegmentRequest) returns (UpdateSegmentResponse);

  // Delete a segment by ID
  rpc DeleteSegment(DeleteSegmentRequest) returns (DeleteSegmentResponse);

  // Retrieve a segment by ID
  rpc GetSegment(GetSegmentRequest) returns (GetSegmentResponse);

  // Retrieve child segments based on a base segment
  rpc GetByBaseSegment(GetByBaseSegmentRequest) returns (GetByBaseSegmentResponse);

  // Search for segments based on different criteria
  rpc SearchSegments(SearchSegmentsRequest) returns (SearchSegmentsResponse);

  // Mark a segment as a favorite for a user
  rpc FavoriteSegment(FavoriteSegmentRequest) returns (FavoriteSegmentResponse);

  // Remove a segment from a user's favorite list
  rpc RemoveFavoriteSegment(RemoveFavoriteSegmentRequest) returns (RemoveFavoriteSegmentResponse);

  // Retrieve all favorited segments for a user
  rpc GetFavoritedSegments(GetFavoritedSegmentsRequest) returns (GetFavoritedSegmentsResponse);
}

// Request message to fetch attribute metadata by name
message GetAttributeMetadataByNameRequest {
  // List of attribute names to fetch metadata for
  repeated google.protobuf.StringValue attribute_names = 1;
  // Primary entity type of the attribute
  EntityType attribute_entity_type = 2;
  // Secondary entity type of the attribute (if applicable)
  EntityType attribute_secondary_entity_type = 3;
}

// Response message containing the retrieved attribute metadata
message GetAttributeMetadataByNameResponse {
  // List of attribute metadata
  repeated AttributeMetadata attribute_metadata = 1;
}

// Request to fetch metadata for all attributes of a given entity
message GetAllAttributesMetadataRequest {
  // Entity type whose attributes are being requested
  EntityType attribute_entity_type = 1;
  // Secondary entity type (if applicable)
  EntityType attribute_secondary_entity_type = 2;
}

// Response containing metadata for all attributes of the specified entity
message GetAllAttributesMetadataResponse {
  // List of attribute metadata
  repeated AttributeMetadata attribute_metadata = 1;
}

// Request to create a new attribute metadata entry
message CreateAttributeMetadataRequest {
  // Attribute metadata to be created
  AttributeMetadata attribute_metadata = 1;
}

// Response for successful attribute metadata creation
message CreateAttributeMetadataResponse {
  // Created attribute metadata record
  AttributeMetadata attribute_metadata = 1;
}

// Request to update an existing attribute metadata entry
message UpdateAttributeMetadataRequest {
  // Attribute metadata to be updated (immutable fields will not be modified)
  AttributeMetadata attribute_metadata = 1;
}

// Response for successful attribute metadata update
message UpdateAttributeMetadataResponse {
  // Updated attribute metadata record
  AttributeMetadata attribute_metadata = 1;
}

// Structure representing UPSS attribute metadata
message AttributeMetadata {
  // Unique name of the attribute
  google.protobuf.StringValue attribute_name = 1;
  // Entity type associated with the attribute
  EntityType attribute_entity_type = 2;
  // Domain to which the attribute belongs
  google.protobuf.StringValue attribute_domain = 3;
  // Display name of the attribute
  google.protobuf.StringValue attribute_display_name = 4;
  // Description of the attribute
  google.protobuf.StringValue description = 5;
  // Data type of the attribute
  AttributeDataType attribute_data_type = 6;
  // Schema version number
  google.protobuf.Int64Value version = 7;
  // Timestamp of last update
  google.protobuf.Timestamp last_updated_time = 8;
  // User who last updated the metadata
  google.protobuf.StringValue last_updated_by = 9;
  // ML model associated with the attribute
  google.protobuf.StringValue ml_model_identifier = 10;
  // Export settings
  google.protobuf.BoolValue is_enable_export_to_aiq = 11;
  // If this attribute is available in Audience CRDB
  google.protobuf.BoolValue is_enable_export_to_crdb = 12;
  // If this attribute is available in Braze
  google.protobuf.BoolValue is_enable_export_to_braze = 13;
  // If this attribute is available in Kafka
  google.protobuf.BoolValue is_enable_export_to_kafka = 14;
  // Attribute group name
  google.protobuf.StringValue attribute_group_name = 15;
  // Source code in Cx360
  google.protobuf.StringValue attribute_group_source_code = 16;
  // Cx360 group owner
  google.protobuf.StringValue attribute_group_owner = 17;
  // Engineering and business ownership
  google.protobuf.StringValue engineer_owner = 18;
  // Business owner for attribute
  google.protobuf.StringValue business_owner = 19;
  // Service acting as the source of truth for this attribute
  google.protobuf.StringValue source_of_truth_service = 20;
  // Frequency of attribute refresh (in minutes)
  google.protobuf.Int64Value refresh_cadence_in_minutes = 21;
  // Secondary entity type (if applicable)
  EntityType attribute_secondary_entity_type = 22;
  // Whether multiple versions of this attribute exist
  google.protobuf.BoolValue has_multiple_versions = 23;
}

// Request message for creating a new segment
message CreateSegmentRequest {
  // Segment details to be created
  Segment segment = 1;
}

// Response message for successful segment creation
message CreateSegmentResponse {
  // ID of the newly created segment
  google.protobuf.StringValue segment_id = 1;
}

// Request message for updating an existing segment
message UpdateSegmentRequest {
  // Updated segment details
  Segment segment = 1;
}

// Response message for successful segment update
message UpdateSegmentResponse {
  // ID of the updated segment
  google.protobuf.StringValue segment_id = 1;
}

// Request message for deleting a segment
message DeleteSegmentRequest {
  // ID of the segment to be deleted
  google.protobuf.StringValue segment_id = 1;
}

// Response message for successful segment deletion
message DeleteSegmentResponse {
  // ID of the deleted segment
  google.protobuf.StringValue segment_id = 1;
}

// Request message for retrieving a segment by ID
message GetSegmentRequest {
  // ID of the segment to retrieve
  google.protobuf.StringValue segment_id = 1;
}

// Response message containing the retrieved segment
message GetSegmentResponse {
  // Retrieved segment details
  Segment segment = 1;
}

// Request message for retrieving child segments based on a base segment
message GetByBaseSegmentRequest {
  // ID of the base segment
  google.protobuf.StringValue base_segment_id = 1;
}

// Response message containing base and child segments
message GetByBaseSegmentResponse {
  // Base segment details
  Segment base_segment = 1;
  // List of child segments
  repeated Segment child_segments = 2;
}

// Request message for searching segments
message SearchSegmentsRequest {
  // Number of results per page
  google.protobuf.Int32Value page_size = 1;
  // Offset for pagination
  google.protobuf.Int32Value offset = 2;

  // Criteria for searching segments
  oneof search_criteria {
    // Search by a segment ID
    google.protobuf.StringValue segment_id = 3;
    // Search by a segment creator
    google.protobuf.StringValue directly_responsible_individual = 4;
    // Search by a segment name
    google.protobuf.StringValue segment_name = 5;
    // Search by text present in the segment description
    google.protobuf.StringValue segment_description = 6;
    // Search by free text in either creator email, segment name or description
    google.protobuf.StringValue free_text = 7;
    // Search by a segment type (custom or preset)
    SegmentType segment_type = 8;
    // Search by a segment expression
    SegmentExpression segment_expression = 9;
    // Search by a segment campaign metadata
    CampaignMetadata campaign_metadata = 10;
  }

  // Whether to match the base segment of the provided segment expression
  google.protobuf.BoolValue match_base_segment = 11;
}

// Response message containing the search results
message SearchSegmentsResponse {
  // List of matching segments
  repeated Segment segments = 1;
}

// Request message for favoriting a segment
message FavoriteSegmentRequest {
  // ID of the segment to favorite
  google.protobuf.StringValue segment_id = 1;
  // ID of the user favoriting the segment
  google.protobuf.StringValue user_id = 2;
}

// Response message confirming segment favoriting
message FavoriteSegmentResponse {
  // ID of the favorited segment
  google.protobuf.StringValue segment_id = 1;
}

// Request message for removing a favorite segment
message RemoveFavoriteSegmentRequest {
  // ID of the segment to remove from favorites
  google.protobuf.StringValue segment_id = 1;
  // ID of the user removing the favorite
  google.protobuf.StringValue user_id = 2;
}

// Response message confirming removal of a favorite segment
message RemoveFavoriteSegmentResponse {
  // ID of the removed favorite segment
  google.protobuf.StringValue segment_id = 1;
}

// Request message for getting all favorited segments by a user
message GetFavoritedSegmentsRequest {
  // user who has favorited segments
  google.protobuf.StringValue user_id = 1;
}

// Response message for getting all favorited segments by a user
message GetFavoritedSegmentsResponse {
  // user favorited segments
  repeated Segment segments = 1;
}
