syntax = "proto3";

package upss.v1;

import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option go_package = "github.com/doordash/services-protobuf/generated/upss/api/v1";
option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.upss.rpc.api";

// Enum of all entities which can be represented using UPSS.
enum EntityType {
  // Entity type invalid
  ENTITY_TYPE_UNSPECIFIED = 0;
  // Entity type is unset
  ENTITY_TYPE_UNSET = 1;
  // Entity type for consumer
  ENTITY_TYPE_CONSUMER = 2;
  // Entity type for merchant store
  ENTITY_TYPE_MERCHANT = 3;
  // Entity type for dasher
  ENTITY_TYPE_DASHER = 4;
  // Reserved for item and item extra option which is not used in UPSS
  reserved 5, 6;
  // Entity type for merchant business
  ENTITY_TYPE_MERCHANT_BUSINESS = 7;
  // Entity type for bin
  ENTITY_TYPE_BIN = 8;
  // Entity type for brand
  ENTITY_TYPE_BRAND = 9;
  // Entity type for category
  ENTITY_TYPE_CATEGORY = 10;
  // Entity type for announcement
  ENTITY_TYPE_ANNOUNCEMENT = 11;
  // Entity type for storefront guest
  ENTITY_TYPE_STOREFRONT_GUEST = 12;
  // Entity type for non-dd user
  ENTITY_TYPE_NON_DD_USER = 13;
  // Entity type for merchant user
  ENTITY_TYPE_MERCHANT_USER = 14;
  // Entity type for device
  ENTITY_TYPE_DEVICE = 15;
  // Entity type for card
  ENTITY_TYPE_CARD = 16;
  // Entity type for address
  ENTITY_TYPE_ADDRESS = 17;
  // Entity type for phone
  ENTITY_TYPE_PHONE = 18;
  // Entity type for cuisine
  ENTITY_TYPE_CUISINE = 19;
  // Entity type for dish
  ENTITY_TYPE_DISH = 20;
}

// Attribute data type enum
enum AttributeDataType {
  // Attribute is unspecified
  ATTRIBUTE_DATA_TYPE_UNSPECIFIED = 0;
  // Attribute is of string type
  ATTRIBUTE_DATA_TYPE_STRING = 1;
  // Attribute is int type
  ATTRIBUTE_DATA_TYPE_INT = 2;
  // Attribute is long type
  ATTRIBUTE_DATA_TYPE_LONG = 3;
  // Attribute is float type
  ATTRIBUTE_DATA_TYPE_FLOAT = 4;
  // Attribute is double type
  ATTRIBUTE_DATA_TYPE_DOUBLE = 5;
  // Attribute is boolean type
  ATTRIBUTE_DATA_TYPE_BOOLEAN = 6;
  // Attribute type is string array
  ATTRIBUTE_DATA_TYPE_STRING_ARRAY = 7;
  // Attribute type is int array
  ATTRIBUTE_DATA_TYPE_INT_ARRAY = 8;
  // Attribute type is long array
  ATTRIBUTE_DATA_TYPE_LONG_ARRAY = 9;
  // Attribute type is float array
  ATTRIBUTE_DATA_TYPE_FLOAT_ARRAY = 10;
  // Attribute type is double array
  ATTRIBUTE_DATA_TYPE_DOUBLE_ARRAY = 11;
  // Attribute type is boolean array
  ATTRIBUTE_DATA_TYPE_BOOLEAN_ARRAY = 12;
  // Attribute is date type
  ATTRIBUTE_DATA_TYPE_DATE = 13;
  // Attribute is an engagement history
  ATTRIBUTE_DATA_TYPE_ENGAGEMENT_HISTORY = 14;
  // Attribute is an affinity vector
  ATTRIBUTE_DATA_TYPE_AFFINITY_VECTOR = 15;
  // Attribute is an ML embedding
  ATTRIBUTE_DATA_TYPE_EMBEDDING = 16;
  // Attribute is timestamp type
  ATTRIBUTE_DATA_TYPE_TIMESTAMP = 17;
}

// Attribute option for GetUserAttributesAndSegments and GetUsersAttributesAndSegments API
message AttributesOption {
  // name of the option
  string name = 1;
  // whether to include consumer attribute or not
  bool should_include_consumer_attribute = 2;
  // attribute version
  google.protobuf.Int64Value version = 3;
}

// Union of all consumer profile signals
message ConsumerAttribute {
  // attribute name
  string name = 1;
  // value of the attribute
  oneof value {
    // https://docs.google.com/document/d/1UrUbBPe36lb7hSoHxy8EAOL4IY_J-Jih0uBHw2jsRgM/edit
    // String attribute value
    string string_value = 3;
    // Boolean attribute value
    bool bool_value = 4;
    // Float attribute value
    float float_value = 5;
    // Integer attribute value
    int64 int_value = 6;
    // Double attribute value
    double double_value = 7;

    // Order/visit/save history
    EngagementHistory engagement_history_value = 8;
    // Cx's affinity to cuisines, dietary or NV categories
    AffinityVector affinity_vector_value = 9;
    // Pretrained user embeddings
    Embedding embedding_value = 10;
    // Date attribute value
    google.protobuf.Timestamp date_value = 11;
    // Array of Strings attribute value
    StringArrayAttribute string_array_value = 12;
    // Array of Booleans attribute value
    BoolArrayAttribute bool_array_value = 13;
    // Array of Floats attribute value
    FloatArrayAttribute float_array_value = 14;
    // Array of Integers attribute value
    IntArrayAttribute int_array_value = 15;
    // Array of Doubles attribute value
    DoubleArrayAttribute double_array_value = 16;
  }
  // version of the attribute
  google.protobuf.Int64Value version = 17;
}

// Wrapper struct for array of strings
message StringArrayAttribute {
  // Array of strings
  repeated string string_values = 1;
}

// Wrapper struct for array of booleans
message BoolArrayAttribute {
  // Array of booleans
  repeated bool bool_values = 1;
}

// Wrapper struct for array of floats
message FloatArrayAttribute {
  // Array of floats
  repeated float float_values = 1;
}

// Wrapper struct for array of doubles
message DoubleArrayAttribute {
  // Array of doubles
  repeated double double_values = 1;
}

// Wrapper struct for array of integers
message IntArrayAttribute {
  // Array of integers
  repeated int64 int_values = 1;
}

// Definition for individual component
message AffinityVector {
  // List of affinity values
  repeated Affinity affinities = 1;
}

// Affinity data to an entity. e.g. NV product category, food dish & cuisine
// Ideally the entity should be from a Taxonomy.
message Affinity {
  // entity id
  int64 id = 1;
  // entity name
  string name = 2;
  // entity display name
  string display_name = 3;
  // affinity to the entity. value will be [-1 , 1]
  double affinity_value = 4;
}

// Wrapper struct for pretrained user embeddings
message Embedding {
  // Embedding value
  repeated float embedding = 1;
  // the model identifier to generate the embedding, e.g. "copurchase_v1" this will be used for
  // matching Embeddings from Item/Store/Category side for any similarity computation
  string encoder_model_id = 2;
}

// Wrapper struct for engagement history
message EngagementHistory {
  // Array of engagement structs
  repeated Engagement engagements = 1;
}

// Wrapper struct for engagement
message Engagement {
  // Engagement entity
  EngagementEntity entity = 1;
  // Enum for engagement types
  enum EngagementType {
    // Engagement type is not specified
    ENGAGEMENT_TYPE_UNSPECIFIED = 0;
    // Engagement type for order
    ENGAGEMENT_TYPE_ORDER = 1;
    // Engagement type for visit
    ENGAGEMENT_TYPE_VISIT = 2;
    // Engagement type for save
    ENGAGEMENT_TYPE_SAVE = 3;
    // Engagement type for selected preference
    ENGAGEMENT_TYPE_SELECTED_PREFERENCE = 4;
    // Engagement type for "Add to Cart"
    ENGAGEMENT_TYPE_ADD_TO_CART = 5;
    // Engagement type for impression
    ENGAGEMENT_TYPE_IMPRESSION = 6;
  }
  // Engagement type
  EngagementType engagement_type = 2;
  // Timestamp where the engagement happened
  google.protobuf.Timestamp timestamp = 3;
  // ID of the event of engagement
  google.protobuf.StringValue event_id = 4;
}

// Wrapper struct for engagement entity
message EngagementEntity {
  // ID for the engagement entity
  string id = 1;
  // Engagement Entity type
  enum EngagementEntityType {
    /* Unspecified */
    ENGAGEMENT_ENTITY_TYPE_UNSPECIFIED = 0;
    /* category, example: "Salad", "Dessert" */
    ENGAGEMENT_ENTITY_TYPE_CATEGORY = 1;
    /* store */
    ENGAGEMENT_ENTITY_TYPE_STORE = 2;
    /* item */
    ENGAGEMENT_ENTITY_TYPE_ITEM = 3;
    /* dietary preference, example: "Vegetarian", "Pork" */
    ENGAGEMENT_ENTITY_TYPE_DIETARY = 4;
    /* business */
    ENGAGEMENT_ENTITY_TYPE_BUSINESS = 5;
    /* business vertical */
    ENGAGEMENT_ENTITY_TYPE_BUSINESS_VERTICAL = 6;
    /* announcement (media content post, example: video reel, image post) */
    ENGAGEMENT_ENTITY_TYPE_ANNOUNCEMENT = 7;
  }
  // Type for engagement entity
  EngagementEntityType type = 2;
}
