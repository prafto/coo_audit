syntax = "proto3";

package nexus.v1;

import "buf/validate/validate.proto";
import "google/protobuf/duration.proto";
import "nexus/dashmesh_common.proto";

option go_package = "github.com/doordash/services-protobuf/generated/nexus";

// MeshEnvoyConfig contains explicit Envoy settings for a specific deployment's ingress/egress traffic
message MeshEnvoyConfig {
  // Listeners
  repeated Listener listeners = 1 [(buf.validate.field).repeated.min_items = 1];
  // Clusters
  repeated Cluster clusters = 2 [(buf.validate.field).repeated.min_items = 1];
}

// Listener
message Listener {
  // Cluster name
  string name = 1 [(buf.validate.field).string.min_len = 1];
  // Port - must be in 17000;17001;17002;80;8080;50051
  uint32 port = 2 [(buf.validate.field).uint32 = {
    in: [
      17000,
      17001,
      17002,
      80,
      8080,
      50051
    ]
  }];
  // HTTP Config
  HTTPConfig http_config = 3;
}

// HTTP Config
message HTTPConfig {
  // Telemetry
  Telemetry telemetry = 1;
  // EnvoyConfigRoutes
  repeated EnvoyConfigRoute envoy_config_routes = 2;
}

// Telemetry
message Telemetry {
  // Tracing
  Tracing tracing = 1;
  // AccessLog
  AccessLog access_log = 2;
}

// Tracing
message Tracing {
  // sampling rate
  uint32 sampling_rate = 1 [(buf.validate.field).uint32 = {
    gte: 0,
    lte: 100
  }];
}

// AccessLog
message AccessLog {
  // sampling rate
  uint32 sampling_rate = 1 [(buf.validate.field).uint32 = {
    gte: 0,
    lte: 100
  }];
}

// EnvoyConfigRoute
message EnvoyConfigRoute {
  // The Match condition
  Match match = 1;
  // The action if the match is satisfied
  RouteAction action = 2;
}

// RouteAction
message RouteAction {
  // Cluster name
  string cluster_name = 1 [(buf.validate.field).string.min_len = 1];
  // Timeout
  google.protobuf.Duration timeout = 2 [(buf.validate.field).duration = {
    gt: {seconds: 0}
  }];
}

// Cluster
message Cluster {
  // Cluster name
  string name = 1 [(buf.validate.field).string.min_len = 1];
  // Cluster name
  string address = 2 [(buf.validate.field).string.min_len = 1];
  // Port - must be in 17000;17001;17002;80;8080;50051
  // Envoy reserved ports and common HTTP ports:
  // 17000: ingress http/1.0
  // 17001: ingress http/1.1
  // 17002: ingress http/2
  // 17020: egress http/1.0
  // 17021: egress http/1.1
  // 17022: egress http/2
  // 50051: gRPC
  // 80: HTTP1 or HTTP2
  // 8080: HTTP or HTTP2
  uint32 port = 3 [(buf.validate.field).uint32 = {
    in: [
      17000,
      17001,
      17002,
      80,
      8080,
      50051
    ]
  }];
}
