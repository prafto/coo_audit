syntax = "proto3";
// buf:lint:ignore DIRECTORY_SAME_PACKAGE
// buf:lint:ignore PACKAGE_VERSION_SUFFIX
package storefront_service;

import "google/protobuf/wrappers.proto";

option java_generic_services = true;
option java_outer_classname = "StorefrontRefundProtos";
option java_package = "com.doordash.service.storefront";

/*
 * StorefrontRefundService expose API for tablet refunds
 */
service StorefrontRefundService {
  // get all refund status for a specific storeId
  rpc FetchAllRefundStatus(FetchAllRefundStatusRequest) returns (FetchAllRefundStatusResponse);
  // get refund status by delivery uuid
  rpc GetRefundStatus(GetRefundStatusRequest) returns (GetRefundStatusResponse);
  // update order refund status
  rpc UpdateRefundStatus(UpdateRefundStatusRequest) returns (UpdateRefundStatusResponse);
  // create merchant refund
  rpc CreateMerchantRefund(CreateMerchantRefundRequest) returns (CreateMerchantRefundResponse);
}

// define three refund states
enum RefundState {
  // new request
  // buf:lint:ignore ENUM_VALUE_PREFIX
  // buf:lint:ignore ENUM_ZERO_VALUE_SUFFIX
  CREATED = 0;
  // refunded state
  // buf:lint:ignore ENUM_VALUE_PREFIX
  REFUNDED = 1;
  // declined state
  // buf:lint:ignore ENUM_VALUE_PREFIX
  DECLINED = 2;
  // no state
  // buf:lint:ignore ENUM_VALUE_PREFIX
  NOT_EXIST = 3;
}

// request to get all refund status for a specific storeId
message FetchAllRefundStatusRequest {
  //store ID
  int64 store_id = 1;
}

// request for getting refund status by delivery uuid
message GetRefundStatusRequest {
  // delivery uuid
  string delivery_uuid = 1;
}

// response to get all refund status for a specific storeId
message FetchAllRefundStatusResponse {
  // list of deliveryUuid with created state
  repeated google.protobuf.StringValue created_list = 1 [deprecated = true];
  // list of deliveryUuid with refunded state
  repeated google.protobuf.StringValue refunded_list = 2 [deprecated = true];
  // list of deliveryUuid with declined state
  repeated google.protobuf.StringValue declined_list = 3 [deprecated = true];
  // list of deliveryUuid with created state with meta data
  repeated RefundItem created_items = 4;
  // list of deliveryUuid with refunded state with meta data
  repeated RefundItem refunded_items = 5;
  // list of deliveryUuid with declined state with meta data
  repeated RefundItem declined_items = 6;
}

// refund status response for an order
message GetRefundStatusResponse {
  // order refund status
  RefundState refund_status = 1;
  // Meta data for decline reasons
  google.protobuf.StringValue meta_data = 2;
}

// define refund item
message RefundItem {
  // Delivery Uuid
  string delivery_uuid = 1;
  // Meta data for decline reasons
  google.protobuf.StringValue meta_data = 2;
}

// request object to update order refund status
message UpdateRefundStatusRequest {
  // Delivery Uuid
  string delivery_uuid = 1;
  // Updated status
  RefundState refund_status = 2;
  // Meta data for decline reasons
  google.protobuf.StringValue meta_data = 3;
}

// response object for order refund status update
message UpdateRefundStatusResponse {
  // true if update is successful otherwise false
  bool success = 1;
  // carries the failure reason
  string failure_reason = 2;
}

// order problem that the Mx is processing a refund for
message Problem {
  // amount to refund for problem
  google.protobuf.Int32Value refund_amount = 1;
  // order item id
  google.protobuf.StringValue order_item_id = 2;
  // problem name
  google.protobuf.StringValue problem_name = 3;
  // quantity
  google.protobuf.Int32Value quantity = 4;
}

// request object for create merchant refund
message CreateMerchantRefundRequest {
  // delivery uuid
  google.protobuf.StringValue delivery_uuid = 1;
  // source of order resolution, e.g. mx portal, tablet etc.
  google.protobuf.StringValue request_source = 2;
  // request type ('MISSING', 'INCORRECT')
  google.protobuf.StringValue request_type = 3;
  // list of problems
  repeated Problem problems = 4;
  // refund amount for customer fees
  google.protobuf.Int32Value customer_fees_refund_amount = 5;
  // store id
  google.protobuf.Int64Value store_id = 6;
  // user id
  google.protobuf.Int64Value created_by_id = 7;
}

// response object for create merchant refund
message CreateMerchantRefundResponse {
  // success status
  google.protobuf.BoolValue success = 1;
  // amount refunded
  google.protobuf.Int32Value refund_amount = 2;
  // amount refunded to loyalty rewards
  google.protobuf.Int32Value loyalty_refund_amount = 3;
  // amount refunded to external gift cards
  google.protobuf.Int32Value external_gift_card_refund_amount = 4;
  // currency code
  google.protobuf.StringValue currency = 5;
}
