syntax = "proto3";
package storefront_service;

import "google/protobuf/wrappers.proto";

option java_outer_classname = "StorefrontCommonProtos";
option java_package = "com.doordash.service.storefront";

/**
   A generic response for rpc calls that do not fetch data but rather request
   to mutate states. If action is successful, success should be true and no
   error_code is needed. In case of any failure, success should be false, and
   a proper error_code should be set. Error codes should look like this:
   'database_error', 'business_does_not_exist', it should concisely tell caller
   what went wrong without too many details.
*/
message ActionResponse {
  bool success = 1;
  string error_code = 2;
}

enum StorefrontBusinessIntegrationType {
  ANY_INTEGRATION_TYPE = 0;
  GFO = 1;
  LOGIN_WITH_DOORDASH = 2;
  MOBILE_APP = 3;
  API = 4;
}

enum StoreOpenStatus {
  UNAVAILABLE = 0;
  CLOSED = 1;
  OPEN = 2;
}

enum StorePickerCallToAction {
  NO_ACTION = 0;
  ORDER_HERE = 1;
  SCHEDULED_ORDER = 2;
  CLOSED_FOR_SCHEDULED_ORDERS = 3;
}

enum EntityType {
  BUSINESS = 0;
  STORE = 1;
}

enum RedirectWeblinksPreference {
  RWP_UNKNOWN = 0;
  RWP_ALWAYS = 1;
  RWP_NEVER = 2;
  RWP_AFTER_TIME_PERIOD = 3;
}

message Business {
  int64 business_id = 1;
  google.protobuf.StringValue merchant_url = 2;
  google.protobuf.StringValue support_phone_number = 3;
  google.protobuf.StringValue slug = 4;
  google.protobuf.StringValue privacy_policy_url = 5;
  RedirectWeblinksPreference redirect_weblinks_preference = 6;
  google.protobuf.StringValue signup_method = 7;
  google.protobuf.StringValue business_name = 8;
  google.protobuf.Int64Value business_group_id = 9;
  google.protobuf.StringValue gtm_id = 10;
  BusinessDynamicProperties business_dynamic_properties = 11;
}

message Theme {
  int64 theme_entity_id = 1;
  EntityType theme_entity_type = 2;
  google.protobuf.StringValue colors = 3;
  google.protobuf.StringValue fonts = 4;
  google.protobuf.StringValue dimensions = 5;
  google.protobuf.StringValue logo_image = 6;
  google.protobuf.StringValue favicon_image = 7;
}

message CustomTheme {
  string id = 1;
  int64 entity_id = 2;
  EntityType entity_type = 3;
  google.protobuf.StringValue theme_data = 4;
  google.protobuf.BoolValue is_preview = 5;
}

message BusinessDynamicProperties {
  // Opt out of fast store picking - Client to fallback to legacy store picker
  google.protobuf.BoolValue fast_store_picking_opt_out = 1;
  // mobile app settings for this mx.
  MobileAppSettings mobile_app_settings = 2;
  // Opt business out of the business group store picker
  google.protobuf.BoolValue business_group_store_picker_opt_out = 3;
}

message StoreDynamicProperties {
  // tip suggestions
  google.protobuf.StringValue tip_suggestions = 1;
}

// push notification settings for Mx
message PushNotificationSettings {
  // supported push notification provider for this Mx. default is unspecified
  PushNotificationProvider push_notification_provider = 1;
  // supported push notification id type for this Mx. default is unspecified
  PushNotificationIdType push_notification_id_type = 2;
}

// all the settings for the mobile app per mx
message MobileAppSettings {
  // determines where qr code is enabled for this Mx. default is false.
  google.protobuf.BoolValue is_qr_code_enabled = 1;
  // supported push notification provider for this Mx. default is unspecified
  PushNotificationProvider push_notification_provider = 2 [deprecated = true];
  // push notification settings for this Mx.
  PushNotificationSettings push_notification_settings = 3;
}

enum StoreOnboardingFailureReason {
  // Onboarding failed because business is not part of storefront
  BUSINESS_NOT_IN_STOREFRONT = 0;
  // Onboarding failed because we couldn't find the store
  STORE_NOT_FOUND = 1;
  // Onboarding failed because store is inactive or not partner
  INACTIVE_OR_NONPARTNER_STORE = 2;
  // Onboarding failed because couldn't fetch store address
  STORE_ADDRESS_RETRIEVAL_FAILED = 3;
  // Onboarding failed because couldn't create program id for store
  PROGRAM_ID_CREATION_FAILED = 4;
  // Onboarding failed because couldn't update store experience
  STORE_ONBOARDING_EXPERIENCE_UPDATE_FAILED = 5;
  // Onboarding failed because couldn't create contract for store
  CONTRACT_CREATION_FAILED = 6;
  // Onboarding failed because couldn't update payment method for store
  PAYMENT_METHOD_UPDATE_FAILED = 7;
  // Onboarding failed because a (storefront) DB error happened while trying to update records
  STORE_ONBOARDING_DB_FAILURE = 8;
  // Catch all for reasons not captured above
  STORE_ONBOARDING_OTHER_FAILURE = 9;
  // Onboarding failed because the store was expected to have MFS programs but none were found.
  PROGRAMS_NOT_FOUND = 10;
}

enum StoreOffboardingFailureReason {
  // Offboarding failed because couldn't update store experience
  STORE_OFFBOARDING_EXPERIENCE_UPDATE_FAILED = 0;
  // Offboarding failed because a (storefront) DB error happened while trying to update records
  STORE_OFFBOARDING_DB_FAILURE = 1;
  // Catch all for reasons not captured above
  STORE_OFFBOARDING_OTHER_FAILURE = 2;
}

message StoreOnboardingFailure {
  int64 store_id = 1;
  StoreOnboardingFailureReason reason = 2;
}

message StoreOffboardingFailure {
  int64 store_id = 1;
  StoreOffboardingFailureReason reason = 2;
}

// Used to specify domain url type for domain mapping
enum UrlType {
  // Unspecified UrlType
  URL_TYPE_UNSPECIFIED = 0;
  // Used to specify a domain of the merchant's choosing
  URL_TYPE_DOMAIN = 1;
  // Used to specify a subdomain, in the format of *.order.online
  URL_TYPE_SUBDOMAIN = 2;
}

// Used for domain mapping
message DomainInfo {
  int64 entity_id = 1;
  EntityType entity_type = 2;
  google.protobuf.StringValue url = 3;
  UrlType url_type = 4;
}

// Store status on storefront
enum StorefrontStoreStatus {
  // change nothing, no operation
  STOREFRONT_STORE_STATUS_UNSPECIFIED = 0;
  // store is open
  STOREFRONT_STORE_STATUS_OPEN = 1;
  // store is closed
  STOREFRONT_STORE_STATUS_CLOSED = 2;
  // store is inactive
  STOREFRONT_STORE_STATUS_INACTIVE = 3;
  // store is tmp deactivated
  STOREFRONT_STORE_STATUS_DEACTIVATED = 4;
  // store is paused
  STOREFRONT_STORE_STATUS_PAUSED = 5;
}

message HtmlMetaTag {
  // https://www.w3schools.com/tags/tag_meta.asp
  google.protobuf.StringValue name = 1;
  google.protobuf.StringValue content = 2;
  google.protobuf.StringValue property = 3;
  google.protobuf.StringValue http_equiv = 4;
}

message SiteSeoMetadata {
  repeated HtmlMetaTag meta_tags = 1;
  google.protobuf.StringValue title = 2;
}

enum PushNotificationProvider {
  // no push notification provider
  PROVIDER_UNSPECIFIED = 0;
  // infobip
  PROVIDER_INFOBIP = 1;
}

enum PushNotificationIdType {
  // no push notification id type
  ID_TYPE_UNSPECIFIED = 0;
  // push token
  ID_TYPE_PUSH_TOKEN = 1;
}
