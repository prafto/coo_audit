syntax = "proto3";
package storefront_service;

import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "storefront_service/common.proto";

option java_generic_services = true;
option java_outer_classname = "StorefrontSignUpProtos";
option java_package = "com.doordash.service.storefront";

service StorefrontSignUpService {
  // core
  rpc GetSignUpState(GetSignUpStateRequest) returns (GetSignUpStateResponse) {}
  rpc GetSignUpDetails(GetSignUpDetailsRequest) returns (GetSignUpDetailsResponse) {}
  rpc SubmitSignUp(SubmitSignUpRequest) returns (ActionResponse) {}
  rpc CreateOrUpdateBusiness(CreateOrUpdateBusinessRequest) returns (ActionResponse) {}
  rpc CreateOrUpdateTheme(CreateOrUpdateThemeRequest) returns (ActionResponse) {}
  rpc OnboardStores(OnboardStoresRequest) returns (OnboardStoresResponse) {}

  rpc GetActivatedBusinessDetails(GetActivatedBusinessDetailsRequest) returns (GetActivatedBusinessDetailsResponse) {}

  // extras
  rpc SkipStorefrontBonusForNow(SkipStorefrontBonusForNowRequest) returns (ActionResponse) {}
  rpc CreateSalesforceCaseForButtonPlacement(CreateSalesforceCaseForButtonPlacementRequest) returns (ActionResponse) {}

  // Method to get POS providers for a business
  rpc GetPosProvidersByBusiness(GetPosProvidersByBusinessRequest) returns (GetPosProvidersByBusinessResponse);

  // Method to get POS activation status for a business or store
  rpc GetPosActivationStatusByProvider(GetPosActivationStatusByProviderRequest) returns (GetPosActivationStatusByProviderResponse);

  // deprecated
  rpc OnboardStoreAsync(OnboardStoreAsyncRequest) returns (ActionResponse) {
    option deprecated = true;
  }
  rpc SubmitSignUpV2(SubmitSignUpV2Request) returns (ModifyBusinessAttributesAndStoresResponse) {
    option deprecated = true;
  }
  rpc UpdateBusinessAttributesAndStores(UpdateBusinessAttributesAndStoresRequest) returns (ModifyBusinessAttributesAndStoresResponse) {
    option deprecated = true;
  }
}

// Enum for Storefront POS provider types
enum StorefrontPosProviderType {
  STOREFRONT_POS_PROVIDER_TYPE_UNSPECIFIED = 0; // Default value
  STOREFRONT_POS_PROVIDER_TYPE_TOAST = 1; // Toast POS
}

enum SignUpState {
  ACTIVATED = 0;
  ELIGIBLE = 1;
  INELIGIBLE = 2;
}

enum StoreOnboardingMethod {
  UNKNOWN = 0;
  SELF_SERVE = 1;
  MANUAL = 2;
  NEW_STORE_EVENT = 3;
}

// Request message for GetPosProvidersByBusinessRequest
message GetPosProvidersByBusinessRequest {
  int64 business_id = 1;
}

// Response message for GetPosProvidersByBusinessResponse
message GetPosProvidersByBusinessResponse {
  repeated StorefrontPosProviderType pos_provider_types = 1;
}

// Request message for GetPosActivationStatusByProviderRequest
message GetPosActivationStatusByProviderRequest {
  // either of store_id or business_id should be provided
  oneof entity_id {
    // business_id is of the business
    int64 business_id = 1;
    // store_id of the store
    int64 store_id = 2;
  }
  StorefrontPosProviderType pos_provider_type = 3;
}

// Response message for GetPosActivationStatusByProviderResponse
message GetPosActivationStatusByProviderResponse {
  google.protobuf.BoolValue is_active = 1;
}

// generic request for onboarding a store
message OnboardStoreRequest {
  int64 store_id = 1;
  StoreOnboardingMethod store_onboarding_method = 2;
}

// generic result from onboarding a store
message StoreOnboardingResult {
  enum Status {
    UNSPECIFIED = 0;
    SUCCESS = 1;
    // todo: finalize rest of statuses (validation failure, etc.)
  }

  int64 store_id = 1;
  Status status_code = 2;
  google.protobuf.StringValue error_message = 3;
}

message GetSignUpStateRequest {
  int64 business_id = 1;
  bool is_new_store_limit = 2;
  string user_id = 3;
}

message GetSignUpStateResponse {
  reserved 5;
  reserved "order_counts";
  SignUpState state = 1;
  bool hide_storefront_bonus = 2;
  bool hide_contract_step = 3;
  google.protobuf.Timestamp storefront_activated_at = 4;
}

message GetSignUpDetailsRequest {
  int64 business_id = 1;
}

message GetSignUpDetailsResponse {
  string business_name = 1;
  string logo_image = 2;
}

message SubmitSignUpRequest {
  int64 business_id = 1;
  google.protobuf.StringValue logo_image = 2;
  google.protobuf.StringValue colors = 3;
  google.protobuf.StringValue fonts = 4;
  google.protobuf.StringValue dimensions = 5;
  google.protobuf.StringValue privacy_policy_url = 6;
  bool is_basic_program = 7;
  bool is_new_store_limit = 8;
}

message OnboardStoresRequest {
  repeated OnboardStoreRequest stores = 1;
}

message OnboardStoresResponse {
  repeated StoreOnboardingResult results = 1;
}

message CreateOrUpdateBusinessRequest {
  int64 business_id = 1;
  google.protobuf.StringValue merchant_url = 2;
}

message CreateOrUpdateThemeRequest {
  int64 business_id = 1;
  google.protobuf.StringValue colors = 2;
}

message GetActivatedBusinessDetailsRequest {
  int64 business_id = 1;
}

message GetActivatedBusinessDetailsResponse {
  string storefront_url = 1;
  Business business = 2;
  Theme theme = 3;
  repeated int64 onboarded_store_ids = 4 [deprecated = true];
  google.protobuf.Timestamp onboarded_time = 5;
  google.protobuf.Timestamp verified_activated_status_at = 6;
}

message SkipStorefrontBonusForNowRequest {
  string business_id = 1;
  string user_id = 2;
}

message CreateSalesforceCaseForButtonPlacementRequest {
  string business_id = 1;
  string website_url = 2;
  string website_provider = 3;
  string phone_number = 4;
  string placement_request = 5;
}

// --- DEPRECATED MESSAGES ---
message OnboardStoreAsyncRequest {
  option deprecated = true;
  int64 store_id = 1;
  StoreOnboardingMethod onboarding_method = 2;
}

message SubmitSignUpV2Request {
  option deprecated = true;
  int64 business_id = 1;
  google.protobuf.StringValue logo_image = 2;
  google.protobuf.StringValue colors = 3;
  google.protobuf.StringValue fonts = 4;
  google.protobuf.StringValue dimensions = 5;
  google.protobuf.StringValue privacy_policy_url = 6;
  repeated int64 store_ids = 7;
  bool is_basic_program = 8;
  bool is_new_store_limit = 9;
}

message ModifyBusinessAttributesAndStoresResponse {
  option deprecated = true;
  ModifyBusinessAttributesAndStoresResponseStatus status = 1;
  repeated StoreOnboardingFailure store_onboarding_failures = 2;
  repeated StoreOffboardingFailure store_offboarding_failures = 3;
}

enum ModifyBusinessAttributesAndStoresResponseStatus {
  option deprecated = true;
  // Business was successfully signed up/modified
  SUCCESS = 0;
  // To capture if business is already activated - only relevant if its a duplicate request to signup business
  BUSINESS_ALREADY_ACTIVATED = 1;
  // To capture if business is not activated - only relevant if an update business request
  BUSINESS_NOT_ACTIVATED = 2;
  // To capture DB failures when creating/updating business/theme rows in the DB
  DB_FAILURE = 3;
  // To capture failure when no valid stores found for the business
  NO_VALID_STORES_RETRIEVED_FAILURE = 4;
  // To capture failure all stores that were in the request to onboard failed
  NO_STORES_ONBOARDED_FAILURE = 5;
  // To capture failure when num of stores that were in the request to onboard exceeded max allowed
  EXCEEDED_MAX_STORES_FAILURE = 6;
  // Catch all for all other failures not captured above
  UNKNOWN_FAILURE = 7;
}

message UpdateBusinessAttributesAndStoresRequest {
  option deprecated = true;
  int64 business_id = 1;
  google.protobuf.StringValue colors = 2;
  google.protobuf.StringValue fonts = 3;
  google.protobuf.StringValue dimensions = 4;
  google.protobuf.StringValue logo_image = 5;
  repeated int64 store_ids_to_onboard = 6;
  repeated int64 store_ids_to_offboard = 7;
}
