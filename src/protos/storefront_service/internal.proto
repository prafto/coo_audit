syntax = "proto3";
package storefront_service;

import "common/common.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "storefront_service/common.proto";
import "storefront_service/integration.proto";
import "storefront_service/signup.proto";
import "storefront_service/storefront.proto";

option java_generic_services = true;
option java_outer_classname = "StorefrontInternalProtos";
option java_package = "com.doordash.service.storefront";

service StorefrontInternalService {
  // internal tooling
  rpc CreateBusinessAndThemeV2(CreateBusinessAndThemeRequest) returns (CreateBusinessAndThemeV2Response) {}
  rpc UpdateBusiness(UpdateBusinessRequest) returns (Business) {}
  rpc DeactivateBusiness(DeactivateBusinessRequest) returns (ActionResponse) {}
  rpc CreateTheme(CreateThemeRequest) returns (ActionResponse) {}
  rpc UpdateTheme(UpdateThemeRequest) returns (Theme) {}
  rpc UploadThemeImages(stream UploadThemeImagesRequest) returns (UploadThemeImagesResponse) {}
  rpc UpdateStoreStatus(UpdateStoreStatusRequest) returns (UpdateStoreStatusResponse) {}
  rpc UpdateStorefrontBusinessIntegration(UpdateStorefrontBusinessIntegrationRequest) returns (UpdateStorefrontBusinessIntegrationResponse) {}
  // info tools
  rpc GetStoreOnboardingInfo(GetStoreOnboardingInfoRequest) returns (GetStoreOnboardingInfoResponse) {}
  rpc GetBusinessOnboardingInfo(GetBusinessOnboardingInfoRequest) returns (GetBusinessOnboardingInfoResponse) {}
  rpc GetAuditRecords(GetAuditRecordsRequest) returns (GetAuditRecordsResponse) {}

  // custom theme
  rpc GetCustomTheme(GetCustomThemeRequest) returns (GetCustomThemeResponse) {}
  rpc UpdateCustomTheme(UpdateCustomThemeRequest) returns (UpdateCustomThemeResponse) {}

  // backfills
  rpc BackfillPactsafeData(BackfillPactsafeDataRequest) returns (ActionResponse) {}
  rpc RunVerifyBusinessActivationStatusJob(RunVerifyBusinessActivationStatusJobRequest) returns (ActionResponse) {}
  rpc BackfillBatchThemesCreatedAt(BackfillBatchThemesCreatedAtRequest) returns (ActionResponse) {}
  // Use to backfill mxs onboarding onto login with doordash(lwdd)
  rpc BackfillLwddOnboarding(BackfillLwddOnboardingRequest) returns (BackfillLwddOnboardingResponse) {}
  // Backfill onboard Chick-fil-A stores to CwDD (checkout with doordash).
  rpc BackfillCFACwDDStores(BackfillCFACwDDStoresRequest) returns (ActionResponse) {}

  // Subdomains
  rpc GetSubdomainInfo(GetSubdomainInfoRequest) returns (GetSubdomainInfoResponse) {}
  rpc CreateSubdomainsForBusinesses(CreateSubdomainsForBusinessesRequest) returns (CreateSubdomainsForBusinessesResponse) {}

  // Domain mappings
  rpc GetDomainMappingsById(GetDomainMappingsByIdRequest) returns (GetDomainMappingsByIdResponse) {}
  rpc CreateDomainMappings(CreateDomainMappingsRequest) returns (CreateDomainMappingsResponse) {}
  rpc UpdateDomainMappings(UpdateDomainMappingsRequest) returns (UpdateDomainMappingsResponse) {}

  // GFO:
  // Allows engineers to manually kick off the flink integration pipeline for inventory feed
  rpc RunInventoryFeedPipeline(RunInventoryFeedPipelineRequest) returns (ActionResponse) {}
  // Allows engineers to force regenerate pre-generated inventory feed sitemap
  rpc TriggerSitemapPreGeneration(TriggerSitemapPreGenerationRequest) returns (ActionResponse) {}
  // Allows engineers to finalize the google food ordering feed.
  rpc FinalizeGfoFeed(FinalizeGfoFeedRequest) returns (ActionResponse) {}
  // Allows engineers to delete pre-generated inventory feed sitemap
  rpc DeletePreGeneratedSitemap(DeletePreGeneratedSitemapRequest) returns (ActionResponse) {}

  // misc:
  // Retrieve mx and cx fee details for given business' eligible stores
  rpc GetFeeDetailsForStoresInBusiness(GetFeeDetailsForStoresInBusinessRequest) returns (GetFeeDetailsForStoresInBusinessResponse) {}

  // Retrieve storefront menu ids base on the business or store id provided
  rpc GetStorefrontMenuIds(GetStorefrontMenuIdsRequest) returns (GetStorefrontMenuIdsResponse) {}

  rpc RunStoreOnboardingBackgroundTasks(RunStoreOnboardingBackgroundTasksRequest) returns (ActionResponse) {}

  // dummy for load-testing
  rpc HelloWorld(HelloWorldRequest) returns (HelloWorldResponse) {}

  // Evaluates DV2 configs with a boolean value result
  rpc GetDynamicValues(GetDynamicValuesRequest) returns (GetDynamicValuesResponse) {}

  // Restore an onboarded business and its stores to a fully un-onboarded state. Warning: this deletes data.
  rpc ResetOnboardingState(ResetOnboardingStateRequest) returns (ActionResponse) {}

  // Apple Pay
  rpc EnableApplePayForDomain(EnableApplePayForDomainRequest) returns (ActionResponse) {}

  // -- DEPRECATED RPCs --
  rpc ActivatePeerStoresInBusiness(ActivatePeerStoresRequest) returns (ActivatePeerStoresResponse) {
    option deprecated = true; // use OnboardStores
  }
  rpc ActivateBusiness(ActivateBusinessRequest) returns (ActionResponse) {
    option deprecated = true; // use CreateBusinessAndThemeV2
  }
  rpc CreateBusiness(CreateBusinessRequest) returns (ActionResponse) {
    option deprecated = true; // use CreateBusinessAndThemeV2
  }
  rpc CreateBusinessAndTheme(CreateBusinessAndThemeRequest) returns (ActionResponse) {
    option deprecated = true; // use CreateBusinessAndThemeV2
  }
  rpc OnboardStoresToStorefront(OnboardStoresToStorefrontRequest) returns (OnboardStoresToStorefrontResponse) {
    option deprecated = true; // Use UpdateStoreStatus instead to active or deactivate stores
  }
  rpc SyncConsumerRewardsPointsBatch(SyncConsumerRewardsPointsBatchRequest) returns (SyncConsumerRewardsPointsBatchResponse) {
    option deprecated = true; // removed endpoint
  }
  rpc GetStorefrontUrlForWeblink(GetStorefrontUrlForWeblinkRequest) returns (GetStorefrontUrlForWeblinkResponse) {
    option deprecated = true; // removed endpoint
  }
  rpc ExtendStoreTrialPrograms(ExtendStoreTrialProgramsRequest) returns (ActionResponse) {
    option deprecated = true; // removed endpoint
  }
  rpc ActivateStores(ActivateStoresRequest) returns (ActionResponse) {
    option deprecated = true; // removed endpoint
  }
  rpc DeactivateStores(DeactivateStoresRequest) returns (ActionResponse) {
    option deprecated = true; // removed endpoint
  }
  rpc BackfillStoreOnboarding(BackfillRequest) returns (ActionResponse) {
    option deprecated = true; // removed endpoint
  }
  rpc BackfillAffiliatePrograms(BackfillAffiliateProgramsRequest) returns (ActionResponse) {
    option deprecated = true; // removed endpoint
  }
  rpc BackfillDeliveryOpportunityProduct(BackfillDeliveryOpportunityProductRequest) returns (ActionResponse) {
    option deprecated = true; // removed endpoint
  }
  rpc BackfillPactsafe(BackfillPactsafeRequest) returns (BackfillPactsafeResponse) {
    option deprecated = true; // removed endpoint
  }
  rpc UpdateSubdomainsForBusinesses(UpdateSubdomainsForBusinessesRequest) returns (UpdateSubdomainsForBusinessesResponse) {
    option deprecated = true; // removed endpoint
  }
  rpc GetSubdomainInfoById(GetSubdomainInfoByIdRequest) returns (GetSubdomainInfoByIdResponse) {
    option deprecated = true; // removed endpoint
  }
}

message BusinessIntegration {
  int64 business_id = 1;
  StorefrontBusinessIntegrationType storefront_business_integration_type = 2;
  bool is_active = 3;
  google.protobuf.StringValue client_id = 4;
}

message UpdateStorefrontBusinessIntegrationRequest {
  repeated BusinessIntegration requested_business_integrations = 1;
}

message UpdateStorefrontBusinessIntegrationResponse {
  repeated BusinessIntegration updated_business_integrations = 1;
}

message CreateBusinessAndThemeRequest {
  int64 business_id = 1;
  google.protobuf.StringValue merchant_url = 2;
  google.protobuf.StringValue support_phone_number = 3;
  google.protobuf.StringValue slug = 4;
  google.protobuf.StringValue privacy_policy_url = 5;
  RedirectWeblinksPreference redirect_weblinks_preference = 6;
  EntityType entity_type = 7;
  google.protobuf.StringValue colors = 8;
  google.protobuf.StringValue fonts = 9;
  google.protobuf.StringValue dimensions = 10;
  google.protobuf.StringValue requester_email = 11;
}

message CreateBusinessAndThemeV2Response {
  int64 business_id = 1;
  google.protobuf.StringValue error_message = 2;
  repeated StoreOnboardingResult store_onboarding_results = 3;
}

message UpdateBusinessRequest {
  int64 business_id = 1;
  google.protobuf.StringValue merchant_url = 2;
  google.protobuf.StringValue support_phone_number = 3;
  google.protobuf.StringValue slug = 4;
  google.protobuf.StringValue privacy_policy_url = 5;
  RedirectWeblinksPreference redirect_weblinks_preference = 6;
  google.protobuf.StringValue gtm_id = 7;
  reserved 8;
  reserved 'business_dynamic_properties';
  google.protobuf.StringValue business_dynamic_properties_str = 9;
}

message CreateThemeRequest {
  int64 entity_id = 1;
  EntityType entity_type = 2;
  google.protobuf.StringValue colors = 3;
  google.protobuf.StringValue fonts = 4;
  google.protobuf.StringValue dimensions = 5;
}

message UpdateThemeRequest {
  int64 entity_id = 1;
  EntityType entity_type = 2;
  google.protobuf.StringValue colors = 3;
  google.protobuf.StringValue fonts = 4;
  google.protobuf.StringValue dimensions = 5;
}

message UploadThemeImagesRequest {
  int64 entity_id = 1;
  EntityType entity_type = 2;
  bytes logo_image_file = 3;
  bytes favicon_image_file = 4;
}

message UploadThemeImagesResponse {
  string logo_url = 1;
  string favicon_url = 2;
}

message StoreStatus {
  int64 store_id = 1;
  bool is_active = 2;
}

message UpdateStoreStatusRequest {
  repeated StoreStatus store_status = 1;
}

message UpdateStoreStatusResponse {
  repeated int64 store_ids_success = 1;
  repeated int64 store_ids_failure = 2;
  repeated string error_message = 3;
}

message MxAffiliateProgramRequest {
  // we don't need experience and audience because they must
  // be white_labeled/storefront and ANY_AUDIENCE in the
  // context of storefront, thus it will be enforced.
  common.Channel channel = 2;
  common.FulfillmentType fulfillment_type = 3;

  google.protobuf.Int32Value payment_processing_fee_flat = 5;
  google.protobuf.StringValue payment_processing_fee_rate = 6;
  google.protobuf.Int32Value delivery_order_fee = 7;
  google.protobuf.Int32Value pickup_order_fee = 8;

  // if start_time is not present, the program will start immediately
  // start_time cannot be a past timestamp
  google.protobuf.Timestamp start_time = 9;

  // if end_time is not present, the program will continue endlessly
  // if not overriden by another program
  google.protobuf.Timestamp end_time = 10;
}

message GetStorefrontMenuIdsRequest {
  //  retrieve base on the id provided. only one will take.
  oneof identifier {
    int64 business_id = 1;
    int64 store_id = 2;
  }
}

message GetStorefrontMenuIdsResponse {
  // a list of storefront menu ids
  repeated int64 menu_ids = 1;
}

message RunInventoryFeedPipelineRequest {
  // if populated, only these business ids will be sent to the flink pipeline.
  // if unpopulated, it will kick off the pipeline with normal businesses that have
  // some integration enabled.
  repeated int64 override_business_ids = 1;
  // optional version number
  google.protobuf.StringValue version = 2;
  // target output location
  Target target = 3;
}

message TriggerSitemapPreGenerationRequest {
  // optional version number
  google.protobuf.StringValue version = 1;
  // target output location
  Target target = 2;
}

message FinalizeGfoFeedRequest {
  // Version number
  google.protobuf.StringValue version = 1;
  // target output location (prod = 1 or sandox = 2)
  Target target = 2;
}

message DeletePreGeneratedSitemapRequest {
  // optional version number
  google.protobuf.StringValue version = 1;
  // target output location
  Target target = 2;
}

message RunVerifyBusinessActivationStatusJobRequest {
  // if included, the job will only run for these business ids
  // otherwise, it will run for all unverified businesses
  repeated int64 override_business_ids = 1;
  // optional version number
  google.protobuf.StringValue version = 2;
}

message GetFeeDetailsForStoresInBusinessRequest {
  int64 business_id = 1;
}

// future todo: import the merchant_financial_service proto definitions, instead of redefining
message FeeDetail {
  // actual numeric value
  string value = 1;
  // name of the fee e.g. payment processing, delivery fee
  string type = 2;
  google.protobuf.Timestamp start_time = 3;
  google.protobuf.Timestamp end_time = 4;
  google.protobuf.StringValue fee_rate = 5;
  // i.e. "subtotal", "total", or "no_rate".
  google.protobuf.StringValue fee_rate_charging_target = 6;
}

message FeeDetails {
  // list of fees (can be any size)
  repeated FeeDetail fee_details = 1;
  // optional salesforce opportunity product id
  google.protobuf.StringValue salesforce_opp_id = 2;
  // if it's a merchant fee, just return whether storefront mx affiliate program exists
  google.protobuf.BoolValue mx_affiliate_program_exists = 3;
  repeated string error_message = 4;
}

message GetFeeDetailsForStoresInBusinessResponse {
  // map of store id to the list of corresponding fees
  map<int64, FeeDetails> store_fee_details = 1;
}

message Menu {
  int64 menu_id = 1;
  string experience = 2;
  bool is_active = 3;
}

message FileInfo {
  google.protobuf.StringValue s3_link = 1;
}

message StoreDetails {
  int64 store_id = 1;
  bool pickup_enabled = 2;
  bool delivery_enabled = 3;
  FeeDetails fee_details = 4;
  repeated Menu menu = 5;
  Theme theme = 6;
  string order_protocol = 7;
  bool is_partner = 8;
  int32 delivery_radius = 9;
  string experience = 10;
  bool is_on_storefront = 11;
  repeated string error_message = 12;
  int64 business_id = 13;
  google.protobuf.StringValue store_name = 14;
  google.protobuf.StringValue business_name = 15;
  google.protobuf.StringValue storefront_url = 16;
  google.protobuf.StringValue address = 17;
  google.protobuf.Timestamp onboarded_at = 18;
  StoreOnboardingMethod onboarding_method = 19;
  bool is_active_on_dd = 20;
}

message BusinessDetails {
  int64 business_id = 1;
  google.protobuf.StringValue merchant_url = 2;
  google.protobuf.StringValue support_phone_number = 3;
  Theme theme = 4;
  google.protobuf.Timestamp activated_at = 5;
  google.protobuf.StringValue business_name = 6;
  repeated Store active_stores = 7;
  bool is_storefront = 8;
  google.protobuf.StringValue signup_method = 9;
  repeated string error_message = 10;
  repeated string inactive_stores = 11;
  google.protobuf.Int64Value business_group_id = 12;
  google.protobuf.StringValue storefront_url = 13;
  repeated SubdomainInfo subdomain_infos = 14;
  google.protobuf.Timestamp onboarded_at = 15;
  repeated StorefrontBusinessIntegrationType enabled_integrations = 16;
  google.protobuf.StringValue gtm_id = 17;
  BusinessDynamicProperties business_dynamic_properties = 18;
}

message GetStoreOnboardingInfoRequest {
  repeated int64 store_id = 1;
}

message GetStoreOnboardingInfoResponse {
  repeated StoreDetails store_detail = 1;
  repeated string error_message = 2 [deprecated = true];
  FileInfo export_file = 3;
}

message GetBusinessOnboardingInfoRequest {
  repeated int64 business_id = 1;
}

message GetBusinessOnboardingInfoResponse {
  int64 business_id = 1 [deprecated = true];
  google.protobuf.StringValue merchant_url = 2 [deprecated = true];
  google.protobuf.StringValue support_phone_number = 3 [deprecated = true];
  Theme theme = 4 [deprecated = true];
  google.protobuf.Timestamp activated_at = 5 [deprecated = true];
  google.protobuf.StringValue business_name = 6 [deprecated = true];
  repeated Store active_stores = 7 [deprecated = true];
  bool is_storefront = 8 [deprecated = true];
  google.protobuf.StringValue signup_method = 9 [deprecated = true];
  repeated string error_message = 10 [deprecated = true];
  repeated string inactive_stores = 11 [deprecated = true];
  google.protobuf.Int64Value business_group_id = 12 [deprecated = true];
  google.protobuf.StringValue storefront_url = 13 [deprecated = true];
  repeated SubdomainInfo subdomain_infos = 14 [deprecated = true];
  repeated BusinessDetails business_onboarding_infos = 15;
  FileInfo export_file = 16;
}

message DeactivateBusinessRequest {
  repeated int64 business_id = 1;
}

message SubdomainInfo {
  int64 business_id = 1;
  google.protobuf.StringValue subdomain_url = 2;
  google.protobuf.StringValue gtm_id = 3;
}

message GetSubdomainInfoRequest {
  google.protobuf.StringValue subdomain_url = 1;
}

message GetSubdomainInfoResponse {
  SubdomainInfo subdomain_info = 1;
}

message CreateSubdomainsForBusinessesRequest {
  repeated SubdomainInfo business_subdomain_mappings = 1;
  google.protobuf.StringValue user_email = 2;
}

message CreateSubdomainsForBusinessesResponse {
  repeated string urls_success = 1;
  repeated string urls_failure = 2;
  repeated string error_message = 3;
}

message UpdateSubdomainInfo {
  google.protobuf.StringValue subdomain_url_key = 1;
  google.protobuf.Int64Value new_business_id = 2;
  google.protobuf.StringValue new_gtm_id = 3;
}

message GetDomainMappingsByIdRequest {
  int64 entity_id = 1;
  EntityType entity_type = 2;
}

message GetDomainMappingsByIdResponse {
  repeated DomainInfo domain_mappings = 1;
}

message CreateDomainMappingsRequest {
  repeated DomainInfo domain_mappings = 1;
  google.protobuf.StringValue created_by = 2;
}

message CreateDomainMappingsResult {
  DomainInfo domain_mapping = 1;
  google.protobuf.StringValue error_message = 2;
}

message CreateDomainMappingsResponse {
  repeated CreateDomainMappingsResult urls_success = 1;
  repeated CreateDomainMappingsResult urls_failure = 2;
}

message UpdateDomainInfo {
  google.protobuf.StringValue url = 1;
  UrlType url_type = 2;
  google.protobuf.Int64Value new_entity_id = 3;
  EntityType new_entity_type = 4; // only business is supported
}

message UpdateDomainMappingsRequest {
  repeated UpdateDomainInfo domain_mapping = 1;
}

message UpdateDomainMappingsResult {
  DomainInfo domain_mapping = 1;
  google.protobuf.StringValue error_message = 2;
}

message UpdateDomainMappingsResponse {
  repeated UpdateDomainMappingsResult urls_success = 1;
  repeated UpdateDomainMappingsResult urls_failure = 2;
}

message LwddBusinessOnboardingRequest {
  int64 business_id = 1;
  google.protobuf.BoolValue should_update_integrations_table = 2;
  google.protobuf.BoolValue should_skip_client_registration = 3;
  google.protobuf.BoolValue enable_dashpass = 4;
  google.protobuf.BoolValue should_update_client_registration = 5;
}

message BackfillLwddOnboardingRequest {
  repeated LwddBusinessOnboardingRequest businesses = 1;
}

message BackfillLwddOnboardingResponse {
  FileInfo export_file = 1;
  FileInfo export_failures = 2;
}

message GetCustomThemeRequest {
  int64 entity_id = 1;
  EntityType entity_type = 2;
  google.protobuf.BoolValue is_preview = 3;
}

message GetCustomThemeResponse {
  CustomTheme custom_theme = 1;
}

message UpdateCustomThemeRequest {
  int64 entity_id = 1;
  EntityType entity_type = 2;
  google.protobuf.StringValue theme_data = 3;
  google.protobuf.BoolValue is_preview = 4;
  int64 updated_by = 5;
}

message UpdateCustomThemeResponse {
  CustomTheme custom_theme = 1;
  google.protobuf.StringValue preview_url = 2;
  bool success = 3;
  string error_message = 4;
}

message RunStoreOnboardingBackgroundTasksRequest {
  repeated int64 store_ids = 1;
}

message HelloWorldRequest { // for load-testing gRPC service
  google.protobuf.StringValue input = 1;
}

message HelloWorldResponse { // for load-testing gRPC service
  google.protobuf.StringValue output = 1;
}

message GetDynamicValuesRequest {
  // Union representing different types of context properties DV2 supports
  message TypedValue {
    // Union of different typed values
    oneof value {
      string string_value = 1;
      int64 long_value = 2;
      double double_value = 3;
      bool bool_value = 4;
    }
  }

  message Context {
    map<string, TypedValue> properties = 1;
  }

  google.protobuf.StringValue name = 1;
  Context context = 2;
}

message GetDynamicValuesResponse {
  bool result = 1;
}

message BackfillPactsafeDataRequest {
  repeated PactsafeData pactsafe_data = 1;
}

message PactsafeData {
  // store ID
  int64 store_id = 1;
  // business ID
  int64 business_id = 2;
  // the activity ID to fill our records with
  string pactsafe_activity_id = 3;
  // the salesforce opportunity ID to fill pactsafe data in
  string salesforce_opportunity_id = 4;
}

message ResetOnboardingStateRequest {
  int64 business_id = 1;
}

message BackfillCFACwDDStoresRequest {
  repeated int64 store_ids = 1;
}

message BackfillBatchThemesCreatedAtRequest {}

// -- DEPRECATED MESSAGES --
message ActivatePeerStoresRequest {
  option deprecated = true;
  message PeerStoreInfo {
    int64 store_id = 1;
    int64 business_id = 2;
    int64 peer_store_id = 3;
  }
  repeated PeerStoreInfo peer_store_activation_request = 1;
}

message ActivatePeerStoresResponse {
  option deprecated = true;
  message PeerStoreActivationFailure {
    int64 store_id = 1;
    google.protobuf.StringValue failure_reason = 2;
  }
  repeated PeerStoreActivationFailure failures = 1;
  repeated int64 succeeded_store_ids = 2;
}

message ActivateBusinessRequest {
  option deprecated = true;
  int64 business_id = 1;
}

message CreateBusinessRequest {
  option deprecated = true;
  int64 business_id = 1;
  google.protobuf.StringValue merchant_url = 2;
  google.protobuf.StringValue support_phone_number = 3;
  google.protobuf.StringValue slug = 4;
  google.protobuf.StringValue privacy_policy_url = 5;
  RedirectWeblinksPreference redirect_weblinks_preference = 6;
}

message OnboardStoresToStorefrontRequest {
  option deprecated = true;
  repeated int64 store_ids = 1;
}

message OnboardStoresToStorefrontResponse {
  option deprecated = true;
  repeated int64 stores_success = 1;
  repeated StoreOnboardingFailure store_onboarding_failures = 2;
}

message SyncConsumerRewardsPointsBatchRequest {
  option deprecated = true;
  repeated SyncConsumerRewardsPointsRequest sync_consumer_rewards_request = 1;
}

message SyncConsumerRewardsPointsBatchResponse {
  option deprecated = true;
  repeated SyncConsumerRewardsPointsResponse response = 1;
}

message GetStorefrontUrlForWeblinkRequest {
  option deprecated = true;
  int64 business_id = 1;
  int64 store_id = 2;
}

message GetStorefrontUrlForWeblinkResponse {
  option deprecated = true;
  string storefront_url = 1;
}

message ExtendStoreTrialProgramsRequest {
  option deprecated = true;
  int64 store_id = 1;
  google.protobuf.Timestamp end_timestamp = 2;
}

message ActivateStoresRequest {
  option deprecated = true;
  repeated int64 store_ids = 1;
}

message DeactivateStoresRequest {
  option deprecated = true;
  repeated int64 store_ids = 1;
}

message BackfillRequest {
  option deprecated = true;
  google.protobuf.Timestamp backfill_since = 1;
  int32 store_limit = 2;
}

message BackfillAffiliateProgramsRequest {
  option deprecated = true;
  int64 store_id = 1;
  string opportunity_id = 2;
  repeated MxAffiliateProgramRequest programs = 3;
}

message BackfillDeliveryOpportunityProductRequest {
  option deprecated = true;
  int64 store_id = 1;
  string opportunity_id = 2;
  string opportunity_line_item_id = 3;
  int64 delivery_fee = 4;
  int64 service_rate = 5;
  google.protobuf.Timestamp start_time = 9;
  google.protobuf.Timestamp end_time = 10;
}

message BackfillPactsafeRequest {
  option deprecated = true;
  repeated int64 business_ids = 1;
}

message BackfillPactsafeResponse {
  option deprecated = true;
  message BackfillPactsafeFailure {
    int64 business_id = 1;
    string failure_reason = 2;
  }
  repeated int64 succeeded_business_ids = 1;
  repeated BackfillPactsafeFailure failures = 2;
}

message GetSubdomainInfoByIdRequest {
  option deprecated = true;
  int64 entity_id = 1;
}

message GetSubdomainInfoByIdResponse {
  option deprecated = true;
  repeated SubdomainInfo subdomains = 1;
}

message UpdateSubdomainsForBusinessesRequest {
  option deprecated = true;
  repeated UpdateSubdomainInfo business_subdomain_mappings = 1;
}

message UpdateSubdomainsForBusinessesResponse {
  option deprecated = true;
  repeated string urls_success = 1;
  repeated string urls_failure = 2;
  repeated string error_message = 3;
}

message GetAuditRecordsRequest {
  google.protobuf.StringValue entity_id = 1;
  EntityType entity_type = 2;
}

message AuditRecord {
  google.protobuf.StringValue entity_id = 1;
  EntityType entity_type = 2;
  google.protobuf.Timestamp created_at = 3;
  google.protobuf.StringValue operation_type = 4;
  google.protobuf.StringValue value_type = 5;
  google.protobuf.StringValue new_value = 6;
  google.protobuf.StringValue old_value = 7;
  google.protobuf.StringValue user_identity = 8;
}

message GetAuditRecordsResponse {
  repeated AuditRecord audit_records = 1;
}

message EnableApplePayForDomainRequest {
  google.protobuf.StringValue domain = 1;
}
