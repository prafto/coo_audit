syntax = "proto3";

package assets_service.v3;

import "google/protobuf/timestamp.proto";

option go_package = "github.com/doordash/services-protobuf/generated/assets_service.v3";
option java_multiple_files = true;
option java_package = "com.doordash.rpc.assetsservice.v3";

/*
 * A Reference to another entity.
 */
message DdrnRef {
  // DoorDash Resource Name. 'ddrn::<type>::<ID>'
  string ddrn = 1;
  // A human friendly alias.
  string alias = 2;
}

/* A validation error that relates to a given field in the request payload. */
message ValidationError {
  /* A human readable error message that can be displayed to the end user. */
  string message = 1;
  /* The protobuf field number of the field which incurred the error. */
  int32 field_number = 10;
  /* The reason. */
  ValidationReasonCode reason_code = 20;
  /* The severity of the validation error. */
  ErrorSeverity severity = 30;
}

/* The reason a field is invalid. */
enum ValidationReasonCode {
  /* Required default enum value. */
  VALIDATION_REASON_CODE_UNSPECIFIED = 0;
  /* (Shallow validation) The field was empty when it can't be. */
  VALIDATION_REASON_CODE_CANNOT_BE_EMPTY = 10;
  /* (Shallow validation) The value in the field is in an invalid format. */
  VALIDATION_REASON_CODE_INVALID_FORMAT = 20;
  /* (Shallow validation) The given value is of valid format, but is not an accepted option.  */
  VALIDATION_REASON_CODE_UNACCEPTABLE_VALUE = 30;
  /* (Shallow validation) The given value is a list containing duplicates.  */
  VALIDATION_REASON_CODE_VALUE_CONTAINS_DUPLICATES = 35;
  /* (Deep validation) The referenced entity does not exist. */
  VALIDATION_REASON_CODE_REFERENCE_NOT_FOUND = 40;
  /* (Deep validation) The value of the given field must be unique. */
  VALIDATION_REASON_CODE_ALREADY_EXISTS = 50;
  /* (Deep Validation) The referenced entity cannot exist in the given state. */
  VALIDATION_REASON_CODE_INVALID_REFERENCE_STATE = 60;
}

/* The severity of the validation error. */
enum ErrorSeverity {
  /* Required default enum value. */
  ERROR_SEVERITY_UNSPECIFIED = 0;
  /* Least severe rating. This can be interpreted as a warning. */
  ERROR_SEVERITY_RECOMMENDATION = 10;
  /* The issue violates an engineering policy and needs to be fixed as soon as possible.
   * But, it does not violate any schema rules. */
  ERROR_SEVERITY_POLICY_VIOLATION = 20;
  /* The strongest rating. This means that we cannot write this into the database.
   * Example: an `alias` containing an emoji character. We cannot make any exceptions to ignore this error. */
  ERROR_SEVERITY_SCHEMA_VIOLATION = 30;
}

// string filter clause
message StringFilterClause {
  // Valid Operators: ">", "<", "<=", ">=", "=", "!=", "is not null", "is null", "like", "ilike"
  string operator = 1;
  // String value
  string value = 2;
}

// int32 filter clause
message Int32FilterClause {
  // Valid Operators: ">", "<", "<=", ">=", "=", "!=", "is not null", "is null"
  string operator = 1;
  // filter value
  int32 value = 2;
}

// Boolean filter clause
message BoolFilterClause {
  // Valid Operators: "=", "!=", "is not null", "is null"
  string operator = 1;
  // filter value
  bool value = 2;
}

// timestamp filter clause
message TimestampFilterClause {
  // Valid Operators: ">", "<", "<=", ">=", "=", "!=", "is not null", "is null"
  string operator = 1;
  // filter value
  google.protobuf.Timestamp value = 2;
}

// list string filter clause
message ListStringFilterClause {
  // Valid Operators: "is not null", "is null", "in", "not in"
  // Valid for array type: "<@", "@>", "&&", "not &&", "any", "all", "not any"
  string operator = 1;
  // filter value
  repeated string value = 2;
}

// list int32 filter clause
message ListInt32FilterClause {
  // Valid Operators: "is not null", "is null", "in", "not in"
  // Valid for array type: "<@", "@>", "&&", "not &&", "any", "all", "not any"
  string operator = 1;
  // filter value
  repeated int32 value = 2;
}
