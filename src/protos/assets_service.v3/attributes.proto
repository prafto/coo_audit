syntax = "proto3";

package assets_service.v3;

import "assets_service.v3/common.proto";
import "assets_service.v3/resource_type.proto";

option go_package = "github.com/doordash/services-protobuf/generated/assets_service.v3";
option java_multiple_files = true;
option java_package = "com.doordash.rpc.assetsservice.v3";

/* Attribute that holds k8s information. */
message KubernetesAttribute {
  // [DEPRECATED. WILL BE REMOVED BY EO Q4 2023] The Kubernetes Namespace
  string namespace = 10 [deprecated = true];
  // [DEPRECATED. WILL BE REMOVED BY EO Q4 2023] The Kubernetes Service name.
  string service_name = 20 [deprecated = true];
  // [DEPRECATED. WILL BE REMOVED BY EO Q4 2023] The main Kubernetes App.
  string k8s_app = 30 [deprecated = true];
  // [DEPRECATED. WILL BE REMOVED BY EO Q4 2023] (Optional) Kubernetes apps that serve as companions to the main k8s app. e.g. '*-cadence-worker'.
  repeated string companion_k8s_apps = 40 [deprecated = true];

  // The Kubernetes Workloads associated to this software asset.
  repeated KubernetesWorkload workloads = 50;
  // The Kubernetes Apps associated to this software asset.
  repeated DdrnRef k8s_apps = 60;
}

/* Represents a set of identifiers that uniquely define a Kubernetes workload. */
message KubernetesWorkload {
  // [Required] The Kubernetes cluster.
  string cluster = 10;
  // [Required] The Kubernetes Namespace.
  string namespace = 20;
  // The Kubernetes Service name. May be undefined.
  string service_name = 30;
  // The Kubernetes App. May be undefined.
  string app = 40;
}

/* Attribute that holds oncall information. */
message OnCallAttribute {
  // The DoorDash pagerduty alias.
  string ddpd_alias = 10;
}

/* Attribute that holds source code information. */
message SourceCodeAttribute {
  // The name of the repository.
  string repo = 10;
  // (Optional) The path to the start of the project. Useful for mono-repos.
  // Non-mono-repos should leave this blank.
  string code_root = 20;
  // (Optional) The primary programming language for the repository.
  string language = 30;
}

/* An attribute that holds Component info (in Scope Definitions).
 * This Attribute is only meant for compatibility reasons, in launching v3 APIs.
 * Expect this Attribute to be deprecated afterwards.
 */
message ComponentCompatAttribute {
  // The name of the component.
  string component = 10;
}

/*
 * An attribute that holds the slack channel ID for deployment purposes.
 */
message DeployAttribute {
  //The id of the channel
  string slack_channel_id = 10;
}

/*
 * An attribute that holds the slack channel ID for observability purposes.
 */
message ObservabilityAttribute {
  // The id of the channel
  string slack_channel_id = 10;
}

/*
 * An attribute that holds metadata for Dev Insights purposes.
 */
message InsightsAttribute {
  // The id of the channel to send dev insights messages to.
  string slack_channel_id = 10;
}

/*
 * An attribute that holds metadata for a platform subtype software asset.
 */
message PlatformAttribute {
  // The platform attribute only present for a platform software asset
  repeated ResourceType tracking_resource_types = 10;
}

/*
 * Tokens representing an Attribute.
 */
enum AttributeType {
  // Mandatory UNSPECIFIED enum value.
  ATTRIBUTE_TYPE_UNSPECIFIED = 0;
  // Represents KubernetesAttribute
  ATTRIBUTE_TYPE_KUBERNETES = 10;
  // Represents OnCallAttribute
  ATTRIBUTE_TYPE_ONCALL = 20;
  // Represents SourceCodeAttribute
  ATTRIBUTE_TYPE_SOURCE_CODE = 30;
  // Represents DeployAttribute
  ATTRIBUTE_TYPE_DEPLOY = 40;
  // Represents ObservabilityAttribute
  ATTRIBUTE_TYPE_OBSERVABILITY = 50;
  // Represents InsightsAttribute
  ATTRIBUTE_TYPE_INSIGHTS = 60;
  // Represents PlatformAttribute
  ATTRIBUTE_TYPE_PLATFORM = 70;
}

// ----------------------------------------------------------
/*
 * Request for GetExpectedAttributesForSubtypes
 * For a givem list of subtypes, returns the union of all Attributes expected to be set on that
 * SoftwareAsset.
 * Unknown subtypes are ignored.
 */
message GetExpectedAttributesForSubtypesRequest {
  // The subtypes to query.
  repeated string subtypes = 1;
}

/*
 * Response for GetExpectedAttributesForSubtypes
 */
message GetExpectedAttributesForSubtypesResponse {
  // The union of all attributes expected to be found on SoftwareAssets with the given subtypes.
  repeated AttributeType expected_attributes = 1;
}
