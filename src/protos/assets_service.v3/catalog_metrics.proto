syntax = "proto3";

package assets_service.v3;

import "assets_service.v3/common.proto";
import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/doordash/services-protobuf/generated/assets_service.v3";
option java_multiple_files = true;
option java_package = "com.doordash.rpc.assetsservice.v3";

/**
 * Request for ListCatalogMetricSnapshots
 */
message ListCatalogMetricSnapshotsRequest {}

/**
 * Response for ListCatalogMetricSnapshots
 */
message ListCatalogMetricSnapshotsResponse {
  // list of metrics (counts)
  repeated MetricSnapshot metrics = 1;
}

/**
 * Request for ListSoftwareAssetIssues
 */
message ListSoftwareAssetIssuesRequest {
  // The filtering criteria for software asset issues
  SoftwareAssetIssuesFilter filter = 1;
  // The number of software asset issues to return. Default: 100. Max: 1000
  int32 page_size = 2;
  // The optional pagination Token for software asset issues.
  string page_token = 3;
}

/**
 * Response for ListSoftwareAssetIssues
 */
message ListSoftwareAssetIssuesResponse {
  // list of issues
  repeated SoftwareAssetIssue issues = 1;
  // The next pagination Token. If this is given, it means that there are more pages.
  string next_page_token = 2;
  // The total number of software asset issues
  int32 total_num_issues = 3;
}

/**
 * Request for GetIssuesForSoftwareAsset
 */
message GetIssuesForSoftwareAssetRequest {
  // Reference to the software asset â€“ either a DDRN or an alias.
  DdrnRef software_asset = 1;
}

/**
 * Response for GetIssuesForSoftwareAsset
 */
message GetIssuesForSoftwareAssetResponse {
  // list of issues for a given software asset.
  repeated SoftwareAssetIssue issues = 1;
}

/**
 * The software asset issue type
 */
enum IssueType {
  // Default value
  ISSUE_TYPE_UNSPECIFIED = 0;
  // Software asset is missing an owner
  ISSUE_TYPE_MISSING_OWNER = 1;
  // Software asset has a non-direct owner
  ISSUE_TYPE_NON_DIRECT_OWNER = 2;
  // Software asset is missing pagerduty ID
  ISSUE_TYPE_MISSING_PAGERDUTY = 3;
  // Software asset has missing attributes based on subtype
  ISSUE_TYPE_MISSING_REQUIRED_ATTRIBUTES = 4;
  // Owner group for software asset has been marked as inactive.
  ISSUE_TYPE_INACTIVE_OWNER_GROUP = 5;
  // Software asset has missing Kubernetes apps
  ISSUE_TYPE_MISSING_K8S_APPS = 6;
  // Software asset has missing source code attribute
  ISSUE_TYPE_MISSING_SOURCE_CODE = 7;
}

/**
 * Software assets grouped by issue type
 */
message SoftwareAssetIssue {
  // The type of issue
  IssueType issue_type = 1;
  // the software asset ddrn
  DdrnRef software_asset = 2;
  // the issue description
  string issue_description = 3;
  // the time of sync
  google.protobuf.Timestamp synced_at = 10;
}

/**
 * Filter for software asset issues
 */
message SoftwareAssetIssuesFilter {
  // The type of issue
  repeated IssueType issue_types = 1;
}

/**
 * Mapping of a metric to its count, grouped by an identifier
 */
message MetricSnapshot {
  // latest current total count per tier. Key is Tier enum in software_asset.proto
  map<string, int32> tier_counts = 1;
  // latest current total count per status. Key is LifeCycleStatus enum in software_asset.proto
  map<string, int32> status_counts = 2;
  // [Deprecated] The number of registered kubernetes apps
  int32 k8s_app_count = 3;
  // total count of software assets
  int32 total_software_asset_count = 4;
  // time of creation
  google.protobuf.Timestamp created_at = 5;
  // [Deprecated] The number of software assets with k8s apps
  int32 software_assets_with_k8s_apps = 6;
  // counts per new feature to track adoption
  map<string, int32> feature_adoption_counts = 10;
}
