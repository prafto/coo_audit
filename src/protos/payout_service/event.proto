syntax = "proto3";

package doordash.payout_service;

import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "payout_service/payout_service.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.payout_service";

// emitted when a payout has been created but not for the entire balance
message PayoutCappedEvent {
  // payout object
  Payout payout = 1;
  // amount that was not paid
  google.protobuf.Int64Value unpaid_amount = 3;
}

// emitted when a scheduled payout was not created due to velocity controls
message PayoutHeldEvent {
  // payout account id that is delayed
  google.protobuf.StringValue payout_account_id = 2;
  // the amount of the payout that is held
  google.protobuf.Int64Value unpaid_amount = 3;
  // when the payout is estimated to be submitted
  google.protobuf.Timestamp estimated_submission_date = 4;
}

// event emitted by payout service
message Event {
  // message with more specific detail about the event
  oneof detail {
    // payout capped event
    PayoutCappedEvent payout_capped_event = 1;
    // payout held event
    PayoutHeldEvent payout_held_event = 2;
  }
}

// event emitted to segment to track changes to payout experiences
message PayoutExperienceSegmentEvent {
  // segment event name
  google.protobuf.StringValue name = 1;
  // payout account id of associated entity
  google.protobuf.StringValue payout_account_id = 2;
  // indicates if user initaited action
  google.protobuf.BoolValue user_initiated_selection = 3;
  // id of associated payout experience
  google.protobuf.StringValue payout_experience_id = 4;
  // (optional) email
  google.protobuf.StringValue email = 5;
}

// event emitted to segment to track changes to dasher payout events
message PayoutDasherSegmentEvent {
  // segment event name
  google.protobuf.StringValue name = 1;
  // dasher email of associated entity
  google.protobuf.StringValue dasher_email = 2;
  // formatted date string
  google.protobuf.StringValue date = 3;
  // remaining balance for dasher
  google.protobuf.StringValue remaining_balance = 4;
  // amount paid by dasher
  google.protobuf.StringValue amount_paid = 5;
  //first name of dasher
  google.protobuf.StringValue first_name = 6;
}

// event emitted to segment to track dasher direct baas experience
message DasherDirectBaasSegmentEvent {
  // provider account id of associated entity
  google.protobuf.StringValue provider_account_id = 1;
  // email of dasher direct
  google.protobuf.StringValue email = 2;
  // indicates if dasher is baas user
  google.protobuf.BoolValue is_baas_user = 3;
}

// event emitted to segment to track crimson application experience
message CrimsonAnalyticSegmentEvent {
  // segment event name
  google.protobuf.StringValue name = 1;
  // provider account id of associated entity
  google.protobuf.StringValue provider_account_id = 2;
  // provider resource id of associated entity
  google.protobuf.StringValue provider_resource_id = 3;
  // email of crimson application
  google.protobuf.StringValue email = 4;
  // dasher id of associated entity
  google.protobuf.BoolValue dasher_id = 5 [deprecated = true];
  // dasher id of associated entity
  google.protobuf.StringValue dasher_id_string = 6;
  // external id of associated entity
  google.protobuf.StringValue external_id = 7;
}

// iguazu event for Crimson consents
message CrimsonConsentEvent {
  // name
  google.protobuf.StringValue name = 1;
  // provider account id of associated entity
  google.protobuf.StringValue provider_account_id = 2;
  // source of the consent
  google.protobuf.StringValue source = 3;
  // consent status
  google.protobuf.BoolValue accepted = 4;
}
