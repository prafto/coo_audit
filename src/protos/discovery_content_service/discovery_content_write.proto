syntax = "proto3";

package discovery_content_service.v1;

option java_multiple_files = true;
option java_generic_services = true;
option java_package = "com.doordash.rpc.discovery_content_service";

import "common/service_client_config.proto";
import "discovery_content_service/content.proto";
import "discovery_content_service/item.proto";
import "discovery_content_service/surface.proto";
import "discovery_content_service/target.proto";
import "discovery_content_service/surface_group.proto";
import "google/protobuf/timestamp.proto";
import "discovery_content_service/filter.proto";
import "google/protobuf/wrappers.proto";
import "discovery_content_service/discovery_content_service.proto";

// RPC calls for DiscoveryContentWriteService. Write (& tooling read) path only.
service DiscoveryContentWriteService {

  // Timeout after 1000 milliseconds.
  option (service_client.client_config).response_attempt_timeout_millis = 4000;
  // Make a total 4 attempts (initial + two retries).
  option (service_client.client_config).retry_config.max_attempts = 2;
  // Add RESOURCE_EXHAUSTED to the set of retriable codes.
  option (service_client.client_config).retry_config.do_retry_grpc_code = 8;
  // Break the circuit if the error rate exceeds 80%.
  option (service_client.client_config).circuit_breaker_config.failure_rate_threshold = 0.8;
  // Ignore NOT_FOUND from circuit breaker error rate calculation.
  option (service_client.client_config).circuit_breaker_config.do_ignore_grpc_code = 5;

  // Get Content Metadata By Id
  rpc GetContentMetadataById(GetContentMetadataByIdRequest) returns (GetContentMetadataByIdResponse);

  // Get Content Metadata Timestamps
  rpc GetContentMetadataTimestamps(GetContentMetadataTimestampsRequest) returns (GetContentMetadataTimestampsResponse);

  // Get Content Metadata List
  rpc GetContentMetadataList(GetContentMetadataListRequest) returns (GetContentMetadataListResponse);

  // Get Surfaces
  rpc GetSurfaces(GetSurfacesRequest) returns (GetSurfacesResponse);

  // Get SurfaceGroups
  rpc GetSurfaceGroups(GetSurfaceGroupsRequest) returns (GetSurfaceGroupsResponse);

  // Upsert content metadata
  // buf:lint:ignore RPC_REQUEST_RESPONSE_UNIQUE
  rpc UpsertContent(UpsertContentRequest) returns (UpsertContentResponse);

  // Upsert surface group
  // buf:lint:ignore RPC_REQUEST_RESPONSE_UNIQUE
  rpc UpsertSurfaceGroup(UpsertSurfaceGroupRequest) returns (UpsertSurfaceGroupResponse);

  // Upsert surface
  // buf:lint:ignore RPC_REQUEST_RESPONSE_UNIQUE
  rpc UpsertSurface(UpsertSurfaceRequest) returns (UpsertSurfaceResponse);

  // Delete content metadata
  // buf:lint:ignore RPC_REQUEST_RESPONSE_UNIQUE
  rpc DeleteContent(DeleteContentRequest) returns (DeleteContentResponse);

  // Delete surface group
  // buf:lint:ignore RPC_REQUEST_RESPONSE_UNIQUE
  rpc DeleteSurfaceGroup(DeleteSurfaceGroupRequest) returns (DeleteSurfaceGroupResponse);

  // Delete surface
  // buf:lint:ignore RPC_REQUEST_RESPONSE_UNIQUE
  rpc DeleteSurface(DeleteSurfaceRequest) returns (DeleteSurfaceResponse);

  // Upsert content item
  // buf:lint:ignore RPC_REQUEST_RESPONSE_UNIQUE
  rpc UpsertItem(UpsertItemRequest) returns (UpsertItemResponse);

  // Delete msid item request
  // buf:lint:ignore RPC_REQUEST_RESPONSE_UNIQUE
  rpc DeleteMsidItem(DeleteMsidItemRequest) returns (DeleteMsidItemResponse);
}

/* WRITE Path Request for content metadata by id. */
message GetContentMetadataByIdRequest {
  //content id
  string content_id = 1;
  //optional timestamp to fetch past history of content.
  google.protobuf.Timestamp first_effective_ts = 2;
}

//WRITE Path Response for content metadata by id.
message GetContentMetadataByIdResponse {
  //Content
  Content content = 1;
}

/* WRITE Path Request for timestamps of all updates for content. */
message GetContentMetadataTimestampsRequest {
  //content id
  string content_id = 1;
}

//WRITE Path Response all timestamps for content.
message GetContentMetadataTimestampsResponse {
  //Content
  repeated TimestampInfo timestamp_info = 1;
}

//Timestamp info.
message TimestampInfo {
  //timestamp of content metadata.
  google.protobuf.Timestamp ts = 1;
}

/* WRITE Path Request for content metadata associated with specific index. */
message GetContentMetadataListRequest {
  /* For pagination, not being used yet as all values will currently be returned. */
  int32 page_size = 1;

  /* A page token, received from previous GetContentMetadataResponse.
  When paginating, all other parameters provided must match the initial call. */
  string page_token = 2;

  /* if looking for specific content metadata*/
  google.protobuf.StringValue content_id = 3;

  /* surface infos needed to get the content metadata */
  SurfaceRequest surface_request = 4;

  /* different types of surface groups to look for content metadata within */
  repeated SurfaceGroupRequest surface_groups = 5;
}

//WRITE Path Response with list of content metadata.
message GetContentMetadataListResponse {
  //Content
  repeated Content content = 1;
}

//WRITE Path Request to fetch all surfaces.
message GetSurfacesRequest {
  /* surface type */
  SurfaceType surface_type_id = 2;
  /* geo type */
  GeoType geo_type_id = 3;
  /* geo id */
  google.protobuf.StringValue geo_id = 4;
}

//WRITE Path Response with surfaces of request type.
message GetSurfacesResponse {
  //Content
  repeated Surface surface = 1;
}

//WRITE Path Request to fetch all surface groups associated with a surface and/or group type.
message GetSurfaceGroupsRequest {
  /* surface type */
  string surface_uuid = 1;
  /* geo type */
  SurfaceGroupType surface_group_type = 2;
}

//WRITE Path Response with surface groups for specific surface and/or group type.
message GetSurfaceGroupsResponse {
  //Content
  repeated SurfaceGroup groups = 1;
}
