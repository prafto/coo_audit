syntax = "proto3";

package message_routing_platform.v1;

import "google/protobuf/wrappers.proto";
import "message_routing_platform/message_routing.proto";

option go_package = "github.com/doordash/services-protobuf/generated/message_routing_platform";
option java_generic_services = true;
option java_multiple_files = true;
option java_outer_classname = "Kafka";
option java_package = "com.doordash.message_routing_platform.rpc";

// The message kafka event that clients like postal service and chat service push to the message bus kafka topic for inbound messages
message MessageEvent {
  // To ensure that each inbound message is sent once
  google.protobuf.StringValue idempotency_key = 1;
  // The Conversation ID
  ConversationIdentifier conversation_id = 2;
  // The modality that the source message is coming from
  MessageModality source_modality = 3;
  // The conversation participant that the source message is coming from
  MessageParticipant source_participant = 4;
  // The body of the incoming message
  google.protobuf.StringValue message_body = 5;
  // The media urls of the incoming message
  repeated google.protobuf.StringValue media_urls = 6;
  // Whether to ignore the source modality when routing the message (for fallback scenarios)
  bool ignore_source_modality = 7;
}
