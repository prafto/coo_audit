syntax = "proto3";

package zero2one.v1;

import "common/common.proto";
import "common/money.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "zero2one/pos_menu_override.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.zero2one";

// get full menu details request
message GetFullMenuDetailsRequest {
  // store id
  google.protobuf.StringValue store_id = 1;
  // optional menu id filter (return details for specified menu)
  google.protobuf.StringValue menu_id = 2;
  // common experience type for menu item price and availability filtering
  common.Experience experience = 3;
}

// get full menu details response
message GetFullMenuDetailsResponse {
  // menus with item details
  repeated Menu menus = 1;
}

// Reactivate single menu item request
message ReactivateStoreItemRequest {
  // store id
  google.protobuf.StringValue store_id = 1;
  // item id
  google.protobuf.StringValue item_id = 2;
}

// Reactivate single menu item response
message ReactivateStoreItemResponse {
  // store id
  google.protobuf.StringValue store_id = 1;
  // item id
  google.protobuf.StringValue item_id = 2;
}

// Reactivate single menu item extra request
message ReactivateStoreItemExtraRequest {
  // store id
  google.protobuf.StringValue store_id = 1;
  // item id
  google.protobuf.StringValue item_extra_id = 2;
}

// Reactivate single menu item extra response
message ReactivateStoreItemExtraResponse {
  // store id
  google.protobuf.StringValue store_id = 1;
  // item id
  google.protobuf.StringValue item_extra_id = 2;
}

// Reactivate single menu item extra option request
message ReactivateStoreItemExtraOptionRequest {
  // store id
  google.protobuf.StringValue store_id = 1;
  // item id
  google.protobuf.StringValue item_extra_option_id = 2;
}

// Reactivate single menu item extra option response
message ReactivateStoreItemExtraOptionResponse {
  // store id
  google.protobuf.StringValue store_id = 1;
  // item id
  google.protobuf.StringValue item_extra_option_id = 2;
}

// Deactivate single menu item request
message DeactivateStoreItemRequest {
  // store id
  google.protobuf.StringValue store_id = 1;
  // item id
  google.protobuf.StringValue item_id = 2;
  // end_time
  google.protobuf.Timestamp end_time = 3;
}

// Deactivate single menu item response
message DeactivateStoreItemResponse {
  // store id
  google.protobuf.StringValue store_id = 1;
  // item id
  google.protobuf.StringValue item_id = 2;
  // end_time
  google.protobuf.Timestamp end_time = 3;
}

// Deactivate single menu item extra request
message DeactivateStoreItemExtraRequest {
  // store id
  google.protobuf.StringValue store_id = 1;
  // item id
  google.protobuf.StringValue item_extra_id = 2;
  // end_time
  google.protobuf.Timestamp end_time = 3;
}

// Deactivate single menu item response
message DeactivateStoreItemExtraResponse {
  // store id
  google.protobuf.StringValue store_id = 1;
  // item id
  google.protobuf.StringValue item_extra_id = 2;
  // end_time
  google.protobuf.Timestamp end_time = 3;
}

// Deactivate single menu item extra request
message DeactivateStoreItemExtraOptionRequest {
  // store id
  google.protobuf.StringValue store_id = 1;
  // item id
  google.protobuf.StringValue item_extra_option_id = 2;
  // end_time
  google.protobuf.Timestamp end_time = 3;
}

// Deactivate single menu item extra response
message DeactivateStoreItemExtraOptionResponse {
  // store id
  google.protobuf.StringValue store_id = 1;
  // item id
  google.protobuf.StringValue item_extra_option_id = 2;
  // end_time
  google.protobuf.Timestamp end_time = 3;
}

// get menu attributes for active menus request
message GetMenusAttributesRequest {
  // store id
  google.protobuf.StringValue store_id = 1;
  // common experience type for menu filtering
  common.Experience experience = 2;
}

// get menu attributes for active menus in response
message GetMenusAttributesResponse {
  // menus with item details
  repeated MenuAttributes menu_attributes = 1;
}

// main attributes for a menu (does not include items)
message MenuAttributes {
  // menu id
  google.protobuf.StringValue id = 1;
  // menu name
  google.protobuf.StringValue name = 2;
  // is open flag
  google.protobuf.BoolValue open = 3;
  // when this menu last got updated at
  google.protobuf.Int64Value updated_at = 4;
}

// full menu
message Menu {
  // menu id
  google.protobuf.StringValue id = 1;
  // menu name
  google.protobuf.StringValue name = 2;
  // menu categories
  repeated MenuCategory categories = 3;
  // is open flag
  google.protobuf.BoolValue open = 4;
  // when this menu last got updated at
  google.protobuf.Int64Value updated_at = 5;
}

// menu category
message MenuCategory {
  // menu category id
  google.protobuf.StringValue id = 1;
  // is active
  google.protobuf.BoolValue active = 2;
  // title
  google.protobuf.StringValue title = 3;
  // subtitle
  google.protobuf.StringValue subtitle = 4;
  // menu items
  repeated MenuItem items = 5;
  // sort id
  google.protobuf.Int64Value sort_id = 6;
}

// menu item
message MenuItem {
  // menu item id
  google.protobuf.StringValue id = 1;
  // title
  google.protobuf.StringValue title = 2;
  // name
  google.protobuf.StringValue name = 3;
  // description
  google.protobuf.StringValue description = 4;
  // image url
  google.protobuf.StringValue image_url = 5;
  // active
  google.protobuf.BoolValue active = 6;
  // price
  google.protobuf.Int64Value price = 7;
  // price monetary fields
  money.MonetaryFields price_monetary_fields = 8;
  // base price
  google.protobuf.Int64Value base_price = 9;
  // base price monetary fields
  money.MonetaryFields base_price_monetary_fields = 10;
  // sort id
  google.protobuf.Int64Value sort_id = 11;
  // extras
  repeated MenuItemExtra extras = 12;
  // deactivation status
  DeactivationStatus deactivation_status = 13;
  // sku
  google.protobuf.StringValue store_internal_sku = 14;
  // tax rate - e.g. 0.087 (note to deprecate)
  google.protobuf.FloatValue tax_rate = 15;
  // open item config
  OpenItemConfig open_item_config = 16;
  // tax rate - e.g. 0.087
  google.protobuf.DoubleValue tax_rate_exact = 17;
  // channel availability status
  map<string, EntityStatus> channel_availability_map = 18;
  // dine in rate - e.g. 0.087
  google.protobuf.DoubleValue dine_in_tax_rate_exact = 19;
}

// Open Item configuration
message OpenItemConfig {
  // Item id set in runtime
  google.protobuf.StringValue item_id = 1;
  // Item name set in runtime
  google.protobuf.StringValue item_name = 2;
  // Tax strategy is used to identify if tax is included or excluded
  // in both cases it is compliant
  TaxStrategy tax_strategy = 3;
  // Tax rate percentage for each item
  google.protobuf.FloatValue tax_rate_percentage = 4;
  // Tax rate percentage for each item
  google.protobuf.DoubleValue tax_rate_exact = 5;
  // Tax rate percentage for each item for POS_DINE_IN
  google.protobuf.DoubleValue dine_in_tax_rate_exact = 6;
}

// Open Item tax strategy. Tax is applied in both cases its simply to let client know how to process the amount
enum TaxStrategy {
  // unspecified
  TAX_STRATEGY_UNSPECIFIED = 0;
  // tax included
  TAX_STRATEGY_TAX_INCLUDED = 1;
  // tax excluded
  TAX_STRATEGY_TAX_EXCLUDED = 2;
}

// menu item extra
message MenuItemExtra {
  // menu item extra id
  google.protobuf.StringValue id = 1;
  // min num options
  google.protobuf.Int64Value min_num_options = 2;
  // max num options
  google.protobuf.Int64Value max_num_options = 3;
  // min aggregate options quantity
  google.protobuf.Int64Value min_aggregate_options_quantity = 4;
  // max aggregate options quantity
  google.protobuf.Int64Value max_aggregate_options_quantity = 5;
  // min option choice quantity
  google.protobuf.Int64Value min_option_choice_quantity = 6;
  // max option choice quantity
  google.protobuf.Int64Value max_option_choice_quantity = 7;
  // num free options
  google.protobuf.Int64Value num_free_options = 8;
  // parent item id
  google.protobuf.Int64Value parent_item_id = 9;
  // parent item extra option id
  google.protobuf.Int64Value parent_item_extra_option_id = 10;
  // sort id
  google.protobuf.Int64Value sort_id = 11;
  // title
  google.protobuf.StringValue title = 12;
  // description
  google.protobuf.StringValue description = 13;
  // deactivation status
  DeactivationStatus deactivation_status = 14;
  // options
  repeated MenuItemExtraOption options = 15;
  // is active
  google.protobuf.BoolValue active = 16;
  // channel availability status
  map<string, EntityStatus> channel_availability_map = 17;
}

// menu item extra option
message MenuItemExtraOption {
  // id
  google.protobuf.StringValue id = 1;
  // name
  google.protobuf.StringValue name = 2;
  // description
  google.protobuf.StringValue description = 3;
  // deactivation status
  DeactivationStatus deactivation_status = 4;
  // active
  google.protobuf.BoolValue active = 5;
  // price
  google.protobuf.Int64Value price = 6;
  // price monetary fields
  money.MonetaryFields price_monetary_fields = 7;
  // base price
  google.protobuf.Int64Value base_price = 8;
  // base price monetary fields
  money.MonetaryFields base_price_monetary_fields = 9;
  // num child item extras
  google.protobuf.Int64Value num_child_item_extras = 10;
  // sort id
  google.protobuf.Int64Value sort_id = 11;
  // image url
  google.protobuf.StringValue image_url = 12;
  // channel availability status
  map<string, EntityStatus> channel_availability_map = 13;
}

// deactivation status
message DeactivationStatus {
  // is deactivated
  google.protobuf.BoolValue deactivated = 1;
  // end time
  google.protobuf.Timestamp end_time = 2;
}
