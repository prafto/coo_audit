syntax = "proto3";

package zero2one.v1;

import "common/common.proto";
import "google/protobuf/wrappers.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.zero2one";

// Receipt object for orders
message OrderReceipt {
  // Data for an Order Item
  message OrderItem {
    // Data for item extra (level 1)
    message Extra {
      // Name of the extra
      google.protobuf.StringValue name = 1;

      // Quantity of the extra
      google.protobuf.Int32Value quantity = 2;

      // List of options
      repeated Option options = 3;
    }

    // Data for item extra option (level 1)
    message Option {
      // Name of the option
      google.protobuf.StringValue name = 1;

      // Price of the option
      google.protobuf.StringValue price = 2;

      // List of nested extras for the option
      repeated NestedExtra extras = 3;
    }

    // Manually having at max two levels of extra options, once UG supports cyclic reference we should update this
    // Data for item extra (level 2)
    message NestedExtra {
      // Name of the extra
      google.protobuf.StringValue name = 1;

      // Quantity of the extra
      google.protobuf.Int32Value quantity = 2;

      // List of options
      repeated NestedOption options = 3;
    }

    // Data for nested item extra option (level 2)
    message NestedOption {
      // Name of the option
      google.protobuf.StringValue name = 1;

      // Price of the option
      google.protobuf.StringValue price = 2;
    }

    // Name of the item
    google.protobuf.StringValue name = 1;

    // Price of the item
    google.protobuf.StringValue price = 2;

    // Quantity of the item
    google.protobuf.Int32Value quantity = 3;

    // List of extras for the item
    repeated Extra extras = 4;
  }

  // Line item for subtotal
  message Subtotal {
    // Subtotal amount
    google.protobuf.StringValue amount = 1;
  }

  // Line item for promotion discount, for example loyalty rewards
  message PromotionDiscount {
    // Promotion Discount amount
    google.protobuf.StringValue amount = 1;
    // Promotion Discount name if want to override it
    google.protobuf.StringValue name = 2;
  }

  // Line item for partial payment
  message PartialPayment {
    // Partial payment amount
    google.protobuf.StringValue amount = 1;
  }

  // Line item for adjusted total
  message AdjustedTotal {
    // Adjusted total amount
    google.protobuf.StringValue amount = 1;
  }

  // Line item for partial payment order
  message PartialPaymentOrder {
    // Partial payment order count
    google.protobuf.Int32Value start_count = 1;

    // Partial payment order count
    google.protobuf.Int32Value end_count = 2;
  }

  // Line item for discount
  message Discount {
    // Discount amount
    google.protobuf.StringValue amount = 1;
    // Discount name if want to override it, such as "Employee Discount 10% off"
    google.protobuf.StringValue name = 2;
  }

  // Line item for surcharge
  message Surcharge {
    // Surcharge amount
    google.protobuf.StringValue amount = 1;
    // Surcharge name if want to override it, such as "Credit Card Surcharge"
    google.protobuf.StringValue name = 2;
  }

  // Line item for subtotal after adjustments like discounts
  message SubtotalAfterAdjustments {
    // Subtotal amount
    google.protobuf.StringValue amount = 1;
  }

  // Line item for tip
  message Tip {
    // Tip amount
    google.protobuf.StringValue amount = 1;
  }

  // Line item for tax
  message Tax {
    // Tax amount
    google.protobuf.StringValue amount = 1;
  }

  // Line item for total
  message Total {
    // Total amount
    google.protobuf.StringValue amount = 1;
  }

  // Line item for cash tendered
  message CashTendered {
    // Cash amount received
    google.protobuf.StringValue amount = 1;
  }

  // Line item for change
  message Change {
    // Change amount
    google.protobuf.StringValue amount = 1;
  }

  // Line item for card details
  message CardDetails {
    // Card number
    google.protobuf.StringValue number = 1;

    // Card brand
    google.protobuf.StringValue brand = 2;

    // Payment entry
    google.protobuf.StringValue entry_method = 3;
  }

  // Line item for card declined
  message CardDeclined {}

  // Line item of an order
  message LineItem {
    // Line item data
    oneof data {
      // Order item
      OrderItem order_item = 1;

      // Subtotal data
      Subtotal subtotal = 2;

      // Tip data
      Tip tip = 3;

      // Tax data
      Tax tax = 4;

      // Total data
      Total total = 5;

      // Cash tendered data
      CashTendered cash_tendered = 6;

      // Change data
      Change change = 7;

      // Card details data
      CardDetails card_details = 8;

      // Card declined data
      CardDeclined card_declined = 9;

      // Discount data
      Discount discount = 10;

      // Subtotal after adjustments data
      SubtotalAfterAdjustments subtotal_after_adjustments = 11;

      // Surcharge data
      Surcharge surcharge = 12;

      // Promotion discount data
      PromotionDiscount promotion_discount = 13;

      // Partial payment data for split payment
      PartialPayment partial_payment = 14;

      // Adjusted total data
      AdjustedTotal adjusted_total = 15;

      // Partial payment order data
      // Used to indicate order of payment in split payment
      PartialPaymentOrder partial_payment_order = 16;
    }
  }

  // Additional print info to show revenue center and other info
  message AdditionalPrintInfo {
    // Revenue center info to show on the receipt
    RevenueCenterInfo revenue_center_info = 1;
  }

  // Revenue center info to show on the receipt
  message RevenueCenterInfo {
    // Name of the revenue center
    google.protobuf.StringValue name = 1;
  }

  // Ticket number on the receipt
  google.protobuf.StringValue ticket_number = 1;

  // Name of the store
  google.protobuf.StringValue store_name = 2;

  // Address of the store
  google.protobuf.StringValue store_address = 3;

  // Phone number of the store
  google.protobuf.StringValue store_phone_number = 4;

  // Name of the server
  google.protobuf.StringValue server_name = 5;

  // Date and time of the order
  google.protobuf.StringValue ordered_date_time = 6;

  // List of line items
  repeated LineItem line_items = 7;

  // Should include the ticket number on the receipt
  google.protobuf.StringValue should_print_ticket_number = 8;

  // Additional print info to show revenue center and other info
  AdditionalPrintInfo additional_print_info = 9;

  // Fulfillment type
  common.FulfillmentType fulfillment_type = 10;
}

// Request to send order receipt
message SendOrderReceiptRequest {
  // Order UUID of the order
  google.protobuf.StringValue order_uuid = 1;

  // Email address of the recipient
  google.protobuf.StringValue email = 2;

  // Phone number of the recipient for SMS
  google.protobuf.StringValue phone_number = 3;

  // Country code for the phone number
  google.protobuf.StringValue country_code = 4;

  // Order receipt details
  OrderReceipt order_receipt = 5;

  // Store id of the store
  google.protobuf.StringValue store_id = 6;
}

// Response of the send order receipt request
message SendOrderReceiptResponse {}
