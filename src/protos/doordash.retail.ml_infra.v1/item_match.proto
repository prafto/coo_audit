syntax = "proto3";

package doordash.retail.ml_infra.v1;

import "doordash.retail.catalog.v2/common.proto";
import "google/protobuf/wrappers.proto";
import "ontology/product.proto";

option java_generic_services = true;

// SKU identifier
message ItemMatchSKUIdentifier {
  // id
  google.protobuf.StringValue id = 1;
  // version
  google.protobuf.Int64Value version = 2;
  // source
  ontology.v1.Source source = 3;
}

// Auxiliary info
message ItemMatchAuxiliaryInfo {
  // L1 category
  google.protobuf.StringValue l1_category_name = 1;
  // L2 category
  google.protobuf.StringValue l2_category_name = 2;
}

// SKU class in the matching request, it's entity agnostic and contains the identifier and attributes of the SKU
message ItemMatchSKU {
  // Identifier of the SKU
  ItemMatchSKUIdentifier identifier = 1;
  // Attributes mapping to different state, the key is the string value of ontology.v1.State
  map<string, ontology.v1.Product> products = 2;
  // Auxiliary info that's not part of the identification or product template of the SKU
  ItemMatchAuxiliaryInfo auxiliary_info = 3;
}

// Item match request sent to Argil
message ItemMatchArgilRequest {
  // Item to be matched
  ItemMatchSKU item_to_be_matched = 1;
  // List of candidate SKUs
  repeated ItemMatchSKU candidates = 2;
}

// Item match response
message ItemMatchArgilResponse {
  // Pairwise Match result
  repeated PairwiseMatchResult pairwise_match_result = 1;
}

// Pairwise Match result
message PairwiseMatchResult {
  // item to be matched identifier
  ItemMatchSKUIdentifier item_to_be_matched = 1;
  // candidate identifier
  ItemMatchSKUIdentifier candidate = 2;
  // confidence object
  catalog.v2.Confidence confidence = 3;
  // has error
  google.protobuf.BoolValue has_error = 4;
  // Error object
  PairwiseMatchingError error = 5;
}

// Error Object
message PairwiseMatchingError {
  // ErrorCode
  // buf:lint:ignore ENUM_VALUE_PREFIX
  // buf:lint:ignore ENUM_ZERO_VALUE_SUFFIX
  enum ErrorCode {
    // unspecified
    UNSPECIFIED = 0;
    // validation error
    VALIDATION_ERROR = 1;
  }

  // error code
  ErrorCode error_code = 1;
  // validation result
  ValidationResult validation_result = 2;
}

// validation result object
message ValidationResult {
  // attribute validation result
  repeated ItemAttributeValidationResult attribute_validation_result = 1;
}

// Item attribute validation result
message ItemAttributeValidationResult {
  // item identifier
  ItemMatchSKUIdentifier identifier = 1;
  // attribute id
  google.protobuf.StringValue attribute_id = 2;
  // attribute name
  google.protobuf.StringValue attribute_name = 3;
  // attribute validation result type
  repeated AttributeValidationResultType attribute_validation_result = 4;
}

// attribute validation result type
// buf:lint:ignore ENUM_VALUE_PREFIX
// buf:lint:ignore ENUM_ZERO_VALUE_SUFFIX
enum AttributeValidationResultType {
  // UNSPECIFIED
  UNSPECIFIED = 0;
  // missing attribute
  MISSING_ATTRIBUTE = 1;
  // missing value
  MISS_VALUE = 2;
}
