syntax = "proto3";

package merchant_product_gateway.v1;

import "google/protobuf/wrappers.proto";
import "menu/menu.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.mpg";

// Entity in the order/ cart to be validated, with the item/ product and its associated modifiers
message ValidationEntity {
  // identifier of the top item/ product. what does top item mean? when an item has modifiers, the item is called top item
  ProductIdentifier product_identifier = 1;
  // Attached information with the entity, including the modifiers info.
  // For now only rx has this field, it may apply to NV stores in the future when their items have modifiers.
  AssociatedValidationInfo attached_validation_info = 2;
}

// associated validation info with the entity
message AssociatedValidationInfo {
  // special instruction associated
  google.protobuf.StringValue special_instruction = 1;
  // extra options selected with the item, currently only set for rx stores; in the future it may also be set for NV stores when they have modifiers
  repeated ExtraOption selected_extra_options = 2;
  // quantity of entity
  google.protobuf.Int32Value quantity = 3;
}

// extra option with the entity
message ExtraOption {
  // option id
  google.protobuf.StringValue option_id = 1;
  // the quantity selected for this option
  google.protobuf.Int32Value quantity = 2;
  // nested extra options under this extra option
  repeated ExtraOption selected_extra_options = 3;
}

// identifiers of the entity
message EntityIdentifierInfo {
  // menu id
  google.protobuf.StringValue menu_id = 1;
  // category id
  google.protobuf.StringValue category_id = 2;
  // identifier of the top item/ product. what does top item mean? when an item has modifiers, the item is called top item
  ProductIdentifier product_identifier = 3;
}

// validation errors
message ValidationError {
  // identifier of the top item/ product. what does top item mean? when an item has modifiers, the item is called top item
  ProductIdentifier product_identifier = 1;
  // error of the entities associated with the item/ product, it can be associated with the item itself or its modifiers
  EntityError entity_error = 2;
}

// error of entity
message EntityError {
  // entity id
  google.protobuf.StringValue entity_id = 1;
  // entity type
  EntityType entity_type = 2;
  // error code and error messages sources: https://docs.google.com/document/d/1RBgKaFSN35n9S36OBnZLgZCLLNtfvdIVTCmLJS7zbNw/edit#bookmark=id.gschgyp5bjq8
  // error message explaining what went wrong
  google.protobuf.StringValue error_message = 3;
  // error code
  google.protobuf.Int32Value error_code = 4;

  // additional error details needed to build a customer facing error message
  map<string, string> error_details = 5;
}

// product identifier; either item id or merchant supplied id
message ProductIdentifier {
  // product id to represent the identifier
  oneof id {
    // item id
    google.protobuf.StringValue item_id = 1;
    // merchant supplied id
    google.protobuf.StringValue merchant_supplied_id = 2;
  }
}

// possible types of the entities
enum EntityType {
  // unknown type
  ENTITY_TYPE_UNSPECIFIED = 0;
  // product/ item
  ENTITY_TYPE_PRODUCT = 1;
  // extra
  ENTITY_TYPE_EXTRA = 2;
  // option
  ENTITY_TYPE_OPTION = 3;
}

// entity maps from menu
message EntityMaps {
  // item id -> item mapping
  map<string, menu.Item> item_map = 1;
  // extra id -> extra mapping
  map<string, menu.Extra> extra_map = 2;
  // entity id -> menu dag mapping which contains the nodes and the edges
  map<string, menu.MenuDAG> dag_map = 3;
}
