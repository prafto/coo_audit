syntax = "proto3";
package marketplace_intelligence.v1;

import "doordash.api/annotations.proto";
import "google/api/annotations.proto";
import "google/protobuf/wrappers.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.marketplace_intelligence";

// Request to get proactive education settings for a dasher
message GetDasherProactiveEducationSettingsRequest {
  // The id of the dasher to get proactive education settings for
  string dasher_id = 1;
}

// Response to get proactive education settings for a dasher
message GetDasherProactiveEducationSettingsResponse {
  // Whether proactive education screen should be shown to the dasher
  google.protobuf.BoolValue show_proactive_education = 1;
}

// Proactive education service: https://docs.google.com/document/d/1zbO84E3H42FpOe25txSQ97YyCobRlNICfqqvjfe4JfI/edit#heading=h.jujyf53ovqoy
service ProactiveEducationService {
  // Unified Gateway annotations
  option (doordash.api.service) = {
    name: "marketplace-intelligence-service-grpc-tier0-api"
    url: "marketplace-intelligence-service-grpc-tier0-api.service.prod.ddsd"
    port: 50051
    name_spaces: ["marketplace-intelligence-service"]
    // api_key_name should follow a format similar to
    api_key_name: "MARKETPLACE-INTELLIGENCE-API-KEY"
    owner: {
      name: "mx-efficiency"
      id: "merchant-efficiency-default-bucket"
      slack_channel: "#eng-marketplace-intelligence"
      email_alias: "quality-cancellations@doordash.com"
    }
    target_products: [IVR]
  };

  // Get proactive education settings for a dasher
  rpc GetDasherProactiveEducationSettings(GetDasherProactiveEducationSettingsRequest) returns (GetDasherProactiveEducationSettingsResponse) {
    option (google.api.http) = {
      // {HttpMethod}: "{pathPattern}"
      get: "/marketplace-intelligence-service/v1/dashers/{dasher_id}/proactive-education-settings"
    };

    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: PROD
      authorization: [API_KEY]
      target_products: [IVR]
      slo_config: {
        critical_alerts_enabled: true
        critical_5m_burn_threshold: 3000
        critical_5m_burn_sustain_seconds: 300
        p99_latency: 1
      }
    };
  }
}
