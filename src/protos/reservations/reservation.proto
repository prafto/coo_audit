syntax = "proto3";
package reservations;

import "common/code.proto";
import "common/date.proto";
import "google/protobuf/wrappers.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/struct.proto";

option java_multiple_files = true;
option java_generic_services = true;
option java_package = "com.doordash.rpc.reservations";
option go_package = "reservations";

// ReservationService exposes APIs to make and manage reservations with External Reservation Providers
service ReservationService {
    // CreateReservation books a reservation
    rpc CreateReservation (CreateReservationRequest) returns (CreateReservationResponse);

    // GetReservation retrieves a reservation
    rpc GetReservation (GetReservationRequest) returns (GetReservationResponse);

    // UpdateReservation updates a reservation
    rpc UpdateReservation (UpdateReservationRequest) returns (UpdateReservationResponse);

    // GetReservationsForCx retrieves reservations created for cx
    rpc GetReservationsForCx (GetReservationsForCxRequest) returns (GetReservationsForCxResponse);

    // GetAvailabilitySlots retrieves availability slots for a particular merchant
    rpc GetAvailabilitySlots (GetAvailabilitySlotsRequest) returns (GetAvailabilitySlotsResponse);

    // PostAvailabilitySlots posts availability slots for a particular merchant
    rpc PostAvailabilitySlots (PostAvailabilitySlotsRequest) returns (PostAvailabilitySlotsResponse);

    // UpdateReservationByProvider updates a reservation - call initiated by reservation partner
    rpc UpdateReservationByProvider (UpdateReservationByProviderRequest) returns (UpdateReservationByProviderResponse);
}

message CreateReservationRequest {
    // DoorDash store id as defined in MDS store_service
    google.protobuf.Int64Value store_id = 1;

    // Size of the party
    google.protobuf.Int32Value party_size = 2;

    // Reservation start time in ISO8601 format - expected to be a direct pass through without requiring any timestamp/timezone conversion in the platform.  
    google.protobuf.StringValue start_time = 3;

    // Seating type
    google.protobuf.StringValue seating_type = 4;

    // Special requests from Cx
    google.protobuf.StringValue consumer_special_request = 5;

    // User info
    UserInformation user_information = 6;
}

message UserInformation {
    google.protobuf.StringValue consumer_id = 1;
    google.protobuf.StringValue first_name = 2;
    google.protobuf.StringValue last_name = 3;

    // Email will be validated for format correctness
    google.protobuf.StringValue email = 4;

    // Phone will be validated for format correctness
    google.protobuf.StringValue phone = 5;
}

message CreateReservationResponse {
    // Reservation Status
    ReservationStatus status = 1;

    // DoorDash reservation identifier
    google.protobuf.StringValue reservation_id = 2;
    
    // Error message
    google.protobuf.StringValue error = 3;

    // Status code
    code.Code code = 4;
}

enum ReservationStatus {
    // unspecified status
    RESERVATION_STATUS_UNSPECIFIED = 0;

    // new status
    RESERVATION_STATUS_NEW = 1;

    // confirmed status
    RESERVATION_STATUS_CONFIRMED = 2;

    // accepted status
    RESERVATION_STATUS_ACCEPTED = 3;

    // rejected status
    RESERVATION_STATUS_REJECTED = 4;
    
    // conflict status
    RESERVATION_STATUS_CONFLICT = 5;

    // customer no show
    RESERVATION_STATUS_CUSTOMER_NO_SHOW = 6;

    // customer cancelled
    RESERVATION_STATUS_CUSTOMER_CANCELLED = 7;

    // merchant cancelled
    RESERVATION_STATUS_MERCHANT_CANCELLED = 8;

    // internal error
    RESERVATION_STATUS_INTERNAL_ERROR = 9;
    
    // unknown status
    RESERVATION_STATUS_UNKNOWN = 10;
}

message UpdateReservationRequest {
    // DoorDash reservation identifier
    google.protobuf.StringValue reservation_id = 1;

    // Size of the party
    google.protobuf.Int32Value party_size = 2;

    // Reservation start time in ISO8601 format - expected to be a direct pass through without requiring any timestamp/timezone conversion in the platform.  
    google.protobuf.StringValue start_time = 3;

    // Seating type
    google.protobuf.StringValue seating_type = 4;

    // Special requests from Cx
    google.protobuf.StringValue consumer_special_request = 5;
}

message UpdateReservationResponse {
    // Error message
    google.protobuf.StringValue error = 1;

    // Status code
    code.Code code = 2;
}

message UpdateReservationByProviderRequest {
    // Identity client id for the partner
    google.protobuf.StringValue identity_client_id = 1;

    // DoorDash reservation identifier - shared with reservation partners
    google.protobuf.StringValue doordash_reservation_id = 2;

    // Reservation Status
    ReservationStatus status = 3;

    // Size of the party
    google.protobuf.Int32Value party_size = 4;

    // Reservation start time in ISO8601 format - expected to be a direct pass through without requiring any timestamp/timezone conversion in the platform.  
    google.protobuf.StringValue start_time = 5;

    // Seating type
    google.protobuf.StringValue seating_type = 6;

    // Slot identifier - optional
    google.protobuf.StringValue slot_id = 7;

    // Merchant special instructions
    google.protobuf.StringValue merchant_special_instructions = 8;
}

message UpdateReservationByProviderResponse {
    // Error message
    google.protobuf.StringValue error = 1;

    // Status code
    code.Code code = 2;
}

message GetReservationRequest {
    // DoorDash reservation identifier
    google.protobuf.StringValue reservation_id = 1;
}

message GetReservationResponse {
    ReservationDetails reservation_details = 1;
    
    // Status code
    code.Code code = 2;

    // Error message
    google.protobuf.StringValue error = 3;
}

message ReservationDetails {
    // DoorDash reservation identifier
    google.protobuf.StringValue reservation_id = 1;

    // Reservation Status
    ReservationStatus status = 2;

    // DD Cx Id
    google.protobuf.StringValue consumer_id = 3;

    // DoorDash store id as defined in MDS store_service
    google.protobuf.Int64Value store_id = 4;

    // Size of the party
    google.protobuf.Int32Value party_size = 5;

    // Reservation start time in ISO8601 format - expected to be a direct pass through without requiring any timestamp/timezone conversion in the platform. 
    google.protobuf.StringValue start_time = 6;

    // Seating type
    google.protobuf.StringValue seating_type = 7;

    // Special instructions from Cx
    google.protobuf.StringValue consumer_special_request = 8;

    // Reservation created_at timestamp
    google.protobuf.Timestamp created_at = 9;

    // Reservation updated_at timestamp
    google.protobuf.Timestamp updated_at = 10;
}

message GetReservationsForCxRequest {
    // DoorDash consumer identifier
    google.protobuf.StringValue consumer_id = 1;
}

message GetReservationsForCxResponse {
    repeated ReservationDetails reservation_details = 1;

    // Status code
    code.Code code = 2;

    // Error message
    google.protobuf.StringValue error = 3;
}

message GetAvailabilitySlotsRequest {
    // DoorDash store id as defined in MDS store_service
    google.protobuf.Int64Value store_id = 1;

    // Size of the party
    google.protobuf.Int32Value party_size = 2;

    // Search for date - YYYY-MM-DD
    google.protobuf.StringValue date = 3;
}

message GetAvailabilitySlotsResponse {
    // Availability slot details
    repeated Slot slots = 1;

    // Status code
    code.Code code = 2;

    // Error message
    google.protobuf.StringValue error = 3;
}

message Slot {
    // Slot id - optional
    google.protobuf.StringValue id = 1;
    
    // Seating type
    google.protobuf.StringValue seating_type = 2;

    // Reservation start time in ISO8601 format - expected to be a direct pass through without requiring any timestamp/timezone conversion in the platform. 
    google.protobuf.StringValue start_time = 3;

    // Party size for the slot
    google.protobuf.Int32Value party_size = 4;
}

message PostAvailabilitySlotsRequest {
    // Identity client id for the partner
    google.protobuf.StringValue identity_client_id = 1;

    // Merchant Id given by reservation partner
    google.protobuf.StringValue merchant_id = 2;

    repeated Slot slots = 3;

    // Search for date - YYYY-MM-DD
    google.protobuf.StringValue replace_date = 4;
}

message PostAvailabilitySlotsResponse {
    // Status code
    code.Code code = 1;

    // Error message
    google.protobuf.StringValue error = 2;
}
