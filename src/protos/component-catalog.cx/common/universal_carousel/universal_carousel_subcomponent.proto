syntax = "proto3";

package component_catalog.cx.common.universal_carousel.v1;

import "component-catalog.common/shared/components/image.proto";
import "component-catalog.cx/common/chip/chip.proto";
import "component-catalog.cx/common/headers/section_headers/section_header_card.proto";
import "component-catalog.cx/common/headers/section_headers/section_header_default.proto";
import "component-catalog.cx/common/universal_carousel/more_content_card.proto";
import "component-catalog.cx/nv/common/retail_item/retail_item.proto";
import "component-catalog.cx/promo/creative_card.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/wrappers.proto";

option go_package = "github.com/doordash/services-protobuf/generated/component-catalog.cx/common/universal_carousel";
option java_multiple_files = true;
option java_package = "com.doordash.rpc.component_catalog.cx.common.universal_carousel";

// Representative of the repeated subcomponents that can be inside of a Universal Carousel
//
// New types of subcomponents can be added here as needed
message CarouselSubcomponent {
  // Types of subcomponents that can be rendered inside of a Universal Carousel
  oneof value {
    // Standard carousel header
    component_catalog.cx.common.headers.section_headers.v1.SectionHeaderDefault standard_header = 1;
    // Scrollable content with dynamic height
    DynamicHeightContent dynamic_height_content = 2;
    // Scrollable content with static height
    FixedHeightContent fixed_height_content = 3;
    // Card-style carousel header
    component_catalog.cx.common.headers.section_headers.v1.SectionHeaderCard card_header = 4;
  }
}

// Carousel height is calculated based on known contents and changes with scroll.
// Supports pagination, and dynamic height.
// Should be used for most use cases.
message DynamicHeightContent {
  // Repeated list of dynamic height content
  repeated Content contents = 1;

  // Types that can be rendered with a dynamic carousel height
  message Content {
    // One of list that contains the supported content types
    oneof value {
      // Standard retail item card
      component_catalog.cx.nv.common.retail_item.v1.RetailItem retail_item_card = 1;
      // More content card that displays icon and text for Cx to view more contents of the collection
      MoreContentCard more_content_card = 2;
      // Chip that can be used to display attributes, filters, or actions in a compact form.
      component_catalog.cx.common.chip.v1.Chip chip = 3;
      // Creative card that can be used to display image or video
      component_catalog.cx.promo.v1.CreativeCard creative_card = 4;
    }
  }
}

// Does not support pagination, dynamic height.  Height is calculated based on known contents and does not change with scroll.
// Properties
// - total set of contents are known at first draw.
// - each type of content can report its minimum height.
// Should only be used for VERY SPECIFIC use cases.
message FixedHeightContent {
  // Repeated list of static height content
  repeated Content contents = 1;

  // each type must be able to calculate its own minimum height and accept a fixed height from the carousel
  message Content {
    // One of list that contains the supported content types
    oneof value {
      // Compact retail item card
      component_catalog.cx.nv.common.retail_item.v1.RetailItem retail_item_card_compact = 1;
    }
  }
}
