syntax = "proto3";

package component_catalog.cx.promo.banner.v1;

import "component-catalog.cx/common/primitives/images.proto";
import "component-catalog.cx/promo/banner/banner_actions.proto";
import "google/protobuf/wrappers.proto";

option go_package = "github.com/doordash/services-protobuf/generated/component-catalog.cx/promo/banner";
option java_multiple_files = true;
option java_package = "com.doordash.rpc.component_catalog.cx.promo.banner";

// Banner component
message Banner {
  // Remote background image for a banner
  RemoteImage background_image = 1;

  // Click action for a banner
  component_catalog.cx.promo.banner.v1.BannerActions click_action = 2;

  // Placeholder text for a banner
  google.protobuf.StringValue placeholder_text = 3;

  // Title text for a banner.
  google.protobuf.StringValue title_text = 4;

  // Styling for banner element.
  BannerElementStyling styling = 5;

  // Extra styling for banner element.
  map<string, BannerElementStyling> extra_styles = 6;

  // Styling for the banner element.
  message BannerElementStyling {
    // Banner font styling for a banner
    BannerFont font = 1;

    // Background color for a banner
    google.protobuf.StringValue background_color = 2;

    // Text color as a HEX string
    string color = 3;

    // Option to add underlined under the element
    bool is_underlined = 4;

    // Insets to be applied to the banner container
    CopyInsets copy_insets = 5;

    // Percentage-based text insets
    CopyInsets percentage_copy_insets = 6;

    // Alignment styling for a banner
    string alignment = 7;

    // Font for the banner
    message BannerFont {
      // Font size
      double size = 1;

      // Font family
      string family = 2;
    }

    // Insets for the banner.
    message CopyInsets {
      // Top
      double top = 1;

      // Left
      double left = 2;

      // Right
      double right = 3;

      // Bottom
      double bottom = 4;
    }
  }
}

// An image stored remotely as opposed to on the client
message RemoteImage {
  // URI of the image
  string url = 1;

  // A local placeholder while the remote image is loading
  LocalImage placeholder = 2;

  // Clipping style for the corners of the image
  component_catalog.cx.common.primitives.v1.ImageClipStyle clip_style = 3;
}

// An image stored locally on the client
message LocalImage {
  // Reference used to look up the local asset
  string reference = 1;

  // Domain for the reference (e.g. Prism icon)
  LocalImageDomain domain = 2;

  // Clipping style for the corners of the image
  component_catalog.cx.common.primitives.v1.ImageClipStyle clip_style = 3;

  // The doman for a local image (e.g. Prism icon).
  enum LocalImageDomain {
    // Unspecified.
    // buf:lint:ignore ENUM_VALUE_PREFIX
    LOCAL_IMAGE_DOMAIN_UNSPECIFIED = 0;

    // Domain for a Prism icon.
    // buf:lint:ignore ENUM_VALUE_PREFIX
    PRISM_ICON = 1;
  }
}
