syntax = "proto3";

package component_catalog.cx.discovery.store_card.v1;

import "action-catalog/cx/discovery/store_card_action.proto";
import "component-catalog.cx/discovery/store_card/hero/component.proto";
import "component-catalog.cx/discovery/store_card/store_info/component.proto";
import "component-catalog.cx/promo/badge.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/wrappers.proto";

option go_package = "github.com/doordash/services-protobuf/generated/component-catalog.cx/discovery/store_card";
option java_multiple_files = true;
option java_package = "com.doordash.rpc.component_catalog.cx.discovery.store_card";

// Components used to render the store card
message StoreCard {
  // store info
  component_catalog.cx.discovery.store_card.store_info.v1.StoreInfoComponent store_info = 9;

  // hero - the rectangular area above the store info
  component_catalog.cx.discovery.store_card.hero.v1.Hero hero = 1;
  // Whether the client should render the hero above the store_info or not.
  google.protobuf.BoolValue is_hero_above_info = 2;

  // Should actually be called should_grey_out_store_card. Not updating since client already implemented this field.
  google.protobuf.BoolValue is_currently_available = 3;
  // Whether the client should render a 1px separator at the bottom of the component.
  google.protobuf.BoolValue has_separator = 4;

  // The identifier associated with the store.
  google.protobuf.StringValue store_id = 5;
  // Layout enum which informs the client how configure the overall UI. For example,
  // sending "STORE_CARD_LAYOUT_FEED" let's client know to make `hero` larger and add
  // more paddings for the Feed use case.
  store_card.v1.Layout layout = 6;
  // Logging fields associated with Store Card, sent by client to IGUAZU.
  google.protobuf.Struct logging = 7;
  // The action to be performed by client when the store card has been clicked.
  action_catalog.cx.discovery.v1.StoreCardAction on_click = 8;
  // Represents disclosure content of StoreCard. can be different CTAs.
  store_card.v1.Disclosure disclosure = 10;
  // ListHeroFormat enum to drive the hero image size for list layout. Optional parameter.
  store_card.v1.ListHeroFormat list_hero_format = 11;
  // Overrides aspect ratio for feed layout hero image if provided
  // Formula: hero_height = width / override_feed_hero_aspect_ratio
  google.protobuf.DoubleValue override_feed_hero_aspect_ratio = 12;
  // Badges for StoreCard
  repeated component_catalog.cx.promo.v1.Badge badges = 13;
}

// Layout enum which informs the client how configure the overall UI.
// buf:lint:ignore ENUM_VALUE_PREFIX
enum Layout {
  // unspecified layout
  STORE_CARD_LAYOUT_UNSPECIFIED = 0;
  // feed layout, e.g Homepage Feed or See All Feed.
  STORE_CARD_LAYOUT_FEED = 1;
  // carousel layout, e.g Homepage Carousels.
  STORE_CARD_LAYOUT_CAROUSEL = 2;
  // square layout, e.g Square store card in a two-column grid.
  STORE_CARD_LAYOUT_SQUARE = 3;
  // list layout, e.g. List Component
  STORE_CARD_LAYOUT_LIST = 4;
}

// Represents trailing content of the StoreCard.
message Disclosure {
  // Variants of Disclosure content
  oneof value {
    // Represents Save For Later trailing button
    SaveForLater save_for_later = 1;
  }
}

// Represents Disclosure SFL.
message SaveForLater {
  // The identifier associated with the current store.
  google.protobuf.StringValue store_id = 1;
  // Boolean value that notifies client whether or not a customer has saved this store
  google.protobuf.BoolValue is_saved = 2;
  // Logging fields associated with SFL action. Optional field.
  google.protobuf.Struct logging = 3;
}

// Format enum  which informs the client how to configure the hero image for list layout
enum ListHeroFormat {
  // Unspecified size. Client should handle with default value
  LIST_HERO_FORMAT_UNSPECIFIED = 0;
  // Small size.
  LIST_HERO_FORMAT_SMALL = 1;
  // Medium size.
  LIST_HERO_FORMAT_MEDIUM = 2;
  // Large size.
  LIST_HERO_FORMAT_LARGE = 3;
}
