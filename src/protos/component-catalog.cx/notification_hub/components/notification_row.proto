syntax = "proto3";

package component_catalog.cx.notification_hub.components.v1;

import "action-catalog/action.proto";
import "component-catalog.common/prism/components/text.proto";
import "component-catalog.common/prism/tokens/color.proto";
import "component-catalog.common/prism/tokens/space.proto";
import "component-catalog.common/shared/components/image.proto";
import "component-catalog.cx/promo/badge.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option go_package = "github.com/doordash/services-protobuf/generated/component-catalog.cx/notification_hub/components";
option java_multiple_files = true;
option java_package = "com.doordash.rpc.component_catalog.cx.notification_hub.components";

// Notification Row
message NotificationRow {
  // Title
  component_catalog.common.prism.components.v1.Text title = 1;
  // Description
  component_catalog.common.prism.components.v1.Text description = 2;
  // How long ago the notification was created
  component_catalog.common.prism.components.v1.Text relative_time = 3;
  // Notification icon
  component_catalog.common.shared.components.v1.Image icon = 4;
  // ID of the child component to be shown, if any
  google.protobuf.StringValue child = 5;
  // Countdown Timer
  CountdownTimer countdown_timer = 6;
  // Text that should be shown in a chat bubble, if any
  google.protobuf.StringValue chat_bubble_text = 7;
  // Whether or not the notification was read
  bool read_state = 8;
  // Badges
  repeated component_catalog.cx.promo.v1.Badge badges = 9;
  // Spacing on top
  component_catalog.common.prism.tokens.v1.Space top_space = 10;
  // Spacing on trailing end
  component_catalog.common.prism.tokens.v1.Space trailing_space = 11;
  // Spacing on bottom
  component_catalog.common.prism.tokens.v1.Space bottom_space = 12;
  // Spacing on leading end
  component_catalog.common.prism.tokens.v1.Space leading_space = 13;
  // Supported actions
  repeated action_catalog.v1.Action actions = 14;
}

// Countdown Timer
message CountdownTimer {
  // Text to show when the countdown has not ended; can include placeholders to be hydrated by the frontend in realtime
  string timer_text = 1;
  // Text to show when the countdown has ended (i.e. countdown hit 0)
  string expired_text = 2;
  // When the countdown should end
  google.protobuf.Timestamp expiry_at = 3;
  // When the text should start actively counting down second-by-second (as opposed to a more general "Ends in 2 days")
  google.protobuf.Timestamp countdown_at = 4;
  // Text color to use when the countdown is active
  component_catalog.common.prism.tokens.v1.Color active_color = 5;
  // Text color to use when the countdown is inactive
  component_catalog.common.prism.tokens.v1.Color inactive_color = 6;
}
