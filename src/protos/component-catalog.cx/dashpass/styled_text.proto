syntax = "proto3";

package component_catalog.cx.dashpass.v1;

import "component-catalog.common/prism/tokens/color.proto";
import "component-catalog.common/prism/tokens/typography.proto";
import "google/protobuf/wrappers.proto";

option go_package = "github.com/doordash/services-protobuf/generated/component-catalog.cx/dashpass";
option java_multiple_files = true;
option java_package = "com.doordash.rpc.component_catalog.cx.dashpass";

// DashPass Styled Text Component
message StyledText {
  // The alignment of the text
  enum TextAlignment {
    // Aligns text with the center of the container
    TEXT_ALIGNMENT_CENTER_UNSPECIFIED = 0;
    // Aligns text with the leading edge of the container
    // Left in left-to-right languages and right in right-to-left languages
    TEXT_ALIGNMENT_LEADING = 1;
    // Aligns text with the trailing edge of the container
    // Right in left-to-right languages and left in right-to-left languages
    TEXT_ALIGNMENT_TRAILING = 2;
  }
  // The alignment of the text
  TextAlignment alignment = 1;
  // Segments
  repeated TextSegment segments = 2;
}

// Text segment
message TextSegment {
  // The style of the text segment enum
  enum Style {
    // default to no style if unspecified
    NONE_UNSPECIFIED = 0;
    UNDERLINE = 1;
    ITALIC = 2;
    BOLD = 3;
    STRIKE_THROUGH = 4;
  }
  // The semantic style of the text (e.g. Body2, Caption1)
  component_catalog.common.prism.tokens.v1.Typography typography = 1;
  // The color of the text (e.g USAGE_COLOR_BACKGROUND_SUBDUED_HOVERED)
  component_catalog.common.prism.tokens.v1.Color color = 2;
  // Text to be displayed
  string value = 3;
  // url link for the text segment if there is one. If unset, then
  // the text segment is not an inline link
  google.protobuf.StringValue url = 4;
  // a list of styles the text segment could have.
  // e.g., an inline link can be both ITALIC and UNDERLINE
  repeated Style styles = 5;
}
