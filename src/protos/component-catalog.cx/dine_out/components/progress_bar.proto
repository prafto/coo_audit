syntax = "proto3";
package component_catalog.cx.dine_out.components.v1;

import "action-catalog/action.proto";
import "component-catalog.common/prism/tokens/color.proto";
import "google/protobuf/any.proto";
import "google/protobuf/wrappers.proto";

option go_package = "github.com/doordash/services-protobuf/generated/component-catalog.cx/dine_out/components";
option java_multiple_files = true;
option java_package = "com.doordash.rpc.component_catalog.cx.dine_out.components";

// Progress bar is our custom component to display a progress
// bar with support for annotations at discrete points along the bar
message ProgressBar {
  // Progress bar config
  ProgressBarConfig progress_bar = 1;
  // markers used to annotate progress bar
  repeated Marker markers = 2;
  // actions to be performed when the option is clicked
  repeated action_catalog.v1.Action actions = 3;
}

// Progress Bar Config
message ProgressBarConfig {
  // Initial Position
  PositionConfig initial_position = 1;
  // Fill color for bar
  component_catalog.common.prism.tokens.v1.Color filled_color = 2;
  // Unfilled color for bar
  component_catalog.common.prism.tokens.v1.Color unfilled_color = 3;
}

// Marker for progress bar
message Marker {
  // Bar component
  BarComponent bar_component = 1;
  // Below bar component
  BarComponent below_bar_component = 2;
  // Position
  PositionConfig position = 3;
}

// Component to show within progress bar
message BarComponent {
  // Type of component
  oneof bar_component {
    // Standard Component to render
    StandardComponent standard_component = 1;
    // Mosaic component to render
    MosaicComponent mosaic_component = 2;
  }
}

// Standard Component
message StandardComponent {
  // Type
  StandardComponentType type = 1;
  // Foreground color
  component_catalog.common.prism.tokens.v1.Color foreground_color = 2;
}

// Mosaic Component
message MosaicComponent {
  // Mosaic component to render
  google.protobuf.Any value = 1;
}

// Standard component types
enum StandardComponentType {
  // Component type is unspecified
  STANDARD_COMPONENT_TYPE_UNSPECIFIED = 0;
  // Component type is a circle
  STANDARD_COMPONENT_TYPE_CIRCLE = 1;
}

// Position Config
message PositionConfig {
  // Type of Initial Position
  oneof position_config {
    // Discrete point
    DiscretePoint discrete_point = 1;
  }
}

// Discrete point
message DiscretePoint {
  // Point here is point between 0 - 100 which represents the length of the progress bar
  int32 point = 1;
}
