syntax = "proto3";

package taulu.v1;

import "google/protobuf/timestamp.proto";
import "taulu/taulu_types.proto";
import "taulu/taulu_values.proto";

option go_package = "github.com/doordash/services-protobuf/generated/taulu";
option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.taulu";

// TauluProxy is the GRPC service for the Taulu Proxy API.
service TauluProxyService {
  // Selects rows from a table.
  rpc Select(SelectRequest) returns (SelectResponse);
  // Upserts a row into a table.
  rpc Upsert(UpsertRequest) returns (UpsertResponse);
  // Deletes a row from a table.
  rpc Delete(DeleteRequest) returns (DeleteResponse);
}

// SelectRequest is the request to perform a select operation.
message SelectRequest {
  // The name of the table to perform the operation on.
  string table = 1;
  // The keys to select from the table.
  repeated string keys = 2;
  // The key-value pairs to filter the operation by.
  map<string, Value> by = 3;
  // The maximum number of rows to return.
  uint32 limit = 4;
}

// SelectResponse is the response to a select operation.
message SelectResponse {
  // The rows selected from the table.
  Result result = 1;
}

// UpsertRequest is the request to perform an upsert operation.
message UpsertRequest {
  // The name of the table to perform the operation on.
  string table = 1;
  // The key-value pairs to filter the operation by.
  map<string, Value> by = 2;
  // The key-value pairs to update/insert into the table for this operation.
  map<string, Value> with = 3;
  // The idempotency key which will be used to deduplicate requests at the storage layer
  IdempotencyKey idempotency_key = 4;
}

// UpsertResponse is the response to an upsert operation.
message UpsertResponse {
  // Response is intentionally empty
}

// DeleteRequest is the request to perform a delete operation.
message DeleteRequest {
  // The name of the table to perform the operation on.
  string table = 1;
  // The key-value pairs to filter the operation by.
  map<string, Value> by = 2;
}

// DeleteResponse is the response to a delete operation.
message DeleteResponse {
  // Response is intentionally empty
}

// Result represents the result of a single query.
message Result {
  // An associative array of key names.
  repeated string keys = 1;
  // A list of rows containing the values associated to the keys.
  repeated Row rows = 2;
}

// Row represents the values of a single row in a table.
message Row {
  // The values of the row.
  repeated Value values = 1;
}
