syntax = "proto3";

package taulu.v1;

import "taulu/taulu_kinds.proto";

option go_package = "github.com/doordash/services-protobuf/generated/taulu";
option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.taulu";

// MetaTypeConfig is a configuration of a meta type
message MetaTypeConfig {
  // The name of the meta type
  string name = 1;

  // The description of the meta type
  string description = 3;

  // The extractor for the meta type
  MetaTypeExtractor extractor = 4;

  // Kind of the meta type
  Kind kind = 5;
}

// MetaTypeExtractor describes how to extract a value for a meta column
message MetaTypeExtractor {
  // The type of extractor
  oneof extractor {
    // OTELExtractor
    OtelExtractor otel = 1;
    // TimestampExtractor
    TimestampExtractor timestamp = 2;
    // HeaderExtractor
    HeaderExtractor header = 3;
    // ContextExtractor
    ContextExtractor context = 4;
    // IdGenExtractor
    IdGenExtractor id_gen = 5;
  }
}

// OTELExtractor is a type of meta column whose value is extracted from the OTEL baggage
// The underlying type of the extracted field is always COLUMN_TYPE_STRING
message OtelExtractor {
  // The name of the baggage field to extract
  string baggage_field_name = 1;
}

// TimestampExtractor is a type of meta column whose value is applied as a Timestamp when the row is inserted/updated.
// The underlying type of the extracted field is always COLUMN_TYPE_DATETIME
message TimestampExtractor {
  // If set to true, the timestamp will only be applied on insert. Otherwise, it will be applied on update as well.
  bool only_update_on_insert = 1;
}

// HeaderExtractor is a type of meta column whose value is extracted from the request headers.
// The underlying type of the extracted field is always COLUMN_TYPE_STRING
message HeaderExtractor {
  // The name of the header to extract
  string header_name = 1;
}

// ContextExtractor is a type of meta column whose value is extracted from the request context
// The underlying type of the extracted field is always COLUMN_TYPE_STRING
message ContextExtractor {
  // The name of the context field to extract
  ContextExtractorType type = 1;
}

// ContextExtractorType is the type of context extractor. Each type corresponds to a different context field that
// Taulu knows how to extract.
enum ContextExtractorType {
  // CONTEXT_EXTRACTOR_TYPE_UNSPECIFIED
  CONTEXT_EXTRACTOR_TYPE_UNSPECIFIED = 0;
  // CONTEXT_EXTRACTOR_TYPE_T0_TENANT
  CONTEXT_EXTRACTOR_TYPE_T0_TENANT = 1;
  // CONTEXT_EXTRACTOR_TYPE_FULL_TENANT
  CONTEXT_EXTRACTOR_TYPE_FULL_TENANT = 2;
  // CONTEXT_EXTRACTOR_TYPE_CLIENT
  CONTEXT_EXTRACTOR_TYPE_CLIENT = 3;
}

// IdGenExtractor is a type of meta column whose value is generated by an id generator
// The underlying type of the extracted field is always COLUMN_TYPE_UUID
message IdGenExtractor {
  // The name of the id generator to use
  string id_generator_name = 1;
}
