syntax = "proto3";

package taulu.v1;

import "google/protobuf/timestamp.proto";

option go_package = "github.com/doordash/services-protobuf/generated/taulu";
option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.taulu";

// Type is a message that represents generic type information.
message Type {
  // The specific type information.
  oneof type {
    // meta represents type information for a meta column.
    MetaType meta = 1;
    // bool represents type information for a boolean column.
    BoolType bool = 2;
    // bytes represents type information for a bytes column.
    BytesType bytes = 3;
    // datetime represents type information for a datetime column.
    DateTimeType datetime = 4;
    // double represents type information for a double column.
    DoubleType double = 5;
    // int represents type information for an integer column.
    IntType int = 6;
    // string represents type information for a string column.
    StringType string = 7;
    // uuid represents type information for a UUID column.
    UUIDType uuid = 8;
    // proto represents type information for a protobuf column.
    ProtoType proto = 9;
  }
}

// MetaType is a message that represents a generic meta type. The kind of a meta type is determined by the MetaTypeConfig for specified name.
message MetaType {
  // Name represents the sub-type of the meta type.
  string name = 1;
}

// BoolType is a message that represents a boolean type. BoolType is of kind bool.
message BoolType {}

// BytesType is a message that represents a bytes type. BytesType is of kind bytes.
message BytesType {}

// DateTimeType is a message that represents a datetime type. DateTimeType is of kind datetime.
message DateTimeType {}

// DoubleType is a message that represents a double type. DoubleType is of kind double.
message DoubleType {}

// IntType is a message that represents an integer type. IntType is of kind int.
message IntType {}

// StringType is a message that represents a string type. StringType is of kind string.
message StringType {}

// UUIDType is a message that represents a UUID type. UUIDType is of kind UUID.
message UUIDType {}

// ProtoType is a message that represents a protobuf column type. ProtoType is of kind bytes.
message ProtoType {
  // type_url is treated the same as the type_url field of a google.protobuf.Any message.
  //
  // https://protobuf.dev/reference/protobuf/google.protobuf/#any:
  // "A URL/resource name whose content describes the type of the serialized message.
  //
  // For URLs which use the schema http, https, or no schema, the following restrictions and interpretations apply:
  //
  // - If no schema is provided, https is assumed.
  // - The last segment of the URL's path must represent the fully qualified name of the type (as in path/google.protobuf.Duration).
  // - An HTTP GET on the URL must yield a google.protobuf.Type value in binary format, or produce an error.
  // - Applications are allowed to cache lookup results based on the URL, or have them precompiled into a binary to avoid any lookup. Therefore, binary compatibility needs to be preserved on changes to types. (Use versioned type names to manage breaking changes.)
  //
  // Schemas other than http, https (or the empty schema) might be used with implementation specific semantics."
  string type_url = 1;
}

// Idempotency Key is a message that represents an idempotency key, which is a wrapper for a timestamp
message IdempotencyKey {
  // The timestamp which will be used to deduplicate requests at the storage layer
  google.protobuf.Timestamp generation_time = 1;
}

// Enum is used to define clustering column soring direction (ASC or DESC)
enum SortingDirection {
  // Unspecified direction
  SORTING_DIRECTION_UNSPECIFIED = 0;
  // ASC
  SORTING_DIRECTION_ASC = 1;
  // DESC
  SORTING_DIRECTION_DESC = 2;
}

// OrderBy represents a pair of key (column) to sorting direction (ASC/DESC)
message OrderBy {
  // Key-column
  string key = 1;
  // Direction
  SortingDirection direction = 2;
}
