syntax = "proto3";

package doordash.retail.fulfillment.store_items.v1;

option java_multiple_files = true;
option java_generic_services = true;
option java_package = "com.doordash.retail.fulfillment";

import "google/protobuf/wrappers.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/field_mask.proto";
import "doordash.retail.catalog.v1/fulfillment.proto";
import "common/common.proto";
import "doordash.retail.fulfillment.v1/retail_data_fulfillment_service.proto";
import "common/marketplace_purchase.proto";
import "menu/menu.proto";


// APIs for store items service
service StoreItemsService {
  // Get store items given store id and merchant supplied IDs
  rpc GetStoreItemsByMerchantSuppliedIds(GetStoreItemsByMerchantSuppliedIdsRequest) returns (GetStoreItemsByMerchantSuppliedIdsResponse);
  // Get store items given store id, category and merchant supplied ID
  rpc GetStoreItemsByStoreIdCategoryMenuId(GetStoreItemsByStoreIdCategoryMenuIdRequest) returns (GetStoreItemsByStoreIdCategoryMenuIdResponse);
  // Get store items by dd menu item id and store id if applicable
  rpc GetStoreItemsByMenuItemId(GetStoreItemsByMenuItemIdRequest) returns (GetStoreItemsByMenuItemIdResponse);
  // Upsert store item
  rpc UpsertStoreItems(UpsertStoreItemsRequest) returns (UpsertStoreItemsResponse);
  // Get Store item by store item uuid
  rpc GetStoreItemByUuid(GetStoreItemByUuidRequest) returns (GetStoreItemByUuidResponse);
}


// Class defining the store item for retrieval
message StoreItemGetEntry {
  //Store ID
  google.protobuf.StringValue store_id = 1;
  // Item name
  google.protobuf.StringValue name = 2;
  // Item category
  google.protobuf.StringValue category = 3;
  // Created at timestamp
  google.protobuf.Timestamp created_at = 4;
  // Created by
  google.protobuf.StringValue created_by = 5;
  // Updated at timestamp
  google.protobuf.Timestamp updated_at = 6;
  // Updated by
  google.protobuf.StringValue updated_by = 7;
  // Merchant supplied id
  google.protobuf.StringValue merchant_supplied_id = 8;
  // Image URLs
  repeated string image_urls = 9;
  // Unit of measurement
  google.protobuf.StringValue unit_of_measurement = 10;
  // Menu ID
  google.protobuf.Int64Value dd_menu_id = 11;
  // Menu Item ID
  google.protobuf.Int64Value dd_menu_item_id = 12;
  // PLU
  google.protobuf.StringValue plu = 13;
  // Scan strategy
  doordash.retail.catalog.v1.ScanStrategy scan_strategy = 14;
  // indicates approximately how much a single item is sold by.
  common.Decimal approximate_sold_as_quantity = 15;
  // Measurement unit for weighted items
  google.protobuf.StringValue measurement_unit_wi = 16;
  // Price info for store items
  doordash.retail.fulfillment.v1.StoreItemPriceInfo price_info = 17;
  // Purchase type
  common.marketplace_purchase.v1.PurchaseType purchase_type = 18;
  // Store item uuid
  google.protobuf.StringValue uuid = 19;
  //Restriction Info
  menu.RestrictionInfo restriction_info = 20;
  //aggregated attributes
  StoreItemAttributes attributes = 21;
}

// Class defining the store item for retrieval
message StoreItemUpsertEntry {
  //Store ID
  string store_id = 1;
  // Item name
  string name = 2;
  // Item category
  string category = 3;
  // Merchant supplied id
  string merchant_supplied_id = 4;
  // Image URLs
  repeated string image_urls = 5;
  // Unit of measurement
  google.protobuf.StringValue unit_of_measurement = 6;
  // Menu ID
  google.protobuf.Int64Value dd_menu_id = 7;
  // Menu Item ID
  google.protobuf.Int64Value dd_menu_item_id = 8;
  // PLU
  google.protobuf.StringValue plu = 9;
  // Scan strategy
  doordash.retail.catalog.v1.ScanStrategy scan_strategy = 10;
  // indicates approximately how much a single item is sold by.
  common.Decimal approximate_sold_as_quantity = 11;
  // Measurement unit for weighted items
  google.protobuf.StringValue measurement_unit_wi = 12;
  // Price info for store items
  doordash.retail.fulfillment.v1.StoreItemPriceInfo price_info = 13;
  // Purchase type
  common.marketplace_purchase.v1.PurchaseType purchase_type = 14;
  //Restriction Info
  menu.RestrictionInfo restriction_info = 15;
  //aggregated attributes
  StoreItemAttributes attributes = 16;
}

// Request to get store items by store id and merchant supplied id
message GetStoreItemsByMerchantSuppliedIdsRequest {
  //required
  string store_id = 1;
  // merchant supplied ids
  repeated string merchant_supplied_ids = 2;
  // Field mask
  google.protobuf.FieldMask field_mask = 3;
}

//Response message for returning store items.
message GetStoreItemsByMerchantSuppliedIdsResponse {
  //response message with store items.
  repeated StoreItemGetEntry store_item_entries = 1;
}

// Request to get store items by store id, category and dd_menu_id
message GetStoreItemsByStoreIdCategoryMenuIdRequest {
  // required
  string store_id = 1;
  // Category
  string category = 2;
  // Menu ID
  int64 dd_menu_id = 3;
  // Field mask
  google.protobuf.FieldMask field_mask = 4;
}

//Response message for returning store items.
message GetStoreItemsByStoreIdCategoryMenuIdResponse {
  //response message with store items.
  repeated StoreItemGetEntry store_item_entries = 1;
}

// Request to get store items by dd_menu_item_id and store id if applicable
message GetStoreItemsByMenuItemIdRequest {
  // Menu item ID
  repeated int64 dd_menu_item_ids = 1;
  // Field mask
  google.protobuf.FieldMask field_mask = 2;
  // optional store id
  google.protobuf.StringValue store_id = 3;
}

//Response message for returning store items.
message GetStoreItemsByMenuItemIdResponse {
  //response message with store items.
  repeated StoreItemGetEntry store_item_entries = 1;
}

// Upsert store items
message UpsertStoreItemsRequest {
  // StoreItem
  repeated StoreItemUpsertEntry store_item_entries = 1;
  // Upserted by
  string upserted_by = 2;
}

// Mapping between the old and new store-items table
message StoreItemUuidMapping {
  // Store id
  string store_id = 1;
  // Merchant supplied id
  string merchant_supplied_id = 2;
  // UUID used in the old store-items table
  string store_item_uuid = 3;
}

// Response message for upserting store items and returning their uuid mappings
message UpsertStoreItemsResponse {
  // (storeID, MDID, UUID) mapping in the store-item-uuid-mapping table
  repeated StoreItemUuidMapping store_item_uuid_mappings = 1;
}

// Request to get store item by uuid
message GetStoreItemByUuidRequest {
  // Store item uuid
  string uuid = 1;
  // Field mask
  google.protobuf.FieldMask field_mask = 2;
}

//Response message for returning store items.
message GetStoreItemByUuidResponse {
  //response message with store item.
  StoreItemGetEntry store_item_entries = 1;
}

//aggregated attributes for a single store_item
message StoreItemAttributes {
  //the stock level info
  repeated menu.StockLevelInfo stock_level_info = 1;
  // Map to store various item attributes
  map<string, string> item_attribute_map = 2;
}
