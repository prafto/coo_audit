syntax = "proto3";

package gtmt_store_onboarding_service.v1;

import "common/service_client_config.proto";
import "doordash.api/annotations.proto";
import "google/api/annotations.proto";
import "google/protobuf/wrappers.proto";
import "gtmt_store_onboarding_service/address.proto";
import "gtmt_store_onboarding_service/store.proto";

option go_package = "github.com/doordash/services-protobuf/generated/gtmt_store_onboarding_service/api/v1";
option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.gtmt_store_onboarding_service.rpc.api";

// StoreOnboardingService is the service for store onboarding.
service StoreOnboardingService {
  option (doordash.api.service) = {
    url: "gtmt-store-onboarding-service-api.service.prod.ddsd"
    name: "store-onboarding-service"
    port: 50051
    name_spaces: ["store-onboarding"]
    owner: {
      id: "gtmt-store-onboarding-service"
      name: "gtmt-store-onboarding-service"
      slack_channel: "#gtmt-integration-services"
      email_alias: "bizapps-all@doordash.com"
    }
    target_products: [INTERNAL]
  };

  option (service_client.client_config).response_attempt_timeout_millis = 2000;
  option (service_client.client_config).retry_config.max_attempts = 4;
  option (service_client.client_config).retry_config.do_retry_grpc_code = 8;
  option (service_client.client_config).circuit_breaker_config.failure_rate_threshold = 0.8;
  option (service_client.client_config).circuit_breaker_config.do_ignore_grpc_code = 5;

  // GetStoresLight returns a list of stores for a given list of store ids.
  rpc GetStoresLight(GetStoresLightRequest) returns (GetStoresLightResponse) {
    option (google.api.http) = {
      post: "/store-onboarding/v1/stores"
      body: "*"
    };
    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: DEV
      authorization: [DD_EMPLOYEE]
      role_based_authorization: {
        mode: ANY,
        roles: ["security-raven-managed-authorization"]
      }
    };
  }

  // GetAddress returns the address for a given address id.
  rpc GetAddress(GetAddressRequest) returns (GetAddressResponse) {
    option (google.api.http) = {get: "/store-onboarding/v1/address/{id}"};
    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: DEV
      authorization: [DD_EMPLOYEE]
      role_based_authorization: {
        mode: ANY,
        roles: ["security-raven-managed-authorization"]
      }
    };
  }
}
