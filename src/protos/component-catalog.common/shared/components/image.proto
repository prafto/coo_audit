syntax = "proto3";

package component_catalog.common.shared.components.v1;

import "action-catalog/action.proto";
import "component-catalog.common/shared/shared/frame.proto";
import "google/protobuf/wrappers.proto";

option go_package = "github.com/doordash/services-protobuf/generated/component-catalog.common/shared/components";
option java_multiple_files = true;
option java_package = "com.doordash.rpc.component_catalog.common.shared.components";

// Image component
message Image {
  // reserved for local image
  reserved 2;
  // local or remote image
  oneof value {
    // Remote image
    RemoteImage remote = 1;
    // Local image
    // RemoteImage local = 2;
  }

  // Textual description of the image, for accessibility and for use in situations where the image cannot be
  // seen/displayed or takes a long time to render because of a slow internet connection.
  google.protobuf.StringValue description = 3;

  // Set the width and height of this image
  //
  // Usage:
  //
  // Frame width:
  //
  // Optional width of the image.
  // If only absolute width is provided, the image should be displayed at the specified width and the height
  // should be based on the aspect ratio of the image.
  // If both absolute width and absolute height are provided, the image should be displayed at the specified
  // width and height.
  // If neither absolute width nor absolute height is provided, the image should be displayed at its original size.
  //
  // Frame height:
  //
  // Optional height of the image.
  // If only absolute height is provided, the image should be displayed at the specified height and the width
  // should be based on the aspect ratio of the image.
  // If both absolute width and absolute height are provided, the image should be displayed at the specified
  // width and height.
  // If neither absolute width nor absolute height is provided, the image should be displayed at its original size.
  component_catalog.common.shared.shared.v1.Frame frame = 4;

  // Fit type enum
  // Read more about the specifics of the implementations here https://developer.mozilla.org/en-US/docs/Web/CSS/object-fit#try_it
  enum FitType {
    //  If not specified, should be handled by client side implementation
    FIT_TYPE_PLATFORM_DEFAULT_UNSPECIFIED = 0;
    // The replaced content is sized to fill the element's content box. The entire object will completely fill the box.
    // If the object's aspect ratio does not match the aspect ratio of its box, then the object will be stretched to fit.
    FIT_TYPE_FILL = 1;
    // The replaced content is scaled to maintain its aspect ratio while fitting within the element's content box. The
    // entire object is made to fill the box, while preserving its aspect ratio, so the object will be "letterboxed"
    // if its aspect ratio does not match the aspect ratio of the box.
    FIT_TYPE_CONTAIN = 2;
    // The replaced content is sized to maintain its aspect ratio while filling the element's entire content box. If the
    // object's aspect ratio does not match the aspect ratio of its box, then the object will be clipped to fit.
    FIT_TYPE_COVER = 3;
  }

  // Image sizing. You can either provide a value for how the image should be scaled to fit in the parent container or
  // absolute dimensions for width/height
  // How to fit the image within the parent container.
  FitType fit_type = 5;

  // ActionCatalog actions that will ALWAYS be performed when the image is tapped.
  repeated action_catalog.v1.Action actions = 6;

  // indicate if this image needs to be preloaded (only supported on Web)
  google.protobuf.BoolValue preload = 7;
}

// Remote image
message RemoteImage {
  // The uri of the image
  google.protobuf.StringValue uri = 1;

  // Provide variants to override the default uri
  RemoteImageVariants variants = 2;
}

// Variants for overriding the default URI
message RemoteImageVariants {
  // The uri of the image for dark mode
  google.protobuf.StringValue dark_mode_uri = 1;
}
