syntax = "proto3";

package promotion_service;

import "common/common.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "promotion/criterion.proto";
import "promotion/limitation.proto";
import "promotion/placement.proto";

option go_package = "promotion";
option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.promotion";

enum CarouselCardinalityType {
  MULTI_STORE = 0; // default
  SINGLE_STORE = 1;
}

enum CarouselGroupType {
  STORE = 0; // default
  ITEM = 1;
  LISTICLES = 2; // list of articles content feature
  STORE_CAROUSEL_INTRO = 3; // For store carousel intro component
  TILE = 4;
}

message Carousel {
  google.protobuf.StringValue id = 1; //merchant_promotion_id
  google.protobuf.StringValue submarket_id = 2;
  google.protobuf.BoolValue is_active = 3;
  google.protobuf.StringValue title = 4;
  google.protobuf.StringValue description = 5;
  google.protobuf.Int32Value sort_order = 6;

  // Auditing
  common.Creator created_by = 7;
  google.protobuf.Timestamp created_at = 8;

  common.Creator updated_by = 9;
  google.protobuf.Timestamp updated_at = 10;

  // Limitations and Audiencing
  repeated Limitation limitations = 11;
  repeated UserCriterion user_criteria = 12;
  CarouselExperiment experiment = 13;

  // Global/Submarket Carousels
  LocationType location_type = 14;
  enum LocationType {
    BY_SUBMARKET = 0;
    BY_GLOBAL = 1;
  }

  oneof submarket_filter_list {
    SubmarketList included_submarkets_for_by_submarket = 15; // for inclusion list (BY_SUBMARKET)
    SubmarketList excluded_submarkets_for_by_global = 16; // for exclusion list (BY_GLOBAL)
  }

  google.protobuf.StringValue tile_img_url = 17;

  google.protobuf.StringValue parent_id = 18;
  repeated string children_ids = 19;
  google.protobuf.StringValue new_vertical_collection_id = 20; // for grocery item collection

  repeated string overrides = 21;
  repeated string overridden_by = 22;

  google.protobuf.BoolValue use_light_content = 23; // Text light/dark on tile
  google.protobuf.BoolValue enforce_manual_sort_order = 24; // Enforce manual sort order on feed, default to false

  // repeated common.PageType page_types = 25;
  repeated string vertical_ids = 26;
  repeated Placement.LandingPageType landing_page_types = 27;

  FulfillmentType fulfillment_type = 28;

  CarouselGroupType carousel_group_type = 29;
  CarouselCardinalityType carousel_cardinality_type = 30;

  // used for offers hub personalized carousels for horizontal ranking
  google.protobuf.StringValue ranker_experiment = 31;

  // Vertical experience which dictates what carousel vertical it belongs to
  VerticalExperience vertical_experience = 32;

  // layout_type refers to the type of layout the carousel should be rendered with.
  // See the LayoutType enum for more information.
  LayoutType layout_type = 33;

  enum CarouselMembershipEntityType {
    CAROUSEL_MEMBERSHIP_ENTITY_TYPE_UNKNOWN = 0;
    CAROUSEL_MEMBERSHIP_ENTITY_TYPE_BUSINESS = 1; // csv schema: business_id, sort_order
    CAROUSEL_MEMBERSHIP_ENTITY_TYPE_STORE = 2; // csv schema: store_id, sort_order
    CAROUSEL_MEMBERSHIP_ENTITY_TYPE_MENU_ITEM = 3; // csv schema: item_id, store_id, sort_order
    CAROUSEL_MEMBERSHIP_ENTITY_TYPE_SKU_ITEM = 4; // csv schema: item_id, store_id, sort_order,sku_item_id
  }

  // indicate whether the members of carousels are at business/store/item level
  CarouselMembershipEntityType carousel_membership_entity_type = 34;

  // where the carousel will be placed
  CarouselPlacementSurfaceType carousel_placement_surface_type = 35; // deprecated

  // Details of where the membership data is stored
  ExternalMembershipDataStorage external_membership_data_storage = 36;

  // where the carousel will be placed
  repeated CarouselPlacementSurfaceType carousel_placement_surface_types = 37;

  // Disclaimer information for the carousel which is used in LAYOUT_TYPE_LIST_WITH_ITEM_IMAGES_AND_DISCLAIMERS
  repeated DisclaimerInfo disclaimer_info = 38;

  // carousel level badges
  repeated Badge badges = 39;

  //Currently used for carousel landing page and only for mobile side
  repeated Footer footers = 40;

  // External Content ID for retrieving external content, ex Listicles
  google.protobuf.StringValue external_content_id = 41;

  // if applicable, info to track why a carousel was deactivated.
  CarouselDeactivationInfo deactivation_info = 42;

  // Used for tile carousels that land users on global search
  google.protobuf.StringValue tile_search_query = 43;

  // Used to link carousel metadata to a secondary redirect
  google.protobuf.StringValue secondary_uri = 44;

  // Used to identify type of collection being created
  CollectionType collection_type = 45;
}

enum CarouselPlacementSurfaceType {
  CAROUSEL_PLACEMENT_SURFACE_TYPE_UNKNOWN = 0;
  CAROUSEL_PLACEMENT_SURFACE_TYPE_HOMEPAGE = 1;
  CAROUSEL_PLACEMENT_SURFACE_TYPE_VERTICAL_LANDING_PAGE = 2;
  CAROUSEL_PLACEMENT_SURFACE_TYPE_SEARCH = 3;
  CAROUSEL_PLACEMENT_SURFACE_TYPE_OFFERS_HUB = 4;
  CAROUSEL_PLACEMENT_SURFACE_TYPE_NEARBY_MAP = 5;
  CAROUSEL_PLACEMENT_SURFACE_TYPE_STORE_PAGE = 6;
}

enum CarouselMetadataUseCase {
  CAROUSEL_METADATA_USE_CASE_NOT_SPECIFIED = 0;
  CAROUSEL_METADATA_USE_CASE_LCM = 1;
}

message SubmarketList {
  repeated string submarket_ids = 1;
}

// Used as response to feed
message LiteCarousel {
  google.protobuf.StringValue id = 1; //merchant_promotion_id
  google.protobuf.StringValue title = 2;
  google.protobuf.StringValue description = 3;
  google.protobuf.Int32Value sort_order = 4;
  google.protobuf.StringValue tile_img_url = 5;
  google.protobuf.StringValue parent_id = 6;
  repeated string children_ids = 7;
  google.protobuf.StringValue new_vertical_collection_id = 8; // for grocery item collection
  google.protobuf.BoolValue use_light_content = 9; // Text light/dark on tile
  google.protobuf.BoolValue enforce_manual_sort_order = 10; // Enforce manual sort order on feed, default to false
  // repeated common.PageType page_types = 11;
  repeated string vertical_ids = 12;
  repeated Placement.LandingPageType landing_page_types = 13;
  FulfillmentType fulfillment_type = 14;
  CarouselCardinalityType carousel_cardinality_type = 15;
  CarouselGroupType carousel_group_type = 16;
  // used for offers hub personalized carousels for horizontal ranking
  google.protobuf.StringValue predictor = 17;
  // Vertical experience which dictates what carousel vertical it belongs to
  VerticalExperience vertical_experience = 18;

  // layout_type refers to the type of layout the carousel should be rendered with.
  // See the LayoutType enum for more information.
  LayoutType layout_type = 19;

  // Disclaimer information for the carousel which is used in LAYOUT_TYPE_LIST_WITH_ITEM_IMAGES_AND_DISCLAIMERS
  repeated DisclaimerInfo disclaimer_info = 20;

  // carousel level badges
  repeated Badge badges = 21;

  //Currently used for carousel landing page and only for mobile side
  repeated Footer footers = 22;

  // External Content ID for retrieving external content, ex Listicles
  google.protobuf.StringValue external_content_id = 23;

  // Used for tile carousels that land users on global search
  google.protobuf.StringValue tile_search_query = 24;

  // Used to link carousel metadata to a secondary redirect
  google.protobuf.StringValue secondary_uri = 25;

  // Used to identify type of collection being created
  CollectionType collection_type = 26;
}

message CarouselExperiment {
  google.protobuf.StringValue experiment_name = 1;
  repeated google.protobuf.StringValue visible_to_buckets = 2;
}

enum FulfillmentType {
  DELIVERY = 0;
  PICKUP = 1;
  SHIPPING = 2;
  VIRTUAL = 3;
}

// Collection type refers to the type of collection to be rendered.
// Spotlight type collections should use SPOTLIGHT prefix.
enum CollectionType {
  COLLECTION_UNSPECIFIED = 0;
  COLLECTION_TILE = 1;
  COLLECTION_SELECTION = 2;
  COLLECTION_SPOTLIGHT_SINGLE_STORE_ROW = 3;
  COLLECTION_SPOTLIGHT_GIFT_GUIDES = 4;
  COLLECTION_SPOTLIGHT_COMPACT_STORE_LOGO = 5;
  COLLECTION_SPOTLIGHT_DIGITAL_FLYER = 6;
  COLLECTION_SPOTLIGHT_WINNING_CHILD_TITLE = 7;
}

// LayoutType refers to the type of layout the carousel should be rendered with.
enum LayoutType {
  // LAYOUT_TYPE_UNSET as the proto default.
  LAYOUT_TYPE_UNSET = 0;

  // LAYOUT_TYPE_LIST is the type used by the majority of carousel cases. In this layout, the carousel will show
  // the standard carousel container with a collection of tiles representing entities such as stores or items.
  LAYOUT_TYPE_LIST = 1;

  // LAYOUT_TYPE_MAP is the layout type introduced in the "Map Based Carousels" project (for more information,
  // see this document: https://docs.google.com/document/d/1X-JT-3irh1979LUG7Crzfq2TvbHXx3mZae4_9cXVqI4).
  // In a map-based layout, the carousel will be formatted with a map view and map components (e.g. map
  // annotations/pins).
  LAYOUT_TYPE_MAP = 2;

  // LAYOUT_TYPE_TALL_COMPACT_LIST is the layout type introduced in the tall logo merchandising carousel.
  // This carousel layout will have multiple rows per carousel but each row will be more compact.
  // Design illustrations can be found here: https://www.figma.com/file/bGhHUXY1eu7YujNytYZPYy/Cx-%F0%9F%8D%95%C2%A022Q1-Logo-Store-Cell?node-id=2%3A58584
  LAYOUT_TYPE_TALL_COMPACT_LOGO_LIST = 3;

  // LAYOUT_TYPE_LIST_WITH_ITEM_IMAGES_AND_DISCLAIMERS is the layout type introduced in dedicated new trialers project
  // This carousel layout will appear in a list with children as store compact row cells with item images
  // It can also feature an optional disclaimers which details information about the carousel
  // RFC: https://docs.google.com/document/d/1OLHGM_JiZvG2UJ4LFTe6iKgQ1zYBeoQFi2Q_JxfuF9g/edit#
  LAYOUT_TYPE_LIST_WITH_ITEM_IMAGES_AND_DISCLAIMERS = 4;

  // LAYOUT_TYPE_LIST_COMPONENT is the layout type introduced in the List Component format.
  // It is a part of new format that MND team build.
  // IOS RFC: https://docs.google.com/document/d/1oF9oto_yBva4eV2nmHaVxzFAqtYdCHu5x4GZoWswLPg/edit?tab=t.0#heading=h.j5ivqs2mdpby
  // BE TDD: https://docs.google.com/document/d/1dedgcBVgDJ9FLcKLGHhrA4dCxvtoMReJi5G_hAz_sRk/edit?tab=t.0#heading=h.obhhifjtin0a
  // MND new format roadmap: https://docs.google.com/document/d/1ZHbrwgA7VYXrxQVRnZner1lEgrYq_z262xvIorPHhqo/edit?tab=t.0
  LAYOUT_TYPE_LIST_COMPONENT = 5;
}

// Vertical experience which dictates what carousel vertical it belongs to
// This is currently used only for item carousels
enum VerticalExperience {
  // Unset as default
  VERTICAL_EXPERIENCE_UNSET = 0;
  // Restaurant experience
  VERTICAL_EXPERIENCE_RESTAURANT = 1;
  // Retail experience which includes convinience and grocery
  VERTICAL_EXPERIENCE_RETAIL = 2;
  // Retail experience which uses SKU based experience
  VERTICAL_EXPERIENCE_RETAIL_SKU = 3;
}

// Details of where membership data such as store_id, sort_order, etc are stored
message ExternalMembershipDataStorage {
  // Type of storage
  ExternalStorageType type = 1;
  // The value for storage. for ex: snowflake would be table name, s3 would be s3 url
  google.protobuf.StringValue value = 2;
}

// Type of external storage for memberships data
enum ExternalStorageType {
  // Not defined
  EXTERNAL_STORAGE_TYPE_UNDEFINED = 0;
  // Store in S3
  EXTERNAL_STORAGE_TYPE_S3 = 1;
  // Store in snowflake
  EXTERNAL_STORAGE_TYPE_SNOWFLAKE = 2;
  // Define using sql query
  EXTERNAL_STORAGE_TYPE_SQL_SOURCE_QUERY = 3;
  // Define using collection id
  EXTERNAL_STORAGE_TYPE_COLLECTION_ID = 4;
}

// Disclaimer information for the carousel
// Check RFC for more details: https://docs.google.com/document/d/1OLHGM_JiZvG2UJ4LFTe6iKgQ1zYBeoQFi2Q_JxfuF9g/edit#
message DisclaimerInfo {
  // Text of the disclaimer
  google.protobuf.StringValue text = 1;
  // Icon associated with the disclaimer
  google.protobuf.StringValue icon_img_url = 2;
  // CMS content id for when disclaimer is clicked for getting more information
  google.protobuf.StringValue cms_content_id = 3;
}

// carousel level's badge
message Badge {
  //define the badge type
  enum BadgeType {
    BADGE_TYPE_UNKNOWN = 0; // Default type but should not happen
    BADGE_TYPE_TEXT = 1;
    BADGE_TYPE_TIMER = 2;
  }

  BadgeType type = 1;

  // determine the order of the badge if multiple is used
  int32 sort_order = 2;

  google.protobuf.StringValue text = 3;

  enum BadgePlacementType {
    BADGE_PLACEMENT_TYPE_UNKNOWN = 0; // Default type but should not happen
    BADGE_PLACEMENT_TYPE_CAROUSEL_TITLE = 1;
  }
  BadgePlacementType placement = 4;

  google.protobuf.StringValue dls_tag_size = 5;
  google.protobuf.StringValue dls_tag_style = 6;
  google.protobuf.StringValue dls_tag_type = 7;

  // use when this is a badge with timer type
  TimerDetails timer_details = 8;
}

// used for carousel landing page
message Footer {
  // define the footer type
  enum FooterType {
    FOOTER_TYPE_UNKNOWN = 0; // Default type but should not happen
    FOOTER_TYPE_TEXT = 1;
    FOOTER_TYPE_TIMER = 2;
    FOOTER_TYPE_UPSELL = 3;
  }
  FooterType type = 1;
  google.protobuf.StringValue text = 2;

  // use only this is footer with timer type
  TimerDetails timer_details = 3;
}

//used for carousel badge or footer
message TimerDetails {
  // UTC timestamp
  google.protobuf.Timestamp end_time = 1;
}

message CarouselDeactivationInfo {
  enum DeactivationReason {
    UNSET = 0;
    MANUAL = 1;
    SYSTEM = 2;
  }

  DeactivationReason reason_for_deactivation = 1;
  google.protobuf.StringValue deactivated_reason_details = 2;
  google.protobuf.Timestamp deactivated_at = 3;
}
