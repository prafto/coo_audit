syntax = "proto3";

// buf:lint:ignore DIRECTORY_SAME_PACKAGE
// buf:lint:ignore PACKAGE_VERSION_SUFFIX
package promotion_service;

import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "promotion/auto_placement_product_update.proto";
import "promotion/campaign.proto";
import "promotion/carousel.proto";
import "promotion/common.proto";
import "promotion/placement.proto";
import "promotion/promotion.proto";
import "promotion/store.proto";

// buf:lint:ignore PACKAGE_SAME_GO_PACKAGE
option go_package = "promotion";
option java_generic_services = true;
option java_multiple_files = true;
// buf:lint:ignore PACKAGE_SAME_JAVA_PACKAGE
option java_package = "com.doordash.rpc.promotion";

// buf:lint:ignore COMMENT_ENUM
enum TaskType {
  // unspecified
  TASK_TYPE_UNSPECIFIED = 0;
  // upsert campaign cassandra
  TASK_TYPE_UPSERT_CAMPAIGN_CASSANDRA = 1;
  // delete campaign cassandra
  TASK_TYPE_DELETE_CAMPAIGN_CASSANDRA = 2;
  // upsert campaign redis
  TASK_TYPE_UPSERT_CAMPAIGN_REDIS = 3;
  // delete campaign redis
  TASK_TYPE_DELETE_CAMPAIGN_REDIS = 4;
  // upsert redis
  TASK_TYPE_UPSERT_REDIS = 5;
  // upsert Campaign By Store and Item
  TASK_TYPE_UPSERT_CAMPAIGN_BY_STORE_AND_ITEM = 6;
  // delete Campaign By Store and Item
  TASK_TYPE_DELETE_CAMPAIGN_BY_STORE_AND_ITEM = 7;
  // upsert store cassandra
  TASK_TYPE_UPSERT_STORE_CASSANDRA = 8;
}

// buf:lint:ignore COMMENT_ENUM
enum TaskTable {
  // unspecified
  TASK_TABLE_UNSPECIFIED = 0;
  // campaign_by_business_and_home_banner_placement
  TASK_TABLE_CAMPAIGN_BY_BUSINESS_AND_HOME_BANNER_PLACEMENT = 1;
  // campaign_by_business_group_membership
  TASK_TABLE_CAMPAIGN_BY_BUSINESS_GROUP_MEMBERSHIP = 2;
  // campaign_by_business_membership
  TASK_TABLE_CAMPAIGN_BY_BUSINESS_MEMBERSHIP = 3;
  // campaign_by_code
  TASK_TABLE_CAMPAIGN_BY_CODE = 4;
  // campaign_by_district_membership
  TASK_TABLE_CAMPAIGN_BY_DISTRICT_MEMBERSHIP = 5;
  // campaign_by_store
  TASK_TABLE_CAMPAIGN_BY_STORE = 6;
  // campaign_by_store_and_home_banner_placement
  TASK_TABLE_CAMPAIGN_BY_STORE_AND_HOME_BANNER_PLACEMENT = 7;
  // campaign_by_store_and_placement
  TASK_TABLE_CAMPAIGN_BY_STORE_AND_PLACEMENT = 8;
  // campaign_by_store_membership
  TASK_TABLE_CAMPAIGN_BY_STORE_MEMBERSHIP = 9;
  // campaign_by_submarket_and_applied_by
  TASK_TABLE_CAMPAIGN_BY_SUBMARKET_AND_APPLIED_BY = 10;
  // campaign_by_submarket_and_placement
  TASK_TABLE_CAMPAIGN_BY_SUBMARKET_AND_PLACEMENT = 11;
  // campaign_by_submarket_membership
  TASK_TABLE_CAMPAIGN_BY_SUBMARKET_MEMBERSHIP = 12;
  // campaign_by_global_membership
  TASK_TABLE_CAMPAIGN_BY_GLOBAL_MEMBERSHIP = 13;
  // campaign_by_active_global_membership
  TASK_TABLE_CAMPAIGN_BY_ACTIVE_GLOBAL_MEMBERSHIP = 14;
  // campaign_by_ad_group_and_submarket
  TASK_TABLE_CAMPAIGN_BY_AD_GROUP_AND_SUBMARKET = 15;
  // store
  TASK_TABLE_STORE = 16;
  // free trials: credit table
  TASK_TABLE_FREE_TRIAL_CREDIT_BY_STORE_AND_CAMPAIGN = 17;
  // free trials: record keeping
  TASK_TABLE_FREE_TRIAL_STORES = 18;
  // CPM Fees
  TASK_TABLE_CAMPAIGN_CPM_FEES = 19;
  // Campaign By Store And Item
  TASK_TABLE_CAMPAIGN_BY_STORE_AND_ITEM = 20;
  // Ads Billings
  TASK_TABLE_CAMPAIGN_BILLINGS = 21;
  // campaign_by_ad_group: Sponsored Products ad campaign is the current use case
  TASK_TABLE_CAMPAIGN_BY_AD_GROUP = 22;
  // SP auto placement product placements update
  TASK_TABLE_AUTO_PLACEMENT_PRODUCTS = 23;
  // campaigns_by_product_ids
  TASK_TABLE_CAMPAIGN_BY_PRODUCT_ID = 24;
  // complex_deal_items_by_merchant_id
  TASK_TABLE_DEAL_PRODUCTS_BY_MERCHANT_ID = 25;
  // delivery_fee_campaign_by_store
  TASK_TABLE_DELIVERY_FEE_CAMPAIGN_BY_STORE = 26;
  // product infos
  TASK_TABLE_PRODUCT_INFO = 27;
  // campaign_by_store_and_homepage_banner_placement
  TASK_TABLE_CAMPAIGN_BY_STORE_AND_HOMEPAGE_BANNER_PLACEMENT = 28;
  // rx item campaign by store
  TASK_TABLE_RX_ITEM_CAMPAIGN_BY_STORE = 29;
}

// buf:lint:ignore COMMENT_MESSAGE
message Task {
  // type
  TaskType type = 1;
  // timestamp
  google.protobuf.Timestamp timestamp = 2;
  // campaign
  Campaign campaign = 3;
  // table
  TaskTable table = 4;
  // ttl
  int32 ttl = 5;
  // retry
  int32 retry = 6;

  // store_id
  google.protobuf.StringValue store_id = 7;
  // placement_type
  Placement.PlacementType placement_type = 8;
  // active_bucket
  google.protobuf.StringValue active_bucket = 9;
  // business_id
  google.protobuf.StringValue business_id = 10;
  // business_group_id
  google.protobuf.StringValue business_group_id = 11;
  // submarket_id
  google.protobuf.StringValue submarket_id = 12;
  // district_id
  google.protobuf.StringValue district_id = 13;
  // code
  google.protobuf.StringValue code = 14;
  // applied_by_type
  AppliedBy.AppliedByType applied_by_type = 15;
  // ad_group_id
  google.protobuf.StringValue ad_group_id = 16;
  // stores
  repeated Store stores = 17;
  // market_id
  google.protobuf.StringValue market_id = 18;
  // item_id
  google.protobuf.StringValue item_id = 19;
  // campaign_id
  google.protobuf.StringValue campaign_id = 20;
  // vertical experience
  VerticalExperience vertical_experience = 21 [deprecated = true];
  // business vertical id
  google.protobuf.Int64Value business_vertical_id = 22;
  // ConsumerSource: used for migrating the kafka consumer from promotion-service to promotion-streaming
  ConsumerSource consumer_source = 23;
  // Specify a store is a Ship Anywhere store
  google.protobuf.BoolValue is_shipping_only = 24;
  // update auto placement products
  repeated AutoPlacementProductUpdateTask auto_placement_product_update = 25;
  // product_ids
  ProductIds product_ids = 26;
  // product_id
  google.protobuf.StringValue product_id = 27;
  // product_id_type
  google.protobuf.Int32Value product_id_type = 28;
  // merchant_id
  google.protobuf.StringValue merchant_id = 29;
  // merchant_id_type
  google.protobuf.Int32Value merchant_id_type = 30;
  // product info
  repeated ProductInfo product_infos = 31;
  // availability_status for promotion item availability check
  google.protobuf.Int32Value availability_status = 32;
}

// ConsumerSource indicates which service should consume this task kafka message
enum ConsumerSource {
  // unspecified
  CONSUMER_SOURCE_UNSPECIFIED = 0;
  // promotion_service will consume the task message
  CONSUMER_SOURCE_PROMOTION_SERVICE = 1;
  // promotion_streaming will consume the task message
  CONSUMER_SOURCE_PROMOTION_STREAMING = 2;
}
