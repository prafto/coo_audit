syntax = "proto3";

package promotion_service;

import "promotion/campaign_view_model.proto";
import "promotion/service.proto";

import "google/protobuf/wrappers.proto";
import "google/protobuf/field_mask.proto";

option java_multiple_files = true;
option java_generic_services = true;
option java_package = "com.doordash.rpc.promotion";
option go_package = "promotion";

// Exposes a simplified version of Campaign and handles easy changes
service CampaignViewModelService {
    // Simplified CRUD APIs - called by:
    // admin web client
    rpc CreateCampaignViewModel (CreateCampaignViewModelRequest) returns (CampaignViewModel);

    rpc UpdateCampaignViewModel (UpdateCampaignViewModelRequest) returns (CampaignViewModel);

    rpc GetCampaignViewModelById (GetCampaignViewModelByIdRequest) returns (CampaignViewModel);

    // returns list based on query
    rpc ListCampaignViewModels (ListCampaignViewModelsRequest) returns (ListCampaignViewModelsResponse);
}

message CreateCampaignViewModelRequest {
    CampaignViewModel campaign_view_model = 1;
    google.protobuf.BoolValue skip_history_table_insert = 2;
}

// To use this endpoint as a PATCH, use update_mask
// Otherwise, this endpoint works as a PUT
// Read more on FieldMasks here: https://pinkiepractices.com/posts/protobuf-field-masks/
message UpdateCampaignViewModelRequest {
    CampaignViewModel campaign_view_model = 1;
    google.protobuf.BoolValue skip_history_table_update = 2;
    google.protobuf.FieldMask update_mask = 3;
}

// DIRECT QUERY
message GetCampaignViewModelByIdRequest {
    google.protobuf.StringValue campaign_id = 1;
}

message ListCampaignViewModelsRequest {
    repeated QueryFacet query_facet = 1;
}

message ListCampaignViewModelsResponse {
  repeated CampaignViewModel campaign_view_models = 1;
}
