syntax = "proto3";

// buf:lint:ignore DIRECTORY_SAME_PACKAGE
// buf:lint:ignore PACKAGE_VERSION_SUFFIX
package promotion_service;

option java_multiple_files = true;
option java_generic_services = true;
// buf:lint:ignore PACKAGE_SAME_JAVA_PACKAGE
option java_package = "com.doordash.rpc.promotion";
// buf:lint:ignore PACKAGE_SAME_GO_PACKAGE
option go_package = "promotion";

import "google/protobuf/wrappers.proto";
import "promotion/criterion.proto";
import "promotion/limitation.proto";

// eligibility expression is a boolean expression consisting of campaign Criterion and Limitation as terms
// the disjunction, conjunction, and negation operations are all available to be defined within an expression
// this structure allows us to define any eligibility rules for any object that imports this proto message
message EligibilityExpression {

  // unique identifier for purposes of logging, mapping, or caching
  google.protobuf.StringValue id = 9;

  // term is evaluated as boolean
  oneof term {
    // single term expression
    // input is consumer
    UserCriterion user_criterion = 1;
    // input is merchant
    MerchantCriterion merchant_criterion = 2;
    // input is cart
    CartCriterion cart_criterion = 3;
    // input is campaign
    Limitation limitation = 4;

    // input is market state
    MarketStateCriteria market_state_criterion = 8;

    // logical OR: if one of these evaluates to TRUE then this expression is TRUE
    EligibilitySubexpression disjunction = 5;

    // logical AND: All of these must evaluate to TRUE for this expression to be TRUE
    EligibilitySubexpression conjunction = 6;
  }

  // negate the term being evaluated
  google.protobuf.BoolValue negate_term = 7;
}

// this wrapper object is only necessary because oneof blocks cannot contain a repeated object
message EligibilitySubexpression {
  // list of expressions
  repeated EligibilityExpression expressions = 1;
}