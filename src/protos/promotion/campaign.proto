syntax = "proto3";

package promotion_service;

//import "google/protobuf/duration.proto";
import "common/common.proto";
import "common/money.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "promotion/ad_group.proto";
import "promotion/billing.proto";
import "promotion/common.proto";
import "promotion/criterion.proto";
import "promotion/custom_error_override.proto";
import "promotion/eligibility_expression.proto";
import "promotion/fee.proto";
import "promotion/limitation.proto";
import "promotion/membership.proto";
import "promotion/placement.proto";
import "promotion/promotion.proto";

option go_package = "promotion";
option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.promotion";

// objective of campaign
message Objective {
  // object category
  enum ObjectiveType {
    // invalid type
    OBJECTIVE_TYPE_UNSPECIFIED = 0;
    // conversion type
    OBJECTIVE_TYPE_CONVERSION = 1;
  }
  // type for objective
  ObjectiveType type = 1;

  // other subcategory information
}

message Campaign {
  // Campaign type is introduced when we introduced ad campaign
  // the serving and indexing is quite different from existing promo campaign
  // for a complete campaign type description, refer this wiki
  // https://doordash.atlassian.net/wiki/spaces/PROMOSERVICE/pages/2238251836/Campaign+types
  enum CampaignType {
    // following latest buf lint convention to use unspecified
    CAMPAIGN_TYPE_UNSPECIFIED = 0;
    // ad campaign
    CAMPAIGN_TYPE_AD = 1;
    // promo campaign
    CAMPAIGN_TYPE_PROMO = 2;
    // benefits campaign
    // https://docs.google.com/document/d/1kAHeZhjjN23uKC6BQZPpu-8kpLbUXPLizbDiUClu6_s/edit#heading=h.pensnth0f7q8
    CAMPAIGN_TYPE_BENEFIT = 3;
  }

  // will be generated by the service during a create request, must be present during an update
  google.protobuf.StringValue id = 1;

  google.protobuf.StringValue name = 2;
  google.protobuf.StringValue description = 3;

  google.protobuf.StringValue template_id = 4; // "foreign key" to the template from which it was created
  google.protobuf.StringValue template_name = 5; // operators may change this, if its ever to be displayed somewhere
  // TODO handle localization : language, timezone, currency.  if languages translated through a service, do we need a data point to represent which language or will the app handle that? All timestamps in UTC? all data points about money require a currency code?

  oneof value {
    Fee fee = 6; // deprecated
    money.Funding funding = 19;
  }

  // Limitations - start/end dates, whether campaign is active, dayparts, max redemptions, budgets
  repeated Limitation limitations = 7;

  // Placements for this campaign to be advertised throughout our app/site
  repeated Placement placements = 8;

  // StoreMembership objects for this campaign, tying stores to this campaign for their specific implementations
  repeated Membership memberships = 9;

  // audience, new users etc. i.e. who is eligible to view placements or redeem incentives
  repeated UserCriterion user_criteria = 10;

  // the promotion associated with this campaign, may contain many different incentives and/or criteria
  Promotion promotion = 11;

  //who created this record
  common.Creator created_by = 12;

  //when was this record created
  google.protobuf.Timestamp created_at = 13;

  //notes
  google.protobuf.StringValue notes = 14;

  repeated CustomErrorOverride overrides = 15;

  google.protobuf.StringValue name_c3po_key = 16;
  google.protobuf.StringValue description_c3po_key = 17;

  map<string, string> metadata = 18;

  repeated MerchantCriterion merchant_criteria = 20;

  google.protobuf.BoolValue is_invoiced = 21;
  google.protobuf.StringValue netsuite_entity_id = 22;
  google.protobuf.StringValue salesforce_opportunity = 23;
  google.protobuf.StringValue salesforce_opportunity_line_item_id = 24;

  google.protobuf.StringValue directly_responsible_individual = 25;
  google.protobuf.StringValue business_campaign = 26;
  Vertical.Type vertical = 27;
  google.protobuf.StringValue attribution_channel = 28;
  common.Creator updated_by = 29;

  // TODO: migrate created_at timestamps to updated_at
  google.protobuf.Timestamp updated_at = 30;

  // what service created this campaign
  google.protobuf.StringValue created_by_source = 31;
  google.protobuf.StringValue updated_by_source = 32;

  // a value that is used by external systems to identify this campaign,
  // specified at creation time
  google.protobuf.StringValue external_campaign_id = 33;

  // if applicable, info to track why a campaign was deactivated.
  DeactivationInfo deactivation_info = 34;

  // special promotion types for pricing/order to tie groups of campaigns together in accounting
  PromotionTypeGroup promotion_type_group = 35;

  // market states that this campaign is eligible for
  MarketStateCriteria market_state_criteria = 36;

  // Deprecated, use total_placement_fees.total_placement_fee instead
  // one time fee charge to mx for the whole period running the campaign (not multiplied by periods), e.g. homepage banner flat fee
  money.MonetaryFields total_placement_fee = 37 [deprecated = true];

  repeated AdGroup ad_groups = 38;

  // campaign objective
  Objective objective = 39;

  // campaign types
  repeated CampaignType type = 40;

  // Deprecated, use total_placement_fees.salesforce_opportunity_line_item_id instead
  // need to have a separate salesforce lineitem id for total_placement_fee
  google.protobuf.StringValue total_placement_fee_salesforce_opportunity_line_item_id = 41 [deprecated = true];

  GeoRestrictedBy geo_restricted_by = 42;

  // need to have a separate salesforce lineitem id for CPA invoicing
  // Replaced by ads_billing
  google.protobuf.StringValue cpa_salesforce_opportunity_line_item_id = 43 [deprecated = true];

  message GeoRestrictedBy {
    enum GeoLevel {
      INVALID = 0;
      UNSET = 1;
      MARKET = 2;
      SUBMARKET = 3;
      DISTRICT = 4;
    }
    GeoLevel geo_level = 1;
    repeated string string_ids = 2;
  }

  // Replaced by ads_billing
  repeated TotalPlacementFee total_placement_fees = 44 [deprecated = true];
  // Replaced by ads_billing
  google.protobuf.BoolValue is_cpa_invoiced = 45 [deprecated = true];

  FreeTrial free_trial = 46;
  // Replaced by ads_billing
  repeated CPMFee cpm_fees = 47 [deprecated = true];

  repeated Billing billings = 48;

  // dedicated campaign-level CPG invoicing parameters
  google.protobuf.StringValue cpg_salesforce_opportunity = 49;
  google.protobuf.StringValue cpg_netsuite_entity_id = 50;

  repeated NotificationRecipient notification_recipients = 51;

  // single boolean expression object utilizing criterion and limitations
  EligibilityExpression eligibility_expression = 52;

  // Metadata regarding owner of campaign
  AdvertiserEntity advertiser_entity = 53;

  // Campaign Term and Condition
  TermAndCondition term_and_condition = 54;

  // Billing profile used by an advertiser. Relationship is 1 Advertiser <> many billing profiles.
  // See the following RFC for more details https://docs.google.com/document/d/1JPpifG33s67mavdEfuQaqFCUjkOBfsP4IboxKCljYV0/edit
  google.protobuf.StringValue billing_profile_id = 55;

  // Replaced by common.FederatedSource
  FederatedSource.Type federated_source = 56 [deprecated = true];

  CampaignStatusFlow status = 57;

  money.FederatedSource.Type federated_source_type = 58;

  // deduplication conditions to be used to remove self-competition
  DeduplicationCondition deduplication_conditions = 59;
  // click to claim
  google.protobuf.BoolValue is_click_to_claim = 60;

  // Persisted campaign status in the DB
  State campaign_state = 61;

  // Derived status only on the read path
  // Does not get persisted in the DB
  DerivedStatus campaign_derived_status = 62;

  // when the state of the entity is changed, this field will be populated
  StateChangeInfo state_change_info = 63;

  // Test criteria for the campaign
  TestCriteria test_criteria = 64;
}

message DeduplicationCondition {
  // exact match strings to remove self-competition
  repeated google.protobuf.StringValue keys = 1;
}

message CampaignStatusFlow {
  StatusType status_type = 1;
  google.protobuf.StringValue workflow_id = 2;
  google.protobuf.StringValue status_id = 3;
  google.protobuf.StringValue transition_id = 4;
  google.protobuf.StringValue transition_notes = 5;

  enum StatusType {
    UNSET = 0;
    APPROVED = 1;
    DRAFT = 2;
    IN_REVIEW = 3;
    REJECTED = 4;
  }
}

message TermAndCondition {
  // This content id allow ops to create custom T&C, default to null: no custom T&C
  google.protobuf.StringValue content_id = 1;
  // This is the content that client side will be use
  common.CampaignTermAndConditionContent content = 2;
}

message PromotionTypeGroup {
  enum Type {
    UNSET = 0;
    MASTERCARD_PARTNERSHIP = 1;
  }
  Type type = 1;
}

message Vertical {
  enum Type {
    INVALID = 0;
    UNSET = 1;
    CONVENIENCE = 2;
    PICKUP = 3;
    NEW_CX_OR_ACTIVATION = 4;
    ENGAGEMENT = 5; // deprecated
    RESURRECTION = 6;
    DASHPASS = 7; // deprecated
    DRIVE = 8;
    ENTERPRISE_PROMOTIONS = 9;
    OTHER_STRATEGY_AND_OPS = 10;
    OTHER_NEW_VERTICALS = 11;
    MX_FUNDED = 12;
    CAVIAR = 13;
    AUSTRALIA = 14;
    CANADA = 15;
    SMALL_EXPERIMENTS = 16;
    NEW_CX_OR_ACQUISITION = 17;
    ALCOHOL = 18;
    PETS = 19;
    DASHMART = 20;
    GIFTING = 21;
    STOREFRONT = 22;
    PARTNER_MARKETING = 23;
    GROUP_ORDERS = 24;
    DASHPASS_ROTATING_AWARDS = 25; // deprecated
    DOORDASH_FOR_WORK = 26;
    ENTERPRISE = 27;
    GROCERY = 28;
    LARGE_ORDERS = 29;
    STRATEGIC_MARKETS = 30; // deprecated
    PREMIUM = 31;
    ENTERPRISE_CPG = 32;
    OTHER_MX = 33; // deprecated
    DASHPASS_COFUNDED = 34;
    ENTERPRISE_COFUNDED = 35; // deprecated
    SELF_DELIVERY = 36;
    DASHPASS_COFUNDED_CPG = 37;
    ADS_MIDMARKET_RX = 38;
    ADS_SMB_RX = 39;
    FUNDED_NEW_VERTICALS = 40;
    SHIP_ANYWHERE = 41;
    FLOWERS = 42;
    HOMEGOODS = 43;
    RX_ENTERPRISE = 44;
    DOORDASH_KITCHENS = 45;
    RX_MIDMARKET = 46;
    RX_SMB = 47;
    OTHER_RESTAURANTS = 48;
    VIRTUAL_BRANDS = 49;
    OTHER_COFUNDED = 50;
    DASHPASS_ADOPTION = 51;
    DASHPASS_RETENTION = 52;
    ENGAGEMENT_ACTIVE = 53;
    ENGAGEMENT_DORMANT = 54;
    DASHPASS_COFUNDED_NV = 55;
    DASHPASS_COFUNDED_OTHER = 56;
    WOLT = 57;
    RETAIL = 58;
    MX_INGESTED = 59;
    DASHPASS_RETENTION_NUDGE_ONLY = 60;
    CANADA_OCCASIONS = 61;
    MX_3P_FUNDED = 62;
    EXT_DEALS_AGGREGATOR_IBOTTA = 63;
    DASHPASS_BENEFITS = 64;
    DASHPASS_PARTNERSHIP = 65;
    MULTI_VERTICAL = 66;
  }
}

message CampaignClients {
  enum Client {
    INVALID = 0;
    UNSET = 1;
    CAMPAIGN_MANAGER = 2;
    SELF_SERVE = 3;
    BOT = 4;
    BULK_TOOLS = 5;
    RETAIL_PROMOTION_CAMPAIGN_WORKER = 6;
  }
}

message DeactivationInfo {
  enum DeactivationReason {
    INVALID = 0;
    UNSET = 1;
    MANUAL = 2;
    REDEMPTION_CAP_REACHED = 3;
    BUDGET_CAP_REACHED = 4;
    TESTING = 5;
    OTHER = 6;
  }

  DeactivationReason reason_for_deactivation = 1;
  CampaignClients.Client deactivated_by = 2;
  google.protobuf.StringValue deactivated_reason_details = 3;
}

message TotalPlacementFee {
  enum TotalPlacementFeeType {
    UNSET = 0;
    HOME_PAGE_BANNER = 1;
    SPONSOR_LISTING = 2;
    OFFERS_HUB_BANNER = 3;
    VERTICAL_LANDING_PAGE = 4;
    CRM = 5;
    OTHER = 6;
    CPG = 7;
    DOUBLE_DASH = 8;
    BRANDED_COLLECTION = 9;
    SAMPLING = 10;
    SPONSORSHIPS = 11;
    CPG_PROMO = 12;
  }
  TotalPlacementFeeType type = 1;
  money.MonetaryFields total_placement_fee = 2;
  google.protobuf.StringValue salesforce_opportunity_line_item_id = 3;
  google.protobuf.StringValue billing_profile_id = 4;
  money.Funding funding = 5;
}

message FreeTrial {
  money.MonetaryFields free_trial_credits = 1; // total free trial credit given on campaign creation
}

message CPMFee {
  // Not match the Placement.PlacementType exactly, as ops see the options differently.
  // It is easier for accounting team to see all billing information on financial section,
  // and verify setting against salesforce contract.
  // Requires mapping between Campaign placements and CPM Fee settings.
  enum CPMFeeType {
    UNSET = 0;
    HOME_PAGE_BANNER = 1;
    OFFERS_HUB_BANNER = 2;
    VERTICAL_LANDING_PAGE = 3;
    // maps to PLACEMENT_TYPE_DOUBLE_DASH_POST_CHECKOUT_BANNER
    DOUBLE_DASH_BANNER = 4;
  }
  CPMFeeType type = 1;
  money.MonetaryFields cost = 2;
  money.MonetaryFields min_billing_amount = 3;
  money.MonetaryFields max_billing_amount = 4;
  google.protobuf.StringValue salesforce_opportunity_line_item_id = 5;
}

message NotificationRecipient {
  string email = 1;
}

// Advertiser entity that owns the campaign [and has either ads/promos attached to campaign]
message AdvertiserEntity {
  // id of owner
  google.protobuf.StringValue id = 1;
  // the name of campaign owner
  google.protobuf.StringValue name = 2;
}

message FederatedSource {
  enum Type {
    UNSET = 0;
    RETAIL_INVENTORY = 1;
    NV_INCENTIVE_SERVICE = 2;
  }
}

// Criteria that's used one campaign state = TEST
message TestCriteria {
  // segment containing emails of users eligible for the test mode campaign. These users will be eligible regardless of campaign settings
  google.protobuf.StringValue segment_id = 1;

  // segment containing users testing the campaign that also need to match the campaign criteria
  google.protobuf.StringValue test_audience_segment_id = 2;

  // Any further constraints can be added below
}
