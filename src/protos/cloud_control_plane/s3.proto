syntax = "proto3";

package cloud_control_plane.v1;

import "cloud_control_plane/common.proto";
import "google/protobuf/wrappers.proto";

option go_package = "github.com/doordash/services-protobuf/generated/cloud_control_plane/api/v1";
option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.cloud_control_plane.rpc.api";

// AccessEntity defines an entity which can be granted access to a resource
message AccessEntity {
  // AWSIAMARN is an AWS IAM ARN
  message AWSIAMARN {
    // arn is the ARN of the entity
    google.protobuf.StringValue arn = 1;
  }

  // entity is the entity with access
  oneof entity {
    // aws_iam_arn is the AWS IAM ARN of the entity
    AWSIAMARN aws_iam_arn = 1;
  }
}

// S3BucketConfig defines the configuration values for an S3 bucket
message S3BucketConfig {
  // RetentionMode is the mode of retention for the bucket
  enum RetentionMode {
    // RETENTION_MODE_UNSPECIFIED is an unspecified retention mode
    RETENTION_MODE_UNSPECIFIED = 0;
    // RETENTION_MODE_GOVERNANCE is a governance retention mode
    RETENTION_MODE_GOVERNANCE = 1;
    // RETENTION_MODE_COMPLIANCE is a compliance retention mode
    RETENTION_MODE_COMPLIANCE = 2;
  }

  // ObjectRetentionData defines the retention data for the bucket
  message ObjectRetentionData {
    // object_lock_enabled determines whether or not object lock is enabled
    google.protobuf.BoolValue object_lock_enabled = 1;
    // retention_mode is the retention mode for the bucket
    RetentionMode retention_mode = 2;
    // retention_days is the number of days to retain objects
    google.protobuf.Int32Value retention_days = 3;
  }

  // EncryptionType is the type of encryption for the bucket
  enum EncryptionType {
    // ENCRYPTION_TYPE_UNSPECIFIED is an unspecified encryption type
    ENCRYPTION_TYPE_UNSPECIFIED = 0;
    // ENCRYPTION_TYPE_SSE_S3 is the server-side encryption type for S3
    ENCRYPTION_TYPE_SSE_S3 = 1;
    // ENCRYPTION_TYPE_SSE_KMS is the KMS encryption type for S3
    ENCRYPTION_TYPE_SSE_KMS = 2;
  }

  // EncryptionData defines the encryption data for the bucket
  message EncryptionData {
    // encryption_type is the type of encryption for the bucket
    EncryptionType encryption_type = 1;
    // kms_key_id is the KMS key ID for the bucket
    google.protobuf.StringValue kms_key_id = 2;
  }

  // AccessControlData defines the access control data for the bucket
  message AccessControlData {
    // ListingAccessEntities defines an entity with optional listing permissions
    message ListingAccessEntities {
      // entities are the entities with access
      repeated AccessEntity entities = 1;
      // listing_enabled determines whether or not listing is enabled
      google.protobuf.BoolValue listing_enabled = 2;
    }

    // admins are the entities with admin access
    repeated AccessEntity admins = 1;
    // readers are the entities with read access
    repeated AccessEntity readers = 2;
    // writer_entities are the entities with write access
    ListingAccessEntities writers = 3;
    // deleter_entities are the entities with delete access
    ListingAccessEntities deleters = 4;
    // additional_policy is the additional policy for the bucket
    google.protobuf.StringValue additional_policy = 5;
    // reader_restore_enabled determines whether or not readers are allowed to restore objects
    google.protobuf.BoolValue reader_restore_enabled = 6;
  }

  // PrefixLevelAccessControlData defines the prefix level access control data for the bucket
  message PrefixLevelAccessControlData {
    // AccessEntities defines the entities with access to a prefix
    message AccessEntities {
      // entities are the entities with access
      repeated AccessEntity entities = 1;
    }

    // readers_mapping is the mapping of prefixes to readers
    map<string, AccessEntities> readers_mapping = 1;
    // writers_mapping is the mapping of prefixes to writers
    map<string, AccessEntities> writers_mapping = 2;
    // deleters_mapping is the mapping of prefixes to deleters
    map<string, AccessEntities> deleters_mapping = 3;
    // reader_restore_enabled determines whether or not readers are allowed to restore objects
    google.protobuf.BoolValue reader_restore_enabled = 4;
  }

  // LifeCycleRulesData defines the lifecycle rules for the bucket
  message LifeCycleRulesData {
    // StorageTier is the type of storage tier
    enum StorageTier {
      // STORAGE_TIER_UNSPECIFIED is an unspecified storage tier
      STORAGE_TIER_UNSPECIFIED = 0;
      // STORAGE_TIER_STANDARD_IA is the standard IA storage tier
      STORAGE_TIER_STANDARD_IA = 1;
      // STORAGE_TIER_INTELLIGENT_TIERING is the intelligent tiering storage tier
      STORAGE_TIER_INTELLIGENT_TIERING = 2;
      // STORAGE_TIER_ONE_ZONE_IA is the one zone IA storage tier
      STORAGE_TIER_ONE_ZONE_IA = 3;
      // STORAGE_TIER_GLACIER_IR is the glacier IR storage tier
      STORAGE_TIER_GLACIER_IR = 4;
      // STORAGE_TIER_GLACIER is the glacier storage tier
      STORAGE_TIER_GLACIER = 5;
      // STORAGE_TIER_DEEP_ARCHIVE is the deep archive storage tier
      STORAGE_TIER_DEEP_ARCHIVE = 6;
    }

    // LifeCycleRule defines a lifecycle rule for the bucket
    message LifeCycleRule {
      // Transition defines a transition for the lifecycle rule
      message Transition {
        // id is the id of the transition
        google.protobuf.Int32Value id = 1;
        // storage_tier is the storage tier of the transition
        StorageTier storage_tier = 2;
        // after_days is the number of days after which the transition should occur
        google.protobuf.Int32Value after_days = 3;
      }

      // id is the id of the rule
      google.protobuf.Int32Value id = 1;
      // nice_id is the nice id of the rule
      google.protobuf.StringValue nice_id = 2;
      // object_path is the path of the object
      google.protobuf.StringValue object_path = 3;
      // current_transitions are the current transitions for the rule
      repeated Transition current_transitions = 4;
      // old_transitions are the old transitions for the rule
      repeated Transition old_transitions = 5;
      // current_version_expire_days is the number of days to expire the current version
      google.protobuf.Int32Value current_version_expire_days = 6;
      // old_version_expire_days is the number of days to expire the old version
      google.protobuf.Int32Value old_version_expire_days = 7;
    }

    // ArchiveOptions defines the archive options for the lifecycle rules
    message ArchiveOptions {
      // enabled determines whether or not archiving is enabled
      google.protobuf.BoolValue enabled = 1;
      // retention_days is the number of days to retain archives
      google.protobuf.Int32Value retention_days = 2;
    }

    // rules are the lifecycle rules
    repeated LifeCycleRule rules = 1;
    // smart_archive_options are the smart archive options
    ArchiveOptions smart_archive_options = 2;
    // deep_archive_options are the deep archive options
    ArchiveOptions deep_archive_options = 3;
  }

  // VersioningStatus is the status of versioning for the bucket
  enum VersioningStatus {
    // VERSIONING_STATUS_UNSPECIFIED is an unspecified versioning status
    VERSIONING_STATUS_UNSPECIFIED = 0;
    // VERSIONING_STATUS_ENABLED is the enabled versioning status
    VERSIONING_STATUS_ENABLED = 1;
    // VERSIONING_STATUS_DISABLED is the disabled versioning status
    VERSIONING_STATUS_DISABLED = 2;
    // VERSIONING_STATUS_SUSPENDED is the suspended versioning status
    VERSIONING_STATUS_SUSPENDED = 3;
  }

  // ServerAccessLoggingData defines the server access logging data for the bucket
  message ServerAccessLoggingData {
    // target_bucket is the target bucket for the logs
    google.protobuf.StringValue target_bucket = 1;
    // target_prefix is the target prefix for the logs
    google.protobuf.StringValue target_prefix = 2;
  }

  // name is the name of the S3 bucket
  google.protobuf.StringValue name = 1;
  // object_retention_data is the object retention data for the bucket
  ObjectRetentionData object_retention_data = 2;
  // encryption_data is the encryption data for the bucket
  EncryptionData encryption_data = 3;
  // access_control_data is the access control data for the bucket
  AccessControlData access_control_data = 4;
  // prefix_level_access_control_enabled determines whether or not prefix level access control is enabled
  google.protobuf.BoolValue prefix_level_access_control_enabled = 5;
  // prefix_level_access_control_data is the prefix level access control data for the bucket
  PrefixLevelAccessControlData prefix_level_access_control_data = 6;
  // lifecycle_enabled determines whether or not lifecycle is enabled
  google.protobuf.BoolValue lifecycle_enabled = 7;
  // lifecycle_data is the lifecycle data for the bucket
  LifeCycleRulesData lifecycle_data = 8;
  // versioning_status is the versioning status for the bucket
  VersioningStatus versioning_status = 9;
  // object_lock_enabled determines whether or not object lock is enabled
  google.protobuf.BoolValue object_lock_enabled = 10;
  // logging_data is the server access logging data for the bucket
  ServerAccessLoggingData logging_data = 11;
  // tags are the tags to associate with the bucket
  repeated Tag tags = 12;
}

// S3BucketOutputs defines the output values for an S3 bucket
message S3BucketOutputs {
  // bucket_name is the name of the bucket
  google.protobuf.StringValue bucket_name = 1;
  // bucket_arn is the ARN of the bucket
  google.protobuf.StringValue bucket_arn = 2;
  // kms_key_arn is the ARN of the KMS key
  google.protobuf.StringValue kms_key_arn = 3;
  // prefix_to_access_point is the mapping of prefixes to access points
  map<string, google.protobuf.StringValue> prefix_to_access_point = 4;
}

// CreateS3BucketRequest defines the request for creating a new S3 bucket for a microservice
message CreateS3BucketRequest {
  // environment is the environment in which the bucket should be created
  Environment environment = 1;

  // service_name is the name of the service that will own the bucket
  google.protobuf.StringValue service_name = 2;

  // owning_group is the name of the Okta group that owns the bucket
  google.protobuf.StringValue owning_group = 3;

  // config is the desired configuration of the bucket
  S3BucketConfig config = 4;
}

// CreateS3BucketResponse defines the response for creating a new S3 bucket for a microservice
message CreateS3BucketResponse {
  // metadata is the metadata for the bucket
  ResourceMetadata metadata = 1;
}

// GetS3BucketRequest defines the request for getting an S3 bucket for a microservice
message GetS3BucketRequest {
  // id is the id of the S3 bucket
  google.protobuf.StringValue id = 1;
}

// GetS3BucketResponse defines the response for getting an S3 bucket for a microservice
message GetS3BucketResponse {
  // config is the configuration of S3 bucket
  S3BucketConfig config = 1;

  // outputs are the outputs of the bucket
  S3BucketOutputs outputs = 2;

  // metadata is the metadata for the bucket
  ResourceMetadata metadata = 3;
}

// UpdateS3BucketRequest defines the request for updating an S3 bucket for a microservice
message UpdateS3BucketRequest {
  // id is the id of the S3 bucket
  google.protobuf.StringValue id = 1;

  // config is the desired configuration of the bucket
  S3BucketConfig config = 2;
}

// UpdateS3BucketResponse defines the response for updating an S3 bucket for a microservice
message UpdateS3BucketResponse {
  // metadata is the metadata for the bucket
  ResourceMetadata metadata = 1;
}

// ListS3BucketsRequest defines the request for listing S3 buckets
message ListS3BucketsRequest {
  // page is the 1-based page to retrieve
  google.protobuf.Int32Value page = 1;
  // limit is the number of items to retrieve per page
  google.protobuf.Int32Value limit = 2;
}

// ListS3BucketsResponse defines the response for listing S3 buckets
message ListS3BucketsResponse {
  // Bucket is a container for all bucket-related information
  message Bucket {
    // config is the configuration of S3 bucket
    S3BucketConfig config = 1;

    // outputs are the outputs of the bucket
    S3BucketOutputs outputs = 2;

    // metadata is the metadata for the bucket
    ResourceMetadata metadata = 3;
  }

  // buckets are the returned buckets
  repeated Bucket buckets = 1;

  // next_page is the number of the next page to retrieve, or 0 if there are no more pages
  google.protobuf.Int32Value next_page = 2;

  // limit is the limit that was used to generate the page
  google.protobuf.Int32Value limit = 3;
}

// ImportS3BucketRequest defines the request for importing an existing S3 bucket
message ImportS3BucketRequest {
  // infra_service_resource_id is the ID of the infra service resource
  google.protobuf.StringValue infra_service_resource_id = 1;

  // environment is the environment in which the bucket lives
  Environment environment = 2;

  // service_name is the name of the service that owns the bucket
  google.protobuf.StringValue service_name = 3;

  // owning_group is the name of the Okta group that owns the bucket
  google.protobuf.StringValue owning_group = 4;
}

// ImportS3BucketResponse defines the response for importing an existing S3 bucket
message ImportS3BucketResponse {
  // metadata is the metadata for the bucket
  ResourceMetadata metadata = 1;
}
