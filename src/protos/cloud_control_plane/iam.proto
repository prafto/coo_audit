syntax = "proto3";

package cloud_control_plane.v1;

import "cloud_control_plane/common.proto";
import "google/protobuf/wrappers.proto";

option go_package = "github.com/doordash/services-protobuf/generated/cloud_control_plane/api/v1";
option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.cloud_control_plane.rpc.api";

// IAMRoleConfig defines the configuration values for an IAM role
message IAMRoleConfig {
  // Role Name
  google.protobuf.StringValue role_name = 1;

  // Role will be used by the service to access AWS resources
  message MicroserviceRole {
    // Controls whether the role has permissions to access Pulse service
    google.protobuf.BoolValue enable_pulse_permissions = 1;

    // Controls whether the role has permissions to access Pressure service
    google.protobuf.BoolValue enable_pressure_permissions = 2;

    // Elasticsearch domain configuration
    repeated ElasticsearchDomainConfig elasticsearch_domain_permissions = 3;

    // Additional IAM policy document to be attached to the role
    repeated google.protobuf.StringValue policy_arns = 4;
  }

  // Role will be assumed using SSO
  message SSORole {
    // Controls whether the role has read-only access to AWS account
    google.protobuf.BoolValue enable_aws_account_readonly = 1;

    // Elasticsearch domain configuration
    repeated ElasticsearchDomainConfig elasticsearch_domain_permissions = 2;

    // Additional IAM policy document to be attached to the role
    repeated google.protobuf.StringValue policy_arns = 3;
  }

  // Role will be assumed using an external principal
  message ExternalRole {
    // Principal to assume the role
    repeated google.protobuf.StringValue principals = 1;
  }

  // Role type
  oneof role_details {
    // MicroserviceRole is the role that will be assumed by the service
    MicroserviceRole microservice = 2;
    // SSORole is the role that will be assumed by the SSO user
    SSORole sso = 3;
    // ExternalRole is the role that will be assumed by an external principal
    ExternalRole external = 4;
  }

  // tags are the tags to associate with the role
  repeated Tag tags = 5;
}

// ElasticsearchDomainConfig defines the Elasticsearch domain configuration
message ElasticsearchDomainConfig {
  // The name of the Elasticsearch domain to grant access to
  google.protobuf.StringValue elasticsearch_domain = 1;

  // Controls whether the role can describe Elasticsearch domains
  google.protobuf.BoolValue enable_es_describe_permissions = 2;

  // Controls whether the role can manage Elasticsearch packages
  google.protobuf.BoolValue enable_es_package_permissions = 3;

  // Controls whether the role has HTTP access to Elasticsearch endpoints
  google.protobuf.BoolValue enable_es_http_access = 4;
}

// IAMRoleOutputs defines the output values for an IAM role
message IAMRoleOutputs {
  // role_arn is the AWS ARN of the role
  google.protobuf.StringValue role_arn = 1;

  // role_id is the unique identifier for the role
  google.protobuf.StringValue role_id = 2;
}

// CreateIAMRoleRequest defines the request for creating a new IAM role
message CreateIAMRoleRequest {
  // environment is the environment in which the role should be created
  Environment environment = 1;

  // service_name is the name of the service that will own the role
  google.protobuf.StringValue service_name = 2;

  // owning_group is the name of the Okta group that owns the role
  google.protobuf.StringValue owning_group = 3;

  // config is the desired configuration of the role
  IAMRoleConfig config = 4;
}

// CreateIAMRoleResponse defines the response for creating a new IAM role
message CreateIAMRoleResponse {
  // metadata is the metadata for the role
  ResourceMetadata metadata = 1;
}

// GetIAMRoleRequest defines the request for getting an IAM role
message GetIAMRoleRequest {
  // Deprecated: use role_id instead
  google.protobuf.StringValue role_name = 1;

  // role_id is the unique identifier for the role
  google.protobuf.StringValue role_id = 2;
}

// GetIAMRoleResponse defines the response for getting an IAM role
message GetIAMRoleResponse {
  // config is the configuration of IAM role
  IAMRoleConfig config = 1;

  // outputs are the outputs of the role
  IAMRoleOutputs outputs = 2;

  // metadata is the metadata for the role
  ResourceMetadata metadata = 3;
}

// UpdateIAMRoleRequest defines the request for updating an IAM role
message UpdateIAMRoleRequest {
  // Deprecated: use role_id instead
  google.protobuf.StringValue role_name = 1;

  // config is the desired configuration of the role
  IAMRoleConfig config = 2;

  // role_id is the unique identifier for the role
  google.protobuf.StringValue role_id = 3;
}

// UpdateIAMRoleResponse defines the response for updating an IAM role
message UpdateIAMRoleResponse {
  // metadata is the metadata for the role
  ResourceMetadata metadata = 1;
}

// ListIAMRolesRequest defines the request for listing IAM roles
message ListIAMRolesRequest {
  // page is the 1-based page to retrieve
  google.protobuf.Int32Value page = 1;
  // limit is the number of items to retrieve per page
  google.protobuf.Int32Value limit = 2;
}

// ListIAMRolesResponse defines the response for listing IAM roles
message ListIAMRolesResponse {
  // Role is a container for all role-related information
  message Role {
    // config is the configuration of IAM role
    IAMRoleConfig config = 1;

    // outputs are the outputs of the role
    IAMRoleOutputs outputs = 2;

    // metadata is the metadata for the role
    ResourceMetadata metadata = 3;
  }

  // roles are the returned roles
  repeated Role roles = 1;

  // next_page is the number of the next page to retrieve, or 0 if there are no more pages
  google.protobuf.Int32Value next_page = 2;

  // limit is the limit that was used to generate the page
  google.protobuf.Int32Value limit = 3;
}

// ImportS3IAMRoleRequest defines the request for importing an existing IAM role
message ImportIAMRoleRequest {
  // infra_service_resource_id is the ID of the infra service resource
  google.protobuf.StringValue infra_service_resource_id = 1;

  // environment is the environment in which the role lives
  Environment environment = 2;

  // service_name is the name of the service that owns the role
  google.protobuf.StringValue service_name = 3;

  // owning_group is the name of the Okta group that owns the role
  google.protobuf.StringValue owning_group = 4;
}

// ImportIAMRoleResponse defines the response for importing an existing IAM role
message ImportIAMRoleResponse {
  // metadata is the metadata for the bucket
  ResourceMetadata metadata = 1;
}
