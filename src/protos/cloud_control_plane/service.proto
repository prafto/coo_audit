syntax = "proto3";

package cloud_control_plane.v1;

import "cloud_control_plane/ecr.proto";
import "cloud_control_plane/iam.proto";
import "cloud_control_plane/operation.proto";
import "cloud_control_plane/s3.proto";
import "cloud_control_plane/sftp.proto";

option go_package = "github.com/doordash/services-protobuf/generated/cloud_control_plane/api/v1";
option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.cloud_control_plane.rpc.api";

// CloudControlPlaneService is the GRPC service for the Cloud Control Plane web API
service CloudControlPlaneService {
  // CreateECRRepo creates an ECR repo
  rpc CreateECRRepo(CreateECRRepoRequest) returns (CreateECRRepoResponse);
  // GetECRRepo gets an ECR repo
  rpc GetECRRepo(GetECRRepoRequest) returns (GetECRRepoResponse);
  // UpdateECRRepo updates an ECR repo
  rpc UpdateECRRepo(UpdateECRRepoRequest) returns (UpdateECRRepoResponse);
  // ListECRRepos lists ECR repos
  rpc ListECRRepos(ListECRReposRequest) returns (ListECRReposResponse);
  // ImportECRRepo imports an ECR repo
  rpc ImportECRRepo(ImportECRRepoRequest) returns (ImportECRRepoResponse);
  // CreateIamRole creates an IAM role
  rpc CreateIAMRole(CreateIAMRoleRequest) returns (CreateIAMRoleResponse);
  // GetIAMRole gets an IAM Role
  rpc GetIAMRole(GetIAMRoleRequest) returns (GetIAMRoleResponse);
  // UpdateIAMRole updates an IAM Role
  rpc UpdateIAMRole(UpdateIAMRoleRequest) returns (UpdateIAMRoleResponse);
  // ListIAMRoles lists IAM Roles
  rpc ListIAMRoles(ListIAMRolesRequest) returns (ListIAMRolesResponse);
  // ImportIAMRole imports an IAM Role
  rpc ImportIAMRole(ImportIAMRoleRequest) returns (ImportIAMRoleResponse);
  // CreateS3Bucket creates an S3 bucket
  rpc CreateS3Bucket(CreateS3BucketRequest) returns (CreateS3BucketResponse);
  // GetS3Bucket gets an S3 bucket
  rpc GetS3Bucket(GetS3BucketRequest) returns (GetS3BucketResponse);
  // UpdateS3Bucket updates an S3 bucket
  rpc UpdateS3Bucket(UpdateS3BucketRequest) returns (UpdateS3BucketResponse);
  // ListS3Buckets lists S3 buckets
  rpc ListS3Buckets(ListS3BucketsRequest) returns (ListS3BucketsResponse);
  // ImportS3Bucket imports an S3 bucket
  rpc ImportS3Bucket(ImportS3BucketRequest) returns (ImportS3BucketResponse);
  // CreateSFTPServer creates an SFTP server
  rpc CreateSFTPServer(CreateSFTPServerRequest) returns (CreateSFTPServerResponse);
  // GetSFTPServer gets an SFTP server
  rpc GetSFTPServer(GetSFTPServerRequest) returns (GetSFTPServerResponse);
  // UpdateSFTPServer updates an SFTP server
  rpc UpdateSFTPServer(UpdateSFTPServerRequest) returns (UpdateSFTPServerResponse);
  // ListSFTPServers lists SFTP servers
  rpc ListSFTPServers(ListSFTPServersRequest) returns (ListSFTPServersResponse);
  // ImportSFTPServer imports an SFTP server
  rpc ImportSFTPServer(ImportSFTPServerRequest) returns (ImportSFTPServerResponse);

  // Operations
  //
  // Operations are updates that modify one or more resources. Operations return operation metadata
  // that can be used to track the status of the operation.

  // ConfigureS3BucketAccess performs an operation to configure S3 bucket access
  rpc ConfigureS3BucketAccess(ConfigureS3BucketAccessRequest) returns (ConfigureS3BucketAccessResponse);
}
