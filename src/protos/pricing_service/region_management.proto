syntax = "proto3";

package pricing_service.v1;

import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";

option go_package = "github.com/doordash/services-protobuf/generated/pricing_service/api/v1";
option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.pricing_service.rpc.api";

// APIs for region management service
service RegionManagementService {
  // Get region group
  rpc GetRegionGroup(GetRegionGroupRequest) returns (GetRegionGroupResponse);
  // Create region group
  rpc CreateRegionGroup(CreateRegionGroupRequest) returns (CreateRegionGroupResponse);
  // Add stores to region group
  rpc AddStoresToRegionGroup(AddStoresToRegionGroupRequest) returns (AddStoresToRegionGroupResponse);
  // Remove stores from region group
  rpc RemoveStoresFromRegionGroup(RemoveStoresFromRegionGroupRequest) returns (RemoveStoresFromRegionGroupResponse);
  // Create base store id to competitor store ids mapping
  rpc CreateBaseStoreIdToCompetitorStoreIdsMapping(CreateBaseStoreIdToCompetitorStoreIdsMappingRequest) returns (CreateBaseStoreIdToCompetitorStoreIdsMappingResponse);
}

// Request for GetRegionGroup API
message GetRegionGroupRequest {
  // [Required] region group id
  string region_group_id = 1;
  // [optional] page token
  google.protobuf.StringValue page_token = 2;
  // [optional] page size, default to 1000
  google.protobuf.Int32Value page_size = 3;
}

// Response for GetRegionGroup API
message GetRegionGroupResponse {
  // [Required] a list of competitor stores information
  repeated StoreInfo store_infos = 1;
  // [Required] page token
  string page_token = 2;

  // store info
  message StoreInfo {
    // store id
    string store_id = 1;
    // store name
    string store_name = 2;
    // business id
    string business_id = 3;
    // business name
    string business_name = 4;
    // priority
    string priority = 5;
  }
}

// Request for CreateRegionGroup API
message CreateRegionGroupRequest {
  // [required] region group id
  string region_group_id = 1;
  // [required] region group display name
  string region_group_name = 2;
  // [required] country code (USA/CAN)
  string country = 3;
}

// Response for CreateRegionGroup API
message CreateRegionGroupResponse {}

// Request for AddStoresToRegionGroup API
message AddStoresToRegionGroupRequest {
  // [Required] region group id
  string region_group_id = 1;
  // [Required] a list of store configs to be added
  repeated StoreConfig store_configs = 2;
  // store config
  message StoreConfig {
    // [Required] region group id
    string store_id = 1;
    // [required] role (base/priority/standard)
    string role = 2;
  }
}

// Response for AddStoresToRegionGroup API
message AddStoresToRegionGroupResponse {
  // [Optional] a list of stores ids failed to add
  repeated string failed_store_ids = 1;
}

// Request for RemoveStoresFromRegionGroup API
message RemoveStoresFromRegionGroupRequest {
  // [Required] region group id
  string region_group_id = 1;
  // [Required] a list of stores ids to be added
  repeated string store_ids = 2;
}

// Response for RemoveStoresFromRegionGroup API
message RemoveStoresFromRegionGroupResponse {}

// Request for CreateBaseStoreIdToCompetitorStoreIdsMapping API
message CreateBaseStoreIdToCompetitorStoreIdsMappingRequest {
  // [Required] a list of base store id to competitor store ids mapping
  repeated BaseStoreIdToCompetitorStoreIdsMapping base_store_id_to_competitor_store_ids_mappings = 1;
}

// Object to store mapping between base store id and competitor store ids
message BaseStoreIdToCompetitorStoreIdsMapping {
  // [Required] base store id
  string base_store_id = 1;
  // [Required] a list of competitor store ids
  repeated string competitor_store_ids = 2;
}

// Response for CreateBaseStoreIdToCompetitorStoreIdsMapping API
message CreateBaseStoreIdToCompetitorStoreIdsMappingResponse {}
