syntax = "proto3";

option java_multiple_files = true;
option java_generic_services = true;

import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

package dasher_service.safety;
option java_package = "com.doordash.rpc.dasher.safety";

// A service in support of Crisis Alert related initiatives
service CrisisAlertService {
    // Store Crisis Alert Notification and process the alert by carrying out automated steps
    rpc ConsumeCrisisAlertPushNotification(CrisisAlertPushNotificationRequest) returns (CrisisAlertPushNotificationResponse);
    // Used by Ops Agents to create Crisis Alert Response by providing eventId and radius
    rpc CreateCrisisAlertResponse(CreateCrisisAlertResponseRequest) returns (CreateCrisisAlertResponseResponse);
    // Used for Ops agents to view the list of responses that were taken
    rpc ListCrisisAlertResponses(ListCrisisAlertResponsesRequest) returns (ListCrisisAlertResponsesResponse);
    // Used to get a single CrisisAlertResponse
    rpc GetCrisisAlertResponse(GetCrisisAlertResponseRequest) returns (GetCrisisAlertResponseResponse);
    // Use to revert a Crisis Alert event
    rpc RevertCrisisAlertResponse(RevertCrisisAlertResponseRequest) returns (RevertCrisisAlertResponseResponse);
}

// request to revert a crisis alert response
message RevertCrisisAlertResponseRequest {
  // event id of the crisis that should be reverted
  string event_id = 1;
}

// response for reverting a crisis alert
message RevertCrisisAlertResponseResponse {
  // The reverted crisis alert
  CrisisAlertResponse crisis_alert_response = 1;
}

// get crisis alert response request
message GetCrisisAlertResponseRequest {
  // event id of the crisis that has occurred
  string event_id = 1;
}

// Get crisis alert response response
message GetCrisisAlertResponseResponse {
  // The crisis alert requested
  CrisisAlertResponse crisis_alert_response = 1;
}

// Samdesk webhook notification request
message CrisisAlertPushNotificationRequest {
    // raw json message from the notification
    string raw_message = 1;
}

// Response on the processing of crisis alert notification
message CrisisAlertPushNotificationResponse {
    message Success {
    }

    message UpdateError {
        string error_code = 1;
        string error_message = 2;
    }

    // result is either success or error
    oneof result {
        // on success
        Success success = 1;
        // on error
        UpdateError error = 2;
    }
}

// Request to make Crisis Alert Response
message CreateCrisisAlertResponseRequest {
   // event id of the crisis that has occurred
   string event_id = 1;
   // radius in meters to determine the distance of stores from the incident, which need to be closed
   int32 radius_in_meters = 2;
   // list of storeIds to be closed specifically for this event.
   repeated int64 store_ids = 3;
}

// Currently Empty but might need to populate in future
message CreateCrisisAlertResponseResponse {}

// Currently Empty but might need to populate in future for pagination and limit
message ListCrisisAlertResponsesRequest {}

// returns the list of All Crisis Alert Responses
message ListCrisisAlertResponsesResponse {
   // list of crisis alert responses
   repeated CrisisAlertResponse crisis_alert_response_list = 1;
   // count of crisis alert responses
   int32 count = 2;
}

// Response to show all the crisis alerts which were responded by our system
message CrisisAlertResponse {
   // id of the response in the table
   string response_id = 1;
   // id of the alert in the crisis_alert table
   string alert_id = 2;
   // id of the event that caused the crisis in real world
   string event_id = 3;
   // list of store ids which were closed
   repeated int64 store_ids = 4;
   // list of deliveries which were cancelled
   repeated string delivery_uuids = 5;
   // radius in meters to determine the distance of stores from the incident, which need to be closed 
   int32 radius_in_meters = 6;
   // whether or not the crisis alert was reverted
   bool reverted = 7;
}
