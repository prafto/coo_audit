syntax = "proto3";

package dasher_service.time_slot;

import "dasher_service/dasher_vehicle.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.dasher.time_slot";

service TimeSlotService {
  rpc ListTimeSlots(ListTimeSlotRequest) returns (ListTimeSlotResponse);
  rpc GetStartingPointCurrentFilledCaps(GetStartingPointCurrentFilledCapsRequest) returns (StartingPointCurrentFilledCaps);
  rpc GetStartingPointCurrentShiftAvailability(GetStartingPointCurrentShiftAvailabilityRequest) returns (StartingPointCurrentShiftAvailability);
}

// Enum for the use case of the time slot request and controls some internal logic
enum TimeSlotUseCase {
  // unspecified use case
  TIME_SLOT_USE_CASE_UNSPECIFIED = 0;
  // use case for the dasher bff
  TIME_SLOT_USE_CASE_DASHER_BFF = 1;
  // use case for the get access endpoint
  TIME_SLOT_USE_CASE_GET_ACCESS = 2;
  // use case for shift creation and extension
  TIME_SLOT_USE_CASE_SHIFT_LIFECYCLE = 3;
}

// Enum for indicating the earnings mode of time slots.
enum EarningsMode {
  // unspecified earnings mode
  EARNINGS_MODE_UNSPECIFIED = 0;
  // earn per offer
  EARNINGS_MODE_EARN_PER_OFFER = 1;
  // earn by time
  EARNINGS_MODE_EARN_BY_TIME = 2;
}

message ListTimeSlotRequest {
  int32 dasher_id = 1;

  repeated int32 starting_point_ids = 2;

  int32 vehicle_type_id = 3;

  google.protobuf.Timestamp start_time = 4;

  google.protobuf.Timestamp end_time = 5;

  bool is_impromptu_dash = 6;

  int64 exclude_shift_id = 7;

  google.protobuf.DoubleValue lat = 8;

  google.protobuf.DoubleValue lng = 9;

  TimeSlotUseCase use_case = 10;

  repeated EarningsMode earnings_mode = 11;
}

message ListTimeSlotResponse {
  repeated TimeSlot objects = 3;
}

message TimeSlot {
  google.protobuf.Timestamp end_time = 1;

  google.protobuf.Timestamp start_time = 2;

  bool is_recommended_dash = 3;

  int32 starting_point_id = 4;

  dasher_service.dasher_vehicle.VehicleType vehicle_type = 5;

  EarningsMode earnings_mode = 6;
}

message GetStartingPointCurrentFilledCapsRequest {
  int32 starting_point_id = 1;
  repeated int32 vehicle_type_ids = 2;
}

message StartingPointCurrentFilledCaps {
  repeated StartingPointVehicleTypeFilledCaps filled_vehicle_type_caps = 1;
}

message StartingPointVehicleTypeFilledCaps {
  int32 vehicle_type_id = 1;
  float filled_percentage = 2;
}

message GetStartingPointCurrentShiftAvailabilityRequest {
  int32 starting_point_id = 1;
  repeated int32 vehicle_type_ids = 2;
}

message StartingPointCurrentShiftAvailability {
  repeated StartingPointVehicleTypeShiftAvailability vehicle_type_shift_availabilities = 1;
}

message StartingPointVehicleTypeShiftAvailability {
  int32 vehicle_type_id = 1;
  float availability_percentage = 2;
}

// Logs calls to listTimeSlots()
message ListTimeSlotLogEvent {
  // dasher id
  google.protobuf.Int64Value dasher_id = 1;
  // request starting point ids
  repeated google.protobuf.Int64Value starting_point_ids = 2;
  // request vehicle type id
  google.protobuf.Int64Value vehicle_type_id = 3;
  // true if called by "dash now" button, false if from schedule tab
  google.protobuf.BoolValue is_impromptu_dash = 4;
  // requested start time
  google.protobuf.Timestamp start_time = 5;
  // requested end time
  google.protobuf.Timestamp end_time = 6;
  // dasher lat
  google.protobuf.FloatValue lat = 7;
  // dasher lng
  google.protobuf.FloatValue lng = 8;
  // sample of the time slots returned to user
  repeated google.protobuf.StringValue response_time_slots = 9;
  // starting points that returned at least one time slot
  repeated google.protobuf.Int64Value response_starting_point_ids = 10;
  // requested earnings modes
  repeated google.protobuf.StringValue earnings_modes = 11;
}
