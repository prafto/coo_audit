syntax = "proto3";

package dasher_service.dasher_self_service_tooling;

import "common/common.proto";
import "dasher_service/dasher_api.proto";
import "dasher_service/dasher_applicant.proto";
import "dasher_service/dasher_dasher.proto";
import "dasher_service/dasher_referral.proto";
import "dasher_service/dasher_vehicle.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.dasher.dasher_self_service_tooling";

// Self-Service tooling for Dasher Service
service DasherSelfServiceToolingService {
  // Insert a new record into the Top Dasher table
  rpc AddTopDasher(TopDasherRequest) returns (TopDasherResponse);

  // Update a Dasher Applicant
  rpc UpdateDasherProperties(UpdateDasherPropertiesRequest) returns (UpdateDasherPropertiesResponse);

  // bulk waive reviews by order uuid
  rpc BulkWaiveReviews(BulkWaiveReviewsRequest) returns (BulkWaiveReviewsResponse);

  // reset dasher applicant
  rpc TOFReset(TOFResetRequest) returns (TOFResetResponse);

  // reset single or all submarket capacities to 0
  rpc RefreshWeeklyCapacityForSubmarkets(RefreshWeeklyCapacityForSubmarketRequest) returns (RefreshWeeklyCapacityForSubmarketResponse);

  // creates dasher using nimda endpoints
  rpc CreateDasherNimda(dasher_service.dasher_api.CreateRequest) returns (dasher_service.dasher.Dasher);

  // includes business logic of nimda endpoints
  rpc UpdateDasherNimda(dasher_service.dasher_api.PatchRequest) returns (dasher_service.dasher.Dasher);

  // includes deactivation reasons
  rpc GetAllDeactivationReasons(google.protobuf.Empty) returns (DeactivationReasons);

  // creates vehicle by admin
  rpc CreateVehicle(CreateVehicleRequest) returns (dasher_service.dasher_vehicle.Vehicle);

  // gets vehicle data
  rpc GetVehicle(dasher_service.dasher_api.GetRequest) returns (dasher_service.dasher_vehicle.Vehicle);

  // updates vehicle data
  rpc UpdateVehicle(dasher_service.dasher_api.PatchRequest) returns (dasher_service.dasher_vehicle.Vehicle);

  // deletes vehicle
  rpc DeleteVehicle(dasher_service.dasher_api.DeleteRequest) returns (google.protobuf.Empty);

  // lists vehicles by dasher
  rpc ListVehiclesForDasher(dasher_service.dasher_vehicle.ListVehiclesForDasherRequest) returns (dasher_service.dasher_vehicle.ListVehiclesForDasherResponse);

  // lists vehicles by dasher by email
  rpc ListVehiclesForDasherByEmail(dasher_service.dasher_vehicle.ListVehiclesForDasherByEmailRequest) returns (dasher_service.dasher_vehicle.ListVehiclesForDasherResponse);
}

// Request for adding a Top Dasher
message TopDasherRequest {
  // The Dasher ID being added
  int32 dasher_id = 1;

  // the tier to qualify dasher for
  string tier = 2;

  // Dasher reward ID
  google.protobuf.Int32Value dasher_reward_id = 3;

  // How long, in days, that this Dasher will be active with Top Dasher
  google.protobuf.Int32Value active_until_time_days = 4;
}

// Response from adding a Top Dasher
message TopDasherResponse {
  // ID of the record created
  int32 id = 1;
}

// Bulk updating of select Dasher/Dasher Applicant properties
// Each property is individually defined here because we need to use
// wrapper types to make these nullable
message UpdateDasherPropertiesRequest {
  // next id number = 33

  // Dasher ID
  int32 dasher_id = 1;

  // Applicant unique link
  string unique_link = 17;

  /** Dasher Applicant model **/

  // Background Check Results
  dasher_applicant.BackgroundCheckChoices background_check_results = 2;

  // Motor Vehicle Report Results
  dasher_applicant.BackgroundCheckChoices mv_report_results = 3;

  // Thin File Verification Results
  dasher_applicant.ThinFileVerificationResults thin_file_verification_results = 4;

  // Use Dropshipping
  google.protobuf.BoolValue use_dropshipping = 5;

  // Identity Verification Status
  dasher_applicant.IdentityVerificationStatus identity_verification_status = 13;

  // Identity Verified timestamp
  google.protobuf.Timestamp identity_verified_at = 14;

  // Idv inquiry id
  string identity_inquiry_id = 15;

  // Idv template id
  string identity_template_id = 16;

  // Mailing Address - city
  google.protobuf.StringValue city = 19;

  // Mailing Address - state
  google.protobuf.StringValue state = 20;

  // Mailing Address - street address
  google.protobuf.StringValue street = 21;

  // Mailing Address - postal code
  google.protobuf.StringValue postal_code = 22;

  // Tin Status
  dasher_applicant.TinStatus tin_status = 23;

  // Ssn Status
  dasher_applicant.SsnStatus ssn_status = 24;

  // Application Status
  dasher_applicant.ApplicationStatus application_status = 30;

  // Application Status Reason Id
  int32 application_status_reason_id = 31;

  /** Dasher model **/

  // Is Oriented
  google.protobuf.BoolValue is_oriented = 6;

  // Is Active
  google.protobuf.BoolValue is_active = 7;

  // Is Background Checked
  google.protobuf.BoolValue is_background_checked = 8;

  // Instant Dashing Treatment
  google.protobuf.StringValue instant_dashing_treatment = 9;

  // Notes
  google.protobuf.StringValue notes = 10;

  // Reason for Deactivation ID
  google.protobuf.Int32Value reason_for_deactivation_id = 11;

  // Should dasher be unassigned from deliveries upon deactivation
  google.protobuf.BoolValue unassign_on_deactivation = 25;

  // Should dasher be unassigned from deliveries and checked out from current shift
  google.protobuf.BoolValue unassign_and_checkout = 29;

  // Is Eligible For Referral
  google.protobuf.BoolValue is_eligible_for_referral = 12;

  // Dx status column.
  dasher.Status status = 27;

  // Dx status reason id
  google.protobuf.Int32Value status_reason_id = 28;

  // Dasher SSN token
  google.protobuf.StringValue ssn_token = 32;

  /** Ephemeral data **/

  // Reset safety course completion flag. Deletes the dx_safety_course ephemeral data entry
  google.protobuf.BoolValue reset_safety_course = 26;

  // Dasher legal first name
  google.protobuf.StringValue legal_first_name = 33;

  // Dasher legal middle name
  google.protobuf.StringValue legal_middle_name = 34;

  // Dasher legal last name
  google.protobuf.StringValue legal_last_name = 35;
}

// Response from updating a Dasher Applicant
message UpdateDasherPropertiesResponse {
  // ID of the record created
  int32 id = 1;

  // Success or error message
  string message = 2;

  // unique link of dasher applicant
  string unique_link = 3;
}

// Request for resetting an applicant
message TOFResetRequest {
  // The Applicant ID being reset
  int32 applicant_id = 1;

  // unique link of dasher applicant
  string funnel_step = 2;
}

// Response from resetting an applicant
message TOFResetResponse {
  // ID of the record created
  int32 id = 1;

  // Success or error message
  string message = 2;

  // unique link of dasher applicant
  string unique_link = 3;
}

// bulk waive reviews by order uuid request
message BulkWaiveReviewsRequest {
  // order uuids
  repeated google.protobuf.StringValue order_uuids = 1;
}

// bulk waive reviews by order uuid response
message BulkWaiveReviewsResponse {
  // return result or error
  oneof value {
    // result
    BulkWaiveReviewsResult result = 1;
    // error
    ConsumerRatingError error = 2;
  }
}

// error details
message ConsumerRatingError {
  // error code
  ConsumerRatingErrorCode error_code = 1;
  // error message
  google.protobuf.StringValue error_message = 2;
}

// bulk waive reviews by order uuid result
message BulkWaiveReviewsResult {
  // success
  google.protobuf.BoolValue success = 1;
}

// business logic error codes for consumer rating
enum ConsumerRatingErrorCode {
  // unspecified error
  CONSUMER_RATING_ERROR_CODE_UNSPECIFIED = 0;
  // invalid parameter (possibly null) error
  CONSUMER_RATING_ERROR_CODE_INVALID_PARAMETER = 1;
}

// request: may contain 0 or more submarket_ids. In case of 0, all submarkets will be reset.
message RefreshWeeklyCapacityForSubmarketRequest {
  // submarket ids
  repeated google.protobuf.StringValue submarket_ids = 1;
}

// generic response
message RefreshWeeklyCapacityForSubmarketResponse {
  // success = true, error = false
  google.protobuf.BoolValue success = 1;
}

// for getting deactivation reasons
message ReasonForDeactivation {
  // primary key of reason
  int32 reason_id = 1;
  // string description of reason
  string reason_name = 2;
}

// listing deactivation reasons
message DeactivationReasons {
  // list of reasons
  repeated ReasonForDeactivation reasons = 1;
}

// for creating a vehicle by admin
message CreateVehicleRequest {
  // dasher id
  int32 dasher_id = 1;
  // vehicle type id
  int32 vehicle_type_id = 2;
  // vehicle make
  string make = 3;
  // vehicle model
  string model = 4;
  // vehicle year
  string year = 5;
  // vehicle color
  string color = 6;
  // license plate id
  int32 license_plate_id = 7;
  // registration expiration date
  string registration_expiration = 8;
  // registration image uploaded date
  string registration_img_uploaded_at = 9;
  // registration image
  string registration_img = 10;
}

// NOTE: IF YOU ARE ADDING FIELDS/COLUMNS WITH USER PERSONALLY IDENTIFIABLE INFORMATION, PLEASE FOLLOW THIS
// DOCUMENTATION IN ORDER TO ENSURE CCPA COMPLIANCE:
// https://doordash.atlassian.net/wiki/spaces/Eng/pages/3160834089/Making+Datalake+Table+CCPA+Compliant
// Event to log dasher active state change
message DasherStateChangeEvent {
  option (common.dataframe_transformations) = "pii_obfuscation";
  // dasher id
  int64 dasher_id = 1 [(common.pii_type) = "DASHER_ID"];
  // dasher email id
  string dasher_email_id = 2 [(common.pii_type) = "EMAIL"];
  // event names such as "DEACTIVATED", "REACTIVATED"
  EventName event_name = 3;
  // event source
  string source = 4;
  // requester id
  int64 requester_id = 5 [(common.pii_type) = "USER_ID"];
  // requested at
  google.protobuf.Timestamp requested_at = 6;
  // event payload
  oneof event_payload {
    // deactivation event
    DeactivationEvent deactivation_event = 7;
    // reactivation event
    ReactivationEvent reactivation_event = 8;
  }
}

// event names such as "DEACTIVATED", "REACTIVATED"
enum EventName {
  // "UNSPECIFIED"
  EVENT_NAME_UNSPECIFIED = 0;
  // "DEACTIVATED"
  EVENT_NAME_DEACTIVATED = 1;
  // "REACTIVATED"
  EVENT_NAME_REACTIVATED = 2;
}

// event protobuf for Deactivation event
message DeactivationEvent {
  // deactivation id
  int64 deactivation_id = 1;
  // deactivation reason
  int64 deactivation_reason = 2;
  // deactivation reason description
  string deactivation_reason_description = 3;
  // metadata
  google.protobuf.StringValue metadata = 5;
}

// event protobuf for Reactivation event
message ReactivationEvent {
  // metadata
  google.protobuf.StringValue metadata = 1;
}
