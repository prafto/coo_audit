syntax = "proto3";

package dasher_service.dasher_incident.v1;

import "dasher_service/dasher_api.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.dasher.dasher_incident";

// DasherIncidentMessages
service DasherIncidentService {
  // Get a DasherIncident by ID
  rpc GetDasherIncident(GetDasherIncidentRequest) returns (GetDasherIncidentResponse);
  // Create a DasherIncident
  rpc CreateDasherIncident(CreateDasherIncidentRequest) returns (CreateDasherIncidentResponse);
  // List `LIMIT` DasherIncident's
  rpc ListDasherIncident(ListDasherIncidentRequest) returns (ListDasherIncidentResponse);
  // Update a DasherIncident
  rpc UpdateDasherIncident(UpdateDasherIncidentRequest) returns (UpdateDasherIncidentResponse);
  // Delete a DasherIncident
  rpc DeleteDasherIncident(DeleteDasherIncidentRequest) returns (DeleteDasherIncidentResponse);
  // Generic search query for a DasherIncident
  rpc SearchDasherIncident(SearchDasherIncidentRequest) returns (SearchDasherIncidentResponse);
  // Get DasherIncident Categories
  rpc GetDasherIncidentCategories(google.protobuf.Empty) returns (GetDasherIncidentCategoriesResponse);
}

// Get a DasherIncident
message GetDasherIncidentRequest {
  // ID in dasher_incident database
  int64 id = 1;
}

// Create a DasherIncident
message CreateDasherIncidentRequest {
  // Category of DasherIncident
  string category = 1;
  // Incident notes
  string notes = 2;
  // SFDC ID
  int64 sfdc_case_id = 3;
  // ID of Dasher involved in DasherIncident
  int64 dasher_id = 4;
  // THQ uuid for this case
  string thq_uuid = 5;
}

// DasherIncidentObject
message DasherIncident {
  // ID in dasher_incident database
  int64 id = 1;
  // Category of DasherIncident
  string category = 2;
  // Incident notes
  string notes = 3;
  // SFDC ID
  int64 sfdc_case_id = 4;
  // ID of Dasher involved in DasherIncident
  int64 dasher_id = 5;
  // Time of DasherIncident creation
  google.protobuf.Timestamp created_at = 6;
  // Tx ID who created DasherIncident
  int64 created_by_id = 7;
  // THQ uuid for this case
  string thq_uuid = 8;
}

// GetDasherIncident response
message GetDasherIncidentResponse {
  // DasherIncident requested
  DasherIncident dasher_incident = 1;
}

// CreateDasherIncident response
message CreateDasherIncidentResponse {
  // DasherIncident created
  DasherIncident dasher_incident = 1;
}

// ListDasherIncident Request
message ListDasherIncidentRequest {
  // `LIMIT` of List Request
  int32 limit = 1;
}

// List of DasherIncidents
message ListDasherIncidentResponse {
  // List of DasherIncidents (contains `LIMIT` or less)
  repeated DasherIncident incidents = 1;
}

// Values to update a DasherIncident with corresponding id
message UpdateDasherIncidentRequest {
  // ID in dasher_incident database
  int64 id = 1;
  // Category of DasherIncident
  string category = 2;
  // Incident notes
  string notes = 3;
  // SFDC ID
  int64 sfdc_case_id = 4;
  // ID of Dasher involved in DasherIncident
  int64 dasher_id = 5;
  // THQ uuid for this case
  string thq_uuid = 6;
}

// Updated parameters of DasherIncident with corresponding id
message UpdateDasherIncidentResponse {
  // ID in dasher_incident database to Update to
  int64 id = 1;
  // Category of DasherIncident to Update to
  string category = 2;
  // Incident notes to Update to
  string notes = 3;
  // SFDC ID to Update to
  int64 sfdc_case_id = 4;
  // ID of Dasher involved in DasherIncident to Update to
  int64 dasher_id = 5;
  // Time of DasherIncident creation to Update to
  google.protobuf.Timestamp created_at = 6;
  // Tx ID who created DasherIncident to Update to
  int64 created_by_id = 7;
  // THQ uuid for this case to Update to
  string thq_uuid = 8;
}

// Delete a DasherIncident with corresponding id
message DeleteDasherIncidentRequest {
  // ID in dasher_incident to Delete
  int64 id = 1;
}

// Success message of deleting DasherIncident
message DeleteDasherIncidentResponse {
  // Success Flag (1 if delete succeeds, 0 if delete succeeds but nothing is deleted, Error otherwise)
  int32 success = 1;
}

// Generic search on DasherIncidents
message SearchDasherIncidentRequest {
  // Query to search for
  string search_query = 1;
}

// Results of a generic search for DasherIncidentService
message SearchDasherIncidentResponse {
  // Return results of the DasherIncident query
  repeated DasherIncident incidents = 1;
}

// Get the DasherIncidentCategories that exist
message DasherIncidentCategory {
  // Value stored in the db
  string value = 1;
  // Full user friendly category name
  string description = 2;
}

// Response of GetDasherIncidentCategories RPC call
message GetDasherIncidentCategoriesResponse {
  // The categories to return
  repeated DasherIncidentCategory categories = 1;
}
