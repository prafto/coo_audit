syntax = "proto3";

package dasher_service.odometer;

import "dasher_service/dasher_shift.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.dasher.odometer";

service DasherOdometerService {
  rpc UpdateDasherMileageForShift(UpdateDasherMileageForShiftRequest) returns (UpdateDasherMileageForShiftResponse);
  // Update the dasher travel mileage info for the entire shift level.
  rpc UpdateDasherMileageForShiftV2(UpdateDasherMileageForShiftV2Request) returns (UpdateDasherMileageForShiftV2Response);
  // Update mileage for delivery.
  rpc UpdateDasherMileageForDelivery(UpdateDasherMileageForDeliveryRequest) returns (UpdateDasherMileageForDeliveryResponse);
}

message UpdateDasherMileageForShiftRequest {
  google.protobuf.Int64Value shift_id = 1;
  google.protobuf.Int64Value delivery_id = 2;
}

message UpdateDasherMileageForShiftResponse {
  bool success = 1;
}

message UpdateDasherMileageForShiftV2Request {
  google.protobuf.Int64Value shift_id = 1;
}

message UpdateDasherMileageForShiftV2Response {
  google.protobuf.Int64Value shift_id = 1;
  google.protobuf.DoubleValue mileage = 2;
  google.protobuf.Timestamp updated_at = 3;
}

message UpdateDasherMileageForDeliveryRequest {
  google.protobuf.Int64Value shift_id = 1;
  google.protobuf.Int64Value delivery_id = 2;
}

message UpdateDasherMileageForDeliveryResponse {
  dasher_service.shift.RouteSegmentInfo route_segment_info = 1;
}
