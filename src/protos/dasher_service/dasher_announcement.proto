syntax = "proto3";

option java_multiple_files = true;
option java_generic_services = true;

import "google/protobuf/timestamp.proto";

import "dasher_service/dasher_api.proto";

package dasher_service.announcement;

option java_package = "com.doordash.rpc.dasher.announcement";

service DasherAnnouncementService {

    rpc CreateDasherAnnouncement(CreateDasherAnnouncementRequest) returns (CreateDasherAnnouncementResponse);

    rpc UpdateDasherAnnouncement(dasher_service.dasher_api.PatchRequest) returns (DasherAnnouncement); 

    rpc DeleteDasherAnnouncement(dasher_service.dasher_api.DeleteRequest) returns (DeleteDasherAnnouncementResponse);

    rpc ListDasherAnnouncementsForSubmarketById(DasherAnnouncementRequest) returns (ListDasherAnnouncementResponse);  // set request.pk to the desired submarket_id

    rpc ListDasherAnnouncements(ListDasherAnnouncementRequest) returns (ListDasherAnnouncementResponse);

    rpc GetDasherAnnouncementById(DasherAnnouncementRequest) returns (DasherAnnouncement);  // set request.pk to the desired Announcement_id

}

message CreateDasherAnnouncementRequest {
  string title = 1;

  string body = 2;

  google.protobuf.Timestamp expiration_date = 3;

  string image_url = 4;

  string experiment_platform = 5;

  string experiment_name = 6;

  string urgency = 7;

  repeated int64 whitelist_dasher_ids = 8;
    
  repeated int64 submarket_ids = 9;
}

message CreateDasherAnnouncementResponse {
  int32 id = 1;
}

message DeleteDasherAnnouncementResponse {
  int32 id = 1;
}

message ListDasherAnnouncementRequest {
  dasher_service.dasher_api.APIParams api_params = 1;

  repeated int32 ids = 2;

  bool all_announcements = 3;
}

message ListDasherAnnouncementResponse {
    repeated DasherAnnouncement objects = 1;

    int32 count = 2;
}

message DasherAnnouncement {
    string title = 1;

    string body = 2;

    google.protobuf.Timestamp expiration_date = 3;

    google.protobuf.Timestamp created_at = 4;

    string image_url = 5;

    int32 id = 6;

    string experiment_platform = 7;

    string experiment_name = 8;

    string urgency = 9;
    
    repeated int64 whitelist_dasher_ids = 10;
    
    repeated int64 submarket_ids = 11;
}

message DasherAnnouncementRequest {
  dasher_service.dasher_api.APIParams api_params = 1;

  int32 pk = 2;

  int32 dasher_id = 3;
}
