syntax = "proto3";

package dasher_service.courier_platform.v1;

option java_multiple_files = true;
option java_generic_services = true;
option java_package = "com.doordash.rpc.dasher.courier_platform";

import "common/money.proto";
import "dasher_service/courier_common.proto";
import "google/protobuf/timestamp.proto";

// The type of clock events
enum ClockEventType {
    CLOCK_EVENT_TYPE_UNSPECIFIED = 0;
    IN = 1;
    REST = 2;
    MEAL = 3;
    EMERGENCY = 4;
    OUT = 5;
}

// Break object
message Break {
    // The type of breaks
    enum BreakType {
        BREAK_TYPE_UNSPECIFIED = 0;
        REST = 1;
        MEAL = 2;
    }

    // Type of the break
    BreakType type = 1;
    // Length of the break
    int32 duration = 2;
    // Whether the break is paid or not
    bool is_paid = 3;
    // Used time of the break
    google.protobuf.Timestamp used_time = 4;
}

// ClockEvent object
message ClockEvent {
    // ID of the clock event
    string id = 1;
    // Type of the clock event
    ClockEventType type = 2;
    // Timestamp of the clock event
    google.protobuf.Timestamp timestamp = 3;
}

// Request of ClockIn
message ClockInRequest {
    // ID of the courier
    int64 dasher_id = 1;
    // ID of the shift
    int64 shift_id = 2;
    // Timestamp
    google.protobuf.Timestamp timestamp = 3;
}   

// Response of ClockIn
message ClockInResponse {
    // Timestamp
    google.protobuf.Timestamp timestamp = 1;
    // End time of the shift the courier clocked in
    google.protobuf.Timestamp shift_end_time = 2;
}

// Request of ClockOut
message ClockOutRequest {
    // ID of the courier
    int64 dasher_id = 1;
}

// Response of ClockOut
message ClockOutResponse {
    // Number of deliveries
    int32 num_of_deliveries = 1;
    // Length of paid working time in minutes
    int32 paid_working_mins = 2;
    // Length of meal break in minutes
    int32 meal_break_mins = 3;
    // Length of rest break in minutes
    int32 rest_break_mins = 4;
    // Length of total shift in minutes
    int32 total_shift_mins = 5;
    // Monetary fields for tips
    money.MonetaryFields tip_monetary_fields = 6;
}

// Request of GetClockStatus
message GetClockStatusRequest {
    // ID of the courier
    int64 dasher_id = 1;
}

// Response of GetClockStatus
message GetClockStatusResponse {
    // End time of the first shift the courier clocked in
    google.protobuf.Timestamp shift_end_time = 1;
    // Clock status
    ClockEventType status = 2;
    // Timestamp of the current clock status
    google.protobuf.Timestamp timestamp = 3;
    // Clock in time
    google.protobuf.Timestamp clock_in_time = 4;
    // Indicates if safety check is complete
    bool is_safety_checked = 5;
    // Duration of rest break in minutes
    int32 rest_break_duration_mins = 6;
    // Duration of meal break in minutes
    int32 meal_break_duration_mins = 7;
    // ID of the first shift the courier clocked in
    int64 clock_in_shift_id = 8;
}

// Request of ListBreaks
message ListBreaksRequest {
    // ID of the courier
    int64 dasher_id = 1;
}

// Response of ListBreaks
message ListBreaksResponse {
    // List of breaks
    repeated Break breaks = 1;
}

// Request of StartBreak
message StartBreakRequest {
    // ID of the courier
    int64 dasher_id = 1;
    // Type of the break
    Break.BreakType break_type = 2;
    // Timestamp
    google.protobuf.Timestamp timestamp = 3;
}

// Response of StartBreak
message StartBreakResponse {
    // Timestamp
    google.protobuf.Timestamp timestamp = 1;
}

// Request of EndBreak
message EndBreakRequest {
    // ID of the courier
    int64 dasher_id = 1;
}

// Response of EndBreak
message EndBreakResponse {
    // Timestamp
    google.protobuf.Timestamp timestamp = 1;
}

// Request of CompleteSafetyCheck
message CompleteSafetyCheckRequest {
    // ID of the courier
    int64 dasher_id = 1;
}

// Response of CompleteSafetyCheck
message CompleteSafetyCheckResponse {
    // Timestamp
    google.protobuf.Timestamp timestamp = 1;
}

// Request of GetClockHistory
message GetClockHistoryRequest {
    // ID of the courier
    int64 dasher_id = 1;
}

// Response of GetClockHistory
message GetClockHistoryResponse {
    // List of clock history
   repeated ClockEvent history = 1;
}

// Time Tracking Service
service TimeTrackingService {
    // Clock a courier in
    rpc ClockIn(ClockInRequest) returns (ClockInResponse) { }
    // Clock a courier out
    rpc ClockOut(ClockOutRequest) returns (ClockOutResponse) { }
    // Start a break
    rpc StartBreak(StartBreakRequest) returns (StartBreakResponse) { }
    // End a break
    rpc EndBreak(EndBreakRequest) returns (EndBreakResponse) { }
    // Get the clock status
    rpc GetClockStatus(GetClockStatusRequest) returns (GetClockStatusResponse) { } 
    // List available breaks
    rpc ListBreaks(ListBreaksRequest) returns (ListBreaksResponse) { }
    // Complete safety check
    rpc CompleteSafetyCheck(CompleteSafetyCheckRequest) returns (CompleteSafetyCheckResponse) { }
    // Get clock event history
    rpc GetClockHistory(GetClockHistoryRequest) returns (GetClockHistoryResponse) { }
}
