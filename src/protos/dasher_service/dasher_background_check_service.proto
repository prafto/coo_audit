syntax = "proto3";

package dasher_service.dasher_background_check_service.v1;

import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "dasher_service/dasher_common.proto";
import "common/common.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.dasher.dasher_background_check_service";

// Dasher BGC service, contains create candidate, enroll cc check and perform screening test
service DasherBackgroundCheckService {
  // Create a new candidate on the BGC external vendor system
  rpc CreateCandidate(CreateCandidateRequest) returns (CreateCandidateResponse);
  // Enroll candidate to do CC monitor
  rpc EnrollCandidateForMonitoring(EnrollCandidateForMonitoringRequest) returns (EnrollCandidateForMonitoringResponse);
  // Un-enroll candidate to do CC monitor
  rpc UnEnrollCandidateForMonitoring(UnEnrollCandidateForMonitoringRequest) returns (UnEnrollCandidateForMonitoringResponse);
}

// Create a candidate in the external BGC vendor(s)
message CreateCandidateRequest {
  // vendor type (Required)
  dasher_service.dasher_common.BgcVendorType vendor_type = 1;
  // First name (Required)
  string first_name = 2;
  // Last name (Required)
  string last_name = 3;
  // Email address (Required)
  string email = 4;
  // Phone number (Required)
  string phone = 5;
  // Unique link (Required)
  string applicant_unique_link = 6;
  // Date of birth (Required)
  string dob = 7;
  // middle name (Optional)
  google.protobuf.StringValue middle_name = 8;
  // SSN (Optional)
  google.protobuf.StringValue ssn_token = 9;
  // driver license number (Optional)
  dasher_service.dasher_common.DriversLicense driver_license = 10;
  // Address (Optional)
  common.CommonAddress address = 11;
}

// Response of CreateCandidate API
message CreateCandidateResponse {
  // contains a list of candidate, each candidate contains vendor type and other information (e.g., candidate id)
  repeated Candidate candidates = 1;
}

// Candidate object
message Candidate {
  // vendor type (Required)
  dasher_service.dasher_common.BgcVendorType vendor_type = 1;
  // successful create an candidate or not
  bool is_success = 2;
  // candidate info
  oneof info {
    // id for the candidate
    google.protobuf.StringValue candidate_id = 3;
    // error message if fail to create the account in the vendor
    google.protobuf.StringValue error_message = 4;
  }
}

// EnrollCandidateForMonitoring request
message EnrollCandidateForMonitoringRequest {
  // vendor type (Required)
  dasher_service.dasher_common.BgcVendorType vendor_type = 1;
  // Unique link (Required)
  string application_unique_link = 2;
  // allow to enroll CC to multiple vendors (Optional)
  google.protobuf.BoolValue bypass_dedupe_check = 3;
}

// EnrollCandidateForMonitoring response
message EnrollCandidateForMonitoringResponse {
  // The enrollment action status.
  google.protobuf.StringValue status = 1;
  // message getting from external system
  google.protobuf.StringValue message = 2;
}

// UnEnrollCandidateForMonitoring request
message UnEnrollCandidateForMonitoringRequest {
  // vendor type (Required)
  dasher_service.dasher_common.BgcVendorType vendor_type = 1;
  // Unique link (Required)
  string application_unique_link = 2;
}

// UnEnrollCandidateForMonitoring response
message UnEnrollCandidateForMonitoringResponse {}

