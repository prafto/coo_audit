syntax = "proto3";
package dasher_service.courier_platform.v1;

import "common/service_client_config.proto";
import "contract_violations/issue.proto";
import "dasher_service/courier_lcsp_common.proto";
import "doordash.api/annotations.proto";
import "doordash.api/client.proto";
import "doordash.api/field_validate.proto";
import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.dasher.courier_platform";

// Courier performance service
service CourierPerformanceService {
  option (doordash.api.service) = {
    name: "dasher-service-courier"
    url: "dasher-service-courier.service.prod.ddsd"
    port: 50051
    api_key_name: "DASHER_SERVICE_COURIER_API_KEY"
    name_spaces: ["courier"]
    owner: {
      id: "courier-platform"
      name: "courier-platform"
      slack_channel: "#ask-courier"
      email_alias: "local-commerce-service-partner@doordash.com"
    }
    target_products: [LCSP]
  };
  // Retrieve courier weekly performance
  rpc GetCourierWeeklyPerformance(GetCourierWeeklyPerformanceRequest) returns (GetCourierWeeklyPerformanceResponse);
  // Retrieve courier performance history
  rpc GetCourierPerformanceHistory(GetCourierPerformanceHistoryRequest) returns (GetCourierPerformanceHistoryResponse);
  // Retrieve courier performance details
  rpc GetCourierPerformanceDetails(GetCourierPerformanceDetailsRequest) returns (GetCourierPerformanceDetailsResponse) {
    option (google.api.http) = {get: "/lcsp/v1/courier/{dasher_id}/performance"};

    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: DEV
      authorization: [DD_USER]
    };
  }
  // Retrieve lcsp performance
  rpc GetLcspPerformance(GetLcspPerformanceRequest) returns (GetLcspPerformanceResponse) {
    option (google.api.http) = {get: "/lcsp/v1/{lcsp_id}/performance"};

    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: DEV
      authorization: [DD_USER]
    };
  }
  // Retrieve courier platform violations
  rpc GetCourierPlatformViolations(GetCourierPlatformViolationsRequest) returns (GetCourierPlatformViolationsResponse);
  // Retrieve courier issues for platform violation type
  rpc GetCourierIssuesForPlatformViolationType(GetCourierIssuesForPlatformViolationTypeRequest) returns (GetCourierIssuesForPlatformViolationTypeResponse);
  // Retrieve courier issue by id
  rpc GetCourierIssueById(GetCourierIssueByIdRequest) returns (GetCourierIssueByIdResponse);
  // Update courier issue, supports update to issue status and description
  rpc UpdateCourierIssueStatusWithDescription(UpdateCourierIssueStatusWithDescriptionRequest) returns (UpdateCourierIssueStatusWithDescriptionResponse);
}

// Performance week overview
message PerformanceWeekOverview {
  reserved 1;
  reserved "score";

  // Week start time
  google.protobuf.Timestamp week_start_time = 2;
  // Week end time
  google.protobuf.Timestamp week_end_time = 3;
  // Performance metric score
  courier_lcsp_common.v1.PerformanceScore performance_score = 4;
}

// Performance metric
message PerformanceMetric {
  reserved 5;
  reserved "score";

  // Performance metric type
  courier_lcsp_common.v1.PerformanceMetricType type = 1;
  // Indicates if performance metric value met the performance metric threshold value
  google.protobuf.BoolValue is_threshold_met = 2;
  // Performance metric value
  string display_value = 3;
  // Performance metric threshold value
  string display_threshold_value = 4;
  // Performance metric score
  courier_lcsp_common.v1.PerformanceScore performance_score = 6;
}

// Get courier weekly performance request
message GetCourierWeeklyPerformanceRequest {
  // ID of the dasher
  int64 dasher_id = 1;
  // Week start time
  google.protobuf.Timestamp week_start_time = 2;
}

// Get courier weekly performance response
message GetCourierWeeklyPerformanceResponse {
  // Performance week overview
  PerformanceWeekOverview performance_week_overview = 1;
  // Number of shifts scheduled in week
  int32 shifts_scheduled = 2;
  // Number of shifts attended in week
  int32 shifts_attended = 3;
  // Number of deliveries completed in week
  int32 deliveries_completed = 4;
  // List of performance metrics for the week
  repeated PerformanceMetric performance_metrics = 5;
  // timezone string
  string timezone = 6;
  // Flag for Parcel data
  bool is_parcel_data = 7;
  // Number of routes completed in week
  int32 routes_completed = 8;
}

// Get courier performance history request
message GetCourierPerformanceHistoryRequest {
  // ID of the dasher
  int64 dasher_id = 1;
  // Week start time
  google.protobuf.Timestamp week_start_time = 2;
  // Number of weeks
  int32 number_of_weeks = 3;
}

// Get courier performance history response
message GetCourierPerformanceHistoryResponse {
  // List of PerformanceWeekOverview
  repeated PerformanceWeekOverview performance_week_overviews = 1;
  // timezone string
  string timezone = 2;
  // Flag for Parcel data
  bool is_parcel_data = 3;
}

// Performance metric graph data point
message PerformanceMetricGraphDataPoint {
  // Week start time
  google.protobuf.Timestamp week_start_time = 1;
  // Week end time
  google.protobuf.Timestamp week_end_time = 2;
  // Data point value
  double value = 3;
}

// Performance metric graph data
message PerformanceMetricGraphData {
  // Performance metric type
  courier_lcsp_common.v1.PerformanceMetricGraphType type = 1;
  // Graph data points
  repeated PerformanceMetricGraphDataPoint performance_metric_graph_data_points = 2;
}

// Get courier performance details request
message GetCourierPerformanceDetailsRequest {
  // Dasher ID
  int64 dasher_id = 1;
  // Aggregation type
  courier_lcsp_common.v1.AggregationType aggregation_type = 2;
}

// Get courier performance details response
message GetCourierPerformanceDetailsResponse {
  reserved 6;
  reserved "quality_score";

  // Dasher ID
  int64 dasher_id = 1;
  // Courier name
  string name = 2;
  // Courier email
  string email = 3;
  // List of PerformanceMetrics
  repeated PerformanceMetric performance_metrics = 4;
  // Percentile rank
  string percentile_rank = 5;
  // Performance metric graph data
  repeated PerformanceMetricGraphData performance_metric_graph_data = 7;
  // Quality score
  courier_lcsp_common.v1.PerformanceScore quality_performance_score = 8;
}

// Get lcsp performance request
message GetLcspPerformanceRequest {
  // UUID of the Lcsp
  string lcsp_id = 1;
  // Aggregation type
  courier_lcsp_common.v1.AggregationType aggregation_type = 2;
}

// Get lcsp performance response
message GetLcspPerformanceResponse {
  // List of GetCourierPerformanceDetailsResponse
  repeated GetCourierPerformanceDetailsResponse courier_performance_responses = 1;
}

// Get courier platform violations request
message GetCourierPlatformViolationsRequest {
  // ID of the courier
  int64 dasher_id = 1;
}

// Get courier platform violations response
message GetCourierPlatformViolationsResponse {
  // Total number of platform violations
  int32 total_number_of_platform_violations = 1;
  // List of platform_violations
  repeated courier_lcsp_common.v1.PlatformViolationMetric platform_violations = 2;
}

// Get courier issues for platform violations type request
message GetCourierIssuesForPlatformViolationTypeRequest {
  // ID of the courier
  int64 dasher_id = 1;
  // Platform violation type
  courier_lcsp_common.v1.PlatformViolationType platform_violation_type = 2;
}

// Get courier issues for platform violations type response
message GetCourierIssuesForPlatformViolationTypeResponse {
  // List of active issues
  repeated contract_violation.v1.Issue active_issues = 1;
  // List of inactive issues
  repeated contract_violation.v1.Issue inactive_issues = 2;
  // Total number of platform violations
  int32 total_number_of_platform_violations = 3;
}

// Get courier issue by id request
message GetCourierIssueByIdRequest {
  // ID of the issue
  string issue_id = 1;
  // Entity type
  contract_violation.v1.IssueEntityType entity_type = 2;
}

// Get courier issue by id response
message GetCourierIssueByIdResponse {
  // Issue
  contract_violation.v1.Issue issue = 1;
}

// Update courier issue status with description request
message UpdateCourierIssueStatusWithDescriptionRequest {
  // ID of the issue
  string issue_id = 1;
  // Entity type
  contract_violation.v1.IssueEntityType entity_type = 2;
  // Issue status
  contract_violation.v1.IssueStatus issue_status = 3;
  // Text containing status description
  string status_description = 4;
  // If true, replace description in metadata
  // If false or unset, no changes to metadata
  bool replace_description = 5;
}

// Update courier issue status with description response
message UpdateCourierIssueStatusWithDescriptionResponse {}
