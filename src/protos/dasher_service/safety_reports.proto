syntax = "proto3";

package dasher_service.safety.v1;

import "doordash.api/annotations.proto";
import "doordash.api/client.proto";
import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.dasher.safety";

// Safety Reporting APIs
service SafetyReportService {
  option (doordash.api.service) = {
    name: "safety-service"
    url: "safety-service-api.service.prod.ddsd"
    port: 50051
    name_spaces: ["safety-service"]
    owner: {
      id: "trust-and-safety-observability"
      name: "safety"
      slack_channel: "#ask-safety-eng"
      email_alias: "tns-eng@doordash.com"
    }
    target_products: [CX]
  };

  // Submit a safety report
  rpc SubmitInAppSafetyReport(SubmitInAppSafetyReportRequest) returns (SubmitInAppSafetyReportResponse);
  // Get the report options
  rpc GetInAppSafetyReportOptions(GetInAppSafetyReportOptionsRequest) returns (GetInAppSafetyReportOptionsResponse);
  // Create In-App Safety Report Options
  rpc CreateInAppSafetyReportOptions(CreateInAppSafetyReportOptionsRequest) returns (CreateInAppSafetyReportOptionsResponse);
  // Update In-App Safety Report Options
  rpc UpdateInAppSafetyReportOption(UpdateInAppSafetyReportOptionRequest) returns (UpdateInAppSafetyReportOptionResponse);
  // Get past deliveries to link to a report
  rpc GetDasherRecentDeliveries(GetDasherRecentDeliveriesRequest) returns (GetDasherRecentDeliveriesResponse);
  // Get the safety toolkit options
  rpc GetSafeDashToolkitOptions(GetSafeDashToolkitOptionsRequest) returns (GetSafeDashToolkitOptionsResponse);
  // Get the safety toolkit options with always-on escape hatch
  rpc GetSafeDashToolkitOptionsV2(GetSafeDashToolkitOptionsV2Request) returns (GetSafeDashToolkitOptionsV2Response);
  // End dasher shift for escape hatch
  rpc EndDasherShiftForEscapeHatch(EndDasherShiftForEscapeHatchRequest) returns (EndDasherShiftForEscapeHatchResponse);
  // Submit a safety report
  rpc SubmitSafetyReportV2(SubmitSafetyReportV2Request) returns (SubmitSafetyReportV2Response) {
    option (google.api.http) = {
      // {HttpMethod}: "{pathPattern}"
      post: "/safety-service/v1/safety/report"
      // Needed for post, patch, put methods. Omit for others.
      body: "*"
    };

    option (doordash.api.endpoint) = {
      tier: T2
      lifecycle: DEV
      authorization: [CX_USER]
      target_products: [CX]
    };
  }
  // Get the report options for V2 reporting flow
  rpc GetSafetyReportOptionsV2(GetSafetyReportOptionsV2Request) returns (GetSafetyReportOptionsV2Response) {
    option (google.api.http) = {
      // {HttpMethod}: "{pathPattern}"
      get: "/safety-service/v1/safety/report/options"
    };

    option (doordash.api.endpoint) = {
      tier: T2
      lifecycle: DEV
      authorization: [CX_USER]
      target_products: [CX]
    };
  }
  // Get the report options for V2 reporting flow
  rpc GetSafetyReportStatus(GetSafetyReportStatusRequest) returns (GetSafetyReportStatusResponse) {
    option (google.api.http) = {
      // {HttpMethod}: "{pathPattern}"
      get: "/safety-service/v1/safety/report/status"
    };

    option (doordash.api.endpoint) = {
      tier: T2
      lifecycle: DEV
      authorization: [CX_USER]
      target_products: [CX]
    };
  }
}

// Create In-App Safety Report Options request
message CreateInAppSafetyReportOptionsRequest {
  // report options
  repeated InAppSafetyReportOption report_options = 1;
}

// Create In-App Safety Report Options response
message CreateInAppSafetyReportOptionsResponse {
  // Report options created
  repeated InAppSafetyReportOption report_options = 1;
}

// Update an In-App Safety Report Option request
message UpdateInAppSafetyReportOptionRequest {
  // Option ID (uuid)
  string id = 1;
  // Default name of the option
  string default_name = 2;
  // Localized text
  string localized_name = 3;
  // Whether or not to contact Dx back about the report
  bool show_contact_options = 4;
  // Whether or not we can unassign this order for the Dx
  bool unassign_eligible = 5;
  // Response time in minutes of completing the report
  int32 response_time_sla_minutes = 6;
  // Whether or not it is eligible for photo evidence
  bool eligible_for_photo_evidence = 7;
}

// Update an In-App Safety Report Option response
message UpdateInAppSafetyReportOptionResponse {
  // Option ID (uuid)
  string id = 1;
  // Default name of the option
  string default_name = 2;
  // Localized text
  string localized_name = 3;
  // Whether or not to contact Dx back about the report
  bool show_contact_options = 4;
  // Whether or not we can unassign this order for the Dx
  bool unassign_eligible = 5;
  // Response time in minutes of completing the report
  int32 response_time_sla_minutes = 6;
  // Whether or not it is eligible for photo evidence
  bool eligible_for_photo_evidence = 7;
}

// Request to submit a safety report
message SubmitInAppSafetyReportRequest {
  // Report option ID
  string report_option_id = 1;
  // Dasher ID who submitted report
  int64 dasher_id = 2;
  // Delivery UUID
  string delivery_uuid = 3;
  // Comments from Dasher about incident
  string comments = 4;
  // Who caused the safety incident
  SafetyIncidentCause incident_cause = 5;
  // If we should unassign the order
  bool should_unassign_order = 6;
  // How we should contact Dx back
  InAppSafetyReportContactOption contact_option = 7;
  // Consumer ID who submitted report
  int64 consumer_id = 8;
  // Photos
  repeated Photo photos = 9;
  // Requested safety report type
  SafetyReportType requested_report_type = 10;
}

// Response from submitting a report
message SubmitInAppSafetyReportResponse {
  // SLA followup time
  int32 followup_time_minutes = 1;
  // Actions we tell Dasher that we will conduct
  repeated string localized_actions = 2;
}

// Get In-App Safety Report Options Request
message GetInAppSafetyReportOptionsRequest {
  // Dasher ID to fetch report options and eligibility for
  int64 dasher_id = 1;
  // Requested report type to return report options for
  SafetyReportType safety_report_type = 2;
}

// Get In-App Safety Report Options Response
message GetInAppSafetyReportOptionsResponse {
  // Status of the In App Safety Report
  InAppSafetyReportStatus safety_report_status = 1;
  // The report options
  repeated InAppSafetyReportOption report_options = 2;
  // DEPRECATED FORMAT (The person/situation that caused the incident)
  repeated SafetyIncidentCause incident_causes = 3 [deprecated = true];
  // The person/situation that caused the incident
  repeated SafetyIncidentCulprit safety_incident_causes = 4;
}

// Get Recent Deliveries for Dasher Request
message GetDasherRecentDeliveriesRequest {
  // Dasher ID
  int64 dasher_id = 1;
  // Limit
  google.protobuf.Int32Value limit = 2;
}

// Get Dasher Recent Deliveries Response
message GetDasherRecentDeliveriesResponse {
  // Deliveries
  repeated DasherDelivery deliveries = 1;
}

// current GPS latitude and longitudes for Dx
message DasherLocation {
  // latitude of the Dx
  double lat = 1;
  // longitude of the Dx
  double lng = 2;
}

// Get SafeDash Toolkit Options Request
message GetSafeDashToolkitOptionsRequest {
  // Dasher ID to fetch toolkit options and eligibility for
  int64 dasher_id = 1;
  // location of dasher
  DasherLocation location = 2;
}

// Get SafeDash Toolkit Options Response
message GetSafeDashToolkitOptionsResponse {
  // The report options
  repeated SafeDashToolkitOption available_options = 1;
}

// Get SafeDash Toolkit Options V2 Request
message GetSafeDashToolkitOptionsV2Request {
  // Dasher ID to fetch toolkit options and eligibility for
  int64 dasher_id = 1;
  // Delivery UUID to fetch toolkit options and eligibility for
  string delivery_uuid = 2;
  // location of dasher
  DasherLocation location = 3;
}

// Get SafeDash Toolkit Options V2 Response
message GetSafeDashToolkitOptionsV2Response {
  // The toolkit options
  repeated SafeDashToolkitOption available_options = 1;
}

message EndDasherShiftForEscapeHatchRequest {
  // Dasher ID
  int64 dasher_id = 1;
  // Delivery UUID
  string delivery_uuid = 2;
}

message EndDasherShiftForEscapeHatchResponse {
  // Whether the shift was ended successfully
  bool shift_ended = 1;
}

// Request to submit a safety report
message SubmitSafetyReportV2Request {
  // Reporter id for the reporting party
  oneof reporter {
    // Dasher ID to fetch report options and eligibility for
    google.protobuf.StringValue dasher_id = 1;
    // Consumer ID to fetch report options and eligibility for
    google.protobuf.StringValue consumer_id = 2;
  }
  // Metadata to identify a safety report
  SafetyReportMetadata report_metadata = 3;
  // Details about actual safety report
  SafetyReportDetails report_details = 4;
}

// Response from submitting a report
message SubmitSafetyReportV2Response {
  // Reporter id for the reporting party
  oneof reporter {
    // Dasher ID to fetch report options and eligibility for
    google.protobuf.StringValue dasher_id = 1;
    // Consumer ID to fetch report options and eligibility for
    google.protobuf.StringValue consumer_id = 2;
  }
  // Metadata to identify a safety report
  SafetyReportMetadata report_metadata = 3 [(doordash.api.client.optional) = true];
  // Details about actual safety report
  SafetyReportDetails report_details = 4 [(doordash.api.client.optional) = true];
  // SLA followup time in milliseconds epoch
  google.protobuf.Int64Value followup_at_ms = 5 [(doordash.api.client.optional) = true];
  // Created_at time of the report
  google.protobuf.Int64Value created_at_ms = 6 [(doordash.api.client.optional) = true];
}

// Get Safety Report Options Request
message GetSafetyReportOptionsV2Request {
  // Reporter id for the reporting party
  oneof reporter {
    // Dasher ID to fetch report options and eligibility for
    google.protobuf.StringValue dasher_id = 1;
    // Consumer ID to fetch report options and eligibility for
    google.protobuf.StringValue consumer_id = 2;
  }
  // Metadata to identify a safety report
  SafetyReportMetadata report_metadata = 3;
}

// Get Safety Report Options Response
message GetSafetyReportOptionsV2Response {
  reserved 2;
  reserved "safety_report_contact_options";
  // The person/situation that caused the incident
  repeated SafetyIncidentCulprit safety_incident_culprits = 1;
  // Whether or not to contact Dx back about the report
  bool show_contact_options = 3;
  // Whether or not it is eligible for photo evidence
  bool eligible_for_photo_evidence = 4;
  // Whether or not to show the SafetyIncidentCulprit as follow-up screen
  bool show_offender_options = 5;
  // How we should contact Dx back with translations
  repeated SafetyReportContactChoice safety_report_contact_choices = 6;
}

// Get Safety Report Options Request
message GetSafetyReportStatusRequest {
  // Reporter id for the reporting party
  oneof reporter {
    // Dasher ID to fetch report options and eligibility for
    google.protobuf.StringValue dasher_id = 1;
    // Consumer ID to fetch report options and eligibility for
    google.protobuf.StringValue consumer_id = 2;
  }
  // Metadata to identify a safety report
  SafetyReportMetadata report_metadata = 3;
}

// Get Safety Report Options Request
message GetSafetyReportStatusResponse {
  // Reporter id for the reporting party
  oneof reporter {
    // Dasher ID to fetch report options and eligibility for
    google.protobuf.StringValue dasher_id = 1;
    // Consumer ID to fetch report options and eligibility for
    google.protobuf.StringValue consumer_id = 2;
  }
  // Metadata to identify a safety report
  SafetyReportMetadata report_metadata = 3 [(doordash.api.client.optional) = true];
  // Details about actual safety report
  SafetyReportDetails report_details = 4 [(doordash.api.client.optional) = true];
  // SLA followup time in milliseconds epoch
  google.protobuf.Int64Value followup_at_ms = 5 [(doordash.api.client.optional) = true];
  // Created_at time of the report
  google.protobuf.Int64Value created_at_ms = 6 [(doordash.api.client.optional) = true];
}

// A Dasher Delivery Object
message DasherDelivery {
  // Delivery UUID
  string delivery_uuid = 1;
  // If this delivery has been reported via in app safety report
  bool in_app_safety_report_submitted = 2;
  // Actual delivery time
  google.protobuf.Timestamp actual_delivery_time = 3;
  // Actual pickup time
  google.protobuf.Timestamp actual_pickup_time = 4;
  // When order was accepted
  google.protobuf.Timestamp accepted_at = 5;
  // Info about Mx
  DasherDeliveryStoreInfo store_info = 6;
  // Info about Cx
  DasherDeliveryConsumerInfo consumer_info = 7;
}

// Mx store info
message DasherDeliveryStoreInfo {
  // Mx name
  string name = 1;
  // Mx ID
  int64 id = 2;
}

// Cx info
message DasherDeliveryConsumerInfo {
  // Cx first name
  string first_name = 1;
  // Cx first name
  int64 id = 2;
}

// An In App Safety Report Option
message InAppSafetyReportOption {
  // Option ID (uuid)
  string id = 1;
  // Default name of the option
  string default_name = 2;
  // Localized text
  string localized_name = 3;
  // Whether or not to contact Dx back about the report
  bool show_contact_options = 4;
  // Whether or not we can unassign this order for the Dx
  bool unassign_eligible = 5;
  // Response time in minutes of completing the report
  int32 response_time_sla_minutes = 6;
  // Whether or not it is eligible for photo evidence
  bool eligible_for_photo_evidence = 7;
  // Whether or not to show the SafetyIncidentCulprit as follow-up screen
  bool show_offender_options = 8;
}

// Safety Incident Cause object
message SafetyIncidentCulprit {
  // The id of the safety incident cause
  SafetyIncidentCause id = 1;
  // The localized name of that cause
  string name = 2;
}

// Safety Report Contact Option object
message SafetyReportContactChoice {
  // The id of the safety report contact choice
  InAppSafetyReportContactOption id = 1;
  // The localized name of that contact option
  string name = 2;
}

// Safety report type for report CRUD actions
enum SafetyReportType {
  // Unspecified report type
  SAFETY_REPORT_TYPE_UNSPECIFIED = 0;
  // In app safety report
  SAFETY_REPORT_TYPE_IN_APP = 1;
  // Always-On Escape Hatch report
  SAFETY_REPORT_TYPE_ALWAYS_ON_ESCAPE_HATCH = 2;
  // Cx In-App report
  SAFETY_REPORT_TYPE_CX_IN_APP = 3;
}

// Safety report contact Dx back options
enum InAppSafetyReportContactOption {
  // Unspecified
  IN_APP_SAFETY_REPORT_CONTACT_OPTION_UNSPECIFIED = 0;
  // Don't contact Dx
  IN_APP_SAFETY_REPORT_CONTACT_OPTION_NONE = 1;
  // Call Dx
  IN_APP_SAFETY_REPORT_CONTACT_OPTION_PHONE_CALL = 2;
  // Email Dx
  IN_APP_SAFETY_REPORT_CONTACT_OPTION_EMAIL = 3;
  // Don’t Contact reporter (Dx or Cx)
  IN_APP_SAFETY_REPORT_CONTACT_OPTION_DONT_CONTACT_ME = 4;
}

// Who caused the safety incident
enum SafetyIncidentCause {
  // Unspecified
  SAFETY_INCIDENT_CAUSE_UNSPECIFIED = 0;
  // Cx caused the incident
  SAFETY_INCIDENT_CAUSE_CUSTOMER = 1;
  // Mx employee caused incident
  SAFETY_INCIDENT_CAUSE_MERCHANT_EMPLOYEE = 2;
  // Self/accidental cause
  SAFETY_INCIDENT_CAUSE_SELF = 3;
  // Unsafe location caused incident
  SAFETY_INCIDENT_CAUSE_UNSAFE_LOCATION = 4 [deprecated = true];
  // Unknown person caused incident
  SAFETY_INCIDENT_CAUSE_UNSAFE_UNKNOWN_PERSON = 5;
  // Unsafe condition
  SAFETY_INCIDENT_CAUSE_UNSAFE_CONDITION = 6;
  // Dasher
  SAFETY_INCIDENT_CAUSE_DASHER = 7;
  // Not reporting a person
  SAFETY_INCIDENT_CAUSE_NOT_REPORTING_A_PERSON = 8;
}

// Status of the In App Safety Report
enum InAppSafetyReportStatus {
  // Unspecified
  IN_APP_SAFETY_REPORT_STATUS_UNSPECIFIED = 0;
  // Not submitted
  IN_APP_SAFETY_REPORT_STATUS_NOT_SUBMITTED = 1;
  // Recently submitted / in progress
  IN_APP_SAFETY_REPORT_STATUS_RECENTLY_SUBMITTED = 2;
}

// Photo
message Photo {
  // Photo image file
  bytes photo_image_file = 1 [(doordash.api.client.optional) = true];
  // Photo submission url
  string photo_submission_url = 2 [(doordash.api.client.optional) = true];
}

// SafeDash Toolkit Available options
enum SafeDashToolkitOption {
  // Unspecified
  SAFE_DASH_TOOLKIT_OPTION_UNSPECIFIED = 0;
  // Adt
  SAFE_DASH_TOOLKIT_OPTION_ADT = 1;
  // Reporting
  SAFE_DASH_TOOLKIT_OPTION_REPORTING = 2;
  // Location Sharing
  SAFE_DASH_TOOLKIT_OPTION_LOCATION_SHARING = 3;
  // Emergency Services
  SAFE_DASH_TOOLKIT_OPTION_EMERGENCY_SERVICES = 4;
  // Always-On Escape Hatch
  SAFE_DASH_TOOLKIT_OPTION_ALWAYS_ON_ESCAPE_HATCH = 5;
}

// Details to identify a safety report
message SafetyReportMetadata {
  // Delivery UUID
  google.protobuf.StringValue delivery_uuid = 1 [(doordash.api.client.optional) = true];
  // Requested report type to return report options for
  SafetyReportType requested_report_type = 2;
}

// Details to identify a safety report
message SafetyReportDetails {
  reserved 3;
  reserved "contact_option";
  // Comments from Dasher about incident
  string comments = 1 [(doordash.api.client.optional) = true];
  // Who caused the safety incident
  SafetyIncidentCulprit incident_culprit = 2;
  // Photos
  repeated Photo photos = 4 [(doordash.api.client.optional) = true];
  // How we should contact Dx back
  SafetyReportContactChoice contact_choice = 5;
}
