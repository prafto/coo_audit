syntax = "proto3";
package dasher_service.courier_platform;

import "google/protobuf/wrappers.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.dasher.courier_platform";

// Days of a week
enum DaysOfWeek {
  // Unspecified
  DAYS_OF_WEEK_UNSPECIFIED = 0;

  // Sunday
  // buf:lint:ignore ENUM_VALUE_PREFIX
  SUNDAY = 1;

  // Monday
  // buf:lint:ignore ENUM_VALUE_PREFIX
  MONDAY = 2;

  // Tuesday
  // buf:lint:ignore ENUM_VALUE_PREFIX
  TUESDAY = 3;

  // Wednesday
  // buf:lint:ignore ENUM_VALUE_PREFIX
  WEDNESDAY = 4;

  // Thursday
  // buf:lint:ignore ENUM_VALUE_PREFIX
  THURSDAY = 5;

  // Friday
  // buf:lint:ignore ENUM_VALUE_PREFIX
  FRIDAY = 6;

  // Saturday
  // buf:lint:ignore ENUM_VALUE_PREFIX
  SATURDAY = 7;
}

// Time slot of the day
message TimeSlot {
  // Relative start time, e.g. 10:30
  google.protobuf.StringValue preferred_start_time = 1;
  // Relative end time, e.g. 11:30
  google.protobuf.StringValue preferred_end_time = 2;
}

// Preference object
message PreferencesForDay {
  // Day of the week
  DaysOfWeek day_of_week = 1;
  // Time slots available
  repeated TimeSlot time_slots = 2;
}

// Response of GetPreferences
message CourierPreferences {
  // ID of the courier
  int64 dasher_id = 1;
  // Preferences to be returned
  repeated PreferencesForDay preferences_for_day = 2;
}

// Request of GetPreferences
message GetPreferencesRequest {
  // ID of the courier
  int64 dasher_id = 1;
}

// Response of GetPreferences
message GetPreferencesResponse {
  // Preferences of the courier
  CourierPreferences courier_preferences = 1;
}

// Response of SetPreferences
message SetPreferencesRequest {
  // Preferences of the courier
  CourierPreferences courier_preferences = 1;
}

// Response of SetPreferences
message SetPreferencesResponse {}

// Preference service
service PreferenceService {
  // Set preferences for the courier
  rpc SetPreferences(SetPreferencesRequest) returns (SetPreferencesResponse) {
    option deprecated = true;
  }
  // Get all preferences for the courier
  rpc GetPreferences(GetPreferencesRequest) returns (GetPreferencesResponse) {
    option deprecated = true;
  }
}
