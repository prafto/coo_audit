syntax = "proto3";

// buf:lint:ignore DIRECTORY_SAME_PACKAGE
package dasher_service.shift.attribute.v1;

import "common/date.proto";
import "common/money.proto";
import "common/service_client_config.proto";
import "dasher_opportunity_service/types/v1/opportunity.proto";
import "dasher_service/dasher_common.proto";
import "dasher_service/dasher_dasherless_shift.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.dasher.shift.attribute";

// The ShiftAttributeService service provides methods to read and write attributes for a shift.
service ShiftAttributeService {
  option (service_client.client_config).circuit_breaker_config.do_ignore_grpc_code = 9;

  // Write an attribute for a shift.
  rpc WriteAttribute(WriteAttributeRequest) returns (WriteAttributeResponse);

  // Read an attribute for a shift.
  rpc ReadAttribute(ReadAttributeRequest) returns (ReadAttributeResponse);

  // Read all attributes for a shift.
  rpc ReadAllShiftAttributes(ReadAllShiftAttributesRequest) returns (ReadAllShiftAttributesResponse);

  // Read all attributes for multiple shifts.
  rpc ReadBatchedShiftAttributes(ReadBatchedShiftAttributesRequest) returns (ReadBatchedShiftAttributesResponse);
}

// Request to read all attributes for a shift.
message ReadAllShiftAttributesRequest {
  // Shift ID
  int64 shift_id = 1;

  // consistency requirements for the read
  dasher_service.dasher_common.ConsistencyLevel consistency_level = 2;
}

// Response to read all attributes for a shift.
message ReadAllShiftAttributesResponse {
  // Shift ID
  int64 shift_id = 1;

  // List of attributes
  repeated ReadAttributeResponse attributes = 2;
}

// Request to read all attributes for multiple shifts.
message ReadBatchedShiftAttributesRequest {
  // Shift ID
  repeated int64 shift_id = 1;

  // Optional list of attribute names to return. If no names are provided, all attributes will be returned.
  repeated string attribute_names = 2;

  // consistency requirements for the read
  dasher_service.dasher_common.ConsistencyLevel consistency_level = 3;
}

// Response for multiple attributes for multiple shifts.
message ReadBatchedShiftAttributesResponse {
  // Shift ID
  repeated ReadAllShiftAttributesResponse shift_attributes = 1;
}

// Request to read an attribute for a shift.
message ReadAttributeRequest {
  // Shift ID
  int64 shift_id = 1;

  // Attribute name
  string attribute_name = 2;

  // consistency requirements for the read
  dasher_service.dasher_common.ConsistencyLevel consistency_level = 3;
}

// Response to read an attribute for a shift.
message ReadAttributeResponse {
  // Shift Id
  int64 shift_id = 1;

  // Attribute name
  string attribute_name = 2;

  // Attribute value
  oneof attribute_value {
    // String value
    string string_value = 3;
    // Int32 value
    google.protobuf.Int32Value int32_value = 4;
    // Int64 value
    google.protobuf.Int64Value int64_value = 5;
    // Double value
    google.protobuf.DoubleValue double_value = 6;
    // Bool value
    google.protobuf.BoolValue bool_value = 7;
    // VehicleCargoCapacity value
    dasher_service.dasher_common.VehicleCargoCapacity vehicle_cargo_capacity = 8;
    // Opportunity associated with the shift
    dasher_opportunity_service.types.v1.Opportunity opportunity = 11;
    // dasherless shift defaults
    dasher_service.shift.dasherless.v1.DasherlessShiftDefaults dasherless_shift_defaults = 12;
  }
  // This is a timestamp in milliseconds since the Unix epoch.
  google.protobuf.Timestamp created_at = 9;
  // This is a timestamp in milliseconds since the Unix epoch.
  google.protobuf.Timestamp updated_at = 10;
}

// Request to write an attribute for a shift.
message WriteAttributeRequest {
  // Shift ID
  int64 shift_id = 1;

  // Attribute name
  string attribute_name = 2;
  // Attribute value
  oneof attribute_value {
    // String value
    string string_value = 3;
    // Int32 value
    google.protobuf.Int32Value int32_value = 4;
    // Int64 value
    google.protobuf.Int64Value int64_value = 5;
    // Double value
    google.protobuf.DoubleValue double_value = 6;
    // Bool value
    google.protobuf.BoolValue bool_value = 7;
    // VehicleCargoCapacity value
    dasher_service.dasher_common.VehicleCargoCapacity vehicle_cargo_capacity = 8;
    // Opportunity associated with the shift
    dasher_opportunity_service.types.v1.Opportunity opportunity = 9;
    // dasherless shift defaults
    dasher_service.shift.dasherless.v1.DasherlessShiftDefaults dasherless_shift_defaults = 10;
  }
}

// Response to write an attribute for a shift.
message WriteAttributeResponse {
  // Shift Id
  int64 shift_id = 1;

  // Attribute name
  string attribute_name = 2;

  // Attribute value
  oneof attribute_value {
    // String value
    string string_value = 3;
    // Int32 value
    google.protobuf.Int32Value int32_value = 4;
    // Int64 value
    google.protobuf.Int64Value int64_value = 5;
    // Double value
    google.protobuf.DoubleValue double_value = 6;
    // Bool value
    google.protobuf.BoolValue bool_value = 7;
    // VehicleCargoCapacity value
    dasher_service.dasher_common.VehicleCargoCapacity vehicle_cargo_capacity = 8;
    // Opportunity associated with the shift
    dasher_opportunity_service.types.v1.Opportunity opportunity = 11;
    // dasherless shift defaults
    dasher_service.shift.dasherless.v1.DasherlessShiftDefaults dasherless_shift_defaults = 12;
  }
  // This is a timestamp in milliseconds since the Unix epoch.
  google.protobuf.Timestamp created_at = 9;
  // This is a timestamp in milliseconds since the Unix epoch.
  google.protobuf.Timestamp updated_at = 10;
}
