syntax = "proto3";

package dasher_service.dasher_vehicle;

import "common/service_client_config.proto";
import "dasher_service/dasher_api.proto";
import "dasher_service/dasher_common.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/wrappers.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.dasher.dasher_vehicle";

service VehicleService {
  option (service_client.client_config).service_name = "dasher-service";
  option (service_client.client_config).service_app = "dasher";
  option (service_client.client_config).response_attempt_timeout_millis = 750;

  rpc GetVehicleType(dasher_service.dasher_api.GetRequest) returns (VehicleType) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 100;
  }
  rpc ListVehicleType(ListVehicleTypeRequest) returns (ListVehicleTypeResponse);

  rpc CreateVehicle(CreateVehicleRequest) returns (Vehicle);
  rpc GetVehicle(dasher_service.dasher_api.GetRequest) returns (Vehicle) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 100;
  }
  rpc UpdateVehicle(dasher_service.dasher_api.PatchRequest) returns (Vehicle);

  rpc ListVehicleTypeStartingPointLink(ListVehicleTypeStartingPointLinkRequest) returns (ListVehicleTypeStartingPointLinkResponse);

  rpc GetVehicleTypeProperties(GetVehicleTypePropertiesRequest) returns (VehicleTypeProperties);
  rpc GetVehicleTypeSkills(GetVehicleTypeSkillsRequest) returns (GetVehicleTypeSkillsResponse);
  rpc GetVehicleSkillByName(GetVehicleSkillByNameRequest) returns (Skill);

  rpc ListVehiclesForDasher(ListVehiclesForDasherRequest) returns (ListVehiclesForDasherResponse);

  rpc ForgetVehiclesForDasher(dasher_service.dasher_api.PatchRequest) returns (ForgetVehiclesForDasherResponse);

  rpc ForgetVehicleLicenseNumbersForDasher(dasher_service.dasher_api.PatchRequest) returns (ForgetVehicleLicenseNumbersForDasherResponse);

  rpc ListSupportedVehicleTypes(ListSupportedVehicleTypesRequest) returns (ListVehicleTypeResponse);

  rpc DeleteVehicles(DeleteVehicleRequest) returns (DeleteVehicleResponse);

  rpc GetVehicleByDasherAndType(GetVehicleByDasherAndTypeRequest) returns (Vehicle);
}

message CreateVehicleRequest {
  int32 dasher_id = 1;

  int32 vehicle_type_id = 2;

  string make = 3;

  string model = 4;

  string year = 5;

  string color = 6;
}

message Vehicle {
  int32 id = 1;

  int32 dasher_id = 2;
  int32 vehicle_type_id = 3;

  string make = 4;
  string model = 5;
  string year = 6;
  string color = 10;
  int32 license_plate_id = 11;

  string registration_expiration = 7;
  string registration_img_uploaded_at = 8;

  VehicleType vehicle_type = 9;
  string registration_img = 12;

  // VehicleCargoCapacity value
  dasher_service.dasher_common.VehicleCargoCapacity vehicle_cargo_capacity = 13;
}

message VehicleType {
  int32 id = 1;

  string name = 2;

  string icon_img_url = 3;

  bool needs_license_info = 4;

  string google_maps_vehicle_string = 5;

  string friendly_name = 6;
}

message VehicleTypeStartingPointLink {
  int32 id = 1;

  int32 starting_point_id = 2;

  int32 vehicle_type_id = 3;

  int32 max_travel_time_per_delivery = 4;

  int32 max_d2r_time = 5;

  int32 capacity = 6;

  float cap_planning_fraction = 7;

  int32 parking_pad = 8;

  google.protobuf.Struct travel_time_percentiles = 9;

  int32 max_pickup_distance = 10;
}

message VehicleTypeProperties {
  google.protobuf.Int32Value vehicle_type_id = 1;

  google.protobuf.FloatValue route_fit_distance_filter_base = 2;

  google.protobuf.Int32Value waiting_duration_threshold_seconds = 3;

  google.protobuf.BoolValue short_distance_prioritization_enabled = 4;

  google.protobuf.FloatValue short_distance_dropoff_time_multiplier = 5;

  google.protobuf.Int32Value short_distance_max_pickup_leg_duration_seconds = 6;

  google.protobuf.Int32Value short_distance_max_dropoff_leg_duration_seconds = 7;

  google.protobuf.Int32Value max_delivery_distance_pickup_leg_meters = 8;

  google.protobuf.Int32Value max_delivery_distance_dropoff_leg_meters = 9;

  google.protobuf.StringValue google_maps_vehicle_string = 10;

  google.protobuf.FloatValue speed_in_meters_per_second = 11;

  google.protobuf.BoolValue is_limited_distance_vehicle = 12;

  google.protobuf.Int32Value max_travel_time_per_delivery = 13;

  google.protobuf.Struct travel_time_percentiles = 14;

  google.protobuf.Struct batch_travel_time_percentiles = 15;

  google.protobuf.Int32Value max_d2r_time = 16;

  google.protobuf.Int32Value capacity = 17;

  google.protobuf.FloatValue cap_planning_fraction = 18;

  google.protobuf.Int32Value parking_pad = 19;
}

message Skill {
  int32 id = 1;

  string name = 2;

  string friendly_name = 3;

  bool should_require_dasher_confirmation = 4;
}

message VehicleLicensePlate {
  int32 id = 1;

  string license_plate_number = 2;
}

message ListVehicleTypeRequest {
  dasher_service.dasher_api.APIParams api_params = 1;

  string name = 2;
}

message ListVehicleTypeResponse {
  repeated VehicleType objects = 1;

  int32 count = 2;
}

message ListVehicleTypeStartingPointLinkRequest {
  dasher_service.dasher_api.APIParams api_params = 1;

  int32 starting_point_id = 2;

  int32 vehicle_type_id = 3;

  float min_cap_fraction = 4;
}

message ListVehicleTypeStartingPointLinkResponse {
  repeated VehicleTypeStartingPointLink objects = 1;

  int32 count = 2;
}

message GetVehicleByDasherAndTypeRequest {
  // dasher id
  int64 dasher_id = 1;
  // vehicle type
  google.protobuf.Int32Value vehicle_type = 2;
}

message GetVehicleTypePropertiesRequest {
  dasher_service.dasher_api.APIParams api_params = 1;

  int32 vehicle_type_id = 2;

  int32 market_id = 3;

  int32 submarket_id = 4;

  int32 starting_point_id = 5;
}

message GetVehicleTypeSkillsRequest {
  dasher_service.dasher_api.APIParams api_params = 1;

  int32 vehicle_type_id = 2;

  int32 market_id = 3;

  int32 submarket_id = 4;

  int32 starting_point_id = 5;
}

message GetVehicleSkillByNameRequest {
  dasher_service.dasher_api.APIParams api_params = 1;

  string name = 2;
}

message GetVehicleTypeSkillsResponse {
  repeated Skill skills = 1;
}

message ListVehiclesForDasherRequest {
  int32 dasher_id = 1;
}

message ListVehiclesForDasherByEmailRequest {
  string email = 1;
}

message ListVehiclesForDasherResponse {
  repeated Vehicle vehicles = 1;
  int32 count = 2;
}

message ForgetVehiclesForDasherResponse {
  repeated Vehicle vehicles = 1;
  int32 count = 2;
}

message ForgetVehicleLicenseNumbersForDasherResponse {
  repeated VehicleLicensePlate vehicle_license_plate = 1;
  int32 count = 2;
}

message ListSupportedVehicleTypesRequest {
  int32 submarket_id = 1;
}

message DeleteVehicleRequest {
  int32 vehicle_id = 1;
}

message DeleteVehicleResponse {
  Vehicle vehicle = 1;
}
