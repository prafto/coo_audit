syntax = "proto3";

option java_multiple_files = true;
option java_generic_services = true;

import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "dasher_service/dasher_common.proto";

package dasher_service.webhook_platform;
option java_package = "com.doordash.rpc.dasher.webhook_platform";

service WebhookPlatformService {
  rpc UpdateNCCStatus(UpdateNCCStatusRequest) returns (UpdateNCCStatusResponse);
  // Update the screening status for a candidate
  rpc UpdateSterlingScreeningStatus(UpdateSterlingScreeningStatusRequest) returns (UpdateSterlingScreeningStatusResponse);
  rpc UpdateUSACheckrStatus(UpdateUSACheckrStatusRequest) returns (UpdateUSACheckrStatusResponse);
  rpc UpdateCanadaCheckrStatus(UpdateCanadaCheckrStatusRequest) returns (UpdateCanadaCheckrStatusResponse);
  rpc UpdateIDVStatus(UpdateIDVStatusRequest) returns (UpdateIDVStatusResponse);
  rpc UpdatePreBgcReviewApproved(UpdatePreBgcReviewApprovedRequest) returns (UpdatePreBgcReviewApprovedResponse);
  rpc UpdateCheckrInvitationStatus(UpdateCheckrInvitationStatusRequest) returns (UpdateCheckrInvitationStatusResponse);
  rpc UpdateCanadaCheckrOneStatus(UpdateCanadaCheckrOneStatusRequest) returns (UpdateCanadaCheckrOneStatusResponse);
  rpc UpdateSterlingCCMonitorStatus(UpdateSterlingCCMonitorStatusRequest) returns (UpdateSterlingCCMonitorStatusResponse);
  rpc UpdateBGCStatus(UpdateBGCStatusRequest) returns (UpdateBGCStatusResponse);
}

message UpdateNCCStatusRequest {
  string dasher_bgc_identifier = 1;
  NccRequestType request_type = 2;
  google.protobuf.StringValue metadata = 3;
  string applicant_unique_link = 4;
}

message UpdateNCCStatusResponse {
  ResponseType response_type = 1;
  google.protobuf.StringValue message = 2;
}

enum NccRequestType {
  NCC_REQUEST_TYPE_UNKNOWN = 0;
  NCC_REQUEST_TYPE_APPLICANT = 1;
  NCC_REQUEST_TYPE_QA = 2;
  NCC_REQUEST_TYPE_DONE = 3;
  NCC_REQUEST_TYPE_SERVICE_RESULT = 4;
}

enum ResponseType {
  RESPONSE_TYPE_SUCCESS = 0;
  RESPONSE_TYPE_ERROR = 1;
}

// Request to update the screening status for a candidate
message UpdateSterlingScreeningStatusRequest {
  // Screening ID
  string screening_id = 1;
  // Candidate ID
  string candidate_id = 2;
  // Status
  string status = 3;
  // Result
  string result = 4;
}

// Response after attempting to update the screening status for a candidate
message UpdateSterlingScreeningStatusResponse {
  // Whether or not the update was a success
  bool success = 1;
  // Error message, if any
  string error_message = 2;
}


message UpdateUSACheckrStatusRequest {
  google.protobuf.StringValue metadata = 1;
}

message UpdateUSACheckrStatusResponse {
  ResponseType response_type = 1;
  google.protobuf.StringValue message = 2;
}

message UpdateCanadaCheckrStatusRequest {
  string applicant_id = 1;
  string file_id = 2;
  }

message UpdateCanadaCheckrStatusResponse {
  ResponseType response_type = 1;
}

message UpdateIDVStatusRequest {
  google.protobuf.StringValue applicant_id = 1;
  google.protobuf.StringValue identity_verification_status = 2;
  google.protobuf.StringValue identity_verified_at = 3;
  google.protobuf.StringValue identity_inquiry_id = 4;
  google.protobuf.StringValue identity_template_id = 5;
  google.protobuf.StringValue screen_notes = 6;
}

message UpdateIDVStatusResponse {
  ResponseType response_type = 1;
}

message UpdatePreBgcReviewApprovedRequest {
  string applicant_unique_link = 1;
}

message UpdatePreBgcReviewApprovedResponse {
  ResponseType response_type = 1;
}

message UpdateCheckrInvitationStatusRequest {
  string type = 1;
  string checkr_candidate_id = 2;
}

message UpdateCheckrInvitationStatusResponse {
  ResponseType response_type = 1;
}

message UpdateCanadaCheckrOneStatusRequest {
  google.protobuf.StringValue metadata = 1;
}

message UpdateCanadaCheckrOneStatusResponse {
  ResponseType response_type = 1;
  google.protobuf.StringValue message = 2;
}

message UpdateSterlingCCMonitorStatusRequest {
  google.protobuf.StringValue monitor_id = 1;
  google.protobuf.StringValue transaction_id = 2;
  google.protobuf.StringValue status = 3;
  google.protobuf.StringValue candidate_id = 4;
}

message UpdateSterlingCCMonitorStatusResponse {
  ResponseType response_type = 1;
  google.protobuf.StringValue message = 2;
}

message UpdateBGCStatusRequest {
  google.protobuf.StringValue metadata = 1;
  dasher_service.dasher_common.BgcVendorType vendor_type = 2;
  google.protobuf.BoolValue skip_history_table = 3; // default to no, use for replay
}

message UpdateBGCStatusResponse {
  ResponseType response_type = 1;
  google.protobuf.StringValue message = 2;
}