syntax = "proto3";

package dasher_service.dasher_common;

import "google/protobuf/wrappers.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.dasher.dasher_common";

message File {
  bytes content = 1;

  string filename = 2;
}

message Date {
  int32 year = 1;
  int32 month = 2;
  int32 day = 3;
}

message DateTime {
  string value = 1;
}

message Point {
  float x = 1;

  float y = 2;
}

message LatLng {
  float lat = 1; // equivalent to common.Point.y

  float lng = 2; // equivalent to common.Point.x
}

message DateTimeValue {
  DateTime value = 1;
}

message DateTimeRange {
  string gt = 1;

  string gte = 2;

  string lt = 3;

  string lte = 4;
}

message DateTimeInterval {
  DateTime start = 1;

  DateTime end = 2;
}

message FindRequest {
  int32 fk = 1;
  int32 offset = 2;
  int32 limit = 3;
  bool count_only = 4;
  string order_by = 5;
}

message FindResponse {
  repeated int32 ids = 1;
}

message Address {
  string name = 1;
  string street = 2;
  string subpremise = 3;
  string city = 4;
  string state = 5;
  string zip = 6;
  string country = 7;
  string formatted_address = 8;
  LatLng point = 9;
}

message DriversLicense {
  // driver license number (Required)
  string driver_license_number_token = 1;
  // country (Required)
  string issuing_country = 2;
  // region: state (Required)
  string issuing_region = 3;
  // issued_date
  google.protobuf.StringValue issued_date = 4;
}

// background check verdor type
enum BgcVendorType {
  // unspecified vendor type
  BGC_VENDOR_TYPE_UNSPECIFIED = 0;
  // all US vendor types
  BGC_VENDOR_TYPE_ALL_US = 1;
  // Checkr US
  BGC_VENDOR_TYPE_CHECKR_US = 2;
  // Sterling US
  BGC_VENDOR_TYPE_STERLING_US = 3;
}

message VehicleCargoCapacity {
  // Deprecated volume in cubic meters
  google.protobuf.Int64Value volume_cubic_meters = 1 [deprecated = true];
  // Deprecated weight in kgs
  google.protobuf.Int64Value weight_in_kgs = 2 [deprecated = true];
  // volume in cubic meters
  google.protobuf.DoubleValue volume_in_cubic_meter = 3;
  // weight in grams
  google.protobuf.DoubleValue weight_in_gram = 4;
}

// Define who created the shift - dasher or internal system
enum ShiftType {
  // unspecified shift type (by-default, it means dasher created this shift)
  SHIFT_TYPE_UNSPECIFIED = 0;
  // dasherless shift
  SHIFT_TYPE_DASHERLESS = 1;
  // opportunity based shift
  SHIFT_TYPE_OPPORTUNITY = 2;
}

// Define the status of the shift
enum ShiftStatus {
  // unspecified shift status
  SHIFT_STATUS_UNSPECIFIED = 0;
  // shift is active
  SHIFT_STATUS_ACTIVE = 1;
  // shift is scheduled
  SHIFT_STATUS_SCHEDULED = 2;
  // shift is completed
  SHIFT_STATUS_COMPLETED = 3;
}

// Define the sub status of the shift
enum ShiftSubStatus {
  // unspecified shift sub status
  SHIFT_SUB_STATUS_UNSPECIFIED = 0;
  // shift is assignable for orders
  SHIFT_SUB_STATUS_ASSIGNABLE = 1;
  // shift is paused
  SHIFT_SUB_STATUS_PAUSED = 2;
  // shift is cancelled
  SHIFT_SUB_STATUS_CANCELLED = 3;
  // shift is closed out
  SHIFT_SUB_STATUS_CLOSED_OUT = 4;
  // shift is checked out
  SHIFT_SUB_STATUS_CHECKED_OUT = 5;
}

// Define the consistency level for certain read APIs
enum ConsistencyLevel {
  // unspecified consistency level
  CONSISTENCY_LEVEL_UNSPECIFIED = 0;
  // strong consistency
  CONSISTENCY_LEVEL_STRONG = 1;
  // eventual consistency
  CONSISTENCY_LEVEL_EVENTUAL = 2;
}
