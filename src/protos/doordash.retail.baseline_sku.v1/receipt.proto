syntax = "proto3";

package doordash.retail.baseline_sku.v1;

import "common/money.proto";
import "google/protobuf/wrappers.proto";

option go_package = "github.com/doordash/services-protobuf/generated/doordash/retail/baseline_sku/v1";
option java_generic_services = true;
option java_multiple_files = true;

// Transaction Type
enum TransactionType {
  // Default
  TRANSACTION_TYPE_UNSPECIFIED = 0;
  // ACH
  TRANSACTION_TYPE_ACH = 1;
  // Credit Card
  TRANSACTION_TYPE_CREDIT_CARD = 2;
  // Debit Card
  TRANSACTION_TYPE_DEBIT_CARD = 3;
  // Bypass
  TRANSACTION_TYPE_BYPASS = 4;
}

// Transaction Info
message TransactionInfo {
  // Transaction type
  TransactionType transaction_type = 1;
  // Transaction amount
  money.MonetaryFields amount = 2;
}

// Receipt
message Receipt {
  // Delivery uuid
  google.protobuf.StringValue delivery_uuid = 1;
  // Receipt id
  google.protobuf.StringValue id = 2;
  // Internal store id
  google.protobuf.StringValue store_id = 3;
  // External store id aka location id
  google.protobuf.StringValue external_store_id = 4;
  // Merchant name aka provider type
  google.protobuf.StringValue merchant_name = 5;
  // Grand total, should equal subtotal + tax + fees (if any)
  money.MonetaryFields grand_total = 6;
  // Tax
  money.MonetaryFields tax = 7;
  // Transaction info
  repeated TransactionInfo transaction_info = 8;
  // Receipt items
  repeated ReceiptItem items = 9;
  // Receipt tax info
  repeated ReceiptTaxInfo taxes_and_fees_info = 10;
  // Subtotal of pre-tax order items
  money.MonetaryFields subtotal = 11;
  // Grand total confidence score
  google.protobuf.DoubleValue grand_total_confidence_score = 12;
  // Tax confidence score
  google.protobuf.DoubleValue tax_confidence_score = 13;
  // Subtotal confidence score
  google.protobuf.DoubleValue subtotal_confidence_score = 14;
  // Red Card Swipe Amount
  money.MonetaryFields swipe_amount = 15;
  // Receipt Images
  repeated google.protobuf.StringValue receipt_images = 16;
  // Business Id
  google.protobuf.StringValue business_id = 17;
  // Confidence Score
  google.protobuf.DoubleValue confidence_score = 18;
  // Receipt Fee Info
  repeated ReceiptFeeInfo fees = 19;
  // Receipt Barcode
  google.protobuf.StringValue barcode = 20;
  // Receipt Type
  ReceiptType receipt_type = 21;
  // receipt barcode source
  ReceiptBarcodeSource receipt_barcode_source = 22;
  // Receipt Barcode Source
  enum ReceiptBarcodeSource {
    // Default
    RECEIPT_BARCODE_SOURCE_UNSPECIFIED = 0;
    // Barcode extracted from Microblink
    RECEIPT_BARCODE_SOURCE_MICROBLINK = 1;
    // Barcode extracted from VisionKit
    RECEIPT_BARCODE_SOURCE_VISIONKIT = 2;
  }
}

// Receipt Item
message ReceiptItem {
  // Internal MSID
  google.protobuf.StringValue merchant_supplied_id = 1;
  // External MSID
  google.protobuf.StringValue external_merchant_supplied_id = 2;
  // Item description
  google.protobuf.StringValue description = 3;
  // Item category
  google.protobuf.StringValue category = 4;
  // Item pricing
  money.MonetaryFields pricing = 5;
  // Item quantity
  google.protobuf.Int32Value quantity = 6;
  // Item weight
  google.protobuf.DoubleValue weight = 7;
  // Item weight unit
  google.protobuf.StringValue weight_unit = 8;
  // Deprecated: Item taxes and fees
  repeated ReceiptTaxInfo taxes = 9 [deprecated = true];
  // Pricing confidence score
  google.protobuf.DoubleValue pricing_confidence_score = 10;
  // Unit pricing
  money.MonetaryFields unit_pricing = 11;
  // Unit pricing confidence score
  google.protobuf.DoubleValue unit_pricing_confidence_score = 12;
  // Receipt confidence score
  google.protobuf.DoubleValue confidence_score = 13;
  // Pre-discount pricing
  money.MonetaryFields pre_discount_pricing = 14;
  // Pre-discount pricing confidence score
  google.protobuf.DoubleValue pre_discount_pricing_confidence_score = 15;
  // Pre-discount unit pricing
  money.MonetaryFields pre_discount_unit_pricing = 16;
  // Pre-discount unit pricing confidence score
  google.protobuf.DoubleValue pre_discount_unit_pricing_confidence_score = 17;
}

//Receipt Tax Info
message ReceiptTaxInfo {
  // Type
  google.protobuf.StringValue type = 1;
  // Amount
  money.MonetaryFields amount = 2;
  // Taxable amount
  money.MonetaryFields taxable_amount = 3;
  // Confidence Score
  google.protobuf.DoubleValue confidence_score = 4;
}

// Receipt Fee Type
enum ReceiptFeeType {
  // Default
  RECEIPT_FEE_TYPE_UNSPECIFIED = 0;
  // Receipt Level Bag Fee
  RECEIPT_FEE_TYPE_RECEIPT_BAG_FEE = 1;
  // Receipt Level Bottle Fee
  RECEIPT_FEE_TYPE_RECEIPT_BOTTLE_FEE = 2;
  // Item Level Bottle Fee
  RECEIPT_FEE_TYPE_ITEM_BOTTLE_FEE = 3;
}

//Receipt Fee Info
message ReceiptFeeInfo {
  // Type
  ReceiptFeeType type = 1;
  // Total Fee Amount
  money.MonetaryFields total_amount = 2;
  // Total Fee Amount Confidence Score
  google.protobuf.DoubleValue total_amount_confidence_score = 3;
  // Taxable amount
  money.MonetaryFields taxable_amount = 4;
  // Internal MSID
  google.protobuf.StringValue merchant_supplier_id = 5;
  // External MSID
  google.protobuf.StringValue external_merchant_supplier_id = 6;
  // Fee Confidence Score
  google.protobuf.DoubleValue confidence_score = 7;
  // Fee Unit Quantity
  google.protobuf.UInt32Value unit_quantity = 8;
  // Fee Unit Amount
  money.MonetaryFields unit_amount = 9;
  // Fee Unit Amount Confidence Score
  google.protobuf.DoubleValue unit_amount_confidence_score = 10;
  // Index of the ReceiptItem that this fee is associated with
  google.protobuf.Int32Value receipt_item_index = 11;
}

// Receipt Type
enum ReceiptType {
  // UNSPECIFIED
  RECEIPT_TYPE_UNSPECIFIED = 0;
  // DASHER_SALES_RECEIPT
  RECEIPT_TYPE_DASHER_SALES_RECEIPT = 1;
  // CONSUMER_RETURN_RECEIPT
  RECEIPT_TYPE_CONSUMER_RETURN_RECEIPT = 2;
  // MERCHANT_SALES_RECEIPT
  RECEIPT_TYPE_MERCHANT_SALES_RECEIPT = 3;
}
