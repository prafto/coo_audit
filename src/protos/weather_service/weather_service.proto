syntax = "proto3";

package weather_service.v1;

import "common/service_client_config.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.weather_service";

// This is a service for retrieving weather forecasts and historical weather data
service WeatherService {
  option (service_client.client_config).service_name = "weather-service";
  option (service_client.client_config).service_app = "web";
  // The following applies for all RPCs in the service, if not overridden on individual RPCs.
  // Timeout after 700 milliseconds.
  option (service_client.client_config).response_attempt_timeout_millis = 700;
  // Make a total 4 attempts (initial + three retries).
  option (service_client.client_config).retry_config.max_attempts = 4;
  // Add RESOURCE_EXHAUSTED to the set of retriable codes.
  option (service_client.client_config).retry_config.do_retry_grpc_code = 8;
  // Break the circuit if the error rate exceeds 80%.
  option (service_client.client_config).circuit_breaker_config.failure_rate_threshold = 0.8;
  // Ignore NOT_FOUND from circuit breaker error rate calculation.
  option (service_client.client_config).circuit_breaker_config.do_ignore_grpc_code = 5;

  // Returns the historical weather data set
  // WARNING: Currently unimplemented
  rpc GetHistoricalWeather(GetHistoricalWeatherRequest) returns (GetHistoricalWeatherResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 2000;
  }

  // Returns the weather forecast data set
  // WARNING: Currently unimplemented
  rpc GetWeatherForecast(GetWeatherForecastRequest) returns (GetWeatherForecastResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 2000;
  }

  // Returns the weather alerts from the latest poll that match the filters provided in the request
  rpc GetLatestAlerts(GetLatestAlertsRequest) returns (GetLatestAlertsResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 5000;
  }
}

// What type of weather event is the alert for
enum Phenomena {
  // Unknown
  PHENOMENA_UNSPECIFIED = 0;
  // Blizzard
  PHENOMENA_BLIZZARD = 1;
  // Storm
  PHENOMENA_TROPICAL_STORM = 2;
  // Hurricane
  PHENOMENA_HURRICANE = 3;
  // Flood
  PHENOMENA_FLOOD = 4;
  // Tsunami
  PHENOMENA_TSUNAMI = 5;
  // Storm
  PHENOMENA_STORM = 6;
  // Tornado
  PHENOMENA_TORNADO = 7;
  // Ice storm
  PHENOMENA_ICE_STORM = 8;
  // Winter storm
  PHENOMENA_WINTER_STORM = 9;
}

// Equated to Type - such as a Watch, Warning or Advisory
enum Significance {
  // Unknown
  SIGNIFICANCE_UNSPECIFIED = 0;
  // Advisory
  SIGNIFICANCE_ADVISORY = 1;
  // Watch
  SIGNIFICANCE_WATCH = 2;
  // Warning
  SIGNIFICANCE_WARNING = 3;
}

// How severe is the weather event that is triggering the alert
enum Severity {
  // Unknown
  SEVERITY_UNSPECIFIED = 0;
  // Minor – Minimal to no known threat to life or property
  SEVERITY_MINOR = 1;
  // Moderate - Possible threat to life or property
  SEVERITY_MODERATE = 2;
  // Severe - Significant threat to life or property
  SEVERITY_SEVERE = 3;
  // Extreme - Extraordinary threat to life or property
  SEVERITY_EXTREME = 4;
  // Unknown - Severity unknown
  SEVERITY_UNKNOWN = 5;
}

// How urgently should responsive action be taken?
enum Urgency {
  // Unspecified
  URGENCY_UNSPECIFIED = 0;
  // Responsive action should be taken immediately
  URGENCY_IMMEDIATE = 1;
  // Responsive action should be taken soon (within next hour)
  URGENCY_EXPECTED = 2;
  // Responsive action should be taken in the near future
  URGENCY_FUTURE = 3;
  // Responsive action is no longer required
  URGENCY_PAST = 4;
  // Urgency not known
  URGENCY_UNKNOWN = 5;
}

// How certain is the event to occur
enum Certainty {
  // Unspecified
  CERTAINTY_UNSPECIFIED = 0;
  // Observed – Determined to have occurred or to be ongoing
  CERTAINTY_OBSERVED = 1;
  // Likely - Likely (p > ~50%)
  CERTAINTY_LIKELY = 2;
  // Possible - Possible but not likely (p <= ~50%)
  CERTAINTY_POSSIBLE = 3;
  // Unlikely - Not expected to occur (p ~ 0)
  CERTAINTY_UNLIKELY = 4;
  // Unknown - Certainty unknown
  CERTAINTY_UNKNOWN = 5;
}

// Request object for getting the latest Weather Alerts. Contains filters to match the return alerts against
message GetLatestAlertsRequest {
  // The type of alerts we are interested in
  repeated Phenomena phenomena_filters = 1;
  // The certainty level we are interested in
  repeated Significance significance_filters = 2;
  // The severity of alerts we are interested in
  repeated Severity severity_filters = 3;
}

// Internal model for Weather Alert data
message WeatherAlert {
  // The type of weather event
  Phenomena phenomena = 1;
  // The certainty for the alert
  Significance significance = 2;
  // The severity of the weather event
  Severity severity = 3;
  // Description of the affected area eg, "Todd County, South Dakota, US"
  google.protobuf.StringValue area = 4;
  // Geometry is GeoJSON, could be polygon or point
  google.protobuf.StringValue geometry = 5;
  // What time the weather event began (in UTC)
  google.protobuf.Timestamp event_begin_time_utc = 6;
  // What time the weather event ended (in UTC)
  google.protobuf.Timestamp event_end_time_utc = 7;
  // IANA time zone code, eg "America/New_York"
  google.protobuf.StringValue event_time_zone = 8;
  // What time the Alert was issued (in UTC)
  google.protobuf.Timestamp alert_issue_time_utc = 9;
  // What time the Alert expires (in UTC)
  google.protobuf.Timestamp alert_expire_time_utc = 10;
  // The time zone at the location where the alert was issued, eg "EDT"
  google.protobuf.StringValue alert_time_zone = 11;
  // The time when this weather alert was last refreshed (in UTC)
  google.protobuf.Timestamp poll_time = 12;
  // Eg, "Blizzard Warning from FRI 6:00 AM CST until SAT 6:00 AM CST"
  google.protobuf.StringValue headline = 13;
  // Eg, "Blizzard Warning" Usually, Phenomea + Significance
  google.protobuf.StringValue short_description = 14;
  // Eg, "Expected"
  Urgency urgency = 15;
  // Eg, "Observed"
  Certainty certainty = 16;
  // Eg, [Large block of pre-formatted text including WHAT, WHERE, WHEN, IMPACTS, PRECAUTIONARY/PREPAREDNESS ACTIONS]
  google.protobuf.StringValue full_description = 17;
  // A metadata property to help identify the alert
  google.protobuf.StringValue id = 18;
  // Local expire time, eg "2017-10-07T19:30:00-05:00"
  google.protobuf.StringValue alert_expire_time_local = 19;
}

// The response object containing the most recent Weather alerts matching the provided filters
message GetLatestAlertsResponse {
  // A list of the most recent Weather Alerts
  repeated WeatherAlert weather_alerts = 1;
}

// Currently unimplemented
message GetHistoricalWeatherRequest {}

// Currently unimplemented
message GetHistoricalWeatherResponse {}

// Currently unimplemented
message GetWeatherForecastRequest {}

// Currently unimplemented
message GetWeatherForecastResponse {}
