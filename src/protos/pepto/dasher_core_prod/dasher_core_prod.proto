syntax = "proto3";
package pepto.dasher_core_prod.v1;

import "google/protobuf/descriptor.proto";
import "google/protobuf/timestamp.proto";
import "pepto/options.proto";

option java_package = "com.doordash.pepto.schema.dasher_core_prod";

// dasher_manual_assign_interval table
message DasherManualAssignInterval {
  option (schema_type) = "datalake";
  option (cdc_source) = "crdb";

  // id int64
  int64 id = 1 [(is_key_column) = true];

  // start_time google.protobuf.Timestamp
  google.protobuf.Timestamp start_time = 2;

  // end_time google.protobuf.Timestamp
  google.protobuf.Timestamp end_time = 3;

  // excused bool
  bool excused = 4;

  // reason string
  string reason = 5;

  // shift_id int64
  int64 shift_id = 6;

  // allowed_seconds int32
  int32 allowed_seconds = 8;
}

// dasher_shift_stats table
message DasherShiftStats {
  option (schema_type) = "datalake";
  option (cdc_source) = "crdb";

  // id int64
  int64 id = 1 [(is_key_column) = true];

  // updated_at google.protobuf.Timestamp
  google.protobuf.Timestamp updated_at = 2;

  // late_check_in_duration int32
  int32 late_check_in_duration = 3;

  // early_check_out_duration int32
  int32 early_check_out_duration = 4;

  // bad_ma_duration int32
  int32 bad_ma_duration = 5;

  // num_reassignments int32
  int32 num_reassignments = 6;

  // num_missing_errors int32
  int32 num_missing_errors = 7;

  // num_incorrect_errors int32
  int32 num_incorrect_errors = 8;

  // num_flagged_unprofessional int32
  int32 num_flagged_unprofessional = 9;

  // delivery_stars string
  string delivery_stars = 10;

  // confirm_times string
  string confirm_times = 11;

  // r2c_multiples string
  string r2c_multiples = 12;

  // shift_id int64
  int64 shift_id = 13;
}

// dasher_deactivation_reason table
message DasherDeactivationReason {
  option (schema_type) = "datalake";
  option (cdc_source) = "crdb";

  // id int64
  int64 id = 1 [(is_key_column) = true];

  // reason string
  string reason = 2;

  // use_suspension_wording bool
  bool use_suspension_wording = 3;

  // first_warning_threshold int64
  int64 first_warning_threshold = 4;

  // first_warning_email_template_str string
  string first_warning_email_template_str = 5;

  // second_warning_threshold int64
  int64 second_warning_threshold = 6;

  // second_warning_email_template_str string
  string second_warning_email_template_str = 7;

  // is_active is_active
  bool is_active = 8;
}

// dasher_equipment table
message DasherEquipment {
  option (schema_type) = "datalake";
  option (cdc_source) = "crdb";

  // id int64
  int64 id = 1 [(is_key_column) = true];

  // count int64
  int64 count = 2;

  // equipped_at google.protobuf.Timestamp
  google.protobuf.Timestamp equipped_at = 3;

  // dasher_id int64
  int64 dasher_id = 4;

  // equipment_type_id int64
  int64 equipment_type_id = 5;
}

// dasher_equipment_type table
message DasherEquipmentType {
  option (schema_type) = "datalake";
  option (cdc_source) = "crdb";

  // id int64
  int64 id = 1 [(is_key_column) = true];

  // name string
  string name = 2;
}

// dasher_terms_of_service table
message DasherTermsOfService {
  option (schema_type) = "datalake";
  option (cdc_source) = "crdb";

  // id int64
  int64 id = 1 [(is_key_column) = true];

  // version int64
  int64 version = 2;

  // created_at google.protobuf.Timestamp
  google.protobuf.Timestamp created_at = 3;

  // country string
  string country = 4;

  // url string
  string url = 5;
}

// shift_change_event table
message ShiftChangeEvent {
  option (schema_type) = "datalake";
  option (cdc_source) = "crdb";

  // id int64
  int64 id = 1 [(is_key_column) = true];

  // type string
  string type = 2;

  // original_scheduled_start_time google.protobuf.Timestamp
  google.protobuf.Timestamp original_scheduled_start_time = 3;

  // original_scheduled_end_time google.protobuf.Timestamp
  google.protobuf.Timestamp original_scheduled_end_time = 4;

  // created_at google.protobuf.Timestamp
  google.protobuf.Timestamp created_at = 5;

  // shift_id int64
  int64 shift_id = 6;
}

// dasher_announcement table
message DasherAnnouncement {
  option (schema_type) = "datalake";
  option (cdc_source) = "crdb";

  // id int64
  int64 id = 1 [(is_key_column) = true];

  // title string
  string title = 2;

  // body string
  string body = 3;

  // expiration_date google.protobuf.Timestamp
  google.protobuf.Timestamp expiration_date = 4;

  // created_at google.protobuf.Timestamp
  google.protobuf.Timestamp created_at = 5;

  // image string
  string image = 6;

  // whitelist_dasher_ids string
  string whitelist_dasher_ids = 7;

  // experiment_name string
  string experiment_name = 8;

  // experiment_platform string
  string experiment_platform = 9;

  // urgency string
  string urgency = 10;
}

// dasher_tos_link table
message DasherTosLink {
  option (schema_type) = "datalake";
  option (cdc_source) = "crdb";

  // id int64
  int64 id = 1 [(is_key_column) = true];

  // accepted_at google.protobuf.Timestamp
  google.protobuf.Timestamp accepted_at = 2;

  // dasher_id int64
  int64 dasher_id = 3;

  // terms_of_service_id int64
  int64 terms_of_service_id = 4;
}

// dasher_announcement_submarkets table
message DasherAnnouncementSubmarkets {
  option (schema_type) = "datalake";
  option (cdc_source) = "crdb";

  // id int64
  int64 id = 1 [(is_key_column) = true];

  // driverannouncement_id int64
  int64 driverannouncement_id = 2;

  // submarket_id int64
  int64 submarket_id = 3;
}
