syntax = "proto3";
package pepto.drs.v1;

import "common/date.proto";
import "google/protobuf/descriptor.proto";
import "google/protobuf/timestamp.proto";
import "pepto/options.proto";

option java_package = "com.doordash.pepto.schema.drs";

// issuance_formula table
message IssuanceFormula {
  option (schema_type) = "datalake";
  option (cdc_source) = "postgres";

  // id int64
  int64 id = 1 [(is_key_column) = true];

  // display_name string
  string display_name = 2;

  // description string
  string description = 3;

  // value string
  string value = 4;

  // created_at google.protobuf.Timestamp
  google.protobuf.Timestamp created_at = 5;

  // updated_at google.protobuf.Timestamp
  google.protobuf.Timestamp updated_at = 6;

  // json_value string
  string json_value = 7;
}

// issuance_policy table
message IssuancePolicy {
  option (schema_type) = "datalake";
  option (cdc_source) = "postgres";

  // id int64
  int64 id = 1 [(is_key_column) = true];

  // problem_name string
  string problem_name = 2;

  // base_credit_formula_id int64
  int64 base_credit_formula_id = 3;

  // apology_credit_formula_id int64
  int64 apology_credit_formula_id = 4;

  // refund_formula_id int64
  int64 refund_formula_id = 5;

  // is_allowed_dashpass string
  string is_allowed_dashpass = 6 [(is_boolean_type) = true];

  // is_allowed_redelivery string
  string is_allowed_redelivery = 7 [(is_boolean_type) = true];

  // is_active string
  string is_active = 8 [(is_boolean_type) = true];

  // created_at google.protobuf.Timestamp
  google.protobuf.Timestamp created_at = 9;

  // updated_at google.protobuf.Timestamp
  google.protobuf.Timestamp updated_at = 10;

  // c_r_segment_id int64
  int64 c_r_segment_id = 11;

  // lateness_group_id int64
  int64 lateness_group_id = 12;

  // credit_refund_formula_id int64
  int64 credit_refund_formula_id = 13;
}

// mx_chargeback_formula table
message MxChargebackFormula {
  option (schema_type) = "datalake";
  option (cdc_source) = "postgres";

  // id int64
  int64 id = 1 [(is_key_column) = true];

  // name string
  string name = 2;

  // value string
  string value = 3;

  // description string
  string description = 4;

  // created_at google.protobuf.Timestamp
  google.protobuf.Timestamp created_at = 5;

  // updated_at google.protobuf.Timestamp
  google.protobuf.Timestamp updated_at = 6;
}

// mx_chargeback_level table
message MxChargebackLevel {
  option (schema_type) = "datalake";
  option (cdc_source) = "postgres";

  // id int64
  int64 id = 1 [(is_key_column) = true];

  // name string
  string name = 2;

  // rank int64
  int64 rank = 3;

  // created_at google.protobuf.Timestamp
  google.protobuf.Timestamp created_at = 4;

  // updated_at google.protobuf.Timestamp
  google.protobuf.Timestamp updated_at = 5;
}

// mx_chargeback_policy table
message MxChargebackPolicy {
  option (schema_type) = "datalake";
  option (cdc_source) = "postgres";

  // id int64
  int64 id = 1 [(is_key_column) = true];

  // level_id int64
  int64 level_id = 2;

  // entity_id int64
  int64 entity_id = 3;

  // problem_name string
  string problem_name = 4;

  // formula_id int64
  int64 formula_id = 5;

  // is_enabled string
  string is_enabled = 6 [(is_boolean_type) = true];

  // override_children string
  string override_children = 7 [(is_boolean_type) = true];

  // created_at google.protobuf.Timestamp
  google.protobuf.Timestamp created_at = 8;

  // updated_at google.protobuf.Timestamp
  google.protobuf.Timestamp updated_at = 9;
}

// problem table
message Problem {
  option (schema_type) = "datalake";
  option (cdc_source) = "postgres";

  // name string
  string name = 1 [(is_key_column) = true];

  // display_name string
  string display_name = 2;

  // description string
  string description = 3;

  // problem_level_name string
  string problem_level_name = 4;

  // problem_type_name string
  string problem_type_name = 5;

  // is_legacy string
  string is_legacy = 6 [(is_boolean_type) = true];

  // weight int64
  int64 weight = 7;

  // is_allowed_mx_charge string
  string is_allowed_mx_charge = 8 [(is_boolean_type) = true];

  // is_use_lateness_logic string
  string is_use_lateness_logic = 9 [(is_boolean_type) = true];

  // mx_charge_percentage double
  double mx_charge_percentage = 10;

  // created_at google.protobuf.Timestamp
  google.protobuf.Timestamp created_at = 11;

  // updated_at google.protobuf.Timestamp
  google.protobuf.Timestamp updated_at = 12;

  // cnr_policy_workflow_id int64
  int64 cnr_policy_workflow_id = 13;

  // display_name_workflow_id int64
  int64 display_name_workflow_id = 14;
}

// problem_level_max table
message ProblemLevelMax {
  option (schema_type) = "datalake";
  option (cdc_source) = "postgres";

  // id int64
  int64 id = 1 [(is_key_column) = true];

  // c_r_segment_id int64
  int64 c_r_segment_id = 2;

  // level_name string
  string level_name = 3;

  // base_credit_max_formula_id int64
  int64 base_credit_max_formula_id = 4;

  // apology_credit_max_formula_id int64
  int64 apology_credit_max_formula_id = 5;

  // refund_max_formula_id int64
  int64 refund_max_formula_id = 6;

  // created_at google.protobuf.Timestamp
  google.protobuf.Timestamp created_at = 7;

  // updated_at google.protobuf.Timestamp
  google.protobuf.Timestamp updated_at = 8;
}
