syntax = "proto3";
package pepto.supply_demand.v1;

import "google/protobuf/descriptor.proto";
import "google/protobuf/timestamp.proto";
import "pepto/options.proto";

option java_package = "com.doordash.pepto.schema.supply_demand";

// dasher_challenge_rule_progress table
message DasherChallengeRuleProgress {
  option (schema_type) = "datalake";
  option (cdc_source) = "crdb";

  // id string
  string id = 1 [(is_key_column) = true];

  // postgres_id int64
  int64 postgres_id = 2;

  // dasher_id int64
  int64 dasher_id = 3;

  // rule_type string
  string rule_type = 4;

  // progress_metadata string
  string progress_metadata = 5;

  // goal float
  float goal = 6;

  // operator string
  string operator = 7;

  // progress float
  float progress = 8;

  // completed_at google.protobuf.Timestamp
  google.protobuf.Timestamp completed_at = 9;

  // created_at google.protobuf.Timestamp
  google.protobuf.Timestamp created_at = 10;

  // updated_at google.protobuf.Timestamp
  google.protobuf.Timestamp updated_at = 11;

  // dasher_challenge_id string
  string dasher_challenge_id = 12;

  // dasher_challenge_postgres_id int64
  int64 dasher_challenge_postgres_id = 13;

  // dasher_challenge_progress_id string
  string dasher_challenge_progress_id = 14;

  // dasher_challenge_progress_postgres_id int64
  int64 dasher_challenge_progress_postgres_id = 15;
}

// flf_thresholds table
message FlfThresholds {
  option (schema_type) = "datalake";
  option (cdc_source) = "crdb";

  // starting_point_id int64
  int64 starting_point_id = 1 [(is_key_column) = true];

  // window_id int64
  int64 window_id = 2 [(is_key_column) = true];

  // name string
  string name = 3 [(is_key_column) = true];

  // version string
  string version = 4 [(is_key_column) = true];

  // value float
  float value = 5;
}

// dasher_challenge_progress table
message DasherChallengeProgress {
  option (schema_type) = "datalake";
  option (cdc_source) = "crdb";

  // id string
  string id = 1 [(is_key_column) = true];

  // postgres_id int64
  int64 postgres_id = 2;

  // dasher_id int64
  int64 dasher_id = 3;

  // completion_shown_at google.protobuf.Timestamp
  google.protobuf.Timestamp completion_shown_at = 4;

  // completed_at google.protobuf.Timestamp
  google.protobuf.Timestamp completed_at = 5;

  // job_id int64
  int64 job_id = 6;

  // created_at google.protobuf.Timestamp
  google.protobuf.Timestamp created_at = 7;

  // updated_at google.protobuf.Timestamp
  google.protobuf.Timestamp updated_at = 8;

  // dasher_challenge_id string
  string dasher_challenge_id = 9;

  // dasher_challenge_postgres_id int64
  int64 dasher_challenge_postgres_id = 10;
}

// dasher_challenge table
message DasherChallenge {
  option (schema_type) = "datalake";
  option (cdc_source) = "crdb";

  // id string
  string id = 1 [(is_key_column) = true];

  // postgres_id int64
  int64 postgres_id = 2;

  // reward_amount int64
  int64 reward_amount = 3;

  // rules string
  string rules = 4;

  // activation_time google.protobuf.Timestamp
  google.protobuf.Timestamp activation_time = 5 [(is_key_column) = true];

  // active_until_time google.protobuf.Timestamp
  google.protobuf.Timestamp active_until_time = 6 [(is_key_column) = true];

  // name string
  string name = 7;

  // is_active bool
  bool is_active = 8;

  // whitelist_dasher_ids string
  string whitelist_dasher_ids = 9;

  // description string
  string description = 10;

  // market_id int64
  int64 market_id = 11 [(is_key_column) = true];

  // whitelist_submarket_ids string
  string whitelist_submarket_ids = 12;

  // whitelist_starting_point_ids string
  string whitelist_starting_point_ids = 13;

  // created_at google.protobuf.Timestamp
  google.protobuf.Timestamp created_at = 14;

  // updated_at google.protobuf.Timestamp
  google.protobuf.Timestamp updated_at = 15;

  // created_by int64
  int64 created_by = 16;

  // modified_by int64
  int64 modified_by = 17;
}

// DasherIncentive table
message DasherIncentive {
  // ID for the incentive
  option (schema_type) = "datalake";
  option (cdc_source) = "crdb";
  // id string
  string id = 1 [(is_key_column) = true];
  // Name of the incentive
  string name = 2;
  // Short Description of the incentive
  string description = 3;
  // Active ness of the incentive
  bool is_active = 4;
  // Incentive_type
  string incentive_type = 5;
  // Incentive_value
  string incentive_value = 6;
  // Active_interval_start_time
  google.protobuf.Timestamp active_interval_start_time = 7 [(is_key_column) = true];
  // Active_interval_end_time
  google.protobuf.Timestamp active_interval_end_time = 8 [(is_key_column) = true];
  // Dasher_criterion_type
  string dasher_criterion_type = 9;
  // rules
  string rules = 10;
  // Allowlist_dasher_ids
  string allowlist_dasher_ids = 11;
  // Market_id
  int64 market_id = 12 [(is_key_column) = true];
  // Allowlist_submarket_ids
  string allowlist_submarket_ids = 13;
  // Allowlist_starting_point_ids
  string allowlist_starting_point_ids = 14;
  // Created_at
  google.protobuf.Timestamp created_at = 15;
  // Updated_at
  google.protobuf.Timestamp updated_at = 16;
  // Created_by
  string created_by = 17;
  // Updated_by
  string updated_by = 18;
  // Dasher_education_details
  string dasher_education_details = 19;
  // Notification_info
  string notification_info = 20;
  // Payout type
  string pay_out_info = 21;
  // Metadata for the incentive
  string metadata = 22;
}

// Add pepto for dasher tags
message DasherTags {
  option (schema_type) = "datalake";
  option (cdc_source) = "crdb";
  // id string
  string id = 1 [(is_key_column) = true];
  // text
  string tag = 2 [(is_key_column) = true];
  // dasher_id
  int64 dasher_id = 3;
  // active at
  google.protobuf.Timestamp active_at = 4 [(is_key_column) = true];
  // Active_active_end_time
  google.protobuf.Timestamp active_until = 5 [(is_key_column) = true];
  // created_at
  google.protobuf.Timestamp created_at = 6;
  // starting_point_id string
  string starting_point_id = 7 [(is_key_column) = true];
  //metadata string
  string metadata = 8;
}

// DasherIncentiveProgress table
message DasherIncentiveProgress {
  // ID for the incentive
  option (schema_type) = "datalake";
  option (cdc_source) = "crdb";
  // id string
  string id = 1 [(is_key_column) = true];
  // dasher id
  int64 dasher_id = 2;
  // completion_shown_at
  google.protobuf.Timestamp completion_shown_at = 3;
  // completed_at
  google.protobuf.Timestamp completed_at = 4;
  // job_id
  int64 job_id = 5;
  // created at
  google.protobuf.Timestamp created_at = 6;
  // updated_at
  google.protobuf.Timestamp updated_at = 7;
  // dasher incentive id
  string dasher_incentive_id = 8;
  // progress metadata
  string progress_metadata = 9;
  // goal
  string goal = 10;
  // progress
  string progress = 11;
}
