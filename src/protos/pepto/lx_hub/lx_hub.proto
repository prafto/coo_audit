syntax = "proto3";
package pepto.lx_hub.v1;
option java_package = "com.doordash.pepto.schema.lx_hub";

import "google/protobuf/descriptor.proto";
import "google/protobuf/timestamp.proto";
import "pepto/options.proto";

// hub_robot_assigner_config table
message HubRobotAssignerConfig { 
  option (schema_type) = "datalake";
  option (cdc_source) = "crdb";

  // hub_id string
  string hub_id = 1 [(is_key_column)=true];

  // is_active bool
  bool is_active = 2;

  // place_geofence_uuid string
  string place_geofence_uuid = 3;

  // created_at google.protobuf.Timestamp
  google.protobuf.Timestamp created_at = 4;

  // updated_at google.protobuf.Timestamp
  google.protobuf.Timestamp updated_at = 5;

}

// fifo_task_delivery_mapping table
message FifoTaskDeliveryMapping { 
  option (schema_type) = "datalake";
  option (cdc_source) = "crdb";

  // real_delivery_id int64
  int64 real_delivery_id = 1 [(is_key_column)=true];

  // task_id string
  string task_id = 2 [(is_key_column)=true];

  // task_group_id string
  string task_group_id = 3;

  // created_at google.protobuf.Timestamp
  google.protobuf.Timestamp created_at = 4;

  // updated_at google.protobuf.Timestamp
  google.protobuf.Timestamp updated_at = 5;

  // real_delivery_batch_id int64
  int64 real_delivery_batch_id = 6;

  // task_batch_id int64
  int64 task_batch_id = 7;

  // is_real_confirmed bool
  bool is_real_confirmed = 8;

}

// hub_serviced_store table
message HubServicedStore { 
  option (schema_type) = "datalake";
  option (cdc_source) = "crdb";

  // hub_id string
  string hub_id = 1 [(is_key_column)=true];

  // store_id int64
  int64 store_id = 2 [(is_key_column)=true];

  // created_at google.protobuf.Timestamp
  google.protobuf.Timestamp created_at = 3;

  // updated_at google.protobuf.Timestamp
  google.protobuf.Timestamp updated_at = 4;

  // is_active bool
  bool is_active = 5;

}

// inter_hub_agent_availability table
message InterHubAgentAvailability { 
  option (schema_type) = "datalake";
  option (cdc_source) = "crdb";

  // created_at google.protobuf.Timestamp
  google.protobuf.Timestamp created_at = 1;

  // updated_at google.protobuf.Timestamp
  google.protobuf.Timestamp updated_at = 2;

  // hub_id string
  string hub_id = 3 [(is_key_column)=true];

  // hub_agent_id string
  string hub_agent_id = 4 [(is_key_column)=true];

}

// holding_slot table
message HoldingSlot { 
  option (schema_type) = "datalake";
  option (cdc_source) = "crdb";

  // id string
  string id = 1 [(is_key_column)=true];

  // name string
  string name = 2;

  // holding_slot_cluster_id string
  string holding_slot_cluster_id = 3;

  // is_active bool
  bool is_active = 4;

  // created_at google.protobuf.Timestamp
  google.protobuf.Timestamp created_at = 5;

  // updated_at google.protobuf.Timestamp
  google.protobuf.Timestamp updated_at = 6;

}

// hub table
message Hub { 
  option (schema_type) = "datalake";
  option (cdc_source) = "crdb";

  // id string
  string id = 1 [(is_key_column)=true];

  // name string
  string name = 2;

  // type string
  string type = 3;

  // is_active bool
  bool is_active = 4;

  // auto_select_deliveries bool
  bool auto_select_deliveries = 5;

  // load_instructions string
  string load_instructions = 6;

  // unload_instructions string
  string unload_instructions = 7;

  // activated_at google.protobuf.Timestamp
  google.protobuf.Timestamp activated_at = 8;

  // deactivated_at google.protobuf.Timestamp
  google.protobuf.Timestamp deactivated_at = 9;

  // created_at google.protobuf.Timestamp
  google.protobuf.Timestamp created_at = 10;

  // updated_at google.protobuf.Timestamp
  google.protobuf.Timestamp updated_at = 11;

  // address_id string
  string address_id = 12;

  // auto_assign bool
  bool auto_assign = 13;

  // holding_slot_cluster_id string
  string holding_slot_cluster_id = 14;

  // load_actor_type string
  string load_actor_type = 15;

  // unload_actor_type string
  string unload_actor_type = 16;

}

// holding_slot_cluster table
message HoldingSlotCluster { 
  option (schema_type) = "datalake";
  option (cdc_source) = "crdb";

  // id string
  string id = 1 [(is_key_column)=true];

  // name string
  string name = 2;

  // type string
  string type = 3;

  // is_active bool
  bool is_active = 4;

  // location_reference string
  string location_reference = 5;

  // location_description_short string
  string location_description_short = 6;

  // location_description_long string
  string location_description_long = 7;

  // created_at google.protobuf.Timestamp
  google.protobuf.Timestamp created_at = 8;

  // updated_at google.protobuf.Timestamp
  google.protobuf.Timestamp updated_at = 9;

}

// fifo_queue_entry table
message FifoQueueEntry { 
  option (schema_type) = "datalake";
  option (cdc_source) = "crdb";

  // id string
  string id = 1 [(is_key_column)=true];

  // hub_id string
  string hub_id = 2;

  // created_at google.protobuf.Timestamp
  google.protobuf.Timestamp created_at = 3;

  // updated_at google.protobuf.Timestamp
  google.protobuf.Timestamp updated_at = 4;

  // shadow_delivery_id int64
  int64 shadow_delivery_id = 5;

  // shift_id int64
  int64 shift_id = 6;

  // checked_in_at google.protobuf.Timestamp
  google.protobuf.Timestamp checked_in_at = 7;

  // concluded_at google.protobuf.Timestamp
  google.protobuf.Timestamp concluded_at = 8;

  // check_in_code string
  string check_in_code = 9;

  // dasher_confirmed_at google.protobuf.Timestamp
  google.protobuf.Timestamp dasher_confirmed_at = 10;

  // dasher_id int64
  int64 dasher_id = 11;

  // is_assigned_real_delivery bool
  bool is_assigned_real_delivery = 12;

  // assigned_at google.protobuf.Timestamp
  google.protobuf.Timestamp assigned_at = 13;

  // quoted_pay_per_active_hour int64
  int64 quoted_pay_per_active_hour = 14;

}

// fifo_task_queue_entry table
message FifoTaskQueueEntry { 
  option (schema_type) = "datalake";
  option (cdc_source) = "crdb";

  // task_id string
  string task_id = 1 [(is_key_column)=true];

  // task_group_id string
  string task_group_id = 2;

  // hub_id string
  string hub_id = 3;

  // created_at google.protobuf.Timestamp
  google.protobuf.Timestamp created_at = 4 [(is_key_column)=true];

  // updated_at google.protobuf.Timestamp
  google.protobuf.Timestamp updated_at = 5;

  // shift_id int64
  int64 shift_id = 6;

  // checked_in_at google.protobuf.Timestamp
  google.protobuf.Timestamp checked_in_at = 7;

  // concluded_at google.protobuf.Timestamp
  google.protobuf.Timestamp concluded_at = 8;

  // dasher_confirmed_at google.protobuf.Timestamp
  google.protobuf.Timestamp dasher_confirmed_at = 9;

  // dasher_id int64
  int64 dasher_id = 10;

  // is_assigned_real_delivery bool
  bool is_assigned_real_delivery = 11;

  // assigned_at google.protobuf.Timestamp
  google.protobuf.Timestamp assigned_at = 12;

  // quoted_pay_per_active_hour int64
  int64 quoted_pay_per_active_hour = 13;

}

// evaluated_hub_route table
message EvaluatedHubRoute { 
  option (schema_type) = "datalake";
  option (cdc_source) = "crdb";

  // created_at google.protobuf.Timestamp
  google.protobuf.Timestamp created_at = 1;

  // updated_at google.protobuf.Timestamp
  google.protobuf.Timestamp updated_at = 2;

  // delivery_id int64
  int64 delivery_id = 3;

  // ordered_hub_ids string
  string ordered_hub_ids = 4;

  // is_valid_route bool
  bool is_valid_route = 5;

  // should_auto_select bool
  bool should_auto_select = 6;

  // constraint_results string
  string constraint_results = 7;

  // rowid int64
  int64 rowid = 8 [(is_key_column)=true];

}

// holding_slot_delivery_placement table
message HoldingSlotDeliveryPlacement { 
  option (schema_type) = "datalake";
  option (cdc_source) = "crdb";

  // holding_slot_id string
  string holding_slot_id = 1 [(is_key_column)=true];

  // delivery_id int64
  int64 delivery_id = 2 [(is_key_column)=true];

  // placed_at google.protobuf.Timestamp
  google.protobuf.Timestamp placed_at = 3;

  // removed_at google.protobuf.Timestamp
  google.protobuf.Timestamp removed_at = 4;

  // created_at google.protobuf.Timestamp
  google.protobuf.Timestamp created_at = 5;

  // updated_at google.protobuf.Timestamp
  google.protobuf.Timestamp updated_at = 6;

}

// dasher_assignment_info table
message DasherAssignmentInfo { 
  option (schema_type) = "datalake";
  option (cdc_source) = "crdb";

  // created_at google.protobuf.Timestamp
  google.protobuf.Timestamp created_at = 1;

  // updated_at google.protobuf.Timestamp
  google.protobuf.Timestamp updated_at = 2;

  // delivery_id int64
  int64 delivery_id = 3 [(is_key_column)=true];

  // estimated_pickup_time string
  string estimated_pickup_time = 4;

  // pickup_location_lat string
  string pickup_location_lat = 5;

  // pickup_location_lng string
  string pickup_location_lng = 6;

}

// delivery_hub_stop table
message DeliveryHubStop { 
  option (schema_type) = "datalake";
  option (cdc_source) = "crdb";

  // hub_id string
  string hub_id = 1 [(is_key_column)=true];

  // delivery_id int64
  int64 delivery_id = 2 [(is_key_column)=true];

  // created_at google.protobuf.Timestamp
  google.protobuf.Timestamp created_at = 3;

  // updated_at google.protobuf.Timestamp
  google.protobuf.Timestamp updated_at = 4;

  // load_actor_type string
  string load_actor_type = 5;

  // unload_actor_type string
  string unload_actor_type = 6;

  // load_actor_id int64
  int64 load_actor_id = 7;

  // unload_actor_id int64
  int64 unload_actor_id = 8;

  // loaded_at google.protobuf.Timestamp
  google.protobuf.Timestamp loaded_at = 9;

  // unloaded_at google.protobuf.Timestamp
  google.protobuf.Timestamp unloaded_at = 10;

  // assigner string
  string assigner = 11;

}

// inter_hub_agent_assignment table
message InterHubAgentAssignment { 
  option (schema_type) = "datalake";
  option (cdc_source) = "crdb";

  // created_at google.protobuf.Timestamp
  google.protobuf.Timestamp created_at = 1;

  // updated_at google.protobuf.Timestamp
  google.protobuf.Timestamp updated_at = 2;

  // id string
  string id = 3 [(is_key_column)=true];

  // delivery_id int64
  int64 delivery_id = 4;

  // agent_id string
  string agent_id = 5;

  // from_hub_id string
  string from_hub_id = 6;

  // to_hub_id string
  string to_hub_id = 7;

  // assigned_at google.protobuf.Timestamp
  google.protobuf.Timestamp assigned_at = 8;

  // unassigned_at google.protobuf.Timestamp
  google.protobuf.Timestamp unassigned_at = 9;

  // loaded_at google.protobuf.Timestamp
  google.protobuf.Timestamp loaded_at = 10;

  // departed_at google.protobuf.Timestamp
  google.protobuf.Timestamp departed_at = 11;

  // unloaded_at google.protobuf.Timestamp
  google.protobuf.Timestamp unloaded_at = 12;

  // concluded_at google.protobuf.Timestamp
  google.protobuf.Timestamp concluded_at = 13;

  // batch_id string
  string batch_id = 14;

}

// fifo_shadow_real_delivery_mapping table
message FifoShadowRealDeliveryMapping { 
  option (schema_type) = "datalake";
  option (cdc_source) = "crdb";

  // real_delivery_id int64
  int64 real_delivery_id = 1 [(is_key_column)=true];

  // shadow_delivery_id int64
  int64 shadow_delivery_id = 2 [(is_key_column)=true];

  // created_at google.protobuf.Timestamp
  google.protobuf.Timestamp created_at = 3;

  // updated_at google.protobuf.Timestamp
  google.protobuf.Timestamp updated_at = 4;

  // real_delivery_batch_id int64
  int64 real_delivery_batch_id = 5;

  // shadow_delivery_batch_id int64
  int64 shadow_delivery_batch_id = 6;

  // is_real_confirmed bool
  bool is_real_confirmed = 7;

}

// hub_fifo_assigner_config table
message HubFifoAssignerConfig { 
  option (schema_type) = "datalake";
  option (cdc_source) = "crdb";

  // hub_id string
  string hub_id = 1 [(is_key_column)=true];

  // created_at google.protobuf.Timestamp
  google.protobuf.Timestamp created_at = 2;

  // updated_at google.protobuf.Timestamp
  google.protobuf.Timestamp updated_at = 3;

  // shadow_store_id int64
  int64 shadow_store_id = 4;

  // base_shadow_delivery_id int64
  int64 base_shadow_delivery_id = 5;

  // market_id int64
  int64 market_id = 6;

  // is_active bool
  bool is_active = 7;

  // auto_check_in_on_store_arrival bool
  bool auto_check_in_on_store_arrival = 8;

  // auto_ready_at_estimated_pickup_time bool
  bool auto_ready_at_estimated_pickup_time = 9;

  // aor_store_ids string
  string aor_store_ids = 10;

  // max_batch_size int64
  int64 max_batch_size = 11;

  // dasher_pay_threshold_1_confirmation_delay int64
  int64 dasher_pay_threshold_1_confirmation_delay = 12;

  // dasher_pay_threshold_1_boost_amount int64
  int64 dasher_pay_threshold_1_boost_amount = 13;

  // dasher_pay_threshold_2_confirmation_delay int64
  int64 dasher_pay_threshold_2_confirmation_delay = 14;

  // dasher_pay_threshold_2_boost_amount int64
  int64 dasher_pay_threshold_2_boost_amount = 15;

  // dasher_pay_threshold_3_confirmation_delay int64
  int64 dasher_pay_threshold_3_confirmation_delay = 16;

  // dasher_pay_threshold_3_boost_amount int64
  int64 dasher_pay_threshold_3_boost_amount = 17;

  // dasher_pay_boost_amount int64
  int64 dasher_pay_boost_amount = 18;

  // dasher_pay_batched_boost_amount int64
  int64 dasher_pay_batched_boost_amount = 19;

  // fifo_assigner_type string
  string fifo_assigner_type = 20;

  // batch_bearing_constraints string
  string batch_bearing_constraints = 21;

  // wait_for_batch_time_by_store string
  string wait_for_batch_time_by_store = 22;

  // batch_ready_time_difference_by_store string
  string batch_ready_time_difference_by_store = 23;

  // kick_unassigned_after_estimated_pickup_seconds int64
  int64 kick_unassigned_after_estimated_pickup_seconds = 24;

  // orphaned_dasher_cancellation_fee int64
  int64 orphaned_dasher_cancellation_fee = 25;

  // pay_per_active_hour int64
  int64 pay_per_active_hour = 26;

  // point_of_interest_id string
  string point_of_interest_id = 27;

}

// fifo_delivery_stats table
message FifoDeliveryStats { 
  option (schema_type) = "datalake";
  option (cdc_source) = "crdb";

  // hub_id string
  string hub_id = 1 [(is_key_column)=true];

  // shadow_delivery_id int64
  int64 shadow_delivery_id = 2 [(is_key_column)=true];

  // created_at google.protobuf.Timestamp
  google.protobuf.Timestamp created_at = 3;

  // updated_at google.protobuf.Timestamp
  google.protobuf.Timestamp updated_at = 4;

  // real_delivery_id int64
  int64 real_delivery_id = 5 [(is_key_column)=true];

  // real_delivery_assigned_at google.protobuf.Timestamp
  google.protobuf.Timestamp real_delivery_assigned_at = 6;

  // real_delivery_confirmed_at google.protobuf.Timestamp
  google.protobuf.Timestamp real_delivery_confirmed_at = 7;

  // real_delivery_first_assigned_at google.protobuf.Timestamp
  google.protobuf.Timestamp real_delivery_first_assigned_at = 8;

}

// delivery_hub_route table
message DeliveryHubRoute { 
  option (schema_type) = "datalake";
  option (cdc_source) = "crdb";

  // delivery_id int64
  int64 delivery_id = 1 [(is_key_column)=true];

  // created_at google.protobuf.Timestamp
  google.protobuf.Timestamp created_at = 2;

  // updated_at google.protobuf.Timestamp
  google.protobuf.Timestamp updated_at = 3;

  // concluded_at google.protobuf.Timestamp
  google.protobuf.Timestamp concluded_at = 4;

  // ordered_hub_ids string
  string ordered_hub_ids = 5;

  // is_candidate bool
  bool is_candidate = 6;

}

// fifo_task_delivery_stats table
message FifoTaskDeliveryStats { 
  option (schema_type) = "datalake";
  option (cdc_source) = "crdb";

  // hub_id string
  string hub_id = 1 [(is_key_column)=true];

  // task_id string
  string task_id = 2 [(is_key_column)=true];

  // created_at google.protobuf.Timestamp
  google.protobuf.Timestamp created_at = 3;

  // updated_at google.protobuf.Timestamp
  google.protobuf.Timestamp updated_at = 4;

  // real_delivery_id int64
  int64 real_delivery_id = 5 [(is_key_column)=true];

  // real_delivery_assigned_at google.protobuf.Timestamp
  google.protobuf.Timestamp real_delivery_assigned_at = 6;

  // real_delivery_confirmed_at google.protobuf.Timestamp
  google.protobuf.Timestamp real_delivery_confirmed_at = 7;

  // real_delivery_first_assigned_at google.protobuf.Timestamp
  google.protobuf.Timestamp real_delivery_first_assigned_at = 8;

}

// inter_hub_agent table
message InterHubAgent { 
  option (schema_type) = "datalake";
  option (cdc_source) = "crdb";

  // created_at google.protobuf.Timestamp
  google.protobuf.Timestamp created_at = 1;

  // updated_at google.protobuf.Timestamp
  google.protobuf.Timestamp updated_at = 2;

  // id string
  string id = 3 [(is_key_column)=true];

  // name string
  string name = 4;

  // is_active bool
  bool is_active = 5;

}

// hub_serviced_area table
message HubServicedArea { 
  option (schema_type) = "datalake";
  option (cdc_source) = "crdb";

  // hub_id string
  string hub_id = 1 [(is_key_column)=true];

  // place_polygon_uuid string
  string place_polygon_uuid = 2 [(is_key_column)=true];

  // created_at google.protobuf.Timestamp
  google.protobuf.Timestamp created_at = 3;

  // updated_at google.protobuf.Timestamp
  google.protobuf.Timestamp updated_at = 4;

  // is_active bool
  bool is_active = 5;

}

// menu_item_weight table
message MenuItemWeight { 
  option (schema_type) = "datalake";
  option (cdc_source) = "crdb";

  // id string
  string id = 1 [(is_key_column)=true];
  
  // created_at google.protobuf.Timestamp
  google.protobuf.Timestamp created_at = 2;

  // updated_at google.protobuf.Timestamp
  google.protobuf.Timestamp updated_at = 3;
  
  // item_id string
  string item_id = 4;

  // weight decimal
  double weight = 5 [(is_decimal_type)="10,5"];
}

// menu_option_weight table
message MenuOptionWeight { 
  option (schema_type) = "datalake";
  option (cdc_source) = "crdb";

  // id string
  string id = 1 [(is_key_column)=true];
  
  // created_at google.protobuf.Timestamp
  google.protobuf.Timestamp created_at = 2;

  // updated_at google.protobuf.Timestamp
  google.protobuf.Timestamp updated_at = 3;
  
  // option_id string
  string option_id = 4;

  // secondary_option_id string
  string secondary_option_id = 5;

  // weight decimal
  double weight = 6 [(is_decimal_type)="10,5"];

  // correlation_id string
  string correlation_id = 7;

  // secondary_correlation_id string
  string secondary_correlation_id = 8;
}

// recorded_order_weight table
message RecordedOrderWeight { 
  option (schema_type) = "datalake";
  option (cdc_source) = "crdb";

  // id string
  string id = 1 [(is_key_column)=true];
  
  // created_at google.protobuf.Timestamp
  google.protobuf.Timestamp created_at = 2;

  // updated_at google.protobuf.Timestamp
  google.protobuf.Timestamp updated_at = 3;

  // delivery_id int
  int64 delivery_id = 4;
  
  // business_id int
  int64 business_id = 5;
  
  // store_id int
  int64 store_id = 6;
  
  // order_hash string
  string order_hash = 7;
  
  // order_hash_no_options string
  string order_hash_no_options = 8;
  
  // measured_weight_grams string
  string measured_weight_grams = 9;
  
  // used_prediction_id string
  string used_prediction_id = 10;
  
  // prediction string
  string prediction = 11;
  
  // software_version string
  string software_version = 12;
  
  // firmware_version string
  string firmware_version = 13;
  
  // is_invalid bool
  bool is_invalid = 14;
}

// weight_prediction table
message WeightPrediction { 
  option (schema_type) = "datalake";
  option (cdc_source) = "crdb";

  // id string
  string id = 1 [(is_key_column)=true];
  
  // created_at google.protobuf.Timestamp
  google.protobuf.Timestamp created_at = 2;

  // updated_at google.protobuf.Timestamp
  google.protobuf.Timestamp updated_at = 3;

  // delivery_id int
  int64 delivery_id = 4;
  
  // expected_weight_grams double
  double expected_weight_grams = 5;
  
  // acceptable_weight_difference_grams double
  double acceptable_weight_difference_grams = 6;
  
  // prediction_methodology string
  string prediction_methodology = 7;
  
  // prediction_algorithm_version string
  string prediction_algorithm_version = 8;
}

// smart_scale_delivery table
message SmartScaleDelivery {
  option (schema_type) = "datalake";
  option (cdc_source) = "crdb";

  // delivery_id int
  int64 delivery_id = 1 [(is_key_column)=true];

  // created_at
  google.protobuf.Timestamp created_at = 2;

  // updated_at
  google.protobuf.Timestamp updated_at = 3;

  // store_id int
  int64 store_id = 4;

  // delivery_uuid string
  string delivery_uuid = 5;

  // delivery state in string
  string delivery_state = 6;

  // if the order is canceled
  bool is_canceled = 7;

  // ready_for_pickup_time
  google.protobuf.Timestamp ready_for_pickup_time = 8;

  // Object detail of the order
  string order_object_detail = 9;

  // Object counts of the order
  int64 order_object_counts = 10;
}

// merchant_product_weight table
message MerchantProductWeight {
  option (schema_type) = "datalake";
  option (cdc_source) = "crdb";

  // product merchant_supplied_id
  string merchant_supplied_id = 1 [(is_key_column)=true];

  // business_id or store_id
  int64 entity_id = 2 [(is_key_column)=true];

  // BUSINESS type or STORE type
  string entity_type = 3 [(is_key_column)=true];

  // array of weights
  string weights = 4;

  // created_at
  google.protobuf.Timestamp created_at = 5;

  // updated_at
  google.protobuf.Timestamp updated_at = 6;

  // the user id who updates it
  int64 updated_by = 7;
}

// merchant_item_weight table
message MerchantItemWeight {
  option (schema_type) = "datalake";
  option (cdc_source) = "crdb";

  // item_id string
  string item_id = 1 [(is_key_column)=true];

  // business_id or store_id
  int64 entity_id = 2 [(is_key_column)=true];

  // BUSINESS type or STORE type
  string entity_type = 3 [(is_key_column)=true];

  // array of weights
  string weights = 4;

  // created_at
  google.protobuf.Timestamp created_at = 5;

  // updated_at
  google.protobuf.Timestamp updated_at = 6;

  // the user id who updates it
  int64 updated_by = 7;
}

// merchant_option_weight table
message MerchantOptionWeight {
  option (schema_type) = "datalake";
  option (cdc_source) = "crdb";

  // option_id string
  string option_id = 1 [(is_key_column)=true];

  // business_id or store_id
  int64 entity_id = 2 [(is_key_column)=true];

  // BUSINESS type or STORE type
  string entity_type = 3 [(is_key_column)=true];

  // array of weights
  string weights = 4;

  // created_at
  google.protobuf.Timestamp created_at = 5;

  // updated_at
  google.protobuf.Timestamp updated_at = 6;

  // the user id who updates it
  int64 updated_by = 7;
}

// merchant_contextual_weight table
message MerchantContextualWeight {
  option (schema_type) = "datalake";
  option (cdc_source) = "crdb";

  // primary_id string
  string primary_id = 1 [(is_key_column)=true];

  // primary id type
  string primary_id_type = 2 [(is_key_column)=true];

  // secondary_id string
  string secondary_id = 3 [(is_key_column)=true];

  // secondary_id type
  string secondary_id_type = 4 [(is_key_column)=true];

  // business_id or store_id
  int64 entity_id = 5 [(is_key_column)=true];

  // BUSINESS type or STORE type
  string entity_type = 6 [(is_key_column)=true];

  // array of weights
  string weights = 7;

  // distance between primary id and secondary id
  int64 distance = 8;

  // created_at
  google.protobuf.Timestamp created_at = 9;

  // updated_at
  google.protobuf.Timestamp updated_at = 10;

  // the user id who updates it
  int64 updated_by = 11;
}

// merchant_product_tag table
message MerchantProductTag {
  option (schema_type) = "datalake";
  option (cdc_source) = "crdb";

  // business_id or store_id
  int64 entity_id = 1 [(is_key_column)=true];

  // BUSINESS type or STORE type
  string entity_type = 2 [(is_key_column)=true];

  // merchant_supplied_id type or item_option_id type
  string id_type = 3 [(is_key_column)=true];

  // product id
  string id = 4 [(is_key_column)=true];

  // Indicate if the product is object
  bool is_object = 5;

  // product's display_name
  string display_name = 6;
}

// smart_scale_settings table
message SmartScaleSettings {
  option (schema_type) = "datalake";
  option (cdc_source) = "crdb";

  // business_id or store_id
  int64 entity_id = 1 [(is_key_column)=true];

  // BUSINESS type or STORE type
  string entity_type = 2 [(is_key_column)=true];

  // setting key
  string setting_key = 3 [(is_key_column)=true];

  // setting value
  string setting_value = 4;

  // created_at
  google.protobuf.Timestamp created_at = 5;

  // updated_at
  google.protobuf.Timestamp updated_at = 6;

  // the user id who updates it
  int64 updated_by = 7;
}

// item_shape table
message ItemShape {
  option (schema_type) = "datalake";
  option (cdc_source) = "crdb";

  // item_id string
  string item_id = 1 [(is_key_column)=true];

  // created_at google.protobuf.Timestamp
  google.protobuf.Timestamp created_at = 2;

  // updated_at google.protobuf.Timestamp
  google.protobuf.Timestamp updated_at = 3;

  // wing_shape_type string
  string wing_shape_type = 4;

}

// drone_delivery_state table
message DroneDeliveryState {
  option (schema_type) = "datalake";
  option (cdc_source) = "crdb";

  // id string
  string id = 1 [(is_key_column)=true];

  // delivery_id int64
  int64 delivery_id = 2;

  // consumer_id int64
  int64 consumer_id = 3;

  // tracking_id string
  string tracking_id = 4;

  // order_name string
  string order_name = 5;

  // order_status string
  string order_status = 6;

  // dasher_id int64
  int64 dasher_id = 7;

  // created_at google.protobuf.Timestamp
  google.protobuf.Timestamp created_at = 8;

  // completed_at google.protobuf.Timestamp
  google.protobuf.Timestamp completed_at = 9;

  // package_ids string
  string package_ids = 10;

  // package_specs string
  string package_specs = 11;

}

// drone_delivery table
message DroneDelivery {
  option (schema_type) = "datalake";
  option (cdc_source) = "crdb";

  // delivery_id float
  float delivery_id = 1 [(is_key_column)=true];

  // consumer_id float
  float consumer_id = 2;

  // store_id float
  float store_id = 3;

  // assigned_dasher_id float
  float assigned_dasher_id = 4;

  // assigned_at google.protobuf.Timestamp
  google.protobuf.Timestamp assigned_at = 5;

  // created_at google.protobuf.Timestamp
  google.protobuf.Timestamp created_at = 6;

  // updated_at google.protobuf.Timestamp
  google.protobuf.Timestamp updated_at = 7;
}
