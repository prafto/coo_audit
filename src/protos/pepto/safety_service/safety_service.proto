syntax = "proto3";
package pepto.safety_service.v1;

import "google/protobuf/descriptor.proto";
import "google/protobuf/timestamp.proto";
import "pepto/options.proto";

option java_package = "com.doordash.pepto.schema.safety_service";

// dasher_safety_reports table
message DasherSafetyReports {
  option (schema_type) = "datalake";
  option (cdc_source) = "crdb";

  // dasher_id int8
  int64 dasher_id = 1 [(is_key_column) = true];

  // created_at Timestamp
  google.protobuf.Timestamp created_at = 2 [(is_key_column) = true];

  // id UUID
  string id = 3 [(is_key_column) = true];

  // delivery_uuid UUID
  string delivery_uuid = 4;

  // comments STRING NOT NULL
  string comments = 5;

  // option_id UUID NOT NULL
  string option_id = 6;

  // salesforce_ticket_id STRING NOT NULL
  string salesforce_ticket_id = 7;

  // contact_option STRING NOT NULL
  string contact_option = 8;
}

// dasher_safety_report_options table
message DasherSafetyReportOptions {
  option (schema_type) = "datalake";
  option (cdc_source) = "crdb";

  // id UUID NOT NULL
  string id = 1 [(is_key_column) = true];

  // report_option_translation_id STRING NOT NULL
  string report_option_translation_id = 2;

  // report_option_localized_name STRING NOT NULL
  string report_option_localized_name = 3;

  // requires_contact BOOL NOT NULL
  bool requires_contact = 4;

  // response_time_sla_minutes INT4 NOT NULL
  int32 response_time_sla_minutes = 5;

  // unassign_eligible BOOL NOT NULL,
  bool unassign_eligible = 6;
}

// safechat_moderation_records
message SafechatModerationRecords {
  option (schema_type) = "datalake";
  option (cdc_source) = "crdb";

  //  id UUID NOT NULL,
  string id = 1;
  //  moderation_api_result_id UUID,
  string moderation_api_result_id = 2;
  //  chat_completion_api_result_ids UUID[],
  string chat_completion_api_result_ids = 3 [(is_array_type) = true];
  //  chat_completion_api_result_id  UUID,
  string chat_completion_api_result_id = 4;
  //  delivery_uuid UUID NOT NULL,
  string delivery_uuid = 5 [(is_key_column) = true];
  //  sender_role TEXT NOT NULL,
  string sender_role = 6 [(is_key_column) = true];
  //  sender_id BIGINT NOT NULL,
  int64 sender_id = 7 [(is_key_column) = true];
  //  message_text TEXT,
  string message_text = 8;
  // message_id TEXT NOT NULL,
  string message_id = 9 [(is_key_column) = true];
  //  message_sent_at timestamp,
  google.protobuf.Timestamp message_sent_at = 10;
  // moderation status, text
  string moderation_status = 11;
}

// safechat_open_ai_moderation_api_results
message SafechatOpenAiModerationApiResults {
  option (schema_type) = "datalake";
  option (cdc_source) = "crdb";

  // id UUID NOT NULL,
  string id = 1 [(is_key_column) = true];
  // model TEXT,
  string model = 2;
  // raw_response JSONB,
  string raw_response = 3;
  // hate FLOAT,
  double hate = 4;
  // hate_threatening FLOAT,
  double hate_threatening = 5;
  // self_harm FLOAT,
  double self_harm = 6;
  // sexual FLOAT,
  double sexual = 7;
  // sexual_minors FLOAT,
  double sexual_minors = 8;
  // violence FLOAT,
  double violence = 9;
  // violence_graphic FLOAT,
  double violence_graphic = 10;
  // harassment FLOAT,
  double harassment = 11;
  // harassment_threatening FLOAT,
  double harassment_threatening = 12;
  // self_harm_intent FLOAT,
  double self_harm_intent = 13;
  // self_harm_instruction  FLOAT,
  double self_harm_instruction = 14;
}

// safechat_open_ai_chat_completion_api_results
message SafechatOpenAiChatCompletionApiResults {
  option (schema_type) = "datalake";
  option (cdc_source) = "crdb";

  // id UUID NOT NULL,
  string id = 1 [(is_key_column) = true];
  // prompt_id UUID NOT NULL,
  string prompt_id = 2;
  // model TEXT,
  string model = 3;
  // raw_response TEXT,
  string raw_response = 4;
  // threatening INT,
  int32 threatening = 5;
  // sexual INT,
  int32 sexual = 6;
  // profanity INT,
  int32 profanity = 7;
}

// safechat_open_ai_chat_completion_prompts
message SafechatOpenAiChatCompletionPrompts {
  option (schema_type) = "datalake";
  option (cdc_source) = "crdb";

  // id UUID NOT NULL,
  string id = 1 [(is_key_column) = true];
  // prompt JSONB,
  string prompt = 2;
}

// trusted_contact_location_sharing
message TrustedContactLocationSharing {
  option (schema_type) = "datalake";
  option (cdc_source) = "crdb";

  // dasher_id BIGINT NOT NULL
  int64 dasher_id = 1 [(is_key_column) = true];
  // contact_id  TEXT NOT NULL
  string contact_id = 2 [(is_key_column) = true];
  // phone_number  TEXT NOT NULL
  string phone_number = 3;
  // created_at timestamp
  google.protobuf.Timestamp created_at = 4;
  // updated_at timestamp
  google.protobuf.Timestamp updated_at = 5;
  // location_sharing_setting jsonb
  string location_sharing_setting = 6;
  // first_name  TEXT
  string first_name = 7;
  // last_name  TEXT
  string last_name = 8;
  // country_code INT
  int32 country_code = 9;
}

// location_sharing_dx_contact_expiry
message LocationSharingDxContactExpiry {
  option (schema_type) = "datalake";
  option (cdc_source) = "crdb";

  // sharing_id TEXT NOT NULL
  string sharing_id = 1 [(is_key_column) = true];
  // dasher_id  INT NOT NULL
  int32 dasher_id = 2;
  // updated_at timestamp
  google.protobuf.Timestamp updated_at = 3;
  // expired_at timestamp
  google.protobuf.Timestamp expired_at = 4;
  // contact_id TEXT
  string contact_id = 5;
  // sharing_type TEXT
  string sharing_type = 6;
  // metadata TEXT
  string metadata = 7;
}

// adt_incident_request_events
message AdtIncidentRequestEvents {
  option (schema_type) = "datalake";
  option (cdc_source) = "crdb";

  // id UUID NOT NULL
  string id = 1 [(is_key_column) = true];
  // dasher_id INT8 NOT NULL
  int64 dasher_id = 2;
  // event_type STRING NOT NULL
  string event_type = 3;
  // observed_at TIMESTAMPTZ NOT NULL
  google.protobuf.Timestamp observed_at = 4;
}

// adt_incident_details
message AdtIncidentDetails {
  option (schema_type) = "datalake";
  option (cdc_source) = "crdb";

  // notification_id UUID NOT NULL
  string notification_id = 1 [(is_key_column) = true];
  // incident_id UUID NOT NULL
  string incident_id = 2;
  // assigned_at TIMESTAMPTZ NOT NULL
  google.protobuf.Timestamp assigned_at = 3;
  // escalation_type STRING NULL
  string escalation_type = 4;
  // incident_type STRING NULL
  string incident_type = 5;
  // note STRING NULL
  string note = 6;
  // occurred_at TIMESTAMPTZ NOT NULL
  google.protobuf.Timestamp occurred_at = 7;
  // resolution_code STRING NULL
  string resolution_code = 8;
  // resolution_subcode STRING NULL
  string resolution_subcode = 9;
  // resolution_tags STRING NULL
  string resolution_tags = 10;
  // resolved_at TIMESTAMPTZ NOT NULL DEFAULT
  google.protobuf.Timestamp resolved_at = 11;
  // raw_message JSONB NULL
  string raw_message = 12;
  // is_sfdc_ticket_created BOOL NULL
  bool is_sfdc_ticket_created = 13;
}

// adt_incident_update_events
message AdtIncidentUpdateEvents {
  option (schema_type) = "datalake";
  option (cdc_source) = "crdb";

  // notification_id UUID NOT NULL
  string notification_id = 1 [(is_key_column) = true];
  // event_id UUID NOT NULL
  string event_id = 2;
  // incident_id UUID NOT NULL
  string incident_id = 3;
  // update_type STRING NOT NULL
  string update_type = 4;
  // created_at TIMESTAMPTZ NOT NULL
  google.protobuf.Timestamp created_at = 5;
  // raw_message JSONB NOT NULL
  string raw_message = 6;
  // call_disposition_type STRING NULL
  string call_disposition_type = 7;
  // call_contact_type STRING NULL
  string call_contact_type = 8;
  // chat_disposition_type STRING NULL
  string chat_disposition_type = 9;
  // resolution_code STRING NULL
  string resolution_code = 10;
  // escalation_type STRING NULL
  string escalation_type = 11;
}

// crisis_alert
message CrisisAlert {
  option (schema_type) = "datalake";
  option (cdc_source) = "crdb";

  // id UUID NOT NULL
  string id = 1 [(is_key_column) = true];
  // event_id STRING NOT NULL
  string event_id = 2;
  // headline STRING NOT NULL
  string headline = 3;
  // created_at TIMESTAMPTZ NOT NULL
  google.protobuf.Timestamp created_at = 4;
  // updated_at TIMESTAMPTZ NOT NULL
  google.protobuf.Timestamp updated_at = 5;
  // metadata JSONB NULL
  string metadata = 6;
  // stream_name STRING NULL
  string stream_name = 7;
}

// safety_incident_response
message SafetyIncidentResponse {
  option (schema_type) = "datalake";
  option (cdc_source) = "crdb";

  // response_id UUID NOT NULL
  string response_id = 1 [(is_key_column) = true];
  // event_id STRING NOT NULL
  string event_id = 2;
  // closed_store_id INT8 NOT NULL
  int64 closed_store_id = 3;
  // cancelled_delivery_ids UUID[] NULL
  string cancelled_delivery_ids = 4 [(is_array_type) = true];
  // radius INT8 NOT NULL
  int64 radius = 5;
  // alert_id STRING NOT NULL
  string alert_id = 6;
  // reverted BOOL NULL
  bool reverted = 7;
  // stream_name STRING NULL
  string stream_name = 8;
  // response_type STRING NULL
  string response_type = 9;
}

// dasher_sentiment_rating_category
message DasherSentimentRatingCategory {
  option (schema_type) = "datalake";
  option (cdc_source) = "crdb";

  // id INT8 NOT NULL
  int64 id = 1 [(is_key_column) = true];
  // rating_id INT8 NOT NULL
  int64 rating_id = 2;
  // category_translation_id STRING NULL
  string category_translation_id = 3;
  // category_friendly_name STRING NULL
  string category_friendly_name = 4;
  // is_active BOOL NULL
  bool is_active = 5;
}

// dasher_sentiment_rating_meta
message DasherSentimentRatingMeta {
  option (schema_type) = "datalake";
  option (cdc_source) = "crdb";

  // id INT8 NOT NULL
  int64 id = 1 [(is_key_column) = true];
  // rating_val INT8 NOT NULL
  int64 rating_val = 2;
  // rating_translation_id STRING NULL
  string rating_translation_id = 3;
  // rating_friendly_name STRING NULL
  string rating_friendly_name = 4;
  // version INT8 NULL
  int64 version = 5;
}

// dasher_sentiment_ratings
message DasherSentimentRatings {
  option (schema_type) = "datalake";
  option (cdc_source) = "crdb";

  // id INT8 NOT NULL
  int64 id = 1 [(is_key_column) = true];
  // delivery_uuid STRING NULL
  string delivery_uuid = 2;
  // rating_id INT8 NOT NULL
  int64 rating_id = 3;
  // comments STRING NULL
  string comments = 4;
  // created_at TIMESTAMPTZ NOT NULL
  google.protobuf.Timestamp created_at = 5;
  // dasher_id INT8 NULL
  int64 dasher_id = 6;
}

// dasher_sentiment_rating_category_link
message DasherSentimentRatingCategoryLink {
  option (schema_type) = "datalake";
  option (cdc_source) = "crdb";

  // id INT8 NOT NULL
  int64 id = 1 [(is_key_column) = true];
  // sentiment_id INT8 NOT NULL
  int64 sentiment_id = 2;
  // category_id INT8 NOT NULL
  int64 category_id = 3;
}

// inapp_chat_reports
message InappChatReports {
  option (schema_type) = "datalake";
  option (cdc_source) = "crdb";

  // report_id UUID NOT NULL
  string report_id = 1 [(is_key_column) = true];
  // reporter_type STRING NULL
  string reporter_type = 2;
  // consumer_id STRING NULL
  string consumer_id = 3;
  // dasher_id STRING NULL
  string dasher_id = 4;
  // delivery_id STRING NULL
  string delivery_id = 5;
  // order_id STRING NULL
  string order_id = 6;
  // message_id STRING NULL
  string message_id = 7;
  // channel_url STRING NULL
  string channel_url = 8;
  // report_reason STRING NULL
  string report_reason = 9;
  // salesforce_ticket_id STRING NULL
  string salesforce_ticket_id = 10;
  // reported_at TIMESTAMP
  google.protobuf.Timestamp reported_at = 11;
  // comments STRING NULL
  string comments = 12;
}
