syntax = "proto3";
package pepto.task_service_prod.v1;
option java_package = "com.doordash.pepto.schema.task_service_prod";

import "google/protobuf/descriptor.proto";
import "google/protobuf/timestamp.proto";
import "pepto/options.proto";

// WorkflowV2 table
message WorkflowV2 { 
  option (schema_type) = "datalake";
  option (cdc_source) = "crdb";

  // workflow_id string
  string workflow_id = 1 [(is_key_column)=true, (is_uuid_type)=true];

  // workflow_template_name string
  string workflow_template_name = 2;

  // idempotency_key string
  string idempotency_key = 3;

  // client_name string
  string client_name = 4;

  // starting_point_id int64
  int64 starting_point_id = 5;

  // submarket_id int64
  int64 submarket_id = 6;

  // market_id int64
  int64 market_id = 7;

  // workflow_data string
  string workflow_data = 8;

  // cancelled_at google.protobuf.Timestamp
  google.protobuf.Timestamp cancelled_at = 9;

  // is_test bool
  bool is_test = 10;

  // created_at google.protobuf.Timestamp
  google.protobuf.Timestamp created_at = 11;

  // updated_at google.protobuf.Timestamp
  google.protobuf.Timestamp updated_at = 12 [(is_key_column)=true];

  // context string
  string context = 13;

  // creator string
  string creator = 14;
}

// TaskGroupV2 table
message TaskGroupV2 { 
  option (schema_type) = "datalake";
  option (cdc_source) = "crdb";

  // task_group_id string
  string task_group_id = 1 [(is_key_column)=true, (is_uuid_type)=true];

  // task_group_name string
  string task_group_name = 2;

  // workflow_id string
  string workflow_id = 3 [(is_uuid_type)=true];

    // workflow_template_name string
  string workflow_template_name = 4;

  // starting_point_id int64
  int64 starting_point_id = 5;

  // submarket_id int64
  int64 submarket_id = 6;

  // market_id int64
  int64 market_id = 7;

  // task_group_data string
  string task_group_data = 8 [(udf)="deserialize_task_group_data(task_group_data)",(final_data_type)="string",(is_snowflake_variant_type)=true];

  // cancelled_at google.protobuf.Timestamp
  google.protobuf.Timestamp cancelled_at = 9;

  // is_test bool
  bool is_test = 10;

  // created_at google.protobuf.Timestamp
  google.protobuf.Timestamp created_at = 11;

  // updated_at google.protobuf.Timestamp
  google.protobuf.Timestamp updated_at = 12 [(is_key_column)=true];

  // context string
  string context = 13;

  // creator string
  string creator = 14;
}

// TaskV2 table
message TaskV2 { 
  option (schema_type) = "datalake";
  option (cdc_source) = "crdb";

  // task_id string
  string task_id = 1 [(is_key_column)=true, (is_uuid_type)=true];

  // task_name string
  string task_name = 2;

  // task_group_id string
  string task_group_id = 3 [(is_uuid_type)=true];

  // completed_at google.protobuf.Timestamp
  google.protobuf.Timestamp completed_at = 4;

  // task_data string
  string task_data = 5;

  // is_test bool
  bool is_test = 6;

  // created_at google.protobuf.Timestamp
  google.protobuf.Timestamp created_at = 7;

  // updated_at google.protobuf.Timestamp
  google.protobuf.Timestamp updated_at = 8 [(is_key_column)=true];

  // context string
  string context = 9;

  // creator string
  string creator = 10;
}
