syntax = "proto3";

package cloud_console.api.v1;

import "cloud_console/common.proto";
import "google/protobuf/wrappers.proto";

option go_package = "github.com/doordash/services-protobuf/generated/cloud_console";
option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.cloud_console.rpc.api";

// Rotuer protocol type
enum RouterProtocol {
  // Unspecified protocol
  ROUTER_PROTOCOL_UNSPECIFIED = 0;

  // Protocol HTTP
  ROUTER_PROTOCOL_HTTP = 1;

  // Protocol gRPC
  ROUTER_PROTOCOL_GRPC = 2;
}

// Configuration for what type of router the service will be configured for
message RouterDeploymentConfig {
  // Region of router where service will be configured
  google.protobuf.StringValue region = 1;
  // Router verticals service will be configured for
  repeated google.protobuf.StringValue verticals = 2;
}

// Router protocol config
message RouterProtocolConfig {
  // Protocol
  RouterProtocol protocol = 1;

  // Port where service is listening for given protocol
  int32 port = 2;
}

// Configuration for a single external domain
message ExternalDomainConfig {
  // External domain name
  google.protobuf.StringValue domain = 1;

  // Protocols listened to for given domain name
  repeated RouterProtocol protocols = 2;
}

// Configuration for external domains
message ExternalDomainConfigs {
  // Whether to set up external domains
  bool requested = 1;

  // Configuration for external domains
  repeated ExternalDomainConfig external_domain_configs = 3;
}

// Mesh ingress protocol types
enum MeshIngressProtocol {
  // Unspecified protocol
  MESH_INGRESS_PROTOCOL_UNSPECIFIED = 0;

  // Protocol HTTP1
  MESH_INGRESS_PROTOCOL_HTTP1 = 1;

  // Protocol gRPC
  MESH_INGRESS_PROTOCOL_GRPC = 2;
}

// Describes a metric endpoint on a service
message MeshIngressMetric {
  // Name of endpoint
  string name = 1;

  // Path to query for metric
  string path = 2;

  // Port where service exposes the metric
  int32 port = 3;
}

// Describes a probe endpoint on a service
message MeshIngressProbe {
  // Name of the probe
  string name = 1;

  // Path to query the probe
  string path = 2;

  // Port where service serves the request
  int32 port = 3;
}

// Describes what protocols a service is exposing
message MeshIngressService {
  // the name the service
  string name = 1;

  // Port where the service serves the request
  int32 port = 2;

  // Protocol of the service listening to the specified port
  MeshIngressProtocol protocol = 3;
}

// Describes the service mesh config for the ingress of a service
message MeshIngressConfig {
  // Ingress metric endpoints
  repeated MeshIngressMetric metrics = 1;

  // Ingress probe endpoints
  repeated MeshIngressProbe probes = 2;

  // Ingress service endpoints
  repeated MeshIngressService services = 3;
}

// Request for onboarding a new service to traffic-routers
message CreateTrafficRouterConfigsRequest {
  // Environment to create the configs for
  Environment environment = 1;

  // Kubernetes namespace where the service will be deloyed
  google.protobuf.StringValue namespace = 2;

  // Name of the service
  google.protobuf.StringValue service_name = 3;

  // Name of the app
  google.protobuf.StringValue app_name = 4;

  // Router protocol configurations
  repeated RouterProtocolConfig router_protocol_configs = 5;

  // Router deployment configurations
  RouterDeploymentConfig router_deployment_config = 6;

  // Optional external domain configurations
  ExternalDomainConfigs external_domain_configs = 7;

  // Requester details
  Requester requester = 8;

  // Workflow context details when executed as part of service creation
  WorkflowFields workflow_fields = 9;
}

// Response for onboarding a new service to traffic-routers
message CreateTrafficRouterConfigsResponse {
  // List of errors returned after processing the request
  repeated Error errors = 1;

  // Workflow context details when executed as part of service creation
  WorkflowFields workflow_fields = 2;
}

// Request for creating an external domain for a new service
message SetupExternalDomainRequest {
  // Environment to create the configs for
  Environment environment = 1;

  // Kubernetes namespace where the service will be deloyed
  google.protobuf.StringValue namespace = 2;

  // Name of the service
  google.protobuf.StringValue service_name = 3;

  // Name of the app
  google.protobuf.StringValue app_name = 4;

  // External domain configurations
  repeated ExternalDomainConfig external_domain_configs = 5;

  // Requester details
  Requester requester = 6;

  // Workflow context details when executed as part of service creation
  WorkflowFields workflow_fields = 7;
}

// Response for creating an external domain for a new service
message SetupExternalDomainResponse {
  // List of errors returned after processing the request
  repeated Error errors = 1;

  // Workflow context details when executed as part of service creation
  WorkflowFields workflow_fields = 2;
}

// Request for creating service mesh configs for a service
message CreateServiceMeshConfigsRequest {
  // Environment to create the configs for
  Environment environment = 1;

  // Kubernetes namespace where the service will be deloyed
  google.protobuf.StringValue namespace = 2;

  // Name of the service
  google.protobuf.StringValue service_name = 3;

  // Name of the app
  google.protobuf.StringValue app_name = 4;

  // Mesh Ingress Configs
  MeshIngressConfig mesh_ingress_config = 5;

  // Requester details
  Requester requester = 6;

  // Workflow context details when executed as part of service creation
  WorkflowFields workflow_fields = 7;
}

// Response for creating service mesh configs for a service
message CreateServiceMeshConfigsResponse {
  // List of errors returned after processing the request
  repeated Error errors = 1;

  // Workflow context details when executed as part of service creation
  WorkflowFields workflow_fields = 2;
}

// Request for enabling intercell traffic for a service
message EnableInterCellTrafficRequest {
  // Environment to create the configs for
  Environment environment = 1;

  // Kubernetes namespace where the service will be deloyed
  google.protobuf.StringValue namespace = 2;

  // Name of the service
  google.protobuf.StringValue service_name = 3;

  // Name of the app
  google.protobuf.StringValue app_name = 4;
}

// Intercell change request
message IntercellChangeRequest {
  // Cell of Intercell Change Request
  google.protobuf.StringValue cell = 1;

  // Change Request ID associated
  google.protobuf.StringValue request_id = 2;
}

// Response for enabling intercell traffic for a service
message EnableInterCellTrafficResponse {
  // Whether the operation succeeded or failed.
  bool succeeded = 1;

  // Error of the operation if any
  google.protobuf.StringValue error_message = 2;

  // Intercell change requests
  repeated IntercellChangeRequest change_requests = 3;
}
