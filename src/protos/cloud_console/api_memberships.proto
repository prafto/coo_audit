syntax = "proto3";

package cloud_console.api.v1;

import "cloud_console/common.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option go_package = "github.com/doordash/services-protobuf/generated/cloud_console";
option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.cloud_console.rpc.api";

// Supported group membership types
enum MembershipProvider {
  // Default membership type
  MEMBERSHIP_PROVIDER_UNSPECIFIED = 0;

  // OKTA
  MEMBERSHIP_PROVIDER_OKTA = 1;

  //Github teams
  MEMBERSHIP_PROVIDER_GITHUB = 2;
}

// Group represents a single groups for a given membership provider.
message Group {
  // Unique identifier of the group with-in the provider
  string name = 1;
  // Description of the group
  string description = 2;
}

// Membership represents list of groups for a given membership provider.
message Membership {
  // Unique identifier of the group with-in the provider
  repeated string group_name = 1;
  // List of groups for this membership provider
  repeated Group groups = 2;
}

// Request for querying group membership
message GetMembershipsRequest {
  // Email address of the user
  google.protobuf.StringValue member_email = 1;

  // Membership providers to reverse lookup
  repeated MembershipProvider providers = 2;
}

// GetMembershipsResponse captures a list of group memberships
message GetMembershipsResponse {
  // List of memberships by provider
  map<string, Membership> memberships = 1;
}

// Request for checking if an Okta group exists
message IsValidOktaGroupRequest {
  // Okta group name
  google.protobuf.StringValue group_name = 1;
}

// Response for checking if an Okta group exists
message IsValidOktaGroupResponse {
  // Whether the Okta group exists
  google.protobuf.BoolValue is_valid = 1;
}
