syntax = "proto3";

package cloud_console.api.v1;

import "cloud_console/common.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option go_package = "github.com/doordash/services-protobuf/generated/cloud_console";
option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.cloud_console.rpc.api";

// Supported service states
enum FeedbackSource {
  // Unspecified feedback source
  FEEDBACK_SOURCE_UNSPECIFIED = 0;
  // Service lifecycle
  FEEDBACK_SOURCE_SERVICE_LIFECYCLE = 1;
  // Traffic self serve experiences
  FEEDBACK_SOURCE_TRAFFIC = 22;
  // Compute self serve experiences
  FEEDBACK_SOURCE_COMPUTE = 23;
  // Observability self serve experiences
  FEEDBACK_SOURCE_OBSERVABILITY = 24;
  // Deploy platform self serve experiences
  FEEDBACK_SOURCE_DEPLOY_PLATFORM = 25;
  // Build platform self serve experiences
  FEEDBACK_SOURCE_BUILD_PLATFORM = 26;
  // Storage infra self serve experiences
  FEEDBACK_SOURCE_STORAGE_INFRA = 27;
  // Storage access self serve experiences
  FEEDBACK_SOURCE_STORAGE_ACCESS = 28;

  reserved 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21;
  reserved "FEEDBACK_SOURCE_RESERVED_02", "FEEDBACK_SOURCE_RESERVED_03", "FEEDBACK_SOURCE_RESERVED_04", "FEEDBACK_SOURCE_RESERVED_05", "FEEDBACK_SOURCE_RESERVED_06", "FEEDBACK_SOURCE_RESERVED_07", "FEEDBACK_SOURCE_RESERVED_08", "FEEDBACK_SOURCE_RESERVED_09", "FEEDBACK_SOURCE_RESERVED_10", "FEEDBACK_SOURCE_RESERVED_11", "FEEDBACK_SOURCE_RESERVED_12", "FEEDBACK_SOURCE_RESERVED_13", "FEEDBACK_SOURCE_RESERVED_14", "FEEDBACK_SOURCE_RESERVED_15", "FEEDBACK_SOURCE_RESERVED_16", "FEEDBACK_SOURCE_RESERVED_17", "FEEDBACK_SOURCE_RESERVED_18", "FEEDBACK_SOURCE_RESERVED_19", "FEEDBACK_SOURCE_RESERVED_20", "FEEDBACK_SOURCE_RESERVED_01";
}

// Feedback type
enum FeedbackType {
  // Unspecified feedback type
  FEEDBACK_TYPE_UNSPECIFIED = 0;
  // CSAT type feedback
  FEEDBACK_TYPE_CSAT = 1;
  // Questions
  FEEDBACK_TYPE_QUESTION = 2;
  // Feature requests
  FEEDBACK_TYPE_FEATURE_REQUEST = 3;
}

// CSATScale options
enum CSATScale {
  // Unspecified feedback source
  CSAT_SCALE_UNSPECIFIED = 0;
  // Not at all satisfied
  CSAT_SCALE_NOT_SATISFIED = 1;
  // Slightly satisfied
  CSAT_SCALE_SLIGHTLY_SATISFIED = 2;
  // Neutral
  CSAT_SCALE_NEUTRAL = 3;
  // Very satisfied
  CSAT_SCALE_VERY_SATISFIED = 6;
  // Extremely satisfied
  CSAT_SCALE_EXTREMELY_SATISFIED = 7;

  reserved 4, 5;
  reserved "CSAT_SCALE_VERY_STAISFIED", "CSAT_SCALE_EXTREMMELY_SATISFIED";
}

// Supported metadata keys
enum FeedbackMetadataKey {
  // Metadata key unspecified
  FEEDBACK_METADATA_KEY_UNSPECIFIED = 0;
  // Service description
  FEEDBACK_METADATA_KEY_URL = 1;

  reserved 2, 3, 4, 5, 6, 7, 8, 9, 10, 11;
  reserved "FEEDBACK_METADATA_KEY_RESERVED_01", "FEEDBACK_METADATA_KEY_RESERVED_02", "FEEDBACK_METADATA_KEY_RESERVED_03", "FEEDBACK_METADATA_KEY_RESERVED_04", "FEEDBACK_METADATA_KEY_RESERVED_05", "FEEDBACK_METADATA_KEY_RESERVED_06", "FEEDBACK_METADATA_KEY_RESERVED_07", "FEEDBACK_METADATA_KEY_RESERVED_08", "FEEDBACK_METADATA_KEY_RESERVED_09", "FEEDBACK_METADATA_KEY_RESERVED_10";

  // URL of the slack notifications thread for the service.
  FEEDBACK_METADATA_KEY_SLACK_URL = 12;
}

// Feedback update type
enum FeedbackUpdateType {
  // Default update mode
  FEEDBACK_UPDATE_TYPE_UNSPECIFIED = 0;
  // In place update only with non-empty values
  FEEDBACK_UPDATE_TYPE_MERGE = 1;
  // Overwrites all current values
  FEEDBACK_UPDATE_TYPE_OVERWRITE = 2;
}

// Key/value pair to represent metadata
message FeedbackMetadata {
  // Metadata key
  FeedbackMetadataKey key = 1;

  // Metadata value
  google.protobuf.StringValue value = 2;
}

// Request for post feedback action
message PostFeedbackRequest {
  // Feedback source
  FeedbackSource source = 1;

  // Requester details
  Requester requester = 2;

  // CSAT scale
  CSATScale csat = 3;

  // Message text
  google.protobuf.StringValue message = 4;

  // Miscellaneous optional feedback parameters
  repeated FeedbackMetadata metadata = 5;

  // Feedback type
  FeedbackType feedback_type = 6;

  // Dry run mode
  google.protobuf.BoolValue dryrun = 7;
}

// Response for post feedback action
message PostFeedbackResponse {
  // Feedback reference
  google.protobuf.StringValue id = 1;
}

// Feedback describes a single feedback entry
message Feedback {
  // Feedback identifier
  google.protobuf.StringValue id = 1;

  // Feedback source
  FeedbackSource source = 2;

  // Requester details
  Requester requester = 3;

  // CSAT scale
  CSATScale csat = 4;

  // Message text
  google.protobuf.StringValue message = 5;

  // Miscellaneous optional feedback parameters
  repeated FeedbackMetadata metadata = 6;

  // Feedback type
  FeedbackType feedback_type = 7;

  // Status of the feedback entry
  google.protobuf.StringValue status = 8;

  // Timestamp of the feedback request
  google.protobuf.Timestamp created_at = 9;
}

// Filters allows controlling return response
message FeedbackFilter {
  // Allows filtering by a specified feedback id
  google.protobuf.StringValue id = 1;

  // Allows filtering by feedback status
  repeated google.protobuf.StringValue status = 2;
}

// Request for retrieving specified feedback entry
message GetFeedbackRequest {
  // Feedback filter
  FeedbackFilter filter = 1;
}

// Response for get feedback action
message GetFeedbackResponse {
  // A list of feedback entries
  repeated Feedback feedback = 1;
}

// Request for retrieving specified feedback entry
message DeleteFeedbackRequest {
  // Identifier of the feedback to be deleted
  google.protobuf.StringValue id = 1;
}

// Response for delete feedback action
message DeleteFeedbackResponse {}

// Request for updating a specified feedback entry
message UpdateFeedbackRequest {
  // Target feedback entry to be modified
  repeated Feedback feedback = 1;
  // Update type
  FeedbackUpdateType update_type = 2;
}

// Response for a given update feedback action
message UpdateFeedbackResponse {
  // Timestamp when the entry is last updated
  google.protobuf.Timestamp updated_at = 1;
}
