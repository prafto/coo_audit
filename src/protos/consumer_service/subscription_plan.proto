syntax = "proto3";

package doordash_consumer_service.subscription;

import "common/common.proto";
import "common/money.proto";
import "consumer_service/subscription_common.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.consumer_service.subscription";

message SubscriptionPlan {
  google.protobuf.StringValue id = 1;
  money.MonetaryFields fee = 2;
  google.protobuf.StringValue country_code = 3;
  RecurrenceIntervalType recurrence_interval_type = 4;
  google.protobuf.Int32Value recurrence_interval_units = 5;
  PlanDiscount consumer_discount = 6;
  google.protobuf.BoolValue is_partner_plan = 7;
  google.protobuf.BoolValue is_corporate_plan = 8;
  google.protobuf.BoolValue is_annual_plan = 9;
  google.protobuf.StringValue policy_text = 10; // To confirm with client, if this should go to PlanMetaData
  PlanMetaData plan_meta_data = 11;
  google.protobuf.StringValue partner_plan_benefit_membership_type = 12;
  repeated SubscriptionTrialPlan subscription_trial_plans = 13;
  google.protobuf.BoolValue allow_all_stores = 14;
  // Metadata related to the subscription that isn't shared between plans
  oneof metadata {
    // Metadata for MealPlans
    MealPlanMetadata meal_plan_metadata = 15;
  }
  google.protobuf.Timestamp start_time = 16;
  google.protobuf.Timestamp end_time = 17;
  google.protobuf.BoolValue employees_only = 18;
  google.protobuf.StringValue signup_email_campaign_id = 19;
  google.protobuf.BoolValue is_accepting_new_subscribers = 20;
  SubscriptionPlanType subscription_plan_type = 21;
  google.protobuf.Int32Value priority = 22;
  PlanIntegrationName plan_integration_name = 23;
  HouseholdSharing household_sharing = 24;
  TrialEligibility trial_eligibility = 25;

  // if upsell this plan to Cx which has exiting subscription, whether eligilbe to use new upgrade flow
  google.protobuf.BoolValue eligible_for_new_upgrade = 26;
}

enum PlanIntegrationName {
  UNKNOWN_PLAN_INTEGRATION_NAME = 0;
  DASHPASS_STANDARD_MONTHLY_PLAN = 1;
  DASHPASS_EMPLOYEE_PLAN = 2;
  DASHPASS_CORPORATE_PLAN = 3;
  DASHPASS_STANDARD_ANNUAL_PLAN = 4;
  DASHPASS_SUBSCRIBERS_ANNUAL_PLAN = 5;
  DASHPASS_STUDENT_PLAN = 6;
  DASHPASS_REDEEM_CODE_PLAN = 7;
  DASHPASS_PARTNER_MASTERCARD_PLAN = 8;
  DASHPASS_PARTNER_CHASE_RESERVE_PLAN = 9;
  DASHPASS_PARTNER_CHASE_JPM_PLAN = 10;
  DASHPASS_PARTNER_CHASE_PREFERRED_PLAN = 11;
  DASHPASS_PARTNER_CHASE_FREEDOM_PLAN = 12;
  DASHPASS_PARTNER_CHASE_SLATE_PLAN = 13;
  DASHPASS_PARTNER_CHASE_COBRAND_PLAN = 14;
  DASHPASS_PARTNER_AFTERPAY_PLAN = 15;
  DASHPASS_PARTNER_RBC_PLAN = 16;
  DASHPASS_BULK_SUBSCRIBE_FREE_PLAN = 17;
  LUNCHPASS_PLAN_INTEGRATION = 18;
  DASHPASS_PARTNER_DASHCARD_PLAN = 19;
  DASHPASS_WELCOME_BACK_DISCOUNT_PLAN = 20;
  DASHPASS_TRANSITIONABLE_PLAN = 21;
  DASHPASS_PARTNER_AMAZON_PLAN = 22;
  DASHPASS_PARTNER_DASHCARD_10K_PLAN = 23;
  DASHPASS_PARTNER_LYFT_PLAN = 24;
  DASHPASS_SNAP_MONTHLY_PLAN = 25;
  DASHPASS_DISCOUNTED_ANNUAL_PLAN = 26;
}

enum TrialEligibility {
  UNKNOWN_ELIGIBILITY = 0;
  IS_ELIGIBLE = 1;
  IS_NOT_ELIGIBLE = 2;
  IS_RESURRECT_ELIGIBLE = 3;
  IS_PARTNER_FULL_TRIAL_ELIGIBLE = 4;
}

message SubscriptionTrialPlan {
  google.protobuf.StringValue id = 1;
  RecurrenceIntervalType recurrence_interval_type = 2;
  google.protobuf.Int32Value recurrence_interval_units = 3;
  TrialPlanMetaData trial_plan_meta_data = 4;
}

message TrialPlanMetaData {
  google.protobuf.StringValue callout_text = 1;
  google.protobuf.StringValue policy_url = 2;
  repeated PromotionInfo promotion_infos = 3;
  google.protobuf.StringValue trial_consent_text = 4;
  repeated PromotionInfoType trial_condition_details_promotion_info_types = 5;
  repeated google.protobuf.StringValue trial_plan_submarket_ids = 6;
  google.protobuf.BoolValue is_active = 7;
}

message SubscriptionTrialPlanDetailsForTrialPlanCreation {
  RecurrenceInterval recurrence_interval = 1;
  repeated PromotionInfo trial_plan_promotion_infos = 2;
  repeated PromotionsFeaturedLocation trial_plan_promotions_featured_locations = 3;
  repeated google.protobuf.StringValue trial_plan_submarket_ids = 4;
}

enum RecurrenceIntervalType {
  UNKNOWN_RECURRENCE_INTERVAL_TYPE = 0;
  DAY = 1;
  WEEK = 2;
  MONTH = 3;
  YEAR = 4;
}

message PlanMetaData {
  google.protobuf.StringValue callout_text = 1;
  repeated PromotionsFeaturedLocation promotion_featured_locations = 2;
  repeated PromotionInfo promotion_infos = 3;
  google.protobuf.StringValue benefit_short_description = 4;
  google.protobuf.StringValue benefit_long_description = 5;
  TermsAndConditions terms_and_conditions = 6;
  RequestedSubMarketMeta requested_submarket_meta = 7;
  repeated PromotionInfoType billing_details_promotion_info_types = 8;
  repeated PromotionInfoType marketing_info_promotion_info_types = 9;
  google.protobuf.StringValue policy_text = 10;
  repeated PromotionInfoType condition_details_promotion_info_types = 11;
  repeated PromotionInfoType additional_features_promotion_info_types = 12;
  TileData tile_data = 13;
  google.protobuf.StringValue generic_callout_text = 14;
  google.protobuf.StringValue divider_text = 15;
  repeated PromotionInfoType generic_partner_promotion_info_types = 16;
  google.protobuf.BoolValue resuming_previously_paused_plan = 17 [deprecated = true];
  // The new upsell for dashpass trial or resuming previously paused plan
  money.UpsellDetails upsell_details = 18;
  google.protobuf.StringValue plan_benefit_delivery_fee = 19;
  repeated google.protobuf.StringValue plan_submarket_ids = 20;
  google.protobuf.StringValue plan_title = 21;
  repeated common.UIFlowScreenAction callout_actions = 22;
}

message TileData {
  google.protobuf.StringValue header = 1;
  google.protobuf.StringValue title = 2;
  google.protobuf.StringValue subtitle = 3;
  DiscountInfo discount_info = 4;
  google.protobuf.StringValue billing_period = 5;
  google.protobuf.StringValue credit_info = 6;
}

message DiscountInfo {
  google.protobuf.StringValue strikethrough_text = 1;
  google.protobuf.StringValue billing_text = 2;
}

message RequestedSubMarketMeta {
  google.protobuf.StringValue sub_market_id = 1;
  google.protobuf.Int32Value num_of_stores = 2;
}

message TermsAndConditions {
  google.protobuf.StringValue description = 1;
  repeated TermsAndConditionsSubtext subtext = 2;
}

message TermsAndConditionsSubtext {
  google.protobuf.Int32Value length = 1;
  google.protobuf.StringValue hyperlink = 2;
  google.protobuf.Int32Value start_index = 3;
}

message TermsAndConditionsV2 {
  google.protobuf.StringValue description = 1;
  repeated TermsAndConditionsSubtextV2 subtexts = 2;
}

message TermsAndConditionsSubtextV2 {
  google.protobuf.StringValue hyperlink = 1;
  google.protobuf.StringValue link_string = 2;
}

message PromotionInfo {
  google.protobuf.StringValue type = 1;
  PromotionInfoType promotion_info_type = 2;
  google.protobuf.StringValue title = 3;
  google.protobuf.StringValue subtitle = 4;
  google.protobuf.StringValue icon_image_url = 5;
  google.protobuf.StringValue id = 6;
}

message PromotionsFeaturedLocation {
  google.protobuf.StringValue title = 1;
  google.protobuf.StringValue description = 2;
  google.protobuf.StringValue location_on_app = 3;
  google.protobuf.StringValue name = 4;
  google.protobuf.StringValue feature_component = 5;
  google.protobuf.StringValue cover_image_url = 6;
  google.protobuf.BoolValue show_only_once = 7;
  google.protobuf.StringValue id = 8;
}

message PlanDiscount {
  money.MonetaryFields delivery_fee = 1;
  google.protobuf.FloatValue service_rate_percentage = 2;
  money.MonetaryFields minimum_subtotal = 3;
  money.MonetaryFields extra_sos_fee = 4;
  repeated MinimumSubtotalTierInfo minimum_subtotal_tiers = 5;
  google.protobuf.StringValue discount_type = 6;
  money.MonetaryFields minimum_subtotal_express_delivery = 7;
  google.protobuf.DoubleValue max_flf_multiplier_express_delivery = 8;
}

message MinimumSubtotalTierInfo {
  money.MonetaryFields minimum_subtotal = 1;
  MinimumSubtotalTierType tier_type = 2;
}

/*
   The BFF currently puts together the marketing info from multiple requests
   to subscription service, and we want to consolidate that logic within
   subscription service and out of the BFF. We should add more fields here as
   more logic gets extracted out of BFF.
*/
message MarketingInfo {
  google.protobuf.StringValue title = 1;
  google.protobuf.StringValue subtitle = 2;
}

message RecurrenceInterval {
  google.protobuf.Int32Value recurrence_interval_units = 1;
  RecurrenceIntervalType recurrence_interval_type = 2;
}

message MealPlanMetadata {
  google.protobuf.Int32Value num_meals = 1;
  google.protobuf.Timestamp start_time = 2;
  google.protobuf.Timestamp end_time = 3;
  money.MonetaryFields unit_price_per_meal = 4;
}

enum MinimumSubtotalTierType {
  BASE_TIER = 0;
  SECOND_TIER = 1;
}

enum PromotionInfoType {
  UNKNOWN_PROMOTION_INFO_TYPE = 0;
  STORE_CONDITION = 1;
  MINIMUM_SUBTOTAL_CONDITION = 2;
  VALIDITY_CONDITION = 3;
  ADDITIONAL_FEATURE_PREFIX = 4;
  BILLING_PLAN_DETAILS = 5;
  HEADER = 6;
  TRIAL_BILLING_PLAN_DETAILS = 7;
  EXPERIMENT_CONDITIONS = 8;
  CHASE_NEW_USER_CREDIT_PROMO = 9;
  GENERIC_PARTNER_PLAN_DETAILS = 10;
}

message HouseholdSharing {
  HouseholdSharingState state = 1;
  google.protobuf.StringValue link = 2;
  HouseholdSharingMetadata metadata = 3;
}

message HouseholdSharingMetadata {
  google.protobuf.StringValue title = 1;
  google.protobuf.StringValue message = 2;
}

enum HouseholdSharingState {
  UNKNOWN_HOUSEHOLD_SHARING_STATE = 0;
  SHARED = 1;
  INVITE = 2;
}
