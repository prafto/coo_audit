syntax = "proto3";

package doordash_consumer_service;

import "common/common.proto";
import "common/service_client_config.proto";
import "consumer_service/common.proto";
import "consumer_service/consumer.proto";
import "consumer_service/consumer_address_link.proto";
import "consumer_service/consumer_metadata.proto";
import "consumer_service/consumer_plan.proto";
import "consumer_service/consumer_tos_link.proto";
import "consumer_service/subscription_common.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option go_package = "consumer_service";
option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.consumer_service";

service ConsumerService {
  option (service_client.client_config).service_name = "consumer-service";
  option (service_client.client_config).retry_config.max_attempts = 3;
  option (service_client.client_config).retry_config.initial_wait_millis = 10;
  option (service_client.client_config).retry_config.wait_multiplier = 2.0;

  rpc CreateLiteGuestConsumer(CreateLiteGuestConsumerRequest) returns (CreateLiteGuestConsumerResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 500;
  }

  rpc GetLiteGuestConsumer(GetLiteGuestConsumerRequest) returns (GetLiteGuestConsumerResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 500;
  }

  rpc UpdateLiteGuestConsumer(UpdateLiteGuestConsumerRequest) returns (UpdateLiteGuestConsumerResponse);

  rpc ConvertToFullGuestConsumer(ConvertToFullGuestConsumerRequest) returns (ConvertToFullGuestConsumerResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 1200;
  }

  rpc CreateFullGuestConsumer(CreateFullGuestConsumerRequest) returns (CreateFullGuestConsumerResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 750;
  }

  rpc ConvertGuestToAuthenticatedConsumer(ConvertGuestToAuthenticatedConsumerRequest) returns (ConvertGuestToAuthenticatedConsumerResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 2500;
  }

  rpc UpdateFullGuestToAuthenticatedConsumer(UpdateFullGuestToAuthenticatedConsumerRequest) returns (UpdateFullGuestToAuthenticatedConsumerResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 2500;
  }

  rpc UpdateLiteGuestConsumerAddress(UpdateLiteGuestConsumerAddressRequest) returns (UpdateLiteGuestConsumerAddressResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 500;
  }

  rpc GetConsumerById(GetConsumerByIdRequest) returns (GetConsumerByIdResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 200;
  }

  rpc GetConsumer(GetConsumerRequest) returns (GetConsumerResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 500;
  }

  rpc GetFullGuestConsumer(GetFullGuestConsumerRequest) returns (GetFullGuestConsumerResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 200;
  }

  rpc SetConsumerDefaultAddress(SetConsumerDefaultAddressRequest) returns (SetConsumerDefaultAddressResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 400;
  }

  rpc ListConsumersByUserID(ListConsumersByUserIDRequest) returns (ListConsumersByUserIDResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 750;
  }

  rpc BatchedListConsumersByUserID(BatchedListConsumersByUserIDRequest) returns (BatchedListConsumersByUserIDResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 1000;
  }

  /* This endpoint is tailored for Comms Service use case, and access controlled. */
  rpc ListConsumersBySanitizedEmail(ListConsumersBySanitizedEmailRequest) returns (ListConsumersBySanitizedEmailResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 100;
  }

  rpc QueryConsumer(QueryConsumerRequest) returns (QueryConsumerResponse);

  rpc GetOrCreateAuthenticatedConsumer(GetOrCreateAuthenticatedConsumerRequest) returns (GetOrCreateAuthenticatedConsumerResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 100;
  }

  rpc ListConsumerAddressLinks(ListConsumerAddressLinksRequest) returns (ListConsumerAddressLinksResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 600;
  }

  rpc CreateConsumerAddressLink(CreateConsumerAddressLinkRequest) returns (CreateConsumerAddressLinkResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 1500;
  }

  // STOP! If you want to retrieve address information of a consumer (by consumer id, address id), use GetAddressByEntity in Geo.
  // See https://github.com/doordash/services-protobuf/blob/master/protos/geo-intelligence/address.proto#L74
  // If you call this API today you will need to migrate to calling the API above. For details on how to migrate
  // see https://doordash.atlassian.net/wiki/spaces/Eng/pages/2959049225/Guide+to+migrate+from+COPS+GetConsumerAddressLink+to+Geo+GRPC+API
  rpc GetConsumerAddressLink(GetConsumerAddressLinkRequest) returns (GetConsumerAddressLinkResponse);

  rpc GetConsumerAddressLinkById(GetConsumerAddressLinkByIdRequest) returns (GetConsumerAddressLinkByIdResponse);

  rpc PatchConsumerAddressLink(PatchConsumerAddressLinkRequest) returns (PatchConsumerAddressLinkResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 300;
  }

  rpc SetConsumerDefaultCountry(SetConsumerDefaultCountryRequest) returns (SetConsumerDefaultCountryResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 300;
  }

  rpc SetConsumerCateringContactEmail(SetConsumerCateringContactEmailRequest) returns (SetConsumerCateringContactEmailResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 300;
  }

  rpc DeleteConsumerAddressLink(DeleteConsumerAddressLinkRequest) returns (DeleteConsumerAddressLinkResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 100;
  }

  rpc SetConsumerScheduledDeliveryTime(SetConsumerScheduledDeliveryTimeRequest) returns (SetConsumerScheduledDeliveryTimeResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 100;
  }

  /* This  API is used for order workflow. The API is intentionally lightweight */
  rpc GetConsumerSubscriptionStatus(GetConsumerSubscriptionStatusRequest) returns (GetConsumerSubscriptionStatusResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 400;
  }

  rpc SyncExternalConsumer(SyncExternalConsumerRequest) returns (SyncExternalConsumerResponse);

  rpc RecordConsumerTermsOfServiceAcceptance(RecordConsumerTermsOfServiceAcceptanceRequest) returns (RecordConsumerTermsOfServiceAcceptanceResponse);

  rpc GetPersonaVerification(GetPersonaVerificationRequest) returns (GetPersonaVerificationResponse);

  rpc GetPersonaIdPhotoUrl(GetPersonaIdPhotoUrlRequest) returns (GetPersonaIdPhotoUrlResponse);

  rpc TogglePersonaVerificationCaching(TogglePersonaVerificationCachingRequest) returns (TogglePersonaVerificationCachingResponse);

  // This API is for RTF request
  rpc DeletePersonaVerification(DeletePersonaVerificationRequest) returns (DeletePersonaVerificationResponse);

  // This API is built for the Reviews & Ratings team
  rpc ListReviewerInfoByConsumerIds(ListReviewerInfoByConsumerIdsRequest) returns (ListReviewerInfoByConsumerIdsResponse);

  // This API is built for the Category Expansion team
  rpc GetCxSelfExclusion(GetCxSelfExclusionRequest) returns (GetCxSelfExclusionResponse);

  // This API is built for the Category Expansion team
  rpc UpdateCxSelfExclusionBulk(UpdateCxSelfExclusionBulkRequest) returns (UpdateCxSelfExclusionBulkResponse);

  // This API is built for DoorDash for Work's team-management-service
  rpc SyncSanitizedEmail(SyncSanitizedEmailRequest) returns (SyncSanitizedEmailResponse);
}

/* Create Lite Guest */
message CreateLiteGuestConsumerRequest {
  ClientDeviceRequestContext request_ctx = 1;
}

message CreateLiteGuestConsumerResponse {
  string consumer_id = 1;
  ConsumerProfileType consumer_profile_type = 2;
  string legacy_dsj_dd_guest_id = 3 [deprecated = true];
}

/* Get Lite Guest */
message GetLiteGuestConsumerRequest {
  string consumer_id = 1;
  google.protobuf.BoolValue need_detailed_address = 2;
  ClientDeviceRequestContext request_ctx = 3;
}

message GetLiteGuestConsumerResponse {
  string consumer_id = 1;
  google.protobuf.Timestamp scheduled_delivery_time = 2;
  google.protobuf.StringValue address_id = 3;
  AddressDetail address = 4;
  google.protobuf.StringValue dasher_instructions = 5;
  google.protobuf.StringValue subpremise = 6;
  repeated DropOffPreference dropoff_preferences = 7;
}

/* Create Full Guest */
message CreateFullGuestConsumerRequest {
  google.protobuf.StringValue first_name = 1;
  google.protobuf.StringValue last_name = 2;
  google.protobuf.StringValue phone_number = 3;
  FullGuestConsumerType full_guest_consumer_type = 4;
  ClientDeviceRequestContext request_ctx = 5;
  google.protobuf.StringValue password = 6;
  google.protobuf.BoolValue receive_text_notifications = 7;
  google.protobuf.StringValue delivery_customer_pii_id = 8;
  google.protobuf.StringValue catering_contact_email = 9;
  ConsumerAddressLink default_consumer_address_link = 10;
}

message CreateFullGuestConsumerResponse {
  string consumer_id = 1;
  ConsumerProfileType consumer_profile_type = 2;
  FullGuestConsumerType full_guest_consumer_type = 3;
  string legacy_dsj_sessionid = 4 [deprecated = true];
  google.protobuf.StringValue email = 5;
  ConsumerAddressLink default_consumer_address_link = 6;
  google.protobuf.StringValue authorization_code = 7;
}

/* SyncExternalConsumer */
message SyncExternalConsumerRequest {
  google.protobuf.StringValue external_consumer_id = 1;
  google.protobuf.Int64Value tenant_id = 2;
  google.protobuf.StringValue catering_contact_email = 3;
  google.protobuf.StringValue phone_number = 4;
  AddressToCreate address_to_create = 5;
  FullGuestConsumerType full_guest_consumer_type = 6;
  google.protobuf.BoolValue receive_text_notifications = 7;
  google.protobuf.StringValue first_name = 8;
  google.protobuf.StringValue last_name = 9;
  google.protobuf.StringValue consumer_id = 10; // DoorDash consumer id
  google.protobuf.StringValue user_locale_preference = 11;
}

message SyncExternalConsumerResponse {
  google.protobuf.StringValue consumer_id = 1;
}

/* Convert Lite Guest to Full Guest */
message ConvertToFullGuestConsumerRequest {
  string lite_guest_consumer_id = 1;
  FullGuestConsumerType converted_to_full_guest_consumer_type = 2;
  ClientDeviceRequestContext request_ctx = 3;
}

message ConvertToFullGuestConsumerResponse {
  string consumer_id = 1;
  ConsumerProfileType consumer_profile_type = 2;
  FullGuestConsumerType converted_to_full_guest_consumer_type = 3;
  string legacy_dsj_sessionid = 4 [deprecated = true];
}

/* Update Lite Guest */
message UpdateLiteGuestConsumerRequest {
  string consumer_id = 1; // this is from cookie: dd_guest_id for lite guests (UUID)
  google.protobuf.StringValue default_address_id = 2;
  ClientDeviceRequestContext request_ctx = 3;
}

message UpdateLiteGuestConsumerResponse {
  string consumer_id = 1; // this is from cookie: dd_guest_id for lite guests (UUID)
  ConsumerProfileType consumer_profile_type = 2; // can we define a constant here? guest_type = ProfileType.LITE_GUEST 2?
  google.protobuf.StringValue default_address_id = 3;
}

message UpdateLiteGuestConsumerAddressRequest {
  reserved 5;
  google.protobuf.StringValue consumer_id = 1;
  google.protobuf.StringValue dasher_instructions = 2;
  google.protobuf.StringValue subpremise = 3;
  repeated DropOffPreference dropoff_preferences = 4;
  LiteGuestAddressToCreate address_to_create = 6;
}

message UpdateLiteGuestConsumerAddressResponse {
  google.protobuf.StringValue consumer_id = 1;
  google.protobuf.StringValue dasher_instructions = 2;
  google.protobuf.StringValue subpremise = 3;
  google.protobuf.StringValue address_id = 4;
  repeated DropOffPreference dropoff_preferences = 5;
  AddressDetail address = 6;
}

enum ConvertGuestToAuthenticatedConsumerEvent {
  UNKNOWN_EVENT = 0;
  LOGIN_EVENT = 1;
  SIGNUP_EVENT = 2;
}

/* Convert Lite or Full Guest to Authenticated Consumer */
message ConvertGuestToAuthenticatedConsumerRequest {
  string guest_consumer_id = 1;
  ConsumerProfileType consumer_profile_type = 2;
  string authenticated_user_id = 3;
  ConvertGuestToAuthenticatedConsumerEvent event = 4;
  ClientDeviceRequestContext request_ctx = 5;
}

message ConvertGuestToAuthenticatedConsumerResponse {
  string consumer_id = 1;
}

message UpdateFullGuestToAuthenticatedConsumerRequest {
  string guest_consumer_id = 1;
  string authenticated_user_id = 2;
  string email = 3;
}

message UpdateFullGuestToAuthenticatedConsumerResponse {
  string consumer_id = 1;
}

message GetConsumerByIdRequest {
  string id = 1;
  ClientDeviceRequestContext request_ctx = 2;
}

message GetConsumerByIdResponse {
  Consumer consumer = 1;
}

message GetConsumerRequest {
  ConsumerIdentifier identifier = 1;
  ClientDeviceRequestContext request_ctx = 2;
  google.protobuf.BoolValue need_default_address_link = 3;
  google.protobuf.BoolValue need_detailed_address = 4;
  google.protobuf.BoolValue need_metadata = 5;
  google.protobuf.BoolValue need_self_exclusion = 6;
}

message GetConsumerResponse {
  Consumer consumer = 1;
  ConsumerAddressLink default_address_link = 2;
  ConsumerMetadata metadata = 3;
  repeated BlockedItemType blocked_item_type = 4;
}

message GetFullGuestConsumerRequest {
  FullGuestConsumerIdentifier identifier = 1;
  google.protobuf.BoolValue need_default_address_link = 2;
  google.protobuf.BoolValue need_detailed_address = 3;
}

message GetFullGuestConsumerResponse {
  FullGuestConsumer consumer = 1;
  ConsumerAddressLink default_address_link = 2;
}

message SetConsumerDefaultAddressRequest {
  ConsumerIdentifier consumer_identifier = 1;
  ClientDeviceRequestContext request_ctx = 2;
  AddressIdOrAddressLinkId default_address_identifier = 3;
  google.protobuf.BoolValue need_detailed_address = 4;
}

message SetConsumerDefaultAddressResponse {
  ConsumerAddressLink default_address_link = 1;
  Consumer consumer = 2;
}

message ListConsumersByUserIDRequest {
  string user_id = 1;
  ClientDeviceRequestContext request_ctx = 2;
}

message BatchedListConsumersByUserIDRequest {
  repeated ListConsumersByUserIDRequest list_consumers_by_user_id_requests = 1;
}

message ListConsumersByUserIDResponse {
  repeated Consumer consumers = 1;
}

message BatchedListConsumersByUserIDResponse {
  map<string, ListConsumersByUserIDResponse> list_consumers_by_user_id_responses = 1;
}

message ListConsumersBySanitizedEmailRequest {
  string sanitized_email = 1;
}

message ListConsumersBySanitizedEmailResponse {
  repeated Consumer consumers = 1;
}

message QueryConsumerRequest {
  google.protobuf.Int32Value max_row_count = 1;
  repeated string referral_codes = 2;
}

message QueryConsumerResponse {
  repeated Consumer consumers = 1;
}

/*
 * Used for sign-up/sign-in flows
 * Note a Consumer is uniquely identified by (user_id, experience)
 */
message GetOrCreateAuthenticatedConsumerRequest {
  // Numeric in practice, string by convention
  string user_id = 1;
  ConsumerExperience experience = 2;
  // Used when creating a Consumer.
  // Because this endpoint is intended to be used in tandem with identity,
  // we ask for the email in the payload to to save a network request.
  google.protobuf.StringValue email = 3;
}

message GetOrCreateAuthenticatedConsumerResponse {
  Consumer consumer = 1;
}

/* List all of ConsumerAddressLink given a consumer identifier. */
message ListConsumerAddressLinksRequest {
  ConsumerIdentifier identifier = 1;
  ClientDeviceRequestContext request_ctx = 2;
  google.protobuf.BoolValue need_detailed_address = 3;
}

message ListConsumerAddressLinksResponse {
  repeated ConsumerAddressLink consumer_address_links = 1;
}

/* Create a ConsumerAddressLink. */
message CreateConsumerAddressLinkRequest {
  google.protobuf.StringValue consumer_id = 1;
  google.protobuf.StringValue dasher_instructions = 2;
  google.protobuf.StringValue subpremise = 3;
  google.protobuf.StringValue entry_code = 4;
  google.protobuf.StringValue parking_instructions = 5;
  repeated DropOffPreference dropoff_preferences = 6;
  AddressToCreate address_to_create = 7;
  google.protobuf.BoolValue validate_address = 8;
  google.protobuf.BoolValue set_default = 9; // default to True
  LatLng manual_point = 10;
  google.protobuf.StringValue building_name = 11;
  AddressLinkType address_link_type = 12;
}

message CreateConsumerAddressLinkResponse {
  ConsumerAddressLink consumer_address_link = 1;
  Consumer consumer = 2;
}

/* Get a ConsumerAddressLink by ConsumerAddressLink Id. */
message GetConsumerAddressLinkByIdRequest {
  uint32 consumer_address_link_id = 1;
  google.protobuf.BoolValue need_detailed_address = 2;
}

message GetConsumerAddressLinkByIdResponse {
  ConsumerAddressLink consumer_address_link = 1;
}

/* Get a ConsumerAddressLink. */
message GetConsumerAddressLinkRequest {
  google.protobuf.StringValue consumer_id = 1;
  google.protobuf.StringValue address_id = 2;
  google.protobuf.BoolValue need_detailed_address = 3;
}

message GetConsumerAddressLinkResponse {
  ConsumerAddressLink consumer_address_link = 1;
}

/* Patch a ConsumerAddressLink. */
message PatchConsumerAddressLinkRequest {
  ConsumerAddressLinkIdentifier identifier = 1;
  PatchableConsumerAddressLink consumer_address_link = 2;
  google.protobuf.FieldMask update_mask = 3;
}

message PatchConsumerAddressLinkResponse {}

/* Set Consumer Default Country */
message SetConsumerDefaultCountryRequest {
  google.protobuf.StringValue consumer_id = 1;
  google.protobuf.StringValue default_country = 2;
}

message SetConsumerDefaultCountryResponse {}

/* Set Consumer Catering Contact Email */
message SetConsumerCateringContactEmailRequest {
  google.protobuf.StringValue consumer_id = 1;
  google.protobuf.StringValue catering_contact_email = 2;
}

message SetConsumerCateringContactEmailResponse {}

/* Delete ConsumerAddressLink. */
message DeleteConsumerAddressLinkRequest {
  ConsumerAddressLinkIdentifier identifier = 1;
  ClientDeviceRequestContext request_ctx = 2;
}

message DeleteConsumerAddressLinkResponse {}

message SetConsumerScheduledDeliveryTimeRequest {
  string consumer_id = 1;
  google.protobuf.Timestamp scheduled_delivery_time = 2;
}

message SetConsumerScheduledDeliveryTimeResponse {}

message GetConsumerSubscriptionStatusRequest {
  SubscriberIdentifier identifier = 1; // The status is considered across all experiences
  common.ConsumerLocation consumer_location = 2;
  common.StoreLocation store_location = 3;
  google.protobuf.Int32Value business_vertical_id = 4;
  repeated StoreInfo store_info = 5;
  repeated google.protobuf.StringValue menu_item_ids = 6;
  google.protobuf.Timestamp scheduled_delivery_time = 7;
  doordash_consumer_service.subscription.SubscriptionPlanType subscription_type = 8;
}

message GetConsumerSubscriptionStatusResponse {
  google.protobuf.StringValue consumer_id = 1;
  google.protobuf.BoolValue is_eligible_for_benefits = 2;
  google.protobuf.StringValue subscription_id = 3; //used for order_cart backward compatibility
  google.protobuf.StringValue internal_subscription_status = 4; //used for order_cart backward compatibility
  ProfileSubscriptionPlan profile_subscription_plan = 5;
}

message RecordConsumerTermsOfServiceAcceptanceRequest {
  google.protobuf.StringValue consumer_id = 1;
  google.protobuf.StringValue version = 2; // optional : if not present, "latest" version will be used
}

message RecordConsumerTermsOfServiceAcceptanceResponse {
  ConsumerTOSLink tos_link = 1;
}

message GetPersonaVerificationRequest {
  string consumer_id = 1;

  // This is a flag to force fetching latest cx_id_info from Persona side instead of reading from db.
  //
  // If min_age_requirement is not passed in the request, this uses the currently stored min_age_requirement in the db
  // to validate the force fetch result against (returns invalid status if force fetched verification age < stored min age).
  //
  // If there is no currently store min_age_requirement in the db and min_age_requirement is not passed in the request,
  // an invalid verification status will be returned.
  bool force_update = 2;

  // Required in (almost) all cases to ensure the verification meets age requirements. If the verification does not
  // meet age requirements, a status of invalid will be returned. Not required if force updating an existing
  // verification (see above).
  google.protobuf.Int32Value min_age_requirement = 3;
}

message GetPersonaIdPhotoUrlRequest {
  string reference_id = 1;
}

message GetPersonaVerificationResponse {
  string persona_account_id = 1;
  PersonaVerificationStatus status = 2;
  string id_photo_url = 3;
}

message GetPersonaIdPhotoUrlResponse {
  PersonaVerificationStatus status = 1;
  string id_photo_url = 2;
}

message TogglePersonaVerificationCachingRequest {
  string consumer_id = 1;
  google.protobuf.BoolValue caching_enabled = 2;
}

message TogglePersonaVerificationCachingResponse {
  PersonaVerificationStatus status = 1;
}

message DeletePersonaVerificationRequest {
  string consumer_id = 1;
}

message DeletePersonaVerificationResponse {}

enum PersonaVerificationStatus {
  PERSONA_STATUS_UNKNOWN = 0;
  PERSONA_STATUS_NOT_SUBMITTED = 1;
  PERSONA_STATUS_VALID = 2;
  PERSONA_STATUS_NOT_VALID = 3;
  PERSONA_STATUS_EXPIRED = 4;
  PERSONA_STATUS_NO_CACHE = 5;
}

message Reviewer {
  string consumer_id = 1;
  ConsumerExperience experience = 2;
  google.protobuf.StringValue first_name = 3;
  google.protobuf.StringValue last_name = 4;
  google.protobuf.StringValue email = 5;
}

message ListReviewerInfoByConsumerIdsRequest {
  repeated string consumer_ids = 1;
}

message ListReviewerInfoByConsumerIdsResponse {
  repeated Reviewer reviewers = 1;
}

enum BlockedItemType {
  UNKNOWN_TYPE = 0;
  ALCOHOL_TYPE = 1;
}

message GetCxSelfExclusionRequest {
  string consumer_id = 1;
}

message GetCxSelfExclusionResponse {
  repeated BlockedItemType blocked_item_type = 1;
}

message CxBlockedItemsSetting {
  string consumer_id = 1;
  repeated BlockedItemType blocked_item_type = 2;
}

message UpdateCxSelfExclusionBulkRequest {
  repeated CxBlockedItemsSetting consumer_blocked_items_setting = 1;
  string created_by = 2; // user_id of person who ran the update
}

message UpdateCxSelfExclusionBulkResponse {}

message SyncSanitizedEmailRequest {
  string user_id = 1;
}

/**
 * List of all consumers that were updated.
 *  This response will include the Consumer.sanitized_email field.
 */
message SyncSanitizedEmailResponse {
  repeated Consumer consumers = 1;
}
