syntax = "proto3";
// buf:lint:ignore DIRECTORY_SAME_PACKAGE
package doordash_consumer_service.subscription_admin.v1;

import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.consumer_service.subscription_admin.v1";

/*
   * SubscriptionAdminService contains APIs for tooling to help with config updates, testing, and bug mitigation.
*/
service SubscriptionAdminService {
  /* This creates a new tool run */
  rpc CreateToolRun(CreateToolRunRequest) returns (CreateToolRunResponse);

  /* This gets a single tool run */
  rpc GetToolRun(GetToolRunRequest) returns (GetToolRunResponse);

  /* This gets multiple tool runs */
  rpc GetAllToolRuns(GetAllToolRunsRequest) returns (GetAllToolRunsResponse);

  /* This allows a tool run reviewer to approve a tool run */
  rpc ApproveToolRun(ApproveToolRunRequest) returns (ApproveToolRunResponse);

  /* The tool creator will execute the tool */
  rpc ExecuteToolRun(ExecuteToolRunRequest) returns (ExecuteToolRunResponse);

  /* List tools available to UI */
  rpc ListTools(ListToolsRequest) returns (ListToolsResponse);
}

/* Request to generate a code */
message ListToolsRequest {}

/* Response once the code is generated */
message ListToolsResponse {
  /* list of tools */
  repeated ToolItem tools = 1;
}

/* This represents a single tool */
message ToolItem {
  /* name */
  string name = 1;
  /* description */
  string description = 2;
  /* authorized */
  bool authorized = 3;
  /* json schema for the json args */
  google.protobuf.StringValue json_args_schema = 4;
}

/* Request to create a new tool run */
message CreateToolRunRequest {
  /* The service that this tool will be executed on */
  google.protobuf.StringValue service_name = 1;

  /* The name of the tool */
  google.protobuf.StringValue tool_name = 2;

  /* The arguments that the tool will use to run */
  google.protobuf.StringValue json_args = 3;
}

/* Response of create tool run */
message CreateToolRunResponse {
  /* The primary key of the tool run. */
  google.protobuf.Int64Value tool_run_id = 1;
}

/* Request to view details of a tool run */
message GetToolRunRequest {
  /* The primary key of the tool run. */
  google.protobuf.Int64Value tool_run_id = 1;
}

/* Response to show the details of the tool run */
message GetToolRunResponse {
  /* The details of the tool run */
  ToolRun tool_run = 1;
}

/* Request to view details of a tool run filtered by user id or tool name. */
message GetAllToolRunsRequest {
  /* Filter by user id that created tool runs */
  google.protobuf.StringValue executor_user_id = 1;

  /* Filter by tool name */
  google.protobuf.StringValue tool_name = 2;
}

/* Response that lists all details of a tool */
message GetAllToolRunsResponse {
  /* list of tool runs */
  repeated ToolRun tool_runs = 1;
}

/* Request to approve a tool run */
message ApproveToolRunRequest {
  /* The id of the tool run to approve */
  google.protobuf.Int64Value tool_run_id = 1;
}

/* Response to approve a tool run */
message ApproveToolRunResponse {}

/* Request to execute a tool run */
message ExecuteToolRunRequest {
  /* The id of the tool run to execute */
  google.protobuf.Int64Value tool_run_id = 1;
}

/* Response of the tool run execution */
message ExecuteToolRunResponse {}

/* This represents a single run of a tool */
message ToolRun {
  /* The primary key of the tool run. */
  google.protobuf.Int64Value id = 1;

  /* The name of the service that this tool will be executed on */
  google.protobuf.StringValue service_name = 2;

  /* The name of the tool */
  google.protobuf.StringValue tool_name = 3;

  /* The arguments that the tool will use to run */
  ToolRunStatus status = 4;

  /* The arguments that the tool will use to run */
  google.protobuf.StringValue executor_user_id = 5;

  /* The arguments that the tool will use to run */
  repeated google.protobuf.StringValue approver_user_ids = 6;

  /* The json arguments that the tool will use to run */
  google.protobuf.StringValue request = 7;

  /* The response that the tool run returned */
  google.protobuf.StringValue response = 8;

  /* The arguments that the tool will use to run */
  google.protobuf.Timestamp date_created = 9;

  /* The arguments that the tool will use to run */
  google.protobuf.Timestamp date_approved = 10;

  /* The arguments that the tool will use to run */
  google.protobuf.Timestamp date_start_run = 11;

  /* The date when the tool run finished */
  google.protobuf.Timestamp date_end_run = 12;
}

/* The status of the tool run */
enum ToolRunStatus {
  /* An unknown status. This should never happen. */
  TOOL_RUN_STATUS_UNSPECIFIED = 0;

  /* The tool run is currently in review and cannot be executed until approved */
  TOOL_RUN_STATUS_IN_REVIEW = 1;

  /* The tool run is ready to be executed */
  TOOL_RUN_STATUS_READY_TO_EXECUTE = 2;

  /* The tool run is currently executing */
  TOOL_RUN_STATUS_EXECUTING = 3;

  /* The tool run finished successfully */
  TOOL_RUN_STATUS_SUCCESS = 4;

  /* The tool run failed to finish successfully */
  TOOL_RUN_STATUS_FAILURE = 5;
}
