syntax = "proto3";

package test.v1;

import "google/protobuf/duration.proto";

option java_multiple_files = true;
option java_package = "com.doordash.test";
option java_generic_services = true;
option go_package = "github.com/doordash/services-protobuf/generated/test";

// TestService implements a set of test endpoints that respond with a
// statistically shaped response.
service TestService {
    // Unary is a simple unary request/response (as opposed to streaming).
    rpc Unary(UnaryRequest) returns (UnaryResponse) {}
}

// UnaryRequest implements a single requst/response request.
message UnaryRequest {
    // If provided, will modify the chances of returning specific status codes.
    ResponseProfile response_profile = 1;
    // If provided, will modify latencies of the RPC calls.
    LatencyProfile latency_profile = 2;
    // Data to be echoed back in the response.
    bytes data = 3;
}

// UnaryResponse implements a single request/response response.
message UnaryResponse {
    // Data echoed from the request.
    bytes data = 1;
}

// ResponseProfile specifies probabilities of status code responses.
message ResponseProfile {
    // CodeFrequency encodes a probability and specific status code.
    message CodeFrequency {
        // Returned status code.
        int32 code = 1;
        // Chance of matching this.
        double chance = 2;
    }
    // The model is expected to be a sorted array (by chance) of status codes
    // for the response. The chance is required to be between 0 and 1.
    repeated CodeFrequency model = 1;
}

// LatencyProfile specifies probabilities of added latency to responses.
message LatencyProfile {
    // DelayFrequency encodes a probability and specific delay.
    message DelayFrequency {
        // Duration added to RPC.
        google.protobuf.Duration delay = 1;
        // Chance of matching this.
        double chance = 2;
    }
    // The model is expected to be a sorted array (by chance) of delay duration
    // to add to a request. The chance is required to be between 0 and 1.
    repeated DelayFrequency model = 1;
}
