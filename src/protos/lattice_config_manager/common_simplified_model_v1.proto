syntax = "proto3";

package lattice_config_manager.v1;

import "google/protobuf/wrappers.proto";
import "lattice_config_manager/common_graph_config_v1.proto";
import "lattice_config_manager/common_prompt_template_v1.proto";

option go_package = "github.com/doordash/services-protobuf/generated/lattice_config_manager/v1";
option java_generic_services = true;
option java_multiple_files = true;
option java_package = "lattice_config_manager.v1";

/**
   * AgentGraph is a simplified representation of a graph. Under-the-hood, it will be converted to a Graph object.
     RFC: https://docs.google.com/document/d/1Fs2UV0mmQyET_5pBnO92EIxbQUn8PUEpThKpp0F4xxE/edit?usp=sharing
*/
message AgentGraph {
  reserved 2;
  reserved "graph_config_version";

  // UUID of the graph
  google.protobuf.StringValue graph_config_uuid = 1;
  // Tags associated with the graph
  repeated google.protobuf.StringValue tags = 3;
  // Name of the agent e.g. OrderResolutionAgent, OrderConfirmationAgent, etc.
  // This is simply to identify the agent in human-readable format.
  google.protobuf.StringValue agent_name = 4;
  // Initial tools that will be executed when the graph is started
  repeated SimplifiedTool initial_tools = 5;
  /*
     Input guardrails for the graph
     https://docs.google.com/document/d/1frgOlXQCr4Pn0zNwLO1rUVGlNZyoNC0uKdGZuI_-dkQ/edit?usp=sharing
  */
  repeated SimplifiedGuardrail input_guardrails = 6;
  // Output guardrails for the graph
  repeated SimplifiedGuardrail output_guardrails = 7;
  // LLM configuration
  lattice_config_manager.v1.LLM llm = 8;
  // User prompt template
  SimplifiedPromptTemplate user_prompt_template = 9;
  // System prompt template
  SimplifiedPromptTemplate system_prompt_template = 10;
  // Tools that can be used by the LLM
  repeated SimplifiedTool agent_tools = 11;
  // optional: formatters in Handlebars format will be converted to ReturnDirectNode.messages_with_return_type
  repeated lattice_config_manager.v1.MessageWithReturnType messages_with_return_type = 12;
  // Version of the graph
  google.protobuf.Int64Value version = 13;
}

/**
   Simplified PromptTemplate is a simplified representation of a prompt_template.
   Under-the-hood, it will be converted to a PromptTemplate object.
   Version and Tag will be aligned with the AgentGraph this prompt_template is associated with.
*/
message SimplifiedPromptTemplate {
  // Content of the prompt_template.
  google.protobuf.StringValue content = 1;
  // Partials of the prompt_template.
  repeated lattice_config_manager.v1.Partial partials = 2;
}

/**
   * SimplifiedTool is a simplified representation of a tool. Under-the-hood, it will be converted to a ToolNode object.
     RFC: https://docs.google.com/document/d/1Fs2UV0mmQyET_5pBnO92EIxbQUn8PUEpThKpp0F4xxE/edit?usp=sharing
*/
message SimplifiedTool {
  // tool_id of the tool (e.g. ExecuteWorkflowTool, ArgumentToContextTool, etc.)
  google.protobuf.StringValue tool_id = 1;

  // must be unique within a graph, will be converted as ToolNode's name
  google.protobuf.StringValue tool_name = 2;

  // optional: when not present, priority will be set to 0
  // execution will be executed from priority 0
  // tools that have the same priority will be run in parallel
  google.protobuf.Int32Value execution_priority = 3;

  // optional: If not present, system will use default schema from individual Tool implementation.
  google.protobuf.StringValue input_parameter_schema = 4;

  // Bindings during graph execution.
  map<string, lattice_config_manager.v1.Binding> bindings = 5;

  // optional: if set, this tool node will be attached to FlattenJsonNode.
  repeated FlattenJsonParameter flatten_json_parameters = 6;
}

/**
   * FlattenJsonParameter is a parameter to flatten the output of the tool call.
     It will be converted to a FlattenJsonNode.
*/
message FlattenJsonParameter {
  // Prefix will be added as a property in the input schema
  google.protobuf.StringValue prefix = 1;
  // context_key will be converted to a context binding, with key being the prefix
  google.protobuf.StringValue context_key = 2;
}

/**
 * Guardrail is a simplified representation of a guardrail. Under-the-hood, it will be converted to a lattice.v1.Guardrail.
 */
message SimplifiedGuardrail {
  /**
     guardrail_id of the guardrail.
     The value of the field depends on the implementation type.
     For example InPackageGuardrail types will have the value of this to be the `class_name`
  */
  google.protobuf.StringValue guardrail_id = 1;
  // unique name of the guardrail within the graph
  google.protobuf.StringValue guardrail_name = 2;
  // parameters to pass to the guardrail
  map<string, lattice_config_manager.v1.ParameterValue> parameters = 3;
}
