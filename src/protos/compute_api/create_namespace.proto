syntax = "proto3";

package compute_api.v1;

import "compute_api/common.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";

option go_package = "github.com/doordash/services-protobuf/generated/compute_api";

// Request for CreateNamespace
message CreateNamespaceRequest {
  // optional unique identifier provided by the caller
  google.protobuf.StringValue request_id = 1;

  // requester details
  Requester requester = 2;

  // namespace identifier
  google.protobuf.StringValue name = 3;

  // namespace type
  NamespaceType type = 4;

  // engineersâ€™ k8s permissions for the namespace
  Permission permissions = 5;

  // enable or disable dry-run
  // dry-run will create a pr for the namespace but will not merge
  google.protobuf.BoolValue dry_run = 6;
}

// Response for CreateNamespace
message CreateNamespaceResponse {
  // optional unique identifier provided by the caller
  google.protobuf.StringValue request_id = 1;

  // list of errors returned after processing the request
  repeated Error errors = 2;

  // namespace identifier
  google.protobuf.StringValue name = 3;

  // namespace status
  NamespaceStatus status = 4;

  // github pull request
  PullRequest pr = 5;
}
