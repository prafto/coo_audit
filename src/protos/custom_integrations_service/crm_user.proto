syntax = "proto3";
// buf:lint:ignore DIRECTORY_SAME_PACKAGE
// buf:lint:ignore PACKAGE_VERSION_SUFFIX
package custom_integrations_service.v1;

import "common/service_client_config.proto";
import "custom_integrations_service/common.proto";
import "google/protobuf/wrappers.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.customintegrations";

// CRM related integration services
service CrmUserIntegrationService {
  // Upsert user with CRM provider
  rpc UpsertUser(UpsertUserRequest) returns (UpsertUserResponse) {}
  // Publish user events with CRM provider
  rpc PublishUserEvent(PublishUserEventRequest) returns (PublishUserEventResponse) {}
}

// Upsert user to Crm provider request
message UpsertUserRequest {
  // indicates user's crm provider
  CISProviderType crm_provider = 1;
  // indicates user's loyalty provider
  CISProviderType loyalty_provider = 2;
  // Merchant id in the external loyalty provider
  google.protobuf.StringValue merchant_id = 3;
  // user session identifier - this could be external_id, loyalty session id
  google.protobuf.StringValue session_id = 4;
  // crm user identifier type - could internal id, external id, push token
  CrmUserIdentifierType crm_id_type = 5;
  // crm user identifier value - push token
  google.protobuf.StringValue crm_user_id = 6;
  // For example, push service type = [ GCM, APNS, Firebase, HMS, SAFARI, WEBPUSH ]
  google.protobuf.StringValue push_service_type = 7;
}

// Upsert user to Crm provider response
message UpsertUserResponse {
  // Success response
  message Success {
    // external Id to indicate successful upsert
    google.protobuf.StringValue external_id = 1;
  }

  // response contains either success or an error
  oneof result {
    // success response
    Success success = 1;
    // error response
    Error error = 2;
  }
}

// Identifier used for registration
enum CrmUserIdentifierType {
  // unspecified
  CRM_USER_IDENTIFIER_TYPE_UNSPECIFIED = 0;
  // Push token
  CRM_USER_IDENTIFIER_TYPE_PUSH_TOKEN = 1;
}

// Publish user event to Crm provider request
message PublishUserEventRequest {
  // indicates user's crm provider
  CISProviderType crm_provider = 1;
  // indicates user's loyalty provider
  CISProviderType loyalty_provider = 2;
  // Merchant id in the external loyalty provider
  google.protobuf.StringValue merchant_id = 3;
  // user session identifier - this could be external_id, loyalty session id
  google.protobuf.StringValue session_id = 4;
  // event type
  google.protobuf.StringValue event_type = 5;
  // event data
  map<string, string> event_attributes = 6;
}

// Publish user event to Crm provider response
message PublishUserEventResponse {
  // Success response
  message Success {
    // event Id to indicate successful upsert
    google.protobuf.StringValue event_id = 1;
  }

  // response contains either success or an error
  oneof result {
    // success response
    Success success = 1;
    // error response
    Error error = 2;
  }
}
