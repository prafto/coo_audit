syntax = "proto3";
// buf:lint:ignore DIRECTORY_SAME_PACKAGE
// buf:lint:ignore PACKAGE_VERSION_SUFFIX
package custom_integrations_service.v1;

import "common/service_client_config.proto";
import "custom_integrations_service/common.proto";
import "custom_integrations_service/golden_order.proto";
import "google/protobuf/wrappers.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.customintegrations";

// Order service for Custom Integration Service's silver flows
service CustomIntegrationsSilverOrderService {
  option (service_client.client_config).response_attempt_timeout_millis = 200000;
  option (service_client.client_config).retry_config.max_attempts = 4;
  option (service_client.client_config).retry_config.do_retry_grpc_code = 8;
  option (service_client.client_config).circuit_breaker_config.failure_rate_threshold = 0.8;
  option (service_client.client_config).circuit_breaker_config.do_ignore_grpc_code = 5;

  // Releases an order
  rpc AutoOrderRelease(AutoOrderReleaseRequest) returns (AutoOrderReleaseResponse) {}

  // Validate an order - reuse golden order's
  rpc SilverOrderValidation(SilverOrderValidationRequest) returns (SilverOrderValidationResponse) {}

  // Cancel an order
  rpc OrderCancel(OrderCancelRequest) returns (OrderCancelResponse) {}

  // Send dasher event
  rpc SendDasherInfo(SendDasherInfoRequest) returns (SendDasherInfoResponse) {}
}

// Vehicle info of the dasher
message DasherVehicleInfo {
  // Make of the dasher's vehicle
  google.protobuf.StringValue make = 1;
  // Model of the dasher's vehicle
  google.protobuf.StringValue model = 2;
  // Color of the dasher's vehicle
  google.protobuf.StringValue color = 3;
  // Last 4 symbols of the dasher's license plate
  google.protobuf.StringValue license_plate_number_last_4 = 4;
  // Car type of Dashers Vehicle
  google.protobuf.StringValue car_type = 5;
}

// Information about a dasher
message DasherInfo {
  // Dasher's first name
  google.protobuf.StringValue first_name = 1;
  // Dasher's last name initial
  google.protobuf.StringValue last_name_initial = 2;
  // Dasher's latitude at the time of order release
  google.protobuf.FloatValue latitude = 3;
  // Dasher's longitude at the time of order release
  google.protobuf.FloatValue longitude = 4;
  // Dasher's masked phone number
  google.protobuf.StringValue masked_phone_number = 5;
  // Dasher's vehicle
  DasherVehicleInfo vehicle = 6;
}

// Auto Order Release Request
message AutoOrderReleaseRequest {
  // Id of the order that was sent as part of the order
  google.protobuf.StringValue external_order_id = 1;
  // Id of the order generated by the provider(if any)
  google.protobuf.StringValue client_order_id = 2;
  // External reference of the order(for external checkout)
  google.protobuf.StringValue external_order_reference = 3;
  // Distance between the dasher and the store at the time of order release
  google.protobuf.FloatValue distance_from_store = 4;
  // Store that the order is being released to
  CISStore store = 5;
  // Dasher assigned to the order
  DasherInfo dasher = 6;
  // Order info
  OrderCreateRequest order = 7;
  // consumer of the order
  CISConsumer consumer = 8;
}

// Status type of Order Release
enum AutoOrderReleaseStatus {
  // Default
  AUTO_ORDER_RELEASE_STATUS_UNSPECIFIED = 0;
  // Status 200
  AUTO_ORDER_RELEASE_STATUS_SUCCESS_MX_RELEASE = 1;
  // Status 400
  AUTO_ORDER_RELEASE_STATUS_FAIL_RELEASE = 2;
  // Status 500
  AUTO_ORDER_RELEASE_STATUS_FAIL_MX_RELEASE = 3;
}

// Auto order release success response
message AutoOrderReleaseSuccessResponse {}

// Auto order release failure response
message AutoOrderReleaseErrorResponse {
  // Http response body
  google.protobuf.StringValue raw_error = 1;
}

// Auto Order Release Response
message AutoOrderReleaseResponse {
  // Order's merchant supplied id
  google.protobuf.StringValue merchant_supplied_id = 1;
  // Order release status
  AutoOrderReleaseStatus status = 2;
  // Either success or failure response
  oneof auto_order_release_result {
    // Success response
    AutoOrderReleaseSuccessResponse auto_order_release_success_response = 3;
    // Failure response
    AutoOrderReleaseErrorResponse auto_order_release_error_response = 4;
  }
}

// Silver Order Validation Request
message SilverOrderValidationRequest {
  // categories of the order to be validated
  repeated CISOrderMenuCategory categories = 1;
  // consumer of the order to be validated
  CISConsumer consumer = 2;
  // cart_uuid of the order to be validated
  google.protobuf.StringValue cart_uuid = 3;
  // ID column in POS DB order table
  google.protobuf.StringValue order_uuid = 4;
  // external cart ID of the order to be validated
  google.protobuf.StringValue external_cart_id = 5;
  // special insturctions of the order to be validated
  google.protobuf.StringValue order_special_instructions = 6;
  // store of the order to be validated
  CISStore store = 7;
  // subtotal of the order to be validated
  google.protobuf.Int64Value subtotal = 8;
  // if the order is auto release
  google.protobuf.BoolValue auto_release = 9;
  // if the order is catering
  google.protobuf.BoolValue is_catering = 10;
  // order estimated pickup time
  google.protobuf.StringValue estimated_pickup_time = 11;
  // timestamp when the order is updated
  google.protobuf.Int64Value cart_updated_at = 12;
}

// Silver Order Validation Response
message SilverOrderValidationResponse {
  // merchant order cart id
  google.protobuf.StringValue external_cart_id = 1;
  // either success or failure response
  oneof order_validation_result {
    // success response
    ValidationSuccessResponse validation_success_response = 2;
    // failure response
    ValidationErrorResponse validation_error_response = 3;
  }
}

// Order Cancel Request
message OrderCancelRequest {
  // Id of the order that was sent as part of the order
  google.protobuf.StringValue external_order_id = 1;
  // Id of the order generated by the provider
  google.protobuf.StringValue client_order_id = 2;
  // Store that the order is being cancelled with
  CISStore store = 3;
  // If the cancelled order is catering
  google.protobuf.BoolValue is_catering = 4;
  // If the cancelled order is ASAP
  google.protobuf.BoolValue is_asap = 5;
  // order experience in request
  google.protobuf.StringValue experience = 6;
  // Integration Type (marketplace, direct etc)
  IntegrationType integration_type = 7;
}

// Status type of Order Cancel
enum OrderCancelStatus {
  // Default
  ORDER_CANCEL_STATUS_UNSPECIFIED = 0;
  // Status 200
  ORDER_CANCEL_STATUS_SUCCESS_MX_CANCEL = 1;
  // Status 400
  ORDER_CANCEL_STATUS_FAIL_CANCEL = 2;
  // Status 500
  ORDER_CANCEL_STATUS_FAIL_MX_CANCEL = 3;
}

// Order Cancel success response
message OrderCancelSuccessResponse {}

// Order Cancel failure response
message OrderCancelErrorResponse {
  // Order cancel http response body
  google.protobuf.StringValue raw_error = 1;
}

// Order Cancel Response
message OrderCancelResponse {
  // Order cancel status
  OrderCancelStatus status = 1;
  // Either success or failure response
  oneof order_cancel_result {
    // Success response
    OrderCancelSuccessResponse order_cancel_success_response = 2;
    // Failure response
    OrderCancelErrorResponse order_cancel_error_response = 3;
  }
}

// Send Dasher Info event type
enum SendDasherInfoEventType {
  // Default
  SEND_DASHER_INFO_EVENT_TYPE_UNSPECIFIED = 0;
  // Confirmed by dasher
  SEND_DASHER_INFO_EVENT_TYPE_DASHER_CONFIRMED_EVENT = 1;
  // Dasher is arriving store
  SEND_DASHER_INFO_EVENT_TYPE_DASHER_ARRIVING_EVENT = 2;
  // Dasher has arrived store
  SEND_DASHER_INFO_EVENT_TYPE_DASHER_ARRIVED_EVENT = 3;
  // Dasher is out for delivery
  SEND_DASHER_INFO_EVENT_TYPE_DASHER_OUT_FOR_DELIVERY_EVENT = 4;
  // Dasher has parked at store
  SEND_DASHER_INFO_EVENT_TYPE_DASHER_PARKED_AT_STORE = 5;
  // Dasher has delivered
  SEND_DASHER_INFO_EVENT_TYPE_DASHER_DELIVERED = 6;
}

// Send Dasher Order Events Request
message SendDasherInfoRequest {
  // External order id
  google.protobuf.StringValue external_order_id = 1;
  // Store Details
  CISStore store = 2;
  // Timestamp of the send dasher order event
  google.protobuf.StringValue timestamp = 3;
  // Estimated time of arrival in seconds
  google.protobuf.Int32Value eta_in_secs = 4;
  // Type of the event
  SendDasherInfoEventType event_type = 5;
  // Information of the dasher
  DasherInfo dasher = 6;
  // Client order id
  google.protobuf.StringValue client_order_id = 7;
  // Delivery UUID
  google.protobuf.StringValue order_id = 8;
  // External order Reference
  google.protobuf.StringValue external_order_reference = 9;
  // Parking Spot
  google.protobuf.StringValue parking_spot = 10;
}

// Send dasher info Events Response
message SendDasherInfoResponse {
  // Success
  google.protobuf.BoolValue success = 1;
  // HTTP status code
  google.protobuf.Int32Value status_code = 2;
}
