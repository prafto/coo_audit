syntax = "proto3";
// buf:lint:ignore DIRECTORY_SAME_PACKAGE
// buf:lint:ignore PACKAGE_VERSION_SUFFIX
package custom_integrations_service.v1;

import "common/money.proto";
import "common/service_client_config.proto";
import "custom_integrations_service/common.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.customintegrations";

// gift cards related integration services
service GiftCardService {
  // get gift card balance endpoint
  rpc GetBalance(GetBalanceRequest) returns (GetBalanceResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 25000;
    option (service_client.client_method_config).retry_config.max_attempts = 3;
  }
  // redeem gift card endpoint
  rpc Redeem(RedeemRequest) returns (RedeemResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 25000;
    option (service_client.client_method_config).retry_config.max_attempts = 3;
  }
  // void redeem gift card endpoint
  rpc VoidRedeem(VoidRedeemRequest) returns (VoidRedeemResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 25000;
    option (service_client.client_method_config).retry_config.max_attempts = 3;
  }
  // refund gift card endpoint
  rpc Refund(RefundRequest) returns (RefundResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 25000;
    option (service_client.client_method_config).retry_config.max_attempts = 3;
  }
  // void refund gift card endpoint
  rpc VoidRefund(VoidRefundRequest) returns (VoidRefundResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 25000;
    option (service_client.client_method_config).retry_config.max_attempts = 3;
  }
  // Reload gift card endpoint
  rpc Reload(ReloadRequest) returns (ReloadResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 25000;
    option (service_client.client_method_config).retry_config.max_attempts = 3;
  }
  // void Reload gift card endpoint
  rpc VoidReload(VoidReloadRequest) returns (VoidReloadResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 25000;
    option (service_client.client_method_config).retry_config.max_attempts = 3;
  }
}

// gift card type. There could be many types of gift cards being issued by the Vendors.
// This enum should track it.
enum GiftCardType {
  // unknown/default gift card type
  GIFT_CARD_TYPE_UNSPECIFIED = 0;
  // EAN gift card type for Fiserv integration
  GIFT_CARD_TYPE_EAN = 1;
  // SCV gift card type for Fiserv integration
  GIFT_CARD_TYPE_SCV = 2;
}

// gift card redemption type. There can be different types of redemption based on how providers supports it.
// This enum will track it
enum GiftCardRedemptionType {
  // unknown/default redemption type
  GIFT_CARD_REDEMPTION_TYPE_UNSPECIFIED = 0;
  // redemption type with lock
  GIFT_CARD_REDEMPTION_TYPE_WITH_LOCK = 1;
  // redemption type normal
  GIFT_CARD_REDEMPTION_TYPE_NORMAL = 2;
  // redemption type no_nsf
  GIFT_CARD_REDEMPTION_TYPE_NO_NSF = 3;
}

// class to wrap gift card related information
message GiftCardData {
  // gift card number
  google.protobuf.StringValue gift_card_number = 1;
  // gift card pin
  google.protobuf.StringValue gift_card_pin = 2;
  // gift card type
  GiftCardType gift_card_type = 3;
}

// class to wrap transaction specific information
message TransactionData {
  // reference id in most cases this would be merchant id
  google.protobuf.StringValue reference_id = 1;
  // store id for which this transaction is made
  google.protobuf.StringValue store_id = 2;
  // transaction amount
  money.MonetaryFields transaction_amount = 3;
  // order id for which this transaction is made, this is optional
  google.protobuf.StringValue order_uuid = 4;
  // order cart id for which this transaction is made, this is optional
  google.protobuf.StringValue order_cart_uuid = 5;
}

// integration specific information.
message IntegrationData {
  // should vgs be skipped in making the request
  google.protobuf.BoolValue skip_vgs = 1;
  // client id/user id to be used for this transaction. This should be the tokenized value when skip_vgs=false.
  // May not be needed for all integrations. Client implementation will use this when it is present.
  google.protobuf.StringValue secret_key = 2;
  // password/client-secret to be used for this transaction. This should be the tokenized value when skip_vgs=false.
  // May not be needed for all integrations. Client implementation will use this when it is present.
  google.protobuf.StringValue secret_value = 3;
}

// class representing each transaction
message TransactionReference {
  // transaction reference id received from provider for each transaction
  google.protobuf.StringValue transaction_reference_id = 1;
}

// class representing GetBalance request
message GetBalanceRequest {
  // gift card related information
  GiftCardData gift_card_data = 1;
  // transaction related information
  TransactionData transaction_data = 2;
  // provider related information
  CISProviderType provider_type = 3;
  // integration related information
  IntegrationData integration_data = 4;
  // should balance be locked for this get balance query
  google.protobuf.BoolValue should_lock_balance = 5;
}

// class representing get balance response
message GetBalanceResponse {
  // Success response
  message Success {
    // object representing specific transaction
    TransactionReference transaction_reference = 1;
    // current balance of the gift card
    money.MonetaryFields current_balance = 2;
    // lock id if applicable
    google.protobuf.StringValue lock_id = 3;
  }
  // success or error object
  oneof result {
    // Success object
    Success success = 1;
    // Error object
    Error error = 2;
  }
}

// class representing Redeem request
message RedeemRequest {
  // gift card related information
  GiftCardData gift_card_data = 1;
  // transaction related information
  TransactionData transaction_data = 2;
  // provider related information
  CISProviderType provider_type = 3;
  // integration related information
  IntegrationData integration_data = 4;
  // should balance be locked for this get balance query
  GiftCardRedemptionType redemption_type = 5;
  // should balance be locked for this get balance query
  google.protobuf.StringValue lock_id = 6;
}

// class representing redeem response
message RedeemResponse {
  // Success response
  message Success {
    // object representing specific transaction
    TransactionReference transaction_reference = 1;
    // current balance of the gift card
    money.MonetaryFields current_balance = 2;
    // previous balance of the gift card
    money.MonetaryFields previous_balance = 3;
  }
  // success or error object
  oneof result {
    // Success object
    Success success = 1;
    // Error object
    Error error = 2;
  }
}

// class representing Redeem request
message VoidRedeemRequest {
  // gift card related information
  GiftCardData gift_card_data = 1;
  // transaction related information
  TransactionData transaction_data = 2;
  // provider related information
  CISProviderType provider_type = 3;
  // integration related information
  IntegrationData integration_data = 4;
  // should balance be locked for this get balance query
  GiftCardRedemptionType redemption_type = 5;
  // should balance be locked for this get balance query
  google.protobuf.StringValue lock_id = 6;
  // transaction reference for the void redeem request. This might be needed by some provider
  TransactionReference transaction_reference = 7;
}

// class representing get balance response
message VoidRedeemResponse {
  // Success response
  message Success {
    // object representing specific transaction
    TransactionReference transaction_reference = 1;
    // current balance of the gift card
    money.MonetaryFields current_balance = 2;
    // previous balance of the gift card
    money.MonetaryFields previous_balance = 3;
  }
  // success or error object
  oneof result {
    // Success object
    Success success = 1;
    // Error object
    Error error = 2;
  }
}

// class representing Refund request
message RefundRequest {
  // gift card related information
  GiftCardData gift_card_data = 1;
  // transaction related information
  TransactionData transaction_data = 2;
  // provider related information
  CISProviderType provider_type = 3;
  // integration related information
  IntegrationData integration_data = 4;
}

// class representing Refund response
message RefundResponse {
  // Success response
  message Success {
    // object representing specific transaction
    TransactionReference transaction_reference = 1;
    // current balance of the gift card
    money.MonetaryFields current_balance = 2;
    // previous balance of the gift card
    money.MonetaryFields previous_balance = 3;
  }
  // success or error object
  oneof result {
    // Success object
    Success success = 1;
    // Error object
    Error error = 2;
  }
}

// class representing Void Refund request
message VoidRefundRequest {
  // gift card related information
  GiftCardData gift_card_data = 1;
  // transaction related information
  TransactionData transaction_data = 2;
  // provider related information
  CISProviderType provider_type = 3;
  // integration related information
  IntegrationData integration_data = 4;
  // transaction reference for the void refund request. This might be needed by some provider
  TransactionReference transaction_reference = 5;
}

// class representing Void Refund response
message VoidRefundResponse {
  // Success response
  message Success {
    // object representing specific transaction
    TransactionReference transaction_reference = 1;
    // current balance of the gift card
    money.MonetaryFields current_balance = 2;
    // previous balance of the gift card
    money.MonetaryFields previous_balance = 3;
  }
  // success or error object
  oneof result {
    // Success object
    Success success = 1;
    // Error object
    Error error = 2;
  }
}

// class representing Reload request
message ReloadRequest {
  // gift card related information
  GiftCardData gift_card_data = 1;
  // transaction related information
  TransactionData transaction_data = 2;
  // provider related information
  CISProviderType provider_type = 3;
  // integration related information
  IntegrationData integration_data = 4;
  // transaction reference for the reload request. This might be needed by some provider
  TransactionReference transaction_reference = 5;
}

// class representing Reload response
message ReloadResponse {
  // Success response
  message Success {
    // object representing specific transaction
    TransactionReference transaction_reference = 1;
    // current balance of the gift card
    money.MonetaryFields current_balance = 2;
    // previous balance of the gift card
    money.MonetaryFields previous_balance = 3;
  }
  // success or error object
  oneof result {
    // Success object
    Success success = 1;
    // Error object
    Error error = 2;
  }
}

// class representing Void Reload request
message VoidReloadRequest {
  // gift card related information
  GiftCardData gift_card_data = 1;
  // transaction related information
  TransactionData transaction_data = 2;
  // provider related information
  CISProviderType provider_type = 3;
  // integration related information
  IntegrationData integration_data = 4;
  // transaction reference for the void reload request. This might be needed by some provider
  TransactionReference transaction_reference = 5;
}

// class representing Void Reload response
message VoidReloadResponse {
  // Success response
  message Success {
    // object representing specific transaction
    TransactionReference transaction_reference = 1;
    // current balance of the gift card
    money.MonetaryFields current_balance = 2;
    // previous balance of the gift card
    money.MonetaryFields previous_balance = 3;
  }
  // success or error object
  oneof result {
    // Success object
    Success success = 1;
    // Error object
    Error error = 2;
  }
}
