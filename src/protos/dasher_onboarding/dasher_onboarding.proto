syntax = "proto3";

package dasher_onboarding.v1;

import "common/money.proto";
import "common/service_client_config.proto";
import "dasher_onboarding/dasher_onboarding_input.proto";
import "dasher_service/dasher_dasher.proto";
import "google/protobuf/wrappers.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.dasher_onboarding";

// Service to handle Dasher Onboarding
service DasherOnboardingService {
  // Create a new dasher onboarding
  rpc CreateOnboarding(CreateOnboardingRequest) returns (CreateOnboardingResponse);

  // Get the onboarding context
  rpc GetOnboarding(GetOnboardingRequest) returns (GetOnboardingResponse);

  // Update dasher onboarding
  rpc UpdateOnboarding(UpdateOnboardingRequest) returns (UpdateOnboardingResponse);
}

// Step context for the Mailing Address step
message MailingAddressStepContext {
  // URL used for completing background check
  string background_check_completion_url = 1;
}

// Step context for the Onboarding Progress step
message OnboardingProgressStepContext {
  // First name of the applicant
  string first_name = 1;

  // Payment account ID of the applicant
  string payment_account_id = 2;

  // Background check result of the applicant
  string background_check_result = 3;

  // Whether bank account setup was skipped by the applicant
  bool is_bank_account_skipped = 4;

  // Whether the applicant has completed the bank account step
  bool completed_bank_account_setup = 5;

  // URL used for completing background check
  string background_check_completion_url = 6;

  // Last name of the applicant
  string last_name = 7;

  // Dasher id of the applicant
  int64 dasher_id = 8;

  // Stripe public key to make API calls to Stripe
  string stripe_public_key = 9;

  // Currency code used by the applicant, e.g. USD, CAD
  string currency_code = 10;
}

// Step context for the Vehicle Details step
message VehicleDetailsStepContext {
  // List of vehicle types
  repeated VehicleType vehicle_types = 1;
}

// Step context for USA IDV step
message IdentityVerificationStepContext {
  // applicant's vehicle type
  VehicleType vehicle_type = 1;
  // idv status
  IdentityVerificationStatus identity_verification_status = 2;
  // idv inquiry id
  string identity_inquiry_id = 3;
  // idv template id
  string identity_template_id = 4;
  // Reserve old field number
  reserved 5;
  // Reserve old field name
  reserved "contract_type";
  // PDx contract type
  dasher_service.dasher.DasherContractType dasher_contract_type = 6;
  // idv next poll time interval in millisecond
  int64 next_poll_ms = 7;
}

// Step context for Complete BGC step
message CompleteBgcStepContext {
  // URL used for completing background check
  string background_check_completion_url = 1;
  // to determine BGC step started on external vendor
  bool step_initiated = 2;
}

// Step context for Promotions step
message PromotionsStepContext {
  // Submarket ID used for fetching pay data
  int32 submarket_id = 1;

  // Submarket name and subnational division of Dasher
  string submarket_name = 2;

  // Hourly pay data for applicant's submarket
  money.MonetaryFields hourly_pay = 3;
}

// Step context for the waitlist step
message WaitlistStepContext {
  // Sub Market name
  string submarket_name = 1;
  // LTD count (applicable in case of LIMITED, not in hard-block)
  int64 delivery_threshold = 2;
  // Waitlist type
  WaitlistType waitlist_type = 3;

  // Deprecates field not being used and replaced with other type (DasherWaitlistStep instead of WaitlistStepPosition)
  // Use dasher_waitlist_step instead.
  reserved 4;
  reserved "waitlist_step_position";

  // Waitlist step position
  DasherWaitlistStep dasher_waitlist_step = 5;
}

// Step context for Address step
message AddressStepContext {
  // Address data (same as used for submitting the address)
  AddressData address_data = 1;

  // Additional fields as needed.
}

// Enum for waitlist type
enum WaitlistType {
  // Waitlist type not specified
  WAITLIST_TYPE_UNSPECIFIED = 0;
  // Limited warning
  WAITLIST_TYPE_LIMITED_WARNING = 1;
  // Hard block
  WAITLIST_TYPE_HARD_BLOCK = 2;
}

// Step context for kyc step
message KycStepContext {
  // is dismissable field
  bool is_dismissable = 1;
  // list of required documents
  enum DocumentType {
    // Document type not specified
    DOCUMENT_TYPE_UNSPECIFIED = 0;
    // Document type address information
    DOCUMENT_TYPE_ADDRESS = 1;
    // Document type id_number
    DOCUMENT_TYPE_ID_NUMBER = 2;
    // Document government photo identification front
    DOCUMENT_TYPE_GOVERNMENT_ID_FRONT = 3;
    // Document government photo identification back
    DOCUMENT_TYPE_GOVERNMENT_ID_BACK = 4;
    // Additional document identification
    DOCUMENT_TYPE_ADDITIONAL_VERIFICATION = 5;
  }

  // Type of the document
  repeated DocumentType required_documents = 2;
}

// Step context for phone verification
message PhoneVerificationContext {
  // Used to display the last 4 digits of the userâ€™s phone number on the page
  string user_phone_number = 1;

  // Whether or not the applicant's phone is verified
  bool is_phone_verified = 2;

  // The error that occured when someone tried to verify their phone number
  PhoneError phone_error = 3;

  // list of required documents
  enum PhoneError {
    // The default argument that will indicate that no error has been recorded
    PHONE_ERROR_UNSPECIFIED = 0;
    // When the number is VOIP
    PHONE_ERROR_INVALID_PHONE_CARRIER = 1;
    // When the number has already been verified by someone else
    PHONE_ERROR_OWNED_BY_OTHER_APPLICANT = 2;
    // When there error is not from any of the other use cases
    PHONE_ERROR_UNKNOWN_ERROR = 3;
  }
}

// Step context for welcome kit
message WelcomeKitContext {
  // used to display the disimissable before date [YYYY-MM-DD]
  string is_dismissable_before_date = 1;
}

// Step context for Webview V2 Redirect
message V2RedirectContext {}

// Vehicle type
message VehicleType {
  // Name of the vehicle
  string name = 1;

  // Vehicle type ID
  int32 value = 2;
}

// Step context for USA BGC step
message UsaBgcStepContext {
  // applicant's vehicle type - used to determine if we need DL fields
  VehicleType vehicle_type = 1;
  // applicant's legal name
  string legal_name = 2;
}

// Step context for USA BGC confirmation step
message BgcConfirmationStepContext {
  // Driver's license state
  string dl_state = 1;
  // Driver's license number - tokenized
  string dl_number = 2;
  // applicant legal name
  string legal_name = 3;
  // applicant date of birth
  string dob = 4;
  // applicant ssn - tokenized
  string ssn = 5;
}

// Onboarding context data
message OnboardingContext {
  // The current step of the onboarding
  OnboardingStep current_onboarding_step = 1;

  // The 2-letter ISO string of the country
  string country_shortname = 2;

  // Unique link of the applicant
  string applicant_unique_link = 3;

  // Context for the current step
  oneof step_context {
    // Context for the Mailling Address step
    MailingAddressStepContext mailing_address_step = 4;

    // Context for the Onboarding Progress step
    OnboardingProgressStepContext onboarding_progress_step = 5;

    // Context for the Vehicle Details step
    VehicleDetailsStepContext vehicle_details_step = 6;

    // Context for the Complete BGC step
    CompleteBgcStepContext complete_bgc_step = 7;

    // Context for the Promotions step
    PromotionsStepContext promotions_step = 8;

    // Context for the kyc step
    KycStepContext kyc_step = 9;

    // Context for the phone verification steps
    PhoneVerificationContext verify_phone_step = 10;

    // Context for the welcome kit/address entry step
    WelcomeKitContext welcome_kit_step = 11;

    // Context for the Webview V2 Redirect
    V2RedirectContext v2_redirect_step = 12;

    // Context for the USA IDV step
    IdentityVerificationStepContext identity_verification_step = 14;

    // Context for the USA BGC step
    UsaBgcStepContext usa_bgc_step = 15;

    // Context for the BGC Confirmation step
    BgcConfirmationStepContext bgc_confirmation_step = 16;

    // Context for Waitlist step
    WaitlistStepContext waitlist_step = 17;

    // Context for Address step
    AddressStepContext address_step = 20;
  }

  // Email of the applicant
  string email = 13;

  // Deprecated fields
  reserved 18, 19;
  reserved "next_poll_ms", "idv_next_poll_ms";
}

// Banner Button Structure
message BannerButton {
  // will contain http/https link
  string link = 1;

  // will contain plaintext for FE display
  string text = 2;
}

// Onboarding banner data
message BannerContext {
  // Background Check Status
  string bgc_status = 1;

  // Header string
  string header = 2;

  // Body string -- if contains {time}, replace with FE timer
  string body = 3;

  // Remaining time within the interval for timer countdown -- if null, do not show
  int64 remaining_time_ms = 4;

  // Total time for current interval (i.e 5 minutes)
  int64 total_time_ms = 5;

  // milliseconds until next poll -- if null, do not poll
  int64 next_poll_ms = 6;

  // button related data -- if null, do not show button
  BannerButton button = 7;

  // tax id (e.g., SSN) Status
  string tax_id_status = 8;
}

// Request for create onboarding
message CreateOnboardingRequest {
  // Email of the applicant
  string email = 1;

  // Phone number of the applicant
  string phone_number = 2;

  // Postal/zip code of the applicant
  string postal_code = 3;

  // The 2-letter ISO string of the country the applicant is applying to
  string country_shortname = 4;

  // Optional UTM source from the URL
  string utm_source = 5;
}

// Response for create onboarding
message CreateOnboardingResponse {
  // Onboarding context of the applicant
  OnboardingContext onboarding_context = 1;
}

// Request for get onboarding
message GetOnboardingRequest {
  // DEPRECATED: please pass in auth token to BFF which will fetch user email + phone number for auth purposes
  string applicant_unique_link = 1 [deprecated = true];

  // authenticated user's email
  string email = 2;

  // authenticated user's phone number
  string phone_number = 3;

  // Optional UTM source from the URL
  string utm_source = 4;
}

// Response for get onboarding
message GetOnboardingResponse {
  // Onboarding context of the applicant
  OnboardingContext onboarding_context = 1;

  // Banner context for background check continue -- if null, no banner display needed
  BannerContext banner_context = 2;
}

// Individual input for updating onboarding
message Input {
  reserved "input_type";
  reserved 1;
  reserved "names_and_password_data";
  reserved 2;

  // Individual data for each input type. The input type will be derived from whether the corresponding input data exists
  oneof input_data {
    // Vehicle details
    VehicleDetailsData vehicle_details_data = 3;

    // Birthday input
    BirthdayInputData birthday_input_data = 4;

    // Mailing address
    MailingAddressData mailing_address_data = 5;

    // Create payment account
    CreatePaymentAccountData create_payment_account_data = 6;

    // Checkr Canada background check submit
    CheckrCanadaBgcSubmitData checkr_canada_bgc_submit_data = 7;

    // Skip bank account
    SkipBankAccountData skip_bank_account_data = 8;

    // Complete safety course
    CompleteSafetyCourseData complete_safety_course_data = 9;

    // Applicant names
    ApplicantNamesData applicant_names_data = 10;

    // NCC background check submit
    NccBgcSubmitData ncc_bgc_submit_data = 11;

    // Promotions submit
    PromotionsData promotions_data = 12;

    // Personal ID number data
    PersonalIdNumberData personal_id_number_data = 13;

    // Government ID photo front data
    GovernmentPhotoData government_id_photo_front_data = 14;

    // Government ID photo back data
    GovernmentPhotoData government_id_photo_back_data = 15;

    // Skip kyc data
    SkipKycData skip_kyc_data = 16;

    // Verify phone data
    VerifyPhoneData verify_phone_data = 17;

    // Skip adding welcome kit address data
    SkipWelcomeKitData skip_welcome_kit_data = 18;

    // Canada Webhook data
    CanadaWebhookData canada_webhook_data = 19;

    // Identity Verification Data
    IdentityVerificationData identity_verification_data = 20;

    // USA BGC Data
    BackgroundCheckData background_check_data = 21;

    // Driver's License Data
    DriversLicenseData drivers_license_data = 22;

    // Waitlist Dasher Action Data
    WaitlistDasherActionData waitlist_dasher_action_data = 23;

    // Tin Resubmit Input Data
    TinResubmitInputData tin_resubmit_input_data = 24;

    // Address Data
    AddressData address_data = 25;
  }
}

// Request for update onboarding
message UpdateOnboardingRequest {
  // DEPRECATED: please pass in auth token to BFF which will fetch user email + phone number for auth purposes
  string applicant_unique_link = 1 [deprecated = true];

  // authenticated user's email
  string email = 2;

  // authenticated user's phone number
  string phone_number = 3;

  // list of inputs for update
  repeated Input inputs = 4;

  // Optional UTM source from the URL
  string utm_source = 5;

  // user_id unique identity provided by the identity team
  string user_id = 6;
}

// Response for update onboarding
message UpdateOnboardingResponse {
  // Onboarding context of the applicant
  OnboardingContext onboarding_context = 1;
}

// List of steps in the onboarding flow. The numbers do not represent their relative order
enum OnboardingStep {
  // Placeholder step name
  ONBOARDING_STEP_UNSPECIFIED = 0;

  // Profile setup step
  ONBOARDING_STEP_PROFILE_SETUP = 1;

  // Application closed step
  ONBOARDING_STEP_APPLICATION_CLOSED = 2;

  // Vehicle details step
  ONBOARDING_STEP_VEHICLE_DETAILS = 3;

  // Additional details (e.g. DOB) step
  ONBOARDING_STEP_ADDITIONAL_DETAILS = 4;

  // Mailing address step (aka. welcome kit address collection)
  ONBOARDING_STEP_MAILING_ADDRESS = 5;

  // Onboarding progress step (aka. dropshipping confirmation step)
  ONBOARDING_STEP_ONBOARDING_PROGRESS = 6;

  // Safety course step
  ONBOARDING_STEP_SAFETY_COURSE = 7;

  // Onboarding Complete
  ONBOARDING_STEP_DONE = 8;

  // Complete BGC (background check) step (NCC for AU + NZ, and Checkr for CA)
  ONBOARDING_STEP_COMPLETE_BGC = 9;

  // Promotions step (post-activation)
  ONBOARDING_STEP_PROMOTIONS = 10;

  // KYC step for stripe verification
  ONBOARDING_STEP_KYC = 11;

  // Phone Verification
  ONBOARDING_STEP_VERIFY_PHONE = 12;

  //Welcome Kit
  ONBOARDING_STEP_WELCOME_KIT = 13;

  // V2 Redirect
  ONBOARDING_STEP_V2_REDIRECT = 14;

  // IDV
  ONBOARDING_STEP_IDENTITY_VERIFICATION = 15;

  // USA BGC Step
  ONBOARDING_STEP_USA_BGC = 16;

  // BGC Confirmation
  ONBOARDING_STEP_BGC_CONFIRMATION = 17;

  // Waitlist
  ONBOARDING_STEP_WAITLIST = 18;

  // Background Check
  ONBOARDING_STEP_BACKGROUND_CHECK = 19;

  //Date Of Birth
  ONBOARDING_STEP_DATE_OF_BIRTH = 20;

  //Australia Business Number
  ONBOARDING_STEP_ABN = 21;

  //Address
  ONBOARDING_STEP_ADDRESS = 22;
}

// List of potential steps where waitlist can be triggered
enum DasherWaitlistStep {
  // Placeholder step
  DASHER_WAITLIST_STEP_UNSPECIFIED = 0;

  // Waitlist directly after vehicle step
  DASHER_WAITLIST_STEP_AFTER_VEHICLE = 1;

  // Waitlist before BGC
  DASHER_WAITLIST_STEP_BEFORE_BGC = 2;

  // Waitlist before vehicle step
  DASHER_WAITLIST_STEP_BEFORE_VEHICLE = 3;
}
