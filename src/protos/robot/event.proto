syntax = "proto3";

package robot.v1;

import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "robot/robot.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.robot.v1";

// Severity levels of an event
// See definition in:
// https://ra-content-1.doordashlabs.net/nolo/#:~:text=Robot%20Recovery%20Conditions
enum RobotEventSeverity {
  // No Event Priority specified
  ROBOT_EVENT_SEVERITY_UNSPECIFIED = 0;
  // Low priority event
  ROBOT_EVENT_SEVERITY_LOW = 1;
  // Medium priority event
  ROBOT_EVENT_SEVERITY_MEDIUM = 2;
  // High priority event
  ROBOT_EVENT_SEVERITY_HIGH = 3;
}

// Event state
enum RobotEventState {
  // Event has no assigned state; this should be used for non-actionable events
  ROBOT_EVENT_STATE_UNSPECIFIED = 0;
  // Event do not require action
  ROBOT_EVENT_STATE_NO_ACTION_NEEDED = 1;
  // Event requires action
  ROBOT_EVENT_STATE_ACTION_NEEDED = 2;
  // Event is resolved; which means that the event was actionable and has been
  // resolved
  ROBOT_EVENT_STATE_RESOLVED = 3;
  // Event is dismissed; which means that the event is no longer actionable
  ROBOT_EVENT_STATE_DISMISSED = 4;
  // Event is acknowledged; event still needs to be resolved/dismissed
  ROBOT_EVENT_STATE_ACKNOWLEDGED = 5;
}

// Rescue event specific data
message RescueEventData {
  // Types of event
  enum RescueReason {
    // Rescue reason unspecified
    RESCUE_REASON_UNSPECIFIED = 0;
    // Battery died
    RESCUE_REASON_BATTERY_DIED = 1;
    // Collision
    RESCUE_REASON_COLLISION = 2;
    // Internal handoff
    RESCUE_REASON_INTERNAL_HANDOFF = 3;
    // ODD
    RESCUE_REASON_ODD = 4;
    // Operational issue;
    // e.g. an operator is suddenly unable to continue operations due to
    // sickness etc.
    RESCUE_REASON_OPERATIONAL_ISSUE = 5;
    // Poor network
    RESCUE_REASON_POOR_NETWORK = 6;
    // Public interference
    RESCUE_REASON_PUBLIC_INTERFERENCE = 7;
    // Software issue
    RESCUE_REASON_SOFTWARE_ISSUE = 8;
    // RAC Issue
    RESCUE_REASON_RAC_ISSUE = 9;
    // VCU fault
    RESCUE_REASON_VCU_FAULT = 10;
    // Weather
    RESCUE_REASON_WEATHER = 11;
    // Unexpected connectivity loss.
    // e.g the robot is offline in NoLo in an unexpected location.
    RESCUE_REASON_UNEXPECTED_CONNECTIVITY_LOSS = 12;
  }

  // The reason for the rescue
  RescueReason reason = 1;
}

// Event data for misconfiguration events
message MisconfigurationEventData {}

// Event type specific data
message RobotEventData {
  // Contains event type specific data
  oneof event_data {
    // Rescue event data
    RescueEventData rescue_event_data = 1;
    // Misconfiguration event data
    MisconfigurationEventData misconfiguration_event_data = 2;
  }
}

// Robot event object used for viewing robot events
message RobotEvent {
  // Robot event id
  string robot_event_id = 1;
  // Robot event severity
  RobotEventSeverity severity = 2;
  // Robot event state
  RobotEventState event_state = 4;
  // Further information about the event
  google.protobuf.StringValue description = 5;
  // When the event was created
  google.protobuf.Timestamp created_at = 6;
  // When the event was last updated at
  google.protobuf.Timestamp updated_at = 7;
  // User who created the event
  google.protobuf.StringValue created_by = 8;
  // User who updated the event
  google.protobuf.StringValue updated_by = 9;
  // Robot state snapshot
  RobotInfo robot_info_snapshot = 10;
  // Event type specific data
  RobotEventData event_data = 11;
  // Robot id
  string robot_id = 12;
}
