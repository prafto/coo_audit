syntax = "proto3";

package doordash.groundtruth.v1;

import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.groundtruth.v1";

// Ground Truth Task type
enum TaskType {
  // Unspecified task type
  TASK_TYPE_UNSPECIFIED = 0;
  // Jets task type for scanning shelf
  TASK_TYPE_JETS_SCAN_TASK = 1;
  // Area photo task type for scanning a particular area in store
  TASK_TYPE_AREA_PHOTO = 2;
}

// Ground Truth Task Record with it's data
message GroundTruthTask {
  reserved 6;
  reserved "area_photo_task_data";

  // task idempotency key = request_uuid sent by client during task creation
  google.protobuf.StringValue idempotency_key = 1;
  // task_id for task. This would be equal to task_group_id submitted to task-platform
  google.protobuf.StringValue task_id = 2;
  // task_type
  TaskType task_type = 3;
  // store_id
  google.protobuf.StringValue store_id = 4;
  // task_status
  google.protobuf.StringValue task_status = 5;
  // Task specific data. This data will be used to drive UI screens for task
  TaskData task_data = 7;
}

// Task Data object to return in GroundTruthTask
message TaskData {
  // one of the supported task data objects
  oneof task_data {
    // task data for AREA_PHOTO_TASK
    AreaPhotoTaskData area_photo_task_data = 1;
  }
}

// Scan location object which can be used across different types of requests
message ScanLocation {
  // aisle id
  google.protobuf.StringValue scan_location_id = 1;
  // aisle name
  google.protobuf.StringValue scan_location_name = 2;
}

// Area Photos Task Request Data object
// This proto will be used for sending task creation request
message AreaPhotosTaskRequestData {
  // business-id of the store
  google.protobuf.StringValue business_id = 1;
  // store-id of the store
  google.protobuf.StringValue store_id = 2;
  // list of scan locations for which to take photo for
  repeated ScanLocation scan_locations = 3;
}

// Area Photos Task Data object
// This proto will be used to deserialize the task_data in GroundTruthTask object
message AreaPhotoTaskData {
  // store-id of the store
  google.protobuf.StringValue store_id = 1;
  // list of scan locations for which to take photo for
  repeated ScanLocation scan_locations = 2;
}

// common dasher information object
// We can add more info like shift_id, app-version etc. later
message DasherInfo {
  // dasher id
  google.protobuf.StringValue dasher_id = 1;
}

// Task data type for different types of tasks
enum TaskDataType {
  // Unspecified task data type
  TASK_DATA_TYPE_UNSPECIFIED = 0;
  // Task data type for image upload
  TASK_DATA_TYPE_IMAGE_UPLOAD = 1;
  // Task data type for other area information
  TASK_DATA_TYPE_AREA_INFO = 2;
}
