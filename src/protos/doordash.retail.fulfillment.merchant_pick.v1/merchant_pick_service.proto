syntax = "proto3";

package doordash.retail.fulfillment.merchant_pick.v1;

import "common/money.proto";
import "doordash.retail.common.v1/item_instructions.proto";
import "google/protobuf/wrappers.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.retail.fulfillment.merchant_pick";

// Service for Mx Pick APIs
service MerchantPickService {
  /*
   * Cancel Mx Pick Order
   */
  rpc CancelOrder(CancelOrderRequest) returns (CancelOrderResponse);

  /*
   * Finish Mx Pick Order
   */
  rpc FinishPickOrder(FinishPickOrderRequest) returns (FinishPickOrderResponse);

  /*
   * Get substitution information
   */
  rpc GetOrderFulfillmentInformation(GetOrderFulfillmentInformationRequest) returns (GetOrderFulfillmentInformationResponse);
}

// Request to CancelMxPickOrder
message CancelOrderRequest {
  // delivery uuid of order
  string delivery_uuid = 1;
  // status of order
  google.protobuf.StringValue order_status = 2;
}

// Response to CancelMxPickOrder
message CancelOrderResponse {}

// Request to FinishMxPickOrder
message FinishPickOrderRequest {
  // delivery uuid of order
  string delivery_uuid = 1;
  // tax and fee value
  google.protobuf.Int32Value tax_and_fee = 2;
  // total value
  google.protobuf.Int32Value total = 3;
  // list of items in order
  repeated OrderItem order_items = 4;
}

// order item
message OrderItem {
  // Merchant supplied id
  string merchant_supplied_id = 1;
  // price value of one item
  int32 unit_price = 2;
  // original quantity value of items
  int32 original_quantity = 3;
  // updated quantity value of items
  int32 updated_quantity = 4;
}

// Response to FinishMxPickOrder
message FinishPickOrderResponse {}

// Request to GetOrderFulfillmentInformationRequest
message GetOrderFulfillmentInformationRequest {
  // cart uuid
  google.protobuf.StringValue cart_uuid = 1;
  // consumer id
  google.protobuf.StringValue consumer_id = 2;
  // list of order items to get fulfillment information for
  repeated OrderItemInfo order_items = 3;
  // store id
  google.protobuf.StringValue store_id = 4;
}

// Order item to get fulfillment information for
message OrderItemInfo {
  // merchant supplied id
  google.protobuf.StringValue merchant_supplied_id = 1;
  // name
  google.protobuf.StringValue name = 2;
  // menu item id
  google.protobuf.StringValue menu_item_id = 3;
  // quantity requested
  google.protobuf.Int32Value quantity_requested = 4;
}

// Response to GetOrderFulfillmentInformationRequest
message GetOrderFulfillmentInformationResponse {
  // list of order items with fulfillment information
  repeated OrderItemWithFulfillmentInfo order_items = 1;
  // is subs enabled
  google.protobuf.BoolValue is_subs_enabled = 2;
}

// Order item with fulfillment information
message OrderItemWithFulfillmentInfo {
  // menu item id
  google.protobuf.StringValue menu_item_id = 1;
  // item instructions
  common.v1.ItemInstructions item_instructions = 2;
  // contact, refund, substitute
  google.protobuf.StringValue substitution_preference = 3;
  // list of substitution items
  repeated SubstitutionChoiceItem substitution_choices = 4;
  // merchant supplied id
  google.protobuf.StringValue merchant_supplied_id = 5;
}

// Substitution item information
message SubstitutionChoiceItem {
  // name
  google.protobuf.StringValue name = 1;
  // menu item id
  google.protobuf.StringValue menu_item_id = 2;
  // merchant supplied id
  google.protobuf.StringValue merchant_supplied_id = 3;
  // unit price
  money.MonetaryFields unit_price = 4;
  // quantity
  google.protobuf.Int32Value quantity = 5;
  // max allowed quantity
  google.protobuf.Int32Value max_allowed_quantity = 6;
  // image url
  google.protobuf.StringValue image_url = 7;
  // SUBSTITUTION_TYPE_UNSPECIFIED,SUBSTITUTION_TYPE_DOORDASH_CHOICE,SUBSTITUTION_TYPE_PRE_APPROVED,SUBSTITUTION_TYPE_GENERIC_SUBS
  google.protobuf.StringValue substitution_type = 8;
}
