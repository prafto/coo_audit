syntax = "proto3";

package store_change_of_ownership.v1;

import "common/service_client_config.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_outer_classname = "StoreChangeOfOwnershipProto";
option java_package = "com.doordash.rpc.merchant_data_service_store_service.store_change_of_ownership.v1";

// The StoreChangeOfOwnershipService that maintains the entry-points for store COO records. The records could
// or could not be used in store COO yet.
service StoreChangeOfOwnershipService {
  option (service_client.client_config).service_name = "merchant-data-service";
  option (service_client.client_config).service_app = "grpc-gateway";
  option (service_client.client_config).retry_config.max_attempts = 3;

  // The create / update API for a StoreChangeOfOwnership record. If id not is provided, it performs a create call,
  // otherwise, it's an update call.
  rpc UpsertStoreChangeOfOwnership(UpsertStoreChangeOfOwnershipRequest) returns (UpsertStoreChangeOfOwnershipResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 10000;
  }

  // The get API to query StoreChangeOfOwnership records by store id.
  rpc GetStoreChangeOfOwnershipsByStoreId(GetStoreChangeOfOwnershipsByStoreIdRequest) returns (GetStoreChangeOfOwnershipsByStoreIdResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 3000;
  }
}

// The StoreChangeOfOwnership record that will be persisted in DB.
message StoreChangeOfOwnership {
  // The store id.
  google.protobuf.Int64Value store_id = 1;
  // The flag that indicates if the record is active or not. Set this flag to false to disable the record.
  google.protobuf.BoolValue is_active = 2;
  // The scheduled coo cutoff time, in UTC.
  google.protobuf.Timestamp scheduled_cutoff_time = 3;
  // The StoreChangeOfOwnershipData, that will be applied to the store model, while other attributes
  // defined in the StoreChangeOfOwnership message are meta data of the COO record.
  StoreChangeOfOwnershipData store_change_of_ownership_data = 4;

  // NOTE: optional params start from 1001.
  // Optional the record uuid.
  google.protobuf.StringValue uuid = 1001;
  // Optional, the user_id that creates this coo request.
  google.protobuf.Int64Value created_by = 1002;
  // Optional, the user_id that approves this coo request.
  google.protobuf.Int64Value approved_by = 1003;
  // Optional, the time that creates this coo request
  google.protobuf.Timestamp created_at = 1004;
}

// The StoreChangeOfOwnershipData with planned changes on the store model. All the attributes defined here
// MUST exist in the store table, and have the same data type.
message StoreChangeOfOwnershipData {
  // NOTE: optional params start from 1001.
  // Optional, the payment_account_id that needs to be updated on the store model.
  google.protobuf.Int64Value payment_account_id = 1001;
  // Optional, the business_id that needs to be updated on the store model.
  google.protobuf.Int64Value business_id = 1002;
  // Optional, the contact_emails that needs to be updated on the store model.
  google.protobuf.StringValue contact_emails = 1003;
  // Optional, the error_report_emails that needs to be updated on the store model.
  google.protobuf.StringValue error_report_emails = 1004;
  // Optional, the email that needs to be updated on the store model.
  google.protobuf.StringValue email = 1005;
  // Optional, the phone_number that needs to be updated on the store model.
  google.protobuf.StringValue phone_number = 1006;
  // Optional, the order_protocol that needs to be updated on the store model.
  google.protobuf.StringValue order_protocol = 1007;
}

// The UpsertStoreChangeOfOwnershipRequest that creates or updates a coo record.
message UpsertStoreChangeOfOwnershipRequest {
  // The input store coo record.
  StoreChangeOfOwnership store_change_of_ownership = 1;
}

// The UpsertStoreChangeOfOwnershipResponse that contains the created or updated coo record.
message UpsertStoreChangeOfOwnershipResponse {
  // The output store coo record.
  StoreChangeOfOwnership store_change_of_ownership = 1;
}

// The GetStoreChangeOfOwnershipsByStoreIdRequest that gets a list of coo records.
message GetStoreChangeOfOwnershipsByStoreIdRequest {
  // The store id.
  google.protobuf.Int64Value store_id = 1;
  // Responses will be sorted desc by scheduled_cutoff_time by default.
  google.protobuf.Int64Value limit = 2;

  // NOTE: optional params start from 1001.
  // Optional, the is_active filter flag, passing true will only return active records, false will return inactive ones.
  // Passing null will return all the records.
  google.protobuf.BoolValue is_active = 1001;
  // Optional, the offset store coo record id, used for pagination.
  // Initial value can be either 0 or null.
  // The id itself is excluded.
  google.protobuf.Int64Value offset_store_change_of_ownership_id = 1002;
}

// The GetStoreChangeOfOwnershipsByStoreIdResponse that contains the fetched list of coo records.
message GetStoreChangeOfOwnershipsByStoreIdResponse {
  // The fetched list of store coo records.
  // NOTE: use the largest record id here for pagination, the endpoint does not explicitly return the
  // pagination offset_store_change_of_ownership_id to avoid unnecessary data duplication and potential inconsistency.
  repeated StoreChangeOfOwnership store_change_of_ownerships = 1;
}
