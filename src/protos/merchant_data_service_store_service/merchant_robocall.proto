syntax = "proto3";

package merchant_robocall.v1;

import "google/protobuf/field_mask.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "common/code.proto";
import "common/dayparts.proto";
import "common/date.proto";

option java_multiple_files = true;
option java_generic_services = true;
option java_package = "com.doordash.rpc.merchant_data_service_robocall_service";
option java_outer_classname = "MerchantRobocallProto";
option go_package = "MerchantRobocallProto";

/*
 * MerchantRobocallService service contains functions related robocall tool used to check store's status
 */
service MerchantRobocallService {
    // create a robocall job taking the job configurations and store lists as the input
    rpc CreateRobocallJob(CreateRobocallJobRequest) returns (CreateRobocallJobResponse);

    // cancels an ongoing robocall job
    rpc CancelRobocallJob(CancelRobocallJobRequest) returns (CancelRobocallJobResponse);

    // gets the most n recent robocall jobs
    rpc GetRobocallJobs(GetRobocallJobsRequest) returns (GetRobocallJobsResponse);

    // gets robocall results for a robocall job
    rpc GetRobocallJobResult(GetRobocallJobResultRequest) returns (GetRobocallJobResultResponse);

    // get robocall record by reference id
    rpc GetRobocall(GetRobocallRequest) returns (GetRobocallResponse);

    // get robocall record by primary id
    rpc GetRobocallById(GetRobocallByIdRequest) returns (GetRobocallByIdResponse);

    // updates robocall status (called from webhook endpoints)
    rpc UpdateRobocall(UpdateRobocallRequest) returns (UpdateRobocallResponse);

    // gets robocall results by store id for a robocall job
    rpc GetRobocallJobResultsByStoreId(GetRobocallJobResultsByStoreIdRequest) returns (GetRobocallJobResultsByStoreIdResponse);

    // get pending scheduled robocalls
    rpc GetPendingScheduledRobocalls(GetPendingScheduledRobocallsRequest) returns (GetPendingScheduledRobocallsResponse);
}

// Get pending scheduled robocalls request
message GetPendingScheduledRobocallsRequest {
    // Timestamp used to get all pending robocalls with scheduled time after it, inclusive
    google.protobuf.Timestamp from_timestamp = 1;

    // Timestamp used to get all pending robocalls with scheduled time before it, exclusive
    google.protobuf.Timestamp to_timestamp = 2;
}

// Get pending scheduled robocalls response
message GetPendingScheduledRobocallsResponse {
    // pending scheduled robocalls
    repeated Robocall robocalls = 1;
}

// request to get most recent robocall jobs
message GetRobocallJobsRequest {
    // number of jobs to be returned
    google.protobuf.Int32Value job_count = 1;
}

// response getting most recent robocall jobs
message GetRobocallJobsResponse {
    // robocall job
    repeated RobocallJob jobs = 1;
}

// request to get robocall job result
message GetRobocallJobResultRequest {
    // the id of the job
    google.protobuf.StringValue job_id = 1;
}

// response of robocall job result consisting results for all inputs
message GetRobocallJobResultResponse {
    // results of robocalls
    repeated Robocall results = 1;
    // Job configuration
    RobocallJob configuration = 2;
}

// request to cancel a robocall job
message CancelRobocallJobRequest {
    // the id of the job
    google.protobuf.StringValue job_id = 1;
}

// response for cancel robocall job
message CancelRobocallJobResponse {
    // Status code
    code.Code code = 1;
    // Error message when error
    google.protobuf.StringValue error = 2;
    // Counts of cancelled robocalls
    google.protobuf.Int32Value counts = 3;
}

// update robocall status request
message UpdateRobocallRequest {
    // robocall with updated fields
    Robocall updated_robocall = 1;

    /*
     *  FieldMask provides an option to do partial update:
     *  Service use the items in field mask to update only
     *  party of an object
     *  If field mask is null/empty, service will do partial update
     *  and fields with null value will be ignored.
     */
    google.protobuf.FieldMask update_mask = 2;
}

// update robocall status response
message UpdateRobocallResponse {
    // result of robocall
    Robocall result = 1;
}

// message consisting of robocall job configuration and stores input
message CreateRobocallJobRequest {
    // job configuration i.e. script, type of call, etc.
    RobocallJob configuration = 1;

    // inputs consisting of stores and call_time
    repeated RobocallInput inputs = 2;
}

// response for schedule robocall job
message CreateRobocallJobResponse {
    // the id of the job
    google.protobuf.StringValue job_id = 1;

    // number of robocalls successfully scheduled
    google.protobuf.Int32Value num_success = 2;

    // number of robocalls failed to schedule
    google.protobuf.Int32Value num_errors = 3;
}

// request to get robocall record by reference id
message GetRobocallRequest {
    // robocall service provider's reference id
    google.protobuf.StringValue ref_id = 1;
}

// response getting robocall record
message GetRobocallResponse {
    // robocall record
    Robocall result = 1;
}

// request to get robocall record by primary id
message GetRobocallByIdRequest {
    // robocall's primary id in db
    google.protobuf.StringValue id = 1;
}

// response getting robocall record
message GetRobocallByIdResponse {
    // robocall record
    Robocall result = 1;
}

// request to get robocalls by store id for a robocall job
message GetRobocallJobResultsByStoreIdRequest {
    // the id of the job
    google.protobuf.StringValue job_id = 1;

    // store id
    google.protobuf.StringValue store_id = 2;
}

// response getting robocalls by store id for a robocall job
message GetRobocallJobResultsByStoreIdResponse {
    // robocalls
    repeated Robocall robocalls = 1;
}

// Robocall input for a store
message RobocallInput {
    // store id
    google.protobuf.StringValue store_id = 1;

    // the date call has to be made in store's local time
    date.Date local_call_date = 2;

    // the time call has to be made in store's local time
    dayparts.TimeOfDay local_call_time = 3;

    /*
     * number the call has to be made. If this is set, the call would be made to the provided number.
     * Else, we call the number persisted in store's records.
     */
    google.protobuf.StringValue phone_number = 4;
}

// robocall job configurations such as scripting, call mode, title, actions, etc.
message RobocallJob {
    // uuid of Robocall job configuration
    google.protobuf.StringValue id = 1;

    // type of the robocall.
    RobocallRoutine routine = 2;

    /*
     * default to lenient mode if not provided, where we think the store is open as long as they pick up the phone.
     * Otherwise, if set to 'strict', we would treat a store as open only if they pick up the phone and press the
     * corresponding button(s).
     */
    RobocallMode mode = 3;

    // true to run a reverse robocall where we lift temp deactivations if store confirms that they are open
    google.protobuf.BoolValue is_reverse = 4;

    // only collects response without deactivating any merchants.
    google.protobuf.BoolValue inquiry_only = 5;

    // uses Twilio Automatic Machine Detection feature to find out if phone is picked up by voice machine.
    google.protobuf.BoolValue machine_detection = 6;

    /*
     * skip stores that would be benefit from a robocall, for regular robocall,
     * this means skip already deactivated stores, and for reverse robocall, skip already opened stores
     */
    google.protobuf.BoolValue skip_invalid_stores = 7;

    // skip calls for active stores
    google.protobuf.BoolValue skip_active_stores = 8;

    // skip all the stores that are in the do-not-call black list.
    google.protobuf.BoolValue skip_blacklist_stores = 9;

    // number of minutes to wait before placing a follow up call (when they don't pick up the first one)
    google.protobuf.Int32Value minutes_between_call = 10;

    // max number of calls that can be placed to merchant (in case they don't pick)
    google.protobuf.Int32Value max_attempts = 11;

    // notes that explains the reason of temp deactivation when merchants confirmed store closure.
    google.protobuf.StringValue deactivation_notes_confirm_close = 12;

    // notes that explains the reason of temp deactivation when merchants ignored our robocall.
    google.protobuf.StringValue deactivation_notes_no_response = 13;

    // the greeting message that will be played when merchants pick up the phone.
    google.protobuf.StringValue greeting_script = 14;

    // short text that identifies the purpose of this robocall, e.g. Christmas Eve 5PM robocall for holiday hours
    google.protobuf.StringValue description = 15;

    // created at time
    google.protobuf.Timestamp created_at = 16;

    // country code
    google.protobuf.StringValue country_code = 17;
}

// the type of robocall
enum RobocallRoutine {
    // unspecified
    ROBOCALL_ROUTINE_UNSPECIFIED = 0;

    // robocall type for holidays
    ROBOCALL_ROUTINE_HOLIDAY = 1;

    // robocall type for bad weather situations
    ROBOCALL_ROUTINE_WEATHER = 2;

    // robocall type for inquires
    ROBOCALL_ROUTINE_INQUIRY = 3;

    // robocall type for cancellation
    ROBOCALL_ROUTINE_CANCELLATION = 4;
}

// robocall mode
enum RobocallMode {
    // the lenient mode where we don't deactivate the store if merchant doesn't pick up the phone
    ROBOCALL_MODE_LENIENT_UNSPECIFIED = 0;

    // the strict mode where we deactivate the store if merchant doesn't pick up the phone
    ROBOCALL_MODE_STRICT = 1;

    // unrecognized mode
    ROBOCALL_MODE_UNRECOGNIZED = 2;
}

// robocall record
message Robocall {
    // Primaray id
    google.protobuf.StringValue id = 1;

    // robocall service provider's reference id
    google.protobuf.StringValue ref_id = 2;

    // the time call was scheduled to be made in UTC time
    google.protobuf.Timestamp scheduled_call_time = 3;

    // number the call has to be made
    google.protobuf.StringValue phone_number = 4;

    // caller's number
    google.protobuf.StringValue caller_phone_number = 5;

    // current attempt to call store, defaults to 1 to indicate first call attempt
    google.protobuf.Int32Value attempt = 6;

    // created at time
    google.protobuf.Timestamp created_at = 7;

    // called at time
    google.protobuf.Timestamp called_at = 8;

    // call was answered at time
    google.protobuf.Timestamp answered_at = 9;

    // call was ended at time
    google.protobuf.Timestamp ended_at = 10;

    // status of the call
    google.protobuf.StringValue status = 11;

    // whether call was answered by machine
    google.protobuf.BoolValue answered_by_machine = 12;

    // merchant's response
    google.protobuf.StringValue merchant_response = 13;

    // result of the call
    google.protobuf.StringValue result = 14;

    // merchant robocall job id
    google.protobuf.StringValue job_id = 15;

    // store id
    google.protobuf.StringValue store_id = 16;

    // country code
    google.protobuf.StringValue country_code = 17;

    // time the call is initiated with provider (e.g. through API call)
    google.protobuf.Timestamp placed_at = 18;

    // robocall record was updated at time
    google.protobuf.Timestamp updated_at = 19;

    // the greeting message that will be played when merchants pick up the phone
    google.protobuf.StringValue greeting_script = 20;

    // max number of calls that can be placed to merchant (in case they don't pick)
    google.protobuf.Int32Value max_attempts = 21;

    // code for phone tree navigation when calling this store, e.g., "wwwwwwww4"
    google.protobuf.StringValue phone_tree_navigation_code = 22;

    // robocall mode
    RobocallMode mode = 23;

    // number of minutes to wait before placing a follow up call (when they don't pick up the first one)
    google.protobuf.Int32Value minutes_between_call = 24;

    // only collects response without deactivating any merchants.
    google.protobuf.BoolValue inquiry_only = 25;

    // true to run a reverse robocall where we lift temp deactivations if store confirms that they are open
    google.protobuf.BoolValue is_reverse = 26;

    // deactivation reason id
    google.protobuf.Int32Value deactivation_reason_id = 27;

    // callback url
    google.protobuf.StringValue callback_url = 28;
}
