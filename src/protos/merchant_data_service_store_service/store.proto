syntax = "proto3";

package store_service;

import "common/common.proto";
import "common/mp_catering.proto";
import "common/service_client_config.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "merchant_data_service_business_service/business.proto";
import "merchant_data_service_store_service/address_link.proto";

option go_package = "StoreProto";
option java_generic_services = true;
option java_multiple_files = true;
option java_outer_classname = "StoreProto";
option java_package = "com.doordash.rpc.merchant_data_service_store_service";

// Store service provide gRPC endpoints for store CRUD operations
// supports single and batch operations.
service StoreService {
  option (service_client.client_config).service_name = "merchant-data-service";
  option (service_client.client_config).service_app = "grpc-gateway";

  // Get store by store id
  rpc GetStoreByStoreId(GetStoreByStoreIdRequest) returns (GetStoreByStoreIdResponse);

  // Get store_experiences by store id
  rpc GetStoreExperiencesByStoreId(GetStoreExperiencesByStoreIdRequest) returns (GetStoreExperiencesByStoreIdResponse);

  // Get consumer store by store id
  rpc GetConsumerStoresByStoreIds(GetConsumerStoresByStoreIdsRequest) returns (GetConsumerStoresByStoreIdsResponse);

  // Batch endpoint to get lightweight store data
  rpc GetLightweightStoresByStoreIds(GetLightweightStoresByStoreIdsRequest) returns (GetLightweightStoresByStoreIdsResponse);

  // Get stores by store ids
  rpc GetStoresByStoreIds(GetStoresByStoreIdsRequest) returns (GetStoresByStoreIdsResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 500;
    option (service_client.client_method_config).retry_config.max_attempts = 3;
    option (service_client.client_method_config).circuit_breaker_config.failure_rate_threshold = 0.2;
    option (service_client.client_method_config).circuit_breaker_config.minimum_request_threshold = 50;
    option (service_client.client_method_config).circuit_breaker_config.counter_sliding_window_millis = 60000;
    option (service_client.client_method_config).circuit_breaker_config.circuit_open_window_millis = 30000;
  }

  // Get ids of all stores that share a given unified store id
  rpc GetLinkedStoreIdsByUnifiedPrimaryIds(GetLinkedStoreIdsByUnifiedPrimaryIdsRequest) returns (GetLinkedStoreIdsByUnifiedPrimaryIdsResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 500;
    option (service_client.client_method_config).retry_config.max_attempts = 3;
    option (service_client.client_method_config).circuit_breaker_config.failure_rate_threshold = 0.2;
    option (service_client.client_method_config).circuit_breaker_config.minimum_request_threshold = 50;
    option (service_client.client_method_config).circuit_breaker_config.counter_sliding_window_millis = 60000;
    option (service_client.client_method_config).circuit_breaker_config.circuit_open_window_millis = 30000;
  }

  // Get stores under a business id, always sorted by id
  rpc GetStoresInBusiness(GetStoresInBusinessRequest) returns (GetStoresInBusinessResponse);

  // Get paymentIds under a business id, always sorted by id
  rpc GetDistinctPaymentIdsInBusiness(GetDistinctPaymentIdsInBusinessRequest) returns (GetDistinctPaymentIdsInBusinessResponse);

  // Get stores for a market id, always sorted by id
  rpc GetStoresForMarket(GetStoresForMarketRequest) returns (GetStoresForMarketResponse);

  // Get stores for a starting point id, always sorted by id
  rpc GetStoresForStartingPoint(GetStoresForStartingPointRequest) returns (GetStoresForStartingPointResponse);

  // Get stores under a business id, filtered by the employee access
  rpc GetStoresInBusinessForEmployee(GetStoresInBusinessForEmployeeRequest) returns (GetStoresInBusinessForEmployeeResponse);

  // Get stores under business ids
  rpc GetStoresInBusinesses(GetStoresInBusinessesRequest) returns (GetStoresInBusinessesResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 500;
    option (service_client.client_method_config).retry_config.max_attempts = 3;
    option (service_client.client_method_config).circuit_breaker_config.failure_rate_threshold = 0.2;
    option (service_client.client_method_config).circuit_breaker_config.minimum_request_threshold = 50;
    option (service_client.client_method_config).circuit_breaker_config.counter_sliding_window_millis = 60000;
    option (service_client.client_method_config).circuit_breaker_config.circuit_open_window_millis = 30000;
  }

  // Get stores under business group ids
  rpc GetStoresInBusinessGroups(GetStoresInBusinessGroupsRequest) returns (GetStoresInBusinessGroupsResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 500;
    option (service_client.client_method_config).retry_config.max_attempts = 3;
    option (service_client.client_method_config).circuit_breaker_config.failure_rate_threshold = 0.2;
    option (service_client.client_method_config).circuit_breaker_config.minimum_request_threshold = 50;
    option (service_client.client_method_config).circuit_breaker_config.counter_sliding_window_millis = 60000;
    option (service_client.client_method_config).circuit_breaker_config.circuit_open_window_millis = 30000;
  }

  // Update store by store id
  rpc UpdateStoreByStoreId(UpdateStoreByStoreIdRequest) returns (UpdateStoreByStoreIdResponse);

  // Update store's dynamic property by store id
  rpc UpdateStoreDynamicProperties(UpdateStoreDynamicPropertiesRequest) returns (UpdateStoreDynamicPropertiesResponse);

  // Get store count by business and business group ids
  rpc GetStoreCountByIds(GetStoreCountByIdsRequest) returns (GetStoreCountByIdsResponse);

  // Get currencies used by stores associated with business and business group ids
  rpc GetCurrenciesByIds(GetCurrenciesByIdsRequest) returns (GetCurrenciesByIdsResponse);

  // Get currencies by different entities
  rpc GetCurrenciesByIdsV2(GetCurrenciesByIdsV2Request) returns (GetCurrenciesByIdsV2Response);

  // Extraction the following functionality to MDS as an on demand tool
  // https://github.com/doordash/doorstep-django/blob/7a42d34f6d3133ef03a0c2381e7f45f7c7abd2c1/doordash/merchant/prediction/tasks.py#L37
  // Wrong starting points happens very frequently so we want to create a simple tool to handle issues in the interim
  rpc RecalculateStoreStartingPoints(RecalculateStoreStartingPointsRequest) returns (RecalculateStoreStartingPointsResponse);

  // Get Permanent deactivations by store id
  rpc GetPermanentDeactivationsByStoreId(GetPermanentDeactivationsByStoreIdRequest) returns (GetPermanentDeactivationsByStoreIdResponse);

  // Get merchant info by user id
  rpc GetMerchantInfoByUserId(GetMerchantInfoByUserIdRequest) returns (GetMerchantInfoByUserIdResponse);

  // Get store extension by store id
  rpc GetStoreExtensionByStoreId(GetStoreExtensionByStoreIdRequest) returns (GetStoreExtensionByStoreIdResponse);

  // Get store extensions by store ids (batch)
  rpc GetStoreExtensionsByStoreIds(GetStoreExtensionsByStoreIdsRequest) returns (GetStoreExtensionsByStoreIdsResponse);

  // Upsert store extension by store id
  rpc UpsertStoreExtensionByStoreId(UpsertStoreExtensionByStoreIdRequest) returns (UpsertStoreExtensionByStoreIdResponse);

  // Get stores linked to a store group with a given id
  rpc GetStoresByStoreGroupId(GetStoresByStoreGroupIdRequest) returns (stream Store);

  // Updates the coordinates of a store to the values specified in the request
  // TODO: (GINT-1086) Add Hermes config
  rpc UpdateStoreLocation(UpdateStoreLocationRequest) returns (UpdateStoreLocationResponse);

  // Get the Merchant Tip eligibility for a store
  rpc GetStoreMxTipEligibility(GetStoreMxTipEligibilityRequest) returns (GetStoreMxTipEligibilityResponse);

  // Toggle the Merchant Tip on/off for a list of stores
  rpc UpdateStoreMxTipPrefInBulk(UpdateStoreMxTipPrefInBulkRequest) returns (UpdateStoreMxTipPrefInBulkResponse);

  // Get whether a business has any stores with merchant tips enabled
  rpc IsMxTipsEnabledForAnyStoreInBusiness(IsMxTipsEnabledForAnyStoreInBusinessRequest) returns (IsMxTipsEnabledForAnyStoreInBusinessResponse);

  // Returns if a store has ever turned on merchant tips at some point in the past
  rpc HasMerchantTipsBeenEnabledForStore(HasMerchantTipsBeenEnabledForStoreRequest) returns (HasMerchantTipsBeenEnabledForStoreResponse);

  // Returns whether any businesses or stores within a business group have merchant tips enabled
  rpc IsMxTipsEnabledForAnyStoreInBusinessGroup(IsMxTipsEnabledForAnyStoreInBusinessGroupRequest) returns (IsMxTipsEnabledForAnyStoreInBusinessGroupResponse);

  // Get store ids by payment account id
  rpc GetStoreInfosByPaymentAccountId(GetStoreInfosByPaymentAccountIdRequest) returns (GetStoreInfosByPaymentAccountIdResponse);

  //Get store deactivation exemption status by storeId
  rpc GetStoreDeactivationExemptionStatus(GetStoreDeactivationExemptionStatusRequest) returns (GetStoreDeactivationExemptionResponse);

  // Get all store temporary deactivation reasons
  rpc GetAllStoreTemporaryDeactivationReasons(GetAllStoreTemporaryDeactivationReasonsRequest) returns (GetAllStoreTemporaryDeactivationReasonsResponse);

  // Get all store deactivation reasons
  rpc GetAllStoreDeactivationReasons(GetAllStoreDeactivationReasonsRequest) returns (GetAllStoreDeactivationReasonsResponse);

  // Get store payment account ids by store ids, store ids should be no more than 1000.
  rpc GetStorePaymentAccountIds(GetStorePaymentAccountIdsRequest) returns (GetStorePaymentAccountIdsResponse);

  // create new store disclaimer
  rpc CreateStoreDisclaimer(CreateStoreDisclaimerRequest) returns (CreateStoreDisclaimerResponse);

  // delete new store disclaimer
  rpc DeleteStoreDisclaimer(DeleteStoreDisclaimerRequest) returns (DeleteStoreDisclaimerResponse);

  // update new store disclaimer
  rpc UpdateStoreDisclaimer(UpdateStoreDisclaimerRequest) returns (UpdateStoreDisclaimerResponse);

  // get new store disclaimer
  rpc GetStoreDisclaimer(GetStoreDisclaimerRequest) returns (GetStoreDisclaimerResponse);

  // Get stores under business id and submarket id
  rpc GetStoresByBusinessIdAndSubmarketId(GetStoresByBusinessIdAndSubmarketIdRequest) returns (GetStoresByBusinessIdAndSubmarketIdResponse);

  // Get auto release fields from store and business
  rpc GetAutoReleaseConfig(GetAutoReleaseConfigRequest) returns (GetAutoReleaseConfigResponse);

  // get all currently temporary deactivated stores by reason id
  rpc GetDeactivatedStoresByReasonId(GetDeactivatedStoresByReasonIdRequest) returns (GetDeactivatedStoresByReasonIdResponse);

  // get stores by business id and merchant supplied id (msid)
  rpc GetStoresByBusinessIdAndMerchantSuppliedId(GetStoresByBusinessIdAndMerchantSuppliedIdRequest) returns (GetStoresByBusinessIdAndMerchantSuppliedIdResponse);

  // get store by name and address
  rpc GetStoresByNameAndAddressId(GetStoresByNameAndAddressIdRequest) returns (GetStoresByNameAndAddressIdResponse);

  // Get store disclaimers by Store Id
  rpc GetStoreDisclaimersByStoreId(GetStoreDisclaimersByStoreIdRequest) returns (GetStoreDisclaimersByStoreIdResponse);

  // Delete the link between a store and a store disclaimer.
  rpc DeleteStoreDisclaimerLinkById(DeleteStoreDisclaimerLinkByIdRequest) returns (DeleteStoreDisclaimerLinkByIdResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 2000;
    option (service_client.client_method_config).retry_config.max_attempts = 1;
  }

  // Delete the link between a store and a store disclaimer.
  rpc DeleteStoreDisclaimerLinkByStoreDisclaimerIdAndStoreId(DeleteStoreDisclaimerLinkByStoreDisclaimerIdAndStoreIdRequest) returns (DeleteStoreDisclaimerLinkByStoreDisclaimerIdAndStoreIdResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 2000;
    option (service_client.client_method_config).retry_config.max_attempts = 1;
  }

  // Get store relations by starting point ids
  rpc GetActiveNonTestStoreIdsByStartingPointIds(GetActiveNonTestStoreIdsByStartingPointIdsRequest) returns (GetStoreIdsResponse);

  // Get store relations by address ids
  rpc GetActiveNonTestStoreIdsByAddressIds(GetActiveNonTestStoreIdsByAddressIdsRequest) returns (GetStoreIdsResponse);
}

message GetStoresByNameAndAddressIdRequest {
  string name = 1;
  int64 address_id = 2;

  // FieldMask provides an option to create query/search parameters that return partially populated objects.
  // Service only returns the properties which shows in field mask.
  // This field is optional (BUT STRONGLY RECOMMENDED), if it is null/empty, service will return the whole object.
  // If testing in Kreya, field mask is a comma separated list of camelCase fields to return, without spaces.
  // e.g. "name,phoneNumber"
  // However, field mask should be specified in snake case in the code, like phone_number
  google.protobuf.FieldMask query_mask = 3;
  google.protobuf.Int32Value offset = 4;
  google.protobuf.Int32Value limit = 5;
}

message GetStoresByNameAndAddressIdResponse {
  repeated Store stores = 1;
}

// Request to get payment account ids by store ids.
// One store can only have one payment account id, and store ids requested would be limit to 1000 in code.
message GetStorePaymentAccountIdsRequest {
  repeated int64 store_ids = 1;
}

message StorePaymentAccountInfo {
  int64 store_id = 1;
  google.protobuf.Int64Value payment_account_id = 2;
}

// Response for GetStorePaymentAccountIds API, includes store ids and corresponding payment account ids.
message GetStorePaymentAccountIdsResponse {
  repeated StorePaymentAccountInfo store_payment_accounts = 1;
}

// Request of get store by id
message GetStoreByStoreIdRequest {
  string store_id = 1;

  // FieldMask provides an option to create query/search parameters that return partially populated objects.
  // Service only returns the properties which shows in field mask.
  // This field is optional (BUT STRONGLY RECOMMENDED), if it is null/empty, service will return the whole object.
  // If testing in Kreya, field mask is a comma separated list of camelCase fields to return, without spaces.
  // e.g. "name,phoneNumber"
  // However, field mask should be specified in snake case in the code, like phone_number
  google.protobuf.FieldMask query_mask = 2;

  // Optional experience context used to fetch experience
  // specific override values.
  common.ConsumerExperienceContext experience_context = 3;
}

// Response of get store by id
message GetStoreByStoreIdResponse {
  Store store = 1;
}

// Request of get stores by ids
message GetStoresByStoreIdsRequest {
  // the count of store_ids can not more than 50
  repeated string store_ids = 1;

  // FieldMask provides an option to create query/search parameters that return partially populated objects.
  // Service only returns the properties which shows in field mask.
  // This field is optional (BUT STRONGLY RECOMMENDED), if it is null/empty, service will return the whole object.
  // If testing in Kreya, field mask is a comma separated list of camelCase fields to return, without spaces.
  // e.g. "name,phoneNumber"
  // However, field mask should be specified in snake case in the code, like phone_number
  google.protobuf.FieldMask query_mask = 2;

  // Optional experience context used to fetch experience
  // specific override values.
  common.ConsumerExperienceContext experience_context = 3;
}

// Response of get stores by ids
message GetStoresByStoreIdsResponse {
  repeated Store stores = 1;
}

// Request to get linked store ids by unified primary ids.
message GetLinkedStoreIdsByUnifiedPrimaryIdsRequest {
  // List of unfieid primary store ids for the query.
  repeated string store_ids = 1;
}

// Response to get linked store ids by unified primary ids.
message GetLinkedStoreIdsByUnifiedPrimaryIdsResponse {
  // Linked stores will be in a map from primary id to linked ids.
  map<string, LinkedStoreIds> linked_store_ids = 1;
}

// Request of get store_experience by id
message GetStoreExperiencesByStoreIdRequest {
  int64 store_id = 1;

  // optional, experiences to retrieve for the given storeId
  repeated common.Experience experiences = 1001;
}

// Response of get store_experience by id
message GetStoreExperiencesByStoreIdResponse {
  int64 store_id = 1;

  // combo of experience to store
  // store only contains exp-aware properties
  // if an experience does not corresponding exp-aware store data,
  // the store_experience map will not contain the experience
  // note: only non doordash experience will be returned
  repeated StoreExperience store_experiences = 2;
}

// combo of store and experience, store only contians exp-aware properties
message StoreExperience {
  common.Experience experience = 1;
  Store store = 2;
}

// Contains the list of linked store ids, including the primary store id.
message LinkedStoreIds {
  // Linked store ids.
  repeated string store_ids = 1;
}

// Request of get consumer stores by ids
message GetConsumerStoresByStoreIdsRequest {
  repeated string store_ids = 1;
  // whether to parallel the data dependencies retrieving, default is false
  bool use_parallelism = 2;

  // Optional experience context used to fetch experience specific override values.
  // Design doc: https://docs.google.com/document/d/1K5E2duayEuV6Akt4rx0r3nOQgmJNrYkUxaFneCRLhac/edit
  common.ConsumerExperienceContext experience_context = 1001;
}

// Response of get consumer stores by ids
message GetConsumerStoresByStoreIdsResponse {
  repeated ConsumerStore stores = 1;
}

message GetLightweightStoresByStoreIdsRequest {
  repeated string store_ids = 1;

  // This field is optional, if it is null/empty, service will return the whole object.
  // It's partially implemented at the moment, reach out to the team channel that linked for the release info
  // to learn the latest updates.
  google.protobuf.FieldMask query_mask = 2;

  // Whether to parallel the data dependencies retrieving, default is false
  bool use_parallelism = 3;

  // Optional experience context used to fetch experience specific override values.
  // Design doc: https://docs.google.com/document/d/1K5E2duayEuV6Akt4rx0r3nOQgmJNrYkUxaFneCRLhac/edit
  common.ConsumerExperienceContext experience_context = 1001;
}

message GetLightweightStoresByStoreIdsResponse {
  repeated LightWeightStore stores = 1;
}

// Request of get stores for market
message GetStoresForMarketRequest {
  // FieldMask provides an option to create query/search parameters that return partially populated objects.
  // Service only returns the properties which shows in field mask.
  // This field is optional (BUT STRONGLY RECOMMENDED), if it is null/empty, service will return the whole object.
  // If testing in Kreya, field mask is a comma separated list of camelCase fields to return, without spaces.
  // e.g. "name,phoneNumber"
  // However, field mask should be specified in snake case in the code, like phone_number
  google.protobuf.FieldMask query_mask = 1;
  string market_id = 2;
  // optional param to filter by is_active value.
  google.protobuf.BoolValue is_active = 3;

  // Pagination params, offset is where to begin the fetch,
  // limit is how many to fetch.
  google.protobuf.Int32Value offset = 4;
  google.protobuf.Int32Value limit = 5;
}

// Response of get stores in business
message GetStoresForMarketResponse {
  repeated Store stores = 1;
}

// Request of get stores for starting point
message GetStoresForStartingPointRequest {
  // FieldMask provides an option to create query/search parameters that return partially populated objects.
  // Service only returns the properties which shows in field mask.
  // This field is optional (BUT STRONGLY RECOMMENDED), if it is null/empty, service will return the whole object.
  // If testing in Kreya, field mask is a comma separated list of camelCase fields to return, without spaces.
  // e.g. "name,phoneNumber"
  // However, field mask should be specified in snake case in the code, like phone_number
  google.protobuf.FieldMask query_mask = 1;
  string starting_point_id = 2;
  // optional param to filter by is_active value.
  google.protobuf.BoolValue is_active = 3;

  // Pagination params, offset is where to begin the fetch,
  // limit is how many to fetch.
  google.protobuf.Int32Value offset = 4;
  google.protobuf.Int32Value limit = 5;
}

// Response of get stores for starting point
message GetStoresForStartingPointResponse {
  repeated Store stores = 1;
}

// Request of get stores in business
message GetStoresInBusinessRequest {
  // FieldMask provides an option to create query/search parameters that return partially populated objects.
  // Service only returns the properties which shows in field mask.
  // This field is optional (BUT STRONGLY RECOMMENDED), if it is null/empty, service will return the whole object.
  // If testing in Kreya, field mask is a comma separated list of camelCase fields to return, without spaces.
  // e.g. "name,phoneNumber"
  // However, field mask should be specified in snake case in the code, like phone_number
  google.protobuf.FieldMask query_mask = 1;
  string business_id = 2;
  // optional param to filter by is_active value.
  google.protobuf.BoolValue is_active = 3;

  // Pagination params, offset is where to begin the fetch,
  // limit is how many to fetch.
  google.protobuf.Int32Value offset = 4;
  google.protobuf.Int32Value limit = 5;

  // Optional experience context used to fetch experience
  // specific override values.
  common.ConsumerExperienceContext experience_context = 1000;
}

// Response of get stores in business
message GetStoresInBusinessResponse {
  repeated Store stores = 1;
}

//Request of get payment ids in business.
message GetDistinctPaymentIdsInBusinessRequest {
  string business_id = 1;

  // Pagination params, offset is where to begin the fetch,
  // limit is how many to fetch.
  google.protobuf.Int32Value offset = 2;
  google.protobuf.Int32Value limit = 3;
}

// Response of get paymentIds in Business
message GetDistinctPaymentIdsInBusinessResponse {
  repeated google.protobuf.Int32Value payment_account_id = 1;
}

// Request of get stores in business for employee
message GetStoresInBusinessForEmployeeRequest {
  // FieldMask provides an option to create query/search parameters that return partially populated objects.
  // Service only returns the properties which shows in field mask.
  // This field is optional (BUT STRONGLY RECOMMENDED), if it is null/empty, service will return the whole object.
  // If testing in Kreya, field mask is a comma separated list of camelCase fields to return, without spaces.
  // e.g. "name,phoneNumber"
  // However, field mask should be specified in snake case in the code, like phone_number
  google.protobuf.FieldMask query_mask = 1;

  // business_id is deprecated
  // string business_id = 2;
  google.protobuf.UInt64Value business_employee_id = 3;

  // Pagination params, offset is where to begin the fetch,
  // limit is how many to fetch.
  google.protobuf.Int32Value offset = 4;
  google.protobuf.Int32Value limit = 5;
}

message StoreAndAddress {
  Store store = 1;
  google.protobuf.StringValue address = 2;
  google.protobuf.StringValue city = 3;
}

// Response of get stores in business for employee
message GetStoresInBusinessForEmployeeResponse {
  repeated StoreAndAddress stores_and_addresses = 1;
}

// Request of get stores in businesses
message GetStoresInBusinessesRequest {
  // FieldMask provides an option to create query/search parameters that return partially populated objects.
  // Service only returns the properties which shows in field mask.
  // This field is optional (BUT STRONGLY RECOMMENDED), if it is null/empty, service will return the whole object.
  // If testing in Kreya, field mask is a comma separated list of camelCase fields to return, without spaces.
  // e.g. "name,phoneNumber"
  // However, field mask should be specified in snake case in the code, like phone_number
  google.protobuf.FieldMask query_mask = 1;
  repeated string business_ids = 2;
  // optional param to filter by is_active value.
  google.protobuf.BoolValue is_active = 3;

  // Pagination params, offset is where to begin the fetch,
  // limit is how many to fetch.
  google.protobuf.Int32Value offset = 4;
  google.protobuf.Int32Value limit = 5;

  // optional param to filter by address_id value.
  google.protobuf.Int64Value address_id = 1000;

  // Optional experience context used to fetch experience
  // specific override values.
  common.ConsumerExperienceContext experience_context = 1001;
}

// Response of get stores in businesses
message GetStoresInBusinessesResponse {
  repeated Store stores = 1;
}

// Request of get stores in business group ids
message GetStoresInBusinessGroupsRequest {
  // FieldMask provides an option to create query/search parameters that return partially populated objects.
  // Service only returns the properties which shows in field mask.
  // This field is optional (BUT STRONGLY RECOMMENDED), if it is null/empty, service will return the whole object.
  // If testing in Kreya, field mask is a comma separated list of camelCase fields to return, without spaces.
  // e.g. "name,phoneNumber"
  // However, field mask should be specified in snake case in the code, like phone_number
  google.protobuf.FieldMask query_mask = 1;
  repeated string business_group_ids = 2;
  // optional param to filter by is_active value.
  google.protobuf.BoolValue is_active = 3;

  // Pagination params, offset is where to begin the fetch,
  // limit is how many to fetch.
  google.protobuf.Int32Value offset = 4;
  google.protobuf.Int32Value limit = 5;

  // Optional experience context used to fetch experience
  // specific override values.
  common.ConsumerExperienceContext experience_context = 1000;
}

// Response of get stores in business group ids
message GetStoresInBusinessGroupsResponse {
  // deprecated, will remove after finishing migrating to business_group_stores
  repeated Store stores = 1;
  repeated BusinessGroupStores business_group_stores = 2;
}

message BusinessGroupStores {
  google.protobuf.StringValue business_group_id = 1;
  repeated Store stores = 2;
}

// Request of update store by id
message UpdateStoreByStoreIdRequest {
  // The targeted to be updated store id.
  Store store = 1;

  // FieldMask provides an option to create query/search parameters that return partially populated objects.
  // Service only returns the properties which shows in field mask.
  // This field is MANDATORY, if it is null/empty, service will do nothing.
  // If testing in Kreya, field mask is a comma separated list of camelCase fields to return, without spaces.
  // e.g. "name,phoneNumber"
  // However, field mask should be specified in snake case in the code, like phone_number
  google.protobuf.FieldMask update_mask = 2;

  // Optional, indicate the context of the change, e.g. Change of ownership
  StoreChangeContext context = 1001;

  // Optional, indicate the experience for store exp-aware properties to update
  common.ConsumerExperienceContext experience_context = 1002;
}

// Context for store update, used in StoreChangeLog
enum StoreChangeContext {
  // this is default
  STORE_CHANGE_CONTEXT_UNSPECIFIED = 0;
  // this is COO
  STORE_CHANGE_CONTEXT_CHANGE_OF_OWNERSHIP = 1;
}

// Response of update store by id
message UpdateStoreByStoreIdResponse {
  Store store = 1;
  // To align with the request so that clients can understand what experience for the store is returned
  common.ConsumerExperienceContext experience_context = 1002;
}

// All types in proto3 are:
//     1. Optional
//     2. NEVER null
//     3. Initialized with default values: 0 or empty string
//
// Use non-primitive types, ie well-known types, with FieldMask to support NULL value
// Proto3 provides wrappers for all primitive types if you need this
// behavior with primitives.
//      String => StringValue
//      Integer=> Int32Value
// https://developers.google.com/protocol-buffers/docs/reference/csharp/namespace/google/protobuf/well-known-types
//
// Field names in Message are the same as ones in db, which helps to build sql to support field projection.
message Store {
  google.protobuf.StringValue id = 1; // required
  google.protobuf.StringValue stripe_recipient_id = 2;
  google.protobuf.StringValue stripe_managed_account_id = 3;
  google.protobuf.BoolValue stripe_managed_account_required = 4;
  google.protobuf.StringValue stripe_bank_name = 5;
  google.protobuf.StringValue stripe_bank_last4 = 6;
  google.protobuf.Timestamp stripe_last_updated_at = 7;
  google.protobuf.Int32Value delivery_radius = 8;
  google.protobuf.Timestamp created_at = 9;
  google.protobuf.StringValue name = 10;
  google.protobuf.StringValue phone_number = 11;
  google.protobuf.BoolValue is_active = 12;
  google.protobuf.Timestamp activated_at = 13;
  google.protobuf.Int32Value max_order_size = 14;
  google.protobuf.FloatValue composite_score = 15;
  google.protobuf.Int32Value price_range = 16;
  google.protobuf.Int32Value custom_delivery_fee = 17;
  google.protobuf.BoolValue is_partner = 18; // Will be deprecated later
  google.protobuf.StringValue partnership_ordering_instructions = 19;
  google.protobuf.BoolValue should_notify_dasher_for_pickup = 20;
  google.protobuf.StringValue notes = 21;
  google.protobuf.StringValue search_terms = 22;
  google.protobuf.StringValue pickup_checklist = 23;
  google.protobuf.StringValue fax_number = 24;
  google.protobuf.StringValue email = 25;
  google.protobuf.StringValue contact_emails = 26;
  google.protobuf.StringValue ein = 27;
  google.protobuf.Int32Value minimum_prep_time = 28;
  google.protobuf.Int32Value maximum_prep_time = 29;
  google.protobuf.Int32Value estimated_prep_time = 30;
  google.protobuf.Timestamp estimated_prep_time_timestamp = 31;
  google.protobuf.Int32Value estimated_dasher_assignment_to_pickup_latency = 32;
  google.protobuf.Timestamp estimated_dasher_assignment_to_pickup_latency_time = 33;
  google.protobuf.FloatValue override_tax_rate = 34;
  google.protobuf.BoolValue no_sales_tax = 35;
  google.protobuf.StringValue statement_descriptor = 36;
  google.protobuf.Int32Value batching_aggression = 37;
  google.protobuf.Int32Value fiscal_week_start_day = 38;
  google.protobuf.Int32Value address_id = 39;
  google.protobuf.Int32Value business_id = 40;
  google.protobuf.Int32Value market_id = 41;
  google.protobuf.Int32Value submarket_id = 42;
  google.protobuf.StringValue yelp_business_id = 43;
  google.protobuf.StringValue error_report_emails = 44;
  google.protobuf.StringValue error_report_frequency = 45;
  google.protobuf.Int32Value starting_point_id = 46;
  google.protobuf.Int32Value catering_pickup_address_id = 47;
  google.protobuf.FloatValue delivery_request_commission_rate = 48;
  google.protobuf.Int32Value delivery_request_max_delivery_fee = 49;
  google.protobuf.Int32Value delivery_request_min_delivery_fee = 50;
  google.protobuf.BoolValue is_exempt_from_chargebacks = 51;
  google.protobuf.Int32Value tier_level = 52;
  google.protobuf.BoolValue hide_from_homepage_list = 53;
  google.protobuf.Int32Value payment_account_id = 54;
  google.protobuf.Int32Value stripe_customer_id = 55;
  google.protobuf.StringValue catering_contact_emails = 56;
  google.protobuf.StringValue catering_phone_number = 57;
  google.protobuf.StringValue blacklisted_order_protocols = 58;
  google.protobuf.BoolValue only_assign_deliveries_after_order_place = 59;
  google.protobuf.BoolValue exclude_from_marketing = 60;
  google.protobuf.StringValue confirm_protocol = 61;
  google.protobuf.StringValue order_protocol = 62;
  google.protobuf.BoolValue accept_dasher_receipts = 63;
  google.protobuf.StringValue merchant_supplied_id = 64;
  google.protobuf.Int32Value payment_protocol_id = 65;
  google.protobuf.Int32Value special_instructions_max_length = 66;
  google.protobuf.Int32Value max_delivery_radius = 67;
  google.protobuf.BoolValue is_test = 68;
  google.protobuf.StringValue phone_tree_navigation_code = 69;
  google.protobuf.StringValue delivery_radius_tier = 70;
  google.protobuf.StringValue drive_store_id = 71;
  google.protobuf.BoolValue offers_pickup = 72;
  google.protobuf.StringValue creation_method = 73;
  google.protobuf.Int32Value programmatic_delivery_fee = 74;
  google.protobuf.BoolValue offers_delivery = 75;
  google.protobuf.BoolValue is_consumer_subscription_eligible = 76;
  google.protobuf.StringValue carousel_header_image = 77;
  google.protobuf.Int32Value cod_payment_account_id = 78;
  google.protobuf.BoolValue fulfills_own_deliveries = 79;
  google.protobuf.BoolValue provides_dasher_tracking = 80;
  google.protobuf.BoolValue provides_external_courier_tracking = 81;
  google.protobuf.StringValue salesforce_id = 82;
  google.protobuf.StringValue salesforce_lead_id = 83;
  google.protobuf.Int32Value max_participants_for_group_cart = 84;
  google.protobuf.StringValue activation_source = 85;
  google.protobuf.BoolValue fulfills_own_deliveries_disabled = 86;
  google.protobuf.StringValue max_delivery_polygon = 87;
  google.protobuf.Timestamp subscription_commission_trial_end_time = 88;
  google.protobuf.BoolValue cancel_dashpass_trial = 89;
  google.protobuf.Timestamp subscription_commission_trial_start_time = 90;
  google.protobuf.BoolValue is_in_demand_test = 91;
  google.protobuf.Timestamp updated_at = 92;
  google.protobuf.FloatValue auto_release_distance = 93;
  google.protobuf.BoolValue auto_release_enabled = 94;
  google.protobuf.BoolValue auto_release_from_store_enabled = 95;
  google.protobuf.StringValue experience = 96;
  google.protobuf.StringValue operation_metadata = 97;
  google.protobuf.BoolValue merchant_tips_enabled = 98;
  repeated common.PaymentMethod payment_methods = 99;
  google.protobuf.StringValue unified_primary_store_id = 100;
  google.protobuf.BoolValue is_shipping_only = 101 [deprecated = true];
  google.protobuf.BoolValue is_price_matching_enabled = 102;
  google.protobuf.BoolValue has_robots = 103;
  google.protobuf.BoolValue is_alcohol_addendum_signed = 104;
  // Nullable String to hold new store uuid
  google.protobuf.StringValue store_uuid = 105;
  google.protobuf.StringValue bundle_experience = 106;
  google.protobuf.StringValue customer_support_provider = 107;
  google.protobuf.StringValue hide_from_homepage_list_experience = 108;
  StoreDynamicProperties dynamic_properties = 109;
  NewVerticalsStoreDynamicProperties new_verticals_dynamic_properties = 110;
  // store contact information
  ContactDetailsDynamicProperties contact_details_dynamic_properties = 111;
  // Consult #eng-mx-platform before adding properties to this message, see: StoreDynamicProperties
}

// Additional sparse properties.
// See design doc: https://docs.google.com/document/d/1GuVg9C32Aw6xX94dTSqrZ6cdg8Vz8PWzmi5y7Lugddc/edit?usp=sharing
// Any added property needs to either link to doc or add comment to explain the usage.
message StoreDynamicProperties {
  // 1-8 Ship Anywhere related properties https://docs.google.com/document/d/1PPepY_4_n9oDYJfL70RaNVNDXz-GerHVDFMGAAx1il4/edit?usp=sharing
  google.protobuf.Int32Value delivery_service_level = 1;

  // mx_shipment_days are the days of the week on which Mx ships during the week when order is received. in format of 1,2,4,5
  google.protobuf.StringValue mx_shipment_days = 2;
  google.protobuf.Int32Value mx_shipment_buffer_days = 3;
  google.protobuf.StringValue mx_education_store_page_headline = 4;
  google.protobuf.StringValue mx_education_store_description = 5;
  common.KitchenCapacityType active_kitchen_capacity = 6;
  // New Vertical of the store https://docs.google.com/document/d/1aGVrZ716k8u70NCE3dhjLXg7M_GxAwsmg7seSou_HI8/edit?usp=sharing
  google.protobuf.StringValue ads_vertical = 7;
  // Design doc: https://docs.google.com/document/d/1C50RFklpcZWbe0rB1K7ZHqQ2CPgjXrxVq4Be0urrbug/edit?usp=sharing
  google.protobuf.Int32Value padding_minutes_asap_open = 8;
  google.protobuf.Int32Value padding_minutes_asap_close = 9;
  google.protobuf.Int32Value padding_minutes_scheduled_open = 10;
  google.protobuf.Int32Value padding_minutes_scheduled_close = 11;
  // New Shipping Only to distinguish between shipping stores and regular stores
  // https://docs.google.com/document/d/1IkwApnHQxf9JrhWEepRV49oKUcEFZg_y4NA2p54Edhw/edit#heading=h.8jlzy09dyxly
  google.protobuf.BoolValue is_shipping_only = 12;
  google.protobuf.BoolValue is_thursday_expedite = 13;

  // mx_blackout_days are the dates on which Mx can't ship due to holiday closures or some other closures.
  // We will receive the input as a comma separated epochs Eg: 1232132, 1212322, 12321
  google.protobuf.StringValue mx_blackout_days = 14;
  // is_sf_loyalty_program_corp_funded is a tag to determine whether the loyalty rewards applied to the storefront order
  // are funded by corporate/non-corp like merchant or franchisee
  google.protobuf.BoolValue is_sf_loyalty_program_corp_funded = 15;

  // is_food_truck is a tag to identify stores that are food trucks
  google.protobuf.BoolValue is_food_truck = 16;

  // netsuite_id is a tag to determine the NetSuite account associated with the store/business
  google.protobuf.StringValue netsuite_id = 17;

  // Mx Bottom Sheet details are || delimited strings of Ship Anywhere stores which specify the delivery disclaimers
  // Examples: Carlo's Bakery ships Monday - Friday of each week with two day shipping
  // Orders cannot be shipped to P.O. Boxes
  // Orders cannot be shipped to Alaska and Hawaii
  google.protobuf.StringValue mx_bottom_sheet_details = 18;

  // Add snap merchant_id of the store https://docs.google.com/document/d/1OQrHNtVTK7GXBiw5vyQ_8BW9l3oKdYpT0sd0PzV33Co/edit#heading=h.wwi7f6eqrawb
  string snap_merchant_id = 19;

  // Add catering experience for catering stores
  common.catering.v1.CateringExperience catering_experience = 20;

  // A flag to indicate if this store is locked by fraud team.
  // Used for preventing offer_pickup changed by other teams.
  google.protobuf.BoolValue is_fraud_locked = 21;

  // A string type field to be used to filter out a Mx from all surfaces
  // except if Cx search by Mx name.
  google.protobuf.StringValue hide_from_all_list_experience = 22;

  // Mx cutoff time in seconds since midnight for shipping the order the same day (based on Mx's timezone) Eg: 3600 is 1AM
  google.protobuf.Int32Value shipping_cutoff_local_time_seconds = 23;

  // Shipping Carriers
  // We will receive the input as a comma separated list of carrier names Eg: "UPS, FedEx, USPS"
  google.protobuf.StringValue shipping_carrier_options = 24;

  // Indicate if a store is licensed from a brand or not.
  // Design doc: https://docs.google.com/document/d/1TteO4iplWe_V6C9OiTxIRx3eS_pjfqbvxWZzrBzRW0s
  google.protobuf.BoolValue is_licensed_brand = 25;

  // Temporary field to indicate whether an NV store has been migrated to
  // retail-inventory-service. This will be utilized to block access for the
  // same store to DIME, SSME and bulk menu update tool.
  google.protobuf.BoolValue has_migrated_to_nv_tooling = 26;

  // Indicate if a store is virtual brand or not
  google.protobuf.BoolValue is_virtual_brand = 27;

  // If the store is virtual brand, this field indicates the host mx's store id.
  //   The host mx may not be on dd, if so, this field should be left empty.
  // If the store is not virtual brand, this field should be left empty.
  google.protobuf.StringValue host_mx_store_id = 28;

  // Indicate if manager control is enabled for store
  google.protobuf.BoolValue manager_control_enabled = 29;

  // PIN for manager access control, contains 4 digits
  google.protobuf.StringValue manager_control_pin = 30;

  // Indicate if pause store feature is enabled for manager control
  google.protobuf.BoolValue manager_control_pause_store_enabled = 31;

  // Indicate if store has the ability to add daily limited inventory items
  google.protobuf.BoolValue mx_daily_limit = 32;

  // Add HSA/FSA merchant_id of the store https://docs.google.com/document/d/1kvtpHmLBFPNZxyMKGot9vb_5tlIIZICxN-aF0eyKXHE/edit#heading=h.vsyi36l41pb6
  google.protobuf.StringValue hsa_fsa_merchant_id = 33;

  // Indicate if the store is a supply chain store https://docs.google.com/document/d/19kNoKJwhX18_RytKZ2HesQipoewtruQ6mo02duJYOVk/edit?usp=sharing
  google.protobuf.BoolValue is_supply_chain = 34;

  // Indicate if alcohol tagged items are disabled from flowing through menus for store (deprecated, see: is_alcohol_visible)
  google.protobuf.BoolValue is_alcohol_hidden = 35 [deprecated = true];

  // Indicate if the store is enabled to use dynamic padding for store hours
  google.protobuf.BoolValue is_dynamic_padding_enabled = 36;

  // Indicate if the store is enabled with optional banking during onboarding https://docs.google.com/document/d/1mCu7_KZRJeYjd_mWxzTapiRri2ZRLlD3atsqofiVYjU/edit
  google.protobuf.BoolValue onboarding_optional_banking_enabled = 37;

  // Indicate if alcohol tagged items are enabled to flow through menus for store https://docs.google.com/document/d/1j7gMrrrYll2iAx2gpzjXFMluDwsp-woWQu9wlX-dslg
  google.protobuf.BoolValue is_alcohol_visible = 38;

  // Indicate if the store has enabled self delivery for voice experience
  google.protobuf.BoolValue is_voice_self_delivery_enabled = 39;

  // Indicates if the store only provides drone delivery
  google.protobuf.BoolValue is_drone_only_store = 40;
  // Indicates if the store offers drone delivery as a delivery option
  google.protobuf.BoolValue offers_drone_delivery = 41;

  // Indicates if cash on delivery should be enabled for Voice
  google.protobuf.BoolValue is_voice_cash_on_delivery_enabled = 42;
  // Indicates if pay in store should be enabled for Voice
  google.protobuf.BoolValue is_voice_pay_in_store_enabled = 43;
  // Indicates if prepaid pickup order should be disabled for Voice
  google.protobuf.BoolValue is_voice_prepaid_pickup_disabled = 44;
  // Indicates if all prepaid orders should be disabled for Voice
  google.protobuf.BoolValue is_voice_prepaid_disabled = 45;
  // Indicates the maximum special instruction length for Voice
  google.protobuf.Int64Value voice_special_instructions = 46;
  // Indicates cx delivery fee for Voice
  google.protobuf.Int64Value voice_cx_delivery_fee = 47;
  // Indicates the input placeholder text for Voice
  google.protobuf.StringValue voice_special_instructions_default_text = 48;
  // Use voice_prepayment_threshold_amount
  google.protobuf.BoolValue voice_prepayment_threshold = 49 [deprecated = true];
  // Indicates the maximum order value allowed for non-prepaid Voice orders
  google.protobuf.Int64Value voice_prepayment_threshold_amount = 50;

  // Design Doc: https://docs.google.com/document/d/1z4MtbBKK1icCbUlve5uOpQGCah16x7zn6NX6Gh9BZUY/edit#bookmark=id.fqxoteoduzw2
  // Indicates if Cx curbside pickup should be enabled or not
  google.protobuf.BoolValue is_voice_cx_curbside_enabled = 51;
  // Indicates if pay in store should be enabled for Cx curbside pickup
  google.protobuf.BoolValue is_voice_cx_curbside_pay_in_store_enabled = 52;
  // Indicates instructions for Tx to read to Cx for Cx curbside pickup
  google.protobuf.StringValue voice_curbside_mx_instructions = 53;

  // Indicates if the Rx is a non-partner
  // Design doc: https://docs.google.com/document/d/1y5cHlTbSmWOAl5Wy2dKef1zQtWDXj1TR5wHKMOfRFaw/edit#heading=h.4edlt8r4c4o0
  google.protobuf.BoolValue is_non_partner_rx = 54;

  // Indicated if a store can support scheduled orders
  google.protobuf.BoolValue block_scheduled_orders = 55;

  // Indicates if a POS store can fallback to Tablet
  // Design doc: https://docs.google.com/document/d/1YMErunaU-KTB2K7ix0Z7TL32UPS2oIXLm0TwDZCBHIo/edit#heading=h.g558wg74ntkc
  google.protobuf.BoolValue pos_tablet_fallback_enabled = 56;

  // Indicates if a store is opted in feature Tablet Heartbeat ATD
  // Design doc: https://docs.google.com/document/d/1YMErunaU-KTB2K7ix0Z7TL32UPS2oIXLm0TwDZCBHIo/edit#heading=h.g558wg74ntkc
  google.protobuf.BoolValue tablet_heartbeat_enabled = 57;

  // Indicates instructions for Tx to read to Cx for cash on delivery
  google.protobuf.BoolValue is_detailed_cod_validation_message_enabled = 58;
  // Indicates instructions for Tx to ask for detailed contact information from Cx for selective Mx
  google.protobuf.BoolValue is_detailed_contact_form_validation_message_enabled = 59;

  // Indicates if the store offers autonomous vehicle delivery
  // Spec: https://docs.google.com/document/d/1zdR6TXrzq8XNMyzijC7zvX1O9m55rkaXvYp2pTy51Js/edit#heading=h.a497t6wkc6im
  google.protobuf.BoolValue offers_av_delivery = 60;

  // Design doc: https://docs.google.com/document/d/1hYpnxq1EzuKwLLitVIvsStSYMafZlP7XUalf4vKBQio/edit#bookmark=id.7579497gs229
  // Indicates the average cost per cx for the store
  google.protobuf.Int64Value avg_cost_per_person = 61;
  // Indicates the high quality delivery rate (HQDR) to cart subtotal map
  google.protobuf.StringValue hqdr_to_cart_subtotal_map = 62;

  // indicates that the store is enabled as an o1 for double dash alcohol drinks menu
  // o1 means the primary store, with which the double dash menu/options are then shown
  google.protobuf.BoolValue feed_double_dash_drinks_menu_o1_enabled = 63;

  // Indicates if the store is eligible for a photo shoot (typically having low photo coverage)
  google.protobuf.BoolValue is_eligible_for_photo_shoot = 64;

  // Indicates if the store has scheduled a photo shoot
  google.protobuf.BoolValue has_scheduled_photo_shoot = 65;

  // Provides suggestions on default tips for the store
  google.protobuf.StringValue tip_suggestions = 66;

  // Indicates if the store is same day onboarding
  google.protobuf.BoolValue is_same_day_onboarding = 67;

  // JSON format field to store Mx EOP (Enhanced Order Processing) preferences
  google.protobuf.StringValue enhanced_order_processing_preference = 68;
}

// Additional sparse properties for New Verticals team.
// See design doc: https://docs.google.com/document/d/1GxiP9L9N2dHm-mvP0BbF3IsnSxPUzafLQLubjKHpN80/edit?usp=sharing
// Any added property needs to get approval from NV team.
message NewVerticalsStoreDynamicProperties {
  // RetailDB migration https://docs.google.com/document/d/17-LJH3Pv_rElFhCO3Ygv6MkahcC8S63QpeJsE9S_XwQ/edit#bookmark=id.vgchdtc31j0k
  google.protobuf.StringValue provider_name = 1;
  // RetailDB migration https://docs.google.com/document/d/17-LJH3Pv_rElFhCO3Ygv6MkahcC8S63QpeJsE9S_XwQ/edit#bookmark=id.vgchdtc31j0k
  google.protobuf.BoolValue order_barcode = 2;
  // RetailDB migration https://docs.google.com/document/d/17-LJH3Pv_rElFhCO3Ygv6MkahcC8S63QpeJsE9S_XwQ/edit#bookmark=id.vgchdtc31j0k
  google.protobuf.BoolValue receipt_barcode_required = 3;
  // RetailDB migration https://docs.google.com/document/d/17-LJH3Pv_rElFhCO3Ygv6MkahcC8S63QpeJsE9S_XwQ/edit#bookmark=id.vgchdtc31j0k
  google.protobuf.BoolValue substitution_enabled = 4;
  // RetailDB migration https://docs.google.com/document/d/17-LJH3Pv_rElFhCO3Ygv6MkahcC8S63QpeJsE9S_XwQ/edit#bookmark=id.vgchdtc31j0k
  google.protobuf.BoolValue weighted_items_enabled = 5;
  // RetailDB migration https://docs.google.com/document/d/17-LJH3Pv_rElFhCO3Ygv6MkahcC8S63QpeJsE9S_XwQ/edit#bookmark=id.vgchdtc31j0k
  google.protobuf.BoolValue pick_accuracy_enabled = 6;
  // RetailDB migration https://docs.google.com/document/d/17-LJH3Pv_rElFhCO3Ygv6MkahcC8S63QpeJsE9S_XwQ/edit#bookmark=id.vgchdtc31j0k
  google.protobuf.BoolValue aisle_info_enabled = 7;
  // RetailDB migration https://docs.google.com/document/d/17-LJH3Pv_rElFhCO3Ygv6MkahcC8S63QpeJsE9S_XwQ/edit#bookmark=id.vgchdtc31j0k
  google.protobuf.StringValue platform_account_id = 8;
  // RetailDB migration https://docs.google.com/document/d/17-LJH3Pv_rElFhCO3Ygv6MkahcC8S63QpeJsE9S_XwQ/edit#bookmark=id.vgchdtc31j0k
  google.protobuf.StringValue retail_order_protocol = 9;
  // RetailDB migration https://docs.google.com/document/d/17-LJH3Pv_rElFhCO3Ygv6MkahcC8S63QpeJsE9S_XwQ/edit#bookmark=id.vgchdtc31j0k
  google.protobuf.StringValue retail_external_identifier = 10;
  // The retail store ID that's associated with the current pharmacy store.
  google.protobuf.StringValue pharmacy_retail_store_id = 11;
}

// Allowed store types
enum StoreType {
  // unspecified is default returns unified + marketplace only
  STORE_TYPE_UNSPECIFIED = 0;
  // returns unified + marketplace only + drive only stores
  STORE_TYPE_INCLUDE_DRIVE_ONLY = 1;
}

message ContactDetailsDynamicProperties {
  // this contact number is used by live-order-management plugin and doordash merchant tablet.
  google.protobuf.StringValue merchant_in_store_contact_number = 1;
}

// Get store count by business and business group ids request
message GetStoreCountByIdsRequest {
  repeated google.protobuf.StringValue business_ids = 1;
  repeated google.protobuf.StringValue business_group_ids = 2;
  StoreType store_type = 3;
}

// Get store count by business and business group ids response
message GetStoreCountByIdsResponse {
  repeated StoreCountById store_counts_by_business_id = 1;
  repeated StoreCountById store_counts_by_business_group_id = 2;
}

// Number of stores associated with an id.
message StoreCountById {
  google.protobuf.StringValue id = 1;
  google.protobuf.Int32Value count = 2;
}

// Enum for different entities
enum EntityType {
  // not set
  ENTITY_TYPE_UNSPECIFIED = 0;
  // store
  ENTITY_TYPE_STORE = 1;
  // business
  ENTITY_TYPE_BUSINESS = 2;
  // businesss_group
  ENTITY_TYPE_BUSINESS_GROUP = 3;
  // submarket
  ENTITY_TYPE_SUBMARKET = 4;
  // market
  ENTITY_TYPE_MARKET = 5;
}

// Get currencies of entities
message GetCurrenciesByIdsV2Request {
  EntityType type = 1;
  repeated string ids = 2;
  google.protobuf.BoolValue include_inactive = 3;
  google.protobuf.BoolValue include_store_breakdown = 4;
  google.protobuf.Int32Value store_breakdown_results_offset = 5;
  google.protobuf.Int32Value store_breakdown_results_limit = 6;
}

// The currencies associated with the id.
message CurrenciesByIdV2 {
  string id = 1;
  repeated string currency_codes = 2;
  repeated CurrencyByStoreId stores_currency = 3;
}

message GetCurrenciesByIdsV2Response {
  repeated CurrenciesByIdV2 currencies_by_ids = 1;
}

// Get currencies of by stores associated with business and business group ids request
message GetCurrenciesByIdsRequest {
  repeated google.protobuf.StringValue business_ids = 1;
  repeated google.protobuf.StringValue business_group_ids = 2;
  google.protobuf.Int32Value business_results_offset = 3;
  google.protobuf.Int32Value business_results_limit = 4;
  google.protobuf.Int32Value business_group_results_offset = 5;
  google.protobuf.Int32Value business_group_results_limit = 6;
}

// Get currencies used by stores associated with business and business group ids response
message GetCurrenciesByIdsResponse {
  repeated CurrenciesById currencies_by_business_id = 1;
  repeated CurrenciesById currencies_by_business_group_id = 2;
}

// The currencies and the stores associated with the id.
message CurrenciesById {
  google.protobuf.StringValue id = 1; // businessId or businessGroupId
  repeated google.protobuf.StringValue currency_codes = 2 [deprecated = true];
  repeated CurrencyByStoreId currency_codes_by_store_id = 3;
}

message CurrencyByStoreId {
  google.protobuf.StringValue id = 1; // store Id
  google.protobuf.StringValue currency_code = 2;
}

message RecalculateStoreStartingPointsRequest {
  message StoreIdsRequest {
    repeated string store_ids = 1;
  }

  oneof to_recalculate {
    StoreIdsRequest store_ids = 1;
    google.protobuf.StringValue market_id = 2;
  }
}

message RecalculateStoreStartingPointsResponse {
  message RecalculateStoreStartingPointResult {
    string store_id = 1;
    string result = 2;
  }

  repeated RecalculateStoreStartingPointResult results = 1;
}

// Request of get permanent deactivations by store id
message GetPermanentDeactivationsByStoreIdRequest {
  // Required field.
  string store_id = 1;
  // The limit and offset fields are the same as SQL LIMIT and OFFSET keywords.
  // Required field and you cannot set the limit higher than 20.
  int64 limit = 2;
  // Required field.
  int64 offset = 3;
}

// Response of get permanent deactivations by store id
message GetPermanentDeactivationsByStoreIdResponse {
  repeated StorePermanentDeactivation store_permanent_deactivations = 1;
}

// The Store Permanent Deactivation for a store
message StorePermanentDeactivation {
  google.protobuf.StringValue reason = 1;
  google.protobuf.Timestamp created_at_time = 2;
  google.protobuf.Int64Value created_by_user_id = 3;
  google.protobuf.Timestamp reactivated_at_time = 4;
  google.protobuf.Int64Value reactivated_by_user_id = 5;
  google.protobuf.StringValue notes = 6;
}

message GetMerchantInfoByUserIdRequest {
  google.protobuf.Int64Value user_id = 1;
}

message GetMerchantInfoByUserIdResponse {
  google.protobuf.Int64Value store_id = 1;
  google.protobuf.StringValue store_name = 2;
  google.protobuf.BoolValue is_owner = 3;
  google.protobuf.StringValue device_os = 4;
  google.protobuf.StringValue device_model = 5;
  google.protobuf.StringValue device_serial = 6;
  google.protobuf.StringValue device_type = 7;
  google.protobuf.BoolValue has_set_password = 8;
  google.protobuf.Int64Value id = 9;
}

// Request to get store extensions by store ID
message GetStoreExtensionByStoreIdRequest {
  // Required field.
  google.protobuf.StringValue store_id = 1;
}

// Response for getting store extensions by store ID
message GetStoreExtensionByStoreIdResponse {
  google.protobuf.StringValue store_id = 1;
  google.protobuf.BoolValue is_alcohol_addendum_signed = 2;
  google.protobuf.BoolValue is_shipping_only = 3 [deprecated = true];
  repeated RobocallType robocall_opt_out_types = 4;
  google.protobuf.BoolValue curbside_enabled = 5;
  google.protobuf.BoolValue is_price_matching_enabled = 6;
  google.protobuf.BoolValue has_robots = 7;
  google.protobuf.BoolValue requires_food_with_alcohol = 8;
  common.AORProtocol auto_release_protocol = 9;
  google.protobuf.BoolValue flexible_fulfillment_enabled = 10;
  google.protobuf.StringValue flexible_fulfillment_rules = 11;
  google.protobuf.StringValue customer_support_provider = 12;
  google.protobuf.StringValue premium_type = 13;
  google.protobuf.StringValue store_website = 14;
  google.protobuf.StringValue store_bio = 15;
  google.protobuf.Int32Value minimum_order_value = 16;
  google.protobuf.Int32Value scheduled_order_days = 17;
  google.protobuf.StringValue liquor_license_url = 18;
}

// Request to get store extensions by store IDs (batch)
message GetStoreExtensionsByStoreIdsRequest {
  // Required field.
  repeated google.protobuf.StringValue store_id = 1;
}

// Response to get store extensions by store IDs (batch)
message GetStoreExtensionsByStoreIdsResponse {
  // Required field.
  repeated GetStoreExtensionByStoreIdResponse store_extensions = 1;
}

// Request to update or create store extensions via store ID
message UpsertStoreExtensionByStoreIdRequest {
  // Required field.
  google.protobuf.StringValue store_id = 1;
  // Optional field.
  google.protobuf.BoolValue is_alcohol_addendum_signed = 2;

  // Optional field.
  google.protobuf.BoolValue is_shipping_only = 3 [deprecated = true];
  repeated RobocallType robocall_opt_out_types = 4;

  google.protobuf.BoolValue curbside_enabled = 5;
  // Optional field.
  google.protobuf.BoolValue is_price_matching_enabled = 6;
  google.protobuf.BoolValue has_robots = 7;
  google.protobuf.BoolValue requires_food_with_alcohol = 8;
  common.AORProtocol auto_release_protocol = 9;
  google.protobuf.BoolValue flexible_fulfillment_enabled = 10;
  google.protobuf.StringValue flexible_fulfillment_rules = 11;
  google.protobuf.BoolValue force_robocall_opt_out_update = 12;
  google.protobuf.StringValue customer_support_provider = 13;
  google.protobuf.StringValue premium_type = 14;
  google.protobuf.StringValue store_website = 15;
  google.protobuf.StringValue store_bio = 16;
  google.protobuf.Int32Value minimum_order_value = 17;
  google.protobuf.Int32Value scheduled_order_days = 18;
  google.protobuf.StringValue liquor_license_url = 19;
  // Confirm with Lx Assignments before use. Addresses overwrite bug and should only be used by bulk tool. Plan to deprecate.
  // See https://doordash.slack.com/archives/C04JGAY4K1R/p1728628474344969?thread_ts=1728591687.179899&cid=C04JGAY4K1R
  google.protobuf.BoolValue allow_auto_release_protocol_override = 20;
}

// Response after updating or creating store extensions by store ID
message UpsertStoreExtensionByStoreIdResponse {
  google.protobuf.StringValue store_id = 1;
  google.protobuf.BoolValue is_alcohol_addendum_signed = 2;
  google.protobuf.BoolValue is_shipping_only = 3 [deprecated = true];
  google.protobuf.BoolValue curbside_enabled = 4;
  google.protobuf.BoolValue is_price_matching_enabled = 5;
  google.protobuf.BoolValue has_robots = 6;
  google.protobuf.BoolValue requires_food_with_alcohol = 7;
  common.AORProtocol auto_release_protocol = 8;
  google.protobuf.BoolValue flexible_fulfillment_enabled = 9;
  google.protobuf.StringValue flexible_fulfillment_rules = 10;
  google.protobuf.StringValue customer_support_provider = 11;
  google.protobuf.StringValue premium_type = 12;
  google.protobuf.StringValue store_website = 13;
  google.protobuf.StringValue store_bio = 14;
  google.protobuf.Int32Value minimum_order_value = 15;
  google.protobuf.Int32Value scheduled_order_days = 16;
  google.protobuf.StringValue liquor_license_url = 17;
}

// Request of get stores by store group id
message GetStoresByStoreGroupIdRequest {
  google.protobuf.Int64Value store_group_id = 1;

  // FieldMask provides an option to create query/search parameters that return partially populated objects.
  // Service only returns the properties which shows in field mask.
  // This field is optional (BUT STRONGLY RECOMMENDED), if it is null/empty, service will return the whole object.
  // If testing in Kreya, field mask is a comma separated list of camelCase fields to return, without spaces.
  // e.g. "name,phoneNumber"
  // However, field mask should be specified in snake case in the code, like phone_number
  google.protobuf.FieldMask query_mask = 2;
}

message UpdateStoreLocationRequest {
  google.protobuf.StringValue store_id = 1; // required
  google.protobuf.DoubleValue lat = 2; // required
  google.protobuf.DoubleValue lng = 3; // required
}

message UpdateStoreLocationResponse {
  google.protobuf.StringValue store_id = 1;
  google.protobuf.StringValue result = 2;
}

message UpdateStoreMxTipPrefInBulkRequest {
  repeated google.protobuf.StringValue store_ids = 1;
  google.protobuf.BoolValue tip_enabled = 2;
}

message UpdateStoreMxTipPrefInBulkResponse {
  repeated google.protobuf.StringValue updated_store_ids = 1;
}

message GetStoreMxTipEligibilityRequest {
  google.protobuf.StringValue store_id = 1;
}

message GetStoreMxTipEligibilityResponse {
  google.protobuf.StringValue store_id = 1;
  google.protobuf.BoolValue is_eligible = 2;
}

message IsMxTipsEnabledForAnyStoreInBusinessRequest {
  google.protobuf.StringValue business_id = 1;
}

message IsMxTipsEnabledForAnyStoreInBusinessResponse {
  google.protobuf.StringValue business_id = 1;
  google.protobuf.BoolValue has_merchant_tips_enabled = 2;
}

message IsMxTipsEnabledForAnyStoreInBusinessGroupRequest {
  repeated google.protobuf.StringValue business_id = 1;
  repeated google.protobuf.StringValue store_id = 2;
}

message IsMxTipsEnabledForAnyStoreInBusinessGroupResponse {
  google.protobuf.BoolValue has_merchant_tips_enabled = 1;
}

// definition of store location update event payload for segment service
message StoreLocationUpdateSegmentEvent {
  // store id that was modified
  google.protobuf.StringValue store_id = 1;
  // new address id for store
  google.protobuf.StringValue new_address_id = 2;
  // previous address id for store
  google.protobuf.StringValue prev_address_id = 3;
  // previous lat for the store
  google.protobuf.DoubleValue prev_lat = 4;
  // previous lng for the store
  google.protobuf.DoubleValue prev_lng = 5;
  // new lat for the store
  google.protobuf.DoubleValue new_lat = 6;
  // new lng for the store
  google.protobuf.DoubleValue new_lng = 7;
  // location update timestamp
  google.protobuf.Timestamp updated_at = 8;
}

message HasMerchantTipsBeenEnabledForStoreRequest {
  string store_id = 1;
}

message HasMerchantTipsBeenEnabledForStoreResponse {
  bool result = 1;
}

message GetStoreDeactivationExemptionStatusRequest {
  string store_id = 1;
}

message GetStoreDeactivationExemptionResponse {
  google.protobuf.BoolValue is_exempted_from_temporary_deactivation = 1;
}

message Value {
  oneof single_value {
    int64 long_value = 1;
    double double_value = 2;
    bool bool_value = 3;
    string string_value = 4;
  }
}

message PropertyOverride {
  repeated Value override_values = 1;
  // below is a list of override properties that indicate
  // the condition in which the override values should be
  // used in place of the default values.
  common.Experience experience = 2;
  common.FulfillmentType fulfillment_type = 3;
}

message DynamicProperty {
  repeated Value default_values = 1;
  repeated PropertyOverride overrides = 2;
}

message UpdateStoreDynamicPropertiesRequest {
  string store_id = 1;
  DynamicProperty payment_methods = 2;
}

message UpdateStoreDynamicPropertiesResponse {
  bool success = 1;
}

// Request of get store info by payment account id
message GetStoreInfosByPaymentAccountIdRequest {
  // Required field.
  string payment_account_id = 1;
  // The limit and offset fields are the same as SQL LIMIT and OFFSET keywords.
  // Required field and you cannot set the limit higher than 50.
  int64 limit = 2;
  // Required field.
  int64 offset = 3;
}

// Response of get store info by payment account id
message GetStoreInfosByPaymentAccountIdResponse {
  repeated StoreInfoByPaymentAccountId store_info_by_payment_account_id = 1;
}

// The Store Info by Payment Account id
// Initially this contains only store id but if tomorrow the client needs
// additional info, we can easily add them to the response
message StoreInfoByPaymentAccountId {
  string store_id = 1;
}

// Request of get store temporary deactivation reasons
message GetAllStoreTemporaryDeactivationReasonsRequest {
  // The limit and offset fields are the same as SQL LIMIT and OFFSET keywords.
  // Required field and you cannot set the limit higher than 50.
  int64 limit = 1;
  // Required field.
  int64 offset = 2;
}

// Response of get store temporary deactivation reasons
message GetAllStoreTemporaryDeactivationReasonsResponse {
  repeated StoreTemporaryDeactivationReason store_temporary_deactivation_reason = 1;
}

// The Store Temporary Deactivation reason.
message StoreTemporaryDeactivationReason {
  string id = 1;
  string name = 2;
  string friendly_name = 3;
}

// Request of get store deactivation reasons
message GetAllStoreDeactivationReasonsRequest {
  // The limit and offset fields are the same as SQL LIMIT and OFFSET keywords.
  // Required field and you cannot set the limit higher than 50.
  int64 limit = 1;
  // Required field.
  int64 offset = 2;
}

// Response of get store deactivation reasons
message GetAllStoreDeactivationReasonsResponse {
  repeated StoreDeactivationReason store_deactivation_reason = 1;
}

// The Store Deactivation reason.
message StoreDeactivationReason {
  string id = 1;
  string name = 2;
  string friendly_name = 3;
  string category_name = 4;
}

// Values for different types of robocalls
enum RobocallType {
  // default value if client does not set
  ROBOCALL_TYPE_UNSPECIFIED = 0;

  // Holiday robocall
  ROBOCALL_TYPE_HOLIDAY = 1;

  // order confirmation robocall
  ROBOCALL_TYPE_CONFIRMATION = 2;

  // AI phone robocall
  ROBOCALL_TYPE_AI_PHONE = 3;

  // Tablet heartbeat robocall
  ROBOCALL_TYPE_TABLET_HEARTBEAT = 4;
}

message LightWeightStore {
  // unique id for store
  google.protobuf.StringValue id = 1;

  // business name
  google.protobuf.StringValue business_name = 2;

  // unique id for business
  google.protobuf.Int32Value business_id = 3;

  // indicates whether the store is a partner vs non-partner
  google.protobuf.BoolValue is_partner = 4;

  // indicates whether the store is active
  google.protobuf.BoolValue is_active = 5;

  // indicates whether the store is Dashpass eligible
  google.protobuf.BoolValue is_consumer_subscription_eligible = 6;

  // store address lat
  google.protobuf.DoubleValue lat = 7;

  // store address lng
  google.protobuf.DoubleValue lng = 8;

  // price range
  google.protobuf.UInt32Value price_range = 9;

  // submarket id
  google.protobuf.Int64Value submarket_id = 10;

  // starting point id
  google.protobuf.Int32Value starting_point_id = 11;

  // address id
  google.protobuf.Int64Value address_id = 12;

  // fulfills own delivery, flag for demand gen store
  google.protobuf.BoolValue fulfills_own_delivery = 13;

  // business vertical id
  google.protobuf.Int64Value business_vertical_id = 14;

  // cover square image url
  google.protobuf.StringValue cover_square_image = 15;

  // market id
  google.protobuf.Int64Value market_id = 16;

  // store phone number
  google.protobuf.StringValue phone_number = 17;

  // website url
  google.protobuf.StringValue store_website = 18;
  google.protobuf.StringValue business_website = 19;

  // biography
  google.protobuf.StringValue store_bio = 20;
  google.protobuf.StringValue business_bio = 21;

  // the store operating hours
  repeated Hours store_operating_hours = 22 [deprecated = true];

  // full address information
  Address address = 23;

  // store payment account id
  google.protobuf.Int64Value payment_account_id = 24;

  google.protobuf.BoolValue is_shipping_only = 25;

  // Corresponding business UX serving experience
  business_service.v1.ServingExperience serving_experience = 26;

  // The store name.
  google.protobuf.StringValue store_name = 27;

  // Add snap merchant_id of the store https://docs.google.com/document/d/1OQrHNtVTK7GXBiw5vyQ_8BW9l3oKdYpT0sd0PzV33Co/edit#heading=h.wwi7f6eqrawb
  google.protobuf.StringValue snap_merchant_id = 28;
}

message ConsumerStore {
  //--------------Store related--------------//

  google.protobuf.StringValue id = 1;

  google.protobuf.StringValue name = 2;

  google.protobuf.BoolValue is_partner = 3;

  google.protobuf.BoolValue is_active = 4;

  google.protobuf.BoolValue is_consumer_subscription_eligible = 5;

  google.protobuf.Int32Value price_range = 6;

  google.protobuf.BoolValue offers_pickup = 7;

  google.protobuf.BoolValue offers_delivery = 8;

  google.protobuf.Int64Value num_ratings = 9;

  google.protobuf.DoubleValue avg_rating = 10;

  google.protobuf.BoolValue provides_external_courier_tracking = 11;

  google.protobuf.BoolValue fulfills_own_deliveries = 12;

  google.protobuf.StringValue order_protocol = 13;

  google.protobuf.Int32Value special_instructions_max_length = 14;

  google.protobuf.Int64Value business_group_id = 15;

  repeated BusinessTag business_tags = 16;

  repeated StoreDisclaimer store_disclaimers = 17;

  google.protobuf.BoolValue newly_added = 18;

  google.protobuf.BoolValue is_in_demand_test = 19;

  google.protobuf.Int32Value tier_level = 20;

  google.protobuf.Int32Value custom_delivery_fee = 21;

  google.protobuf.Int32Value programmatic_delivery_fee = 22;

  google.protobuf.StringValue delivery_radius_tier = 23;

  google.protobuf.BoolValue hide_from_homepage_list = 24;

  google.protobuf.Int32Value delivery_radius = 25;

  google.protobuf.Int32Value max_order_size = 26;

  google.protobuf.Int32Value max_delivery_radius = 27;

  google.protobuf.StringValue max_delivery_polygon = 28;

  google.protobuf.Int32Value max_participants_for_group_cart = 29;

  repeated google.protobuf.StringValue store_experiences = 30;

  google.protobuf.BoolValue is_test = 31;

  google.protobuf.BoolValue is_price_matching_enabled = 32;

  google.protobuf.BoolValue is_shipping_only = 33 [deprecated = true];

  //--------------Business related------------//

  Business business = 34;
  // absolute path of business header img url
  google.protobuf.StringValue header_img_url = 35;

  // absolute path of business cover img url
  google.protobuf.StringValue cover_img_url = 36;

  // absolute path of business cover square img url
  google.protobuf.StringValue cover_square_img_url = 37;

  repeated BusinessCategory business_categories = 38;

  //--------------Geo related-----------------//

  google.protobuf.Int32Value starting_point_id = 39;
  google.protobuf.StringValue timezone = 40;
  google.protobuf.StringValue currency = 41;
  Address address = 42;
  ConsumerStartingPoint consumer_starting_point = 43;
  Market market = 44;
  SubMarket submarket = 45;

  //--------------Runtime/Globar Var related-----------------//

  google.protobuf.BoolValue good_for_group_orders = 46;
  google.protobuf.BoolValue is_order_protocol_killed = 47;

  //--------------Combined information-----------------//

  google.protobuf.BoolValue is_available = 48;
  google.protobuf.StringValue unavailable_reason = 49;
  repeated ConsumerStoreTemporaryDeactivation temporary_deactivations = 50;

  google.protobuf.StringValue bundle_experience = 51;
  google.protobuf.StringValue hide_from_homepage_list_experience = 52;

  //--------------Dynamic Properties-----------------//
  // https://doordash.atlassian.net/wiki/spaces/Eng/pages/2814935841/Onboard+a+new+property+to+store+business+table
  StoreDynamicProperties store_dynamic_properties = 53;
  business_service.v1.BusinessDynamicProperties business_dynamic_properties = 54;

  //--------------Store related--------------//

  google.protobuf.StringValue liquor_license_url = 55;

  //--------------Accessibilities-----------------//
  // https://docs.google.com/document/d/1P5RnZaTpBErVxZ8Pj89Q2UbPH4s1QQ-Q7oCaGroOyOA/edit
  // Values after applying fallback logic
  store_address_link_service.v1.Accessibilities accessibilities = 1001;
  // Raws values from database
  store_address_link_service.v1.Accessibilities accessibilities_without_fallback = 1002;
  // Values after applying fallback logic
  store_address_link_service.v1.Allergens allergens = 1003;
  // Raws values from database
  store_address_link_service.v1.Allergens allergens_without_fallback = 1004;
}

message Address {
  google.protobuf.Int32Value id = 1;
  // store address lat
  google.protobuf.DoubleValue lat = 2; // required
  // store address lng
  google.protobuf.DoubleValue lng = 3; // required
  google.protobuf.StringValue city = 4;
  google.protobuf.StringValue state = 5;
  google.protobuf.StringValue printable_address = 6;
  google.protobuf.StringValue street = 7;
  google.protobuf.StringValue country_shortname = 8;
  google.protobuf.StringValue country = 9;
  google.protobuf.StringValue postal_code = 10;
}

message Business {
  google.protobuf.Int32Value business_id = 1;

  google.protobuf.Int64Value business_vertical_id = 2;

  google.protobuf.StringValue business_name = 3;

  google.protobuf.StringValue business_description = 4;

  google.protobuf.BoolValue inflates_price = 5;

  business_service.v1.ServingExperience serving_experience = 6;
}

message BusinessTag {
  google.protobuf.Int64Value priority = 1;
  google.protobuf.Int64Value business_tag_id = 2;
  google.protobuf.StringValue business_tag_name = 3;
  google.protobuf.Int64Value business_category_id = 4;
  google.protobuf.StringValue business_tag_friendly_name = 5;
}

message BusinessCategory {
  google.protobuf.StringValue name = 1;
  google.protobuf.StringValue friendly_name = 2;
  google.protobuf.Int64Value category_id = 3;
}

message StoreDisclaimer {
  google.protobuf.Int32Value id = 1;
  google.protobuf.StringValue disclaimer_text = 2;
  google.protobuf.StringValue disclaimer_details_link = 3;
  google.protobuf.Int32Value sort_order = 4;
  google.protobuf.StringValue disclaimer_link_substring = 5;
  google.protobuf.StringValue display_treatment = 6;
}

message ConsumerStartingPoint {
  google.protobuf.Int32Value id = 1;
  google.protobuf.BoolValue is_active = 2;
  google.protobuf.BoolValue is_killed = 3;
  google.protobuf.Int64Value consumer_order_open_pad = 4;
  google.protobuf.Int64Value consumer_order_close_pad = 5;
  repeated StartingPointDeliveryHour delivery_hours = 6;
}

message StartingPointDeliveryHour {
  google.protobuf.StringValue start_time = 1;
  google.protobuf.StringValue end_time = 2;
  google.protobuf.Int32Value day_index = 3;
  google.protobuf.BoolValue closed = 4;
}

message Market {
  google.protobuf.Int32Value id = 1;
  repeated SpecialHour special_hours = 2;
  google.protobuf.StringValue timezone = 3;
}

message SubMarket {
  google.protobuf.Int32Value id = 1;
  google.protobuf.BoolValue is_killed = 2;
}

message SpecialHour {
  google.protobuf.StringValue start_time = 1;
  google.protobuf.StringValue end_time = 2;
  google.protobuf.StringValue date = 3;
  google.protobuf.BoolValue closed = 4;
}

message Hours {
  repeated bool days_bit_array = 1;
  google.protobuf.StringValue start_time = 2;
  google.protobuf.StringValue end_time = 3;
  string id = 4;
}

message ConsumerStoreTemporaryDeactivation {
  ConsumerStoreTemporaryDeactivationReason reason_id = 1;
  google.protobuf.Timestamp end_time = 2;
}

// Values for different types of temporary deactivations
enum ConsumerStoreTemporaryDeactivationReason {
  // default value if client does not set or exact reason is unimportant
  CONSUMER_STORE_TEMPORARY_DEACTIVATION_REASON_UNSPECIFIED = 0;

  // store is temp-deactivated because of kitchen capacity order throttling; corresponds to code 397 for temporary deactivation
  CONSUMER_STORE_TEMPORARY_DEACTIVATION_REASON_KITCHEN_CAPACITY_ORDER_THROTTLING = 1;

  // store is temp-deactivated due to bad weather or power outage; corresponds to code 26 for temporary deactivation
  CONSUMER_STORE_TEMPORARY_DEACTIVATION_REASON_BAD_WEATHER_POWER_OUTAGE = 2;

  // store is temp-deactivated because it is understaffed; corresponds to code 29 for temporary deactivation
  CONSUMER_STORE_TEMPORARY_DEACTIVATION_REASON_UNDERSTAFFED = 3;

  // store is temp-deactivated because it is a non-partner that is auto-deactivated due to SP undersupply; corresponds to code 232 for temporary deactivation
  CONSUMER_STORE_TEMPORARY_DEACTIVATION_REASON_NON_PARTNER_SP_UNDERSUPPLY = 4;

  // store is temp-deactivated because of high wait; corresponds to code 265 for temporary deactivation
  CONSUMER_STORE_TEMPORARY_DEACTIVATION_REASON_HIGH_WAIT = 5;

  // store is temp-deactivated due issues with POS system, either an auto-trigger or outage; corresponds to code 100, 133, 298 for temporary deactivation
  CONSUMER_STORE_TEMPORARY_DEACTIVATION_REASON_POS_ISSUE = 6;

  // store is temp-deactivated due to tablet being off; corresponds to code 496 for temporary deactivation
  CONSUMER_STORE_TEMPORARY_DEACTIVATION_REASON_TABLET_OFF = 7;
}

message CreateStoreDisclaimerRequest {
  // Store Disclaimer object to be inserted
  // Given attributes will be used for creating a DB instance
  // Absent attributes will be set in DB as null/default value
  // "id" attribute will be ignored
  StoreDisclaimer store_disclaimer = 1;
}

message CreateStoreDisclaimerResponse {
  // Complete store Disclaimer object (including null fields)
  StoreDisclaimer store_disclaimer = 1;
}

message DeleteStoreDisclaimerRequest {
  StoreDisclaimer store_disclaimer = 1;
}

message DeleteStoreDisclaimerResponse {}

message UpdateStoreDisclaimerRequest {
  StoreDisclaimer store_disclaimer = 1;
}

message UpdateStoreDisclaimerResponse {
  StoreDisclaimer store_disclaimer = 1;
}

message GetStoreDisclaimerRequest {
  StoreDisclaimer store_disclaimer = 1;
}

message GetStoreDisclaimerResponse {
  StoreDisclaimer store_disclaimer = 1;
}

// Request of get store disclaimers by id
message GetStoreDisclaimersByStoreIdRequest {
  int64 store_id = 1;
}

// Response of get store disclaimers by store id
message GetStoreDisclaimersByStoreIdResponse {
  repeated StoreDisclaimer store_disclaimers = 1;
}

// The request message containing the parameters to delete a store disclaimer link.
message DeleteStoreDisclaimerLinkByIdRequest {
  // The store disclaimer link id.
  // Note it's the primary key of the store_disclaimer_link table in merchant_db, pass in ids of the
  // the store_disclaimer table will result in undesired behavior.
  int64 store_disclaimer_link_id = 1;
}

// The response message containing the status of the delete store disclaimer link operation.
message DeleteStoreDisclaimerLinkByIdResponse {
  // The optional status of the delete store disclaimer link operation.
  google.protobuf.StringValue status = 1001;
}

// The request message containing the parameters to delete a store disclaimer link.
message DeleteStoreDisclaimerLinkByStoreDisclaimerIdAndStoreIdRequest {
  // The store disclaimer id.
  int64 store_disclaimer_id = 1;

  // The store id
  int64 store_id = 2;
}

// The response message containing the status of the delete store disclaimer link operation.
message DeleteStoreDisclaimerLinkByStoreDisclaimerIdAndStoreIdResponse {
  // The optional status of the delete store disclaimer link operation.
  repeated int64 store_disclaimer_link_ids = 1;
}

message GetStoresByBusinessIdAndSubmarketIdRequest {
  // required
  string business_id = 1;
  // required
  google.protobuf.Int32Value submarket_id = 2;

  // FieldMask provides an option to create query/search parameters that return partially populated objects.
  // Service only returns the properties which shows in field mask.
  // This field is optional (BUT STRONGLY RECOMMENDED), if it is null/empty, service will return the whole object.
  // If testing in Kreya, field mask is a comma separated list of camelCase fields to return, without spaces.
  // e.g. "name,phoneNumber"
  // However, field mask should be specified in snake case in the code, like phone_number
  google.protobuf.FieldMask query_mask = 3;
  // Pagination params, offset is where to begin the fetch.
  // optional. If not set, offset is default to 0.
  google.protobuf.Int32Value offset = 4;
  // Pagination params, limit is how many to fetch.
  // optional. If not set, limit is default to 5.
  google.protobuf.Int32Value limit = 5;
  // Pagination params, token is the value client receives in the response
  // of the same call to fetch previous page. Clients are expected to put pass
  // this to in the request to fetch the data for next page.
  // In case of the first page, this field should be null.
  // Client should not parse and attempt to understand the meaning of this value
  // because server can change the semantics of it anytime.
  // Server will prioritize using this field instead of offset if both presented
  google.protobuf.StringValue pagination_token = 6;
}

message GetStoresByBusinessIdAndSubmarketIdResponse {
  repeated Store stores = 1;
  // Pagination token that client should use to fetch the next page.
  // In case of the last page, this field will be null.
  google.protobuf.StringValue pagination_token = 6;
}

message AutoReleaseConfig {
  google.protobuf.Int64Value store_id = 1;
  google.protobuf.BoolValue auto_release_enabled_from_store = 2;
  google.protobuf.BoolValue auto_release_enabled_from_business = 3;
  google.protobuf.FloatValue auto_release_distance_from_store = 4;
  google.protobuf.FloatValue auto_release_distance_from_business = 5;
}

message GetAutoReleaseConfigRequest {
  google.protobuf.StringValue store_id = 1;
}

message GetAutoReleaseConfigResponse {
  AutoReleaseConfig config = 1;
}

message GetDeactivatedStoresByReasonIdRequest {
  google.protobuf.Int64Value reason_id = 1;
  google.protobuf.Int32Value offset = 2;
  google.protobuf.Int32Value limit = 3;
}

message GetDeactivatedStoresByReasonIdResponse {
  repeated google.protobuf.StringValue store_ids = 1;
}

message GetStoresByBusinessIdAndMerchantSuppliedIdRequest {
  // marketplace business id in string form
  string business_id = 1;
  string merchant_supplied_id = 2;

  // FieldMask provides an option to create query/search parameters that return partially populated objects.
  // Service only returns the properties which shows in field mask.
  // This field is optional (BUT STRONGLY RECOMMENDED), if it is null/empty, service will return the whole object.
  // If testing in Kreya, field mask is a comma separated list of camelCase fields to return, without spaces.
  // e.g. "name,phoneNumber"
  // However, field mask should be specified in snake case in the code, like phone_number
  google.protobuf.FieldMask query_mask = 3;
  // Pagination params, offset is where to begin the fetch,
  // limit is how many to fetch.
  google.protobuf.Int32Value offset = 4;
  google.protobuf.Int32Value limit = 5;
}

message GetStoresByBusinessIdAndMerchantSuppliedIdResponse {
  repeated Store stores = 1;
}

// Get relations for store response
message GetStoreIdsResponse {
  // List of store IDs
  repeated int64 store_ids = 1;
}

// Get store relations by Starting Point IDs
message GetActiveNonTestStoreIdsByStartingPointIdsRequest {
  // Starting Point IDs
  repeated int64 starting_point_ids = 1;

  // Pagination params: where to begin the fetch.
  // Defaulted to 0 (returns all storeIds > 0), but this number should be the largest storeId returned
  google.protobuf.Int64Value store_id_pagination_token = 2;

  // Pagination params: how many to fetch. Default max of 500
  google.protobuf.Int32Value limit = 3;
}

// Get store relations by Address IDs
message GetActiveNonTestStoreIdsByAddressIdsRequest {
  // Address IDs
  repeated int64 address_ids = 1;

  // Pagination params: where to begin the fetch.
  // Defaulted to 0 (returns all storeIds > 0), but this number should be the largest storeId returned
  google.protobuf.Int64Value store_id_pagination_token = 2;

  // Pagination params: how many to fetch. Default max of 500
  google.protobuf.Int32Value limit = 3;
}
