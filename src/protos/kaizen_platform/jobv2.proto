syntax = "proto3";

package kaizen_platform.v1;

import "google/protobuf/timestamp.proto";
import "kaizen_platform/identity.proto";
// temporary import as we transition to v2
import "kaizen_platform/job.proto";

// go_package enabled for use in TAS go proxy
option go_package = "github.com/doordash/services-protobuf/generated/kaizen_platform";
option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.kaizen_platform";

// ScheduledJobStatus is the status of a scheduled job
enum ScheduledJobStatus {
  // unspecified scheduled job status
  SCHEDULED_JOB_STATUS_UNSPECIFIED = 0;

  // scheduled job has been scheduled to execute
  SCHEDULED_JOB_STATUS_SCHEDULED = 1;

  // scheduled job has been canceled
  SCHEDULED_JOB_STATUS_CANCELED = 2;

  // scheduled job has been kicked off
  SCHEDULED_JOB_STATUS_TRIGGERED = 3;
}

// ChildKaizenJobExecution represents an individual execution of a child job.
message ChildKaizenJobExecution {
  // A randomly generated 128-bit UUID that uniquely identifies the particular job execution.
  string execution_uuid = 1;

  // A randomly generated 128-bit UUID that uniquely identifies the job execution parent.
  string parent_execution_uuid = 2;

  // The state
  JobExecutionState state = 3;

  // The job that is being run
  // Future iteration may require differentiation between parent and child jobs
  KaizenJob job = 4;

  // The parameters used to start the job
  ChildJobExecutionParameters parameters = 5;

  // The start time of this execution of the job.
  google.protobuf.Timestamp start_time = 6;

  // The estimated end time of this execution of the job.
  google.protobuf.Timestamp estimated_end_time = 7;

  // The test data pool id used for this execution
  string test_data_pool_id = 8;
}

// ParentKaizenJobExecution represents an individual execution of a parent job.
message ParentKaizenJobExecution {
  // A randomly generated 128-bit UUID that uniquely identifies the particular job execution.
  string execution_uuid = 1;

  // Parent Name denoting what it is
  string name = 2;

  // The parameters used to start the job
  ParentJobExecutionParameters parameters = 3;

  // The start time of this execution of the job.
  google.protobuf.Timestamp start_time = 4;

  // The estimated end time of this execution of the job.
  RequesterIdentity requester_identity = 5;

  // The list of slack channels identified when starting a job that is used for notifications
  // The format of each element in slack_channels should be "Channel1ID:Channel1Name"
  repeated string slack_channels = 6;
}

// ParentJobExecutionParameters represents the parameters that are used to start a job.
message ParentJobExecutionParameters {
  // The master qps factor
  int64 qps = 1;
}

// ChildJobExecutionParameters represents the parameters that are used to start a job.
message ChildJobExecutionParameters {
  // The qps ramp-up factor for individual child jobs
  // This is a multiplier to the master qps factor,
  // the final effective qps for the child job is parent qps * qps_rampup_factor
  double qps_rampup_factor = 1;

  // The runtime in seconds
  int64 runtime_seconds = 2;
}
