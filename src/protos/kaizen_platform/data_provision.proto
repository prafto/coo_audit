syntax = "proto3";
package kaizen_platform.v1;

import "common/service_client_config.proto";
import "google/protobuf/wrappers.proto";
import "kaizen_platform/workflow.proto";

// go_package enabled for use in TAS go proxy
option go_package = "github.com/doordash/services-protobuf/generated/kaizen_platform";
option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.kaizen_platform";

// service for warming up test data
service DataProvisionService {
  // warm up test data into cache
  rpc WarmUpTestData(WarmUpTestDataRequest) returns (WarmUpTestDataResponse);
}

// distribution type of test actors, could be based on the cell_id or market_id
enum DistributionType {
  // unspecified distribute type, please do not use.
  DISTRIBUTION_TYPE_UNSPECIFIED = 0;

  // distribute by cell
  DISTRIBUTION_TYPE_CELL = 1;

  // distribute by market
  DISTRIBUTION_TYPE_MARKET = 2;
}

// type of test data source
enum DataSourceType {
  // unspecified test data source type, please do not use.
  DATA_SOURCE_TYPE_UNSPECIFIED = 0;

  // workflow/TAS generated data
  DATA_SOURCE_TYPE_WORKFLOW = 1;

  // S3 as the source of test data
  DATA_SOURCE_TYPE_S3 = 2;
}

// file format of the file that contains the test data
enum FileFormat {
  // unspecified file format, please do not use.
  FILE_FORMAT_UNSPECIFIED = 0;

  // csv file format
  FILE_FORMAT_CSV = 1;
}

// workflow parameters used to generate the test data pool, including workflow id and actio parameter override
message WorkflowParametersForPool {
  // workflow id
  string workflow_id = 1;

  // action parameters
  repeated ActionParameterOverride action_parameter_overrides = 2;
}

// S3 parameters
message S3Parameters {
  // S3 bucket name
  string s3_bucket_name = 1;

  // S3 key
  string s3_key = 2;
}

// request to warmup test data into cache
message WarmUpTestDataRequest {
  // deprecated "s3_presigned_url", use "s3_parameters" instead
  reserved 9;
  reserved "s3_presigned_url";

  // total number of consumer
  google.protobuf.Int32Value number_of_consumers = 1;

  // total number of dasher
  google.protobuf.Int32Value number_of_dashers = 2;

  // total number of merchant number
  google.protobuf.Int32Value number_of_merchants = 3;

  // distribution type
  DistributionType distribution_type = 4;

  // distribution ratio, key is the cell_id or market_id, value is the ratio
  map<int32, int32> distribution_ratio = 5;

  // test data pool id
  string test_data_pool_id = 6;

  // test data ttl in minute
  google.protobuf.Int32Value ttl_minute = 7;

  // source of data used to generate the pool
  DataSourceType data_source_type = 8;

  // file format
  FileFormat file_format = 10;

  // workflow map, with test resource type as key and workflow parameters as value
  map<string, WorkflowParametersForPool> test_resource_workflow_map = 11;

  // S3 parameters, use when the data_source_type is S3
  S3Parameters s3_parameters = 12;

  // test actor pool attribute to mark the pool as non-reusable(buffer)
  bool is_non_reusable = 13;
}

// response for warmup test data
message WarmUpTestDataResponse {}
