syntax = "proto3";

package kaizen_platform.v1;

// go_package enabled for use in TAS go proxy
option go_package = "github.com/doordash/services-protobuf/generated/kaizen_platform";
option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.kaizen_platform";

// Identity object for interacting with auth checks inside Kaizen
message RequesterIdentity {
  // Union type of all possible kinds of identity Kaizen supports
  oneof identity {
    // The identity, if it corresponds to a specific person
    UserIdentity user_identity = 1;
    // The identity, if it corresponds to a software system
    SystemIdentity system_identity = 2;
  }
}

// A user's corporate email.
// This should be an id we can pass to identity-service's GetUserById to get further info
// like the user's groups.
//
// Note: at this moment we have no way to verify this matches the actual caller,
// and it could in principle be spoofed, however only internal users will have access to this API.
message UserIdentity {
  // Corporate email
  string email = 1;
}

// Identity of a requester when that requester is not a user.
message SystemIdentity {
  // Freeform field describing the system/place this request originated from.
  // For example: "Async Platform"
  string system_id = 1;

  // Freeform field defining a unique ID (within the system) if applicable.
  // For example: in Async Platform this could be an event id
  string system_tracking_id = 2;
}
