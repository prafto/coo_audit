syntax = "proto3";
package doordash_button.v1;

import "doordash.api/annotations.proto";
import "doordash.api/client.proto";
import "doordash.api/field_validate.proto";
import "doordash_button/common.proto";
import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option java_generic_services = true;
option java_outer_classname = "Service";
option java_package = "com.doordash.rpc.doordash_button";

// Service dealing with doordash button
service DoordashButtonService {
  option (doordash.api.service) = {
    name: "smart-scale-service-dd-button-grpc"
    url: "smart-scale-service-web.service.prod.ddsd"
    port: 50051
    name_spaces: ["smart-scale-service"]
    api_key_name: "SMART_SCALE_SERVICE_API_KEY"
    owner: {
      name: "smart-scale-dd-button"
      id: "smart-scale-team"
      slack_channel: "#ask-labs-foundry-eng"
      email_alias: "foundry-eng@doordash.com"
    }
    target_products: [MX]
  };

  // Get orders for the doordash button
  rpc GetOrders(GetOrdersRequest) returns (GetOrdersResponse) {
    option (google.api.http) = {
      // {HttpMethod}: "{pathPattern}"
      get: "/smart-scale-service/v1/dd_btn/get_orders"
    };

    option (doordash.api.endpoint) = {
      tier: T2
      lifecycle: DEV
      authorization: [MX_USER]
      target_products: [MX]
    };
  }

  // Place order for the doordash button
  rpc PlaceOrder(PlaceOrderRequest) returns (PlaceOrderResponse) {
    option (google.api.http) = {
      // {HttpMethod}: "{pathPattern}"
      post: "/smart-scale-service/v1/dd_btn/place_order"
      body: "*"
    };

    option (doordash.api.endpoint) = {
      tier: T2
      lifecycle: DEV
      authorization: [MX_USER]
      target_products: [MX]
    };
  }
}

// Gets list of orders
message GetOrdersRequest {
  // device id of the hardware
  string device_id = 1;
}

// Returns list of previous doordash orders
message GetOrdersResponse {
  // list of previous orders
  repeated PreviousOrderDetails previous_order_details = 1;
}

// Place order request
message PlaceOrderRequest {
  // Delivery uuid of the previous delivery to reorder
  string delivery_uuid = 1;
}

// Place order response
message PlaceOrderResponse {
  // New order uuid
  string order_uuid = 1;
}

// details of previous orders
message PreviousOrderDetails {
  // Delivery uuid of the order *
  string delivery_uuid = 1;
  // Nickname of the order
  string order_name = 2;
  // Order category
  OrderCategory order_category = 3;
}
