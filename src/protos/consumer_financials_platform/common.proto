syntax = "proto3";
// buf:lint:ignore DIRECTORY_SAME_PACKAGE
package doordash.consumer_financials_platform.common.v1;

import "gifting_service/common.proto";
import "google/protobuf/any.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option go_package = "consumer_financials_platform";
option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.consumer_financials_platform.common.v1";

// common proto for purchase gift card order
message PurchaseGiftCardOrder {
  // uuid reference to order service order
  string order_uuid = 1;
  // card provider
  // if the card provider is test, the process can still run without cross-reference, but the redeem will not really deposit credit
  doordash_gifting_service.v1.CardProvider provider = 2;
  // store id reference to MDS store
  google.protobuf.Int64Value store_id = 3;
  // card items
  repeated PurchaseGiftCardItem items = 4;
  // delivery ID
  google.protobuf.Int64Value delivery_id = 5;
  // payment reference id
  google.protobuf.StringValue payment_reference_id = 6;
  // payment reference type
  google.protobuf.StringValue payment_reference_type = 7;
  // sender info
  GiftCardSenderInfo sender_info = 8;
  // purchase info
  GiftCardPurchaseInfo purchase_info = 9;
}

// purchase gift card item which supports one of gift card item types
// needed to wrap because repeated oneof is not supported
message PurchaseGiftCardItem {
  // oneof gift_card_item
  oneof gift_card_item {
    // gift card item
    GiftCardItem general = 1;
    // integration gift card item
    IntegrationsPurchaseGiftCardItem integrations = 2;
  }
}

// general gift card item
message GiftCardItem {
  // item id reference to MDS item
  google.protobuf.StringValue item_id = 1;
  // merchant supplied id
  google.protobuf.StringValue merchant_supplied_id = 2;
  // type of the card such like BIRTHDAY
  doordash_gifting_service.v1.CardCategory card_category = 3;
  // purchase info for the gift card
  GiftCardPurchaseInfo purchase_info = 4;
  // gift card provider (i.e. doordash, incomm, doortest, etc)
  doordash_gifting_service.v1.CardProvider provider = 5;
  // fulfill info for the gift card (i.e. email/sms delivery info)
  GiftCardFulfillment fulfillment_info = 6;
  // personalization info for the gift card (i.e. card message, card image url)
  GiftCardPersonalization personalization_info = 7;
}

// used to extend the GiftCardItem for integrations
message IntegrationsPurchaseGiftCardItem {
  // gift card item
  GiftCardItem gift_card_item = 1;
  // item context data as json string (used by integrations not order-service)
  // {"json_key": "json_value"}
  repeated google.protobuf.StringValue item_context = 2;
}

// sender info for PurchaseGiftCardOrder
message GiftCardSenderInfo {
  // user ID
  google.protobuf.StringValue sender_user_id = 1;
  // consumerId who bought the card
  string sender_consumer_id = 2;
  // sender email
  google.protobuf.StringValue sender_email = 3;
  // sender phone
  google.protobuf.StringValue sender_phone = 4;
  // sender's timezone
  google.protobuf.StringValue sender_timezone = 5;
  // sender's language
  google.protobuf.StringValue sender_lang = 6;
}

// purchase info for PurchaseGiftCardOrder / GiftCardItem
message GiftCardPurchaseInfo {
  // the price consumer bought for the cards
  int64 price = 1;
  // the order's total face_value amount
  int64 face_value = 2;
  // the discount amount while cx bought the card (Price + Discount = Amount)
  int64 discount = 3;
  // the amount/price/discount’s currency
  string currency = 4;
  // Discount campaign Id aka promo id
  google.protobuf.StringValue discount_campaign_id = 5;
}

// personalization details for the gift card
message GiftCardPersonalization {
  // the message CX input for the card
  google.protobuf.StringValue card_message = 1;
  // the url which links to the gift card photo’s url
  google.protobuf.StringValue card_image_url = 2;
}

// fulfillment info for the gift card
message GiftCardFulfillment {
  // last name
  google.protobuf.StringValue recipient_family_name = 1;
  // first name
  google.protobuf.StringValue recipient_given_name = 2;
  // DeliveryChannel (i.e. email, sms, etc)
  doordash_gifting_service.v1.DeliveryChannel delivery_channel = 3;
  // phone number cx input for receiving the gift card
  google.protobuf.StringValue recipient_phone = 4;
  // email address cx input for receiving the gift card
  google.protobuf.StringValue recipient_email = 5;
  // recipient name
  google.protobuf.StringValue recipient_name = 6;
  // sender name
  google.protobuf.StringValue sender_name = 7;
  // quoted delivery time for sending the gift card
  google.protobuf.Timestamp quoted_delivery_time = 8;
}

// external gift card order status
enum ExternalGiftCardOrderStatus {
  // unspecified
  EXTERNAL_GIFT_CARD_ORDER_STATUS_UNSPECIFIED = 0;
  // completed
  EXTERNAL_GIFT_CARD_ORDER_STATUS_COMPLETED = 1;
  // pending
  EXTERNAL_GIFT_CARD_ORDER_STATUS_PENDING = 2;
  // failed
  EXTERNAL_GIFT_CARD_ORDER_STATUS_FAILED = 3;
  // canceled
  EXTERNAL_GIFT_CARD_ORDER_STATUS_CANCELED = 4;
  // scheduled
  EXTERNAL_GIFT_CARD_ORDER_STATUS_SCHEDULED = 5;
}

// success
message ExternalProviderOrderStatusSuccess {}

// external gift card generic service error
message ExternalProviderOrderStatusError {
  // String error code for the error.
  string error_code = 1;
  // error message
  string error_message = 2;
}

// details of a purchased gift card returned by an external vendor
message ProviderGiftCardItem {
  // gift card link
  google.protobuf.StringValue gift_card_link = 1;
  // gift card number
  google.protobuf.StringValue gift_card_number = 2;
  // gift card pin
  google.protobuf.StringValue gift_card_pin = 3;
  // URL for the gift card image
  google.protobuf.StringValue gift_card_image_url = 4;
  // gift card initial balance in int (cents) format i.e. 100 = $1.00
  google.protobuf.Int32Value gift_card_balance = 5;
  // time the gift card was created
  google.protobuf.Timestamp created_at = 6;
  // terms and conditions for the gift card
  google.protobuf.StringValue terms_and_conditions = 7;
  // marketing description for the gift card
  google.protobuf.StringValue marketing_description = 8;
  // legal disclaimer for the gift card
  google.protobuf.StringValue legal_disclaimer = 9;
  // string version of json for vendor specific fields / data
  google.protobuf.StringValue additional_data = 10;
  // json for vendor specific fields / data
  map<string, google.protobuf.Any> additional_data_map = 11 [deprecated = true];
  // item merchant supplied id
  google.protobuf.StringValue merchant_supplied_id = 12;
}

// entity type
enum EntityType {
  // Nothing
  ENTITY_TYPE_UNSPECIFIED = 0;
  // consumer
  ENTITY_TYPE_CONSUMER = 1;
}
