syntax = "proto3";
// buf:lint:ignore DIRECTORY_SAME_PACKAGE
package doordash.consumer_financials_platform.v1;

import "common/common.proto";
import "common/money.proto";
import "consumer_financials_platform/cx_fin_upsell.proto";
import "consumer_financials_platform/dash_card.proto";
import "consumer_financials_platform/payment_offers.proto";
import "data_classification.v1/data_classification.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "payin/common_v1.proto";
import "presentation_gateway/presentation_gateway_config.proto";

option go_package = "consumer_financials_platform";
option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.consumer_financials_platform";

// DashCard account entry point service
service DashCardV2Service {
  // DashCardAccountStatus
  rpc DashCardAccountStatus(DashCardAccountStatusRequest) returns (DashCardAccountStatusResponse);

  // GetDashCardApplicationStatus
  rpc GetDashCardApplicationStatus(GetDashCardApplicationStatusRequest) returns (GetDashCardApplicationStatusResponse);

  // GetProviderCardHolderStatusesForPayer
  rpc GetProviderCardHolderStatusesForPayer(GetProviderCardHolderStatusesForPayerRequest) returns (GetProviderCardHolderStatusesForPayerResponse);

  // GetDashCardPreApprovalSourceCode
  rpc GetDashCardPreApprovalSourceCode(GetDashCardPreApprovalSourceCodeRequest) returns (GetDashCardPreApprovalSourceCodeResponse);

  // GetDashCardPreApprovalLandingPageUrl
  rpc GetDashCardPreApprovalLandingPageUrl(GetDashCardPreApprovalLandingPageUrlRequest) returns (GetDashCardPreApprovalLandingPageUrlResponse);

  // GetDashCardCheckoutUpsell
  rpc GetDashCardCheckoutUpsell(GetDashCardCheckoutUpsellRequest) returns (GetDashCardCheckoutUpsellResponse);

  // UpdateDashCardUpsellInterestStatus
  rpc UpdateDashCardUpsellInterestStatus(UpdateDashCardUpsellInterestStatusRequest) returns (UpdateDashCardUpsellInterestStatusResponse);

  // Create Dash Card Application Intent
  rpc CreateDashCardApplicationIntent(CreateDashCardApplicationIntentRequest) returns (CreateDashCardApplicationIntentResponse);

  // Update Dash Card Application Status
  rpc UpdateDashCardApplicationStatus(UpdateDashCardApplicationStatusRequest) returns (UpdateDashCardApplicationStatusResponse);

  // GetPaymentOffers
  rpc GetPaymentOffers(GetPaymentOffersRequest) returns (GetPaymentOffersResponse) {
    option (presentation_gateway.v1.presentation_gateway_config).service_name = "gifting-service";
    option (presentation_gateway.v1.presentation_gateway_config).service_app = "dashcard";
  }

  // PurchaseWalletCredits
  rpc PurchaseWalletCredits(PurchaseWalletCreditsRequest) returns (PurchaseWalletCreditsResponse);

  // GetWalletPromotion
  rpc GetWalletPromotion(GetWalletPromotionRequest) returns (GetWalletPromotionResponse);

  // Create signup offer - ex. Used for instant credit
  rpc CreateDashCardSignUpOffer(CreateDashCardSignUpOfferRequest) returns (CreateDashCardSignUpOfferResponse);

  // Get signup offer - ex. Used for instant credit
  rpc GetDashCardSignUpOffer(GetDashCardSignUpOfferRequest) returns (GetDashCardSignUpOfferResponse);

  // List signup offer - ex. Used for instant credit
  rpc ListDashCardSignUpOffer(ListDashCardSignUpOfferRequest) returns (ListDashCardSignUpOfferResponse);

  // Update signup offer - ex. Used for instant credit
  rpc UpdateDashCardSignUpOffer(UpdateDashCardSignUpOfferRequest) returns (UpdateDashCardSignUpOfferResponse);

  // Runs dashcard script
  rpc RunDashCardScript(RunDashCardScriptRequest) returns (RunDashCardScriptResponse);

  // Fetch the associated cardholders for provider customer ID
  rpc GetAssociatedCardHoldersByProviderCustomerId(GetAssociatedCardHoldersByProviderCustomerIdRequest) returns (GetAssociatedCardHoldersByProviderCustomerIdResponse);
}

// DashCardAccountStatusRequest
message DashCardAccountStatusRequest {
  // consumer id
  google.protobuf.StringValue consumer_id = 1;

  // Submarket ID of the Cx location (device location or delivery address). This will be used to determine the
  // eligibility of DashCard. Fall back to consumer address field below if left empty.
  google.protobuf.StringValue submarket_id = 4;

  // consumer address
  .common.CommonAddress address = 2;

  // request platform
  doordash.payin.common.v1.Platform platform = 3;
}

// DashCardAccountStatusResponse
message DashCardAccountStatusResponse {
  // if accounts page should surface DashCard application entry point
  google.protobuf.BoolValue should_show_application_entry_point = 1;
  // (nullable) available reward balance
  money.RewardBalanceDetails reward_balance_available = 2;
  // (nullable) hub uri or application page uri
  google.protobuf.StringValue uri = 3;
  // (nullable) entry point type for cases of pre-approval
  EntryPointType entry_point_type = 4;
}

// GetDashCardApplicationStatusRequest
message GetDashCardApplicationStatusRequest {
  // payin correlation ids
  doordash.payin.common.v1.PayerCorrelationIds payer_correlation_ids = 1;
}

// GetDashCardApplicationStatusResponse
message GetDashCardApplicationStatusResponse {
  // status of DashCardApplication
  DashCardApplicationStatus status = 1;
}

// GetProviderCardHolderStatusesForPayerRequest
message GetProviderCardHolderStatusesForPayerRequest {
  // payer correlation id
  doordash.payin.common.v1.PayerCorrelationIds payer_correlation_ids = 1;
}

// GetAllDashCardCardHolderStatusesResponse
message GetProviderCardHolderStatusesForPayerResponse {
  // for each DashCard Cx is card holder for
  repeated ProviderCardHolderStatus provider_card_holder_statuses = 1;
}

// GetDashCardPreApprovalSourceCodeRequest
message GetDashCardPreApprovalSourceCodeRequest {
  // consumer id
  google.protobuf.StringValue consumer_id = 1;

  // source code
  google.protobuf.StringValue source_code = 2;

  // first name
  google.protobuf.StringValue first_name = 3;

  // last name
  google.protobuf.StringValue last_name = 4;
}

// GetDashCardCheckoutUpsellRequest
message GetDashCardCheckoutUpsellRequest {
  // consumer id
  google.protobuf.StringValue consumer_id = 1;
}

// UpdateDashCardUpsellInterestStatusRequest
message UpdateDashCardUpsellInterestStatusRequest {
  // consumer id
  google.protobuf.StringValue consumer_id = 1;

  // source code
  google.protobuf.StringValue source_code = 2;

  // interest type
  DashCardUpsellInterestActionType action_type = 3;
}

// UpdateDashCardUpsellInterestStatusResponse: Empty response
message UpdateDashCardUpsellInterestStatusResponse {}

// GetDashCardCheckoutUpsellResponse
message GetDashCardCheckoutUpsellResponse {
  // upsell
  CxFinUpsell cx_fin_upsell = 1;
}

// GetDashCardPreApprovalSourceCodeResponse
message GetDashCardPreApprovalSourceCodeResponse {
  // source code
  google.protobuf.StringValue source_code = 1;
}

// GetDashCardPreApprovalLandingPageUrlRequest
message GetDashCardPreApprovalLandingPageUrlRequest {
  // consumer id
  google.protobuf.StringValue consumer_id = 1;

  // first name
  google.protobuf.StringValue first_name = 2;

  // last name
  google.protobuf.StringValue last_name = 3;

  // UUID
  google.protobuf.StringValue uuid = 4;
}

// GetDashCardPreApprovalLandingPageUrlResponse
message GetDashCardPreApprovalLandingPageUrlResponse {
  // pre-approval landing page URL
  google.protobuf.StringValue landing_page_url = 1;

  // error if exists
  DashCardPreApprovalLandingPageStatus status = 2;
}

// CreateDashCardApplicationIntentRequest
message CreateDashCardApplicationIntentRequest {
  // application data for DashCard
  DashCardApplicationData dash_card_application_data = 1;

  // DashCardApplication Redirect Entry Points after application submitted
  DashCardApplicationRedirectContext application_context = 2;

  // DashCardApplication Affiliate Data
  DashCardApplicationAffiliateData affiliate_data = 3;

  // Platform requests sent from used to determine Chase experience
  doordash.payin.common.v1.Platform platform = 4;
}

// CreateDashCardApplicationIntentResponse
message CreateDashCardApplicationIntentResponse {
  // application url for Chase site
  google.protobuf.StringValue application_url = 1;
}

// UpdateDashCardApplicationStatusRequest
message UpdateDashCardApplicationStatusRequest {
  // payer correlation ids -- currently only supporting dd_consumer_id
  doordash.payin.common.v1.PayerCorrelationIds payer_correlation_ids = 1;

  // Status to update DashCardApplication to
  DashCardApplicationStatus status = 2;
}

// UpdateDashCardApplicationStatusResponse
message UpdateDashCardApplicationStatusResponse {
  // Boolean success indicator
  google.protobuf.BoolValue success = 1;
}

// DashCardApplicationData
message DashCardApplicationData {
  // payer correlation ids -- currently only supporting dd_consumer_id
  doordash.payin.common.v1.PayerCorrelationIds payer_correlation_ids = 1;

  // first name of consumer
  google.protobuf.StringValue first_name = 2 [(data_classification.v1.data_classification).pii = true];

  // last name of consumer
  google.protobuf.StringValue last_name = 3 [(data_classification.v1.data_classification).pii = true];

  // email of consumer
  google.protobuf.StringValue email = 4 [(data_classification.v1.data_classification).pii = true];

  // international phone number of consumer
  google.protobuf.StringValue phone_number = 5 [(data_classification.v1.data_classification).pii = true];

  // address of consumer at the time of application
  .common.CommonAddress application_address = 6 [(data_classification.v1.data_classification).pii = true];
}

// DashCardApplication Redirect Entry Points after application submitted
enum DashCardApplicationRedirectContext {
  // Unspecified
  DASH_CARD_APPLICATION_REDIRECT_CONTEXT_UNSPECIFIED = 0;

  // Redirect to Homepage
  DASH_CARD_APPLICATION_REDIRECT_CONTEXT_HOMEPAGE = 1;

  // Redirect to payment page
  DASH_CARD_APPLICATION_REDIRECT_CONTEXT_PAYMENT = 2;
}

// DashCardApplicationAffiliateData needed for Chase
message DashCardApplicationAffiliateData {
  // Passed through for Chase used to track applications coming from affiliates
  google.protobuf.StringValue affiliate_id = 1;

  // Passed through for Chase used to track applications coming from affiliates
  google.protobuf.StringValue pv_id = 2;

  // Passed through for Chase used for offer/tracking data
  google.protobuf.StringValue source_id = 3;

  // Passed through for Chase used for market cell identifier
  google.protobuf.StringValue cell_id = 4;

  // Passed through for Chase used for partner tracking
  google.protobuf.StringValue cookie_id = 5;

  // Passed through for Chase used for signup offers like Instant Credit
  google.protobuf.StringValue signup_offer_id = 6;
}

// GetPaymentOffersRequest
message GetPaymentOffersRequest {
  // consumer id
  google.protobuf.StringValue consumer_id = 1;

  // Submarket ID of the Cx location (device location or delivery address). This will be used to determine the
  // eligibility of DashCard. Fall back to consumer address field below if left empty.
  google.protobuf.StringValue submarket_id = 2;

  // consumer address
  .common.CommonAddress address = 3;

  // request platform
  doordash.payin.common.v1.Platform platform = 4;
}

// GetPaymentOffersResponse
message GetPaymentOffersResponse {
  // list of offers Cx is eligible for
  repeated PaymentOffer offers = 1;
}

// PurchaseWalletCreditsRequest
message PurchaseWalletCreditsRequest {
  // consumer id
  google.protobuf.StringValue consumer_id = 1;

  // payment method id
  google.protobuf.StringValue payment_method_id = 2;

  // amount
  google.protobuf.Int32Value amount = 3;

  // currency
  google.protobuf.StringValue currency = 4;

  // decimal places
  google.protobuf.Int32Value decimal_places = 5;

  // submarket id
  google.protobuf.StringValue submarket_id = 6;
}

// PurchaseWalletCreditsResponse
message PurchaseWalletCreditsResponse {
  // consumer id
  money.MonetaryFields credits_applied = 1;

  // additional credits - optional
  money.MonetaryFields additional_credits = 2;

  // promotional tag - optional
  google.protobuf.StringValue promotional_tag = 3;
}

// GetWalletPromotionRequest
message GetWalletPromotionRequest {
  // consumer id
  google.protobuf.StringValue consumer_id = 1;
  // submarket id
  google.protobuf.StringValue submarket_id = 6;
}

// GetWalletPromotionResponse
message GetWalletPromotionResponse {
  // tag
  google.protobuf.StringValue tag = 1;

  // purchase
  google.protobuf.StringValue purchase = 2;
}

// CreateDashCardSignUpOfferRequest
message CreateDashCardSignUpOfferRequest {
  // Amount of credits to offer
  money.MonetaryFields credit_amount = 1;
  // Name of the signup offer
  google.protobuf.StringValue name = 2;
  // Expiration timestamp of the offer
  google.protobuf.Timestamp expires_at = 3; // nullable
}

// CreateDashCardSignUpOfferResponse
message CreateDashCardSignUpOfferResponse {
  // Created offer
  DashCardSignUpOffer offer = 1;
}

// GetDashCardSignUpOfferRequest
message GetDashCardSignUpOfferRequest {
  // id of the offer
  google.protobuf.StringValue id = 1;
}

// GetDashCardSignUpOfferResponse
message GetDashCardSignUpOfferResponse {
  // DashCardSignUpOffer
  DashCardSignUpOffer offer = 1;
}

// ListDashCardSignUpOfferRequest
message ListDashCardSignUpOfferRequest {
  // Pagination offset
  google.protobuf.Int32Value offset = 1;

  // Pagination limit
  google.protobuf.Int32Value limit = 2;

  // Sort by column name in snakecase
  google.protobuf.StringValue sort = 3;
}

// ListDashCardSignUpOfferResponse
message ListDashCardSignUpOfferResponse {
  // DashCardSignUpOffer
  repeated DashCardSignUpOffer offer = 1;
}

// UpdateDashCardSignUpOfferRequest
message UpdateDashCardSignUpOfferRequest {
  // Updated offer
  DashCardSignUpOffer offer = 1;
}

// GetDashCardSignUpOfferResponse
message UpdateDashCardSignUpOfferResponse {
  // Updated offer
  DashCardSignUpOffer offer = 1;
}

// RunDashCardScriptRequest
message RunDashCardScriptRequest {
  // type of job to run
  google.protobuf.StringValue job_name = 1;
  // json parameters to use with script as a string value
  google.protobuf.StringValue params = 2;
}

// RunDashCardScriptResponse
message RunDashCardScriptResponse {
  // if script is success then returns true
  google.protobuf.BoolValue success = 1;
  // response from script
  google.protobuf.StringValue response = 2;
}

// GetAssociatedCardHoldersByProviderCustomerIdRequest
message GetAssociatedCardHoldersByProviderCustomerIdRequest {
  // provider customer identifier, typically the partner_ref_id
  google.protobuf.StringValue provider_customer_id = 1;
}

// GetAssociatedCardHoldersByProviderCustomerIdResponse
message GetAssociatedCardHoldersByProviderCustomerIdResponse {
  //  All associated card holders
  repeated ProviderCardHolderStatus associated_card_holder_statuses = 1;
}
