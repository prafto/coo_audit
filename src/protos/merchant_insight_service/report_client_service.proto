syntax = "proto3";

// buf:lint:ignore DIRECTORY_SAME_PACKAGE
package report_client_service.v1;

import "common/code.proto";
import "common/organization_service.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option go_package = "report-client-service";
option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.report_client_service.v1";

// Report Client
message ReportClient {
  // client id or developer id
  string client_id = 1;
  // report integration type
  ReportIntegrationType report_integration_type = 2;
  // report groups
  repeated google.protobuf.StringValue report_groups = 3;
  // models that the client is authorized to access
  repeated organization_service.v1.Model models = 4;
  // client config
  ReportClientConfig config = 5;
}

// Report Integration Type
enum ReportIntegrationType {
  // Unknown type
  REPORT_INTEGRATION_TYPE_UNSPECIFIED = 0;
  // Direct Merchant Integration
  REPORT_INTEGRATION_TYPE_DIRECT_MX = 1;
  // Provider / POS Integration
  REPORT_INTEGRATION_TYPE_PROVIDER = 2;
  // Aggregator Integration / store level authorization
  REPORT_INTEGRATION_TYPE_AGGREGATOR = 3;
  // Integration with internal doordash services
  REPORT_INTEGRATION_TYPE_INTERNAL = 4;
}

// Report Client Authorization Flow
enum ReportClientAuthzFlow {
  // Unknown type
  REPORT_CLIENT_AUTHZ_FLOW_UNSPECIFIED = 0;
  // Report Client Authorization Flow V1 ( Mapping sheet )
  REPORT_CLIENT_AUTHZ_FLOW_V1 = 1;
  // Report Client Authorization Flow V2 ( UMS )
  REPORT_CLIENT_AUTHZ_FLOW_V2 = 2;
}

// Report Client Config
message ReportClientConfig {
  // notify webhook
  google.protobuf.BoolValue notify_webhook = 1;
  // webhook URL
  google.protobuf.StringValue webhook_url = 2;
  // notify kafka
  google.protobuf.BoolValue notify_kafka = 3;
  // kafka topic
  google.protobuf.StringValue kafka_topic = 4;
}

// Report Client Authz Migration
message ReportClientAuthzMigration {
  // client id or developer id
  string client_id = 1;
  // report client authorization flow
  ReportClientAuthzFlow report_integration_authz_flow = 2;
}

// Report Client Service
service ReportClientService {
  // Create a new report client
  rpc CreateReportClient(CreateReportClientRequest) returns (CreateReportClientResponse) {}
  // Update report client
  rpc UpdateReportClient(UpdateReportClientRequest) returns (UpdateReportClientResponse) {}
  // Get report client
  rpc GetReportClient(GetReportClientRequest) returns (GetReportClientResponse) {}
  // Update report client authorization Flow
  rpc UpdateReportClientAuthz(UpdateReportClientAuthzRequest) returns (UpdateReportClientAuthzResponse) {}
}

// The request message to create report client
message CreateReportClientRequest {
  // report client
  ReportClient report_client = 1;
  // created by
  google.protobuf.StringValue created_by = 2;
}

// The response message to create report client
message CreateReportClientResponse {
  // report client
  ReportClient report_client = 1;
  // Status code
  code.Code code = 2;
  // Error message when error
  google.protobuf.StringValue error = 3;
}

// The request message to update report client
message UpdateReportClientRequest {
  // report client
  ReportClient report_client = 1;
  // updated by
  google.protobuf.StringValue updated_by = 2;
}

// The response message to update report client
message UpdateReportClientResponse {
  // report client
  ReportClient report_client = 1;
  // Status code
  code.Code code = 2;
  // Error message when error
  google.protobuf.StringValue error = 3;
}

// The request message to get report client
message GetReportClientRequest {
  // client id
  string client_id = 1;
}

// The response message to get report client
message GetReportClientResponse {
  // report client
  ReportClient report_client = 1;
  // Status code
  code.Code code = 2;
  // Error message when error
  google.protobuf.StringValue error = 3;
}

// The request message to update report client authorization flow
message UpdateReportClientAuthzRequest {
  // report client
  repeated ReportClientAuthzMigration report_client_authz_migration = 1;
  // updated by
  google.protobuf.StringValue updated_by = 2;
  // migration task
  google.protobuf.StringValue migration_task = 3;
}

// The response message to update report client authorization flow
message UpdateReportClientAuthzResponse {
  // client ids
  repeated string success_client_ids = 1;
  // Status code
  code.Code code = 2;
  // Error message when error
  google.protobuf.StringValue error = 3;
}
