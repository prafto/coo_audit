syntax = "proto3";

// buf:lint:ignore DIRECTORY_SAME_PACKAGE
package merchantinsightservice.v1;

import "common/code.proto";
import "doordash.api/annotations.proto";
import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option go_package = "merchantinsightservice";
option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.merchantinsightservice.grpc";

// Report Type
enum ReportType {
  // Unkown report type
  REPORT_TYPE_UNSPECIFIED = 0;
  // DAILY DELIVERIES
  REPORT_TYPE_DAILY_DELIVERIES = 1;
  // CONSUMER FEEDBACK
  REPORT_TYPE_CONSUMER_FEEDBACK = 2;
  // MENU ITEM ERROR
  REPORT_TYPE_MENU_ITEM_ERROR = 3;
  // MENU OPEN HOURS
  REPORT_TYPE_MENU_OPEN_HOURS = 4;
  // MENU SPECIAL HOURS
  REPORT_TYPE_MENU_SPECIAL_HOURS = 5;
  // ORDER DETAIL
  REPORT_TYPE_ORDER_DETAIL = 6;
  // PAYOUT SUMMARY
  REPORT_TYPE_PAYOUT_SUMMARY = 7;
  // TRANSACTION DETAIL
  REPORT_TYPE_TRANSACTION_DETAIL = 8;
  // TEMPORARY DEACTIVATION
  REPORT_TYPE_TEMPORARY_DEACTIVATION = 9;
  // AVOIDABLE WAIT
  REPORT_TYPE_AVOIDABLE_WAIT = 10;
  // CANCELLED ORDERS
  REPORT_TYPE_CANCELLED_ORDERS = 11;
  // OPERATION STORE LEVEL
  REPORT_TYPE_OPERATION_STORE_LEVEL = 12;
  // SPONSORED LISTING
  REPORT_TYPE_SPONSORED_LISTING = 13;
  // PROMOTION
  REPORT_TYPE_PROMOTION = 14;
  // DRIVE CANCELLATIONS
  REPORT_TYPE_DRIVE_CANCELLATIONS = 15;
  // DRIVE REFUNDS
  REPORT_TYPE_DRIVE_REFUNDS = 16;
  // DRIVE ORDERS
  REPORT_TYPE_DRIVE_ORDERS = 17;
}

// Report status
enum ReportStatus {
  // Unkown status
  REPORT_STATUS_UNSPECIFIED = 0;
  // STATUS PENDING
  REPORT_STATUS_PENDING = 1;
  // STATUS FAILED
  REPORT_STATUS_FAILED = 2;
  // STATUS SUCCEEDED
  REPORT_STATUS_SUCCEEDED = 3;
}

// Webhook Auth Protocol
enum WebhookAuthProtocol {
  // Unknown Protocol
  WEBHOOK_AUTH_PROTOCOL_UNSPECIFIED = 0;
  // token
  WEBHOOK_AUTH_PROTOCOL_TOKEN = 1;
  // signature
  WEBHOOK_AUTH_PROTOCOL_SIGNATURE = 2;
}

// State of the onboarded report
enum ReportState {
  // Unknown report state
  REPORT_STATE_UNSPECIFIED = 0;
  // PUBLISHED
  REPORT_STATE_PUBLISHED = 1;
  // DRAFT
  REPORT_STATE_DRAFT = 2;
  // IN_REVIEW
  REPORT_STATE_IN_REVIEW = 3;
  // DELETED
  REPORT_STATE_DELETED = 4;
}

// Data Engine
enum DataEngine {
  // Unknown Data Engine
  DATA_ENGINE_UNSPECIFIED = 0;
  // Snowflake
  DATA_ENGINE_SNOWFLAKE = 1;
  // Cockroach DB
  DATA_ENGINE_CRDB = 2;
}

// This is a placeholder
// The greeting service definition
service GreeterService {
  // Sends a greeting
  rpc SayHello(SayHelloRequest) returns (SayHelloResponse) {}
}

// The request message containing the user's name
message SayHelloRequest {
  // name
  string name = 1;
}

// The response message containing the greetings
message SayHelloResponse {
  // name
  string message = 1;
}

// The transaction Report definition
service TransactionReportService {
  // Sends a transaction report
  rpc TransactionReport(TransactionReportRequest) returns (stream TransactionReportResponse) {}
}

// The transaction file Report definition
service MxReportService {
  // Sends a transaction report
  rpc MxCreateReport(MxCreateReportRequest) returns (MxCreateReportResponse) {}
  // get a report by report job ID
  rpc MxGetReport(MxGetReportRequest) returns (MxGetReportResponse) {}
  // request a report synchronously
  rpc MxSyncCreateReport(MxSyncCreateReportRequest) returns (MxSyncCreateReportResponse) {}
}

// The request message containing the user's name
message TransactionReportRequest {
  // business id
  google.protobuf.Int32Value business_id = 1;
  // report type
  ReportType report_type = 2;
  // report start date
  google.protobuf.Timestamp start_date = 3;
  // report end date
  google.protobuf.Timestamp end_date = 4;
}

// The request message containing the user's name
message MxCreateReportRequest {
  // business id
  repeated google.protobuf.Int32Value business_ids = 1;
  // store id
  repeated google.protobuf.Int32Value store_ids = 2;
  // report type
  ReportType report_type = 3 [deprecated = true];
  // report start date
  google.protobuf.Timestamp start_date = 4;
  // report end date
  google.protobuf.Timestamp end_date = 5;
  // client identifier to look up
  google.protobuf.StringValue client_id = 6;
  // client webhook URL
  google.protobuf.StringValue webhook_url = 7;
  // report info
  repeated ReportInfo report_info = 10;
  // split report
  SplitReport split_report = 11;
  // netsuite entity id
  repeated google.protobuf.Int32Value netsuite_entity_ids = 12;
  // language code
  google.protobuf.StringValue language_code = 13;
  // report package name
  google.protobuf.StringValue report_package_name = 14;
}

// The message containing info on if the report should be split
message SplitReport {
  // flag to indicate if report should be split
  google.protobuf.BoolValue split = 1;
  // data threshold
  google.protobuf.Int32Value data_threshold = 2;
}

// The message containing the report info being requested
message ReportInfo {
  // report name
  google.protobuf.StringValue report_name = 1;
  // report version
  google.protobuf.Int32Value report_version = 2;
  // excluded column names
  repeated google.protobuf.StringValue excluded_column_names = 3;
  // columns with custom expression
  repeated ColumnWithCustomExpression columns_with_custom_expression = 4;
  // custom filters
  repeated CustomFilter custom_filters = 5;

  // object to override condition
  repeated ConditionColumnInfo override_conditions = 6;

  // object to override order by
  repeated OrderByColumnInfo override_order_by = 7;

  // object to override group by
  repeated ColumnInfo override_group_by = 8;

  // Column Data type
  enum SqlDataType {
    // UNSPECIFIED
    SQL_DATA_TYPE_UNSPECIFIED = 0;
    // int
    SQL_DATA_TYPE_INTEGER = 1;
    // 20:20:31
    SQL_DATA_TYPE_TIMESTAMP = 2;
    // 2025-02-01
    SQL_DATA_TYPE_DATE = 3;
    // column name
    SQL_DATA_TYPE_VARCHAR = 4;
    // 11
    SQL_DATA_TYPE_NUMERIC_38_0 = 5;
    // 12.02
    SQL_DATA_TYPE_NUMERIC_38_2 = 6;
  }

  // Order
  enum OrderType {
    // UNSPECIFIED
    ORDER_TYPE_UNSPECIFIED = 0;
    // ASC
    ORDER_TYPE_ASC = 1;
    // DESC
    ORDER_TYPE_DESC = 2;
  }

  // Condition Type
  enum ConditionType {
    // UNSPECIFIED
    CONDITION_TYPE_UNSPECIFIED = 0;
    // STANDARD_DATE needs to be included in metadata
    CONDITION_TYPE_STANDARD_DATE = 1;
    // EQUALS
    CONDITION_TYPE_EQUALS = 2;
    // NOT_EQUALS
    CONDITION_TYPE_NOT_EQUALS = 3;
    // IS_NULL
    CONDITION_TYPE_IS_NULL = 4;
    // IS_NOT_NULL
    CONDITION_TYPE_IS_NOT_NULL = 5;
    // IN
    CONDITION_TYPE_IN = 6;
  }

  // Column Information
  message ColumnInfo {
    // column name
    google.protobuf.StringValue name = 1;
    // If the column is to be an aggregation e.g. SUM, MAX, MIN, AVG, etc
    AggregationType aggregation_type = 2;
    // alias for column
    google.protobuf.StringValue alias = 3;
    // default to varchar return as is from database
    SqlDataType sql_data_type = 4;
  }

  // Order By column Information
  message OrderByColumnInfo {
    // order
    OrderType order_type = 1;
    // default to varchar return as is from database
    ColumnInfo column_info = 2;
  }

  // Order By column Information
  message ConditionColumnInfo {
    // condition Type
    ConditionType condition_type = 1;
    // value
    google.protobuf.StringValue value = 2;
    // default to varchar return as is from database
    ColumnInfo column_info = 3;
  }

  // SELECT columns
  repeated ColumnInfo columns = 9;
}

// The message containing the custom expression for a column
message ColumnWithCustomExpression {
  // corresponding column name added in report metadata - primarily used for ordering
  google.protobuf.StringValue report_metadata_column_name = 1;
  // alias
  google.protobuf.StringValue column_alias = 2;
  // default value if not found in db
  google.protobuf.DoubleValue default_value = 3;
  // aggregation_type
  AggregationType aggregation_type = 4;
  // field expression
  repeated FieldExpression field_expressions = 5;
}

// The message containing the field name to include in the custom expression and operator used
message FieldExpression {
  // field expression, can be a column name or access string for a json column
  google.protobuf.StringValue expression = 1;
  // operator
  Operator operator = 2;
  // Operator
  enum Operator {
    // UNSPECIFIED
    OPERATOR_UNSPECIFIED = 0;
    // ADD
    OPERATOR_ADD = 1;
    // MINUS
    OPERATOR_MINUS = 2;
  }
}

// Custom filter
message CustomFilter {
  // column name
  string name = 1;
  // list of values
  repeated string values = 2;
}

// Aggregation type
enum AggregationType {
  // Unspecified
  AGGREGATION_TYPE_UNSPECIFIED = 0;
  // Count
  AGGREGATION_TYPE_COUNT = 1;
  // Sum
  AGGREGATION_TYPE_SUM = 2;
  // Avg
  AGGREGATION_TYPE_AVG = 3;
  // Min
  AGGREGATION_TYPE_MIN = 4;
  // Max
  AGGREGATION_TYPE_MAX = 5;
}

// sync create report request
message MxSyncCreateReportRequest {
  // business id
  repeated google.protobuf.Int32Value business_ids = 1;
  // store id
  repeated google.protobuf.Int32Value store_ids = 2;
  // report type
  ReportType report_type = 3;
  // report start date
  google.protobuf.Timestamp start_date = 4;
  // report end date
  google.protobuf.Timestamp end_date = 5;
  // client identifier to look up
  google.protobuf.StringValue client_id = 6;
}

// The request message containing the user's name
message MxGetReportRequest {
  // client identifier to look up
  google.protobuf.StringValue client_id = 1;
  // report id
  google.protobuf.StringValue report_id = 2;
}

// The response message containing the transaction report request
message TransactionReportResponse {
  // report id
  google.protobuf.StringValue report_id = 1;
  // subtotal
  google.protobuf.DoubleValue subtotal = 2;
  // business_id
  google.protobuf.Int32Value business_id = 3;
}

// The response message containing the transaction report request
message MxCreateReportResponse {
  // job id
  google.protobuf.StringValue job_id = 1 [deprecated = true];
  // Status code
  code.Code code = 2;
  // Error message when error
  google.protobuf.StringValue error = 3;
  // report id
  google.protobuf.StringValue report_id = 4;
}

// The response message containing the transaction report request
message MxGetReportResponse {
  // job id
  google.protobuf.StringValue job_id = 1 [deprecated = true];
  // report type
  ReportType report_type = 2 [deprecated = true];
  // report link
  google.protobuf.StringValue report_link = 3;
  // Status code
  code.Code code = 4;
  // Error message when error
  google.protobuf.StringValue error = 5;
  // report Status
  ReportStatus report_status = 6;
  // report id
  google.protobuf.StringValue report_id = 7;
  // report info
  google.protobuf.StringValue report_info = 10;
}

// The response message containing sync report create request
message MxSyncCreateReportResponse {
  // job id
  google.protobuf.StringValue job_id = 1 [deprecated = true];
  // report type
  ReportType report_type = 2;
  // report link
  google.protobuf.StringValue report_link = 3;
  // Status code
  code.Code code = 4;
  // Error message when error
  google.protobuf.StringValue error = 5;
  // report Status
  ReportStatus report_status = 6;
  // report id
  google.protobuf.StringValue report_id = 7;
}

// Mx Report Webhook Authentication service
service MxReportWebhookAuthenticationService {
  // Create a new Webhook Header
  rpc MxCreateWebhookHeader(MxCreateWebhookHeaderRequest) returns (MxCreateWebhookHeaderResponse) {}
}

// create webhook header request
message MxCreateWebhookHeaderRequest {
  // client identifier
  google.protobuf.StringValue client_id = 1;
  // auth key
  google.protobuf.StringValue auth_key = 2;
  // auth token
  google.protobuf.StringValue auth_token = 3;
  // auth protocol
  WebhookAuthProtocol auth_protocol = 4;
  // is active
  google.protobuf.BoolValue is_active = 5;
  // version
  google.protobuf.StringValue version = 6;
}

// create webhook header response
message MxCreateWebhookHeaderResponse {
  // Whether CreateWebhookHeader request was successful or not
  google.protobuf.BoolValue success = 1;
}

// Mx Master Report Service
service MxMasterReportService {
  option (doordash.api.service) = {
    name: "merchant-insight-service-web"
    url: "merchant-insight-service-web.service.prod.ddsd"
    port: 50051
    name_spaces: ["merchant-insight-service"]
    api_key_name: "MERCHANT-INSIGHT-SERVICE-API-KEY"
    owner: {
      name: "merchant-insight-service"
      id: "alerts-for-flink-storemenuetl"
      slack_channel: "#eng-data-intelligence-builds"
      email_alias: "eng-data-intelligence@doordash.com"
    }
    target_products: [INTERNAL]
  };

  // Onboard a new report
  rpc MxOnboardReport(MxOnboardReportRequest) returns (MxOnboardReportResponse) {
    option (google.api.http) = {
      post: "/merchant-insight-service/v1/report-templates"
      body: "*"
    };
    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: DEV
      authorization: [DD_EMPLOYEE]
      target_products: [INTERNAL]
    };
  }
  // Get Onboarded report(s)
  rpc MxGetMasterReports(MxGetMasterReportsRequest) returns (MxGetMasterReportsResponse) {
    option (google.api.http) = {get: "/merchant-insight-service/v1/report-templates"};
    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: DEV
      authorization: [DD_EMPLOYEE]
      target_products: [INTERNAL]
    };
  }
  // Update master report State
  rpc MxUpdateMasterReportState(MxUpdateMasterReportStateRequest) returns (MxUpdateMasterReportStateResponse) {
    option (google.api.http) = {
      put: "/merchant-insight-service/v1/report-templates/{id}/state"
      body: "*"
    };
    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: DEV
      authorization: [DD_EMPLOYEE]
      target_products: [INTERNAL]
    };
  }
  // Edit master report
  rpc MxEditMasterReport(MxEditMasterReportRequest) returns (MxEditMasterReportResponse) {
    option (google.api.http) = {
      put: "/merchant-insight-service/v1/report-templates/{id}"
      body: "*"
    };
    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: DEV
      authorization: [DD_EMPLOYEE]
      target_products: [INTERNAL]
    };
  }
  // Update master report config
  rpc UpdateMasterReportConfig(UpdateMasterReportConfigRequest) returns (UpdateMasterReportConfigResponse) {
    option (google.api.http) = {
      patch: "/merchant-insight-service/v1/report-templates/{id}/config"
      body: "*"
    };
    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: DEV
      authorization: [DD_EMPLOYEE]
      target_products: [INTERNAL]
    };
  }
}

// Master report message with all the report related information
message MasterReport {
  // id of the onboarded report
  google.protobuf.StringValue id = 1;
  // report name
  google.protobuf.StringValue report_name = 2;
  // report version
  google.protobuf.Int32Value version = 3;
  // report description
  google.protobuf.StringValue description = 4;
  // report metadata (stringified JSON)
  google.protobuf.StringValue report_metadata = 5;
  // report state
  ReportState report_state = 6;
  // report onboarded by
  google.protobuf.StringValue created_by = 7;
  // report onboarded date
  google.protobuf.Timestamp created_at = 8;
  // report updated by
  google.protobuf.StringValue updated_by = 9;
  // report updated date
  google.protobuf.Timestamp updated_at = 10;
  // business line
  google.protobuf.StringValue business_line = 11;
  // is encrypted enabled
  google.protobuf.BoolValue is_encryption_enabled = 12;
  // data engine
  DataEngine data_engine = 13;
  // review links
  google.protobuf.StringValue review_links = 14;
  // crdb report metadata (stringified JSON)
  google.protobuf.StringValue crdb_report_metadata = 15;
}

// Mx Onboard Report Service Request
message MxOnboardReportRequest {
  // report name
  google.protobuf.StringValue report_name = 1;
  // report description
  google.protobuf.StringValue description = 2;
  // report metadata (stringified JSON)
  google.protobuf.StringValue report_metadata = 3;
  // report state
  ReportState report_state = 4;
  // report onboarded by
  google.protobuf.StringValue created_by = 5;
  // report onboarded date
  google.protobuf.Timestamp created_at = 6;
  // report updated by
  google.protobuf.StringValue updated_by = 7;
  // report updated date
  google.protobuf.Timestamp updated_at = 8;
  // business line
  google.protobuf.StringValue business_line = 9;
  // is encrypted enabled
  google.protobuf.BoolValue is_encryption_enabled = 10;
  // data engine
  DataEngine data_engine = 11;
  // review links
  google.protobuf.StringValue review_links = 12;
  // crdb report metadata (stringified JSON)
  google.protobuf.StringValue crdb_report_metadata = 13;
}

// Mx Onboard Report Service Response
message MxOnboardReportResponse {
  // id of the onboarded report
  google.protobuf.StringValue id = 1;
  // report name
  google.protobuf.StringValue report_name = 2;
  // report version
  google.protobuf.Int32Value version = 3;
  // Whether Onboard Report request was successful or not
  google.protobuf.BoolValue success = 4;
  // Error message when error
  google.protobuf.StringValue error = 5;
}

// Mx Get Master Report Service Request
message MxGetMasterReportsRequest {
  // id of the onboarded report
  // if id is not provided, all onboarded reports will be returned
  google.protobuf.StringValue id = 1;
}

// Mx Get Master Report Service Response
message MxGetMasterReportsResponse {
  // List of onboarded reports
  repeated MasterReport report = 1;
  // Error message when error
  google.protobuf.StringValue error = 2;
}

// Update Master Report State Request
message MxUpdateMasterReportStateRequest {
  // id of the master report
  google.protobuf.StringValue id = 1;
  // new report state
  ReportState report_state = 2;
  // master report updated by
  google.protobuf.StringValue updated_by = 3;
  // master report updated timestamp
  google.protobuf.Timestamp updated_at = 4;
}

// Update Master Report State Response
message MxUpdateMasterReportStateResponse {
  // id of the master report
  google.protobuf.StringValue id = 1;
  // new report state
  ReportState report_state = 2;
  // Whether update report State request was successful or not
  google.protobuf.BoolValue success = 3;
  // Error message when error
  google.protobuf.StringValue error = 4;
}

// Edit Master Report Request
message MxEditMasterReportRequest {
  // id of the master report
  google.protobuf.StringValue id = 1;
  // report description
  google.protobuf.StringValue description = 2;
  // report metadata (stringified JSON)
  google.protobuf.StringValue report_metadata = 3;
  // report updated by
  google.protobuf.StringValue updated_by = 4;
  // report updated date
  google.protobuf.Timestamp updated_at = 5;
  // business line
  google.protobuf.StringValue business_line = 6;
  // data engine
  DataEngine data_engine = 7;
  // review links
  google.protobuf.StringValue review_links = 8;
}

// Edit Master Report Response
message MxEditMasterReportResponse {
  // id of the master report
  google.protobuf.StringValue id = 1;
  // Whether edit master report request was successful or not
  google.protobuf.BoolValue success = 2;
  // Error message when error
  google.protobuf.StringValue error = 3;
}

// Update Master Report Config Request
message UpdateMasterReportConfigRequest {
  // id of the master report
  google.protobuf.StringValue id = 1;
  // admin lock query - if set, report query will not be regenerated based on business logic.
  google.protobuf.BoolValue admin_lock_query = 2;
  // admin override table_name - if set this will override the table name in the report metadata.
  google.protobuf.StringValue admin_override_table_name = 3;
}

// Update Master Report Config Response
message UpdateMasterReportConfigResponse {
  // id of the master report
  google.protobuf.StringValue id = 1;
  // Whether Update Master Report Config request was successful or not
  google.protobuf.BoolValue success = 2;
  // Error message when error
  google.protobuf.StringValue error = 3;
}

// Snowflake Service
service SnowflakeService {
  option (doordash.api.service) = {
    name: "snowflake-merchant-insight-service-web"
    url: "merchant-insight-service-web.service.prod.ddsd"
    port: 50051
    name_spaces: ["snowflake-merchant-insight-service"]
    api_key_name: "MERCHANT-INSIGHT-SERVICE-API-KEY"
    owner: {
      name: "snowflake-merchant-insight-service"
      id: "alerts-for-flink-storemenuetl"
      slack_channel: "#eng-data-intelligence-builds"
      email_alias: "eng-data-intelligence@doordash.com"
    }
    target_products: [INTERNAL]
  };
  // Get Table Column Info
  rpc GetTableColumnInfo(GetTableColumnInfoRequest) returns (GetTableColumnInfoResponse) {
    option (google.api.http) = {get: "/snowflake-merchant-insight-service/v1/table-column-info"};
    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: DEV
      authorization: [DD_EMPLOYEE]
      target_products: [INTERNAL]
    };
  }
}

// Get Tables Column Info Request
message GetTableColumnInfoRequest {
  // table name
  string table_name = 1;
}

// Get Table Column Info Response
message GetTableColumnInfoResponse {
  // list of columns
  repeated ColumnInfo column_info = 1;
  // Whether Get Table Column Info request was successful or not
  google.protobuf.BoolValue success = 4;
  // Error message when error occurs
  google.protobuf.StringValue error = 2;
}

// Column Info
message ColumnInfo {
  // column name
  string column_name = 1;
  // column datatype
  string column_datatype = 2;
}

// Mx Report Encryption Service
service MxReportEncryptionService {
  // Update client public key
  rpc MxUpdateClientPublicKey(MxUpdateClientPublicKeyRequest) returns (MxUpdateClientPublicKeyResponse) {}
}

// Mx Update Client Public Key request
message MxUpdateClientPublicKeyRequest {
  // client identifier
  google.protobuf.StringValue client_id = 1;
  // public key
  google.protobuf.StringValue public_key = 2;
}

// Mx Update Client Public Key response
message MxUpdateClientPublicKeyResponse {
  // Whether MxUpdateClientPublicKey request was successful or not
  google.protobuf.BoolValue success = 1;
}

// report status Kafka event
message ReportStatusKafka {
  //Report Id of the report
  string report_id = 1;
  //Report Status of the report
  ReportStatus report_status = 2;
}
