syntax = "proto3";

package polyglotic.v1;

import "common/date.proto";
import "google/protobuf/wrappers.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.asgardguice";

// Service for translating and validating queries
service PolygloticService {
  // translate and validate a single query
  rpc TranslateQuery(TranslateQueryRequest) returns (TranslateQueryResponse);
  // translate and validate multiple queries
  rpc TranslateMultipleQueries(TranslateMultipleQueriesRequest) returns (TranslateMultipleQueriesResponse);
  // translate and validate a provided amount of queries from the snowflake query history on a given day
  rpc TranslateSnowflakeQueryHistory(TranslateSnowflakeQueryHistoryRequest) returns (TranslateSnowflakeQueryHistoryResponse);
}

// Result from the translation and validation of original query
message TranslateQueryResponse {
  // Original query
  string input_query = 1;
  // Translated query (if translation and validation succeeds, else empty string)
  string output_query = 2;
  // Reason for the translation failing
  string translation_failure_reason = 3;
  // Reason for the validation failing
  string validation_failure_reason = 4;
}

// Request to translate and validate a query
message TranslateQueryRequest {
  // Query to be translated and validated
  string input_query = 1;
  // Language to translate from
  Dialect input_dialect = 2;
  // Language to translate to
  Dialect target_dialect = 3;
  // User who submitted the query
  string user = 4;
}

// Response containing the translation and validation results of multiple queries
message TranslateMultipleQueriesResponse {
  // Results from translation and validation of original queries
  repeated TranslateQueryResponse results = 1;
}

// Request to translate and validate multiple queries
message TranslateMultipleQueriesRequest {
  // Translation and validation requests for queries
  repeated TranslateQueryRequest requests = 1;
}

// Request to translate and validate a provided amount of queries from the snowflake query history on a given day
message TranslateSnowflakeQueryHistoryRequest {
  // Date to query the snowflake query history
  date.Date date = 1;
  // Number of queries to translate and validate
  uint32 limit = 2;
  // User who submitted the request
  string user = 3;
}

// Response containing the translation and validation results of multiple queries from the snowflake query history
message TranslateSnowflakeQueryHistoryResponse {
  // Results from translation and validation of original queries
  repeated TranslateQueryResponse results = 1;
  // Number of snowflake queries that were filtered out due to not querying a table
  uint32 queries_filtered_by_empty_table_identifiers = 2;
  // Number of snowflake queries that were filtered out due to not having a matching table in datalake
  uint32 queries_filtered_by_mismatched_table_mappings = 3;
  // Reason for the query on snowflake query history table failing
  string query_failure_reason = 4;
}

// Event from polyglotic producer to process a query
message QueryEvent {
  // Snowflake query to be translated and validated
  string input_query = 1;
  // Snowflake query with table names mapped to datalake table names
  string mapped_input_query = 2;
  // Amount of snowflake credits used by the query
  double snowflake_credits_used = 3;
  // Time elapsed for the query to run on snowflake
  int64 snowflake_time_elapsed = 4;
  // Amount of bytes scanned by the query on snowflake
  int64 snowflake_bytes_scanned = 5;
  // User who submitted the original snowflake query
  string user_name = 6;
  // Snowflake warehouse used to run the query
  string snowflake_warehouse_name = 7;
}

// Dialects supported by Polyglotic
enum Dialect {
  // Unspecified dialect.
  DIALECT_UNSPECIFIED = 0;
  // Represents the Snowflake SQL dialect.
  DIALECT_SNOWFLAKE = 1;
  // Represents the Trino SQL dialect.
  DIALECT_TRINO = 2;
}
