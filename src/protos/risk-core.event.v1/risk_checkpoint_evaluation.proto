syntax = "proto3";

package risk_core.v1.events.v1;

import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

// RiskCoreCheckpointEvaluationEvent, encapsulates all necessary
// information for an entire checkpoint evaluation
message RiskCoreCheckpointEvaluationEvent {
  // evaluation_id is the unique uuid for each evaluation request
  string evaluation_id = 1;
  // checkpoint is the checkpoint name
  string checkpoint = 2;
  // mode is the live or shadow mode for the evaluation
  string mode = 3;

  // segment_user_type, segment user_type, can be user or consumer or delivery
  string segment_user_type = 4;
  // segment_user_id, corresponding to segment_user_type, just the id
  string segment_user_id = 5;
  // entity_type, entity type can be user, consumer or merchant
  string entity_type = 6;
  // entity_id, corresponding to entity_type, id
  string entity_id = 7;
  // extra_tracking_props, a map of additional properties to be logged
  string extra_tracking_props = 8; // json object from google.protobuf.Struct

  // final_action, checkpoint evaluation final action after the reduce function
  string final_action = 11;
  // final_action_details, detail messgae within final action
  string final_action_details = 12; // json object from google.protobuf.Struct

  // Encapsulates all the information of a specific [RuleOutput] that an engine evaluation produced.
  message OutputDetails {
    // Serialization of RuleOutput.details
    google.protobuf.Struct details = 1;

    // RuleIds of the rules that produced this RuleOutput
    repeated string rules = 2;

    // Only applies to Actions.
    // The labels that originated the Action in LabelsToActionsFact
    repeated string labels = 3;
  }
  // actions all actions (to a string) returned by the checkpoint
  string actions = 21; // json serialization of map<string, OutputDetails>
  // labels, all labels of the checkpoint (to a string) of the checkpoint
  string labels = 22; // json serialization of map<string, OutputDetails>
  // exemptions, all exemptions of the checkpoint (to a string)
  string exemptions = 23; // json serialiation of map<string, OutputDetails>

  // FactResult, essentially all the rules' results and this rule's dependent
  // facts' results value
  message FactResult {
    // output, fact or rule's output
    google.protobuf.Value output = 1;
    // details, output detail map to a protobuf struct
    google.protobuf.Struct details = 2;
    // provenance, any value tracked within the rule and facts
    google.protobuf.Struct provenance = 4;

    // error, evaluation error
    string error = 6;

    // rule or fact dependencies
    repeated string dependencies = 7;
    // fact or rule in shadow mode
    string mode = 10;

    // total execution of each rule or fact
    google.protobuf.Int64Value execution_ms = 11;

    // How many ms since the start of the checkpoint evaluation did this fact start to run
    google.protobuf.Int64Value start_at_ms = 12;
  }

  // builtin_results, this may not be needed in patronus
  string builtin_results = 31; // json serialization of map<string, FactResult>
  // fact_results, checkpoint's all fact results
  string fact_results = 32; // json serialization of map<string, FactResult>
  // rule_results, checkpoint's all rule results
  string rule_results = 33; // json serialization of map<string, FactResult>

  // delivery_id, optional, if the checkpoint has the delivery_id, carry it
  string delivery_id = 40;

  // link_id is a random uuid field being used to link & find
  // topics published by RDP and risk-core
  string link_id = 41;

  // stage_change_id is used to track which staged config resulted in this evaluation
  // This should only be set in stage evalutions.
  string stage_change_id = 42;

  // evaluated_at is the timestamp when the checkpoint evaluation completes
  google.protobuf.Timestamp evaluated_at = 50;

  // experiment_overrides is a field that is used to track overrides in experiments
  // json serialization of map<string, risk_core.v1.risk_evaluation_service.v1.ExperimentGroupConfig>
  string experiment_overrides = 51;
}
