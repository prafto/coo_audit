syntax = "proto3";

package aletheia_sim_eval.v1;

import "feed_service/facet.proto";
import "feed_service/facet_response_v2.proto";
import "google/protobuf/wrappers.proto";

option go_package = "github.com/doordash/services-protobuf/generated/aletheia_sim_eval/api/v1";
option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.aletheia_sim_eval.rpc.api";

// The sampled input entities generated by the query sampler required to perform an evaluation
message SampledRequestEntities {
  // a list of sampled entities
  repeated SampledRequestEntity sampled_request_entities = 1;
}

// Each sampled request entity contained the sampled request and required supporting data required for evaluation
message SampledRequestEntity {
  // the data of the sampled input entity
  oneof data {
    // homepage sampled input entity
    SampledHomepageFeedRequest sampled_homepage_feed_request = 1;
    //...other sampled requests
  }
}

//Sampled homepage request with impressions
message SampledHomepageFeedRequest {
  // the request
  feed_service.GetHomePageFacetFeedRequest homepage_feed_request = 1;
  // request headers and custom fields, used to reconstruct the full request
  map<string, string> metadata = 2;
}

// the resulting entities generated by the query replayer component
message EvaluationEntities {
  // a list of results that will be fed to the evaluator
  repeated ReplayedEntities replayed_entities = 1;
}

// the replayed entities consist of the sampled request and the results generated for them
message ReplayedEntities {
  // the sampled request
  SampledRequestEntity sampled_request_entity = 1;
  // the responses for evaluation
  repeated ResponseForEvaluation responses_for_evaluation = 2;
}

// The response generated for an evaluation
message ResponseForEvaluation {
  // status of the response. e.g success/failure
  bool status = 1;
  // the response that needs evaluation
  oneof response {
    // homepage feed response
    feed_service.GetFacetFeedResponseV2 homepage_feed_response = 2;
    // other response types go here...
  }
  // time taken to return the response
  double response_latency_ms = 3;
}
