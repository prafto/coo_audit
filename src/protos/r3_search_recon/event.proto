syntax = "proto3";

package r3_search_recon.v1;

import "common/common.proto";
import "google/protobuf/timestamp.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.retail.events.recon";

// Tracking for MenuItemChangeEvent from the Menu CDC topic
// flattened to represent one event per item change
message MenuSingleItemChangeEvent {
  // uuid of event
  string event_id = 1;
  // store id of which this menu belongs to.
  string store_id = 2;
  // menuv2 partition key of a store menu.
  string store_menu_id = 3;
  // item id
  string item_id = 4;
  // menu id of this item
  string menu_id = 5;
  // current status of the item
  LinkStatus link_status = 6;
  // menu_change_event_id that triggered this item change event.
  string menu_change_event_id = 7;
  // Timestamp when the event was published to Menu CDC topic
  google.protobuf.Timestamp published_at = 8;
  // Timestamp when the event was processed by the index reconciliation service.
  google.protobuf.Timestamp processed_at = 9;
}

// The status of the item
enum LinkStatus {
  // when status is unknown
  LINK_STATUS_UNSPECIFIED = 0;
  // item belongs to menu
  LINK_STATUS_ACTIVE = 1;
  // item does not belong to menu
  LINK_STATUS_DELETE = 2;
}

// Tracking event for CatalogV3Update Event from the Catalog CDC topic
message CatalogV3UpdateEvent {
  option (common.dataframe_transformations) = "pii_obfuscation";

  // business id
  string business_id = 1;
  // item merchant supplied id
  string item_merchant_supplied_id = 2;
  // entity type
  string entity_type = 3;
  // Timestamp when the event was published to Catalog CDC topic
  google.protobuf.Timestamp published_at = 4;
  // Timestamp when the event was processed by the index reconciliation service.
  google.protobuf.Timestamp processed_at = 5;
  // uuid of event
  string event_id = 6;
}

// Tracking event for EnrichedRetailItemV3 Event from the ES Sink topic
message RetailItemV3ESSinkEvent {
  // store id of which this menu belongs to.
  string store_id = 1;
  // menu id of this item
  string menu_id = 2;
  // item id
  string item_id = 3;
  // business id
  string business_id = 4;
  // item merchant supplied id
  string item_merchant_supplied_id = 5;
  // item name
  string item_name = 6;
  // item description
  string item_description = 7;
  // product group
  string product_group = 8;
  // category1 id
  string category1_id = 9;
  // category1 name
  string category1_name = 10;
  // category2 id
  string category2_id = 11;
  // category2 name
  string category2_name = 12;
  // popularity
  double popularity = 13;
  // active flag
  bool is_active = 14;
  // last updated by
  string last_update_source = 15;
  // Timestamp when the event was updated by the R3 Assembler
  google.protobuf.Timestamp updated_at = 16;
  // Timestamp when the event was published to Menu CDC topic
  google.protobuf.Timestamp published_at = 17;
  // Timestamp when the event was processed by the index reconciliation service.
  google.protobuf.Timestamp processed_at = 18;
  // Source of the data
  string event_source = 19;
  // uuid of event
  string event_id = 20;
}

// Tracking event for EnrichedRetailItemV3 Event from Retail Index Writers
message RetailItemV3IndexWriterEvent {
  // store id of which this menu belongs to.
  string store_id = 1;
  // menu id of this item
  string menu_id = 2;
  // item id
  string item_id = 3;
  // business id
  string business_id = 4;
  // item merchant supplied id
  string item_merchant_supplied_id = 5;
  // item name
  string item_name = 6;
  // item description
  string item_description = 7;
  // product group
  string product_group = 8;
  // category1 id
  string category1_id = 9;
  // category1 name
  string category1_name = 10;
  // category2 id
  string category2_id = 11;
  // category2 name
  string category2_name = 12;
  // popularity
  double popularity = 13;
  // active flag
  bool is_active = 14;
  // last updated by
  string last_update_source = 15;
  // Timestamp when the event was updated by the R3 Assembler
  google.protobuf.Timestamp updated_at = 16;
  // Timestamp when the event was published to Menu CDC topic
  google.protobuf.Timestamp published_at = 17;
  // Timestamp when the event was processed by the index writer
  google.protobuf.Timestamp processed_at = 18;
  // Source of the data
  string index_writer_type = 19;
  // uuid of event
  string event_id = 20;
}

// Tracking failed RetailItemV3 events in DLQ
message RetailItemV3DLQEvent {
  // store id of this item
  string store_id = 1;
  // menu id of this item
  string menu_id = 2;
  // item id
  string item_id = 3;
  // last updated by
  string last_update_source = 4;
  // error message
  string error_msg = 5;
  // Timestamp when the event was published to CDC topic
  google.protobuf.Timestamp published_at = 6;
  // Timestamp when the event was pushed to the DLQ
  google.protobuf.Timestamp dlq_at = 7;
  // uuid of event
  string event_id = 8;
  // source of dlq event
  string dlq_source = 9;
}

// Tracking for Retail enrichment failures at  item level
message RetryFailureRecordItemEvent {
  // uuid of event
  string event_id = 1;
  // store id of which this menu belongs to.
  string store_id = 2;
  // menuv2 partition key of a store menu.
  string store_menu_id = 3;
  // item id
  string item_id = 4;
  // menu id of this item
  string menu_id = 5;
  // current status of the update request, active or delete
  LinkStatus link_status = 6;
  // number of retry attempts
  int32 retry_count = 7;
  // source type of the update
  string update_source = 8;
  // error message / exception while this event was processed last
  string error_msg = 9;
  // Timestamp when the source event was published to Menu/Catalog CDC topic / origin
  google.protobuf.Timestamp origin_published_at = 10;
  // Timestamp when the event was published to retry topic.
  google.protobuf.Timestamp retry_published_at = 11;
  // Timestamp when the event was processed by the index reconciliation service.
  google.protobuf.Timestamp last_processed_at = 12;
}
