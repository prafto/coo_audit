syntax = "proto3";

package dasher_sentiment_service.v1;

import "common/service_client_config.proto";
import "component-catalog.common/shared/components/image.proto";
import "google/protobuf/wrappers.proto";

option go_package = "github.com/doordash/services-protobuf/generated/dasher_sentiment_service/api/v1";
option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.dasher_sentiment_service.rpc.api";

// Service to handle in-app dasher surveys
service DasherSurveyService {
  option (service_client.client_config).service_name = "dasher-sentiment-service";
  option (service_client.client_config).service_app = "api";

  // Gets a survey if an dasher is eligible to be served one
  rpc GetSurvey(GetSurveyRequest) returns (GetSurveyResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 1000;
  }

  // Submits responses to a survey for a dasher
  rpc SubmitSurveyResponses(SubmitSurveyResponsesRequest) returns (SubmitSurveyResponsesResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 1000;
  }

  // Creates a new survey
  rpc CreateSurvey(CreateSurveyRequest) returns (CreateSurveyResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 1000;
  }
}

// Request to the GetSurvey API
message GetSurveyRequest {
  // The current context in the app, used to determine eligible surveys
  SurveyContext context = 1;
  // The language to return the
  google.protobuf.StringValue accept_language = 2;
  // The dasher ID to retrieve the survey for
  google.protobuf.Int64Value dasher_id = 3;
}

// Response from the GetSurvey API
message GetSurveyResponse {
  // Whether the user is eligible for a survey
  google.protobuf.BoolValue is_eligible = 1;
  // The survey to display to the user
  Survey survey = 2;
}

// Request to the SubmitSurveyResponses API
message SubmitSurveyResponsesRequest {
  // The survey ID to submit responses for
  google.protobuf.StringValue survey_id = 1;
  // The dasher ID submitting the survey
  google.protobuf.Int64Value dasher_id = 2;
  // The responses to the survey
  repeated SurveyQuestionResponse responses = 3;
  // Additional metadata to be sent back with the response, for analysis purposes.
  repeated AdditionalMetadata metadata = 4;
}

// Represents a response to a single survey question
message SurveyQuestionResponse {
  // The localization key of the question
  google.protobuf.StringValue question_key = 1;
  // DEPRECATED: Use the value field instead
  // The answer the dasher provided for the question
  oneof choice {
    // DEPRECATED: Use the value field instead
    // The localization key for the answer choice (if multiple choice)
    google.protobuf.StringValue key = 2 [deprecated = true];
    // DEPRECATED: Use the value field instead
    // The text response to the question (if free response)
    google.protobuf.StringValue text = 3 [deprecated = true];
  }
  // The value of the response to the question. Use this instead of the deprecated choice fields.
  google.protobuf.StringValue value = 4;
}

// Additional metadata values to be sent back with survey responses.
message AdditionalMetadata {
  // The metadata key.
  MetadataKey key = 1;
  // The value of the metadata.
  google.protobuf.StringValue value = 2;
}

// A type of data to be sent back with survey responses.
enum MetadataKey {
  // Unspecified metadata key
  METADATA_KEY_UNSPECIFIED = 0;
  // Shift ID
  METADATA_KEY_SHIFT_ID = 1;
}

// Response from the SubmitSurveyResponses API
message SubmitSurveyResponsesResponse {}

// Request to the CreateSurvey API
message CreateSurveyRequest {
  // The survey to create
  Survey survey = 1;
}

// Response from the CreateSurvey API
message CreateSurveyResponse {
  // The ID of the created survey
  google.protobuf.StringValue survey_id = 1;
}

// An in-app survey about dasher experience
message Survey {
  // UUID for the survey
  google.protobuf.StringValue id = 1;
  // Type of survey (i.e. earnings)
  SurveyType type = 2;
  // Title of the survey
  google.protobuf.StringValue title = 3;
  // Optional subtitle for the survey
  google.protobuf.StringValue subtitle = 4;
  // List of questions comprising the survey
  repeated SurveyQuestion questions = 5;
  // A human readable name for the survey, used for convenience in results analysis
  google.protobuf.StringValue name = 6;
}

// A type of survey
enum SurveyType {
  // An unspecified survey type
  SURVEY_TYPE_UNSPECIFIED = 0;
  // Dasher earnings related survey
  SURVEY_TYPE_DASHER_EARNINGS = 1;
  // Earnings mode group1 related survey
  SURVEY_TYPE_DASHER_EARNINGS_MODE_GROUP1 = 2;
  // Earnings mode group2 related survey
  SURVEY_TYPE_DASHER_EARNINGS_MODE_GROUP2 = 3;
  // Dx Engagement Dx Sentiment group1 related survey
  SURVEY_TYPE_DASHER_SENTIMENT_GROUP_V1 = 4;
  // Dx Engagement Dx Sentiment group2 related survey
  SURVEY_TYPE_DASHER_SENTIMENT_GROUP_V2 = 5;
  // Dx Engagement Dx Sentiment group3 related survey
  SURVEY_TYPE_DASHER_SENTIMENT_GROUP_V3 = 6;
  // Dx Engagement Dx Sentiment group4 related survey
  SURVEY_TYPE_DASHER_SENTIMENT_GROUP_V4 = 7;
  // Dx Engagement Dx Sentiment group5 related survey
  SURVEY_TYPE_DASHER_SENTIMENT_GROUP_V5 = 8;
  // Dx Engagement Dx Sentiment group6 related survey
  SURVEY_TYPE_DASHER_SENTIMENT_GROUP_V6 = 9;
  // Dx Engagement Dx Sentiment group7 related survey
  SURVEY_TYPE_DASHER_SENTIMENT_GROUP_V7 = 10;
}

// A question in a survey
message SurveyQuestion {
  // An identifier for the survey question
  google.protobuf.StringValue key = 1;
  // The localized question text
  google.protobuf.StringValue text = 2;
  // The type of question
  SurveyQuestionType type = 3;
  // The answer choices associated with the question
  repeated SurveyQuestionChoice choices = 4;
  // The key to the image in the DD CDN
  component_catalog.common.shared.components.v1.RemoteImage image = 5;
}

// A type of question in a survey (i.e. multiple choice or free response)
enum SurveyQuestionType {
  // Unspecified question type
  SURVEY_QUESTION_TYPE_UNSPECIFIED = 0;
  // A multiple choice question
  SURVEY_QUESTION_TYPE_MULTIPLE_CHOICE = 1;
  // A free response question
  SURVEY_QUESTION_TYPE_FREE_RESPONSE = 2;
}

// A choice for a multiple choice question
message SurveyQuestionChoice {
  // An identifier for the survey question
  google.protobuf.StringValue key = 1;
  // The localized text for the choice
  google.protobuf.StringValue text = 2;
}

// The in-app context in which the survey is being requested
enum SurveyContext {
  // Unspecified context
  SURVEY_CONTEXT_UNSPECIFIED = 0;
  // Dasher has just ended a dash
  SURVEY_CONTEXT_POST_DASH = 1;
}
