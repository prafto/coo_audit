syntax = "proto3";
// buf:lint:ignore DIRECTORY_SAME_PACKAGE
// buf:lint:ignore PACKAGE_VERSION_SUFFIX
package merchant_integrations;

import "common/money.proto";
import "common/service_client_config.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.merchant_integrations";

// external gift card service
service ExternalGiftCardService {
  // get external gift card balance endpoint
  rpc GetExternalGiftCardBalance(GetExternalGiftCardBalanceRequest) returns (GetExternalGiftCardBalanceResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 25000;
    option (service_client.client_method_config).retry_config.max_attempts = 3;
  }
  // redeem external gift card endpoint
  rpc RedeemExternalGiftCard(RedeemExternalGiftCardRequest) returns (RedeemExternalGiftCardResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 25000;
    option (service_client.client_method_config).retry_config.max_attempts = 3;
  }
  // refund external gift card endpoint
  rpc RefundExternalGiftCard(RefundExternalGiftCardRequest) returns (RefundExternalGiftCardResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 25000;
    option (service_client.client_method_config).retry_config.max_attempts = 3;
  }
  // load external gift card endpoint
  rpc LoadExternalGiftCard(LoadExternalGiftCardRequest) returns (LoadExternalGiftCardResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 25000;
    option (service_client.client_method_config).retry_config.max_attempts = 3;
  }
  // external gift card endpoint
  rpc VoidLoadExternalGiftCard(VoidLoadExternalGiftCardRequest) returns (VoidLoadExternalGiftCardResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 25000;
    option (service_client.client_method_config).retry_config.max_attempts = 3;
  }
}

// this will represent vendor related information
message ExternalGiftCardVendorReference {
  // reference id for gift card vendor
  google.protobuf.StringValue external_reference_id = 1;
  // external store id for gift card vendor
  google.protobuf.StringValue external_store_id = 2;
  // provider type to identify the external gift card provider
  google.protobuf.StringValue provider_type = 3;
  // card types supported by a provider
  ExternalGiftCardSupportedCardType supported_card_type = 4;
  // order uuid to be passed to the gift card vendor if needed. consider optional
  google.protobuf.StringValue order_uuid = 5;
  // order cart uuid to be passed to the gift card vendor if needed. consider optional
  google.protobuf.StringValue order_cart_uuid = 6;
  // client id/user id to be used for this transaction. This should be the tokenized value when skip_vgs=false.
  // May not be needed for all integrations. Client implementation will use this when it is present.
  google.protobuf.StringValue secret_key = 7;
  // password/client-secret to be used for this transaction. This should be the tokenized value when skip_vgs=false.
  // May not be needed for all integrations. Client implementation will use this when it is present.
  google.protobuf.StringValue secret_value = 8;
}

// this will represent gift card related information
message ExternalGiftCardDetail {
  // gift card number token
  google.protobuf.StringValue gift_card_number_token = 1;
  // gift card pin token
  google.protobuf.StringValue gift_card_pin_token = 2;
}

// get external gift card balance request
message GetExternalGiftCardBalanceRequest {
  // reference data for vendors
  ExternalGiftCardVendorReference vendor_reference = 1;
  // gift card information
  ExternalGiftCardDetail gift_card_detail = 2;
  // boolean to identify if balance being checked should be lock
  google.protobuf.BoolValue should_lock_balance = 3;
  // currency in which balance is requested it should be the 3-letter currency code defined in ISO 4217.
  google.protobuf.StringValue currency = 4;
  // boolean to identify if we should skip vgs
  google.protobuf.BoolValue skip_vgs = 5;
}

// get external gift card balance response
message GetExternalGiftCardBalanceResponse {
  // Success message
  message Success {
    // current gift card value
    money.MonetaryFields external_gift_card_value = 1;
    // lock id is get balance was called with lock
    google.protobuf.StringValue lock_id = 2;
    // transaction reference
    TransactionReference transaction_reference = 3;
  }
  // success or error
  oneof result {
    // success class
    Success success = 1;
    // error class
    ExternalGiftCardMISServiceError error = 2;
  }
}

// redeem external gift card request
message RedeemExternalGiftCardRequest {
  // reference data for vendors
  ExternalGiftCardVendorReference vendor_reference = 1;
  // gift card information
  ExternalGiftCardDetail gift_card_detail = 2;
  // value to redeem
  money.MonetaryFields value_to_redeem = 3;
  // lock id if needed for the redemption
  google.protobuf.StringValue lock_id = 4;
  // boolean to identify if we should skip vgs
  google.protobuf.BoolValue skip_vgs = 5;
  // string to identify which type of redemption this would be.
  google.protobuf.StringValue redemption_type = 6;
}

// redeem external gift card response
message RedeemExternalGiftCardResponse {
  // Success message
  message Success {
    // gift card balance and other details for the card
    ExternalGiftCardData gift_card_data = 1;
  }
  // success or error
  oneof result {
    // success class
    Success success = 1;
    // error class
    ExternalGiftCardMISServiceError error = 2;
  }
}

// refund external gift card request
message RefundExternalGiftCardRequest {
  // reference data for vendors
  ExternalGiftCardVendorReference vendor_reference = 1;
  // gift card information
  ExternalGiftCardDetail external_gift_card_detail = 2;
  // value to redeem
  money.MonetaryFields value_to_refund = 3;
  // boolean to identify if we should skip vgs
  google.protobuf.BoolValue skip_vgs = 4;
}

// refund external gift card response
message RefundExternalGiftCardResponse {
  // Success message
  message Success {
    // gift card balance and other details for the card
    ExternalGiftCardData gift_card_data = 1;
  }
  // success or error
  oneof result {
    // success class
    Success success = 1;
    // error class
    ExternalGiftCardMISServiceError error = 2;
  }
}

// load external gift card request
message LoadExternalGiftCardRequest {
  // reference data for vendors
  ExternalGiftCardVendorReference vendor_reference = 1;
  // gift card information
  ExternalGiftCardDetail gift_card_detail = 2;
  // value to load
  money.MonetaryFields value_to_load = 3;
}

// load external gift card response
message LoadExternalGiftCardResponse {
  // Success message
  message Success {
    // gift card balance and other details for the card
    ExternalGiftCardData gift_card_data = 1;
  }
  // success or error
  oneof result {
    // success class
    Success success = 1;
    // error class
    ExternalGiftCardMISServiceError error = 2;
  }
}

// void load external gift card request
message VoidLoadExternalGiftCardRequest {
  // reference data for vendors
  ExternalGiftCardVendorReference vendor_reference = 1;
  // gift card information
  ExternalGiftCardDetail gift_card_detail = 2;
  // value to void
  money.MonetaryFields value_to_void = 3;
  // transaction reference id for the original load transaction
  google.protobuf.StringValue transaction_reference_id = 4;
}

// void load external gift card response
message VoidLoadExternalGiftCardResponse {
  // Success message
  message Success {
    // gift card balance and other details for the card
    ExternalGiftCardData gift_card_data = 1;
  }
  // success or error
  oneof result {
    // success class
    Success success = 1;
    // error class
    ExternalGiftCardMISServiceError error = 2;
  }
}

// represents balance info
message TransactionReference {
  // gift card number token for which the balance is returned
  google.protobuf.StringValue transaction_reference_id = 1;
}

// represents balance info
message ExternalGiftCardData {
  // gift card number token for which the balance is returned
  TransactionReference transaction_reference = 1;
  // current gift card value
  money.MonetaryFields current_balance = 2;
  // previous gift card value
  money.MonetaryFields previous_balance = 3;
}

// gift card generic service error
message ExternalGiftCardMISServiceError {
  // MIS error code
  ExternalGiftCardMISErrorCode error_code = 1;
  // http code
  int32 http_code = 2;
  // error message
  google.protobuf.StringValue error_message = 3;
}

// error codes
enum ExternalGiftCardMISErrorCode {
  // unknown error
  EXTERNAL_GIFT_CARD_MIS_ERROR_CODE_UNSPECIFIED = 0;
  // error code thrown when a bad request is received
  EXTERNAL_GIFT_CARD_MIS_ERROR_CODE_BAD_REQUEST = 1;
  // error code thrown when a validation error occurs
  EXTERNAL_GIFT_CARD_MIS_ERROR_CODE_VALIDATION_ERROR = 2;
  // error code thrown when a resource is not found
  EXTERNAL_GIFT_CARD_MIS_ERROR_CODE_NOT_FOUND = 3;
  // error code thrown when a processing error occurs
  EXTERNAL_GIFT_CARD_MIS_ERROR_CODE_PROCESSING_ERROR = 4;
  // error code thrown when a mas ServerError occurs
  EXTERNAL_GIFT_CARD_MIS_ERROR_CODE_SERVER_ERROR = 5;
  // error code thrown when a mas TransactionNotPermittedByVendor occurs
  EXTERNAL_GIFT_CARD_MIS_ERROR_CODE_NOT_PERMITTED = 6;
  // error code thrown when a mas InvalidAttempt occurs
  EXTERNAL_GIFT_CARD_MIS_ERROR_CODE_INVALID_ATTEMPT = 7;
  // error code thrown when a mas UnexpectedError occurs
  EXTERNAL_GIFT_CARD_MIS_ERROR_CODE_UNEXPECTED_ERROR = 8;
  // error code thrown when a mas RequestTimedOut occurs
  EXTERNAL_GIFT_CARD_MIS_ERROR_CODE_REQUEST_TIMED_OUT = 9;
  // error code thrown when a mas ConnectionError occurs
  EXTERNAL_GIFT_CARD_MIS_ERROR_CODE_CONNECTION_ERROR = 10;
  // error code thrown when a mas InvalidMerchant occurs
  EXTERNAL_GIFT_CARD_MIS_ERROR_CODE_INVALID_MERCHANT = 11;
  // error code thrown when a mas RequestError occurs
  EXTERNAL_GIFT_CARD_MIS_ERROR_CODE_REQUEST_ERROR = 12;
  // error code thrown when a mas InSufficientFunds occurs
  EXTERNAL_GIFT_CARD_MIS_ERROR_CODE_INSUFFICIENT_FUNDS = 13;
  // error code thrown when a mas VendorLimitReached occurs
  EXTERNAL_GIFT_CARD_MIS_ERROR_CODE_LIMIT_REACHED = 14;
  // error code thrown when a mas AlreadyReversed occurs
  EXTERNAL_GIFT_CARD_MIS_ERROR_CODE_ALREADY_REVERSED = 15;
  // error code thrown when a mas TransactionDoesNotExist occurs
  EXTERNAL_GIFT_CARD_MIS_ERROR_CODE_TRANSACTION_DOES_NOT_EXIST = 16;
  // error code thrown when a mas InvalidStore occurs
  EXTERNAL_GIFT_CARD_MIS_ERROR_CODE_INVALID_STORE = 17;
  // error code thrown when a mas ClientUnauthorized occurs
  EXTERNAL_GIFT_CARD_MIS_ERROR_CODE_CLIENT_UNAUTHORIZED = 18;
}

// enum representing different types of card supported by a vendor
enum ExternalGiftCardSupportedCardType {
  // unknown card type
  EXTERNAL_GIFT_CARD_SUPPORTED_CARD_TYPE_UNSPECIFIED = 0;
  // card type which which has card number or card number and scv
  EXTERNAL_GIFT_CARD_SUPPORTED_CARD_TYPE_PIN_LESS_AND_SCV = 1;
  // card type which which has card number or card number and scv
  EXTERNAL_GIFT_CARD_SUPPORTED_CARD_TYPE_PIN_LESS_AND_EAN = 2;
}
