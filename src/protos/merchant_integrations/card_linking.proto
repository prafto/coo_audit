syntax = "proto3";

// buf:lint:ignore DIRECTORY_SAME_PACKAGE
// buf:lint:ignore PACKAGE_VERSION_SUFFIX
package merchant_integrations;

import "common/service_client_config.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "merchant_integrations/menu.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.merchant_integrations";

// Service for card linking operations
service CardLinkingService {
  // Creates a business in the card linking provider
  rpc CreateCardLinkedBusiness(CreateCardLinkedBusinessRequest) returns (CreateCardLinkedBusinessResponse) {}

  // Creates a business user in the card linking provider to sign consent and have access to transactions
  rpc CreateCardLinkedBusinessUser(CreateCardLinkedBusinessUserRequest) returns (CreateCardLinkedBusinessUserResponse) {}

  // Creates a store in the card linking provider
  rpc CreateCardLinkedStore(CreateCardLinkedStoreRequest) returns (CreateCardLinkedStoreResponse) {}

  // Delete payment methods in the card linking provider
  rpc DeletePaymentMethods(DeletePaymentMethodsRequest) returns (DeletePaymentMethodsResponse) {}
}

// Create business request
message CreateCardLinkedBusinessRequest {
  // business id (required)
  google.protobuf.StringValue business_id = 1;
}

// Create business response
message CreateCardLinkedBusinessResponse {
  // Success response
  message Success {
    // created business
    CardLinkedBusiness business = 1;
    // status code
    int32 status = 2;
  }

  // response contains either success or an error
  oneof result {
    // success response
    Success success = 1;
    // error response
    ResponseError error = 2;
  }
}

// Business
message CardLinkedBusiness {
  // provider business id of the created business
  google.protobuf.StringValue provider_business_id = 1;
  // provider account id
  google.protobuf.StringValue provider_account_id = 2;
  // whether consent is enabled
  google.protobuf.BoolValue consent = 3;
  // whether the business is live
  google.protobuf.BoolValue is_live = 4;
  // name of the business
  google.protobuf.StringValue name = 5;
  // timestamp for when the business was created
  google.protobuf.StringValue created_at = 6;
  // timestamp for when the business was updated
  google.protobuf.StringValue updated_at = 7;
}

// Create business user request
message CreateCardLinkedBusinessUserRequest {
  // provider business id of the business (required)
  google.protobuf.StringValue provider_business_id = 1;
  // provider program id of the business (required)
  google.protobuf.StringValue provider_program_id = 2;
  // email (required)
  google.protobuf.StringValue email = 3;
  // first name (required)
  google.protobuf.StringValue first_name = 4;
  // last name (required)
  google.protobuf.StringValue last_name = 5;
  // title (required)
  google.protobuf.StringValue title = 6;
  // whether email invite is sent and consent is automatically approved (optional, defaults to true)
  google.protobuf.BoolValue should_skip_invite = 7;
}

// Create business response
message CreateCardLinkedBusinessUserResponse {
  // Success response
  message Success {
    // created business
    CardLinkedBusinessUser business_user = 1;
    // status code
    int32 status = 2;
  }

  // response contains either success or an error
  oneof result {
    // success response
    Success success = 1;
    // error response
    ResponseError error = 2;
  }
}

// Business User
message CardLinkedBusinessUser {
  // provider user id of the business user
  google.protobuf.StringValue provider_business_user_id = 1;
  // provider account id
  google.protobuf.StringValue provider_account_id = 2;
  // whether the business user is active
  google.protobuf.BoolValue is_active = 3;
  // email
  google.protobuf.StringValue email = 4;
  // first name
  google.protobuf.StringValue first_name = 5;
  // last name
  google.protobuf.StringValue last_name = 6;
  // title
  google.protobuf.StringValue title = 7;
  // timestamp for when the business user was created
  google.protobuf.StringValue created_at = 8;
  // timestamp for when the business user was updated
  google.protobuf.StringValue updated_at = 9;
}

// Create store request
message CreateCardLinkedStoreRequest {
  // provider business id of the business (required)
  google.protobuf.StringValue provider_business_id = 1;
  // provider program id of the business (required)
  google.protobuf.StringValue provider_program_id = 2;
  // store id (required)
  google.protobuf.StringValue store_id = 3;
  // card brand merchant ids (required, at least one merchant id for Visa card brand)
  repeated CardBrandMerchantId card_brand_merchant_ids = 4;
  // whether store should auto-sync on creation (optional, defaults to true)
  google.protobuf.BoolValue should_auto_sync = 5;
}

// Create store response
message CreateCardLinkedStoreResponse {
  // Success response
  message Success {
    // created store
    CardLinkedStore store = 1;
    // status code
    int32 status = 2;
  }

  // response contains either success or an error
  oneof result {
    // success response
    Success success = 1;
    // error response
    ResponseError error = 2;
  }
}

// merchant id used by the card brands
message CardBrandMerchantId {
  // merchant id
  google.protobuf.StringValue merchant_id = 1;
  // card brand
  CardBrand card_brand = 2;
}

// card brand
enum CardBrand {
  // unspecified
  CARD_BRAND_UNSPECIFIED = 0;
  // visa
  CARD_BRAND_VISA = 1;
  // mastercard
  CARD_BRAND_MASTERCARD = 2;
  // amex
  CARD_BRAND_AMEX = 3;
}

// Store details
message CardLinkedStore {
  // provider store id of the created store
  google.protobuf.StringValue provider_store_id = 1;
  // provider program id of the business
  google.protobuf.StringValue provider_program_id = 2;
  // provider business id of the business
  google.protobuf.StringValue provider_business_id = 3;
  // provider account id
  google.protobuf.StringValue provider_account_id = 4;
  // store address
  google.protobuf.StringValue address = 5;
  // city
  google.protobuf.StringValue city = 6;
  // country code
  google.protobuf.StringValue country_code = 7;
  // postal code
  google.protobuf.StringValue post_code = 8;
  // state code
  google.protobuf.StringValue state_code = 9;
  // currency used at the store
  google.protobuf.StringValue currency = 10;
  // whether the store is live
  google.protobuf.BoolValue is_live = 11;
  // geolocation information
  Geolocation geolocation = 12;
  // card brand status
  repeated CardBrandStatus card_brand_statuses = 13;
  // timestamp when the store was created
  google.protobuf.StringValue created_at = 14;
  // timestamp when the store was last updated
  google.protobuf.StringValue updated_at = 15;

  // Geolocation details
  message Geolocation {
    // latitude
    google.protobuf.DoubleValue latitude = 1;
    // longitude
    google.protobuf.DoubleValue longitude = 2;
  }

  // Card brand status
  message CardBrandStatus {
    // card brand
    CardBrand card_brand = 1;
    // authorization status
    google.protobuf.BoolValue auth_status = 2;
    // authorization transaction ID
    google.protobuf.StringValue auth_transaction_id = 3;
    // clearing status
    google.protobuf.BoolValue clearing = 4;
    // clearing transaction ID
    google.protobuf.StringValue clearing_transaction_id = 5;
    // estimated activation date
    google.protobuf.StringValue estimated_activation_date = 6;
    // card brand status
    google.protobuf.StringValue status = 7;
  }
}

// Delete payment methods request
message DeletePaymentMethodsRequest {
  // payment method references
  repeated UnlinkPaymentMethodReference payment_method_references = 4;

  // payment method reference
  message UnlinkPaymentMethodReference {
    // provider card id of the consumer
    google.protobuf.StringValue external_card_id = 1;
  }
}

// Delete payment methods response
message DeletePaymentMethodsResponse {
  // Success response
  message Success {
    // status code
    int32 status = 1;
    // List of card IDs that were successfully deleted.
    repeated string successful_card_ids = 2;
    // List of card IDs for which deletion failed.
    repeated string failed_card_ids = 3;
  }

  // response contains either success or an error
  oneof result {
    // success response
    Success success = 1;
    // error response
    ResponseError error = 2;
  }
}

// Card linked transaction event
message CardLinkedTransactionEvent {
  // transaction id
  google.protobuf.StringValue id = 1;
  // timestamp
  google.protobuf.Timestamp timestamp = 2;
  // external program id
  google.protobuf.StringValue external_program_id = 3;
  // external business id
  google.protobuf.StringValue external_business_id = 4;
  // external store id
  google.protobuf.StringValue external_store_id = 5;
  // amount in cents
  google.protobuf.Int32Value amount_cents = 6;
  // transaction type
  CardLinkedTransactionType transaction_type = 7;
  // provider
  google.protobuf.StringValue provider = 8;
  // card id
  google.protobuf.StringValue external_card_id = 9;
  // original transaction id
  google.protobuf.StringValue original_transaction_id = 10;
}

// Card linked transaction event type
enum CardLinkedTransactionType {
  // unspecified
  CARD_LINKED_TRANSACTION_TYPE_UNSPECIFIED = 0;
  // authorization
  CARD_LINKED_TRANSACTION_TYPE_AUTH = 1;
  // clearing
  CARD_LINKED_TRANSACTION_TYPE_CLEARING = 2;
  // refund
  CARD_LINKED_TRANSACTION_TYPE_REFUND = 3;
}

// Store sync event
message StoreSyncEvent {
  // external program id
  google.protobuf.StringValue external_program_id = 1;
  // external business id
  google.protobuf.StringValue external_business_id = 2;
  // external store id
  google.protobuf.StringValue external_store_id = 3;
  // timestamp
  google.protobuf.Timestamp timestamp = 4;
  // store sync status
  StoreSyncStatus status = 5;
  // card brand sync status
  repeated CardBrandSyncEventStatus card_brand_sync_statuses = 6;
}

// Card brand sync event status
message CardBrandSyncEventStatus {
  // card brand
  CardBrand card_brand = 1;
  // status
  CardBrandSyncStatus status = 2;
}

// Card brand sync status
enum CardBrandSyncStatus {
  // unspecified
  CARD_BRAND_SYNC_STATUS_UNSPECIFIED = 0;
  // active
  CARD_BRAND_SYNC_STATUS_ACTIVE = 1;
  // inactive
  CARD_BRAND_SYNC_STATUS_INACTIVE = 2;
}

// Store sync status
enum StoreSyncStatus {
  // unspecified
  STORE_SYNC_STATUS_UNSPECIFIED = 0;
  // all card brands are activated and ready
  STORE_SYNC_STATUS_ACTIVE = 1;
  // some card brands are activated and ready
  STORE_SYNC_STATUS_PARTIAL = 2;
  // failed
  STORE_SYNC_STATUS_FAILED = 3;
}
