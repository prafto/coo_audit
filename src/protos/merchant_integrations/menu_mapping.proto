syntax = "proto3";
// buf:lint:ignore DIRECTORY_SAME_PACKAGE
// buf:lint:ignore PACKAGE_VERSION_SUFFIX
package merchant_integrations;

import "common/code.proto";
import "common/service_client_config.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.merchant_integrations";

//GRPC service for Menu Mapping
service MenuMappingService {
  // Store Mapping Available
  rpc GetIsStoreMappingAvailable(GetIsStoreMappingAvailableRequest) returns (GetIsStoreMappingAvailableResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 5000;
    option (service_client.client_method_config).retry_config.max_attempts = 3;
    // default circuit breaker config
  }

  // Get Store Menu Mapping
  rpc GetStoreMenuMapping(GetStoreMenuMappingRequest) returns (GetStoreMenuMappingResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 5000;
    option (service_client.client_method_config).retry_config.max_attempts = 3;
    // default circuit breaker config
  }

  // Submit Menu Mapping
  rpc SubmitMenuMapping(SubmitMenuMappingRequest) returns (SubmitMenuMappingResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 5000;
    option (service_client.client_method_config).retry_config.max_attempts = 3;
    // default circuit breaker config
  }

  // Initiate Menu Mapping
  rpc InitiateMenuMapping(InitiateMenuMappingRequest) returns (InitiateMenuMappingResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 5000;
    option (service_client.client_method_config).retry_config.max_attempts = 3;
    // default circuit breaker config
  }

  // Skip Menu Mapping
  rpc SkipMenuMapping(SkipMenuMappingRequest) returns (SkipMenuMappingResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 5000;
    option (service_client.client_method_config).retry_config.max_attempts = 3;
    // default circuit breaker config
  }
}

// Get Is Store Mapping Available Request
message GetIsStoreMappingAvailableRequest {
  // store id
  google.protobuf.StringValue store_id = 1;
}

// Get Is Store Mapping Available Response
message GetIsStoreMappingAvailableResponse {
  // is mapping available
  google.protobuf.BoolValue is_mapping_available = 1;
  // store activated at time stamp
  google.protobuf.Timestamp store_activated_at = 2;
  // menu mapping status
  google.protobuf.StringValue menu_mapping_status = 3;
}

// Get Store Menu Mapping Request
message GetStoreMenuMappingRequest {
  // store id
  google.protobuf.StringValue store_id = 1;
}

// Get Store Menu Mapping Response
message GetStoreMenuMappingResponse {
  // pos menu id
  google.protobuf.StringValue pos_menu_id = 1;
  // non pos menu id
  repeated google.protobuf.StringValue non_pos_menu_ids = 2;
  // item mapping list
  repeated ItemMapping item_mapping_list = 3;
}

// Submit Menu Mapping Request
message SubmitMenuMappingRequest {
  // store id
  google.protobuf.StringValue store_id = 1;
  // pos menu id
  google.protobuf.StringValue pos_menu_id = 2;
  // non pos menu id
  repeated google.protobuf.StringValue non_pos_menu_ids = 3;
  // item mapping list
  repeated ItemMapping item_mapping_list = 4;
  // description mapped
  google.protobuf.BoolValue is_description_mapped = 5;
  // description mapped
  google.protobuf.BoolValue is_image_mapped = 6;
}

// Submit Menu Mapping Response
message SubmitMenuMappingResponse {
  // Response's error code
  code.Code code = 1;
  // Response's detail
  google.protobuf.StringValue error = 2;
}

// Initiate Menu Mapping Request
message InitiateMenuMappingRequest {
  // store id
  google.protobuf.StringValue store_id = 1;
  // non pos menu id
  repeated google.protobuf.StringValue non_pos_menu_ids = 2;
}

// Initiate Menu Mapping Response
message InitiateMenuMappingResponse {
  // Response's error code
  code.Code code = 1;
  // Response's detail
  google.protobuf.StringValue error = 2;
}

// Skip Menu Mapping Request
message SkipMenuMappingRequest {
  // store id
  google.protobuf.StringValue store_id = 1;
  // skip menu mapping
  google.protobuf.BoolValue is_skip_mapping = 2;
}

// Skip Menu Mapping Response
message SkipMenuMappingResponse {
  // Response's error code
  code.Code code = 1;
  // Response's detail
  google.protobuf.StringValue error = 2;
}

// Item Mapping
message ItemMapping {
  // non pos menu id
  google.protobuf.StringValue non_pos_menu_id = 1;
  // non pos item id
  google.protobuf.StringValue non_pos_item_id = 2;
  // pos item id
  google.protobuf.StringValue pos_item_id = 3;
  // pos menu id
  google.protobuf.StringValue pos_menu_id = 4;
  // description mapped
  google.protobuf.BoolValue is_description_mapped = 5;
  // description mapped
  google.protobuf.BoolValue is_image_mapped = 6;
}
