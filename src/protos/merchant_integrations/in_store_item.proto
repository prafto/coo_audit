syntax = "proto3";

package merchant_integrations;

import "common/code.proto";
import "common/inventory.proto";
import "common/money.proto";
import "common/service_client_config.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "menu/menu.proto";
import "merchant_integrations/item_v2.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.merchant_integrations";

// Service to manage items across stores
service InStoreItemService {
  // upsert inventory item info
  rpc BatchAddOrUpdateInStoreItemInfo(BatchAddOrUpdateInStoreItemInfoRequest) returns (BatchAddOrUpdateInStoreItemInfoResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 3000;
    option (service_client.client_method_config).retry_config.max_attempts = 3;
    // default circuit breaker config
  }

  // upsert multi store inventory item info
  rpc BatchAddOrUpdateMultiStoreItemInfo(BatchAddOrUpdateMultiStoreItemInfoRequest) returns (BatchAddOrUpdateMultiStoreItemInfoResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 3000;
    option (service_client.client_method_config).retry_config.max_attempts = 3;
    // default circuit breaker config
  }

  // Pull and partial upsert store item.
  rpc PullAndUpsertStoreItem(PullAndUpsertStoreItemRequest) returns (PullAndUpsertStoreItemResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 3000;
    option (service_client.client_method_config).retry_config.max_attempts = 3;
  }
}

// Request for upsert inventory items
message BatchAddOrUpdateInStoreItemInfoRequest {
  // request operation create/update
  OPERATION request_operation = 1;
  // request provider type for future conversion
  google.protobuf.StringValue provider_type = 2;
  // location id for the request store
  google.protobuf.StringValue location_id = 3;
  // in store item info objects in json
  google.protobuf.StringValue in_store_item_info = 4;
  // should treat this request as full inventory update or not, by default this will be false
  google.protobuf.BoolValue is_full_update = 5;
}

// Response for upsert inventory items
message BatchAddOrUpdateInStoreItemInfoResponse {
  // Status code
  code.Code code = 1;
  // operation id of the request/response created
  google.protobuf.StringValue operation_id = 2;
  // operation status of the response
  google.protobuf.StringValue operation_status = 3;
  // message from operation response
  google.protobuf.StringValue message = 4;
  // Error list when error
  repeated FieldError field_errors = 5;
}

// Request for upsert multi store inventory items
message BatchAddOrUpdateMultiStoreItemInfoRequest {
  // request operation create/update
  OPERATION request_operation = 1;
  // request provider type for future conversion
  google.protobuf.StringValue provider_type = 2;
  // in store item info object in json
  BatchAddOrUpdateInStoreItemInfoRequest store_requests = 3;
  // in store item info object list in json
  repeated BatchAddOrUpdateInStoreItemInfoRequest store_level_requests = 4;
}

// Response for upsert multi store inventory items
message BatchAddOrUpdateMultiStoreItemInfoResponse {
  // the message based on synchronous result
  google.protobuf.StringValue message = 1;
  // the operation id of the all store submissions
  google.protobuf.StringValue operation_id = 2;
  //the parent operation code
  code.Code code = 3;
  // operation status of the response
  google.protobuf.StringValue operation_status = 4;
}

// Pull and partial upsert store item request
message PullAndUpsertStoreItemRequest {
  // request operation create/update
  OPERATION request_operation = 1;
  // request provider type for future conversion
  google.protobuf.StringValue provider_type = 2;
  // location id for the request store
  google.protobuf.StringValue location_id = 3;
  // job type of this request
  JOBTYPE job_type = 4;
  // Page size in merchant side
  google.protobuf.Int32Value mx_page_size = 5;
}

// Pull and partial upsert store item response
message PullAndUpsertStoreItemResponse {
  // Status code
  code.Code code = 1;
  // operation id of the request/response created
  google.protobuf.StringValue operation_id = 2;
  // operation status of the response
  google.protobuf.StringValue operation_status = 3;
  // message from operation response
  google.protobuf.StringValue message = 4;
  // Error list when error
  repeated FieldError field_errors = 5;
  // Max page size in doordash side
  google.protobuf.Int32Value max_page_size = 6;
}

// JobType to distinguished between Pull or Pull with Pagination
enum JOBTYPE {
  // unspecified enum
  JOBTYPE_UNSPECIFIED = 0;
  // Mx create PULL_STORE_ITEMS job to trigger pull inventory workflow
  JOBTYPE_PULL_STORE_ITEMS = 1;
  // Mx PULL_STORE_ITEMS_WITH_PAGINATION job to trigger pull inventory paginated workflow
  JOBTYPE_PULL_STORE_ITEMS_WITH_PAGINATION = 2;
}
