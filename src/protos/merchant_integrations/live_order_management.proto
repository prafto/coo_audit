syntax = "proto3";

// buf:lint:ignore DIRECTORY_SAME_PACKAGE
// buf:lint:ignore PACKAGE_VERSION_SUFFIX
package com.doordash.rpc.merchant_integrations.grpc.liveordermanagement.v1;

import "common/common.proto";
import "common/order.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.merchant_integrations.grpc.liveordermanagement.v1";

// Service for managing live order management
service LiveOrderManagementService {
  // rpc to verify token is valid and not expired and also verify it belongs to the given provider-type and delivery uuid
  rpc VerifyLiveOrderManagementToken(VerifyLiveOrderManagementTokenRequest) returns (VerifyLiveOrderManagementTokenResponse);
  // rpc to get provider by token
  rpc GetProviderByToken(GetProviderByTokenRequest) returns (GetProviderByTokenResponse);
  // rpc to fetch order details by delivery uuid
  rpc GetOrderDetails(GetOrderDetailsRequest) returns (GetOrderDetailsResponse);
  // rpc to fetch live order management url by delivery uuid
  rpc GetLiveOrderManagementInfo(GetLiveOrderManagementInfoRequest) returns (GetLiveOrderManagementInfoResponse);
}

// rpc request for verifying token
message VerifyLiveOrderManagementTokenRequest {
  // delivery uuid
  google.protobuf.StringValue delivery_uuid = 1;
  // Live order management token
  google.protobuf.StringValue live_order_management_token = 2;
  // provider-type-client-id
  google.protobuf.Int32Value provider_client_id = 3 [deprecated = true];
  // provider client id
  google.protobuf.StringValue provider_identity_client_id = 4;
}

// rpc response for token verification
message VerifyLiveOrderManagementTokenResponse {
  // token verification status
  bool token_verification_status = 1;
  // provider type
  google.protobuf.StringValue provider_type = 2;
  // store id linked to token
  google.protobuf.StringValue store_id = 3;
}

// rpc request for getting provider by token
message GetProviderByTokenRequest {
  // Live order management token
  google.protobuf.StringValue live_order_management_token = 1;
  // delivery uuid
  google.protobuf.StringValue delivery_uuid = 2;
}

// rpc response for getting provider by token
message GetProviderByTokenResponse {
  // provider type
  google.protobuf.StringValue provider_type = 1;
  // store id linked to token
  google.protobuf.StringValue store_id = 2;
}

// rpc request for fetching order details
message GetOrderDetailsRequest {
  // delivery uuid
  google.protobuf.StringValue delivery_uuid = 1;
}

// rpc response for fetching order details
message GetOrderDetailsResponse {
  // delivery uuid
  google.protobuf.StringValue delivery_uuid = 1;
  // order details
  OrderDetails order_details = 2;
}

// rpc request for get live order management info
message GetLiveOrderManagementInfoRequest {
  // delivery uuid
  repeated google.protobuf.StringValue delivery_uuid = 1;
}

// rpc response for get live order management info
message GetLiveOrderManagementInfoResponse {
  // live order management info
  map<string, LiveOrderManagementInfo> live_order_management_info = 1;
}

// live order management info
message LiveOrderManagementInfo {
  // delivery uuid
  google.protobuf.StringValue delivery_uuid = 1;
  // live order management url
  google.protobuf.StringValue live_order_management_url = 2;
}

// order details
message OrderDetails {
  // order id
  string order_id = 1;
  // store info
  StoreInfo store_info = 2;
  // order status (deprecated)
  OrderStatus order_status = 3 [deprecated = true];
  // order items count (include quantity per item category)
  int64 item_count = 4;
  // customer info
  Customer customer = 5;
  // dasher info
  Dasher dasher = 6;
  // delivery timestamps
  DeliveryTimestamps delivery_timestamps = 7;
  // dynamic eta timestamps
  DynamicEtaTimestamps dynamic_eta_timestamps = 8;
  // delivery address
  DeliveryAddress delivery_address = 9;
  // include plasticware
  google.protobuf.BoolValue include_plasticware = 10;
  // order status Info
  OrderStatusInfo order_status_info = 11;
  // order type
  OrderType order_type = 12;
}

// store info
message StoreInfo {
  // store id
  int64 store_id = 1;
  // country code
  google.protobuf.StringValue country_code = 2;
  // address
  common.CommonAddress address = 3;
}

// order status (deprecated)
message OrderStatus {
  // delivery status
  google.protobuf.StringValue delivery_status = 1;
}

// customer info
message Customer {
  // first name
  google.protobuf.StringValue first_name = 1;
  // last name
  google.protobuf.StringValue last_name = 2;
}

// dasher info
message Dasher {
  // dasher id
  string dasher_id = 1;
  // first name
  google.protobuf.StringValue first_name = 2;
  // last name
  google.protobuf.StringValue last_name = 3;
  // dasher location
  common.Location dasher_location = 4;
}

// delivery timestamps
message DeliveryTimestamps {
  // estimated pickup time
  google.protobuf.Timestamp estimated_pickup_time = 1;
  // dasher confirmed at store time
  google.protobuf.Timestamp dasher_confirmed_at_store_time = 2;
  // store confirmed time
  google.protobuf.Timestamp store_confirmed_time = 3;
  // store reconfirmed time
  google.protobuf.Timestamp store_reconfirmed_time = 4;
  // store order ready time
  google.protobuf.Timestamp store_order_ready_time = 5;
  // quoted delivery time
  google.protobuf.Timestamp quoted_delivery_time = 6;
  // actual delivery time
  google.protobuf.Timestamp actual_delivery_time = 7;
  // actual pickup time
  google.protobuf.Timestamp actual_pickup_time = 8;
}

// dynamic ETA timestamps
message DynamicEtaTimestamps {
  // dynamic ETA on when the order would be picked up
  google.protobuf.Timestamp dynamic_pickup_time = 1;
  // dynamic ETA on when the order would be dropped off
  google.protobuf.Timestamp dynamic_delivery_time = 2;
}

// delivery address
message DeliveryAddress {
  // address
  common.CommonAddress address = 1;
  // subpremise
  google.protobuf.StringValue subpremise = 2;
  // dasher instructions
  google.protobuf.StringValue dasher_instructions = 3;
}

// order status info
message OrderStatusInfo {
  // order status
  order.OrderStatus order_status = 1;
}

// order type
enum OrderType {
  // unspecified order type
  ORDER_TYPE_UNSPECIFIED = 0;
  // delivery order
  ORDER_TYPE_DELIVERY = 1;
  // pickup order
  ORDER_TYPE_PICKUP = 2;
  // scheduled delivery order
  ORDER_TYPE_SCHEDULED_DELIVERY = 3;
  // scheduled pickup order
  ORDER_TYPE_SCHEDULED_PICKUP = 4;
}
