syntax = "proto3";

package merchant_integrations;

import "common/code.proto";
import "common/money.proto";
import "common/service_client_config.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "merchant_integrations/event.proto";
import "merchant_integrations/store_info.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.merchant_integrations";

service OrderService {
  rpc GetCartValidationResult(GetCartValidationResultRequest) returns (GetCartValidationResultResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 2000;
    option (service_client.client_method_config).retry_config.max_attempts = 3;
    // default circuit breaker config
  }

  rpc DispatchOrder(DispatchOrderRequest) returns (DispatchOrderResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 2000;
    option (service_client.client_method_config).retry_config.max_attempts = 3;
    // default circuit breaker config
  }

  rpc ProcessExternalOrders(ProcessExternalOrdersRequest) returns (ProcessExternalOrdersResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 5000;
    option (service_client.client_method_config).retry_config.max_attempts = 3;
    // default circuit breaker config
  }

  rpc AsyncOrderConfirm(AsyncOrderConfirmRequest) returns (AsyncOrderConfirmResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 2000;
    option (service_client.client_method_config).retry_config.max_attempts = 3;
    // default circuit breaker config
  }

  rpc AsyncStoreConfirmOrderReadyForPickup(AsyncStoreConfirmOrderReadyForPickupRequest) returns (AsyncStoreConfirmOrderReadyForPickupResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 2000;
    option (service_client.client_method_config).retry_config.max_attempts = 3;
    // default circuit breaker config
  }

  rpc AsyncDeliveryPickup(AsyncDeliveryPickupRequest) returns (AsyncDeliveryPickupResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 2000;
    option (service_client.client_method_config).retry_config.max_attempts = 3;
    // default circuit breaker config
  }

  rpc AsyncDasherArrivingAtConsumer(AsyncDasherArrivingAtConsumerRequest) returns (AsyncDasherArrivingAtConsumerResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 2000;
    option (service_client.client_method_config).retry_config.max_attempts = 3;
    // default circuit breaker config
  }

  rpc AsyncDeliveryDropoff(AsyncDeliveryDropoffRequest) returns (AsyncDeliveryDropoffResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 2000;
    option (service_client.client_method_config).retry_config.max_attempts = 3;
    // default circuit breaker config
  }

  rpc CancelOrder(CancelOrderRequest) returns (CancelOrderResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 2000;
    option (service_client.client_method_config).retry_config.max_attempts = 3;
    // default circuit breaker config
  }

  rpc ReleaseOrder(ReleaseOrderRequest) returns (ReleaseOrderResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 2000;
    option (service_client.client_method_config).retry_config.max_attempts = 3;
    // default circuit breaker config
  }

  rpc SendDasherInfoToMerchants(SendDasherInfoToMerchantsRequest) returns (SendDasherInfoToMerchantsResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 5000;
    option (service_client.client_method_config).retry_config.max_attempts = 3;
    // default circuit breaker config
  }

  // Get translated_order jsons for given order
  rpc GetTranslatedOrderJson(GetTranslatedOrderJsonRequest) returns (GetTranslatedOrderJsonResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 10000;
    option (service_client.client_method_config).retry_config.max_attempts = 2;
    // default circuit breaker config
  }

  // Get raw order jsons for given order
  rpc GetRawOrderJson(GetRawOrderJsonRequest) returns (GetRawOrderJsonResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 2000;
    option (service_client.client_method_config).retry_config.max_attempts = 2;
    // default circuit breaker config
  }

  // Upsert object for ProviderError and ProviderErrorAction table
  rpc UpsertProactiveAction(UpsertProactiveActionRequest) returns (UpsertProactiveActionResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 3000;
    option (service_client.client_method_config).retry_config.max_attempts = 2;
    // default circuit breaker config
  }

  // Get order object
  rpc GetOrder(GetOrderRequest) returns (GetOrderResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 2000;
    option (service_client.client_method_config).retry_config.max_attempts = 2;
    // default circuit breaker config
  }

  rpc OpenApiCancelOrder(OpenApiCancelOrderRequest) returns (OpenApiCancelOrderResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 2000;
    option (service_client.client_method_config).retry_config.max_attempts = 3;
    // default circuit breaker config
  }

  // Get transmit order json for given order
  rpc GetTransmitOrderJson(GetTransmitOrderJsonRequest) returns (GetTransmitOrderJsonResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 2000;
    option (service_client.client_method_config).retry_config.max_attempts = 2;
    // default circuit breaker config
  }

  // Open API order adjustment and cancellation
  rpc AdjustOrder(AdjustOrderRequest) returns (AdjustOrderResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 2000;
    option (service_client.client_method_config).retry_config.max_attempts = 2;
    // default circuit breaker config
  }

  // Get all order jsons for given order
  rpc GetAllOrderJsons(GetAllOrderJsonsRequest) returns (GetAllOrderJsonsResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 15000;
    option (service_client.client_method_config).retry_config.max_attempts = 2;
    // default circuit breaker config
  }

  // Process Validation for a given order
  rpc ProcessOrderValidation(ProcessOrderValidationRequest) returns (ProcessOrderValidationResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 5000;
    option (service_client.client_method_config).retry_config.max_attempts = 2;
    // default circuit breaker config
  }
}

// Request for upserting object into provider_error table
message UpsertProactiveActionRequest {
  repeated UpsertProactiveActionInput upsert_proactive_action_inputs = 1;
}

message UpsertProactiveActionResponse {
  repeated UpsertProactiveActionResult upsert_proactive_action_results = 1;
}

message UpsertProactiveActionInput {
  ProviderError provider_error = 1;
  repeated ProviderErrorAction provider_error_actions = 2;
}

message ProviderError {
  google.protobuf.StringValue id = 1;
  google.protobuf.StringValue provider_type = 2;
  google.protobuf.StringValue error_regex = 3;
  google.protobuf.StringValue comment = 4;
  google.protobuf.BoolValue active = 5;
  ProviderErrorWorkflow workflow = 6;
}

enum ProviderErrorWorkflow {
  ORDER_DISPATCH = 0;
  CART_VALIDATION = 1;
}

message ProviderErrorAction {
  google.protobuf.StringValue id = 1;
  google.protobuf.StringValue action = 2;
  google.protobuf.Struct action_data = 3; //json
  google.protobuf.BoolValue active = 4;
}

message UpsertProactiveActionResult {
  ProviderErrorResult provider_error_result = 1;
  repeated ProviderErrorActionResult provider_error_action_results = 2;
}

message ProviderErrorResult {
  google.protobuf.StringValue status = 1;
  google.protobuf.StringValue error_message = 2;
  ProviderError provider_error = 3;
}

message ProviderErrorActionResult {
  google.protobuf.StringValue status = 1;
  google.protobuf.StringValue error_message = 2;
  ProviderErrorAction provider_error_action = 3;
}

// Request for retrieving translated order_json for a given order
message GetTranslatedOrderJsonRequest {
  // order_id
  google.protobuf.StringValue order_id = 1;
}

// Request containing translated order_json
message GetTranslatedOrderJsonResponse {
  // translated order_json
  google.protobuf.StringValue result = 1; // JSON-data
}

// Request for retrieving raw order_json for a given order
message GetRawOrderJsonRequest {
  // order_id
  google.protobuf.StringValue order_id = 1;
}

// Request containing raw order_json
message GetRawOrderJsonResponse {
  // raw order_json
  google.protobuf.StringValue result = 1; // JSON-data
}

// Request for retrieving transmit order json for a given order
message GetTransmitOrderJsonRequest {
  // order_id
  google.protobuf.StringValue order_id = 1;
}

// Response containing transmit order json
message GetTransmitOrderJsonResponse {
  // transmit order json
  google.protobuf.StringValue result = 1; // JSON-data
}

message GetOrderRequest {
  google.protobuf.StringValue order_id = 1;
  google.protobuf.StringValue provider_type = 2;
  google.protobuf.StringValue external_id = 3;
  google.protobuf.StringValue delivery_uuid = 4;
  google.protobuf.BoolValue include_order_json = 5;
  google.protobuf.BoolValue include_translated_order_json = 6;
  google.protobuf.StringValue client_order_id = 7;
}

message GetOrderResponse {
  // status_message returns a short message detailing retrieval success or failure cause
  google.protobuf.StringValue status_message = 1;
  Order order = 2;
}

message Order {
  google.protobuf.StringValue id = 1;
  google.protobuf.StringValue order_id = 2;
  google.protobuf.StringValue store_id = 3;
  google.protobuf.StringValue provider_type = 4;
  google.protobuf.StringValue order_json = 5;
  google.protobuf.Timestamp created_at = 6;
  google.protobuf.Timestamp updated_at = 7;
  google.protobuf.StringValue client_order_id = 8;
  google.protobuf.StringValue dispatch_status = 9;
  google.protobuf.StringValue failure_reason = 10;
  google.protobuf.Timestamp prep_time = 11;
  google.protobuf.StringValue status = 12;
  google.protobuf.StringValue external_id = 13;
  google.protobuf.Int64Value distance_from_store = 14;
  google.protobuf.StringValue release_json = 15;
  google.protobuf.StringValue release_status = 16;
  google.protobuf.Timestamp release_triggered_timestamp = 17;
  google.protobuf.StringValue cancel_status = 18;
  google.protobuf.Timestamp canceled_at = 19;
  google.protobuf.StringValue delivery_uuid = 20;
  google.protobuf.StringValue translated_order_json_s3_link = 21;
  google.protobuf.StringValue external_cart_id = 22;
  google.protobuf.StringValue order_json_s3_link = 23;
  google.protobuf.StringValue adjust_status = 24;
}

// ExternalOrderRequestBody in POSIS
message ProcessExternalOrdersRequest {
  repeated POSOrderConfirmationStatus orders = 1;
  google.protobuf.StringValue provider_type = 2;
  google.protobuf.StringValue store_id = 3;
  POSOrderOptions custom_response_values = 4;
  google.protobuf.Int64Value external_order_statistics_total_order = 5;
  google.protobuf.Int64Value external_order_statistics_doordash_order = 6;
  google.protobuf.Timestamp external_order_statistics_date = 7;
  google.protobuf.StringValue client_version_number = 8;
  google.protobuf.Int32Value positouch_brand_item_number = 9;
}

// ExternalOrderStatusRequestBody in POSIS
message POSOrderConfirmationStatus {
  google.protobuf.StringValue id = 1;
  // 'succeeded' or 'failed'
  google.protobuf.StringValue status = 2;
  google.protobuf.Int32Value error_code = 3;
  google.protobuf.StringValue error_message = 4;
  google.protobuf.StringValue check_number = 5;
}

// ExternalOrderCustomResponseValuesRequestBody in POSIS
message POSOrderOptions {
  google.protobuf.Int32Value guest_check_copies = 1;
  google.protobuf.Int32Value cost_center = 2;
  google.protobuf.Int32Value server_number = 3;
  google.protobuf.Int32Value table_number = 4;
  google.protobuf.Int32Value menu_number = 5;
  google.protobuf.Int32Value cashier_number = 6;
  google.protobuf.Int32Value terminal_number = 7;
  google.protobuf.Int32Value payment_type = 8;
}

message ProcessExternalOrdersResponse {
  repeated POSOrder orders = 1;
}

// OrderRequestBody in POSIS
message POSOrder {
  google.protobuf.FloatValue tax = 1;
  google.protobuf.StringValue timezone = 2;
  google.protobuf.FloatValue subtotal = 3;
  google.protobuf.StringValue doordash_id = 4;
  POSConsumer consumer = 5;
  POSStore store = 6;
  repeated POSOrderItem order_items = 7;
  google.protobuf.StringValue order_special_instructions = 8;
  google.protobuf.BoolValue is_pickup = 9;
  google.protobuf.BoolValue is_marketplace_facilitator = 10;
  google.protobuf.StringValue delivery_uuid = 11;
  // key is 'cart_uuid' in POSIS request json
  google.protobuf.StringValue cart_id = 12;
  // epoch used
  google.protobuf.UInt64Value cart_updated_at = 13;
  google.protobuf.StringValue external_cart_id = 14;
  google.protobuf.FloatValue merchant_tips = 15;
}

// OrderItemRequestBody in POSIS
message POSOrderItem {
  google.protobuf.StringValue id = 1;
  google.protobuf.StringValue name = 2;
  google.protobuf.FloatValue price = 3;
  google.protobuf.Int32Value quantity = 4;
  google.protobuf.StringValue special_instructions = 5;
  repeated POSItemOption options = 6;
  google.protobuf.StringValue consumer_name = 7;
}

// OrderItemOptionRequestBody in POSIS
message POSItemOption {
  google.protobuf.StringValue id = 1;
  google.protobuf.BoolValue is_free = 2;
  google.protobuf.FloatValue price = 3;
  google.protobuf.StringValue extra_id = 4;
  google.protobuf.Int32Value quantity = 5;
  repeated POSItemOption options = 6;
}

// OrderStoreRequestBody in POSIS
message POSStore {
  google.protobuf.StringValue id = 1;
  google.protobuf.StringValue provider_type = 2;
  google.protobuf.Int32Value business_id = 3;
}

// OrderConsumerRequestBody in POSIS
message POSConsumer {
  google.protobuf.StringValue first_name = 1;
  google.protobuf.StringValue last_name = 2;
  google.protobuf.StringValue email = 3;
  // consumer_id = 'consumer_id' if key not present in request json
  google.protobuf.StringValue consumer_id = 4;
}

message GetCartValidationResultRequest {
  string cart_id = 1;
  google.protobuf.StringValue store_id = 2;
  google.protobuf.Timestamp cart_updated_at = 3;
  // for sanity check purpose to validate subtotal matches the validated order. It can be omitted
  money.MonetaryFields subtotal = 4;
  google.protobuf.BoolValue is_scheduled = 5;
}

message GetCartValidationResultResponse {
  bool is_valid = 1;
  // this is error_code between Pos and Cx Order to classify cx facing errors. There can be multiple
  // errors (i.e. for multiple items in the cart)
  repeated ValidationErrorDetail details = 2;
  // cart pricing
  CartPricing cart_pricing = 4;
}

// Cart Pricing
message CartPricing {
  // total discount. equal to sum of cart-level discount and item level discount
  google.protobuf.Int32Value total_discount = 1;
  // total cart-level discount
  google.protobuf.Int32Value total_cart_level_discount = 2;
  // total item-level discount
  google.protobuf.Int32Value total_item_level_discount = 3;
  // promotion validation details
  repeated ValidationDetail validation_details = 4;
}

// Validation Detail
message ValidationDetail {
  // machine-readable validation_code enum
  ValidationCode validation_code = 1;
  // human-readable message representing the validation code
  google.protobuf.StringValue message = 2;
  // entity that this validation status pertains to
  ValidationEntity entity = 3;
}

// Cart validation code
enum ValidationCode {
  // default
  VALIDATION_CODE_UNSPECIFIED = 0;
  // promotion applied
  VALIDATION_CODE_PROMOTION_APPLIED = 1;
  // promotion not applied
  VALIDATION_CODE_PROMOTION_NOT_APPLIED = 2;
}

message ValidationErrorDetail {
  ValidationErrorCode error_code = 1; // i.e. Olo's num -> error_code
  string message = 2; // i.e. olo error message
  repeated ValidationEntity entities = 3;
}

message ValidationEntity {
  ValidationEntityType type = 1;
  string id = 2;
  string name = 3;
}

enum ValidationEntityType {
  ITEM = 0;
  OPTION = 1;
  PROMOTION = 2;
}

enum ValidationErrorCode {
  STORE_UNAVAILABLE = 0;
  TIMEOUT = 1;
  THROTTLED = 2;
  TRANSMISSION_FAILURE = 3;
  STORE_OUT_OF_HOURS = 4;
  MENU_ITEM_UNAVAILABLE = 5;
  POS_CONFIGURATION_ERROR = 6;
  GENERIC_ERROR = 7;
}

enum OrderEventStatusCode {
  ACCEPTED = 0;
  INVALID_ARGUMENT = 1;
  INTERNAL_ERROR = 2;
}

message DispatchOrderRequest {
  merchant_integrations_event.POSOrderDispatchEvent event = 1;
}

message DispatchOrderResponse {}

message AsyncOrderConfirmRequest {
  merchant_integrations_event.POSAsyncOrderConfirmationEvent event = 1;
}

message AsyncOrderConfirmResponse {
  /**
     Status Code Mapping
     OrderNotFound -> Code.NOT_FOUND
     OrderAlreadyProcessed -> Code.ALREADY_EXISTS
     OrderExpired - Code.FAILED_PRECONDITION
     **/

  // Status code
  code.Code code = 1;
  // Error message when error
  google.protobuf.StringValue error = 2;
}

message AsyncStoreConfirmOrderReadyForPickupRequest {
  merchant_integrations_event.POSAsyncStoreConfirmOrderReadyForPickupEvent event = 1;
}

message AsyncStoreConfirmOrderReadyForPickupResponse {
  /**
     Status Code Mapping
     OrderNotFound -> Code.NOT_FOUND
     OrderExpired - Code.FAILED_PRECONDITION
     **/

  // Status code
  code.Code code = 1;
  // Error message when error
  google.protobuf.StringValue error = 2;
  // Store Info
  StoreInfo store_info = 3;
}

message AsyncDeliveryPickupRequest {
  merchant_integrations_event.POSAsyncDeliveryPickupEvent event = 1;
  merchant_integrations_event.OrderLocationEvent order_location_event = 2;
}

message AsyncDeliveryPickupResponse {
  /**
     Status Code Mapping
     OrderNotFound -> Code.NOT_FOUND
     OrderExpired - Code.FAILED_PRECONDITION
     **/

  // Status code
  code.Code code = 1;
  // Error message when error
  google.protobuf.StringValue error = 2;
}

message AsyncDasherArrivingAtConsumerRequest {
  merchant_integrations_event.POSAsyncDasherArrivingAtConsumerEvent event = 1;
  merchant_integrations_event.OrderLocationEvent order_location_event = 2;
}

message AsyncDasherArrivingAtConsumerResponse {
  /**
     Status Code Mapping
     OrderNotFound -> Code.NOT_FOUND
     OrderExpired - Code.FAILED_PRECONDITION
     **/

  // Status code
  code.Code code = 1;
  // Error message when error
  google.protobuf.StringValue error = 2;
}

message AsyncDeliveryDropoffRequest {
  merchant_integrations_event.POSAsyncDeliveryDropoffEvent event = 1;
}

message AsyncDeliveryDropoffResponse {
  /**
     Status Code Mapping
     OrderNotFound -> Code.NOT_FOUND
     OrderExpired - Code.FAILED_PRECONDITION
     **/

  // Status code
  code.Code code = 1;
  // Error message when error
  google.protobuf.StringValue error = 2;
}

message CancelOrderRequest {
  merchant_integrations_event.POSOrderCancelEvent event = 1;
}

message CancelOrderResponse {
  // Status code
  OrderEventStatusCode code = 1;
  // Error message when error
  google.protobuf.StringValue error = 2;
}

message ReleaseOrderRequest {
  merchant_integrations_event.POSOrderReleaseEvent event = 1;
}

message ReleaseOrderResponse {
  // Status code
  OrderEventStatusCode code = 1;
  // Error message when error
  google.protobuf.StringValue error = 2;
}

message SendDasherInfoToMerchantsRequest {
  string delivery_uuid = 1;
  string store_id = 2;
  DasherInfo dasher_info = 3;
  google.protobuf.Int64Value eta_in_seconds = 4;
  DasherStatus dasher_status = 5;
  ParkingInfo parking_info = 6;
}

message SendDasherInfoToMerchantsResponse {
  bool success = 1;
}

message DasherInfo {
  google.protobuf.StringValue vehicle_color = 1;
  google.protobuf.StringValue vehicle_make = 2;
  google.protobuf.StringValue vehicle_model = 3;
  google.protobuf.StringValue dasher_first_name = 4;
  // Should be localized when abbreviating
  google.protobuf.StringValue dasher_last_name = 5;
  google.protobuf.Int64Value dasher_id = 6;
}

message ParkingInfo {
  google.protobuf.StringValue parking_spot = 1;
}

enum DasherStatus {
  CONFIRMED = 0;
  ARRIVING = 1;
  ARRIVED = 2;
  OUT_FOR_DELIVERY = 3;
  DELIVERED = 4;
}

message OpenApiCancelOrderRequest {
  OpenApiCancelOrderReason cancel_reason = 2;
  google.protobuf.StringValue cancel_details = 3;
  // either delivery uuid, external order id or client order id lookup key can be used to cancel an order
  oneof order_details {
    google.protobuf.StringValue external_order_id = 1;
    google.protobuf.StringValue delivery_uuid = 4;
    google.protobuf.StringValue client_order_id = 5;
  }
}

enum OpenApiCancelOrderReason {
  ITEM_OUT_OF_STOCK = 0;
  STORE_CLOSED = 1;
  KITCHEN_BUSY = 2;
  OTHER = 3;
}

// Following the pattern of async order confirmation
message OpenApiCancelOrderResponse {
  // Status code
  code.Code code = 1;
  // Error message when error
  google.protobuf.StringValue error = 2;
}

message AdjustOrderRequest {
  google.protobuf.StringValue external_order_id = 1;
  repeated AdjustedOrderItem adjusted_order_item = 2;
  OrderAdjustmentType adjustment_type = 3; // update or cancellation
  string idempotency_key = 4;
  google.protobuf.Int32Value tip_amount = 5;
}

message AdjustedOrderItem {
  google.protobuf.StringValue external_order_item_id = 1;
  OrderItemAdjustmentType adjustment_type = 2; // currently supports update, substitution and remove
  google.protobuf.Int32Value quantity = 3;
  repeated AdjustedOrderItemExtraOption options = 4;
  AdjustedOrderItemSubstitution substitution = 5;
}

message AdjustedOrderItemExtraOption {
  google.protobuf.StringValue external_order_item_option_id = 1;
  OrderItemAdjustmentType adjustment_type = 2; // currently only supports update and remove
  google.protobuf.Int32Value quantity = 3;
  repeated AdjustedOrderItemExtraOption options = 4; // support nested order item extra option
}

message AdjustedOrderItemSubstitution {
  google.protobuf.StringValue name = 1;
  google.protobuf.StringValue merchant_supplied_id = 2;
  google.protobuf.Int32Value price = 3;
  google.protobuf.Int32Value quantity = 4;
}

enum OrderAdjustmentType {
  ITEM_ADJUSTMENT = 0;
  ITEM_CANCELLATION = 1;
  TIP_ADJUSTMENT = 2;
}

enum OrderItemAdjustmentType {
  ITEM_REMOVE = 0;
  ITEM_UPDATE = 1;
  ITEM_SUBSTITUTE = 2;
}

message AdjustOrderResponse {
  // Status code
  code.Code code = 1;
  // Error message when error
  google.protobuf.StringValue error = 2;
}

// Request for retrieving all order jsons for a given order
message GetAllOrderJsonsRequest {
  // order id
  google.protobuf.StringValue order_id = 1;
  // external id
  google.protobuf.StringValue external_id = 2;
  // delivery uuid
  google.protobuf.StringValue delivery_uuid = 3;
  // delivery short code
  google.protobuf.StringValue delivery_short_code = 4;
}

// Response for list of all order jsons
message GetAllOrderJsonsResponse {
  // list of all order jsons
  repeated OrderJsonsMap order_jsons_map = 1;
}

// order json Map
message OrderJsonsMap {
  // order json type
  google.protobuf.StringValue order_type = 1;
  // order json
  google.protobuf.StringValue order_json = 2;
}

message ProcessOrderValidationRequest {
  merchant_integrations_event.POSOrderValidationEvent event = 1;
}

message ProcessOrderValidationResponse {
  // Flag determining if the order is valid or not
  bool is_valid = 1;

  // Error details to be shared with Order Service (the primary caller of the RPC)
  repeated ValidationErrorDetail error_details = 2;
}
