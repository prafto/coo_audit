syntax = "proto3";

package merchant_integrations;

import "common/code.proto";
import "common/common.proto";
import "common/service_client_config.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "merchant_integrations/menu.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.merchant_integrations";

// Grpc service to get store information
service StoreInfoService {
  // Get store summary info
  rpc GetStoreSummaryInfo(GetStoreSummaryInfoRequest) returns (GetStoreSummaryInfoResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 2000;
    option (service_client.client_method_config).retry_config.max_attempts = 3;
    // default circuit breaker config
  }

  // Get store menu summary info
  rpc GetStoreMenuSummaryInfo(GetStoreMenuSummaryInfoRequest) returns (GetStoreMenuSummaryInfoResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 1000;
    option (service_client.client_method_config).retry_config.max_attempts = 3;
    // default circuit breaker config
  }

  // Update Store Activation Status
  rpc UpdateStoreActivationStatus(UpdateStoreActivationStatusRequest) returns (UpdateStoreActivationStatusResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 1000;
    option (service_client.client_method_config).retry_config.max_attempts = 3;
    // default circuit breaker config
  }

  // Get Search Store
  rpc GetSearchStoreInfo(GetSearchStoreInfoRequest) returns (GetSearchStoreInfoResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 1000;
    option (service_client.client_method_config).retry_config.max_attempts = 3;
    // default circuit breaker config
  }

  // Get the store status from MAS and use it to update store activation status
  rpc FetchAndUpdateStoreActivationStatus(FetchAndUpdateStoreActivationStatusRequest) returns (FetchAndUpdateStoreActivationStatusResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 1000;
    option (service_client.client_method_config).retry_config.max_attempts = 3;
    // default circuit breaker config
  }

  // Update the store activation status temporarily
  rpc UpdateTemporaryStoreActivationStatus(UpdateTemporaryStoreActivationStatusRequest) returns (UpdateTemporaryStoreActivationStatusResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 1000;
    option (service_client.client_method_config).retry_config.max_attempts = 3;
    // default circuit breaker config
  }

  // Validate menu photo and add dx delivery pay
  rpc ValidateMenuPhotoAndAddDxDeliveryPay(ValidateMenuPhotoAndAddDxDeliveryPayRequest) returns (ValidateMenuPhotoAndAddDxDeliveryPayResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 5000;
    option (service_client.client_method_config).retry_config.max_attempts = 3;
    // default circuit breaker config
  }
}

// Update store activation status request
message UpdateStoreActivationStatusRequest {
  // Location id of store
  google.protobuf.StringValue location_id = 1;

  // Provider type
  google.protobuf.StringValue provider_type = 2;

  // Boolean flag to activate or deactivate store
  google.protobuf.BoolValue activate = 3;

  // Reason if store is being deactivated
  StoreDeactivationReason deactivation_reason = 4;

  // Notes
  google.protobuf.StringValue notes = 5;

  // Should send email
  google.protobuf.BoolValue should_send_email = 6;

  // Set deactivate duration in hours
  google.protobuf.Int32Value duration_in_secs = 7;

  // Set deactivate duration in seconds
  google.protobuf.Int32Value duration_in_hours = 8;

  // End deactivation datetime
  google.protobuf.Timestamp end_time = 9;
}

// Store deactivation reasons
enum StoreDeactivationReason {
  // Default
  STORE_DEACTIVATION_REASON_UNSPECIFIED = 0;

  // Out of business
  STORE_DEACTIVATION_REASON_OUT_OF_BUSINESS = 1;

  // Operational issues
  STORE_DEACTIVATION_REASON_OPERATIONAL_ISSUES = 6;

  // Delete store
  STORE_DEACTIVATION_REASON_DELETE_STORE = 7;

  // Payment issue
  STORE_DEACTIVATION_REASON_PAYMENT_ISSUES = 8;

  // Store self disabled in their POS portal
  STORE_DEACTIVATION_REASON_SELF_DISABLED = 253;

  // Store POS connectivity issues
  STORE_DEACTIVATION_REASON_CONNECTIVITY_ISSUES = 255;
}

// Update store activation status response
message UpdateStoreActivationStatusResponse {
  // Status code
  code.Code code = 1;

  // Error message when error
  google.protobuf.StringValue error = 2;
}

// Store deactivation info
message StoreDeactivation {
  // Deactivation reason,
  google.protobuf.StringValue reason = 1;
  // Deactivation notes
  google.protobuf.StringValue notes = 2;
  // Created datetime
  google.protobuf.Timestamp created_at = 3;
  // End deactivation datetime
  google.protobuf.Timestamp end_time = 4;
  // Reactivation datetime
  google.protobuf.Timestamp reactivated_at = 5;
  // Experience
  common.Experience experience = 6;
}

// Request to get store summary info
message GetStoreSummaryInfoRequest {
  // Provider type,
  google.protobuf.StringValue provider_type = 1;
  // Location Id
  google.protobuf.StringValue location_id = 2;
}

// Store info
message StoreInfo {
  // store id (internal id)
  google.protobuf.StringValue store_id = 1;
  // Provider type
  google.protobuf.StringValue provider_type = 2;
  // Location Id (external id)
  google.protobuf.StringValue location_id = 3;
  // Store name
  google.protobuf.StringValue name = 4;
  // Order protocol
  google.protobuf.StringValue order_protocol = 5;
  //Store active flag
  google.protobuf.BoolValue active = 6;
  // Max length for special instructions
  google.protobuf.Int32Value special_instructions_max_length = 7;
  // Auto release distance
  google.protobuf.FloatValue auto_release_distance = 8;
  // Auto release enabled flag
  google.protobuf.BoolValue auto_release_enabled = 9;
  // Auto release from store enabled flag
  google.protobuf.BoolValue auto_release_from_store_enabled = 10;
  // Doordash store Url (with store/internal id)
  google.protobuf.StringValue store_url = 11;
}

// Response to get store summary info
message GetStoreSummaryInfoResponse {
  // Store info
  StoreInfo store = 1;
  // Permanent deactivations
  repeated StoreDeactivation permanent_deactivations = 2;
  // Temporary deactivations
  repeated StoreDeactivation temporary_deactivations = 3;
}

// Store menu summary
message StoreMenuSummary {
  // Menu id (uuid)
  google.protobuf.StringValue menu_id = 1;
  // Menu name
  google.protobuf.StringValue name = 2;
  // Menu substitle
  google.protobuf.StringValue subtitle = 3;
  // Menu active flag
  google.protobuf.BoolValue active = 4;
  // Menu URL
  google.protobuf.StringValue url = 5;
  // Date of latest update
  google.protobuf.Timestamp latest_update_at = 6;
  // Status of latest update
  google.protobuf.StringValue latest_update_status = 7;
  // Menu open hours
  repeated OpenHours open_hours = 8;
  // Menu special hours
  repeated SpecialHours special_hours = 9;
  // Source of menu creation
  google.protobuf.StringValue source_of_creation = 10;
  // Last successful menu update
  google.protobuf.Timestamp last_menu_update_at = 11;
  // Menu meta Id (external id)
  google.protobuf.StringValue menu_meta_id = 12;
  // Menu type (ALLDAY, LUNCH, etc)
  google.protobuf.StringValue menu_type = 13;
}

// Request to get store menu summary info
message GetStoreMenuSummaryInfoRequest {
  // Provider type,
  google.protobuf.StringValue provider_type = 1;
  // Location Id
  google.protobuf.StringValue location_id = 2;
}

// Response to get store menu summary info
message GetStoreMenuSummaryInfoResponse {
  // Internal store id
  google.protobuf.StringValue store_id = 1;
  // Provider type,
  google.protobuf.StringValue provider_type = 2;
  // Location Id (External id)
  google.protobuf.StringValue location_id = 3;
  // Menus
  repeated StoreMenuSummary menus = 4;
}

// Request to search store based on coordinates
message GetSearchStoreInfoRequest {
  // latitude coordinate
  google.protobuf.DoubleValue lat = 1;
  // longitude coordinate
  google.protobuf.DoubleValue lng = 2;
  // Store open flag
  google.protobuf.BoolValue is_open = 3;
  // Provider type
  google.protobuf.StringValue provider_type = 4;
}

// Response to search store based on coordinates
message GetSearchStoreInfoResponse {
  // search store result
  repeated SearchStore stores = 1;
  // Status code
  code.Code code = 2;
  // Error message when error
  google.protobuf.StringValue error = 3;
}

// Store details
message SearchStore {
  // store id
  google.protobuf.StringValue id = 1;
  // store name
  google.protobuf.StringValue name = 2;
  // store description
  google.protobuf.StringValue description = 3;
}

// Request to get store activation status from Merchant and update it
message FetchAndUpdateStoreActivationStatusRequest {
  // Provider type,
  google.protobuf.StringValue provider_type = 1;
  // List of location id strings
  repeated google.protobuf.StringValue location_id = 2;
}

// Response of initiating store activation status for a merchant (Asynchronous)
message FetchAndUpdateStoreActivationStatusResponse {
  // Status code
  code.Code code = 1;
  // Message specifying the error that occurs while initiating the RPC
  google.protobuf.StringValue error = 2;
}

// Update temporary store activation status request
message UpdateTemporaryStoreActivationStatusRequest {
  // Location id of store
  google.protobuf.StringValue location_id = 1;

  // Provider type
  google.protobuf.StringValue provider_type = 2;

  // Boolean flag to activate or deactivate store
  google.protobuf.BoolValue activate = 3;

  // Reason if store is being deactivated
  google.protobuf.Int64Value deactivation_reason_id = 4;

  // Notes
  google.protobuf.StringValue notes = 5;

  // Should send email
  google.protobuf.BoolValue should_send_email = 6;

  // Field specifying how long should a store be deactivated temporarily
  oneof deactivation_period {
    // Duration in hours for which the store needs to be deactivated temporarily
    google.protobuf.Int64Value duration_in_hours = 8;

    // Duration in seconds for which the store needs to be deactivated temporarily
    google.protobuf.Int64Value duration_in_seconds = 9;

    // The timestamp at which the temporary deactivation will end
    google.protobuf.Timestamp end_time = 10;
  }
}

// Update temporary store activation status response
message UpdateTemporaryStoreActivationStatusResponse {
  // Status code
  code.Code code = 1;

  // Error message when error
  google.protobuf.StringValue error = 2;
}

// Validate menu photo and add dx delivery pay request
message ValidateMenuPhotoAndAddDxDeliveryPayRequest {
  // Id of the delivery
  google.protobuf.Int64Value delivery_id = 1;

  // Id of the store
  google.protobuf.Int64Value store_id = 2;

  // Id of the assignment
  google.protobuf.Int64Value assignment_id = 3;

  // Id of the shift
  google.protobuf.Int64Value shift_id = 4;

  // Item count percentage
  google.protobuf.Int32Value item_count_percentage = 5;
}

// Validate menu photo and add dx delivery pay response
message ValidateMenuPhotoAndAddDxDeliveryPayResponse {
  // Blank response for Q4 2022 (MVP)
}
