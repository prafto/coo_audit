syntax = "proto3";
// buf:lint:ignore DIRECTORY_SAME_PACKAGE
// buf:lint:ignore PACKAGE_VERSION_SUFFIX
package merchant_integrations;

import "common/code.proto";
import "common/common.proto";
import "common/service_client_config.proto";
import "google/protobuf/wrappers.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.merchant_integrations";

// Simulator Related integration
service SimulatorService {
  // Order Delivery Simulator Event
  rpc ProcessOrderDeliverySimulatorEvent(ProcessOrderDeliverySimulatorEventRequest) returns (ProcessOrderDeliverySimulatorEventResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 5000;
    option (service_client.client_method_config).retry_config.max_attempts = 3;
    // default circuit breaker config
  }

  // Order Delivery Simulator Batch Event
  rpc ProcessOrderDeliverySimulatorBatchEvent(ProcessOrderDeliverySimulatorBatchEventRequest) returns (ProcessOrderDeliverySimulatorBatchEventResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 5000;
    option (service_client.client_method_config).retry_config.max_attempts = 3;
    // default circuit breaker config
  }

  // Get test order status
  rpc GetTestOrderStatus(GetTestOrderStatusRequest) returns (GetTestOrderStatusResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 2000;
    option (service_client.client_method_config).retry_config.max_attempts = 2;
    // default circuit breaker config
  }
}

// Process Order Delivery Simulator Request
message ProcessOrderDeliverySimulatorEventRequest {
  // DoorDash Store Id
  google.protobuf.StringValue store_id = 1;
  // Store active menu Id
  google.protobuf.StringValue menu_id = 2;
  // Order Protocol
  OrderProtocol order_protocol = 3;
  // Country
  Country country_code = 4;
  // item ids
  repeated google.protobuf.StringValue item_ids = 5;
  // extra ids
  repeated google.protobuf.StringValue extra_ids = 6;
  // options ids
  repeated google.protobuf.StringValue option_ids = 7;
}

// Process Order Delivery Simulator Response
message ProcessOrderDeliverySimulatorEventResponse {
  // Response code
  code.Code code = 1;
  // Response's detail
  google.protobuf.StringValue message = 2;
}

// Process Order Delivery Simulator Batch Request
message ProcessOrderDeliverySimulatorBatchEventRequest {
  // DoorDash Store Id
  google.protobuf.StringValue store_id = 1;
  // Store active menu Id
  google.protobuf.StringValue menu_id = 2;
  // Order Protocol
  OrderProtocol order_protocol = 3;
  // Country
  Country country_code = 4;
  // Order count
  google.protobuf.Int32Value order_count = 5;
  // Order interval in seconds
  google.protobuf.Int32Value order_interval = 6;
  // Order schedule type (ASAP vs scheduled)
  common.DeliveryOptionType delivery_option_type = 7;
  // Order fulfillment type (delivery vs pickup)
  common.FulfillmentType fulfillment_type = 8;
  // Order type
  OrderType order_type = 9;
}

// Process Order Delivery Simulator Response
message ProcessOrderDeliverySimulatorBatchEventResponse {
  // Response's detail
  google.protobuf.StringValue message = 1;
}

// Order Protocol Type
enum OrderProtocol {
  // not a protocol
  ORDER_PROTOCOL_UNSPECIFIED = 0;
  // POS orders
  ORDER_PROTOCOL_POS = 1;
  // Tablet orders
  ORDER_PROTOCOL_TABLET = 2;
}

// Country name
enum Country {
  // not a country
  COUNTRY_UNSPECIFIED = 0;
  // US
  COUNTRY_USA = 1;
  // Canada
  COUNTRY_CAN = 2;
  // Australia
  COUNTRY_AUS = 3;
  // Japan
  COUNTRY_JPN = 4;
  // Germany
  COUNTRY_DEU = 5;
  // New Zealand
  COUNTRY_NZ = 6;
}

// Order Type Flags
enum OrderType {
  // Unspecified
  ORDER_TYPE_UNSPECIFIED = 0;
  // Normal
  ORDER_TYPE_NORMAL = 1;
  // Large
  ORDER_TYPE_LARGE = 2;
  // Group Order
  ORDER_TYPE_GROUP = 3;
  // Batch Order
  ORDER_TYPE_BATCH = 4;
}

// Get Test Order Status Request
message GetTestOrderStatusRequest {
  // store_id of the order
  google.protobuf.StringValue store_id = 1;
  // the response will contain only the orders within the past n days
  google.protobuf.Int32Value days_to_show = 2;
}

// Get Test Order Status Response
message GetTestOrderStatusResponse {
  // status_message returns a short message detailing retrieval success or failure cause
  google.protobuf.StringValue status_message = 1;
  // list of order id and status
  repeated TestOrder orders = 2;
  // order simulator state
  OrderSimulatorState order_simulator_state = 3;
}

// Get tht state of the order simulator flow
message OrderSimulatorState {
  // Order simulator workflow status
  google.protobuf.StringValue status = 1;
  // Order simulator workflow details
  google.protobuf.StringValue details = 2;
}

// Order ID and status
message TestOrder {
  // order delivery uuid
  google.protobuf.StringValue delivery_uuid = 1;
  // order status
  google.protobuf.StringValue status = 2;
}
