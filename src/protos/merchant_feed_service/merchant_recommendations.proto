syntax = "proto3";

package merchant_feed_service.v1;

import "common/service_client_config.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "merchant_feed_service/commons.proto";
import "merchant_feed_service/merchant_feed.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.merchant_feed";

// Recommendation Service ( feed operator APIs )
service MerchantRecommendationService {
  // Get all recommendation_items
  rpc GetAllRecommendationItems(GetAllRecommendationItemsRequest) returns (GetAllRecommendationItemsResponse);
  // Get recommendation_item
  rpc GetRecommendationItem(GetRecommendationItemRequest) returns (GetRecommendationItemResponse);
  // Update recommendation_item
  rpc UpdateRecommendationItem(UpdateRecommendationItemRequest) returns (UpdateRecommendationItemResponse);
  // Create recommendation_item
  rpc CreateRecommendationItem(CreateRecommendationItemRequest) returns (CreateRecommendationItemResponse);
  // Delete recommendation_item
  rpc DeleteRecommendationItem(DeleteRecommendationItemRequest) returns (DeleteRecommendationItemResponse);
  // Get all dynamic attributes
  rpc GetAllDynamicAttributes(GetAllDynamicAttributesRequest) returns (GetAllDynamicAttributesResponse);
  // Create dynamic attribute
  rpc CreateDynamicAttribute(CreateDynamicAttributeRequest) returns (CreateDynamicAttributeResponse);
  // Delete dynamic attribute
  rpc DeleteDynamicAttribute(DeleteDynamicAttributeRequest) returns (DeleteDynamicAttributeResponse);
}

// Request for DeleteRecommendationItem
message DeleteRecommendationItemRequest {
  // Recommendation id
  google.protobuf.StringValue recommendation_id = 1;
}

// Response for DeleteRecommendationItem
message DeleteRecommendationItemResponse {
  // status code
  StatusCode status_code = 1;
}

// Request for CreateRecommendationItem
message CreateRecommendationItemRequest {
  // user id
  google.protobuf.StringValue user_id = 1;
  // Recommendation item
  RecommendationItem recommendation_item = 2;
}

// Response for CreateRecommendationItem
message CreateRecommendationItemResponse {
  // Recommendation id
  google.protobuf.StringValue recommendation_id = 1;
  // status code
  StatusCode status_code = 2;
}

// Request for UpdateRecommendationItem
message UpdateRecommendationItemRequest {
  // Recommendation id
  google.protobuf.StringValue recommendation_id = 1;
  // user id
  google.protobuf.StringValue user_id = 2;
  // Recommendation item
  RecommendationItem recommendation_item = 3;
}

// Response for UpdateRecommendationItem
message UpdateRecommendationItemResponse {
  // Recommendation id
  google.protobuf.StringValue recommendation_id = 1;
  // status
  StatusCode status_code = 2;
}

// Request for GetRecommendationItem
message GetRecommendationItemRequest {
  // Recommendation id
  google.protobuf.StringValue recommendation_id = 1;
}

// Response for GetRecommendationItem
message GetRecommendationItemResponse {
  // Recommendation item
  RecommendationItem recommendation_item = 1;
}

// Request for GetRecommendationItems
message GetAllRecommendationItemsRequest {
  // user id
  google.protobuf.StringValue user_id = 1;
  // offset
  google.protobuf.Int32Value offset = 2;
  // limit
  google.protobuf.Int32Value limit = 3;
  // search Keyword - on card type, card title, card subtitle, and dv
  google.protobuf.StringValue search_keyword = 4;
}

// Response for GetRecommendationItems
message GetAllRecommendationItemsResponse {
  // Recommendation items
  repeated RecommendationItem recommendation_items = 1;
  // count
  google.protobuf.Int32Value total_count = 2;
}

// Request for GetDynamicAttributes
message GetAllDynamicAttributesRequest {
  // offset
  google.protobuf.Int32Value offset = 1;
  // limit
  google.protobuf.Int32Value limit = 2;
}

// Response for GetRecommendationItems
message GetAllDynamicAttributesResponse {
  // Dynamic Attributes
  repeated DynamicAttribute dynamic_attributes = 1;
  // count
  google.protobuf.Int32Value total_count = 2;
}

// Request for CreateDynamicAttribute
message CreateDynamicAttributeRequest {
  // user id
  google.protobuf.StringValue user_id = 1;
  // Dynamic Attribute
  DynamicAttribute dynamic_attribute = 2;
}

// Response for CreateDynamicAttribute
message CreateDynamicAttributeResponse {
  // Dynamic Attribute id
  google.protobuf.StringValue attribute_id = 1;
  // status code
  StatusCode status_code = 2;
}

// Request for DeleteDynamicAttribute
message DeleteDynamicAttributeRequest {
  // Dynamic Attribute id
  google.protobuf.StringValue attribute_id = 1;
}

// Response for DeleteDynamicAttribute
message DeleteDynamicAttributeResponse {
  // status code
  StatusCode status_code = 1;
}

// status code for csv upload process
enum StatusCode {
  // unspecified status code
  STATUS_CODE_UNSPECIFIED = 0;
  // success status code
  STATUS_CODE_SUCCESS = 1;
  // Generic Error
  STATUS_CODE_ERROR = 2;
}

// cta type
message RecommendationCta {
  // cta
  google.protobuf.StringValue cta = 1;
  // cta link
  google.protobuf.StringValue cta_link = 2;
  // is internal cta link
  google.protobuf.BoolValue is_internal_link = 3;
  // mobile app cta link
  google.protobuf.StringValue bma_cta_link = 4;
}

// recommendation item
message RecommendationItem {
  reserved 11, 12;
  reserved "match_mode", "conditions";
  // title - required
  google.protobuf.StringValue title = 1;
  // subtitle - required
  google.protobuf.StringValue subtitle = 2;
  // primary cta
  RecommendationCta primary_cta = 3;
  // secondary cta
  RecommendationCta secondary_cta = 4;
  // image url - optional
  google.protobuf.StringValue image_url = 5;
  // internal name - required
  google.protobuf.StringValue internal_name = 6;
  // internal notes - optional
  google.protobuf.StringValue internal_notes = 7;
  // target_filter
  TargetFilter target_filter = 8;
  // id - optional
  google.protobuf.StringValue id = 9;
  // category - required
  repeated FeedItemCategory categories = 10;
  // match_mode = 11 and conditions = 12 deprecated

  // prominence_level - optional
  FeedItemProminenceLevel prominence_level = 13;
}

// dynamic attribute
message DynamicAttribute {
  // id - required
  google.protobuf.StringValue id = 1;
  // name - required
  google.protobuf.StringValue feature_attribute = 2;
  // journey step - optional
  google.protobuf.StringValue journey_step_name = 3;
  // db type - required
  google.protobuf.StringValue type = 4;
  // db field - required
  google.protobuf.StringValue field_key = 5;
  // label - optional
  google.protobuf.StringValue label = 6;
  // feature focus area - required
  google.protobuf.StringValue feature_focus_area = 7;
}

// eligibility condition
message EligibilityCondition {
  // id - required
  google.protobuf.StringValue condition_id = 1;
  // journey step - required
  google.protobuf.StringValue journey_step_name = 2;
  // field key - required
  google.protobuf.StringValue field_key = 3;
  // type - required
  google.protobuf.StringValue type = 4;
  // operator - required
  google.protobuf.StringValue operator = 5;
  // value - required
  google.protobuf.StringValue value = 6;
  // feature focus - required
  google.protobuf.StringValue feature_focus = 7;
  // feature attribute - required
  google.protobuf.StringValue feature_attribute = 8;
}

// channel type
enum ChannelType {
  // unspecified
  CHANNEL_TYPE_UNSPECIFIED = 0;
  // storefront type
  CHANNEL_TYPE_STOREFRONT = 1;
  // drive type
  CHANNEL_TYPE_DRIVE = 2;
}

// management type
enum ManagementType {
  // unspecified
  MANAGEMENT_TYPE_UNSPECIFIED = 0;
  // unmanaged store type
  MANAGEMENT_TYPE_UNMANAGED = 1;
  // midmarket store type
  MANAGEMENT_TYPE_MID_MARKET = 2;
  // enterprise store type
  MANAGEMENT_TYPE_ENTERPRISE = 3;
  // iam premium store type
  MANAGEMENT_TYPE_IAM_PREMIUM = 4;
  // iam core store type
  MANAGEMENT_TYPE_IAM_CORE = 5;
  // oam core store type
  MANAGEMENT_TYPE_OAM_CORE = 6;
  // oam premium store type
  MANAGEMENT_TYPE_OAM_PREMIUM = 7;
  // oam premium store type
  MANAGEMENT_TYPE_CAN_US_MANAGED = 8;
  // oam premium store type
  MANAGEMENT_TYPE_PM_ANZ = 9;
}

// list type
enum ListType {
  // unspecified store type
  LIST_TYPE_UNSPECIFIED = 0;
  // denylist type
  LIST_TYPE_DENY = 1;
  // allow list type
  LIST_TYPE_ALLOW = 2;
}

// optional, will signal to user whether to reupload CSV file
enum CsvUploadStatus {
  // unspecified
  CSV_UPLOAD_STATUS_UNSPECIFIED = 0;
  // in progress
  CSV_UPLOAD_STATUS_IN_PROGRESS = 1;
  // success
  CSV_UPLOAD_STATUS_SUCCESS = 2;
  // fail
  CSV_UPLOAD_STATUS_FAIL = 3;
}

// Target view level
enum TargetView {
  // unspecified
  TARGET_VIEW_UNSPECIFIED = 0;
  // business and store
  TARGET_VIEW_BUSINESS_AND_STORE = 1;
  // business
  TARGET_VIEW_BUSINESS = 2;
  // store
  TARGET_VIEW_STORE = 3;
}

// Match mode options
enum MatchMode {
  // unspecified
  MATCH_MODE_UNSPECIFIED = 0;
  // match always
  MATCH_MODE_ALWAYS = 1;
  // match all
  MATCH_MODE_ALL = 2;
  // match any
  MATCH_MODE_ANY = 3;
  // match none
  MATCH_MODE_NONE = 4;
}

// target filter
message TargetFilter {
  // required
  google.protobuf.Timestamp start_date = 1;
  // optional
  google.protobuf.Timestamp end_date = 2;
  // optional
  google.protobuf.Int32Value priority_rank = 3;
  // optional
  google.protobuf.BoolValue is_pinned = 4;
  // required
  repeated UserRole user_roles = 5;
  // countries - optional
  repeated google.protobuf.StringValue countries = 6;
  // management types - optional
  repeated ManagementType management_type = 7;
  // channel types - optional
  repeated ChannelType channel_type = 8;
  // submarket ids - optional
  repeated google.protobuf.StringValue submarket_ids = 9;
  // required
  TargetView target_view = 10;
  // required
  ListType list_type = 11;
  // csv file name
  google.protobuf.StringValue csv_file_name = 12;
  // optional
  google.protobuf.StringValue csv_url = 13;
  // optional
  CsvUploadStatus csv_upload_status = 14;
  // id
  google.protobuf.StringValue id = 15;
  // created at date
  google.protobuf.Timestamp created_at = 16;
  // updated at date
  google.protobuf.Timestamp updated_at = 17;
  // creator user id
  google.protobuf.StringValue creator_user_id = 18;
  // dv name targeting - optional
  google.protobuf.StringValue dynamic_value_name = 19;
  // surface this feed card is targeting
  repeated FeedSurfaceType surfaces = 20;
  // custom tag
  google.protobuf.StringValue custom_tag = 21;
  // match_mode - required
  MatchMode match_mode = 22;
  // eligibility conditions - optional
  repeated EligibilityCondition conditions = 23;
  // updater user id
  google.protobuf.StringValue updater_user_id = 24;
}
