syntax = "proto3";

package merchant_feed_service.v1;

import "common/service_client_config.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "merchant_feed_service/commons.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.merchant_feed";

// Merchant Reward service
service MerchantRewardService {
  // Get merchant reward current month
  rpc GetMerchantRewardCurrentMonth(GetMerchantRewardCurrentMonthRequest) returns (GetMerchantRewardCurrentMonthResponse);

  // Get merchant reward last month
  rpc GetMerchantRewardLastMonth(GetMerchantRewardLastMonthRequest) returns (GetMerchantRewardLastMonthResponse);

  // OptIn For CashBack Reward (required for cashback payments)
  rpc OptInForCashBackReward(OptInForCashBackRewardRequest) returns (OptInForCashBackRewardResponse);
}

// Request for GetMerchantRewardCurrentMonth
message GetMerchantRewardCurrentMonthRequest {
  // store id, required
  google.protobuf.StringValue store_id = 1;
  // business id, required
  google.protobuf.StringValue business_id = 2;
  // `country_shortname` is in practice an acronym, e.g. 'US' or 'JP', required
  google.protobuf.StringValue country_shortname = 3;
}

// Request for GetMerchantRewardLastMonth
message GetMerchantRewardLastMonthRequest {
  // store id, required
  google.protobuf.StringValue store_id = 1;
  // business id, required
  google.protobuf.StringValue business_id = 2;
  // `country_shortname` is in practice an acronym, e.g. 'US' or 'JP', required
  google.protobuf.StringValue country_shortname = 3;
}

// Request for OptInForCashBackReward
message OptInForCashBackRewardRequest {
  // store id, required
  google.protobuf.StringValue store_id = 1;
  // business id, required
  google.protobuf.StringValue business_id = 2;
  // `country_shortname` is in practice an acronym, e.g. 'US' or 'JP', required
  google.protobuf.StringValue country_shortname = 3;
}

// Response for GetMerchantRewardCurrentMonth
message GetMerchantRewardCurrentMonthResponse {
  // monthly cancellation
  MerchantRewardTargetValue monthly_cancellation = 1;
  // monthly missing and incorrect
  MerchantRewardTargetValue monthly_missing_and_incorrect = 2;
  // monthly cx rating
  MerchantRewardTargetValue cx_rating = 3;
  // lifetime cx rating
  MerchantRewardTargetValue lifetime_cx_rating = 4;
  // lifetime delivery
  MerchantRewardTargetValue lifetime_delivery = 5;
  // logo and header
  MerchantRewardTargetValue logo_and_header = 6;
  // similar menu prices
  MerchantRewardTargetValue similar_menu_prices = 7;
  // current month value (1 - January, 2 - February, etc)
  google.protobuf.Int32Value current_month_value = 8;
  // downtime rate
  MerchantRewardTargetValue downtime_rate = 9;
  // CashBack Eligible (US + AUS + NZ only - Not ENT/MM Mx)
  google.protobuf.BoolValue cashback_eligible = 10;
  // CashBack Opted-In
  google.protobuf.BoolValue cashback_opted_in = 11;
  // CashBack Amount
  google.protobuf.StringValue cashback_amount = 12;
  // true if data exists, false if Mx Rewards never evaluated before
  google.protobuf.BoolValue this_month_data_exists = 13;
  // true if all targets hit (Most Loved Earned)
  google.protobuf.BoolValue all_targets_hit = 14;
  // true if this month data has been calculated.
  // the cron runs at 2 PM on the 2nd day to generate the metrics for the first day
  google.protobuf.BoolValue this_month_data_calculated = 15;
  // true if all requirements met (Lifetime Requirements Met)
  google.protobuf.BoolValue lifetime_requirements_met = 16;
}

// Response for GetMerchantRewardLastMonth
message GetMerchantRewardLastMonthResponse {
  // monthly cancellation
  MerchantRewardTargetValue monthly_cancellation = 1;
  // monthly missing and incorrect
  MerchantRewardTargetValue monthly_missing_and_incorrect = 2;
  // monthly cx rating
  MerchantRewardTargetValue cx_rating = 3;
  // lifetime cx rating
  MerchantRewardTargetValue lifetime_cx_rating = 4;
  // lifetime delivery
  MerchantRewardTargetValue lifetime_delivery = 5;
  // logo and header
  MerchantRewardTargetValue logo_and_header = 6;
  // similar menu prices
  MerchantRewardTargetValue similar_menu_prices = 7;
  // last month value (1 - January, 2 - February, etc)
  google.protobuf.Int32Value last_month_value = 8;
  // true if data exists, false if Mx Rewards never evaluated before
  google.protobuf.BoolValue last_month_data_exists = 9;
  // true if all targets hit (Most Loved Earned)
  google.protobuf.BoolValue all_targets_hit = 10;
  // false until 3 AM PST on the 2nd day of the month, true otherwise
  // (Reason: ETL doesn't prepare metrics for previous day in Snowflake until 2PM PST everyday, CRON runs at 3 AM PST)
  google.protobuf.BoolValue last_month_data_calculated = 11;
  // downtime rate
  MerchantRewardTargetValue downtime_rate = 12;
  // CashBack Eligible (US + AUS + NZ only - Not ENT/MM Mx)
  google.protobuf.BoolValue cashback_eligible = 13;
  // CashBack Opted-In
  google.protobuf.BoolValue cashback_opted_in = 14;
  // CashBack Amount
  google.protobuf.StringValue cashback_amount = 15;
  // CashBack Earned
  google.protobuf.BoolValue cashback_earned = 16;
  // true if all requirements met (Lifetime Requirements Met)
  google.protobuf.BoolValue lifetime_requirements_met = 17;
}

// Response for OptInForCashBackReward
message OptInForCashBackRewardResponse {
  // status code, required
  Status status_code = 1;
}

// Merchant Reward Target Value
message MerchantRewardTargetValue {
  // target value, required
  google.protobuf.StringValue target_value = 1;
  // target operator, required
  TargetOperator target_operator = 2;
  // actual value, optional
  google.protobuf.StringValue actual_value = 3;
  // target status, optional
  TargetStatus target_status = 4;
}

// Target Operator
enum TargetOperator {
  // Unspecified
  TARGET_OPERATOR_UNSPECIFIED = 0;
  // Equal
  TARGET_OPERATOR_EQUAL = 1;
  // Not Equal
  TARGET_OPERATOR_NOT_EQUAL = 2;
  // Less than
  TARGET_OPERATOR_LESS_THAN = 3;
  // Less than or Equal
  TARGET_OPERATOR_LESS_THAN_EQUAL = 4;
  // Greater than
  TARGET_OPERATOR_GREATER_THAN = 5;
  // Greater than or Equal
  TARGET_OPERATOR_GREATER_THAN_EQUAL = 6;
}

// Target Status
enum TargetStatus {
  // Unspecified
  TARGET_STATUS_UNSPECIFIED = 0;
  // Hit
  TARGET_STATUS_HIT = 1;
  // Miss
  TARGET_STATUS_MISS = 2;
}
