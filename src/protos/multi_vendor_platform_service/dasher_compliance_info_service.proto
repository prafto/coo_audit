syntax = "proto3";

package multi_vendor_platform_service.v1;

import "common/common.proto";
import "common/service_client_config.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "system_of_records_service/common.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.multi_vendor_platform_service";

// Service to handle dasher compliance info interactions
service DasherComplianceInfoService {
  // Create or update a tax info entry for a CAN user
  rpc UpsertCanTaxInfo(UpsertCanTaxInfoRequest) returns (UpsertCanTaxInfoResponse);
  // Get a tax info entry for a CAN user
  rpc GetCanTaxInfo(GetCanTaxInfoRequest) returns (GetCanTaxInfoResponse);
  // Clean tax
  rpc CleanTaxInfo(CleanTaxInfoRequest) returns (CleanTaxInfoResponse);
  // Create a new tax info entry for a NZ user
  rpc CreateNzTaxInfo(CreateNzTaxInfoRequest) returns (CreateNzTaxInfoResponse);
  // Get a new tax info entry for a NZ user
  rpc GetNzTaxInfo(GetNzTaxInfoRequest) returns (GetNzTaxInfoResponse);
  // Has tax Info Valid
  rpc HasValidTaxInfo(HasValidTaxInfoRequest) returns (HasValidTaxInfoResponse);
  // UpsertDlInfo
  rpc UpsertDlInfo(UpsertDlInfoRequest) returns (UpsertDlInfoResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 10000;
  }
  // GetDlInfo
  rpc GetDlInfo(GetDlInfoRequest) returns (GetDlInfoResponse);
  // GetLatestInquiryStatus from RDP table
  rpc GetLatestInquiryStatus(GetLatestInquiryStatusRequest) returns (GetLatestInquiryStatusResponse);
  // Get Persona inquiry by id
  rpc GetInquiryById(GetInquiryByIdRequest) returns (GetInquiryByIdResponse);
  // Create Inquiry
  rpc CreateInquiry(CreateInquiryRequest) returns (CreateInquiryResponse);
  // Get Persona account
  rpc GetPersonaAccount(GetPersonaAccountRequest) returns (GetPersonaAccountResponse);

  // Update dasher SSN token
  rpc UpdateDasherSsnToken(UpdateDasherSsnTokenRequest) returns (UpdateDasherSsnTokenResponse);
  // Get dasher SSN token from Stripe
  rpc GetDasherSsnTokenFromStripe(GetDasherSsnTokenFromStripeRequest) returns (GetDasherSsnTokenFromStripeResponse);
  // Get Stripe Account
  rpc GetStripeAccount(GetStripeAccountRequest) returns (GetStripeAccountResponse);
  // Create Payment Accounts
  rpc CreatePaymentAccounts(CreatePaymentAccountsRequest) returns (CreatePaymentAccountsResponse);
  // Create Additional Verification
  rpc CreateAdditionalVerification(CreateAdditionalVerificationRequest) returns (CreateAdditionalVerificationResponse);
  // Update Additional Verification
  rpc UpdateAdditionalVerification(UpdateAdditionalVerificationRequest) returns (UpdateAdditionalVerificationResponse);
  // Update Stripe Account Address
  rpc UpdateStripeAccountAddress(UpdateStripeAccountAddressRequest) returns (UpdateStripeAccountAddressResponse);
  // Get document information
  rpc GetDocumentInfo(GetDocumentInfoRequest) returns (GetDocumentInfoResponse);
  // Upsert document information
  rpc UpsertDocumentInfo(UpsertDocumentInfoRequest) returns (UpsertDocumentInfoResponse);
}

// UpsertCanTaxInfoRequest request
message UpsertCanTaxInfoRequest {
  // Dx applicant unique link
  string applicant_unique_link = 1;
  // Dx CAN SIN token
  google.protobuf.StringValue sin_token = 2;
  // Dx CAN BN/BIN number
  google.protobuf.StringValue business_number = 3;
  // Dx CAN Business company name
  google.protobuf.StringValue company_name = 4;
  // SIN number starts with 9 (deprecated, use sin_starts_with_9 instead)
  bool sin9 = 5 [deprecated = true];
  // Indicates if SIN number starts with 9 (temporary/non-resident)
  google.protobuf.BoolValue sin_starts_with_9 = 6;
}

// UpsertCanTaxInfoResponse response
message UpsertCanTaxInfoResponse {
  // successful create an tax info or not
  bool is_success = 1;
  // if failed, the creation error type
  TaxInfoErrorType error_type = 2;

  // Reserved for previously deleted field
  reserved 3;
  reserved "sin9";
}

// GetCanTaxInfoRequest request
message GetCanTaxInfoRequest {
  // Dx applicant unique link
  string applicant_unique_link = 1;

  // Reserved for previously deleted field
  reserved 2;
  reserved "sin9";
}

// GetCanTaxInfoResponse response
message GetCanTaxInfoResponse {
  // Dx applicant unique link
  string applicant_unique_link = 1;
  // Dx CAN SIN token
  google.protobuf.StringValue sin_token = 2;
  // Dx CAN BN/BIN number
  google.protobuf.StringValue business_number = 3;
  // Dx CAN Business company name
  google.protobuf.StringValue company_name = 4;
  // timestamp for the creation time
  google.protobuf.Timestamp created_at = 5;
  // SIN number starts with 9 (deprecated, use sin_starts_with_9 instead)
  bool sin9 = 6 [deprecated = true];
  // Indicates if SIN number starts with 9 (temporary/non-resident)
  google.protobuf.BoolValue sin_starts_with_9 = 7;
}

// CleanTaxInfoRequest request
message CleanTaxInfoRequest {
  // Dx applicant unique link
  string applicant_unique_link = 1;
  // country shortname
  google.protobuf.StringValue country_shortname = 2;
  // Should send an email or not
  google.protobuf.BoolValue should_send_email = 3;
}

// CleanTaxInfoResponse response
message CleanTaxInfoResponse {
  // successful clean BN/BIN number
  bool is_success = 1;
  // error message if failed
  google.protobuf.StringValue error_message = 2;
}

// CreateNzTaxInfoRequest request
message CreateNzTaxInfoRequest {
  // Dx applicant unique link
  string applicant_unique_link = 1;
  // Dx NZ IRD token
  string ird_token = 2;
  // the IRD number is for sole proprietor
  bool is_sole_proprietor = 3;
  // if sole proprietor, company dob
  google.protobuf.StringValue company_dob = 4;
  // if sole proprietor, company name
  google.protobuf.StringValue company_name = 5;
  // if sole proprietor, company business number
  google.protobuf.StringValue company_business_number = 6;
  // if sole proprietor, company address
  common.CommonAddress company_address = 7;
}

// CreateNzTaxInfoResponse response
message CreateNzTaxInfoResponse {
  // successful create an tax info or not
  bool is_success = 1;
  // if failed, the creation error type
  TaxInfoErrorType error_type = 2;
}

// GetNzTaxInfoRequest request
message GetNzTaxInfoRequest {
  // Dx applicant unique link
  string applicant_unique_link = 1;
}

// GetNzTaxInfoResponse response
message GetNzTaxInfoResponse {
  // Dx applicant unique link
  string applicant_unique_link = 1;
  // Dx NZ IRD token
  string ird_token = 2;
  // the IRD number is for sole proprietor
  bool is_sole_proprietor = 3;
  // if sole proprietor, company dob
  google.protobuf.StringValue company_dob = 4;
  // if sole proprietor, company name
  google.protobuf.StringValue company_name = 5;
  // if sole proprietor, company business number
  google.protobuf.StringValue company_business_number = 6;
  // if sole proprietor, company address
  google.protobuf.StringValue company_address = 7;
  // timestamp for the creation time
  google.protobuf.Timestamp created_at = 8;
}

// HasValidTaxInfoRequest request
message HasValidTaxInfoRequest {
  // Dx applicant unique link
  string applicant_unique_link = 1;
  // country shortname
  string country_shortname = 2;
}

// HasValidTaxInfoResponse request
message HasValidTaxInfoResponse {
  // Dx has validate tax info or not
  bool has_valid_tax_info = 1;
  // country shortname
  string country_shortname = 2;
}

// upsert dl info request
message UpsertDlInfoRequest {
  // DL information
  DlInfo dl_info = 1;
}

// UpsertDlInfoResponse
message UpsertDlInfoResponse {
  // response value
  oneof value {
    // DL information
    DlInfo dl_info = 1;
    // error message if failed
    google.protobuf.StringValue error_message = 2;
  }
}

// Get Dl Info Request
message GetDlInfoRequest {
  // Dx/Pdx unique link
  string applicant_unique_link = 1;
}

// Get Dl Info Response
message GetDlInfoResponse {
  // DL information
  DlInfo dl_info = 1;
}

// driver license info
message DlInfo {
  // Dx applicant unique link
  string applicant_unique_link = 1;
  // driver license token
  google.protobuf.StringValue dl_token = 2;
  // driver license issued state
  google.protobuf.StringValue dl_state = 3;
  // timestamp for the dl issue date
  google.protobuf.Timestamp dl_issue_date = 4;
  // timestamp for the dl expiry date
  google.protobuf.Timestamp dl_expiry_date = 5;
  // driver license verification status
  VerificationStatusType dl_verification_status = 6;
  // timestamp for the registration expiry date
  google.protobuf.Timestamp registration_expiry_date = 7;
  // registration verification status
  VerificationStatusType registration_verification_status = 8;
  // persona inquiry_id
  google.protobuf.StringValue persona_inquiry_id = 9;
  // fetching latest data from Persona based on the inquiry id
  google.protobuf.BoolValue should_fetching_from_persona = 10;
  // driver license_type
  google.protobuf.StringValue dl_type = 11;
  // +x: x days left before expiration date
  // 0: expiration date is null
  // -x: x days passed after expiration date
  int64 days_until_dl_expiration_date = 12;
  // +x: x days left before expiration date
  // 0: expiration date is null
  // -x: x days passed after expiration date
  int64 days_until_vehicle_registration_docs_expiration_date = 13;
  // country shortname
  google.protobuf.StringValue country_shortname = 14;
}

// GetLatestInquiryStatus request
message GetLatestInquiryStatusRequest {
  // Dx applicant unique link
  string applicant_unique_link = 1;
  // Template id
  google.protobuf.StringValue template_id = 2;
}

// GetLatestInquiryStatus response
message GetLatestInquiryStatusResponse {
  // IDV Status
  VerificationStatusType status = 1;
}

// GetInquiryById request
message GetInquiryByIdRequest {
  // Persona inquiry id
  string inquiry_id = 1;
}

// GetInquiryById response
message GetInquiryByIdResponse {
  // Persona inquiry
  google.protobuf.StringValue inquiry = 1;
}

// CreateInquiry request
message CreateInquiryRequest {
  // reference id mapped to external vendor
  string reference_id = 1;
  // template id
  string template_id = 2;
  // optional. additional data associated with triggering event
  google.protobuf.Struct data_fields = 3;
}

// CreateInquiry response
message CreateInquiryResponse {
  // inquiry external url
  string inquiry_url = 1;
  // inquiry id
  string inquiry_id = 2;
  // session token
  google.protobuf.StringValue session_token = 3;
}

// GetPersonaAccount request
message GetPersonaAccountRequest {
  // Persona account id
  string account_id = 1;
}

// GetPersonaAccount response
message GetPersonaAccountResponse {
  // Persona account
  system_of_records_service.v1.PersonaAccount persona_account = 1;
}

// UpdateDasherSsnTokenRequest request
message UpdateDasherSsnTokenRequest {
  // Dx id
  google.protobuf.StringValue dasher_id = 1;
  // Dasher SSN token
  google.protobuf.StringValue ssn_token = 2;
}

// UpdateDasherSsnTokenResponse response
message UpdateDasherSsnTokenResponse {
  // successful update an SSN token or not
  bool is_success = 1;
  // if failed, the creation error type
  SSNTokenErrorType error_type = 2;
}

/**
 * GetDasherSsnTokenFromStripeRequest request
 * Input: Dx id, Stripe Account id
 * Output: Dasher SSN token from Stripe
 * Retrieved from Stripe via Dx id - Stripe Account id mapping
 */
message GetDasherSsnTokenFromStripeRequest {
  // Dx id
  google.protobuf.StringValue dasher_id = 1;
  // Stripe Account id
  google.protobuf.StringValue stripe_account_id = 2;
}

// GetDasherSsnTokenFromStripeResponse response
message GetDasherSsnTokenFromStripeResponse {
  // Dasher SSN token
  google.protobuf.StringValue ssn_token = 1;
}

// Request to create payment accounts
message CreatePaymentAccountsRequest {
  // dasher id
  string dasher_id = 1;
}

// Response to create payment accounts
message CreatePaymentAccountsResponse {
  // Response data
  oneof data {
    // Payment accounts
    PaymentAccounts payment_accounts = 1;
    // Error message
    google.protobuf.StringValue error_message = 2;
  }
}

// Payment account IDs
message PaymentAccounts {
  // Payout account id
  google.protobuf.StringValue payout_account_id = 1;
  // Stripe account id
  google.protobuf.StringValue stripe_account_id = 2;
}

// Request to update stripe account address
message UpdateStripeAccountAddressRequest {
  // Stripe account id
  string stripe_account_id = 1;
  // Country code
  string country_code = 3;
  // Address information
  oneof address {
    // Address id
    string address_id = 2;
  }
}

// Response to update stripe account address
message UpdateStripeAccountAddressResponse {}

// verification type
enum VerificationStatusType {
  // Default value if this is not set
  VERIFICATION_STATUS_TYPE_UNSPECIFIED = 0;
  // IN_REVIEW
  VERIFICATION_STATUS_TYPE_IN_REVIEW = 1;
  // APPROVED
  VERIFICATION_STATUS_TYPE_APPROVED = 2;
  // DECLINED
  VERIFICATION_STATUS_TYPE_DECLINED = 3;
  // CREATED
  VERIFICATION_STATUS_TYPE_CREATED = 4;
  // FAILED
  VERIFICATION_STATUS_TYPE_FAILED = 5;
  // EXPIRED
  VERIFICATION_STATUS_TYPE_EXPIRED = 6;
  // COMPLETED
  VERIFICATION_STATUS_TYPE_COMPLETED = 7;
}

// tax info error type
enum TaxInfoErrorType {
  // Default value if this is not set
  TAX_INFO_ERROR_TYPE_UNSPECIFIED = 0;
  // error if the format is not correct
  TAX_INFO_ERROR_TYPE_FORMATTING = 1;
  // error is there is a duplicate record in DB
  TAX_INFO_ERROR_TYPE_DUPLICATE = 2;
  // input provide wrong country information
  TAX_INFO_ERROR_TYPE_INCORRECT_COUNTRY = 3;
}

// SSN token error type
enum SSNTokenErrorType {
  // Default value if this is not set
  SSN_TOKEN_ERROR_TYPE_UNSPECIFIED = 0;
  // error if the Dasher is not found
  SSN_TOKEN_ERROR_TYPE_DX_NOT_FOUND = 1;
  // error is there is a duplicate record in DB
  SSN_TOKEN_ERROR_TYPE_DUPLICATE = 2;
  // error if call to the service failed
  SSN_TOKEN_ERROR_TYPE_SERVICE_CALL_FAILED = 3;
}

// Request to get Stripe account from the vendor
message GetStripeAccountRequest {
  // Stripe account id
  google.protobuf.StringValue stripe_account_id = 1;
  // Doordash entity identifier
  system_of_records_service.v1.Entity entity = 2;
  // Doordash payment account id
  google.protobuf.StringValue dd_payment_id = 3;
}

// Response to get Stripe account
message GetStripeAccountResponse {
  // Stripe account
  system_of_records_service.v1.StripeAccount stripe_account = 1;
}

// Request to create additional verification (i.e. TIN verification)
message CreateAdditionalVerificationRequest {
  // Doordash payment account id
  string dd_payment_id = 1;
}

// Response to create additional verification (i.e. TIN verification)
message CreateAdditionalVerificationResponse {
  // Response data
  oneof data {
    // Doordash payment account id
    google.protobuf.StringValue dd_payment_id = 1;
    // Error message
    google.protobuf.StringValue error_message = 2;
  }
}

// Request to update additional verification (i.e. TIN verification)
message UpdateAdditionalVerificationRequest {
  // Doordash payment account id
  string dd_payment_id = 1;

  // these are deleted fields, do not reuse
  reserved 2 to 5;
  reserved "first_name", "last_name", "applicant_starting_point_id", "ssn_token";
}

// Response to update additional verification (i.e. TIN verification)
message UpdateAdditionalVerificationResponse {
  // Response data
  oneof data {
    // Doordash payment account id
    google.protobuf.StringValue dd_payment_id = 1;
    // Error message
    google.protobuf.StringValue error_message = 2;
  }
}

// Document info
message DocumentInfo {
  // Dx applicant unique link
  string applicant_unique_link = 1;
  // Country code (e.g., CA, AU, NZ, US)
  string country_shortname = 2;
  // Document type (e.g., work_auth)
  string document_type = 3;
  // Document data
  google.protobuf.Struct document_data = 4;
  // Document source (e.g., persona, user_input, northpass)
  string document_source = 5;
  // Source identifier
  google.protobuf.StringValue source_id = 6;
  // Timestamp for creation time
  google.protobuf.Timestamp created_at = 7;
  // Timestamp for last update time
  google.protobuf.Timestamp updated_at = 8;
}

// Get document info request
message GetDocumentInfoRequest {
  // Dx applicant unique link
  string applicant_unique_link = 1;
}

// Get document info response
message GetDocumentInfoResponse {
  // Document information
  DocumentInfo document_info = 1;
}

// Upsert document info request
message UpsertDocumentInfoRequest {
  // Document information to upsert
  DocumentInfo document_info = 1;
  // Whether to fetch data from external source before upserting
  google.protobuf.BoolValue should_fetch_data_from_source = 2;
}

// Upsert document info response
message UpsertDocumentInfoResponse {
  // response value
  oneof value {
    // Document information
    DocumentInfo document_info = 1;
    // error message if failed
    google.protobuf.StringValue error_message = 2;
  }
}
