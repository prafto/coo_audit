syntax = "proto3";

package doordash.merchant_analytics.service.v1;

option java_multiple_files = true;
option java_generic_services = true;
option java_package = "com.doordash.rpc.merchant_analytics.v1";
option go_package = "merchant_analytics";

import "google/protobuf/wrappers.proto";
import "google/protobuf/timestamp.proto";
import "merchant_analytics_service/common.proto";
import "common/common.proto";

service OrderAnalyticsService {
    rpc GenerateOrderDetailsReport (GenerateOrderDetailsReportRequest) returns (GenerateOrderDetailsReportResponse);

    // Get is avoidable dx wait time dispute operation allowed for the order, that is based on the order volume and current count of disputed orders
    rpc GetIsAvoidableDasherWaitDisputeAllowed(GetIsAvoidableDasherWaitDisputeAllowedRequest) returns (GetIsAvoidableDasherWaitDisputeAllowedResponse);
    // Get avoidable wait time with dispute status for an order
    rpc GetAvoidableDasherWaitDisputeStatus (GetAvoidableDasherWaitDisputeStatusRequest) returns (GetAvoidableDasherWaitDisputeStatusResponse);
    // Handle the dispute of the avoidable dx wait time for the order
    rpc DisputeAvoidableDasherWait (DisputeAvoidableDasherWaitRequest) returns (DisputeAvoidableDasherWaitResponse);
}

// DisputeAvoidableDasherWait Request for disputing ADWT
message DisputeAvoidableDasherWaitRequest {
  // delivery uuid
  google.protobuf.StringValue delivery_uuid = 1;
  // Dispute reason
  AvoidableWaitTimeDisputeReason reason = 2;
  // Dispute notes
  google.protobuf.StringValue notes = 3;
}

// DisputeAvoidableDasherWait Response for disputing ADWT
message DisputeAvoidableDasherWaitResponse {
  // Whether or not the dispute was successful
  google.protobuf.BoolValue success = 1;
  // Dispute response message
  google.protobuf.StringValue message_code = 2;
}

// Request shape for resolving avoidable wait time dispute for an order
message GetAvoidableDasherWaitDisputeStatusRequest {
    // Delivery id
    google.protobuf.StringValue delivery_id = 1;
    // Store id
    google.protobuf.Int64Value store_id = 2;
}

// Avoidable wait time dispute status details for an order
message GetAvoidableDasherWaitDisputeStatusResponse {
    // Avoidable Dx wait time on the order in seconds
    google.protobuf.Int32Value avoidable_wait_time = 1;
    // Avoidable Dx wait time dispute status on the order
    AvoidableWaitTimeDisputeStatus dispute_status = 2;
    // Time of dispute action on the order
    google.protobuf.Timestamp disputed_at = 3;
    // Wait time dispute reason
    AvoidableWaitTimeDisputeReason reason = 4;
    // Custom dispute reason note
    google.protobuf.StringValue notes = 5;
}

// possible types of AvoidableWaitTimeDisputeReason
enum AvoidableWaitTimeDisputeReason {
   // default
   AVOIDABLE_WAIT_TIME_DISPUTE_REASON_UNSPECIFIED = 0;
   // Dasher arrived late
   AVOIDABLE_WAIT_TIME_DISPUTE_REASON_DASHER_ARRIVED_LATE = 1;
   // Dasher remained at store after pickup
   AVOIDABLE_WAIT_TIME_DISPUTE_REASON_DASHER_REMAINED_AT_STORE_AFTER_PICKUP = 2;
   // Dasher failed to follow instructions
   AVOIDABLE_WAIT_TIME_DISPUTE_REASON_DASHER_FAILED_TO_FOLLOW_INSTRUCTIONS = 3;
   // other 
   AVOIDABLE_WAIT_TIME_DISPUTE_REASON_OTHER = 4;
}

// Avoidable wait time dispute statuses
enum AvoidableWaitTimeDisputeStatus {
    // Wait time was not disputed
    AVOIDABLE_WAIT_TIME_DISPUTE_STATUS_UNSPECIFIED = 0;
    // Wait time on the order was disputed, but not yet approved
    AVOIDABLE_WAIT_TIME_DISPUTE_STATUS_PENDING = 1;
    // Wait time dispute fir the order has been approved
    AVOIDABLE_WAIT_TIME_DISPUTE_STATUS_DISPUTE_APPROVED = 2;
}

message GenerateOrderDetailsReportRequest {
    string user_id = 1;
    string business_id = 2;
    repeated string store_ids = 3;
    DateRange date_range = 4;
}

message GenerateOrderDetailsReportResponse {
    string filename = 1;
}

// DisputeAvoidableDasherWaitEvent for Iguazu
message DisputeAvoidableDasherWaitEvent {
  // delivery uuid
  google.protobuf.StringValue delivery_uuid = 1;
  // Dispute reason
  google.protobuf.StringValue reason = 2;
  // Dispute notes
  google.protobuf.StringValue notes = 3;
  // Store id
  google.protobuf.Int64Value store_id = 4;
  // When the dispute was made
  google.protobuf.Timestamp disputed_at = 5;
  // When the delivery was made (delivery dasherAtStoreTime)
  google.protobuf.Timestamp delivery_at = 6;
  // User who made the dispute
  google.protobuf.StringValue created_by = 7;
  // delivery id
  google.protobuf.Int64Value delivery_id = 8;
}


// Request shape for the GetIsAvoidableDxWaitDisputeAllowed request
message GetIsAvoidableDasherWaitDisputeAllowedRequest {
  // Store id
  google.protobuf.Int64Value store_id = 1;
  // Delivery id to check if dispute operation allowed
  google.protobuf.StringValue delivery_id = 2;
}

// Response shape for the GetIsAvoidableDxWaitDisputeAllowed request
message GetIsAvoidableDasherWaitDisputeAllowedResponse {
  // Boolean flag that identifies whether merchant has reached avoidable dx wait time dispute limit.
  google.protobuf.BoolValue is_dispute_allowed = 1;
}
