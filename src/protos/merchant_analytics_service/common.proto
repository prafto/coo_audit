syntax = "proto3";

package doordash.merchant_analytics.service.v1;

import "common/common.proto";
import "common/money.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option go_package = "merchant_analytics";
option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.merchant_analytics.v1";

enum Channel {
  CHANNEL_UNSPECIFIED = 0;
  MARKETPLACE = 1;
  DRIVE = 2;
  STOREFRONT = 3;
  DEMAND_GEN = 4;
  VOICE = 5;
  // Doordash point of sale channel, named as such to match other services' usages and what's persisted in DB
  DD_POS_CHANNEL = 6;
  // Self-serve kiosk channel
  SELF_KIOSK_CHANNEL = 7;
}

enum Experience {
  EXPERIENCE_UNSPECIFIED = 0;
  DOORDASH = 1;
  CAVIAR = 2;
  // Doordash point of sale experience, named as such to match other services' usages and what's persisted in DB
  DD_POS = 3;
  // Self-serve kiosk
  SELF_KIOSK = 4;
}

enum Audience {
  AUDIENCE_UNSPECIFIED = 0;
  NON_SUBSCRIBER = 1;
  SUBSCRIBER = 2;
}

// This one is now being used
enum FulfillmentType {
  FULFILLMENT_TYPE_UNSPECIFIED = 0;
  DELIVERY = 1;
  PICKUP = 2;
  MERCHANT_FLEET = 3;
}

enum TimeFilterGranularity {
  TIME_GRANULARITY_UNSPECIFIED = 0;
  HOURLY = 1;
  DAILY = 2;
  WEEKLY = 3;
  MONTHLY = 4;
  YEARLY = 5;
  QUARTERLY = 6;
}

enum StoreFilterGranularity {
  STORE_GRANULARITY_UNSPECIFIED = 0;
  STORE = 1;
  BUSINESS = 2;
  BUSINESS_GROUP = 3;
  ORGANIZATION = 4;
}

enum AggregateByField {
  AGGREGATE_BY_UNSPECIFIED = 0;
  ACTIVE_DATE = 1;
  STORE_ID = 2; // view by store
  BUSINESS_ID = 3; // view by business
  EXPERIENCE = 4;
  CHANNEL = 5;
  FULFILLMENT_TYPE = 6;
  AUDIENCE = 7;
  ORDER_ID = 8; // view by order
  TIME = 9; // view by time
  CONSUMER_ID = 10; // view by customer
}

enum Field {
  FIELD_UNSPECIFIED = 0;
  FIELD_ACTIVE_DATE = 1;
  FIELD_STORE_ID = 2;
  FIELD_BUSINESS_ID = 3;
  FIELD_EXPERIENCE = 4;
  FIELD_CHANNEL = 5;
  FIELD_FULFILLMENT_TYPE = 6;
  FIELD_AUDIENCE = 7;
  FIELD_STORE_NAME = 8;
  FIELD_AVERAGE_ASAP_TIME = 9;
  FIELD_PERCENT_CANCELLED = 10;
  FIELD_PERCENT_EQUIPPED_WITH_PIZZA_BAG = 11;
  FIELD_AVERAGE_DASHER_WAIT_TIME = 12;
}

enum Direction {
  DIRECTION_UNSPECIFIED = 0;
  ASCENDING = 1;
  DESCENDING = 2;
}

message DateRange {
  google.protobuf.Timestamp start_time = 1;
  google.protobuf.Timestamp end_time = 2;
}

// comparison of date ranges for current and previous period
message DateRangeComparison {
  // current start and end date
  DateRange current_period = 1;
  // previous period start and end date
  DateRange previous_period = 2;
}

message SegmentFilter {
  reserved 9;

  // TODO: delete these once BFF upgrades
  Experience experience = 1;
  Channel channel = 2;
  Audience audience = 3;
  FulfillmentType fulfillment_type = 4;

  repeated Experience experiences = 5;
  repeated Channel channels = 6;
  repeated Audience audiences = 7;
  repeated FulfillmentType fulfillment_types = 8;
}

message Filter {
  FieldName name = 1;
  repeated google.protobuf.StringValue values = 3;
}

message SortByField {
  FieldName name = 1;
  Direction direction = 2;
}

message FieldName {
  // use one of the following enums corresponding to your entity type
  oneof name {
    CxReviewField cx_review_field = 1;
    DowntimeField downtime_field = 2;
    WaitTimeField wait_time_field = 3;
    OrderAccuracyField order_accuracy_field = 4;
    ItemsMissingAndIncorrectField items_missing_and_incorrect_field = 5;
  }
}

message CxReviewField {
  CxReviewFieldName name = 1;
  google.protobuf.StringValue friendly_name = 2;
}

enum CxReviewFieldName {
  CX_REVIEW_FIELD_NAME_UNSPECIFIED = 0;
  RATING = 1;
  CATEGORY = 2;
  VISIBILITY = 3;
  CONTENT = 4;
}

message DowntimeField {
  DowntimeFieldName name = 1;
  // this is a translation friendly name for the string so you don't have to store translations on the FE
  google.protobuf.StringValue friendly_name = 2;
}

enum DowntimeFieldName {
  DOWNTIME_FIELD_NAME_UNSPECIFIED = 0;
  TOTAL_DOWNTIME = 1;
  PERCENT_DOWNTIME = 2;
}

message WaitTimeField {
  WaitTimeFieldName name = 1;
  // this is a translation friendly name for the string so you don't have to store translations on the FE
  google.protobuf.StringValue friendly_name = 2;
}

enum WaitTimeFieldName {
  WAIT_TIME_FIELD_NAME_UNSPECIFIED = 0;
  AVERAGE_AVOIDABLE_WAIT = 1;
  AVERAGE_TOTAL_DASHER_WAIT = 2;
  AVERAGE_DELIVERY_TIME = 3;
}

message OrderAccuracyField {
  OrderAccuracyFieldName name = 1;
  // this is a translation friendly name for the string so you don't have to store translations on the FE
  google.protobuf.StringValue friendly_name = 2;
}

enum OrderAccuracyFieldName {
  ORDER_ACCURACY_FIELD_NAME_UNSPECIFIED = 0;
  NUMBER_MISSING = 1;
  NUMBER_INCORRECT = 2;
  NUMBER_ORDERS = 3;
  ERROR_CHARGE = 4;
  MISSING_OR_INCORRECT_PERCENT = 5;
  NUMBER_MISSING_AND_INCORRECT = 6;
}

message ItemsMissingAndIncorrectField {
  ItemsMissingAndIncorrectFieldName name = 1;
  // this is a translation friendly name for the string so you don't have to store translations on the FE
  google.protobuf.StringValue friendly_name = 2;
}

enum ItemsMissingAndIncorrectFieldName {
  ITEMS_MISSING_AND_INCORRECT_FIELD_NAME_UNSPECIFIED = 0;
  NUMBER_ITEMS_MISSING = 1;
  NUMBER_ITEMS_INCORRECT = 2;
  NUMBER_ITEMS_ORDERED = 3;
  ITEMS_MISSING_OR_INCORRECT_PERCENTAGE = 4;
  NUMBER_ITEMS_MISSING_AND_INCORRECT = 5;
}

message User {
  google.protobuf.StringValue id = 1;
  google.protobuf.StringValue first_name = 2;
  google.protobuf.StringValue last_name = 3;
  google.protobuf.StringValue email = 4;
}

message Consumer {
  google.protobuf.StringValue id = 1;
  User user = 2;
  Experience experience = 3;
}

message Page {
  google.protobuf.Int32Value offset = 1;
  google.protobuf.Int32Value limit = 2;
}

message QueryParameters {
  repeated int64 store_ids = 1;
  repeated int64 business_ids = 2;
  DateRange date_range = 3;
  repeated int64 business_group_ids = 4;
  StoreFilterGranularity store_filter_granularity = 5;
}

enum ReportStatus {
  REPORT_STATUS_UNSPECIFIED = 0;
  IN_PROGRESS = 1;
  SUCCESS = 2;
  FAILURE = 3;
  REPORT_STATUS_EXPIRED = 4;
}

enum ReportType {
  REPORT_TYPE_UNSPECIFIED = 0;
  SUMMARY = 1;
  TRANSACTION = 2;
  SUMMARIZED_TRANSACTIONS = 3;
  TAX_INVOICE = 4;
  OPERATIONS_QUALITY = 5; // generate 4 csvs
  SALES = 6; // generate 3 csvs
  ERROR_CHARGES_AND_ADJUSTMENTS = 7;
  SUPPORT = 8;
  CUSTOMER = 9;
  SPONSORED_LISTING = 10;
  PROMOTION = 11;
  COMMISSION_AND_FEES = 12;
  SIMPLIFIED_TRANSACTION = 13;
  CANCELED_NOT_PAID_TRANSACTION = 14;
  TAX_IMPOSITION_AND_JURISDICTION_BY_STORE = 15;
  ORDER_TAX_BREAKDOWN = 16;
  ITEM_TAX_BREAKDOWN = 17;
}

message RequestorContext {
  google.protobuf.StringValue email = 1 [deprecated = true];
  User requestor = 2;
}

enum ReportColumn {
  REPORT_COLUMN_UNSPECIFIED = 0;
  FIRST_NAME = 1;
  LAST_NAME = 2;
  EMAIL_ADDRESS = 3;
  MARKETING_OPT_IN_STATUS = 4;
  DELIVERY_ADDRESS = 5;
  ZIP_CODE = 6;
  PHONE_NUMBER = 7;
  LIFETIME_ORDERS = 8;
  LIFETIME_SPEND = 9;
  AVG_ORDER_VALUE = 10;
  FIRST_ORDER_DATE = 11;
  LAST_ORDER_DATE = 12;
  LAST_ORDER_TYPE = 13;
  LAST_STORE_ORDERED_FROM = 14; // store cx last ordered from, for view by cx
  ORDER_TYPE = 15; // pickup or delivery
  ORDER_STATUS = 16; // order cancelled or completed
  STORE_NAME = 17;
  ORDER_DATE = 18;
  ORDER_TIME = 19;
  CUSTOMER_TYPE = 20; // new or repeat cx
  ORDER_ID_COLUMN = 21;
  STORE_ID_COLUMN = 22;
  CURRENCY = 23;
  BUSINESS_ID_COLUMN = 24;
  IS_LOYALTY = 25;
  IS_IN_STORE = 26;
  IS_ONLINE_ORDERING = 27;
  IS_MARKETPLACE = 28;
}

// get common data request
message GetDataRequest {
  reserved 17; // Deprecated "email_recipients"
  reserved "email_recipients";
  reserved 18; // Deprecated "report_recipient_users"
  reserved "report_recipient_users";
  reserved 19; // Deprecated "report_recipient_user_ids"
  reserved "report_recipient_user_ids";

  // DEPRECATED - report type - DEPRECATED
  ReportType report_type = 1;
  // query params
  QueryParameters query_parameters = 2;
  // pagination request detail
  Page page = 3;
  // segment filters
  repeated SegmentFilter segment_filters = 4;
  // sort by (store_id desc)
  repeated SortByField sort_by = 5;
  // (store_id, business_id)
  repeated AggregateByField aggregate_by = 6;
  // daily, weekly, monthly
  TimeFilterGranularity time_granularity = 7;
  // store level, business level, business group level
  StoreFilterGranularity store_filter_granularity = 8;
  // requestor context
  RequestorContext requestor_context = 9;
  // include product line performance
  bool include_product_line_performance = 10;
  // include customer segmentation
  bool include_customer_segmentation = 11;
  // Report Type (but you can specify multiple reports)
  repeated ReportType report_types = 12;
  // schedule frequency
  ScheduleFrequency schedule_frequency = 13;
  // columns selected by mx to return
  repeated ReportColumn selected_report_columns = 14;
  // include disputed objects
  google.protobuf.BoolValue include_disputed = 15;
  // additional options for getting financial reports
  FinancialReportsOptions financial_reports_options = 16;
  // List of recipients the report should be sent to.
  repeated ReportRecipient report_recipients = 20;
}

message ReportRecipient {
  google.protobuf.StringValue user_id = 1;
  google.protobuf.StringValue user_email = 2;
}

message FinancialReportsOptions {
  // whether or not to use payout date
  google.protobuf.BoolValue use_payout_date = 1;
}

// Countries enum. Adding it back as temporary solution for the portal-bff breaking bug
enum Country {
  // not country
  COUNTRY_UNSPECIFIED = 0;
  // US
  USA = 1;
  // Canada
  CAN = 2;
  // Australia
  AUS = 3;
  // Japan
  JPN = 4;
  // Germany
  DEU = 5;
}

// Cancellation Category Description from fact_mx_operation_order_level table
enum CancellationCategoryDesc {
  // null
  CANCELLATION_CATEGORY_DESC_REASON_UNSPECIFIED = 0;
  // Customer entered the wrong address
  CANCELLATION_CATEGORY_DESC_CUSTOMER_ENTERED_THE_WRONG_ADDRESS = 1;
  // Customer needed to modify order cart contents
  CANCELLATION_CATEGORY_DESC_CUSTOMER_NEEDED_TO_MODIFY_ORDER_CART_CONTENTS = 3;
  // Customer requested - Unspecified reason
  CANCELLATION_CATEGORY_DESC_CUSTOMER_REQUESTED_UNSPECIFIED_REASON = 4;
  // Extreme dasher wait time
  CANCELLATION_CATEGORY_DESC_EXTREME_DASHER_WAIT_TIME = 5;
  // Item out of stock
  CANCELLATION_CATEGORY_DESC_ITEM_OUT_OF_STOCK = 6;
  // Long order fulfillment time
  CANCELLATION_CATEGORY_DESC_LONG_ORDER_FULFILLMENT_TIME = 7;
  // Menu data mismatch
  CANCELLATION_CATEGORY_DESC_MENU_DATA_MISMATCH = 8;
  // Other
  CANCELLATION_CATEGORY_DESC_OTHER = 9;
  // Outage
  CANCELLATION_CATEGORY_DESC_OUTAGE = 10;
  // Slow order confirmation
  CANCELLATION_CATEGORY_DESC_SLOW_ORDER_CONFIRMATION = 11;
  // Staff requested - Busy or cannot fulfill
  CANCELLATION_CATEGORY_DESC_STAFF_REQUESTED_BUSY_OR_CANNOT_FULFILL = 12;
  // Staff requested - Unspecified reason
  CANCELLATION_CATEGORY_DESC_STAFF_REQUESTED_UNSPECIFIED_REASON = 13;
  // Store closed
  CANCELLATION_CATEGORY_DESC_STORE_CLOSED = 14;
  // Store open but unavailable for POS orders
  CANCELLATION_CATEGORY_DESC_STORE_OPEN_BUT_UNAVAILABLE_FOR_POS_ORDERS = 15;
  // Technical error
  CANCELLATION_CATEGORY_DESC_TECHNICAL_ERROR = 16;
  // Technical issue
  CANCELLATION_CATEGORY_DESC_TECHNICAL_ISSUE = 17;
  // Timeout
  CANCELLATION_CATEGORY_DESC_TIMEOUT = 18;
  // Unable to place order by phone
  CANCELLATION_CATEGORY_DESC_UNABLE_TO_PLACE_ORDER_BY_PHONE = 19;
  // Wrong order handed to dasher
  CANCELLATION_CATEGORY_DESC_WRONG_ORDER_HANDED_TO_DASHER = 20;
  // Staff requested, order was not received
  CANCELLATION_CATEGORY_DESC_STAFF_REQUESTED_MX_DID_NOT_RECEIVE_ORDER = 21;
  // Store operations issue
  CANCELLATION_CATEGORY_DESC_STORE_OPERATIONS_ISSUE = 22;
}

message CxStatusTags {
  google.protobuf.Int32Value consumer_id = 1;
  google.protobuf.Int32Value store_id = 2;
  google.protobuf.Int32Value business_id = 3;
  google.protobuf.StringValue aggregate_type = 4;
  CxFrequencyTag frequency_tag = 5;
  google.protobuf.Int32Value orders_past_90_days = 6;
}

// possible types of FrequencyTag
enum CxFrequencyTag {
  // default
  CX_FREQUENCY_TAG_TYPE_UNSPECIFIED = 0;
  // new
  CX_FREQUENCY_TAG_TYPE_NEW = 1;
  // Occasional
  CX_FREQUENCY_TAG_TYPE_OCCASIONAL = 2;
  // Frequent
  CX_FREQUENCY_TAG_TYPE_FREQUENT = 3;
}

// schedule reports frequency
enum ScheduleFrequency {
  SCHEDULE_FREQUENCY_UNSPECIFIED = 0;
  SCHEDULE_FREQUENCY_WEEKLY = 1;
  SCHEDULE_FREQUENCY_MONTHLY = 2;
  SCHEDULE_FREQUENCY_DAILY = 3;
}

// Common fields required for rendering Transaction and Payout Details >
// Transactions rendering Below are common fields needed to render basic details
// about the transaction and payout detail
message StoreAndBusinessDetails {
  google.protobuf.Int64Value store_id = 1;
  google.protobuf.StringValue store_name = 2;
  google.protobuf.Int64Value business_id = 3;
  google.protobuf.StringValue business_name = 4;
}

// Field to represent Percentage Fields used in comparing current vs. previous
// data Change Summary/Key Points: (1) BE will calculate the percentage changed
// between data and send it to FE (2) BE can optionally send previous data (only
// required if graphing previous vs. current)
message PercentageField {
  google.protobuf.StringValue display_string = 1; // "3.14%" (no sign; since UI may render icon - should be localized (%
  // in the right place))
  google.protobuf.BoolValue sign = 2; // true (positive change) or false (negative change)
  google.protobuf.DoubleValue value = 3; // 3.14 (no negative value); if 0.0, UI should render no change
}

// Represents the a Comparison Data
// Change Summary/Key Points:
// (1) UI needs to render "+3.14% vs. last payout" or "-3.14% vs. last 30 days";
// (2) Percentage has its own styling when compared to "vs. last payout"
// (3) Added "date_range_comparison"; an existing field used to track the
// current and previous dates (4) Added absolute and relative change fields
// (context)
message PercentageComparison {
  PercentageField absolute_change_from_previous = 1; // "3.14%"
  PercentageField relative_change_from_previous = 2; // "300%"
  DateRangeComparison date_range_comparison = 3; // current_period: {start:2024-03-01T00:00:00Z,
  // end:2024-03-07T00:00:00Z}, previous_period:
  // {start:2024-02-22T00:00:00Z, end:2024-02-29T00:00:00Z}
  google.protobuf.StringValue compared_to_display_string = 4; // "vs. previous payout"
}

// Change Summary:
// (1) Newly created "Comparable" for fields
// (2) Helps with flexible fields coming from DB that can be any type (ex.
// “Total Orders” amount is INT32, but “Total Sales” amount is Monetary
message ComparableInt32Field {
  google.protobuf.Int32Value current_value = 1;
  google.protobuf.Int32Value previous_value = 2;
  PercentageComparison percentage_comparison = 3;
}

message ComparableInt64Field {
  google.protobuf.Int64Value current_value = 1;
  google.protobuf.Int64Value previous_value = 2;
  PercentageComparison percentage_comparison = 3;
}

message ComparableDoubleField {
  google.protobuf.DoubleValue current_value = 1;
  google.protobuf.DoubleValue previous_value = 2;
  PercentageComparison percentage_comparison = 3;
}

message ComparableMonetaryField {
  money.MonetaryFields current_value = 1;
  money.MonetaryFields previous_value = 2;
  PercentageComparison percentage_comparison = 3;
}
