syntax = "proto3";

package doordash.merchant_analytics.service.v1;

option java_multiple_files = true;
option java_generic_services = true;
option java_package = "com.doordash.rpc.merchant_analytics.v1";
option go_package = "merchant_analytics";

import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "merchant_analytics_service/common.proto";
import "common/date.proto";

// CancellationReasonsService
service CancellationReasonsService {
    // get cancellation reason api
    rpc GetCancellationReason(GetCancellationReasonRequest) returns (GetCancellationReasonResponse);
}

// CancellationReason
enum CancellationReason {
    // default reason when not specified
    REASON_UNSPECIFIED = 0;
    // Staff Requested - Could Not Fulfill
    STAFF_REQUESTED_COULD_NOT_FULFILL = 1;
    // Order Not Prepared
    ORDER_NOT_PREPARED = 2;
    // Store Closed
    STORE_CLOSED = 3;
    // Wrong Order Handed to Dasher
    WRONG_ORDER_HANDED_TO_DASHER = 4;
    // Unable to Place Order
    UNABLE_TO_PLACE_ORDER = 5;
    // Item Out of Stock
    ITEM_OUT_OF_STOCK = 6;
    // Staff Requested to Cancel
    STAFF_REQUESTED_TO_CANCEL = 7;
    // Extreme Dasher Wait Time
    EXTREME_DASHER_WAIT_TIME = 8;
    // Staff Requested - Too Busy
    STAFF_REQUESTED_TOO_BUSY = 9;
    // Merchant Unresponsive
    MERCHANT_UNRESPONSIVE = 10;
    // Duplicate Order
    DUPLICATE_ORDER = 11;
    // Entire Order Not Placed by Staff
    ENTIRE_ORDER_NOT_PLACED_BY_STAFF = 12;
    // Merchant Did not confirm
    MERCHANT_DID_NOT_CONFIRM = 13;
    // Long Fulfillment Time
    LONG_FULFILLMENT_TIME = 14;
    // Slow order confirmation
    SLOW_ORDER_CONFIRMATION = 15;
    // Staff requested to cancel, busy or cannot fulfil
    STAFF_REQUESTED_BUSY_OR_CANNOT_FULFILL = 16;
    // Staff requested to cancel, without specific reason
    STAFF_REQUESTED_UNSPECIFIED_REASON = 17;
    // Staff requested, order was not received
    STAFF_REQUESTED_DID_NOT_RECEIVE_ORDER = 18;
    // Unable to place order by phone, for the small number of merchants who are still on phone protocol
    UNABLE_TO_PLACE_ORDER_BY_PHONE = 50;
    // Execute order refund for cancelled orders that are pending refund as part of the 2-phase seamless cancellation experience.
    EXECUTE_REFUND_FOR_CANCELLED_ORDER_WITH_PENDING_REFUND = 19;
}

// GetCancellationReasonRequest
message GetCancellationReasonRequest {
    // delivery_uuid
    google.protobuf.StringValue order_id = 1;
    // store_id associated with order_id
    google.protobuf.Int64Value store_id = 2;
}

// GetCancellationReasonResponse
message GetCancellationReasonResponse {
    // reason
    CancellationReason reason = 1;
}
