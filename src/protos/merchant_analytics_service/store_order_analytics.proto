syntax = "proto3";

package doordash.merchant_analytics.service.v1;

option java_multiple_files = true;
option java_generic_services = true;
option java_package = "com.doordash.rpc.merchant_analytics.v1";
option go_package = "merchant_analytics";

import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "merchant_analytics_service/common.proto";
import "common/common.proto";
import "common/money.proto";

service StoreOrderAnalyticsService {
    rpc GetStoreOrderMetrics (GetStoreOrderMetricsRequest) returns (GetStoreOrderMetricsResponse);
    rpc GetStoreOrderChartData (GetStoreOrderChartDataRequest) returns (GetStoreOrderChartDataResponse);
    rpc IsMxTipEligibleStore (IsMxTipEligibleStoreRequest) returns (IsMxTipEligibleStoreResponse);
    rpc GetMxTipEligibleStores (GetMxTipEligibleStoresRequest) returns (GetMxTipEligibleStoresResponse);

    rpc GetSalesMetricsByTime(GetDataRequest) returns (GetSalesMetricsByTimeResponse);
    // TODO deprecate GetCxCountMetrics in favor of GetCxInsightsMetrics in cx_insights_analytics.proto
    rpc GetCxCountMetrics (GetDataRequest) returns (GetCxCountsMetricsResponse);
    // Average order rate for a store over the requested time
    rpc GetActiveOrderRateByStore(GetActiveOrderRateByStoreRequest) returns (GetActiveOrderRateByStoreResponse);
}

message IsMxTipEligibleStoreRequest {
    int64 store_id = 1;
    int32 order_count_bar = 2;
}

message IsMxTipEligibleStoreResponse {
    bool is_mx_tip_eligible = 1;
}

message GetMxTipEligibleStoresRequest {
    int64 business_id = 1;
    int32 order_count_bar = 2;
}

message GetMxTipEligibleStoresResponse {
    repeated int64 store_ids = 1;
}

message GetStoreOrderMetricsRequest {
    repeated int64 store_ids = 1;
    google.protobuf.Timestamp active_start_date = 2;
    google.protobuf.Timestamp active_end_date = 3;
    bool from_partner = 4;
    repeated int64 business_ids = 5;
    repeated Channel channels = 6;
    TimeFilterGranularity time_filter_granularity = 7;
    StoreFilterGranularity store_filter_granularity = 8;
    repeated SegmentFilter segment_filters = 9;
    DateRange date_range = 10;
    repeated AggregateByField aggregate_by = 11;
    google.protobuf.Int32Value offset = 12;
    google.protobuf.Int32Value limit = 13;
    repeated OrderByField order_by = 14; // Currently supports sorting on one field
    bool include_product_line_performance = 15;
}

message OrderByField {
    Field field = 1;
    Direction direction = 2;
}

message SalesMetrics {
    google.protobuf.DoubleValue net_sales = 1;
    google.protobuf.DoubleValue total_orders = 2;
    google.protobuf.DoubleValue avg_order = 3;
    google.protobuf.Int32Value dashpass_order_percentage = 4;
}

message CustomerMetrics {
    google.protobuf.DoubleValue unique_customers = 1;
    google.protobuf.DoubleValue new_customers = 2;
    google.protobuf.DoubleValue repeat_customers = 3;
}

message QualityMetrics {
    google.protobuf.DoubleValue num_ratings = 1;
    google.protobuf.DoubleValue avg_ratings = 2;
    google.protobuf.DoubleValue num_five_star_ratings = 3;
}

message ErrorMetrics {
    google.protobuf.DoubleValue total_mi_orders = 1;
    google.protobuf.DoubleValue percentage_of_errors = 2;
    google.protobuf.DoubleValue total_error_charge = 3;
}

message CancellationMetrics {
    google.protobuf.DoubleValue total_cancelled = 1;
    google.protobuf.DoubleValue percentage_cancelled = 2;
}

message OperationsQualityMetrics {
    google.protobuf.DoubleValue avg_avoidable_wait_time = 1;
    google.protobuf.DoubleValue avg_avoidable_cancellations = 2;
    google.protobuf.DoubleValue total_downtime = 3;
    google.protobuf.DoubleValue total_uptime = 4;
    google.protobuf.Int32Value num_equipped_with_pizza_bag = 5;
    google.protobuf.DoubleValue avg_equipped_with_pizza_bag = 6;
    google.protobuf.DoubleValue avg_adjusted_dasher_wait_minutes = 7;
    google.protobuf.DoubleValue avg_asap_minutes = 8;
}

message StoreOrderMetrics {
    int64 store_id = 1;
    SalesMetrics sales_metrics = 2;
    CustomerMetrics customer_metrics = 3;
    QualityMetrics quality_metrics = 4;
    ErrorMetrics error_metrics = 5;
    CancellationMetrics cancellation_metrics = 6;
    Experience experience = 7;
    Channel channel = 8;
    Audience audience = 9;
    OperationsQualityMetrics operations_quality_metrics = 10;
    google.protobuf.StringValue store_name = 11;
}

message GetStoreOrderMetricsResponse {
    repeated StoreOrderMetrics store_order_metrics = 1;
    google.protobuf.DoubleValue OBSOLETE_total_net_sales = 2;
    google.protobuf.DoubleValue OBSOLETE_total_order_volume = 3;
    google.protobuf.DoubleValue OBSOLETE_avg_ticket_size = 4;
    GetStoreOrderMetricsResponse previous_period = 5;
    SalesMetrics overall_sales_metrics = 6;
    CustomerMetrics overall_customer_metrics = 7;
    QualityMetrics overall_quality_metrics = 8;
    ErrorMetrics overall_error_metrics = 9;
    CancellationMetrics overall_cancellation_metrics = 10;
    OperationsQualityMetrics overall_operations_quality_metrics = 11;
}

message GetStoreOrderChartDataRequest {
    repeated int64 store_ids = 1;
    google.protobuf.Timestamp active_start_date = 2;
    google.protobuf.Timestamp active_end_date = 3;
    bool from_partner = 4;
    repeated int64 business_ids = 5;
    repeated Channel channels = 6;
    TimeFilterGranularity time_filter_granularity = 7;
    StoreFilterGranularity store_filter_granularity = 8;
    repeated SegmentFilter segment_filters = 9;
    DateRange date_range = 10;
    repeated AggregateByField aggregate_by = 11;
}

message DataItem {
    google.protobuf.Timestamp active_date = 1;
    google.protobuf.DoubleValue net_sales = 2;
    google.protobuf.DoubleValue total_orders = 3;
    google.protobuf.DoubleValue avg_ticket_size = 4;
}

message GetStoreOrderChartDataResponse {
    repeated DataItem data = 1;
    google.protobuf.DoubleValue sum_net_sales = 2;
    google.protobuf.DoubleValue sum_total_orders = 3;
    google.protobuf.DoubleValue overall_avg_ticket_size = 4;
    GetStoreOrderChartDataResponse previous_period = 5;
}

message SalesMetricsV2 {
    google.protobuf.DoubleValue net_sales = 1;
    google.protobuf.DoubleValue total_orders = 2;
    google.protobuf.DoubleValue avg_ticket_size = 3;
}

message SalesProductLineSegmentation {
    SalesMetricsV2 marketplace_classic = 1;
    SalesMetricsV2 dashpass = 2;
    SalesMetricsV2 pickup = 3;
    SalesMetricsV2 storefront = 4;
    SalesMetricsV2 storefront_organic = 5;
    SalesMetricsV2 storefront_gfo = 6;
}

message SalesMetricsByTime {
    google.protobuf.Timestamp active_date = 1;
    SalesMetricsV2 sales_metrics = 2;
    SalesProductLineSegmentation product_line_segmentation = 3;
}

message GetSalesMetricsByTimeResponse {
    repeated SalesMetricsByTime current_period = 1;
    repeated SalesMetricsByTime previous_period  = 2;
}


message CxCountsStats {
    google.protobuf.Int32Value new_customers = 1;
    google.protobuf.Int32Value returning_customers = 2;
    google.protobuf.Int32Value occasional_customers = 3;
    google.protobuf.Int32Value frequent_customers = 4;
}

message CxCountsSegmentation {
    // breakdown by dashpass cx count
    CxCountsStats dashpass = 1;
    // breakdown by non-dashpass cx count
    CxCountsStats non_dashpass = 2;
    // breakdown by no of orders in each segment
    CxCountsStats order_count = 3;
    // breakdown by average order value in each segment
    CxCountsStats aov = 4;
}

message CxCountsMetrics {
    CxCountsStats overall_metrics = 1;
    CxCountsSegmentation customer_segmentation = 2;
}

message GetCxCountsMetricsResponse {
    CxCountsMetrics current_period = 1;
    CxCountsMetrics previous_period = 2;
}
// Request payload for store's average order rate
message GetActiveOrderRateByStoreRequest {
    int64 store_id = 1;
    TimeFilterGranularity time_granularity = 2;
}
// Store's average order rate by parts of the day
message GetActiveOrderRateByStoreResponse {
    repeated OrderRateByDayPart order_rates_by_day_part = 1;
}
// Avg order rate number at specific day part over last 30 days
message OrderRateByDayPart {
    // Possible values "early_morning", "breakfast", "lunch", "snack", "dinner", "latenight"
    string day_part = 1;
    google.protobuf.Int32Value order_rate = 2;
}
