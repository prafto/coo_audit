syntax = "proto3";

package crystalball.v1;

import "crystalball/common.proto";
import "google/protobuf/timestamp.proto";
import "sibyl_prediction_service/prediction.proto";

option java_multiple_files = true;
option java_package = "com.doordash.crystalball.v1";

// All Prediction types supported via CrystalBall
enum PredictionType {
  // regression predictor
  PREDICTION_TYPE_REGRESSION_VALUE_UNSPECIFIED = 0;
  // binary_classification
  PREDICTION_TYPE_BINARY_CLASSIFICATION_PROBABILITY = 1;
  // multi label value
  PREDICTION_TYPE_MULTI_LABEL_VALUE = 2;
  // string sequence
  PREDICTION_TYPE_STRING_SEQUENCE = 3;
  // embedding
  PREDICTION_TYPE_EMBEDDING_OUTPUT = 4;
}

// Result Code from SPS Prediction
enum ResultCode {
  // Success
  RESULT_CODE_SUCCESS_UNSPECIFIED = 0;
  // Timeout
  RESULT_CODE_TIMEOUT = 1;
  // Input Parse Error
  RESULT_CODE_PARSE_ERR = 2;
  // Model Not Found
  RESULT_CODE_MODEL_NOT_FOUND = 3;
  // Internal Error
  RESULT_CODE_INTERNAL = 4;
  // Invalid Feature Set
  RESULT_CODE_INVALID_FEATURE_SET = 5;
}

// Configuration for Numerical Features
message NumericalFeatureConfig {
  // name
  string feature_name = 1;
  // seq_length of the feature
  int32 seq_length = 2;
  // default value of the feature as per model_config
  float default_value = 3;
}

// Configuration for Categorical Features
message CategoricalFeatureConfig {
  // name
  string feature_name = 1;
  // seq_length of the feature
  int32 seq_length = 2;
  // default value of the feature as per model_config
  float default_value = 3;
  // stringMap for categorical features
  map<string, int32> string_map = 4;
}

// Feature Embedding
message Embedding {
  // embedding values
  repeated float values = 1;
}

// Configuration for Embedding Features
message EmbeddingFeatureConfig {
  // name
  string feature_name = 1;
  // seq_length of the feature
  int32 seq_length = 2;
  // dimension of the embedding feature
  int32 dimension = 3;
  // default value of the feature as per model_config
  repeated Embedding default_value = 4;
}

// Configuration for String Features
message StringFeatureConfig {
  // name
  string feature_name = 1;
  // seq_length of the feature
  int32 seq_length = 2;
  // default value of the feature as per model_config
  string default_value = 3;
}

// Configuration for Int64 List Features
message Int64ListFeatureConfig {
  // name
  string feature_name = 1;
  // seq_length of the feature
  int32 seq_length = 2;
  // default value of the feature as per model_config
  repeated int64 default_value = 3;
}

// Configuration for Float List Features
message FloatListFeatureConfig {
  // name
  string feature_name = 1;
  // seq_length of the feature
  int32 seq_length = 2;
  // default value of the feature as per model_config
  repeated float default_value = 3;
}

// Configuration for Predictor fetched from SPS Adhoc
message PredictorConfig {
  // name
  string name = 1;
  // tag string to track use-cases behind a prediction
  string use_case = 2;
  // default model_id being utilized
  string default_model_id = 3;
  // team owner
  string predictor_owner = 4;
  // check for predictor being currently served in production
  bool in_production = 5;
  // list of all the active model_ids currently being served
  repeated string active_model_ids = 6;
  // list of all the model_ids
  repeated string model_ids = 7;
  // list of all the active models currently being served
  repeated ModelConfig active_models = 8;
  // list of all the models including models in development
  repeated ModelConfig models = 9;
}

// Configuration for Model fetched from SPS Adhoc
message ModelConfig {
  // model_id
  string model_id = 1;
  // prediction_type for given model
  PredictionType prediction_type = 2;
  // model type
  string model_type = 3;
  // configuration for numerical features
  repeated NumericalFeatureConfig numerical_feature_config = 4;
  // configuration for categorical features
  repeated CategoricalFeatureConfig categorical_feature_config = 5;
  // configuration for embedding features
  repeated EmbeddingFeatureConfig embedding_feature_config = 6;
  // configuration for string features
  repeated StringFeatureConfig string_feature_config = 7;
  // configuration for int64 list features
  repeated Int64ListFeatureConfig int64list_feature_config = 8;
  // configuration for float list features
  repeated FloatListFeatureConfig floatlist_feature_config = 9;
  // check for model being currently served in production
  bool in_production = 10;
}

// Deprecated
// Request Spec to get a predictor config
message GetPredictorConfigRequest {
  // predictor name
  string predictor_name = 1;
  // owner name
  string team_name = 2;
}

// Deprecated
// Response Spec for predictor config
message GetPredictorConfigResponse {
  // predictor configs fetched
  repeated PredictorConfig predictor_config = 1;
}

// Request Spec to get a predictor config
message SPSConnectorGetPredictorConfigRequest {
  // predictor name
  string predictor_name = 1;
  // owner name
  string team_name = 2;
}

// Response Spec for predictor config
message SPSConnectorGetPredictorConfigResponse {
  // predictor configs fetched
  repeated PredictorConfig predictor_configs = 1;
}

// Request Spec to get a model config
message GetModelConfig {
  // model_id
  string model_id = 1;
}

// Response Spec for model config
message GetModelConfigResponse {
  // predictor configs fetched
  ModelConfig model_config = 1;
}

// Request for sync to octopus
message SyncSPSPredictorConfigsRequest {
  // list of predictor names
  repeated string predictor_names = 1;
}

// Response for sync
message SyncSPSPredictorConfigsResponse {
  // Status Code
  StatusCode code = 1;
}

// Context for Prediction Request
message PredictionRequestContext {
  // tag string to track use-cases behind a prediction
  string use_case = 1;
  // tag string to help identify the calling service
  string caller_service_name = 2;
}

// Feature Set Passed to make Prediction
message PredictionFeatureSet {
  // Feature Set ID
  string feature_set_id = 1;
  // Numerical Features
  repeated NumericalFeature numerical_features = 2;
  // Categorical Features
  repeated CategoricalFeature categorical_features = 3;
  // Entities
  repeated EntityId entity_ids = 4;
  // Embedding Features
  repeated EmbeddingFeature embedding_features = 5;
  // List Features
  repeated ListFeature list_features = 6;
  // String Features
  repeated StringFeature string_features = 7;
}

// Adhoc Prediction Request for SPS
message GetAdhocPredictionRequest {
  // Predictor Name
  string predictor_name = 1;
  // Model to be used for prediction
  string model_id = 2;
  // Feature Set
  PredictionFeatureSet feature_set = 3;
  // Multi Predictions
  repeated PredictionFeatureSet multi_feature_set = 4;
}

// Adhoc Prediction Resopnse from SPS
message GetAdhocPredictionResponse {
  // Status Code
  StatusCode code = 1;
  // DEPRECATED: Prediction Result
  repeated PredictorResult predictor_responses = 2;
  // Adhoc Prediction Result
  repeated AdhocPredictorResult adhoc_predictor_responses = 3;
}

// This Section below was created due to an AdminGateway Naming Conflict

// Adhoc Prediction Result
message AdhocPredictorResult {
  // predictor name
  string predictor_name = 1;
  // model id
  string model_id = 2;
  // predictions
  repeated AdhocPrediction predictions = 3;
  // result code
  ResultCode result_code = 4;
  // metadata
  ResultMetaData result_meta_data = 5;
  // debug info
  repeated AdhocPredictionDebugInfo prediction_debug_info = 6;
}

// Adhoc Prediction Debug Info
message AdhocPredictionDebugInfo {
  // step name
  string step_name = 1;
  // step value
  string debug_value = 2;
  // timestamp
  google.protobuf.Timestamp debug_timestamp = 3;
  // step description
  string step_name_description = 4;
}

// Adhoc Prediction
message AdhocPrediction {
  // feature set
  string feature_set_id = 1;
  // model_id
  string model_id = 8;
  // value can only be one of the following
  oneof value {
    // regression
    float regression_value = 2;
    // binary classifier
    float binary_classification_probability = 3;
    // multi label value
    MultiLabelValue multi_label_value = 6;
    // string sequence
    StringSequence string_sequence = 7;
    // embedding
    EmbeddingOutput embedding_output = 9;
  }
}

// MultiLabel Value Predictions
message MultiLabelValue {
  // label values
  repeated LabelValue label_values = 1;
}

// String Sequence Predictions
message StringSequence {
  // string values
  repeated string string_values = 1;
}

// Embedding
message EmbeddingOutput {
  // embedding values
  repeated float embedding_values = 1;
}

// Label Value
message LabelValue {
  // label
  string label = 1;
  // confidence
  float confidence = 2;
}

// Prediction Result Metadata
message ResultMetaData {
  // the error message
  string error_message = 1;
}
