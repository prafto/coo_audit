syntax = "proto3";

package crystalball.v1;

import "crystalball/common.proto";

option java_multiple_files = true;
option java_package = "com.doordash.crystalball.v1";

// InputType for generic API
enum PartType {
  // Unspecified
  PART_TYPE_UNSPECIFIED = 0;
  // Text
  PART_TYPE_TEXT = 1;
  // Image
  PART_TYPE_IMAGE = 2;
  // Audio
  PART_TYPE_AUDIO = 3;
  // Video
  PART_TYPE_VIDEO = 4;
}

// Message Part
message PartData {
  // The IANA standard MIME type: "image/png", "image/jpeg", "image/heic", "image/heif", "image/webp".
  string format = 1;
  // Value raw bytes for media formats
  string value = 2;
}

// A part of a message
message MessagePart {
  // Reference to the type for a given part
  PartType type = 1;
  // Data
  PartData data = 2;
  // config: part specific config stringified in a JSON format
  // this will be a catch all field for things like:
  // image_resolution, language
  string config = 3;
}

// Message content
message MessageContent {
  // Role of the Message
  string role = 1;
  // Message Parts
  repeated MessagePart parts = 2;
}

// Messages with Content for Chat
message DashChatMessage {
  // Message Content
  MessageContent content = 1;
}

// Request for getting a prompt
message GetPromptRequest {
  // Model Id (ex. "gpt-3.5-turbo")
  string model_id = 1;
  // Messages: a collection of DashChatMessage objects
  repeated DashChatMessage messages = 2;
  // options: model specific options stringified in a JSON format
  string options = 3;
  // User ID sending the message
  string user_id = 4;
}

// Request for getting a prompt
message GetPromptResponse {
  // Model Id (ex. "gpt-3.5-turbo")
  string model_id = 1;
  // Messages: a collection of DashChatMessage objects
  repeated DashChatMessage messages = 2;
  // metadata: model specific metadata stringified in a JSON format
  string metadata = 3;
  // DashChat Error Code
  DashChatErrorCode code = 4;
  // DashChat Metrics
  DashChatMetrics metrics = 5;
}
