/**
 * Defines protobuf options for unified API gateway for individual endpoints
 */
syntax = "proto3";

package doordash.api;

import "doordash.api/common.proto";

option cc_enable_arenas = true;
option go_package = "github.com/doordash/services-protobuf/generated/doordash.api";
option java_multiple_files = true;
option java_outer_classname = "RestEndpointProto";
option java_package = "com.doordash.api";
option objc_class_prefix = "DAPI";

/**
 * Endpoint options
 */
message RestEndpointRule {
  // endpoint owner - if not defined or empty, it will fallback to Service owner option
  Owner owner = 1;
  // endpoint tier
  Tier tier = 2;
  // endpoint lifecycle
  Lifecycle lifecycle = 3;
  // endpoint authorization model
  repeated Authorization authorization = 4;
  // slo config variables
  SloConfig slo_config = 5;
  // target products - if not defined or empty, it will fallback to Service option
  repeated TargetProduct target_products = 6;
  // role based authorization - an add-on authorization limit, should not be defined when authorization is NONE
  RoleBasedAuthorization role_based_authorization = 7;
  // inject user roles - if set to true, user roles will be injected into the request headers. defaults to false
  bool inject_user_roles = 8;
  // maps the response body to a nested field in the response
  string response_body = 9;
  // authentication config
  AuthenticationConfig authentication_config = 10;
  // path of the endpoint - if not defined, it will use the service's level url
  string host_url = 11;
  // port - if not defined, it will use the service's level port
  int32 port = 12;
  // hostname of the endpoint - if not defined, it will use the service's level hostname
  string hostname = 13;
  // if set to true, the endpoint will be treated as a presentation gateway endpoint
  bool presentation_gateway_endpoint = 15;
}

/**
 * Endpoint tier - defaults to T3
 */
enum Tier {
  // Tier 0
  T0 = 0;
  // Tier 1
  T1 = 1;
  // Tier 2
  T2 = 2;
  // Tier 3
  T3 = 3;
}

/**
 * Endpoint lifecycle - defaults to dev
 */
enum Lifecycle {
  // Lifecycle - Dev
  DEV = 0;
  // Lifecycle - Test
  TEST = 1;
  // Lifecycle - Prod
  PROD = 2;
  // Lifecycle - Deprecated
  DEPRECATED = 3;
}

/**
 * Endpoint authorization model - required
 */
enum Authorization {
  // used for deprecated field names
  reserved "DD_CONTINGENT_WORKER";
  // used for deprecated field tags
  reserved 8;
  // No authorization defined
  NONE = 0;
  // Consumer Guest
  CX_GUEST = 1;
  // Consumer User
  CX_USER = 2;
  // Dasher Guest
  DX_GUEST = 3;
  // Dasher User
  DX_USER = 4;
  // Merchant User
  MX_USER = 5;
  // API Key - Reach out to the team to obtain one
  API_KEY = 6;
  // DoorDash Employee
  DD_EMPLOYEE = 7;
  // Consumer Lite Guest
  CX_LITE_GUEST = 9;
  // DoorDash User
  DD_USER = 10;
  // Client Token - Assigned by Identity Team for external clients
  CLIENT_TOKEN = 11;
  // DoorDash Developer
  DEVELOPER = 12;
}

/**
 * Endpoint role based authorization - and add-on limit for authorization; Should not be defined
 * when authorization is NONE
 */
message RoleBasedAuthorization {
  // Mode of role based authorization.
  RoleBasedAuthorizationMode mode = 1;
  // List of roles required for authorization.
  repeated string roles = 2;
}

/**
 * Mode of role based authorization
 */
enum RoleBasedAuthorizationMode {
  //Any one of the provided roles is sufficient for authorization.
  ANY = 0;
  // All the provided roles are required for authorization.
  ALL = 1;
}

/**
   Slo Config of the endpoint
*/
message SloConfig {
  // denotes the critical alerts are enabled or not, default is true if not provided
  bool critical_alerts_enabled = 1;
  // p99 latency for the endpoint in ms, default is 5000ms if not provided
  int64 p99_latency = 2;
  // critical 5 min burn threshold in percentage, default is 3000 percentage if not provided
  int64 critical_5m_burn_threshold = 3;
  // critical 5 min burn sustain in seconds, default is 300 seconds if not provided
  int64 critical_5m_burn_sustain_seconds = 4;
  // availability objective of SLO, default is 99.9% - T0, 99% - T1, 98% - T2, 97% - T3
  float availability_objective = 5;
  // SLO owner runbook
  string runbook = 6;
  // SLO owner ddrn
  string ddrn = 7;
}

/**
 * Endpoint authentication config.
 */
message AuthenticationConfig {
  // whether if the okta check if enabled or not.
  bool enable_okta_verification = 1;
}
