syntax = "proto3";
package order_service;

import "google/protobuf/struct.proto";
import "google/protobuf/wrappers.proto";
import "order/consumer_order.proto";

option go_package = "order_tooling_service";
option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.order_tooling";

service OrderToolingService {
  // Debugging endpoint to retrieve order data from C* order
  rpc GetCassandraOrderData(GetCassandraOrderDataRequest) returns (GetCassandraOrderDataResponse);

  // Debugging endpoint to retrieve order data from C* processing_consumer_order table
  rpc GetCassandraParentOrderData(GetCassandraParentOrderDataRequest) returns (GetCassandraParentOrderDataResponse);

  // This endpoint is only for debugging or testing purpose. Not supposed to be used in prod.
  // Debugging endpoint to retrieve consumer order data from C* consumer order
  rpc GetCassandraConsumerOrderData(GetCassandraConsumerOrderDataRequest) returns (GetCassandraConsumerOrderDataResponse);

  // This endpoint is only for debugging or testing purpose. Not supposed to be used in prod.
  // Debugging endpoint to retrieve order states from C* order
  rpc GetCassandraOrderStatesData(GetCassandraOrderStatesDataRequest) returns (GetCassandraOrderStatesDataResponse);

  // This endpoint is only for debugging or testing purpose. Not supposed to be used in prod.
  // Debugging endpoint to retrieve order states from C* processing_consumer_order table
  rpc GetCassandraParentOrderStatesData(GetCassandraParentOrderStatesDataRequest) returns (GetCassandraParentOrderStatesDataResponse);

  // This endpoint is only for debugging or testing purpose. Not supposed to be used in prod.
  // Debugging endpoint to retrieve cart & cart items data from C* cart
  rpc GetCassandraCartData(GetCassandraCartDataRequest) returns (GetCassandraCartDataResponse);

  // This endpoint is only for debugging or testing purpose. Not supposed to be used in prod.
  // Debugging endpoint to retrieve C* index mappings
  rpc GetCassandraOrderIndexMapping(GetCassandraOrderIndexMappingRequest) returns (GetCassandraOrderIndexMappingResponse);

  // This endpoint is only for debugging or testing purpose. Not supposed to be used in prod.
  // Debugging endpoint to retrieve order transmission data
  rpc GetOrderTransmissionData(GetOrderTransmissionDataRequest) returns (GetOrderTransmissionDataResponse);

  // This endpoint is only for debugging or testing purpose. Not supposed to be used in prod.
  // Debugging endpoint to retrieve order extension data from specified extension table
  rpc GetOrderExtensionData(GetOrderExtensionDataRequest) returns (GetOrderExtensionDataResponse);

  // This endpoint is only for debugging or testing purpose. Not supposed to be used in prod.
  // Debugging endpoint to retrieve order extension data from specified extension table
  rpc GetCassandraCartUuidIndexes(GetCassandraCartUuidIndexesRequest) returns (GetCassandraCartUuidIndexesResponse);

  // This endpoint is only for debugging or testing purpose. Not supposed to be used in prod.
  // Debugging endpoint to retrieve processed parent order data from C* consumer order
  rpc GetCassandraProcessedParentOrderData(GetCassandraProcessedParentOrderDataRequest) returns (GetCassandraProcessedParentOrderDataResponse);

  // This endpoint is only for debugging or testing purpose. Not supposed to be used in prod.
  // Debugging endpoint to retrieve processed child order data from C* consumer order
  rpc GetCassandraProcessedChildOrderData(GetCassandraProcessedChildOrderDataRequest) returns (GetCassandraProcessedChildOrderDataResponse);
}

message GetCassandraOrderDataRequest {
  // Id to query the order
  DebuggerIdentifier debugger_identifier = 1;
  // To query the latest order, leave this field blank.
  // To query the order persisted in the checkout flow, set this field to 100.
  // To query the order persisted in the n-th adjustment flow, set this field to 1999+n.
  google.protobuf.Int64Value operation_code = 2;
  google.protobuf.Int64Value state_type = 3;
  bool is_shadow = 4;
}

message GetCassandraOrderDataResponse {
  // flattened order data json string used on the order debugger
  google.protobuf.StringValue order_json = 1;
  bool is_order_successful = 2;
  bool is_order_in_terminate_state = 3;
}

message GetCassandraParentOrderDataRequest {
  // Id to query the order
  DebuggerIdentifier debugger_identifier = 1;
  // To query the latest order, leave this field blank.
  // To query the order persisted in the checkout flow, set this field to 100.
  // To query the order persisted in the n-th adjustment flow, set this field to 1999+n.
  google.protobuf.Int64Value operation_code = 2;
  google.protobuf.Int64Value state_type = 3;
}

message GetCassandraParentOrderDataResponse {
  // flattened order data json string used on the order debugger
  google.protobuf.StringValue order_json = 1;
  bool is_order_successful = 2;
  bool is_order_in_terminate_state = 3;
}

message GetCassandraConsumerOrderDataRequest {
  // Id to query the consumer order
  DebuggerIdentifier debugger_identifier = 1;
  // false to get the latest consumer order record. true to fetch all consumer order records
  google.protobuf.BoolValue fetch_all = 2;
  bool is_shadow = 3;
}

message GetCassandraConsumerOrderDataResponse {
  // flattened consumer order data json string used on the order debugger
  repeated string consumer_orders_json = 1;
}

message GetCassandraParentOrderStatesDataRequest {
  // Id to query the order states
  DebuggerIdentifier debugger_identifier = 1;
}

message GetCassandraParentOrderStatesDataResponse {
  message States {
    repeated string value = 1;
  }
  map<string, States> flowToStates = 1;
}

message GetCassandraOrderStatesDataRequest {
  // Id to query the order states
  DebuggerIdentifier debugger_identifier = 1;
  bool is_shadow = 2;
}

message GetCassandraOrderStatesDataResponse {
  message States {
    repeated string value = 1;
  }
  map<string, States> flowToStates = 1;
}

message GetCassandraCartDataRequest {
  google.protobuf.StringValue cart_uuid = 1;
  google.protobuf.StringValue consumer_id = 2;
}

message GetCassandraCartDataResponse {
  google.protobuf.StringValue cart_json = 1;
}

message GetCassandraOrderIndexMappingRequest {
  google.protobuf.StringValue delivery_uuid = 1;
  google.protobuf.StringValue consumer_id = 2;
  google.protobuf.StringValue store_id = 3;
  google.protobuf.StringValue cart_uuid = 4;
  google.protobuf.StringValue order_cart_id = 5;
  google.protobuf.StringValue vertical_id = 6;
}

message GetCassandraOrderIndexMappingResponse {
  // flattened index mapping json string used on the order debugger
  google.protobuf.StringValue indices_json = 1;
}

message GetOrderTransmissionDataRequest {
  DebuggerIdentifier debugger_identifier = 1;
}

message GetOrderTransmissionDataResponse {
  // flattened order transmission data json string used on the order debugger
  google.protobuf.StringValue transmission_json = 1;
}

message GetOrderExtensionDataRequest {
  enum ExtensionTableName {
    // Convenience and Grocery
    CNG_ORDER_INFO = 0;
  }
  // Id to query the order extension data
  DebuggerIdentifier debugger_identifier = 1;
  // The specific extension table data should be returned
  ExtensionTableName extension_table_name = 2;
  bool is_shadow = 3;
}

message GetOrderExtensionDataResponse {
  // flattened order extension data json string used on the order debugger
  google.protobuf.StringValue extension_json = 1;
}

message GetCassandraCartUuidIndexesRequest {
  google.protobuf.StringValue consumer_id = 1;
}

message GetCassandraCartUuidIndexesResponse {
  message CartUuids {
    repeated string value = 1;
  }
  map<string, CartUuids> cart_type_to_cart_uuids = 1;
}

message GetCassandraProcessedParentOrderDataRequest {
  // Id to query the processed parent order
  DebuggerIdentifier debugger_identifier = 1;
}

message GetCassandraProcessedParentOrderDataResponse {
  // flattened processed parent order data json string used on the order debugger
  string processed_parent_order_json = 1;
}

message GetCassandraProcessedChildOrderDataRequest {
  // Id to query the processed child order
  DebuggerIdentifier debugger_identifier = 1;
}

message GetCassandraProcessedChildOrderDataResponse {
  // flattened processed child order data json string used on the order debugger
  string processed_child_order_json = 1;
}
