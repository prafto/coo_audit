syntax = "proto3";

package consumer_business_profile_service.v1;

import "consumer_business_profile_service/business_profile.proto";
import "doordash.api/annotations.proto";
import "doordash.api/client.proto";
import "google/api/annotations.proto";
import "google/protobuf/wrappers.proto";

option go_package = "github.com/doordash/services-protobuf/generated/consumer_business_profile_service/api/v1";
option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.consumer_business_profile_service.rpc.api";

// consumer business profile service
service ConsumerBusinessProfileService {
  option (doordash.api.service) = {
    name: "consumer-business-profile-service"
    url: "consumer-business-profile-service-api.service.prod.ddsd"
    port: 50051
    name_spaces: ["consumer-business-profile"]
    owner: {
      name: "consumer-business-profile-service"
      id: "doordash-for-work"
      slack_channel: "#eng-work"
      email_alias: "ddfw-eng@doordash.com"
    }
    target_products: [CX]
  };
  // create business profile
  rpc CreateBusinessProfile(CreateBusinessProfileRequest) returns (CreateBusinessProfileResponse) {
    option (google.api.http) = {
      post: "/consumer-business-profile/v1/business-profiles"
      body: "*"
    };

    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: TEST
      authorization: [CX_USER]
      target_products: [CX]
    };
  }
  // get business profile
  rpc GetBusinessProfile(GetBusinessProfileRequest) returns (GetBusinessProfileResponse) {
    option (google.api.http) = {get: "/consumer-business-profile/v1/business-profiles"};

    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: TEST
      authorization: [CX_USER]
      target_products: [CX]
    };
  }
  // update business profile
  rpc UpdateBusinessProfile(UpdateBusinessProfileRequest) returns (UpdateBusinessProfileResponse) {
    option (google.api.http) = {
      put: "/consumer-business-profile/v1/business-profiles"
      body: "*"
    };

    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: TEST
      authorization: [CX_USER]
      target_products: [CX]
    };
  }
  // delete business profile
  rpc DeleteBusinessProfile(DeleteBusinessProfileRequest) returns (DeleteBusinessProfileResponse) {
    option (google.api.http) = {delete: "/consumer-business-profile/v1/business-profiles"};

    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: TEST
      authorization: [CX_USER]
      target_products: [CX]
    };
  }

  // send work email verification
  rpc SendWorkEmailVerification(SendWorkEmailVerificationRequest) returns (SendWorkEmailVerificationResponse) {
    option (google.api.http) = {
      post: "/consumer-business-profile/v1/send-email-verification"
      body: "*"
    };

    option (doordash.api.endpoint) = {
      tier: T1
      // we have SLOs for this endpoint at the rpc level
      lifecycle: DEV
      authorization: [CX_USER]
      target_products: [CX]
    };
  }

  // verify code for work email verification
  rpc VerifyCode(VerifyCodeRequest) returns (VerifyCodeResponse) {
    option (google.api.http) = {
      post: "/consumer-business-profile/v1/verify-code"
      body: "*"
    };

    option (doordash.api.endpoint) = {
      tier: T1
      // we have SLOs for this endpoint at the rpc level
      lifecycle: DEV
      authorization: [CX_USER]
      target_products: [CX]
    };
  }
}

// create business profile request
message CreateBusinessProfileRequest {
  // the id of consumer that owns the business profile
  google.protobuf.StringValue consumer_id = 1 [(doordash.api.inject_id) = CX_ID];
  // defaut payment method id of the business payment method
  google.protobuf.StringValue default_payment_method_id = 2;
  // work email address
  google.protobuf.StringValue work_email_address = 3;
}

// create business profile response
message CreateBusinessProfileResponse {
  // business profile that's created
  BusinessProfile business_profile = 1;
}

// get business profile request
message GetBusinessProfileRequest {
  // consumer that requested the business profile
  google.protobuf.StringValue consumer_id = 1 [(doordash.api.inject_id) = CX_ID];
}

// get business profile response
message GetBusinessProfileResponse {
  // business profile of consumer
  BusinessProfile business_profile = 1 [
    (doordash.api.client.nullable) = true,
    (doordash.api.client.optional) = true
  ];
}

// request to update the business profile
message UpdateBusinessProfileRequest {
  // id of consumer who owns the business profile
  google.protobuf.StringValue consumer_id = 1 [(doordash.api.inject_id) = CX_ID];
  // the updated default payment method id
  // should be null if the default payment method is not changing
  google.protobuf.StringValue default_payment_method_id = 2;
  // the updated work email address
  // should be unset or null if work email address is not changing
  // empty string will be interpreted as removing work email address
  google.protobuf.StringValue work_email_address = 3;

  // updated expense provider configuration
  ExpenseProviderConfiguration expense_provider_configuration = 4 [(doordash.api.client.optional) = true];

  // updated expense provider configuration
  ExpenseProviderConfigurationV2 expense_provider_configuration_v2 = 5 [(doordash.api.client.optional) = true];
}

// update business profile response
message UpdateBusinessProfileResponse {
  // updated business profile
  BusinessProfile business_profile = 1;
}

// delete business profile request
message DeleteBusinessProfileRequest {
  // id of consumer who requested to delete their business profile
  google.protobuf.StringValue consumer_id = 1 [(doordash.api.inject_id) = CX_ID];
}

// delete business profile response
message DeleteBusinessProfileResponse {
  // true if the delete was successful. False otherwise.
  google.protobuf.BoolValue is_success = 1;
}

// request to send work email verification
message SendWorkEmailVerificationRequest {
  // the consumer id that owns the business profile
  google.protobuf.StringValue consumer_id = 1 [(doordash.api.inject_id) = CX_ID];

  // the work email address to send the verification email to
  // if not provided, we default to the existing work email address
  // if work_email_address is set, we will update the work email address to the provided input
  google.protobuf.StringValue work_email_address = 2 [deprecated = true];
}

// send work email verification response
message SendWorkEmailVerificationResponse {}

// verify code request
message VerifyCodeRequest {
  // the consumer id that owns the business profile
  google.protobuf.StringValue consumer_id = 1 [(doordash.api.inject_id) = CX_ID];

  // the verification code input by the consumer
  google.protobuf.StringValue verification_code = 2;
}

// verify email response
message VerifyCodeResponse {
  // true if the verification code is valid. False otherwise.
  google.protobuf.BoolValue is_success = 1;
}
