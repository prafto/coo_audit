syntax = "proto3";
package consumer_habituation.v1;

import "common/common.proto";
import "google/protobuf/any.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option java_package = "com.doordash.rpc.consumer_habituation";

// NOTE: IF YOU ARE ADDING FIELDS/COLUMNS WITH USER PERSONALLY IDENTIFIABLE INFORMATION, PLEASE FOLLOW THIS
// DOCUMENTATION IN ORDER TO ENSURE CCPA COMPLIANCE:
// https://doordash.atlassian.net/wiki/spaces/Eng/pages/3160834089/Making+Datalake+Table+CCPA+Compliant
message QuoteAdjustmentsEvent {
  option (common.dataframe_transformations) = "pii_obfuscation";
  // consumer id
  string consumer_id = 1 [(common.pii_type) = "CONSUMER_ID"];
  // consumer experience, e.g. DOORDASH, CAVIAR, etc
  string consumer_experience = 2;
  // consumer location lat
  google.protobuf.DoubleValue consumer_lat = 3;
  // consumer location long
  google.protobuf.DoubleValue consumer_long = 4;
  // active, inactive, or paused
  string consumer_dashpass_status = 5;
  // subset of consumer tags
  repeated string consumer_tags = 6;
  // consumer country short name
  string country_short_name = 7;
  // store's unique id
  string store_id = 8;
  // rotation start time
  google.protobuf.Timestamp rotation_start_time = 9 [(common.timestamp_granularity) = "TIMESTAMP_PROTOBUF"];
  // rotation end time
  google.protobuf.Timestamp rotation_end_time = 10 [(common.timestamp_granularity) = "TIMESTAMP_PROTOBUF"];
  // rotation status equal to value in enum RotationStatus in consumer_habituation.proto
  string rotation_status = 11;
  // name of workflow executed
  string workflow_name = 12;
  // name of workflow config experiment
  string workflow_matched_experiment = 13;
  // name of workflow config bucket
  string workflow_matched_bucket = 14;
  // decoration config name
  string decoration_config_name = 15;
  // json encoded string of active experiments and treatment
  string experiment_map = 16;
  // json encoded string of tasks and results
  string eligibility_task_logs = 17;
  // zero_df or zero_df_%_off
  string pad_discount_type = 18;
  // json encoded string of info for each incentive
  repeated string incentives = 19;
}

// NOTE: IF YOU ARE ADDING FIELDS/COLUMNS WITH USER PERSONALLY IDENTIFIABLE INFORMATION, PLEASE FOLLOW THIS
// DOCUMENTATION IN ORDER TO ENSURE CCPA COMPLIANCE:
// https://doordash.atlassian.net/wiki/spaces/Eng/pages/3160834089/Making+Datalake+Table+CCPA+Compliant
// iguazu event definition for isCxSmartTargetForStores
message CxSmartTargetForStoresEvent {
  option (common.dataframe_transformations) = "pii_obfuscation";
  // consumer id
  string consumer_id = 1 [(common.pii_type) = "CONSUMER_ID"];
  // store id for preview or 1st available store in batch flow
  string store_id = 2;
  // flow type of different upstream workflows
  string flow_type = 3;
  // sibyl response of smart targeting promoai prediction for preview or 1st available store in batch flow
  float promo_ai_prediction = 4;
  // smart targeting result for preview or 1st available store in batch flow
  bool smart_target_result = 5;
  // timestamp
  google.protobuf.Timestamp created_at = 6 [(common.timestamp_granularity) = "TIMESTAMP_PROTOBUF"];
  // string dd session id of request
  string dd_session_id = 7;
  // string cart id of of request if cart existed
  string cart_id = 8;
  // smart targeting model id
  string smart_targeting_model_id = 9;
  // campaign targeting type
  string campaign_targeting_type = 10;
  // promoai experiment name
  string experiment_name = 11;
  // promoai experiment bucket
  string experiment_bucket = 12;
  // targeting threshold
  float targeting_threshod = 13;
  // open telemry trace id, for joining to other logs
  string trace_id = 14;
  // quote_id from pricing
  string pricing_quote_id = 15;
}
