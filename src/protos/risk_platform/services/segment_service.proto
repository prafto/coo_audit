syntax = "proto3";

package risk_platform.services.v1;

import "doordash.api/annotations.proto";
import "google/api/annotations.proto";
import "risk_platform/shared/risk_segment.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_outer_classname = "RiskSegmentServiceProtos";
option java_package = "com.doordash.rpc.risk_platform.services";

// Service providing access to risk segments
service RiskSegmentService {
  option (doordash.api.service) = {
    name: "risk-gateway-web"
    url: "risk-gateway-web.service.prod.ddsd"
    port: 50051
    name_spaces: ["risk-data-platform"]
    owner: {
      name: "risk-c-r-fraud"
      id: "risk-c-r-fraud"
      slack_channel: "#ask-cx-fraud"
      email_alias: "fraud-cx-eng@doordash.com"
    }
    target_products: [CX]
  };
  // Get get the risk segment assigned to a given consumer
  rpc GetConsumerRiskSegment(GetConsumerRiskSegmentRequest) returns (GetConsumerRiskSegmentResponse) {
    option (google.api.http) = {get: "/risk-data-platform/v1/consumer_risk_segment/{consumer_id}"};

    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: DEV
      authorization: [DD_USER]
      role_based_authorization: {
        mode: ANY,
        roles: ["perm_risk_workstation"]
      }
      target_products: [INTERNAL]
    };
  }
}

// Request message to retrieve consumer risk segment
message GetConsumerRiskSegmentRequest {
  // id of consumer to retrieve risk segment for
  string consumer_id = 1;
}

// Response message when retrieving consumer risk segment
message GetConsumerRiskSegmentResponse {
  // risk segment associated with the requested consumer
  risk_platform.shared.v1.ConsumerRiskSegment segment = 1;
}
