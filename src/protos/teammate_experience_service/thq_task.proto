syntax = "proto3";
package teammate_experience_service.api.v1;

import "common/common.proto";
import "common/service_client_config.proto";
import "doordash.api/annotations.proto";
import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "task_service/task_group.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.tes.api.v1";

// Timeline Service
service THQTaskService {
  // for reference: https://github.com/doordash/dd-util-java/wiki/Hermes#hermes-default-behavior
  option (service_client.client_config).service_name = "teammate-experience-service";
  option (service_client.client_config).retry_config.max_attempts = 3;
  option (service_client.client_config).response_attempt_timeout_millis = 30000;
  option (service_client.client_config).circuit_breaker_config.failure_rate_threshold = 1.0;
  option (service_client.client_config).retry_config.initial_wait_millis = 500;
  option (service_client.client_config).retry_config.wait_multiplier = 2.0;
  option (doordash.api.service) = {
    name: "teammate-experience-service"
    url: "teammate-experience-service-web.service.prod.ddsd"
    port: 50051
    name_spaces: ["teammate-experience-service"]
    api_key_name: "TEAMMATE_EXPERIENCE_SERVICE_API_KEY"
    owner: {
      name: "teammate-experience-service"
      id: "teammate-experience-alerts"
      slack_channel: "#ask-teammate-experience"
      email_alias: "team-teammate-experience@doordash.com"
    }
    target_products: [INTERNAL]
  };

  // Retrieves the task group summary
  rpc GetTaskGroup(GetTaskGroupRequest) returns (GetTaskGroupResponse) {
    option (google.api.http) = {
      post: "/teammate-experience-service/v1/get-task-group"
      body: "*"
    };

    option (doordash.api.endpoint) = {
      tier: T2
      lifecycle: TEST
      authorization: [DD_USER]
      target_products: [INTERNAL]
      role_based_authorization: {
        mode: ANY,
        roles: ["perm_access_teammate_headquarters"]
      }
      authentication_config: {enable_okta_verification: true}
    };
  }

  // Retrieves the task group summary
  rpc GetTasks(GetTasksRequest) returns (GetTasksResponse) {
    option (google.api.http) = {
      post: "/teammate-experience-service/v1/get-tasks"
      body: "*"
    };

    option (doordash.api.endpoint) = {
      tier: T2
      lifecycle: TEST
      authorization: [DD_USER]
      target_products: [INTERNAL]
      role_based_authorization: {
        mode: ANY,
        roles: ["perm_access_teammate_headquarters"]
      }
      authentication_config: {enable_okta_verification: true}
    };
  }

  // Mark a step in the task group as complete
  rpc CompleteTaskGroupStep(CompleteTaskGroupStepRequest) returns (CompleteTaskGroupStepResponse) {
    option (google.api.http) = {
      post: "/teammate-experience-service/v1/complete-task-group-step"
      body: "*"
    };

    option (doordash.api.endpoint) = {
      tier: T2
      lifecycle: TEST
      authorization: [DD_USER]
      target_products: [INTERNAL]
      role_based_authorization: {
        mode: ANY,
        roles: ["perm_access_teammate_headquarters"]
      }
      authentication_config: {enable_okta_verification: true}
    };
  }

  // Force assign to a task group
  rpc ForceAssignTaskGroup(ForceAssignTaskGroupRequest) returns (ForceAssignTaskGroupResponse) {
    option (google.api.http) = {
      post: "/teammate-experience-service/v1/force-assign-task-group"
      body: "*"
    };

    option (doordash.api.endpoint) = {
      tier: T2
      lifecycle: TEST
      authorization: [DD_USER]
      target_products: [INTERNAL]
      role_based_authorization: {
        mode: ANY,
        roles: ["perm_access_teammate_headquarters"]
      }
    };
  }
}

// GetTaskGroup request object
message GetTaskGroupRequest {
  // Task group id
  google.protobuf.StringValue task_group_id = 1;
}

// Get Task Group response object
message GetTaskGroupResponse {
  // Task group id
  google.protobuf.StringValue task_group_id = 1;
  // Task group name
  google.protobuf.StringValue task_group_name = 2;
  // Task group type
  task_service.v2.TaskGroupType task_group_type = 3;
  // Task group data
  TaskGroupData task_group_data = 4;
  // Number of tasks
  google.protobuf.Int32Value num_tasks = 5;
  // Created at
  google.protobuf.Timestamp created_at = 6;
  // Updated at
  google.protobuf.Timestamp updated_at = 7;
  // Completed at
  google.protobuf.Timestamp completed_at = 8;
  // Cancelled at
  google.protobuf.Timestamp cancelled_at = 9;
  // Task group merchant details
  TaskMerchantDetails task_merchant_details = 10;
  // Task group dasher details
  TaskDasherDetails task_dasher_details = 11;
  // Task group consumer details
  TaskConsumerDetails task_consumer_details = 12;
  // Dash summary
  DashSummary dash_summary = 13;
}

// Get Tasks request object
message GetTasksRequest {
  // Task group id
  google.protobuf.StringValue task_group_id = 1;
}

// Get Tasks response object
message GetTasksResponse {
  // Tasks
  repeated Task tasks = 1;
}

// Dash summary
message DashSummary {
  // Total dash time
  google.protobuf.Int64Value total_dash_time = 1;
  // Accepted at
  google.protobuf.Timestamp accepted_at = 2;
}

// Task data
message Task {
  // Task name
  google.protobuf.StringValue task_name = 1;
  // Created at
  google.protobuf.Timestamp created_at = 2;
  // Updated at
  google.protobuf.Timestamp updated_at = 3;
  // Completed at
  google.protobuf.Timestamp completed_at = 4;
  // Entity for the audience of the task
  oneof entity {
    // Task merchant details
    TaskMerchantDetails task_merchant_details = 5;
    // Task consumer details
    TaskConsumerDetails task_consumer_details = 6;
  }
  // The time the task needs to start
  google.protobuf.Timestamp task_start_time = 7;
  // The time the task needs to end
  google.protobuf.Timestamp task_end_time = 8;
  // Instructions
  TaskInstruction task_instruction = 9;
  // Step id
  google.protobuf.StringValue step_id = 10;
}

// Task instruction
message TaskInstruction {
  // Generic header, less than 30 characters.  E.g. something generic like "Task Instruction" can be used.
  google.protobuf.StringValue header = 1;

  // A longer description of the text.  E.g. "Go to your assigned aisles in the store and take clear photos that include
  // all of the items and shelf tags."
  google.protobuf.StringValue body = 2;
}

// Task group data
message TaskGroupData {
  // Task group data
  oneof task_group_data {
    // Delivery task group
    DeliveryTaskGroup delivery_task_group = 1;
    // Canonical task group
    CanonicalTaskGroup canonical_task_group = 2;
  }
}

// Delivery task group
message DeliveryTaskGroup {
  // Delivery uuid
  google.protobuf.StringValue delivery_uuid = 1;
}

// Canonical task group
message CanonicalTaskGroup {
  // Preferred completion time
  google.protobuf.Timestamp preferred_completion_time = 1;
}

// Task group merchant details
message TaskMerchantDetails {
  // Store id
  google.protobuf.Int64Value store_id = 1;
  // Store name
  google.protobuf.StringValue store_name = 2;
  // Address
  Address address = 3;
  // Phone number
  google.protobuf.StringValue phone_number = 4;
  // Phone number components
  common.PhoneNumberComponents phone_number_components = 5;
  // Business id
  google.protobuf.Int64Value business_id = 6;
  // Timezone
  google.protobuf.StringValue timezone = 7;
  // Thumbnail
  google.protobuf.StringValue thumbnail = 8;
  // Is P2P
  google.protobuf.BoolValue is_p2p = 9;
  // Is partner
  google.protobuf.BoolValue is_partner = 10;
}

// Task consumer details
message TaskConsumerDetails {
  // Consumer id
  google.protobuf.Int64Value consumer_id = 1;
  // Consumer first name
  google.protobuf.StringValue first_name = 2;
  // Consumer last name
  google.protobuf.StringValue last_name = 3;
  // Phone number
  google.protobuf.StringValue phone_number = 4;
  // Phone number components
  common.PhoneNumberComponents phone_number_components = 5;
  // Email
  google.protobuf.StringValue email = 6;
}

// Task dasher details
message TaskDasherDetails {
  // Dasher id
  google.protobuf.Int64Value dasher_id = 1;
  // Dasher first name
  google.protobuf.StringValue first_name = 2;
  // Dasher last name
  google.protobuf.StringValue last_name = 3;
  // Phone number
  google.protobuf.StringValue phone_number = 4;
  // Phone number components
  common.PhoneNumberComponents phone_number_components = 5;
  // Email
  google.protobuf.StringValue email = 6;
  // Vehicle type id
  google.protobuf.Int64Value vehicle_type_id = 7;
}

// Address
message Address {
  // Printable address
  google.protobuf.StringValue printable_address = 1;
  // Street
  google.protobuf.StringValue street = 2;
  // City
  google.protobuf.StringValue city = 3;
  // Subpremise
  google.protobuf.StringValue subpremise = 4;
  // State
  google.protobuf.StringValue state = 5;
  // Zip code
  google.protobuf.StringValue zip_code = 6;
  // lng
  google.protobuf.FloatValue lng = 7;
  // lat
  google.protobuf.FloatValue lat = 8;
  // id
  google.protobuf.Int64Value id = 9;
  // Country
  google.protobuf.StringValue country = 10;
  // Shortname
  google.protobuf.StringValue shortname = 11;
}

// Complete task group step request
message CompleteTaskGroupStepRequest {
  // Task group id
  google.protobuf.StringValue task_group_id = 1;
  // Step id
  google.protobuf.StringValue step_id = 2;
}

// Complete task group step response
message CompleteTaskGroupStepResponse {
  // Is successful
  google.protobuf.BoolValue success = 1;
}

// Force assign task group request
message ForceAssignTaskGroupRequest {
  // Task group id
  google.protobuf.StringValue task_group_id = 1;
  // Id to force assign to
  oneof id {
    // Dasher id
    google.protobuf.StringValue dasher_id = 2;
    // Shift id
    google.protobuf.StringValue shift_id = 3;
  }
}

// Force assign task group response
message ForceAssignTaskGroupResponse {
  // Is successful
  google.protobuf.BoolValue success = 1;
}
