syntax = "proto3";

package global_change_log.v2;

import "google/protobuf/wrappers.proto";

option go_package = "github.com/doordash/services-protobuf/generated/global_change_log.v2";
option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.global_change_log.v2";

// Kind of event to capture manual vs automated change events
enum Kind {
  // undefined
  KIND_UNSPECIFIED = 0;
  // automated
  KIND_AUTOMATED = 1;
  // manual
  KIND_MANUAL = 2;
}

// Source of the system generating the events
enum Source {
  // undefined
  SOURCE_UNSPECIFIED = 0;
  // vault
  SOURCE_VAULT = 1;
  // spinnaker
  SOURCE_SPINNAKER = 2;
  // workflow-platform
  SOURCE_WORKFLOW_PLATFORM = 3;
  // storage-self-serve
  SOURCE_STORAGE_SELF_SERVE = 4;
  // dev-console
  SOURCE_DEV_CONSOLE = 5;
  // aws-event-notification-service
  SOURCE_AWS_EVENT_NOTIFICATION_SERVICE = 6;
  // lattice-config-manager
  SOURCE_LATTICE_CONFIG_MANAGER = 7;
  // kaizen
  SOURCE_KAIZEN = 8;
}

// Risk level associated with the change event
enum RiskLevel {
  // Specifies the risk level associated with this change at a high level decided by the system that is
  // generating the event and is meant to help with filtering and reducing noise
  RISK_LEVEL_UNSPECIFIED = 0;
  // deployment restarts etc
  RISK_LEVEL_LOW = 1;
  // All deployment events can be categorized to this risk level
  RISK_LEVEL_MEDIUM = 2;
  // Examples like DB CHANGES, VAULT and AWS DB/Cache restarts
  RISK_LEVEL_HIGH = 3;
}

// Environment of the event
enum Environment {
  // unknown
  ENVIRONMENT_UNSPECIFIED = 0;
  // production
  ENVIRONMENT_PRODUCTION = 1;
  // staging
  ENVIRONMENT_STAGING = 2;
}

// Event type
// Example: (Type=INCIDENT) DECLARED, (Type=INCIDENT) RESOLVED
// Example: (Type=DEPLOYMENT) STARTED, (Type=DEPLOYMENT) FINISHED
// List of allowed EventTypes will be maintained in a runtime file
// where each EventName will have a list of acceptable Actions
message EventType {
  // Name of the event
  google.protobuf.StringValue name = 1;
  // Action done by the event
  google.protobuf.StringValue action = 2;
}

// Event metadata
message EventMetadata {
  // Type of the event
  EventType type = 1;
  // Kind of the event
  Kind kind = 2;
  // Source of the event
  Source source = 3;
}

// Asset associated with the Event
message Asset {
  // Service
  google.protobuf.StringValue service_name = 1;
  // App
  google.protobuf.StringValue app_name = 2;
  // Namespace
  google.protobuf.StringValue namespace_name = 3;
  // Get from Assets service in future
  // To know what 'ddrn' is, see https://doordash.atlassian.net/wiki/spaces/Eng/pages/3287646426/DoorDash+Resource+Name+DDRN
  google.protobuf.StringValue ddrn = 4;
  // Get from Assets service in future
  // To know what 'domain' is, see https://doordash.atlassian.net/wiki/spaces/Eng/pages/3285352457/Domains
  google.protobuf.StringValue domain = 5;
}

// Info related to the infrastructure
message InfrastructureMetadata {
  // Environment
  Environment environment = 1;
  // Region
  google.protobuf.StringValue region = 2;
  // Cell
  google.protobuf.StringValue cell = 3;
  // Sub_environment to capture sandbox env
  google.protobuf.StringValue sub_environment = 4;
}

// Info related to the event
message Body {
  // Owner ID
  google.protobuf.StringValue owner_id = 1;
  // Epoch time in milliseconds set by the client producing the event
  int64 updated_at_ms = 2;
  // Message explaining the change event
  google.protobuf.StringValue message = 3;
  // Links to the associated change
  google.protobuf.StringValue reference_url = 4;
  // Value before
  google.protobuf.StringValue value_before = 5;
  // Value after
  google.protobuf.StringValue value_after = 6;
}

// Event definition
message GlobalChangeLogEvent {
  // Event metadata
  EventMetadata event_metadata = 1;

  // Infrastructure metadata
  InfrastructureMetadata infrastructure_metadata = 2;

  // Asset information
  Asset asset = 3;

  // Body
  Body body = 4;

  // optional key-value attributes
  map<string, string> labels = 5;

  // optional key-value attributes to be used when
  // emitting a CS metric to surface as Chronosphere annotation
  // visible in dashboards
  map<string, string> metric_labels = 6;

  // optional
  RiskLevel risk_level = 7;
}
