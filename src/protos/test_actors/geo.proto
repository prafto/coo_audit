syntax = "proto3";
package doordash.test_actors;

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "test_actors/code.proto";

option go_package = "github.com/doordash/services-protobuf/generated/test_actors";
option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.testactors";

service TestActors {
  rpc GetTestActors(GetTestActorsRequest) returns (GetTestActorsResponse) {
    option (google.api.http) = {
      post: "/v1/get_test_actors"
      body: "*"
    };
  }
  rpc ReleaseTestActors(ReleaseTestActorsRequest) returns (ReleaseTestActorsResponse) {
    option (google.api.http) = {
      put: "/v1/release_test_actors"
      body: "*"
    };
  }
  rpc GetTestActorsByTestId(GetTestActorsByTestIdRequest) returns (GetTestActorsByTestIdResponse) {
    option (google.api.http) = {
      post: "/v1/get_test_actors_by_test_id"
      body: "*"
    };
  }
  rpc GetTestActorsByEmployeeEmail(GetTestActorsByEmployeeEmailRequest) returns (GetTestActorsByEmployeeEmailResponse) {
    option (google.api.http) = {
      post: "/v1/get_test_actors_by_employee_email"
      body: "*"
    };
  }
  rpc GetTestStores(GetTestStoresRequest) returns (GetTestStoresResponse) {
    option (google.api.http) = {get: "/v1/get_test_stores"};
  }
  rpc GetTestDasher(GetTestDasherRequest) returns (GetTestDasherResponse) {
    option (google.api.http) = {
      post: "/v1/get_test_dasher"
      body: "*"
    };
  }
  rpc ReleaseTestDasher(ReleaseTestDasherRequest) returns (ReleaseTestDasherResponse) {
    option (google.api.http) = {
      put: "/v1/release_test_dasher"
      body: "*"
    };
  }
  rpc GetTestDasherByTestId(GetTestDasherByTestIdRequest) returns (GetTestDasherByTestIdResponse) {
    option (google.api.http) = {
      post: "/v1/get_test_dasher_by_test_id"
      body: "*"
    };
  }
  rpc GetTestConsumer(GetTestConsumerRequest) returns (GetTestConsumerResponse) {
    option (google.api.http) = {
      post: "/v1/get_test_consumer"
      body: "*"
    };
  }
  rpc ReleaseTestConsumer(ReleaseTestConsumerRequest) returns (ReleaseTestConsumerResponse) {
    option (google.api.http) = {
      put: "/v1/release_test_consumer"
      body: "*"
    };
  }
  rpc GetTestConsumerByTestId(GetTestConsumerByTestIdRequest) returns (GetTestConsumerByTestIdResponse) {
    option (google.api.http) = {
      post: "/v1/get_test_consumer_by_test_id"
      body: "*"
    };
  }
  rpc AddEmailToCompany(AddEmailToCompanyRequest) returns (AddEmailToCompanyResponse) {
    option (google.api.http) = {
      post: "/v1/add_email_to_company"
      body: "*"
    };
  }
  rpc GetCorporatePlans(GetCorporatePlansRequest) returns (GetCorporatePlansResponse) {
    option (google.api.http) = {
      post: "/v1/get_corporate_plans"
      body: "*"
    };
  }
  rpc GetTestMerchant(GetTestMerchantRequest) returns (GetTestMerchantResponse) {
    option (google.api.http) = {
      post: "/v1/get_test_merchant"
      body: "*"
    };
  }
  rpc GetMxPoolStatus(GetMxPoolStatusRequest) returns (GetMxPoolStatusResponse) {
    option (google.api.http) = {get: "/v1/get_mx_pool_status"};
  }
  rpc ReleaseTestMerchant(ReleaseTestMerchantRequest) returns (ReleaseTestMerchantResponse) {
    option (google.api.http) = {
      post: "/v1/release_test_merchant"
      body: "*"
    };
  }
  rpc CreateTestOrder(CreateTestOrderRequest) returns (CreateTestOrderResponse) {
    option (google.api.http) = {
      post: "/v1/create_test_order"
      body: "*"
    };
  }

  rpc CreateDasherShift(CreateDasherShiftRequest) returns (CreateDasherShiftResponse) {
    option (google.api.http) = {
      post: "/v1/create_dasher_shift"
      body: "*"
    };
  }

  rpc BeginDasherShift(BeginDasherShiftRequest) returns (BeginDasherShiftResponse) {
    option (google.api.http) = {
      post: "/v1/begin_dasher_shift"
      body: "*"
    };
  }

  rpc EndDasherShift(EndDasherShiftRequest) returns (EndDasherShiftResponse) {
    option (google.api.http) = {
      post: "/v1/end_dasher_shift"
      body: "*"
    };
  }

  rpc ForceAssignShiftToDelivery(ForceAssignShiftToDeliveryRequest) returns (ForceAssignShiftToDeliveryResponse) {
    option (google.api.http) = {
      post: "/v1/force_assign_shift_to_delivery"
      body: "*"
    };
  }

  rpc DasherAcceptDelivery(DasherAcceptDeliveryRequest) returns (DasherAcceptDeliveryResponse) {
    option (google.api.http) = {
      post: "/v1/dasher_accept_delivery"
      body: "*"
    };
  }

  rpc DasherArrivedAtStore(DasherArrivedAtStoreRequest) returns (DasherArrivedAtStoreResponse) {
    option (google.api.http) = {
      post: "/v1/dasher_arrived_at_store"
      body: "*"
    };
  }

  rpc DasherPickUpDelivery(DasherPickUpDeliveryRequest) returns (DasherPickUpDeliveryResponse) {
    option (google.api.http) = {
      post: "/v1/dasher_pick_up_delivery"
      body: "*"
    };
  }

  rpc DasherArrivedAtConsumer(DasherArrivedAtConsumerRequest) returns (DasherArrivedAtConsumerResponse) {
    option (google.api.http) = {
      post: "/v1/dasher_arrived_at_consumer"
      body: "*"
    };
  }

  rpc DasherDropOffDelivery(DasherDropOffDeliveryRequest) returns (DasherDropOffDeliveryResponse) {
    option (google.api.http) = {
      post: "/v1/dasher_drop_off_delivery"
      body: "*"
    };
  }

  rpc GetTestDasherApplicant(GetTestDasherApplicantRequest) returns (GetTestDasherApplicantResponse) {
    option (google.api.http) = {
      post: "/v1/get_test_dasher_applicant"
      body: "*"
    };
  }

  rpc GetTestDasherApplicantByTestId(GetTestDasherApplicantByTestIdRequest) returns (GetTestDasherApplicantByTestIdResponse) {
    option (google.api.http) = {
      post: "/v1/get_test_dasher_applicant_by_test_id"
      body: "*"
    };
  }

  rpc GetTestDasherApplicantsByEmployeeEmail(GetTestDasherApplicantsByEmployeeEmailRequest) returns (GetTestDasherApplicantsByEmployeeEmailResponse) {
    option (google.api.http) = {
      post: "/v1/get_test_dasher_applicants_by_employee_email"
      body: "*"
    };
  }

  rpc ReleaseTestDasherApplicant(ReleaseTestDasherApplicantRequest) returns (ReleaseTestDasherApplicantResponse) {
    option (google.api.http) = {
      put: "/v1/release_test_dasher_applicant"
      body: "*"
    };
  }

  rpc DasherApplicantSetOnboardingStep(DasherApplicantSetOnboardingStepRequest) returns (DasherApplicantSetOnboardingStepResponse) {
    option (google.api.http) = {
      put: "/v1/dasher_applicant_set_onboarding_step"
      body: "*"
    };
  }
}

enum Brand {
  DOORDASH = 0;
  CAVIAR = 1;
  DOORTEST = 2;
  STOREFRONT = 3;
}

enum ClientType {
  WEB = 0;
  MOBILE = 1;
}

message GetTestMerchantRequest {
  int32 ttl_minutes = 1; // optional
  Brand brand = 2; // optional; defaults to DOORTEST. DOORDASH is unsupported.
  string client_id = 3; // optional
  StoreCreateRequest store = 4; // optional: used as update mask for UpdateStore call in mds and creation mask for adding
  string employee_email = 5; // optional
  ClientType client_type = 6; // optional
  bool use_legacy_data_source_google = 7 [deprecated = true];
}

message GetTestMerchantResponse {
  string error = 1;
  Code error_code = 2;
  string test_id = 3;
  MerchantInfo merchant = 4;
  Brand brand = 5;
}

message GetMxPoolStatusRequest {}

message GetMxPoolStatusResponse {
  string error = 1;
  Code error_code = 2;
}

message ReleaseTestMerchantRequest {
  string test_id = 1;
  Brand brand = 2; // optional
}

message ReleaseTestMerchantResponse {
  string error = 1;
  Code error_code = 2;
}

message GetTestActorsRequest {
  int32 ttl_minutes = 1; // optional
  Brand brand = 2; // optional
  string cx_address = 3; // optional
  bool cx_add_credit_card = 4; // optional
  string dx_address = 5; // optional
  string client_id = 6; // optional
  bool doortest_dasher = 7; // optional
  string employee_email = 8; // optional
  ClientType client_type = 9; // optional
  bool use_legacy_data_source_google = 10 [deprecated = true];
  bool dx_add_test_phone = 11; // optional
  string tenant_id = 12; // optional
}

message UserInfo {
  string email = 1;
  string first_name = 2;
  string last_name = 3;
  string phone_number = 4;
  string password = 5;
  string access_token = 6;
  string user_id = 7;
  string expiry = 8;
  string otp = 9; // code used for logging in SF Cx
  string tenant_id = 10;
}

// subset of mds store service rest api StoreCreateRequest object
// https://github.com/doordash/merchant-apis/blob/master/definitions/merchant-data-service/components/rest-api.yaml#L1584
message StoreCreateRequest {
  string formatted_address = 1;
}

message ConsumerInfo {
  UserInfo user_info = 1;
}

message MerchantInfo {
  UserInfo user_info = 1;
  string store_id = 2;
  TestStoreInfo store_info = 3;
  TestMenuInfo menu_info = 4;
}

message TestStoreInfo {
  string model_id = 1;
  int64 store_id = 2;
  string name = 3;
  string promo_code = 4;
  string pickup_promo_code = 5;
  string city = 6;
  string state = 7;
  string zip = 8;
  string scenario = 9;
  bool is_convenience = 11;
  bool is_caviar = 12;
  string delivery_address = 13;
  string address = 14;
  string business_id = 15;
}

message TestMenuInfo {
  string menu_id = 1;
  string category_id = 2;
  repeated string item_ids = 3;
}

message Location {
  double lat = 1;
  double lng = 2;
}

message DasherInfo {
  UserInfo user_info = 1;
  string dasher_id = 2;
  Location location = 3;
  int64 starting_point_id = 4;
}

message GetTestActorsResponse {
  string error = 1;
  Code error_code = 2;
  string test_id = 3;
  ConsumerInfo consumer = 4;
  MerchantInfo merchant = 5;
  DasherInfo dasher = 6;
  Brand brand = 7;
  ClientType client_type = 8;
}

message GetTestActorsByTestIdResponse {
  GetTestActorsResponse response = 1;
}

message GetTestActorsByEmployeeEmailResponse {
  // latest actors created with this email, for backward compatibility
  GetTestActorsResponse response = 1;
  // list of all active test actors created with this email
  repeated GetTestActorsResponse test_actors = 2;
  string error = 3;
  Code error_code = 4;
}

message ReleaseTestActorsRequest {
  string test_id = 1;
  Brand brand = 2; // optional
}

message ReleaseTestActorsResponse {
  string error = 1;
  Code error_code = 2;
}

message GetTestActorsByTestIdRequest {
  string test_id = 1;
  int32 ttl_minutes = 2; // optional
  Brand brand = 3; // optional
}

message GetTestActorsByEmployeeEmailRequest {
  string email = 1;
  int32 ttl_minutes = 2; // optional
  Brand brand = 3; // optional
}

message GetTestStoresRequest {}

message GetTestStoresResponse {
  string error = 1;
  Code error_code = 2;
  repeated TestStoreInfo stores = 3;
}

message GetTestDasherRequest {
  int32 ttl_minutes = 1; // optional
  Brand brand = 2; // optional
  string dx_address = 3; // optional
  string client_id = 4; // optional
  string pool_id = 5; // optional
  string employee_email = 6; // optional
  ClientType client_type = 7; // optional
  bool use_legacy_data_source_google = 8 [deprecated = true];
  bool dx_add_test_phone = 9; // optional
}

message GetTestDasherResponse {
  string error = 1;
  Code error_code = 2;
  string test_id = 3;
  DasherInfo dasher = 4;
  Brand brand = 5;
  ClientType client_type = 6;
}

message ReleaseTestDasherRequest {
  string test_id = 1;
  Brand brand = 2; // optional
  bool use_legacy_data_source_google = 8 [deprecated = true];
}

message ReleaseTestDasherResponse {
  string error = 1;
  Code error_code = 2;
}

message GetTestDasherByTestIdRequest {
  string test_id = 1;
  int32 ttl_minutes = 2; // optional
  Brand brand = 3; // optional
  bool use_legacy_data_source_google = 4 [deprecated = true];
}

message GetTestDasherByTestIdResponse {
  GetTestDasherResponse response = 1;
}

message GetTestConsumerRequest {
  int32 ttl_minutes = 1; // optional
  Brand brand = 2; // optional
  string cx_address = 3; // optional
  bool cx_add_credit_card = 4; // optional
  string client_id = 5; // optional
  string pool_id = 6; // optional
  string employee_email = 7; // optional
  ClientType client_type = 8; // optional
  bool use_legacy_data_source_google = 9 [deprecated = true];
  string tenant_id = 10; // optional
}

message GetTestConsumerResponse {
  string error = 1;
  Code error_code = 2;
  string test_id = 3;
  ConsumerInfo consumer = 4;
  Brand brand = 5;
  ClientType client_type = 6;
}

message ReleaseTestConsumerRequest {
  string test_id = 1;
  Brand brand = 2; // optional
}

message ReleaseTestConsumerResponse {
  string error = 1;
  Code error_code = 2;
}

message GetTestConsumerByTestIdRequest {
  string test_id = 1;
  int32 ttl_minutes = 2; // optional
  Brand brand = 3; // optional
}

message GetTestConsumerByTestIdResponse {
  GetTestConsumerResponse response = 1;
}

message AddEmailToCompanyRequest {
  string consumer_email = 1;
  string company_name = 2;
  Brand brand = 3;
}

message AddEmailToCompanyResponse {
  string error = 1;
  Code error_code = 2;
  Brand brand = 3;
}

message GetCorporatePlansRequest {
  string consumer_id = 1;
  Brand brand = 2;
}

message GetCorporatePlansResponse {
  string error = 1;
  Code error_code = 2;
  repeated CorporatePlan corporate_plans = 3;
  Brand brand = 4;
}

message CorporatePlan {
  string id = 1;
  string country_code = 2;
}

message CreateTestOrderRequest {
  string consumer_test_id = 1;
  string merchant_test_id = 2;
  int32 num_items_to_add = 3;
  string client_id = 4;
}

message CreateTestOrderResponse {
  string order_uuid = 1;
  string delivery_uuid = 2;
  string error = 3;
  Code error_code = 4;
}

message CreateDasherShiftRequest {
  string dasher_test_id = 1;
  int32 vehicle_id = 2;
  int32 starting_point_id = 3;
  google.protobuf.Int32Value shift_length_minutes = 4;
  google.protobuf.BoolValue is_impromptu_dash = 5;
  string client_id = 6;
}

message CreateDasherShiftResponse {
  int64 shift_id = 1;
  string error = 2;
  Code error_code = 3;
}

message BeginDasherShiftRequest {
  string dasher_test_id = 1;
  Location starting_location = 2;
  int64 shift_id = 3;
  string client_id = 4;
}

message BeginDasherShiftResponse {
  string check_in_time = 1;
  string error = 2;
  Code error_code = 3;
}

message EndDasherShiftRequest {
  string dasher_test_id = 1;
  int64 shift_id = 2;
  string client_id = 3;
}

message EndDasherShiftResponse {
  string error = 1;
  Code error_code = 2;
}

message ForceAssignShiftToDeliveryRequest {
  string delivery_uuid = 1;
  int64 shift_id = 2;
  string client_id = 3;
}

message ForceAssignShiftToDeliveryResponse {
  string error = 1;
  Code error_code = 2;
}

message DasherAcceptDeliveryRequest {
  string dasher_test_id = 1;
  int64 shift_id = 2; // shift_id is equivalent to dash_id
  string delivery_uuid = 3;
  string client_id = 4;
}

message DasherAcceptDeliveryResponse {
  google.protobuf.Timestamp dasher_confirmed_time = 1;
  string error = 2;
  Code error_code = 3;
}

message DasherArrivedAtStoreRequest {
  string dasher_test_id = 1;
  string delivery_uuid = 2;
  string client_id = 3;
}

message DasherArrivedAtStoreResponse {
  google.protobuf.Timestamp dasher_confirmed_at_store_time = 1;
  string error = 2;
  Code error_code = 3;
}

message DasherPickUpDeliveryRequest {
  string dasher_test_id = 1;
  string delivery_uuid = 2;
  string client_id = 3;
}

message DasherPickUpDeliveryResponse {
  google.protobuf.Timestamp actual_pickup_time = 1;
  string error = 2;
  Code error_code = 3;
}

message DasherArrivedAtConsumerRequest {
  string dasher_test_id = 1;
  string delivery_uuid = 2;
  string client_id = 3;
}

message DasherArrivedAtConsumerResponse {
  google.protobuf.Timestamp dasher_confirmed_at_consumer_time = 1;
  string error = 2;
  Code error_code = 3;
}

message DasherDropOffDeliveryRequest {
  string dasher_test_id = 1;
  string delivery_uuid = 2;
  string client_id = 3;
}

message DasherDropOffDeliveryResponse {
  google.protobuf.Timestamp actual_delivery_time = 1;
  string error = 2;
  Code error_code = 3;
}

message GetTestDasherApplicantRequest {
  int32 ttl_minutes = 1; // optional
  string client_id = 2; // optional
  string employee_email = 3; // optional
  ClientType client_type = 4; // optional
  string country = 5;
  string zip_code = 6; // optional
  string onboarding_step = 7; // optional
}

message GetTestDasherApplicantResponse {
  string error = 1;
  Code error_code = 2;
  string test_id = 3;
  DasherApplicantInfo dasher_applicant = 4;
  ClientType client_type = 5;
}

message DasherApplicantInfo {
  UserInfo user_info = 1;
  string dasher_applicant_id = 2;
  string dasher_applicant_unique_link = 3;
  int64 starting_point_id = 4;
}

message ReleaseTestDasherApplicantRequest {
  string test_id = 1;
}

message ReleaseTestDasherApplicantResponse {
  string error = 1;
  Code error_code = 2;
}

message DasherApplicantSetOnboardingStepRequest {
  string test_id = 1;
  string onboarding_step = 2;
}

message DasherApplicantSetOnboardingStepResponse {
  string error = 1;
  Code error_code = 2;
}

message GetTestDasherApplicantByTestIdRequest {
  string test_id = 1;
}

message GetTestDasherApplicantByTestIdResponse {
  GetTestDasherApplicantResponse response = 1;
}

message GetTestDasherApplicantsByEmployeeEmailRequest {
  string employee_email = 1;
}

message GetTestDasherApplicantsByEmployeeEmailResponse {
  repeated GetTestDasherApplicantResponse dasher_applicants = 1;
  string error = 2;
  Code error_code = 3;
}
