syntax = "proto3";

package halo.v1;

import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option java_multiple_files = true;
option java_generic_services = true;
option java_package = "com.doordash.rpc.halo.grpc";
option go_package = "halo";

// Annotation job manager service
service AnnotationJobManagerService {
  // Get available annotation platforms
  rpc GetAnnotationPlatforms (GetAnnotationPlatformsRequest) returns (GetAnnotationPlatformsResponse);
  // Get job metadata
  rpc GetJobMetadata (GetJobMetadataRequest) returns (GetJobMetadataResponse);
  // Get all jobs metadata with pagination
  rpc GetJobsMetadata (GetJobsMetadataRequest) returns (GetJobsMetadataResponse);
  // Post new job
  rpc PostNewJob (PostNewJobRequest) returns (PostNewJobResponse);
  // Put update job
  rpc PutUpdateJob (PutUpdateJobRequest) returns (PutUpdateJobResponse);
  // save Appen Unit
  rpc SaveAppenUnit(SaveAppenUnitRequest) returns (SaveAppenUnitResponse);
}

// Enum for annotation platforms
enum AnnotationPlatform {
  // Unknown
  ANNOTATION_PLATFORM_UNSPECIFIED = 0;
  // Appen workflow
  ANNOTATION_PLATFORM_APPEN = 1;
  // Manual workflow
  ANNOTATION_PLATFORM_MANUAL = 2;
  // Manual workflow V2
  ANNOTATION_PLATFORM_MANUAL_V2 = 3;
}

// Request for getting available annotation platforms
message GetAnnotationPlatformsRequest {}

// Response for getting available annotation platforms
message GetAnnotationPlatformsResponse {
  // list of available annotation platforms
  repeated AnnotationPlatform annotation_platforms = 1;
}

// Request for getting job metadata
message GetJobMetadataRequest {
  // target job id
  string id = 1;
}

// Response for getting job metadata
message GetJobMetadataResponse {
  // job metadata
  JobMetadata job_metadata = 1;
  // associated annotation platform
  AnnotationPlatform annotation_platform = 2;
}

// Job metadata
message JobMetadata {
  // reserved index for snowflake_output_table_name
  reserved 5;
  // reserved name for snowflake_output_table_name
  reserved "snowflake_output_table_name";
  // job id
  string id = 1;
  // job name
  string name = 2;
  // job status
  bool is_running = 3;
  // job tag
  string job_tag = 4;
  // minimum threshold to execute the Databricks job
  int32 min_annotated_data_count = 6;
  // Databricks job id
  string databricks_job_id = 7;
  // created at
  google.protobuf.Timestamp created_at = 8;
  // updated at
  google.protobuf.Timestamp updated_at = 9;
  // created by
  string created_by = 10;
  // updated by
  string updated_by = 11;
  // latest Databricks job execution date timestamp
  google.protobuf.Timestamp last_databricks_executed_at = 12;
  // error message if any
  string error_details = 13;
  // last success at
  google.protobuf.Timestamp last_success_at = 14;
  // data source table name
  google.protobuf.StringValue source_table_name = 15;
  // number of rows to be skipped from the source table
  google.protobuf.Int32Value skip_row_count = 16;
  // number of rows to be considered from the source table
  google.protobuf.Int32Value target_row_count = 17;
  // minimum threshold in finishing ratio to execute the Databricks job
  float min_annotated_data_percentage = 18;
}

// Request for getting multiple jobs metadata with pagination
message GetJobsMetadataRequest {
  // target annotation platform
  AnnotationPlatform annotation_platform = 1;
  // page number
  int32 page_num = 2;
  // page size
  int32 page_size = 3;
}

// Response for getting multiple jobs metadata with pagination
message GetJobsMetadataResponse {
  // jobs metadata
  repeated JobMetadata jobs_metadata = 1;
  // associated annotation platform
  AnnotationPlatform annotation_platform = 2;
  // page number
  int32 page_num = 3;
  // page size
  int32 page_size = 4;
  // total job count
  int32 total_jobs_count = 5;
  // total page count
  int32 total_pages_count = 6;
}

// Request for submitting new job
message PostNewJobRequest {
  // reserved index for snowflake_output_table_name
  reserved 3;
  // reserved name for snowflake_output_table_name
  reserved "snowflake_output_table_name";
  // job name
  string name = 1;
  // job tag
  string job_tag = 2;
  // minimum threshold to execute the Databricks job
  int32 min_annotated_data_count = 4;
  // Databricks job id
  string databricks_job_id = 5;
  // annotation platform
  AnnotationPlatform annotation_platform = 6;
  // email
  string created_by_email = 7;
  // data source table name
  google.protobuf.StringValue source_table_name = 8;
  // number of rows to be skipped from the source table
  google.protobuf.Int32Value skip_row_count = 9;
  // number of rows to be considered from the source table
  google.protobuf.Int32Value target_row_count = 10;
  // minimum threshold in finishing ratio to execute the Databricks job
  float min_annotated_data_percentage = 11;
}

// Response for submitting new job
message PostNewJobResponse {
  // job id
  string id = 1;
  // associated annotation platform
  AnnotationPlatform annotation_platform = 2;
}

// Request for updating existing job
message PutUpdateJobRequest {
  // reserved index for snowflake_output_table_name
  reserved 5;
  // reserved name for snowflake_output_table_name
  reserved "snowflake_output_table_name";
  // job id
  string id = 1;
  // job name
  string name = 2;
  // job status
  bool is_running = 3;
  // job tag
  string job_tag = 4;
  // minimum threshold to execute the Databricks job
  int32 min_annotated_data_count = 6;
  // Databricks job id
  string databricks_job_id = 7;
  // email
  string updated_by_email = 8;
  // data source table name
  google.protobuf.StringValue source_table_name = 9;
  // number of rows to be skipped from the source table
  google.protobuf.Int32Value skip_row_count = 10;
  // number of rows to be considered from the source table
  google.protobuf.Int32Value target_row_count = 11;
  // minimum threshold in finishing ratio to execute the Databricks job
  float min_annotated_data_percentage = 12;
}

// Response for updating existing job
message PutUpdateJobResponse {
  // job metadata
  JobMetadata job_metadata = 1;
  // associated annotation platform
  AnnotationPlatform annotation_platform = 2;
}

// request for SaveAppenUnit (to snowflake table fact_annotations_raw)
message SaveAppenUnitRequest {
  // HALO job_id
  string job_id = 1;
  // Appen unit id
  string unit_id = 2;
  // unit updated at timestamp
  google.protobuf.Timestamp unit_updated_at = 3;
  // Appen unit state
  string state = 4;
  // Appen unit agreement
  float agreement = 5;
  // Appen unit's judgement ids
  string judegment_ids = 6;
  // Appen unit annotation result
  string extended_annotation = 7;
  // created_at timestamp
  google.protobuf.Timestamp created_at = 8;
  // updated_at timestamp
  google.protobuf.Timestamp updated_at = 9;
  // HALO job tag
  string job_tag = 10;
}

// response for SaveAppenUnit
message SaveAppenUnitResponse {}
