syntax = "proto3";

package com.doordash.drive.common;

import "google/protobuf/wrappers.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.drive.common";

/*
   General list of fields in any request for multiple purposes (mainly for field error indication) i.e.
   If a client passes in an invalid field, we can use this enum to pass back into
   an error response to tell the client which field is erroring out and should be fixed.
*/
enum RequestField {
  // unspecified
  REQUEST_FIELD_UNSPECIFIED = 0;

  /* ===== Address-related fields ===== */
  REQUEST_FIELD_PICKUP_ADDRESS = 1;
  REQUEST_FIELD_DROPOFF_ADDRESS = 2;

  /* ===== Business-related fields ===== */
  REQUEST_FIELD_BUSINESS = 100;
  REQUEST_FIELD_BUSINESS_ID = 101;

  /* ===== Consumer-related fields ===== */
  REQUEST_FIELD_CONSUMER_PHONE_NUMBER = 300;
  REQUEST_FIELD_CONSUMER_FIRST_NAME = 301;
  REQUEST_FIELD_CONSUMER_LAST_NAME = 302;

  /* ===== Order-related fields ===== */

  // Value of the order
  REQUEST_FIELD_ORDER_SUBTOTAL = 400;
  // Total value of the order
  // Use case(s):
  // - Cash on delivery in some endpoints like Drive Public API V1 and Portal
  REQUEST_FIELD_ORDER_TOTAL = 401;
  REQUEST_FIELD_DRIVER_TIP = 402;
  REQUEST_FIELD_NUM_ITEMS = 403;
  REQUEST_FIELD_ALCOHOL = 404;
  REQUEST_FIELD_CASH = 405;
  REQUEST_EXTERNAL_DELIVERY_ID = 406;

  /* ===== Payment-related fields ===== */
  REQUEST_FIELD_PAYMENT_METHOD = 500;
  REQUEST_FIELD_PAYER_ENTITY_TYPE = 501;
  REQUEST_FIELD_PAYER_ENTITY_ID = 502;

  /* ===== Scheduling details-related fields ===== */
  REQUEST_FIELD_PICKUP_TIME = 600;
  REQUEST_FIELD_DROPOFF_TIME = 601;
  REQUEST_FIELD_SCHEDULING_WINDOWS = 602;

  /* ===== Store-related fields ===== */
  REQUEST_FIELD_STORE = 700;
  REQUEST_FIELD_STORE_ID = 701;
  REQUEST_PICKUP_PHONE_NUMBER = 702;

  /* ===== User-related fields ===== */
  REQUEST_FIELD_USER_ID = 800;
  REQUEST_FIELD_USER_EMAIL = 801;
}

// Address
message Coordinate {
  google.protobuf.DoubleValue latitude = 1;
  google.protobuf.DoubleValue longitude = 2;
}

message Address {
  Coordinate location = 1;
  google.protobuf.StringValue street = 2;
  google.protobuf.StringValue city = 3;
  google.protobuf.StringValue state = 4;
  google.protobuf.StringValue postal_code = 5;
  google.protobuf.StringValue unit = 6;
  google.protobuf.StringValue google_place_id = 7;
}

// Authentication
message DriveUser {
  int64 id = 1;
  bool isEmployee = 2;
}

// ISO-3166 alpha-2 country codes - https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2
enum CountryCode {
  US = 0;
  CA = 1;
  AU = 2;
  DE = 3;
  JP = 4;
  NZ = 5;
  PR = 6;
}

// Money
enum Currency {
  USD = 0;
  CAD = 1;
  AUD = 2;
  EUR = 3;
  JPY = 4;
  NZD = 5;
}

// FulfillmentType (aka OrderType), used in partnerships, promotions, etc.
enum FulfillmentType {
  FULFILLMENT_TYPE_UNSPECIFIED = 0;
  SMALL_ORDER_FULFILLMENT = 1;
  LARGE_ORDER_FULFILLMENT = 2;
  ROUTE_FULFILLMENT = 3;
}

message DriveFees {
  // Example drive fee key values
  // Drive_Cancellation_Fee
  // Drive _Return_Delivery_Fee
  // Drive_Aggregator_Fee
  // Drive_Acceptance_Rate_Fee
  // Drive_Support_Fee (delivery level)
  // This is used by Subway Canada only, don't extend this, move to DriveFeeComponent
  map<string, int64> drive_fees = 1;
}

message DriveFeeComponent {
  // DriveFeeComponentType is ...
  enum DriveFeeComponentType {
    DRIVE_FEE_COMPONENT_TYPE_UNSPECIFIED = 0;
    // components, coming from evaluation engine
    DISTANCE_BASED_FEE = 1;
    ORDER_VALUE_BASED_FEE = 2;
    SERVICE_FEE = 3;
    MX_SUBSIDY = 4;
    OTHER = 5;

    // starndard fee, coming from partnership and promotion
    DASHER_REGULATORY_FEE = 6;
    PROMOTION = 7;

    // continue components coming from evaluation engine
    SMALL_ORDER_FEE = 8;
    FLAT_FEE = 9;
    DWT_FEE = 10;
    WEIGHT_BASED_FEE = 11;
    COMMISSION_FEE = 12;
    CASH_FEE = 13;
  }

  DriveFeeComponentType type = 1;
  google.protobuf.Int64Value amount = 2;
  // optional, overwrite the public api returned value
  google.protobuf.StringValue display_name = 3;
}

message TaxComponent {
  // Different tax types
  enum TaxType {
    TAX_TYPE_UNSPECIFIED = 0;
    // just tax, used for general tax
    GST_HST = 1;
    QST = 2;
    PST = 3;
  }

  TaxType type = 1;
  google.protobuf.Int64Value amount = 2;
}

// Drive order return types
enum ReturnType {
  COLD_CHAIN = 0;
  CUSTOMER_UNAVAILABLE = 1;
  MULTI_DROPOFF = 2;
  OTHER = 3;
  CHECK_ROUND_TRIP = 4;
  CASH_ROUND_TRIP = 5;
  PIZZA_BAG_ROUND_TRIP = 6;
}

// Drive API Names
enum DriveAPI {
  UNKNOWN = 0;
  DELIVERY_ESTIMATES = 1;
  DELIVERY_VALIDATE = 2;
  DELIVERY_CREATE = 3;
  DELIVERY_GET = 4;
  DELIVERY_CANCEL = 5;
  DELIVERY_PATCH = 6;
  OLO_QUOTE = 7;
  OLO_QUOTE_ACCEPT = 8;
  OLO_DELIVERY_STATUS = 9;
  OLO_DELIVERY_CANCEL = 10;
  OLO_SERVICE_AREA = 11;
  MARK_ORDER_READY_FOR_PICKUP = 12;
  MCD_DELIVERY_CREATE = 13;
  MCD_DELIVERY_GET = 14;
  MCD_DELIVERY_CANCEL = 15;
  MCD_DELIVERY_QUOTE = 16;
  MARK_ORDER_READY_FOR_PICKUP_STATIC = 17;
  // McD order ready signal
  MCD_ORDER_READY_SIGNAL = 18;
}

// Store deactivation status
enum StoreDeactivationStatus {
  // Unknown status.
  STATUS_UNSPECIFIED = 0;
  // Store is active and can accept deliveries.
  ACTIVE = 1;
  // Store is inactive and cannot accept deliveries.
  INACTIVE = 2;
}

// Reasons for the status being INACTIVE
enum ReasonsForDeactivation {
  OTHER_REASON = 0;
  CREDIT_HOLD = 1;
  DUPLICATE_STORE = 2;
  NO_LONGER_USE_DRIVE = 3;
  TEST_STORE = 4;
  DID_NOT_SIGN_REGULATORY_FEE_ADDENDUM = 5;
  CONTRACT_COMPLIANCE = 6;
  CHANGE_OF_OWNERSHIP = 7;
  SUSPECTED_FOR_FRAUD = 8;
}

message ReasonsForDeactivationList {
  repeated ReasonsForDeactivation reason_for_deactivation = 1;
}
