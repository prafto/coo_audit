syntax = "proto3";

package com.doordash.drive.workflow_platform_service.v1;

import "common/service_client_config.proto";
import "experience_reliability_service/workflow_platform.proto";
import "google/protobuf/wrappers.proto";
import "workflow_platform/workflow_platform_extended.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.drive.workflow_platform_service";

// WorkflowPlatformService used for implement drive APIs for workflow platform to call
service WorkflowPlatformService {
  // ExecuteAutomation is used as entry point for workflow platform to execute a node automation
  rpc ExecuteAutomation(ExecuteAutomationRequest) returns (ExecuteAutomationResponse);
}

// request for executing automation
message ExecuteAutomationRequest {
  // workflow where this node belongs
  int32 workflow_id = 1;

  // name or library_name of the automation
  string automation_name = 2;

  // kept as string to be backwards compatible
  string automation_type = 3; // system_decision, consequence, copy_value

  // session data that's passed between node executions. Useful for tracking purposes (e.g. request_id)
  experience_reliability_service.workflow_platform_api.ExecuteWorkflowSessionData session_data = 5;

  // current contexts within workflow execution
  repeated experience_reliability_service.workflow_platform_api.WorkflowContextV2 contexts = 7;

  // node's input arguments
  repeated experience_reliability_service.workflow_platform_api.NodeArgumentValue arguments = 8;

  // optional metadata from the client
  experience_reliability_service.workflow_platform_api.ExecuteWorkflowRequestMetadata metadata = 9;

  // Map of CustomInputFieldValue mapped to the label name
  map<string, experience_reliability_service.workflow_platform_api.CustomInputFieldValue> custom_input_field_values = 10;

  // optional
  string workflow_version_number = 11;
  //optional
  string workflow_status = 12;

  // things we want to pass regarding this execution, acts as another metadata but more concise of what data we are sending.
  workflow_platform.workflow_platform_extended.v1.ExecutionPayload execution_payload = 13;
}

// response for executing automation
message ExecuteAutomationResponse {
  // workflow where this node belongs
  int32 workflow_id = 1;

  // name or library_name of the automation
  string automation_name = 2;

  // kept as string to be backwards compatible
  string automation_type = 3; // system_decision, consequence, copy_value

  // only system_decision and copy_value can have output.
  workflow_platform.workflow_platform_extended.v1.AutomationOutput output = 4;

  // session data that's passed between node executions. Useful for tracking purposes (e.g. request_id)
  experience_reliability_service.workflow_platform_api.ExecuteWorkflowSessionData session_data = 6;

  // services are free to add contexts but should not modify existing ones.
  repeated experience_reliability_service.workflow_platform_api.WorkflowContextV2 contexts = 8;

  // services are free to add the various information related to the step like error , output etc
  repeated experience_reliability_service.workflow_platform_api.WorkflowStepExecutionMetadata workflow_step_execution_metadata = 9;
}
