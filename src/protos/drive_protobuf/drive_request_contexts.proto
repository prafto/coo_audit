syntax = "proto3";

package com.doordash.drive.api.request_contexts.v1;

import "google/protobuf/wrappers.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.drive.api.request_contexts.v1";

// Describes what kind of product the endpoint/object (where this is used) is coming from
enum ProductSource {
  // Default
  PRODUCT_SOURCE_UNSPECIFIED = 0;
  // Source is the merchant portal order form product
  PRODUCT_SOURCE_MERCHANT_PORTAL_ORDER_FORM = 1;
  // Source is the merchant portal bulk uploader product
  PRODUCT_SOURCE_MERCHANT_PORTAL_BULK_UPLOADER = 2;
  // Source is the Drive Public API V1
  PRODUCT_SOURCE_DRIVE_PUBLIC_API_V1 = 3;
  // Source is Dispatch Customer Support (app-customer-support) redelivery form
  PRODUCT_SOURCE_DISPATCH_CUSTOMER_SUPPORT_REDELIVERY_FORM = 4;
  // Source is merchant portal redelivery form
  PRODUCT_SOURCE_MERCHANT_PORTAL_REDELIVERY_FORM = 5;
  /**
   * Source is merchant portal loading action e.g. endpoint to get initial state information for Mx Portal
   * One example is the Mx Portal store endpoint in which the portal fetches all store-related info
   * that is used throughout Mx Portal. "Loading" can be seen as its own sort of product/action and not tied
   * to any particular specific product page.
   */
  PRODUCT_SOURCE_MERCHANT_PORTAL_APP_LOAD = 6;
  /**
   * Source is from merchant portal but specific subproduct/source is unidentified. Use case: Fallback if specific subproduct
   * Use case:
   * - Request comes in from Mx Portal but was unable to be mapped to more specific ProductSource enums. But because we know
   *   the request is from Mx Portal, use this enum as fallback
   */
  PRODUCT_SOURCE_MERCHANT_PORTAL = 7;
  // Source is the merchant portal request refund form for a single order.
  PRODUCT_SOURCE_MERCHANT_PORTAL_REQUEST_REFUND_FORM = 8;
  // Source is the Dispatch Customer Support tool.
  PRODUCT_SOURCE_DISPATCH_CUSTOMER_SUPPORT = 9;
  // Source is the outage processor tool.
  PRODUCT_SOURCE_OUTAGE_PROCESSOR = 10;
  // Source is Drive Public API V2.
  PRODUCT_SOURCE_DRIVE_PUBLIC_API_V2 = 11;
  // Source is from Admin Gateway Bulk Tools.
  PRODUCT_SOURCE_ADMIN_GATEWAY_BULK_TOOLS = 12;
  // Source is Cx-facing Order Tracking Page
  PRODUCT_SOURCE_CUSTOMER_ORDER_TRACKING_PAGE = 13;
  // Source is from Legacy Bulk Tools
  PRODUCT_SOURCE_LEGACY_BULK_TOOLS = 14;
  // Source is THQ's Order Resolution Tool
  PRODUCT_SOURCE_THQ_ORDER_RESOLUTION_TOOL = 15;
  // Source is from Parcel Redelivery tool to switch stores
  PRODUCT_SOURCE_PARCEL_REDELIVERY_SWITCH_STORES_TOOL = 16;
  // Source is automated email refund processing triggered by Salesforce
  PRODUCT_SOURCE_DRIVE_SUPPORT_EMAIL_AUTOMATION = 17;
  // Source is consumer-facing support chat
  PRODUCT_SOURCE_CONSUMER_SUPPORT_CHAT = 18;
  // Source is the bulk refund overrides
  PRODUCT_SOURCE_BULK_REFUND_OVERRIDE_TOOL = 19;
}

// User-facing details describing the user that is making the incoming request
message UserSubmitContext {
  // ID of the user
  google.protobuf.Int64Value userId = 1;
  // Email of the user
  google.protobuf.StringValue email = 2;
  // User's language preference e.g. en-US
  google.protobuf.StringValue locale = 3;
}

// Product-facing details describing the incoming request
message ProductSubmitContext {
  ProductSource product_source = 1;
}

// Describes an incoming request with some context such as product, platform, user, etc
message RequestSubmissionContext {
  // User-facing details describing the user that is making the incoming request
  UserSubmitContext user_context = 1;
  // Product-facing details describing the incoming request
  ProductSubmitContext product_context = 2;
}
