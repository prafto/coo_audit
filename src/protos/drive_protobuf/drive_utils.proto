syntax = "proto3";

// buf:lint:ignore DIRECTORY_SAME_PACKAGE
// The package of the generated code will be overwritten by java_package
package drive_utils_service.v1;

import "google/protobuf/wrappers.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_outer_classname = "DriveUtilsProtos";
option java_package = "com.doordash.drive.grpc.utils.v1";

// Utilities enpoints for Drive Service.
service DriveUtilsService {
  // Dynamically sends a task to run in cadence. This is only intended for sandboxes testing purposes.
  rpc SendTaskToCadence(SendTaskToCadenceRequest) returns (SendTaskToCadenceResponse);

  // Get fulfillment tags for a given business and delivery. This is intended for segmenting experiments using DVs.
  rpc GetFulfillmentTags(GetFulfillmentTagsRequest) returns (GetFulfillmentTagsResponse);

  // Temporary endpoint to bulk update the cx comms template to store {business_name} placeholder instead of {store_name} in configurations (drive db)
  rpc BulkUpdateCxCommsConfigPlaceholderTxt(BulkUpdateCxCommsConfigPlaceholderTxtRequest) returns (BulkUpdateCxCommsConfigPlaceholderTxtResponse);
}

// Request to bulk update the cx comms template to store {business_name} placeholder instead of {store_name} in configurations (drive db)
message BulkUpdateCxCommsConfigPlaceholderTxtRequest {
  // List of entity ID. Required.
  repeated google.protobuf.StringValue entity_id = 1;
  // The entity type. Required.
  EntityType entity_type = 2;
  // The user ID of the user making this change. Required.
  google.protobuf.Int64Value user_id = 3;
}

// Response after bulk update of the cx comms template to store {business_name} placeholder instead of {store_name}
message BulkUpdateCxCommsConfigPlaceholderTxtResponse {
  // List of entity ids for which update has failed
  repeated google.protobuf.StringValue entity_id = 1;
  // The associated type
  EntityType entity_type = 2;
}

// Supported types for cx comms bulk update
enum EntityType {
  // Nothing
  ENTITY_TYPE_UNSPECIFIED = 0;
  // Developer
  ENTITY_TYPE_DEVELOPER = 1;
  // Business
  ENTITY_TYPE_BUSINESS = 2;
  // Store
  ENTITY_TYPE_STORE = 3;
}

// Request to dynamically create a workflow to run on cadence.
message SendTaskToCadenceRequest {
  // Fully qualified class name that have the cadence task.
  // Example com.doordash.drive.core.tasks.common.SampleTask
  string class_name = 1;

  // Method name within the class. It has to be annotated with @CadenceTask.
  string method_name = 2;

  // The input to the function, it has to be json formmated as an array. Example:
  // [
  //    123,
  //    false,
  //    "A string",
  //    {
  //       "field_1": "Another string",
  //       "filed_2": [123, 456, 789]
  //    }
  // ]
  string input = 3;
}

// Respose of cadence task creation.
message SendTaskToCadenceResponse {}

// Request to get Fulfillment tags for a business and delivery
message GetFulfillmentTagsRequest {
  //Integer delivery ID
  google.protobuf.Int64Value delivery_id = 1;
}

// Response from drive containing list of FulfillmentTags
message GetFulfillmentTagsResponse {
  //List of FulfillmentTag associated with business and delivery
  repeated FulfillmentTag fulfillment_tags = 1;
}

//Set of values for fulfillment tags associated with a business and delivery.
enum FulfillmentTag {
  //Unable to determine a tag
  FULFILLMENT_TAG_UNSPECIFIED = 0;
  //Pizza delivery
  FULFILLMENT_TAG_PIZZA = 1;
  //Parcel/DashLink delivery
  FULFILLMENT_TAG_PARCEL = 2;
  //Drive DSD delivery
  FULFILLMENT_TAG_DSD = 3;
  //Drive DSS delivery
  FULFILLMENT_TAG_DSS = 4;
  //Drive P2P delivery
  FULFILLMENT_TAG_P2P = 5;
  //Drive Pharmacy delivery
  FULFILLMENT_TAG_PHARMACY = 6;
  //Drive alcohol delivery
  FULFILLMENT_TAG_ALCOHOL = 7;
  //Flower delivery
  FULFILLMENT_TAG_FLOWERS = 8;
  //delivery has cash on delivery enabled.
  FULFILLMENT_TAG_CASH_ON_DELIVERY = 9;
  //Retail delivery.
  FULFILLMENT_TAG_RETAIL = 10;
  //Grocery delivery.
  FULFILLMENT_TAG_GROCERY = 11;
  //Voice delivery.
  FULFILLMENT_TAG_VOICE = 12;
  //SOF
  FULFILLMENT_TAG_SOF = 13;
  //LOF
  FULFILLMENT_TAG_LOF = 14;
}

// Details for driver tip
// Used both in drive_portal_api and drive_public_api
message DriverTipDetails {
  // details when zero tip has been entered
  DriverZeroTipDetails driver_zero_tip_details = 1;
}

// Details when merchant has entered zero tips for the driver
message DriverZeroTipDetails {
  // Reason for giving 0 tip
  DriverZeroTipReason driver_zero_tip_reason = 1;

  // Manual entered string value for reason details
  google.protobuf.StringValue driver_zero_tip_reason_details = 2;
}

// Driver zero tip reason enum
enum DriverZeroTipReason {
  // Default
  DRIVER_ZERO_TIP_REASON_UNSPECIFIED = 0;
  // Other
  DRIVER_ZERO_TIP_REASON_OTHER = 1;
  // Redelivery
  DRIVER_ZERO_TIP_REASON_REDELIVERY = 2;
  // No tip provided from customer
  DRIVER_ZERO_TIP_REASON_NO_TIP_FROM_CUSTOMER = 3;
  // Store does not collect tips
  DRIVER_ZERO_TIP_REASON_STORE_DOES_NOT_COLLECT_TIPS = 4;
}
