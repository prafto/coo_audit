syntax = "proto3";

// buf:lint:ignore DIRECTORY_SAME_PACKAGE
package drive_service.drive_order;

import "common/common.proto";
import "drive_order_service/drive_order.proto";
import "drive_protobuf/drive_public_api.proto";
import "drive_protobuf/drive_support_as_a_service_config.proto";
import "drive_protobuf/drive_transaction.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.drive.drive_order";

service DriveOrderAPI {
  rpc GetDriveOrderByDeliveryId(DeliveryRequest) returns (DriveOrderResponse);

  // Get Drive order by DriveOrderId
  rpc GetDriveOrderByDriveOrderId(GetDriveOrderByDriveOrderIdRequest) returns (GetDriveOrderByDriveOrderIdResponse);

  // Get Drive order by DoorDash ID
  rpc GetDriveOrderByDoorDashId(GetDriveOrderByDoorDashIdRequest) returns (GetDriveOrderByDoorDashIdResponse);

  // Get Drive order by URL code
  rpc GetDriveOrderByUrlCode(GetDriveOrderByUrlCodeRequest) returns (GetDriveOrderByUrlCodeResponse);

  // Call from ERS to Drive for the dispatch scenario. Use only for Dispatch page purposes, and please do not use elsewhere.
  rpc GetDriveOrderForDispatch(DeliveryRequestForDispatch) returns (DriveOrderDispatchResponse);

  // get DoordashId from ExternalDeliveryId
  rpc GetDoordashIdByExternalDeliveryId(GetDoordashIdByExternalDeliveryIdRequest) returns (GetDoordashIdByExternalDeliveryIdResponse);

  // get DeliveryId by externalDeliverId
  rpc GetDeliveryIdByExternalDeliveryId(GetDeliveryIdByExternalDeliveryIdRequest) returns (GetDeliveryIdByExternalDeliveryIdResponse);
}

message DeliveryRequest {
  // Delivery ID
  int64 delivery_id = 1;
}

message GetDriveOrderByDoorDashIdRequest {
  // DoorDash ID
  google.protobuf.StringValue doordash_id = 1;
}

message GetDriveOrderByDoorDashIdResponse {
  // Drive Order
  DriveOrderResponse drive_order = 1;
}

message GetDriveOrderByDriveOrderIdRequest {
  // DriveOrder ID
  int64 drive_order_id = 1;
}

message GetDriveOrderByDriveOrderIdResponse {
  // Drive Order
  DriveOrderResponse drive_order = 1;
}

message DeliveryRequestForDispatch {
  // Delivery ID
  int64 delivery_id = 1;
  // Merchant Store ID for SaaS Config lookup
  google.protobuf.Int64Value store_id = 2;
  // Business ID for SaaS Config lookup
  google.protobuf.Int64Value business_id = 3;
  // Developer ID for SaaS Config lookup
  google.protobuf.Int64Value developer_id = 4;
}

message DriveOrderResponse {
  int64 drive_order_id = 1;

  google.protobuf.Timestamp pickup_window_start_time = 2;
  google.protobuf.Timestamp pickup_window_end_time = 3;
  google.protobuf.Timestamp delivery_window_start_time = 4;
  google.protobuf.Timestamp delivery_window_end_time = 5;

  google.protobuf.StringValue pickup_instructions = 6;
  google.protobuf.StringValue pickup_phone_number = 7;
  common.PhoneNumberComponents pickup_phone_number_components = 8;
  google.protobuf.StringValue external_store_id = 9;
  google.protobuf.StringValue external_order_reference = 10;
  google.protobuf.Int64Value return_delivery_id = 11;
  google.protobuf.Int64Value commission_total = 12;
  google.protobuf.BoolValue is_catering_setup = 13;
  google.protobuf.BoolValue is_route_based = 14;
  google.protobuf.BoolValue contains_alcohol = 15;

  google.protobuf.StringValue order_type = 16;
  google.protobuf.BoolValue is_return_delivery = 17;
  google.protobuf.Int32Value min_age_requirement = 18;
  google.protobuf.BoolValue barcode_scanning_required = 19;
  google.protobuf.Int32Value setup_pay = 20;
  google.protobuf.Timestamp tip_pending_until = 21;
  google.protobuf.Int32Value sof_pay_boost = 22;
  google.protobuf.BoolValue is_contactless_delivery = 23;
  google.protobuf.StringValue external_delivery_id = 24;
  google.protobuf.StringValue doordash_id = 25;
  Customer customer = 26;
  google.protobuf.StringValue external_pickup_zone_id = 27;
  google.protobuf.Int32Value post_tip = 28;
  google.protobuf.Int32Value num_items = 29;
  google.protobuf.Int32Value order_value = 30;
  google.protobuf.Int32Value tip = 31;
  google.protobuf.Int32Value commission_tax = 32;
  google.protobuf.Timestamp quoted_pickup_time = 33;
  google.protobuf.Timestamp quoted_delivery_time = 34;
  google.protobuf.Int64Value delivery_id = 35;
  google.protobuf.StringValue pickup_business_name = 36;
  google.protobuf.Int64Value store_id = 37;
  google.protobuf.BoolValue is_p2p = 38;
  common.PaymentMethod payment_method = 39;
  common.Location store_point = 40;
  google.protobuf.StringValue delivery_creation_status = 41;
  com.doordash.drive.OrderContains order_contains = 42;
  DasherEarningsType dasher_earnings_type = 43;
  google.protobuf.Int64Value developer_id = 44;
  google.protobuf.Int64Value order_volume = 45;
  LineOfBusiness line_of_business = 46;
  google.protobuf.BoolValue is_delivery_returnable = 47;
  OrderRouteType order_route_type = 48;
  OrderRouteItem order_route_items = 49 [deprecated = true];
  repeated OrderRouteItem order_route_item_list = 50;
  ReturnDeliveryType return_delivery_type = 51;
  DropoffVerificationDetails dropoff_verification_details = 52;
  repeated DriveOrderItem items = 53;
}

// Dropoff verification details
message DropoffVerificationDetails {
  // Details related to pincode verification at dropoff
  PinCodeVerificationDetails pin_code_verification_details = 1;
}

// Pin code verification details
message PinCodeVerificationDetails {
  // 4 digit number that needs to be given by Cx to Dx to verify Cx identity
  string pin_code_value = 1;
}

// Order route type for drive order
enum OrderRouteType {
  // Unspecified
  ORDER_ROUTE_TYPE_UNSPECIFIED = 0;
  // Roundtrip, the original order must have a second delivery back to the mx
  ORDER_ROUTE_TYPE_ROUNDTRIP = 1;
}

// Order route item for drive order
enum OrderRouteItem {
  // Unspecified
  ORDER_ROUTE_ITEM_UNSPECIFIED = 0;
  // Items to bring back to the mx
  ORDER_ROUTE_ITEM_CHECK = 1;
  // Cash to bring back to the mx
  ORDER_ROUTE_ITEM_CASH = 2;
  // Pizza bag to bring back to the mx
  ORDER_ROUTE_ITEM_PIZZA_BAG = 3;
}

// dasher earnings type for a drive order, unspecified, doordash, dashlink
enum DasherEarningsType {
  // unspecified dasher earnings type
  DASHER_EARNINGS_TYPE_UNSPECIFIED = 0;

  // doordash dasher earning type
  DASHER_EARNINGS_TYPE_DOORDASH = 1;

  // dashlink dasher earning type
  DASHER_EARNINGS_TYPE_DASHLINK = 2;
}

// return delivery type
enum ReturnDeliveryType {
  // Unspecified
  RETURN_DELIVERY_TYPE_UNSPECIFIED = 0;
  // Cold chain
  RETURN_DELIVERY_TYPE_COLD_CHAIN = 1;
  // multi dropoff
  RETURN_DELIVERY_TYPE_MULTI_DROPOFF = 2;
  // check round trip
  RETURN_DELIVERY_TYPE_CHECK_ROUND_TRIP = 3;
  // cash round trip
  RETURN_DELIVERY_TYPE_CASH_ROUND_TRIP = 4;
  // other
  RETURN_DELIVERY_TYPE_OTHER = 5;
  // pizza bag return trip
  RETURN_DELIVERY_TYPE_PIZZA_BAG_RETURN = 6 [deprecated = true];
  // pizza bag round trip
  RETURN_DELIVERY_TYPE_PIZZA_BAG_ROUND_TRIP = 7;
}

// Response object from Drive to ERS for the Dispatch scenario
message DriveOrderDispatchResponse {
  google.protobuf.Int64Value drive_order_id = 1;

  google.protobuf.Timestamp pickup_window_start_time = 2;
  google.protobuf.Timestamp pickup_window_end_time = 3;
  google.protobuf.Timestamp delivery_window_start_time = 4;
  google.protobuf.Timestamp delivery_window_end_time = 5;

  google.protobuf.StringValue pickup_instructions = 6;
  google.protobuf.StringValue pickup_phone_number = 7;
  common.PhoneNumberComponents pickup_phone_number_components = 8;
  google.protobuf.StringValue external_store_id = 9;
  google.protobuf.StringValue external_order_reference = 10;
  google.protobuf.Int64Value return_delivery_id = 11;
  google.protobuf.Int64Value commission_total = 12;
  google.protobuf.BoolValue is_catering_setup = 13;
  google.protobuf.BoolValue is_route_based = 14;
  google.protobuf.BoolValue contains_alcohol = 15;

  google.protobuf.StringValue order_type = 16;
  google.protobuf.BoolValue is_return_delivery = 17;
  google.protobuf.Int32Value min_age_requirement = 18;
  google.protobuf.BoolValue barcode_scanning_required = 19;
  google.protobuf.Int32Value setup_pay = 20;
  google.protobuf.Timestamp tip_pending_until = 21;
  google.protobuf.Int32Value sof_pay_boost = 22;
  google.protobuf.BoolValue is_contactless_delivery = 23;
  google.protobuf.StringValue external_delivery_id = 24;
  google.protobuf.StringValue doordash_id = 25;
  Customer customer = 26;
  google.protobuf.StringValue external_pickup_zone_id = 27;
  google.protobuf.Int32Value post_tip = 28;
  repeated DriveOrderItem items = 29;
  google.protobuf.BoolValue is_item_level_refunds_eligible = 30;
  com.doordash.drive.api.saas.v1.SupportAsAServiceConfig support_as_a_service_config = 31;
  google.protobuf.BoolValue is_cold_chain = 32;
  google.protobuf.Int32Value store_payout_total = 33;
  google.protobuf.Int32Value store_payout_total_no_errors = 34;
  google.protobuf.BoolValue is_delivery_returnable = 35;
  google.protobuf.Int32Value commission_tax = 36;
  google.protobuf.Int32Value commission_subtotal = 37;
  google.protobuf.Int32Value tip_paid_by_mx = 38;
  google.protobuf.Int32Value promotion = 39;
  google.protobuf.Int32Value promotion_subsidy = 40;
  google.protobuf.Int32Value tip_adjustment = 41;
  google.protobuf.Int32Value dasher_regulatory_fee = 42;
  google.protobuf.Int32Value aggregator_fee = 43;
  google.protobuf.Int64Value cash_on_delivery = 44;
  google.protobuf.Int32Value pre_tip = 45;
  google.protobuf.Int32Value cancellation_fee = 46;
  google.protobuf.Int32Value merchant_fee_adjustment = 47;
  google.protobuf.Int32Value cancellation_adjustment = 48;
  google.protobuf.Int32Value subtotal = 49;
  google.protobuf.BoolValue is_grocery = 50;
  google.protobuf.BoolValue is_retail = 51;
  google.protobuf.Timestamp quoted_pickup_time = 52;
  google.protobuf.Timestamp quoted_delivery_time = 53;
  repeated com.doordash.drive.api.driveTransaction.DriveTransaction drive_transactions = 54;
  google.protobuf.StringValue pickup_business_name = 55;
  // drive.drive_order.developer_id
  google.protobuf.Int64Value developer_id = 56;
  LineOfBusiness line_of_business = 57;
  google.protobuf.BoolValue is_p2p = 58;
  google.protobuf.StringValue invoicing_group_id = 59;
  google.protobuf.BoolValue has_invoicing_group_id = 60;
  com.doordash.drive.OrderContains order_contains = 61;
  RedeliveryDetails redelivery_details = 62;
  DispatchPaymentDetails dispatch_payment_details = 63;
  repeated DriveFulfillmentTag drive_fulfillment_tags = 64;
  google.protobuf.Timestamp customer_arrival_time = 65;
  DasherCheckoutPaymentMethod dasher_checkout_payment_method = 66;
  drive_order_service.v1.PickupVerificationMetadata pickup_verification_metadata = 67;
}

message Customer {
  google.protobuf.StringValue phone_number = 1;
  google.protobuf.StringValue first_name = 2;
  google.protobuf.StringValue last_name = 3;
  google.protobuf.StringValue email = 4;
}

message Error {
  google.protobuf.StringValue reason = 1;
  google.protobuf.Int32Value code = 2;
  google.protobuf.StringValue path = 3; // field path to identify cause of error
  google.protobuf.StringValue trigger = 4; // The data that triggers the error
}

message GetDoordashIdByExternalDeliveryIdRequest {
  google.protobuf.StringValue external_delivery_id = 1;
  google.protobuf.Int64Value developer_id = 2;
  google.protobuf.StringValue external_store_id = 3; // optional
  // brand_name in drive_business_mapping
  google.protobuf.StringValue external_business_name = 4; // optional
  google.protobuf.StringValue developer_uuid = 5; // must be set if developer_id is not set
}

message GetDoordashIdByExternalDeliveryIdResponse {
  google.protobuf.StringValue doordash_id = 1;
  Error error = 2;
}

message DriveOrderItem {
  google.protobuf.StringValue name = 1;
  google.protobuf.StringValue description = 2;
  google.protobuf.Int32Value quantity = 3;
  google.protobuf.Int32Value price = 4;
  google.protobuf.StringValue external_id = 5;
  google.protobuf.StringValue barcode = 6;
  google.protobuf.Int64Value id = 7;
  google.protobuf.StringValue special_instructions = 8;
}

message GetDeliveryIdByExternalDeliveryIdRequest {
  google.protobuf.StringValue external_delivery_id = 1;
  google.protobuf.StringValue developer_uuid = 2;
  google.protobuf.BoolValue is_test = 3;
  google.protobuf.StringValue integration_type = 4;
}

message GetDeliveryIdByExternalDeliveryIdResponse {
  google.protobuf.StringValue external_delivery_id = 1;
  google.protobuf.StringValue developer_uuid = 2;
  google.protobuf.BoolValue is_test = 3;
  google.protobuf.StringValue integration_type = 4;
  google.protobuf.Int64Value delivery_id = 5;
}

// Refund problem level
enum LineOfBusiness {
  // Not specified
  LINE_OF_BUSINESS_UNSPECIFIED = 0;
  // PIZZA
  LINE_OF_BUSINESS_PIZZA = 1;
  // FOOD_RESCUE
  LINE_OF_BUSINESS_FOOD_RESCUE = 2;
  // GROCERY
  LINE_OF_BUSINESS_GROCERY = 3;
  // SOF aka SMALL_ORDER_FULFILLMENT
  LINE_OF_BUSINESS_SMALL_ORDER_FULFILLMENT = 4;
  // LOF aka LARGE_ORDER_FULFILLMENT
  LINE_OF_BUSINESS_LARGE_ORDER_FULFILLMENT = 5;
  // PHARMACY
  LINE_OF_BUSINESS_PHARMACY = 6;
  // RETAIL
  LINE_OF_BUSINESS_RETAIL = 7;
  // OTHER
  LINE_OF_BUSINESS_OTHER = 8;
  // PARCEL
  LINE_OF_BUSINESS_PARCEL = 9;
  // SOCIAL_IMPACT
  LINE_OF_BUSINESS_SOCIAL_IMPACT = 10;
}

// Drive fulfillment tag
enum DriveFulfillmentTag {
  // Not specified
  DRIVE_FULFILLMENT_TAG_UNSPECIFIED = 0;
  // PIZZA
  DRIVE_FULFILLMENT_TAG_PIZZA = 1;
  // PARCEL
  DRIVE_FULFILLMENT_TAG_PARCEL = 2;
  // DSD
  DRIVE_FULFILLMENT_TAG_DSD = 3;
  // DSS
  DRIVE_FULFILLMENT_TAG_DSS = 4;
  // P2P
  DRIVE_FULFILLMENT_TAG_P2P = 5;
  // PHARMACY
  DRIVE_FULFILLMENT_TAG_PHARMACY = 6;
  // ALCOHOL
  DRIVE_FULFILLMENT_TAG_ALCOHOL = 7;
  // FLOWERS
  DRIVE_FULFILLMENT_TAG_FLOWERS = 8;
  // CASH_ON_DELIVERY
  DRIVE_FULFILLMENT_TAG_CASH_ON_DELIVERY = 9;
  // RETAIL
  DRIVE_FULFILLMENT_TAG_RETAIL = 10;
  // GROCERY
  DRIVE_FULFILLMENT_TAG_GROCERY = 11;
  // VOICE
  DRIVE_FULFILLMENT_TAG_VOICE = 12;
}

// Dasher Checkout Payment Method
enum DasherCheckoutPaymentMethod {
  // Dasher payment method is unspecified
  DASHER_CHECKOUT_PAYMENT_METHOD_UNSPECIFIED = 0;
  // Dasher uses a red-card at Point of Sale.
  DASHER_CHECKOUT_PAYMENT_METHOD_RED_CARD = 1;
  // Dasher uses a barcode at Point of Sale.
  DASHER_CHECKOUT_PAYMENT_METHOD_BARCODE = 2;
}

/* GetDriveOrderByUrlCodeRequest represents a request object for GetDriveOrderByUrlCode rpc */
message GetDriveOrderByUrlCodeRequest {
  google.protobuf.StringValue url_code = 1;
}

/* GetDriveOrderByUrlCodeResponse represents a response object for GetDriveOrderByUrlCode rpc */
message GetDriveOrderByUrlCodeResponse {
  DriveOrderResponse data = 1;
}

message RedeliveryDetails {
  google.protobuf.Int64Value redelivery_id = 1;
  google.protobuf.Int64Value redelivery_previous_delivery_id = 2;
  google.protobuf.Int64Value redelivery_previous_doordash_id = 3;
  google.protobuf.Int64Value redelivery_next_delivery_id = 4;
  google.protobuf.Int64Value redelivery_next_doordash_id = 5;
  google.protobuf.Int32Value redelivery_attempt_count = 6;
}

message DispatchPaymentDetails {
  google.protobuf.StringValue payment_method_uuid = 1;
}
