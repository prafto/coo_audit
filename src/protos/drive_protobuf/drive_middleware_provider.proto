syntax = "proto3";

// buf:lint:ignore DIRECTORY_SAME_PACKAGE
// buf:lint:ignore PACKAGE_VERSION_SUFFIX
package drive_middleware_provider_service;

import "doordash.api/annotations.proto";
import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";

// Please set to true when service definition exists in this proto
option java_generic_services = true;
// With is set to true, each "service" definition will be in its own class, instead of being nested into "wrapper class"
// This is suggested to be set to true
option java_multiple_files = true;
option java_outer_classname = "DriveMiddlewareProviderProtos";
option java_package = "com.doordash.drive.grpc.middleware_provider";

// DriveMiddlewareProviderService is used to provide MWP related data for partnership creation in SSOB
service DriveMiddlewareProviderService {
  option (doordash.api.service) = {
    name: "drive-rpc"
    url: "drive-rpc.service.prod.ddsd"
    port: 50051
    api_key_name: "API_KEY_FOR_DRIVE"
    owner: {
      id: "onboarding-service"
      name: "onboarding-service"
      slack_channel: "#ask-ssmo"
      email_alias: "mx-acquisition-eng@doordash.com"
    }
    name_spaces: ["drive"]
    target_products: [MX]
  };
  // Get a list of all MWPs with a summary view
  rpc GetMwpList(GetMwpListRequest) returns (GetMwpListResponse) {
    option (google.api.http) = {get: "/drive/v1/middleware_providers/list"};
    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: DEV
      authorization: [NONE]
      target_products: [MX]
      slo_config: {
        critical_alerts_enabled: true
        critical_5m_burn_threshold: 6000
        critical_5m_burn_sustain_seconds: 300
        p99_latency: 2
      }
    };
  }
  // Get mwp info for one single dedicated MWP
  rpc GetMwpInfo(GetMwpInfoRequest) returns (GetMwpInfoResponse) {
    option (google.api.http) = {
      post: "/drive/v1/middleware_provider"
      body: "*"
    };
    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: DEV
      authorization: [NONE]
      target_products: [MX]
      slo_config: {
        critical_alerts_enabled: true
        critical_5m_burn_threshold: 6000
        critical_5m_burn_sustain_seconds: 300
        p99_latency: 2
      }
    };
  }
}

// GetMwpListRequest
message GetMwpListRequest {}

// GetMwpInfoRequest
message GetMwpInfoRequest {
  // request
  oneof request {
    // uuid
    google.protobuf.StringValue uuid = 1;
    // provider_name
    google.protobuf.StringValue provider_name = 2;
  }
}

// Single short record
message MiddlewareProviderShortRecord {
  // uuid
  google.protobuf.StringValue uuid = 1;
  // provider name
  google.protobuf.StringValue provider_name = 2;
  // rank
  google.protobuf.Int32Value rank = 3;
  // is_test_developer
  google.protobuf.BoolValue is_test_developer = 4;
}

// Regulatory fee config
message RegulatoryFeeConfig {
  // locality
  google.protobuf.StringValue locality = 1;
  // go live date
  google.protobuf.StringValue go_live_date = 2;
  // fee
  google.protobuf.Int32Value fee = 3;
}

// activation_type
enum ActivationMethod {
  // unspecified
  ACTIVATION_METHOD_UNSPECIFIED = 0;
  // auto onboard
  ACTIVATION_METHOD_AUTO_ONBOARD = 1;
  // SFDC automation
  ACTIVATION_METHOD_SFDC_AUTOMATION = 2;
  // AUTO activation
  ACTIVATION_METHOD_AUTO_ACTIVATION = 3;
  // NINTEX FORM
  ACTIVATION_METHOD_NINTEX_FORM = 4;
}

// Detailed data representation of middleware provider
message MiddlewareProviderRecord {
  // uuid
  google.protobuf.StringValue uuid = 1;
  // provider name
  google.protobuf.StringValue provider_name = 2;
  // integration_enable_method: Formstack + SFDC Automation, Auto-onboarding (no SFDC)
  google.protobuf.StringValue integration_enable_method = 3;
  // onboarding_notes
  google.protobuf.StringValue onboarding_notes = 4;
  // onboarding_guide: Formstack Onboarding Guide, Auto Onboarding Guide
  google.protobuf.StringValue onboarding_guide = 5;
  // invoicing_structure: Middleware Provider, Merchant
  google.protobuf.StringValue invoicing_structure = 6;
  // radius_specs: Default radius from marketplace, Fixed radius
  google.protobuf.StringValue radius_specs = 7;
  // fixed_radius
  google.protobuf.StringValue fixed_radius = 8;
  // custom_pricing
  google.protobuf.BoolValue custom_pricing = 9;
  // lof_supported
  google.protobuf.BoolValue lof_supported = 10;
  // enabled_for_alcohol
  google.protobuf.BoolValue enabled_for_alcohol = 11;
  // dual_fleet_supported
  google.protobuf.BoolValue dual_fleet_supported = 12;
  // pricing
  google.protobuf.StringValue pricing = 13;
  // lob: Rx, Non_Rx
  google.protobuf.StringValue lob = 14;
  // segment: LOF, SMB, Longtail
  google.protobuf.StringValue segment = 15;
  // market: USA, CAN
  google.protobuf.StringValue market = 16;
  // contract_link
  google.protobuf.StringValue contract_link = 17;
  // formstack_link
  google.protobuf.StringValue formstack_link = 18;
  // formstack_response_link
  google.protobuf.StringValue formstack_response_link = 19;
  // provider_link
  google.protobuf.StringValue provider_link = 20;
  // integration_type: Middleware_Online_Ordering, Middleware_Point_of_Sale, Middleware_General
  google.protobuf.StringValue integration_type = 21;
  // prod_dev_id
  google.protobuf.Int64Value prod_dev_id = 22;
  // autoonboarding_url
  google.protobuf.StringValue autoonboarding_url = 23;
  // delivery_setup_faq_url
  google.protobuf.StringValue delivery_setup_faq_url = 24;
  // rank
  google.protobuf.Int32Value rank = 25;
  // contract notification email
  google.protobuf.StringValue contract_notification_email = 26;
  // pricing_structure: Flat Fee, Fees Per Mile
  google.protobuf.StringValue pricing_structure = 27;
  // base_fee
  google.protobuf.FloatValue base_fee = 28;
  // max_radius
  google.protobuf.FloatValue max_radius = 29;
  // volume_based_discount
  google.protobuf.BoolValue volume_based_discount = 30;
  // distance_based_pricing
  google.protobuf.BoolValue distance_based_pricing = 31;
  // base_radius
  google.protobuf.FloatValue cost_per_mile = 32;
  // base_radius
  google.protobuf.FloatValue base_radius = 33;
  // volume_cal_method: Average
  google.protobuf.StringValue volume_cal_method = 34;
  // volume_cal_period: Weekly
  google.protobuf.StringValue volume_cal_period = 35;
  // business_level_volume_tier1: Store, Business
  google.protobuf.StringValue business_level_volume_tier1 = 36;
  // volume_tier_commitment_volume_tier1
  google.protobuf.Int32Value volume_tier_commitment_volume_tier1 = 37;
  // volume_tier_fee_reduction_tier1
  google.protobuf.FloatValue volume_tier_fee_reduction_tier1 = 38;
  // business_level_volume_tier2
  google.protobuf.StringValue business_level_volume_tier2 = 39;
  // volume_tier_commitment_volume_tier2
  google.protobuf.Int32Value volume_tier_commitment_volume_tier2 = 40;
  // volume_tier_fee_reduction_tier2
  google.protobuf.FloatValue volume_tier_fee_reduction_tier2 = 41;
  // business_level_volume_tier3
  google.protobuf.StringValue business_level_volume_tier3 = 42;
  // volume_tier_commitment_volume_tier3
  google.protobuf.Int32Value volume_tier_commitment_volume_tier3 = 43;
  // volume_tier_fee_reduction_tier3
  google.protobuf.FloatValue volume_tier_fee_reduction_tier3 = 44;
  // business_level_volume_tier4
  google.protobuf.StringValue business_level_volume_tier4 = 45;
  // volume_tier_commitment_volume_tier4
  google.protobuf.Int32Value volume_tier_commitment_volume_tier4 = 46;
  // volume_tier_fee_reduction_tier4
  google.protobuf.FloatValue volume_tier_fee_reduction_tier4 = 47;
  // alcohol_product to indicate if on boarding merchants would be shown alcohol clause in agreement
  google.protobuf.BoolValue alcohol_product = 48;
  // return_fee indicate if on boarding merchants would be shown return fee clause in agreement
  google.protobuf.BoolValue return_fee = 49;
  // return_fee_percentage indicates the percentage of the return fee part of the agreement
  google.protobuf.FloatValue return_fee_percentage = 50;
  // return_fee_currency the currency of the return fee in agreement and Salesforce records
  google.protobuf.StringValue return_fee_currency = 51;
  // is_test_developer
  google.protobuf.BoolValue is_test_developer = 52;
  // should_collect_store_id if set, indicates the external store ids are collected
  google.protobuf.BoolValue should_collect_store_id = 53;
  // has_manhattan_addendum if set, indicates pact safe contract should add manhattan addendum
  google.protobuf.BoolValue has_manhattan_addendum = 54;
  // activation method
  ActivationMethod activation_method = 55;
  // dasher regulatory configuration - deprecated
  repeated RegulatoryFeeConfig dasher_regulatory_config = 56 [deprecated = true];
  // regulatory configurations
  repeated RegulatoryFeeConfig regulatory_configs = 57;
}

// A short summary of all MWPs
message MwpList {
  // Records
  repeated MiddlewareProviderShortRecord records = 1;
}

// Error
message Error {
  /**
   * Why not just use grpc-status-code:
   * - Grpc code and http code is not 1:1 mapping.
   * - Extra message is hard to be transferred with grpc error, in a well controlled manner.
   * - A grpc error sometimes means the client side needs to retry, it cannot handle the case that
   *   server side really wants to return a 500 error.
   * - Grpc-status-code is less explicit
   */
  enum ErrorCode {
    // Unspecified error
    ERROR_CODE_UNSPECIFIED = 0;
    // Internal error
    ERROR_CODE_INTERNAL_ERROR = 1;
    // not found
    ERROR_CODE_NOT_FOUND = 2;
    // invalid
    ERROR_CODE_INVALID_REQUEST = 3;
    // unauthorized
    ERROR_CODE_UNAUTHORIZED = 4;
  }

  // error_code
  ErrorCode error_code = 1;
  // error_details
  google.protobuf.StringValue error_details = 2;
}

// GetMwpInfoResponse
message GetMwpInfoResponse {
  // result
  oneof result {
    // error
    Error error = 1;
    // data
    MiddlewareProviderRecord data = 2;
  }
}

// GetMwpListResponse
message GetMwpListResponse {
  // result
  oneof result {
    // error
    Error error = 1;
    // data
    MwpList data = 2;
  }
}
