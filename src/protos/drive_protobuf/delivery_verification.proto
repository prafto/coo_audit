syntax = "proto3";

// buf:lint:ignore DIRECTORY_SAME_PACKAGE
package com.doordash.drive.api.delivery_verfication.v1;

import "common/service_client_config.proto";
import "google/protobuf/wrappers.proto";

option java_multiple_files = true;
option java_outer_classname = "DeliveryVerificationEndpoints";

// APIs for Delivery Verification
service DeliveryVerificationService {
  option (service_client.client_config).service_name = "delivery-verification-service";
  option (service_client.client_config).retry_config.max_attempts = 3;

  // Get verification details by delivery id
  rpc GetVerificationDetailsByDeliveryId(GetVerificationDetailsByDeliveryIdRequest) returns (GetVerificationDetailsByDeliveryIdResponse);

  // Get Catering Verificaton by delivery id
  rpc GetCateringVerificationByDeliveryId(GetCateringVerificationByDeliveryIdRequest) returns (GetCateringVerificationByDeliveryIdResponse);

  // Post Catering Verification photo
  rpc PostCateringVerification(PostCateringVerificationRequest) returns (PostCateringVerificationResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 1000;
    option (service_client.client_method_config).retry_config.max_attempts = 2;
  }
}

// Request object for GetVerificationDetailsResponseByDeliveryId
message GetVerificationDetailsByDeliveryIdRequest {
  // Delivery id
  google.protobuf.Int64Value delivery_id = 1;
  // If include all, it would return a list of all the verification Detail objects
  google.protobuf.BoolValue include_all = 2;
}

// Request object for PostCateringVerification
message PostCateringVerificationRequest {
  // Delivery id
  google.protobuf.Int64Value delivery_id = 1;
  // Setup photo URL
  google.protobuf.StringValue setup_photo_url = 2;
  // Setup waived flag
  google.protobuf.BoolValue setup_waived = 3;
  // Dasher Id
  google.protobuf.Int64Value dasher_id = 4;
}

// Response object for PostCateringVerification
message PostCateringVerificationResponse {
  // Returns true if Dasher waives setup
  google.protobuf.BoolValue setup_waived = 1;
  // URL to setup photo
  google.protobuf.StringValue setup_photo_url = 2;
  // Catering Verification table id
  google.protobuf.Int32Value id = 3;
  // Latest Catering Verification status
  google.protobuf.StringValue verification_status = 4;
  // Delivery is eligile for additional setup pay
  google.protobuf.BoolValue is_setup_pay_eligible = 5;
}

// Response object for GetVerificationDetailsResponseByDeliveryId
message GetVerificationDetailsByDeliveryIdResponse {
  // Verification image URL
  google.protobuf.StringValue image_url = 1;
  // Verification description
  google.protobuf.StringValue description = 2;
  // Verification type
  VerificationType type = 3;
  // List of verification objects
  repeated VerificationDetail verification_details = 4;
}

// VerificationDetail object
message VerificationDetail {
  // Verification image URL
  google.protobuf.StringValue image_url = 1;
  // Verification description
  google.protobuf.StringValue description = 2;
  // Verification type
  VerificationType type = 3;
  // Optional field, verification recipient name if applicable
  google.protobuf.StringValue recipient_name = 4;
}

// Request object for GetCateringVerificationByDeliveryId
message GetCateringVerificationByDeliveryIdRequest {
  // Delivery id
  google.protobuf.Int64Value delivery_id = 1;
}

// Response object for GetCateringVerificationByDeliveryId
message GetCateringVerificationByDeliveryIdResponse {
  // Returns true if Dasher waives setup
  google.protobuf.BoolValue setup_waived = 1;
  // URL to setup photo
  google.protobuf.StringValue setup_photo_url = 2;
  // Catering Verification table id
  google.protobuf.Int32Value id = 3;
  // Latest Catering Verification status
  google.protobuf.StringValue verification_status = 4;
  // Delivery is eligile for additional setup pay
  google.protobuf.BoolValue is_setup_pay_eligible = 5;
}

// Enumerated verification types
enum VerificationType {
  // Contactless verification
  VERIFICATION_TYPE_DEFAULT_UNSPECIFIED = 0;
  // Deliveries requiring proof of signature (ex: alcohol)
  VERIFICATION_TYPE_RECEIPT = 1;
  // Deliveries requiring catering setup
  VERIFICATION_TYPE_CATERING = 2;
  // Delivery does not have verification event
  VERIFICATION_TYPE_UNSPECIFIED = 3;
}
