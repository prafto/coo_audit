syntax = "proto3";

package dasher_opportunity_service.v1;

import "dasher_opportunity_service/health.proto";
import "dasher_opportunity_service/types/v1/assignment_constraint.proto";
import "dasher_opportunity_service/types/v1/dasher_opportunity_offer.proto";
import "dasher_opportunity_service/types/v1/equipment_constraint.proto";
import "dasher_opportunity_service/types/v1/geo_constraint.proto";
import "dasher_opportunity_service/types/v1/notification_policy.proto";
import "dasher_opportunity_service/types/v1/opportunity.proto";
import "dasher_opportunity_service/types/v1/pay_type.proto";
import "dasher_opportunity_service/types/v1/review_policy.proto";
import "dasher_opportunity_service/types/v1/task_constraint.proto";
import "dasher_opportunity_service/types/v1/time_constraint.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.dasher_opportunity_service.rpc.api";

// The DasherOpportunityService provides an API for managing opportunities for Dashers.
service DasherOpportunityService {
  // GetHealth returns the health of the service.
  rpc GetHealth(GetHealthRequest) returns (GetHealthResponse);

  // Create opportunity for dashers
  rpc CreateOpportunity(CreateOpportunityRequest) returns (CreateOpportunityResponse);

  // Get opportunity
  rpc GetOpportunity(GetOpportunityRequest) returns (GetOpportunityResponse);

  // Offer opportunity to dashers
  rpc OfferOpportunity(OfferOpportunityRequest) returns (OfferOpportunityResponse);

  // Withdraw opportunity from dashers
  rpc WithdrawOpportunity(WithdrawOpportunityRequest) returns (WithdrawOpportunityResponse);

  // Accept opportunity
  rpc AcceptOpportunity(AcceptOpportunityRequest) returns (AcceptOpportunityResponse);

  // Cancel opportunity
  rpc CancelOpportunity(CancelOpportunityRequest) returns (CancelOpportunityResponse);

  // Get opportunities for dashers
  rpc GetOpportunitiesForDasher(GetOpportunitiesForDasherRequest) returns (GetOpportunitiesForDasherResponse);

  // Get opportunities by delivery id
  rpc GetOpportunityByOffer(GetOpportunityByOfferRequest) returns (GetOpportunityByOfferResponse);

  // Complete opportunity
  rpc CompleteOpportunity(CompleteOpportunityRequest) returns (CompleteOpportunityResponse);

  // Get opportunities by status
  rpc GetOpportunitiesByStatus(GetOpportunitiesByStatusRequest) returns (GetOpportunitiesByStatusResponse);
}

// Request for CreateOpportunity
message CreateOpportunityRequest {
  // Title of the opportunity
  google.protobuf.StringValue title = 1;

  // Description of the opportunity
  google.protobuf.StringValue description = 2;

  // Pay for the opportunity
  types.v1.Pay pay = 3;

  // Time constraints for the opportunity
  types.v1.TimeConstraint time_constraint = 4;

  // Geo constraints for the opportunity
  types.v1.GeoConstraint geo_constraint = 5;

  // Task constraints for the opportunity
  types.v1.TaskConstraint task_constraint = 6;

  // Equipment constraints for the opportunity
  types.v1.EquipmentConstraint equipment_constraint = 7;

  // Review policy for the opportunity
  types.v1.ReviewPolicy review_policy = 8;

  // Notification policy for the opportunity
  types.v1.NotificationPolicy notification_policy = 9;

  // Client provided JSON-serialized metadata for the opportunity
  google.protobuf.StringValue metadata = 10;

  // Idempotency key for the opportunity
  google.protobuf.StringValue idempotency_key = 11;

  // Assignment constraints for the opportunity
  types.v1.AssignmentConstraint assignment_constraint = 12;
}

// Response for CreateOpportunity
message CreateOpportunityResponse {
  // The created opportunity
  types.v1.Opportunity opportunity = 1;
}

// Request for GetOpportunity
message GetOpportunityRequest {
  // Id of the opportunity
  google.protobuf.StringValue opportunity_id = 1;
}

// Response for GetOpportunity
message GetOpportunityResponse {
  // The opportunity
  types.v1.Opportunity opportunity = 1;
}

// Request to offer opportunity to dashers
message OfferOpportunityRequest {
  // Id of the opportunity
  google.protobuf.StringValue opportunity_id = 1;

  // Id of the dasher
  repeated int64 dasher_id = 2;
}

// Response of offering opportunity to dashers
message OfferOpportunityResponse {
  // Id of the offer
  repeated types.v1.DasherOpportunityOffer offer_id = 1;
}

// Request to withdraw opportunity from dashers
message WithdrawOpportunityRequest {
  // Id of the opportunity
  google.protobuf.StringValue opportunity_id = 1;

  // Id of the dasher
  repeated int64 dasher_id = 2;

  // should skip accepted dasher
  google.protobuf.BoolValue skip_accepted_dasher = 3;
}

// Response of withdrawing opportunity from dashers
message WithdrawOpportunityResponse {}

// Request for GetOpportunitiesForDasher
message GetOpportunitiesForDasherRequest {
  // Id of the dasher
  google.protobuf.Int64Value dasher_id = 1;

  // Ids of the starting points
  repeated int32 starting_point_ids = 2;

  // Start of time window
  google.protobuf.Timestamp start_time = 3;

  // End of time window
  google.protobuf.Timestamp end_time = 4;

  // Dasher location latitude
  google.protobuf.DoubleValue lat = 5;

  // Dasher location longitude
  google.protobuf.DoubleValue lng = 6;

  // Dasher Opportunity Status
  google.protobuf.StringValue status = 7;
}

// Response for GetOpportunitiesForDasher
message GetOpportunitiesForDasherResponse {
  // Opportunities for the dasher
  repeated types.v1.Opportunity opportunities = 1;
}

// Request to accept opportunity from dashers
message AcceptOpportunityRequest {
  // Id of the opportunity
  google.protobuf.StringValue opportunity_id = 1;

  // Id of the dasher
  google.protobuf.Int64Value dasher_id = 2;
}

// Response of accept opportunity from dashers
message AcceptOpportunityResponse {}

// Request to cancel opportunity from dashers
message CancelOpportunityRequest {
  // Id of the opportunity
  google.protobuf.StringValue opportunity_id = 1;

  // Id of the dasher
  google.protobuf.Int64Value dasher_id = 2;
}

// Response of cancel opportunity from dashers
message CancelOpportunityResponse {}

// Request to get opportunity by offer
message GetOpportunityByOfferRequest {
  // fulfillment ids that constitute the offer.
  // opportunity is only matched if entire set of fulfillment ids match
  repeated google.protobuf.StringValue fulfillment_id = 1;

  // Optional dasher for which we want to get the opportunity
  google.protobuf.Int64Value dasher_id = 2;
}

// Response of get opportunity by offer
message GetOpportunityByOfferResponse {
  // Latest opportunity for the delivery
  types.v1.Opportunity opportunity = 1;
}

// Request to complete opportunity
message CompleteOpportunityRequest {
  // Id of the opportunity
  google.protobuf.StringValue opportunity_id = 1;

  // Id of the dasher
  google.protobuf.Int64Value dasher_id = 2;
}

// Response of complete opportunity
message CompleteOpportunityResponse {}

// Request to get opportunities by status
message GetOpportunitiesByStatusRequest {
  // The status of the opportunity
  types.v1.OpportunityStatus status = 1;

  // The limit of opportunities to return
  google.protobuf.Int32Value limit = 2;
}

// Response for get opportunities by status
message GetOpportunitiesByStatusResponse {
  // Opportunities for the status
  repeated types.v1.Opportunity opportunities = 1;
}
