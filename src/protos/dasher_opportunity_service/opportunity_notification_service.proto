syntax = "proto3";

package dasher_opportunity_service.v1;

import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.dasher_opportunity_service.rpc.api";

// The DasherOpportunityNotificationService provides APIs for managing Opportunity Notifications for Dashers.
service DasherOpportunityNotificationService {
  // Schedule notifications for dashers
  rpc ScheduleNotifications(ScheduleNotificationsRequest) returns (ScheduleNotificationsResponse);
  // Cancel scheduled Notification for dashers
  rpc CancelScheduledNotifications(CancelScheduledNotificationsRequest) returns (CancelScheduledNotificationsResponse);
  // Send notification to dashers
  rpc SendNotifications(SendNotificationsRequest) returns (SendNotificationsResponse);
}

// Request for ScheduleNotifications
message ScheduleNotificationsRequest {
  // Notifications to be scheduled
  repeated ScheduleNotification notifications = 1;
}

// Notification to be scheduled
message ScheduleNotification {
  // dasher ids
  google.protobuf.Int64Value dasher_id = 1;
  // notification name
  google.protobuf.StringValue notification_name = 2;
  // notification type
  NotificationType notification_type = 3;
  // schedule mode
  ScheduleMode mode = 4;
  // schedule time
  ScheduleTime time = 5;
  // placeholders for the notification, used for fill out the notification template
  map<string, string> placeholders = 6;
  // Metadata for the notification, for example, the shift_id for shift reminder notification
  // or the opportunity_id for opportunity notification.
  google.protobuf.Struct metadata = 7;
}

// Schedule time for the notification
message ScheduleTime {
  // schedule time
  oneof value {
    // used to calculate the actual send time
    google.protobuf.Timestamp scheduled_base_time = 1;
    // used to set the send time
    google.protobuf.Timestamp scheduled_send_time = 2;
  }
}

// Response for ScheduleNotifications
message ScheduleNotificationsResponse {
  // scheduled notification ids
  repeated google.protobuf.StringValue notification_ids = 1;
}

// Request for CancelScheduledNotifications
message CancelScheduledNotificationsRequest {
  // notifications to be cancelled
  repeated CancelNotification notifications = 1;
}

// Notification to be cancelled
message CancelNotification {
  // dasher id
  google.protobuf.Int64Value dasher_id = 1;
  // notification name
  google.protobuf.StringValue notification_name = 2;
  // notification type
  NotificationType notification_type = 3;
  // Metadata for the notification, used for locating the scheduled notification.
  // For example, the opportunity_id that will be used to cancel any notifications for this specific opportunity.
  google.protobuf.Struct metadata = 4;
}

// Response for CancelScheduledNotifications
message CancelScheduledNotificationsResponse {
  // cancelled notification ids
  repeated google.protobuf.StringValue notification_ids = 1;
}

// Request for SendNotifications
message SendNotificationsRequest {
  // notifications to be sent
  repeated SendNotification notifications = 1;
}

// Notification to be sent
message SendNotification {
  // dasher id
  google.protobuf.Int64Value dasher_id = 1;
  // notification name
  google.protobuf.StringValue notification_name = 2;
  // notification type
  NotificationType notification_type = 3;
  // placeholders for the notification, used for fill out the notification template
  map<string, string> placeholders = 4;
  // Metadata for the notification, for example, the opportunity_id for opportunity notification
  // or any other fields that are needed for the notification.
  google.protobuf.Struct metadata = 5;
}

// Response for SendNotifications
message SendNotificationsResponse {
  // count of notifications sent
  google.protobuf.Int64Value send_count = 1;
}

// Schedule mode
enum ScheduleMode {
  // Unspecified schedule mode
  SCHEDULE_MODE_UNSPECIFIED = 0;
  // Schedule the notification based on the time offset
  SCHEDULE_MODE_TIME_OFFSET = 1;
  // Schedule the notification based on the fixed time
  SCHEDULE_MODE_TIME_FIXED = 2;
}

// Notification type
enum NotificationType {
  // Unspecified notification type
  NOTIFICATION_TYPE_UNSPECIFIED = 0;
  // Offer related notifications
  // Offer Opportunity notification
  NOTIFICATION_TYPE_OFFER_OPPORTUNITY_NOTIFICATION = 1;
  // Shift related notifications
  // Shift Start Reminder
  NOTIFICATION_TYPE_SHIFT_START_REMINDER = 6;
}
