syntax = "proto3";
package self_help_service.support_presentation_platform.v1;

import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "self_help_service/support_presentation_platform/common.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.selfhelpservice.spp";

// Service contract for remote content provider in Support Presentation Platform.
// Support Presentation Platform gRPC service will invoke remote content provider
// endpoints internally. Hence, they are not exposed using Unified Gateway.
service SupportPresentationPlatformContentProvider {
  // RPC to get support content from the remote content provider.
  rpc GetContentById(GetContentByIdRequest) returns (GetContentByIdResponse);
}

// Represents request for getting support content directly from content provider
// (without any orchestration execution).
message GetContentByIdRequest {
  // Domain context: Order/Delivery/Task/support-case id
  self_help_service.support_presentation_platform.v1.DomainContext domain_context = 1;

  // Client Context: Cx, Dx, Mx, Tx
  self_help_service.support_presentation_platform.v1.ClientContext client_context = 2;

  // gets the support content response for the given content
  self_help_service.support_presentation_platform.v1.SupportContentContext support_content_context = 3;
}

// Represents support content received from content provider.
message GetContentByIdResponse {
  // Deprecate "contents"
  reserved 1;
  reserved "contents";

  // Serialized support content.
  self_help_service.support_presentation_platform.v1.SupportContent support_content = 2;
}
