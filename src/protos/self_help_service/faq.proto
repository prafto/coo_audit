syntax = "proto3";
package self_help_service.faq.v1;

import "doordash.api/annotations.proto";
import "google/api/annotations.proto";
import "google/protobuf/any.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.self_help_service.api";

// Service with defined endpoints for FAQ purposes.
service FAQService {
  option (doordash.api.service) = {
    url: "self-help-service-web.service.prod.ddsd"
    name: "self-help-service"
    port: 50051
    name_spaces: ["self_help"]
    api_key_name: "SELF_HELP_SERVICE_API_KEY"
    owner: {
      id: "delivery-reliability-self-serve-expe"
      name: "self-serve-experience-service"
      slack_channel: "#ask-self-serve-experience"
      email_alias: "eng-self-serve-experience@doordash.com"
    }
    target_products: [
      DX,
      INTERNAL
    ]
  };
  // Get a single article
  rpc GetArticle(GetArticleRequest) returns (GetArticleResponse);
  // Get a single article (UG version)
  rpc GetArticleV2(GetArticleV2Request) returns (GetArticleV2Response) {
    option (google.api.http) = {
      post: "/self_help/v1/faq/article",
      body: "*"
    };
    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: DEV
      authorization: [
        DX_USER,
        DD_EMPLOYEE
      ]
    };
  }
  // Get multiple articles with filter
  rpc GetArticles(GetArticlesRequest) returns (GetArticlesResponse);
  // Get multiple articles with filter (UG version)
  rpc GetArticlesV2(GetArticlesV2Request) returns (GetArticlesV2Response) {
    option (google.api.http) = {
      post: "/self_help/v1/faq/articles",
      body: "*"
    };
    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: DEV
      authorization: [
        DX_USER,
        DD_EMPLOYEE
      ]
    };
  }
  // Get tags
  rpc GetTags(GetTagsRequest) returns (GetTagsResponse) {
    option (google.api.http) = {get: "/self_help/v1/faq/tags/{audience}"};
    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: DEV
      authorization: [
        DX_USER,
        DD_EMPLOYEE
      ]
    };
  }
  // Get snippets
  rpc GetSnippets(GetSnippetsRequest) returns (GetSnippetsResponse) {
    option (google.api.http) = {get: "/self_help/v1/faq/snippets"};
    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: DEV
      authorization: [
        DX_USER,
        DD_EMPLOYEE
      ]
    };
  }
  // Get menu (or submenu)
  rpc GetMenu(GetMenuRequest) returns (GetMenuResponse) {
    option (google.api.http) = {get: "/self_help/v1/faq/menu/{id}"};
    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: DEV
      authorization: [
        DX_USER,
        DD_EMPLOYEE
      ]
    };
  }
  // Search for an article
  rpc SearchArticles(SearchArticlesRequest) returns (SearchArticlesResponse) {
    option (google.api.http) = {get: "/self_help/v1/faq/search/{search_key}"};
    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: DEV
      authorization: [
        DX_USER,
        DD_EMPLOYEE
      ]
    };
  }

  // Create a tag
  rpc CreateTag(CreateTagRequest) returns (CreateTagResponse) {
    option (google.api.http) = {
      post: "/self_help/v1/faq/tag"
      body: "*"
    };
    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: DEV
      authorization: [DD_EMPLOYEE]
    };
  }
  // Edit a tag
  rpc EditTag(EditTagRequest) returns (EditTagResponse) {
    option (google.api.http) = {
      patch: "/self_help/v1/faq/tag"
      body: "*"
    };
    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: DEV
      authorization: [DD_EMPLOYEE]
    };
  }
  // Create a snippet
  rpc CreateSnippet(CreateSnippetRequest) returns (CreateSnippetResponse) {
    option (google.api.http) = {
      post: "/self_help/v1/faq/snippet"
      body: "*"
    };
    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: DEV
      authorization: [DD_EMPLOYEE]
    };
  }
  // Edit a snippet
  rpc EditSnippet(EditSnippetRequest) returns (EditSnippetResponse) {
    option (google.api.http) = {
      patch: "/self_help/v1/faq/snippet"
      body: "*"
    };
    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: DEV
      authorization: [DD_EMPLOYEE]
    };
  }
  // Create a menu (or submenu)
  rpc CreateMenu(CreateMenuRequest) returns (CreateMenuResponse) {
    option (google.api.http) = {
      post: "/self_help/v1/faq/menu"
      body: "*"
    };
    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: DEV
      authorization: [DD_EMPLOYEE]
    };
  }
  // Edit a menu (or submenu)
  rpc EditMenu(EditMenuRequest) returns (EditMenuResponse) {
    option (google.api.http) = {
      patch: "/self_help/v1/faq/menu"
      body: "*"
    };
    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: DEV
      authorization: [DD_EMPLOYEE]
    };
  }
  // Upload content - currently unused
  rpc UploadContent(UploadContentRequest) returns (UploadContentResponse);
  // Create an article
  rpc CreateArticle(CreateArticleRequest) returns (CreateArticleResponse) {
    // Deprecated for createContent
    option deprecated = true;
  }
  // Edit an article
  rpc EditArticle(EditArticleRequest) returns (EditArticleResponse) {
    // Deprecated for editContent
    option deprecated = true;
  }
}

// Request object for the GetArticle endpoint
message GetArticleRequest {
  // id associated with an article
  google.protobuf.StringValue article_id = 1;
}

// Response object for the GetArticle endpoint
message GetArticleResponse {
  // Article
  Article article = 1;
}

// Request object for the GetArticle endpoint
// For UG endpoint
message GetArticleV2Request {
  // id associated with an article
  google.protobuf.StringValue article_id = 1;
}

// Response object for the GetArticle endpoint
// For UG endpoint to avoid using Article with deprecated field Body
message GetArticleV2Response {
  // Article
  ArticleV2 article = 1;
}

// Request object for the GetArticles endpoint
// Must provide either tag ids or article ids
message GetArticlesRequest {
  // (Optional) Tag ids associated with an article - Unimplemented
  repeated google.protobuf.StringValue tag_ids = 1;
  // (Optional) List of article ids
  repeated google.protobuf.StringValue article_ids = 2;
}

// Response object for the GetArticles endpoint
message GetArticlesResponse {
  // List of articles
  repeated Article articles = 1;
}

// Request object for the GetArticles endpoint
// For UG endpoint
message GetArticlesV2Request {
  // (Optional) List of article ids
  repeated google.protobuf.StringValue article_ids = 1;
}

// Response object for the GetArticles endpoint
// For UG endpoint
message GetArticlesV2Response {
  // List of articles
  repeated ArticleV2 articles = 1;
}

// Request object for the GetMenu endpoint
message GetMenuRequest {
  // Menu id
  google.protobuf.StringValue id = 1;
  // Menu filter (array of tags to filter by)
  repeated google.protobuf.StringValue tag_id = 2;
}

// Response object for the GetMenu endpoint
message GetMenuResponse {
  // Menu id
  google.protobuf.StringValue id = 1;
  // Title of menu (localized)
  google.protobuf.StringValue title = 2;
  // List of menu options
  repeated MenuOption menu_options = 3;
  // Menu category tag (for filtering)
  repeated google.protobuf.StringValue tag_id = 4;
}

// Request object for the GetTags endpoint
message GetTagsRequest {
  // Audience of the request (e.g. courier, dasher)
  google.protobuf.StringValue audience = 1;
}

// Response object for the GetTags endpoint
message GetTagsResponse {
  // List of tags
  repeated Tag tags = 1;
}

// Request object for the GetSnippets endpoint
// Provide either snippet ids or snippet tags
message GetSnippetsRequest {
  // List of snippet ids (optional)
  repeated google.protobuf.StringValue ids = 1;

  // List of snippet tag ids (optional)
  repeated google.protobuf.StringValue tag_ids = 2;
}

// Response object for the GetSnippets endpoint
message GetSnippetsResponse {
  // List of snippets
  repeated Snippet snippets = 1;
}

// Request object for the SearchArticles endpoint
message SearchArticlesRequest {
  // Search term
  google.protobuf.StringValue search_key = 1;
  // Limit of results to get (optional)
  google.protobuf.Int32Value limit = 2;
  // Show excerpt - unused
  google.protobuf.BoolValue show_excerpt = 3;
  // Audience of the request (e.g. courier, dasher)
  google.protobuf.StringValue audience = 4;
  // Show all - regardless of language/platform -- used for paintbrush
  google.protobuf.BoolValue show_all = 5;
}

// Response object for the SearchArticles endpoint
message SearchArticlesResponse {
  // List of matching article fragments
  repeated SearchResult results = 1;
}

// Request object for the CreateSnippet endpoint
message CreateSnippetRequest {
  // Snippet
  Snippet snippet = 1;
}

// Response object for the CreateSnippet endpoint
message CreateSnippetResponse {
  // Snippet
  Snippet snippet = 1;
}

// Request object for the EditSnippet endpoint
message EditSnippetRequest {
  // Snippet
  Snippet snippet = 1;
}

// Response object for the EditSnippet endpoint
message EditSnippetResponse {
  // Snippet
  Snippet snippet = 1;
}

// Request object for the CreateTag endpoint
message CreateTagRequest {
  // Tag
  Tag tag = 1;
}

// Response object for the CreateTag endpoint
message CreateTagResponse {
  // Tag
  Tag tag = 1;
}

// Request object for the EditTag endpoint
message EditTagRequest {
  // Tag
  Tag tag = 1;
}

// Response object for the EditTag endpoint
message EditTagResponse {
  // Tag
  Tag tag = 1;
}

// Request object for the CreateMenu endpoint
message CreateMenuRequest {
  // Menu id
  google.protobuf.StringValue id = 1;
  // Title of menu (localized)
  google.protobuf.StringValue title = 2;
  // List of menu options
  repeated MenuOption menu_options = 3;
  // Menu category tag (for filtering)
  repeated google.protobuf.StringValue tag_id = 4;
  // Category tag (used for primary categories)
  google.protobuf.StringValue category = 5;
  // Platform (iOS, Android) - if null, platform agnostic
  google.protobuf.StringValue platform = 6;
  // Created by (email)
  google.protobuf.StringValue created_by = 7;
  // Language (locale) e.g. en-US
  google.protobuf.StringValue language = 8;
}

// Response object for the CreateMenu endpoint
message CreateMenuResponse {
  // Menu id
  google.protobuf.StringValue id = 1;
  // Title of menu (localized)
  google.protobuf.StringValue title = 2;
  // List of menu options
  repeated MenuOption menu_options = 3;
  // Menu category tag (for filtering)
  repeated google.protobuf.StringValue tag_id = 4;
  // Category tag (used for primary categories)
  google.protobuf.StringValue category = 5;
  // Platform (iOS, Android) - if null, platform agnostic
  google.protobuf.StringValue platform = 6;
  // Created by (email)
  google.protobuf.StringValue created_by = 7;
  // Language (locale) e.g. en-US
  google.protobuf.StringValue language = 8;
}

// Request object for the EditMenu endpoint
message EditMenuRequest {
  // Menu id
  google.protobuf.StringValue id = 1;
  // Title of menu (localized)
  google.protobuf.StringValue title = 2;
  // List of menu options
  repeated MenuOption menu_options = 3;
  // Menu category tag (for filtering)
  repeated google.protobuf.StringValue tag_id = 4;
  // Category tag (used for primary categories)
  google.protobuf.StringValue category = 5;
  // Platform (iOS, Android) - if null, platform agnostic
  google.protobuf.StringValue platform = 6;
  // Created by (email)
  google.protobuf.StringValue created_by = 7;
  // Language (locale) e.g. en-US
  google.protobuf.StringValue language = 8;
}

// Response object for the EditMenu endpoint
message EditMenuResponse {
  // Menu id
  google.protobuf.StringValue id = 1;
  // Title of menu (localized)
  google.protobuf.StringValue title = 2;
  // List of menu options
  repeated MenuOption menu_options = 3;
  // Menu category tag (for filtering)
  repeated google.protobuf.StringValue tag_id = 4;
  // Category tag (used for primary categories)
  google.protobuf.StringValue category = 5;
  // Platform (iOS, Android) - if null, platform agnostic
  google.protobuf.StringValue platform = 6;
  // Created by (email)
  google.protobuf.StringValue created_by = 7;
  // Language (locale) e.g. en-US
  google.protobuf.StringValue language = 8;
}

// Picasso format
message PicassoContent {
  // Picasso version
  google.protobuf.Int32Value version = 1;
  // Picasso body JSON
  google.protobuf.StringValue body = 2;
}

// Response object for the GetArticle endpoint
message Article {
  // id associated with article
  google.protobuf.StringValue id = 1;
  // Title of article
  google.protobuf.StringValue title = 2;
  // Subtitle of article
  google.protobuf.StringValue subtitle = 3;
  // List of related tag ids
  repeated google.protobuf.StringValue tag_id = 4;
  // Locale of the article
  repeated google.protobuf.StringValue locale = 5;
  // Body of the article (deprecated)
  Body body = 6 [deprecated = true];
  // List of user ids that have created/modified the article
  repeated google.protobuf.StringValue author_id = 7;
  // Timestamp when the article was created
  google.protobuf.Timestamp created_at = 8;
  // Timestamp when the article was updated
  google.protobuf.Timestamp updated_at = 9;
  // Ranking for the ordering of the article (unused)
  google.protobuf.Int32Value ranking = 10;
  // Picasso body (JSON)
  PicassoContent picasso = 11;
  // Platform (iOS, Android) - if null, platform agnostic
  google.protobuf.StringValue platform = 12;
  // Category - formerly first tag id
  google.protobuf.StringValue category = 13;
}

// Cannot create UG for Article because of deprecated field Body contains Any
message ArticleV2 {
  // id associated with article
  google.protobuf.StringValue id = 1;
  // Title of article
  google.protobuf.StringValue title = 2;
  // Subtitle of article
  google.protobuf.StringValue subtitle = 3;
  // List of related tag ids
  repeated google.protobuf.StringValue tag_id = 4;
  // Locale of the article
  repeated google.protobuf.StringValue locale = 5;
  // List of user ids that have created/modified the article
  repeated google.protobuf.StringValue author_id = 7;
  // Timestamp when the article was created
  google.protobuf.Timestamp created_at = 8;
  // Timestamp when the article was updated
  google.protobuf.Timestamp updated_at = 9;
  // Picasso body (JSON)
  PicassoContent picasso = 10;
  // Platform (iOS, Android) - if null, platform agnostic
  google.protobuf.StringValue platform = 11;
  // Category - formerly first tag id
  google.protobuf.StringValue category = 12;
}

// Tag (used for filtering articles)
message Tag {
  // id associated with tag
  google.protobuf.StringValue id = 1;
  // Text to display for the tag
  google.protobuf.StringValue display_text = 2;
  // Boolean to display tag
  google.protobuf.BoolValue is_internal = 3;
  // Image url for carousel
  google.protobuf.StringValue image_url = 4;
  // Ordering of tags
  google.protobuf.Int32Value ordering = 5;
}

// Snippet content
message Snippet {
  // id associated with snippet
  google.protobuf.StringValue id = 1;
  // Subtitle of snippet (category it falls under, e.g. Earnings)
  google.protobuf.StringValue subtitle = 2;
  // Content of snippet
  google.protobuf.StringValue content = 3;
  // List of related tag ids
  repeated google.protobuf.StringValue tag_id = 4;
  // Associated article id
  google.protobuf.StringValue article_id = 5;
  // Locale of the article
  repeated google.protobuf.StringValue locale = 6;
  // Platform (iOS, Android) - if null, platform agnostic
  google.protobuf.StringValue platform = 7;
  // Category - formerly first tag id
  google.protobuf.StringValue category = 8;
}

// Menu option
message MenuOption {
  // Menu option id
  google.protobuf.StringValue id = 1;
  // True if menu option is another menu. False if article.
  google.protobuf.BoolValue is_menu = 2;
  // Menu id or Article id dependent on is_menu field
  google.protobuf.StringValue content_id = 3;
  // Deeplink (null/empty if article/menu) - Unused
  google.protobuf.StringValue deep_link = 4;
  // Text for the menu option
  google.protobuf.StringValue title = 5;
  // Locale of the article - Unused
  repeated google.protobuf.StringValue locale = 6;
  // Platform (iOS, Android) - if null, platform agnostic
  google.protobuf.StringValue platform = 7;
}

// SearchResult
message SearchResult {
  // Article Id
  google.protobuf.StringValue id = 1;
  // Article title
  google.protobuf.StringValue title = 2;
  // Article tag(s)
  repeated google.protobuf.StringValue tag_id = 3;
  // Matching excerpt
  google.protobuf.StringValue excerpt = 4;
  // Article platform
  google.protobuf.StringValue platform = 5;
  // Article market
  google.protobuf.StringValue market = 6;
  // Article language
  google.protobuf.StringValue locale = 7;
  // Article created by
  google.protobuf.StringValue created_by = 8;
  // Article last published by
  google.protobuf.StringValue last_published_by = 9;
  // Article last published time stamp
  google.protobuf.Timestamp last_published_timestamp = 10;
  // Article status
  google.protobuf.StringValue status = 11;
}

// Request object for the UploadContent endpoint (unused)
message UploadContentRequest {
  // Name of content
  google.protobuf.StringValue name = 1;
  // Description of content
  google.protobuf.StringValue description = 2;
  // Alt text for accessibility
  google.protobuf.StringValue alt_text = 3;
  // Content type (eg video, image)
  google.protobuf.StringValue content_type = 4;
  // Content chunks
  bytes chunk_data = 5;
}

// Response object for the UploadContent endpoint
message UploadContentResponse {
  // Url for content
  google.protobuf.StringValue content_url = 2;
}

// Deprecated
// Body of the article (deprecated)
message Body {
  // id associated with the body of the article
  google.protobuf.StringValue id = 1 [deprecated = true];
  // (Optional) List of Assets or Text entities to describe the page
  repeated google.protobuf.Any content = 2 [deprecated = true];
}

// Text content (deprecated)
message Text {
  // id associated with the text field
  google.protobuf.StringValue id = 1 [deprecated = true];
  // Type of text field represented for formatting (header, title, subtitle, paragraph)
  google.protobuf.StringValue type = 2 [deprecated = true];
  // Text to be displayed, e.g. paragraph content (can be rich text)
  google.protobuf.StringValue display_text = 3 [deprecated = true];
  // Mapping of dictionary id to asset URL for rich text like hyperlinks
  map<string, string> inline_assets = 4 [deprecated = true];
}

// Asset content (deprecated)
message Asset {
  // id associated with the asset
  google.protobuf.StringValue id = 1 [deprecated = true];
  // URL of the location where asset is stored
  google.protobuf.StringValue url = 2 [deprecated = true];
  // Text to describe the asset for accessibility purposes
  google.protobuf.StringValue description = 3 [deprecated = true];
  // Date when asset was created
  google.protobuf.Timestamp created_at = 4 [deprecated = true];
  // Date when asset was modified
  google.protobuf.Timestamp updated_at = 5 [deprecated = true];
}

// Request object for the CreateArticle endpoint
message CreateArticleRequest {
  // Article
  Article article = 1 [deprecated = true];
}

// Response object for the CreateArticle endpoint
message CreateArticleResponse {
  // Article
  Article article = 1 [deprecated = true];
}

// Request object for the EditArticle endpoint
message EditArticleRequest {
  // Article
  Article article = 1 [deprecated = true];
}

// Response object for the EditArticle endpoint
message EditArticleResponse {
  // Article
  Article article = 1 [deprecated = true];
}
