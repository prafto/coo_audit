syntax = "proto3";
package self_help_service.self_help_workflow.v1;

import "google/protobuf/any.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option java_multiple_files = true;
option java_generic_services = true;
option java_package = "com.doordash.rpc.self_help_service.api";

// Service with defined endpoints for workflow related usages.
service SelfHelpWorkflowService {
  // Check if should block Cnr abuser
  rpc ShouldBlockCnrAbuser(ShouldBlockCnrAbuserRequest) returns (ShouldBlockCnrAbuserResponse);
}

// Selection from UI
enum ShouldBlockStatus {
    // Unspecified if error
    SHOULD_BLOCK_STATUS_UNSPECIFIED = 0;
    // Allow Cx to access support
    SHOULD_BLOCK_STATUS_ALLOW = 1;
    // Block Cx from accessing support
    SHOULD_BLOCK_STATUS_BLOCK = 2;
}

// Request object for the ShouldBlockCnrAbuser endpoint
message ShouldBlockCnrAbuserRequest {
  // consumer id (required)
  google.protobuf.StringValue consumer_id = 1;
  // delivery uuid (required)
  google.protobuf.StringValue delivery_uuid = 2;
}

// Response object for the ShouldBlockCnrAbuser endpoint
message ShouldBlockCnrAbuserResponse {
  // Block Cx from support status
  ShouldBlockStatus status = 1;
}