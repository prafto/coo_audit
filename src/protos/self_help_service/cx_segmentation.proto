syntax = "proto3";
package self_help_service.cx_segmentation.v1;

import "google/protobuf/struct.proto";
import "google/protobuf/wrappers.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.self_help_service.api";

// Service with defined endpoints for Cx identification purposes.
service CxSegmentationService {
  // Get trusted status of a consumer
  rpc GetTrustedStatus(GetTrustedStatusRequest) returns (GetTrustedStatusResponse);
  // Get consumer segmentation (VIP, whale, etc)
  rpc GetConsumerSegmentation(GetConsumerSegmentationRequest) returns (GetConsumerSegmentationResponse);
}

// Request object for the GetTrustedStatus endpoint
message GetTrustedStatusRequest {
  // id to check for in the ND flags table
  int64 consumer_id = 1;
}

// Response object for the GetTrustedStatus endpoint
message GetTrustedStatusResponse {
  // Is Cx trusted or not
  bool is_trusted = 1;
  // Is Cx unavail in last 3 orders (null if not trusted)
  google.protobuf.Int32Value cx_unavail_last_3_orders_flag = 2;
  // Lifetime ND no SMS flag (null if not trusted)
  google.protobuf.Int32Value lifetime_nd_no_sms_flag = 3;
  // Last 30 days ND flag (null if not trusted)
  google.protobuf.Int32Value nd_l30d_flag = 4;
}

// Request object for the GetConsumerSegmentation endpoint
message GetConsumerSegmentationRequest {
  // id to check for in the Cx segmentation table
  int64 consumer_id = 1;
}

// Response object for the GetConsumerSegmentation endpoint
message GetConsumerSegmentationResponse {
  // daily whale status of the Cx
  bool is_daily_whale = 1;
  // whether Cx is at risk of not staying a daily whale
  bool is_at_risk = 2;
  // Whether Cx is VIP 0.5% elite or not
  bool is_elite = 3;
}
