syntax = "proto3";

package developer_insights_service.v1;

import "common/service_client_config.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "iguazu/events/developer_insights_event.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.developer_insights_service";

// Multi search filter. copied from copied from https://github.com/doordash/services-protobuf/blob/master/protos/user_management_service/common/search.proto
// https://doordash.atlassian.net/wiki/spaces/Eng/pages/3110604845/Using+gRPC+Search+Endpoints+for+Elasticsearch
message MultiSearchFilter {
  // oneof filters_list or search_filter
  oneof filter {
    // filters list
    MultiSearchFilterList filters_list = 1;
    // single filter
    SearchFilter search_filter = 2;
  }
  // Whether we should negate the filter (eg. not <query>). Default false.
  bool must_not = 3;
}

// MultiSearchFilterList. copied from https://github.com/doordash/services-protobuf/blob/master/protos/user_management_service/common/search.proto
message MultiSearchFilterList {
  // filters
  repeated MultiSearchFilter filters = 1;
  // operation
  Operation operation = 2;
}

// SearchFilter. copied from https://github.com/doordash/services-protobuf/blob/master/protos/user_management_service/common/search.proto
message SearchFilter {
  // Field must be an enum field of the index we are searching.
  // Ex. For searching entities, use EntityField enum names like ENTITY_FIELD_ENTITY_TYPE.
  repeated google.protobuf.StringValue field = 1;
  // query type
  QueryType query_type = 2;
  // filter value.
  oneof filter_value {
    // bool
    bool bool = 3;
    // string
    string string = 4;
    // number
    int64 number = 5;
    // double
    double double = 6;
    // timestamp
    google.protobuf.Timestamp timestamp = 7;
    // number list
    NumberList number_list_value = 8;
    // string list
    StringList string_list_value = 9;
  }
}

// Numbers List
message NumberList {
  // numbers
  repeated int64 numbers = 1;
}

// String List
message StringList {
  // strings
  repeated string strings = 1;
}

// Operations
enum Operation {
  // operation unspecified
  OPERATION_UNSPECIFIED = 0;
  // Filters will be ANDed together.
  OPERATION_AND = 1;
  // Filters will be ORed together.
  OPERATION_OR = 2;
}

// query type
enum QueryType {
  // query type unspecified
  QUERY_TYPE_UNSPECIFIED = 0;
  // Fuzzy match.
  QUERY_TYPE_MATCH = 1;
  // Exact match.
  QUERY_TYPE_TERM = 2;
  // Greater or equal
  QUERY_TYPE_GREATER_THAN_OR_EQUAL = 3;
  // Less or equal
  QUERY_TYPE_LESS_THAN_OR_EQUAL = 4;
  // List of ids to match.
  QUERY_TYPE_TERMS = 5;
  // Field exists / is not null.
  QUERY_TYPE_EXISTS = 6;
  // Greater than
  QUERY_TYPE_GREATER_THAN = 7;
  // Less than
  QUERY_TYPE_LESS_THAN = 8;
  // Multi match
  QUERY_TYPE_MULTI_MATCH = 9;
}
