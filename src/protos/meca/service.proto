syntax = "proto3";

package meca.v1;

import "google/protobuf/wrappers.proto";

option go_package = "meca";
option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.meca.grpc";

// Food Catalog Service
service FoodCatalogService {
  // Get tags of food items
  rpc GetFoodItemTags(GetFoodItemTagsRequest) returns (GetFoodItemTagsResponse);
  // Get tags of food items V2
  rpc GetFoodItemTagsV2(GetFoodItemTagsV2Request) returns (GetFoodItemTagsV2Response);
  // Get tags of stores V2
  rpc GetStoreTags(GetStoreTagsRequest) returns (GetStoreTagsResponse);
  // Release all concept under a scheme to Snowflake table
  rpc ReleaseTaxonomyVersion(ReleaseTaxonomyVersionRequest) returns (ReleaseTaxonomyVersionResponse);
}

// A food item with tags
message FoodItemWithTags {
  // foreign key for food item
  int64 item_id = 1;
  // tags with taxonomy version and score
  repeated FoodCatalogTag food_tags = 2;
}

// A food item with tags for V2
message FoodItemWithTagsV2 {
  // foreign key for food item
  int64 item_id = 1;
  // tags with taxonomy version and score
  repeated FoodCatalogTagV2 food_tags = 2;
}

// A food catalog tag
message FoodCatalogTag {
  // predicted tag value
  string value = 1;
  // predicted score
  float score = 2;
  // taxonomy version
  TaxonomyVersion taxonomy_version = 3;
}

// A food catalog tag for V2
message FoodCatalogTagV2 {
  // predicted tag value
  string value = 1;
  // confidence score
  float score = 2;
  // taxonomy version
  TaxonomyVersionV2 taxonomy_version_v2 = 3;
  // relevance score
  float relevance_score = 4;
}

// Enum for taxonomy category
enum TaxonomyCategory {
  // unspecified
  TAXONOMY_CATEGORY_UNSPECIFIED = 0;
  // dish type
  TAXONOMY_CATEGORY_DISH_TYPE = 1;
  // cuisine type
  TAXONOMY_CATEGORY_CUISINE_TYPE = 2;
}

// Enum for taxonomy category for V2
enum TaxonomyCategoryV2 {
  // unspecified
  TAXONOMY_CATEGORY_V2_UNSPECIFIED = 0;
  // restaurant items
  TAXONOMY_CATEGORY_V2_RESTAURANT_ITEMS = 1;
  // cuisine type
  TAXONOMY_CATEGORY_V2_CUISINE_TYPES = 2;
  // dietary preference
  TAXONOMY_CATEGORY_V2_DIETARY_PREFERENCES = 3;
  // courses type
  TAXONOMY_CATEGORY_V2_COURSES = 4;
  // store types
  TAXONOMY_CATEGORY_V2_STORE_TYPES = 5;
}

// Enum for taxonomy version
enum TaxonomyVersion {
  // unspecified = 0;
  TAXONOMY_VERSION_UNSPECIFIED = 0;
  // dish type N35
  TAXONOMY_VERSION_N35 = 1;
  // cuisine type N18
  TAXONOMY_VERSION_N18 = 2;
  // dish type V1
  TAXONOMY_VERSION_V1 = 3;
  // dish type V1 R0
  TAXONOMY_VERSION_V1_R0 = 4;
}

// Enum for taxonomy version in V2
message TaxonomyVersionV2 {
  // concept schema version
  string concept_schema_version = 1;
  // model version
  string model_version = 2;
}

// request for get food catalog tags
message GetFoodItemTagsRequest {
  // item ids
  repeated int64 item_ids = 1;
  // taxonomy category
  TaxonomyCategory taxonomy_category = 2;
  // taxonomy versions
  repeated TaxonomyVersion taxonomy_versions = 3;
}

// store entity
message Store {
  // store id
  int64 store_id = 1;
}

// item entity
message Item {
  // menu id, optional field. if not provided, return any menu_id of that item
  int64 menu_id = 1;
  // item id
  int64 item_id = 2;
}

// request for get food catalog tags
message GetFoodItemTagsV2Request {
  // item entity
  repeated Item items = 1;
  // taxonomy category
  TaxonomyCategoryV2 taxonomy_category = 2;
  // taxonomy versions
  repeated TaxonomyVersionV2 taxonomy_version_v2 = 3;
}

// response for get tags of items
message GetFoodItemTagsResponse {
  // item with tags
  repeated FoodItemWithTags food_item_with_tags = 1;
}

// response for get tags of items for V2
message GetFoodItemTagsV2Response {
  // item with tags for V2
  repeated FoodItemWithTagsV2 food_item_with_tags_v2 = 1;
}

// A request for releasing all concepts under a scheme to Snowflake table
message ReleaseTaxonomyVersionRequest {
  // the concept scheme name. e.g. "dish_type", "cuisine"
  string concept_scheme_name = 1;
  // the concept scheme version. e.g. "v1", "N35"
  string concept_scheme_version = 2;
  // the unencoded url of the concept scheme
  string graphite_concept_scheme_url = 3;
  // whether the concept scheme version is stable
  bool is_stable = 4;
  // the email of the request person
  string email = 5;
  // ignore existing is_stable value if it set to True
  bool is_forced = 6;
}

// A response for releasing all concepts under a scheme to Snowflake table
message ReleaseTaxonomyVersionResponse {
  // the result of request submission
  bool is_submitted = 1;
}

// request for get store tags
message GetStoreTagsRequest {
  // item entity
  repeated Store store = 1;
  // taxonomy category
  TaxonomyCategoryV2 taxonomy_category = 2;
  // taxonomy versions
  repeated TaxonomyVersionV2 taxonomy_version_v2 = 3;
}

// response for get store tags
message GetStoreTagsResponse {
  // store with tags
  repeated StoreWithTags store_with_tags = 1;
}

// bundle of store and tags
message StoreWithTags {
  // store id
  int64 store_id = 1;
  // tags with taxonomy version and confidence score
  repeated FoodCatalogTagV2 food_tags = 2;
}
