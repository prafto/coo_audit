syntax = "proto3";

// buf:lint:ignore DIRECTORY_SAME_PACKAGE
package doordash.retail.catalog.common.v1;

import "google/protobuf/wrappers.proto";

option go_package = "github.com/doordash/services-protobuf/generated/doordash/retail/catalog/common/v1";
option java_multiple_files = true;

// Enum representing different types of watch bands.
enum BandType {
  // Unspecified watch band type.
  BAND_TYPE_UNSPECIFIED = 0;
  // Leather watch band type.
  BAND_TYPE_LEATHER = 1;
  // Metal watch band type.
  BAND_TYPE_METAL = 2;
  // Silicone watch band type.
  BAND_TYPE_SILICONE = 3;
  // Nylon watch band type.
  BAND_TYPE_NYLON = 4;
  // Rubber watch band type.
  BAND_TYPE_RUBBER = 5;
  // Stainless steel watch band type.
  BAND_TYPE_STAINLESS_STEEL = 6;
  // Mesh watch band type.
  BAND_TYPE_MESH = 7;
  // Ceramic watch band type.
  BAND_TYPE_CERAMIC = 8;
  // Resin watch band type.
  BAND_TYPE_RESIN = 9;
  // Fabric watch band type.
  BAND_TYPE_FABRIC = 10;
  // Canvas watch band type.
  BAND_TYPE_CANVAS = 11;
  // Wood watch band type.
  BAND_TYPE_WOOD = 12;
  // Rubber/Silicone Hybrid watch band type.
  BAND_TYPE_RUBBER_SILICONE_HYBRID = 13;
  // Plastic watch band type.
  BAND_TYPE_PLASTIC = 14;
}

// Message representing the screen resolution of a device.
message ScreenResolution {
  // Vertical pixel count of the screen.
  google.protobuf.Int64Value vertical_pixels = 1;
  // Horizontal pixel count of the screen.
  google.protobuf.Int64Value horizontal_pixels = 2;
}

// Enum representing different byte units for measuring data sizes.
enum ByteUnit {
  // Unspecified byte unit.
  BYTE_UNIT_UNSPECIFIED = 0;
  // Byte unit.
  BYTE_UNIT_BYTE = 1;
  // Kilobyte unit (1000 bytes).
  BYTE_UNIT_KILOBYTE = 2;
  // Megabyte unit (1,000,000 bytes).
  BYTE_UNIT_MEGABYTE = 3;
  // Gigabyte unit (1,000,000,000 bytes).
  BYTE_UNIT_GIGABYTE = 4;
  // Terabyte unit (1,000,000,000,000 bytes).
  BYTE_UNIT_TERABYTE = 5;
  // Petabyte unit (1,000,000,000,000,000 bytes).
  BYTE_UNIT_PETABYTE = 6;
  // Exabyte unit (1,000,000,000,000,000,000 bytes).
  BYTE_UNIT_EXABYTE = 7;
  // Kibibyte unit (1024 bytes).
  BYTE_UNIT_KIBIBYTE = 8;
  // Mebibyte unit (1,048,576 bytes).
  BYTE_UNIT_MEBIBYTE = 9;
  // Gibibyte unit (1,073,741,824 bytes).
  BYTE_UNIT_GIBIBYTE = 10;
  // Tebibyte unit (1,099,511,627,776 bytes).
  BYTE_UNIT_TEBIBYTE = 11;
  // Pebibyte unit (1,125,899,906,842,624 bytes).
  BYTE_UNIT_PEBIBYTE = 12;
  // Exbibyte unit (1,152,921,504,606,846,976 bytes).
  BYTE_UNIT_EXBIBYTE = 13;
}

// Message representing the storage size of an electronic device.
message ElectronicsStorageSize {
  // The numerical value of the storage size.
  // Example: 128 for 128 GB.
  google.protobuf.Int64Value value = 1;
  // The unit of measurement for the storage size, such as bytes, kilobytes, megabytes, etc.
  ByteUnit unit = 2;
}

// Enum representing different units for frequency measurement.
enum FrequencyUnit {
  // Unspecified frequency unit.
  FREQUENCY_UNIT_UNSPECIFIED = 0;
  // Hertz (Hz) unit.
  FREQUENCY_UNIT_HERTZ = 1;
  // Kilohertz (kHz) unit.
  FREQUENCY_UNIT_KILOHERTZ = 2;
  // Gigahertz (GHz) unit.
  FREQUENCY_UNIT_GIGAHERTZ = 3;
  // Terahertz (THz) unit.
  FREQUENCY_UNIT_TERAHERTZ = 4;
}

// Message representing clock frequency of a device.
message ClockFrequency {
  // The numerical value of the clock frequency.
  google.protobuf.FloatValue value = 1;
  // The unit of measurement for the clock frequency.
  FrequencyUnit unit = 2;
}

// Enum representing the condition of an item.
enum Condition {
  // Unspecified condition.
  CONDITION_UNSPECIFIED = 0;
  // New condition.
  CONDITION_NEW = 1;
  // Pre-owned condition.
  CONDITION_PRE_OWNED = 2;
  // Open box condition.
  CONDITION_OPEN_BOX = 3;
  // Refurbished condition.
  CONDITION_REFURBISHED = 4;
}

// Describes electronics products.
message Electronics {
  // The type of band used in an electronic watch.
  BandType band_type = 1;
  // The resolution of the screen in the electronics device.
  ScreenResolution screen_resolution = 2;
  // The storage capacity of the electronics device.
  ElectronicsStorageSize storage = 3;
  // The memory capacity of the electronics device.
  ElectronicsStorageSize memory = 4;
  // The clock frequency or speed of the processor in the electronics device.
  ClockFrequency processor_speed = 5;
  // The condition of the electronics device (e.g., new, refurbished, used).
  Condition condition = 6;
  // The model of the phone (e.g. Android, iPhone, etc.).
  google.protobuf.StringValue phone_model = 7;
  // The brand of the processor used in the electronics device.
  google.protobuf.StringValue processor_brand = 8;
  // Free text description of the screen size.
  google.protobuf.StringValue screen_size = 9;
  // optional, type of electronic device
  google.protobuf.StringValue electronic_type = 10;
  // optional, type of display screen (OLED, QLED, LED)
  google.protobuf.StringValue display_type = 11;
  // optional, battery life in hours
  google.protobuf.FloatValue battery_life = 12;
  // optional, format of the electronic item
  google.protobuf.StringValue electronic_format = 13;
  // optional, ESRB rating for games and content
  google.protobuf.StringValue esrb_rating = 14;
  // optional, refresh rate of the display
  google.protobuf.StringValue refresh_rate = 15;
  // optional, voltage requirement in volts
  google.protobuf.FloatValue voltage = 16;
  // optional, types of connectors available
  repeated google.protobuf.StringValue connector_type = 17;
  // optional, whether batteries are included
  google.protobuf.BoolValue battery_included = 18;
  // optional, whether batteries are required
  google.protobuf.BoolValue battery_required = 19;
  // optional, screen resolution
  google.protobuf.StringValue resolution = 20;
  // optional, battery size
  repeated google.protobuf.StringValue battery_size = 21;
}
