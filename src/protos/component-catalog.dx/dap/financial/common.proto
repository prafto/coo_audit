syntax = "proto3";

package component_catalog.dx.dap.financial.v1;

import "action-catalog/dx/action.proto";
import "component-catalog.common/prism/components/tag.proto";
import "component-catalog.dx/dap/earnings/common.proto";
import "component-catalog.dx/dap/util/dynamic_effects.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/wrappers.proto";

option go_package = "github.com/doordash/services-protobuf/generated/component-catalog.dx/dap/financial";
option java_multiple_files = true;
option java_package = "com.doordash.rpc.component_catalog.dx.dap.financial";

// Embedded banner
message EmbeddedBanner {
  // used for deprecated field numbers
  reserved 7, 8;
  // used for deprecated field names
  reserved "primary_button", "secondary_button";
  // the id
  google.protobuf.StringValue id = 1;
  // the type
  EmbeddedBannerType type = 2;
  // the title
  google.protobuf.StringValue title = 3;
  // the body
  google.protobuf.StringValue body = 4;
  // the leading icon server-driven name
  google.protobuf.StringValue leading_icon_name = 5;
  // the leading image uri
  google.protobuf.StringValue leading_image_uri = 6;
  // progress on progress bar
  google.protobuf.DoubleValue progress = 9;
  // highlights text
  repeated google.protobuf.StringValue highlights = 10;
  // is dismissible
  google.protobuf.BoolValue is_dismissible = 11;
  // the primary button
  component_catalog.dx.dap.earnings.v1.EarningsButton primary_action_button = 12;
  // the secondary button
  component_catalog.dx.dap.earnings.v1.EarningsButton secondary_action_button = 13;
}

// Embedded footer banner
message EmbeddedFooterBanner {
  // used for deprecated field numbers
  reserved 3;
  // used for deprecated field names
  reserved "button";
  // the body
  google.protobuf.StringValue body = 1;
  // the leading icon server-driven name
  repeated component_catalog.common.prism.components.v1.Tag tags = 2;
  // the action button
  component_catalog.dx.dap.earnings.v1.EarningsButton action_button = 4;
}

// Embedded banner type
enum EmbeddedBannerType {
  // unspecified embedded banner
  EMBEDDED_BANNER_TYPE_UNSPECIFIED = 0;
  // informational banner
  EMBEDDED_BANNER_TYPE_INFORMATIONAL = 1;
  // positive banner
  EMBEDDED_BANNER_TYPE_POSITIVE = 2;
  // negative banner
  EMBEDDED_BANNER_TYPE_NEGATIVE = 3;
  // warning banner
  EMBEDDED_BANNER_TYPE_WARNING = 4;
  // highlight banner
  EMBEDDED_BANNER_TYPE_HIGHLIGHT = 5;
}
