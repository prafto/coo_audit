syntax = "proto3";

package component_catalog.dx.dap.drive.v1;

import "action-catalog/dx/action.proto";
import "component-catalog.common/prism/components/tag.proto";
import "component-catalog.common/prism/shared/icon.proto";
import "component-catalog.common/prism/tokens/color.proto";
import "google/protobuf/wrappers.proto";

option go_package = "github.com/doordash/services-protobuf/generated/component-catalog.dx/dap/drive";
option java_multiple_files = true;
option java_package = "com.doordash.rpc.component_catalog.dx.dap.drive";

// Signature Input Field
message DriveComponentSignatureInputField {
  // databag keys
  string data_store_key = 1;
}

// Navigation list cell block
message DriveComponentNavigationListCellBlock {
  // Specifies the ``Tag`` configuration for a ``ListCell``
  message ListCellTag {
    // tag type
    component_catalog.common.prism.components.v1.Tag.TagType type = 1;
    // tag style
    component_catalog.common.prism.components.v1.Tag.TagStyle style = 2;
    // tag size
    component_catalog.common.prism.components.v1.Tag.TagSize size = 3;
    // Used to describe the Tag in a short and succint way.
    google.protobuf.StringValue label = 4;
    // An icon to be displayed on the leading edge of the tag.
    // Used for additional, visual context for the input text.
    component_catalog.common.prism.shared.v1.Icon leading_icon = 5;
  }

  // Specifies the visual treatment of the separator at the bottom of the ``ListCell``.
  enum ListCellSeparator {
    // Use the inset separator as the default to separate ``ListCell``'s in a list.
    LIST_CELL_SEPARATOR_INSET_UNSPECIFIED = 0;
    // Use this variant with no separator when a ``ListCell`` is the last in a list.
    LIST_CELL_SEPARATOR_NONE = 1;
  }

  // The separator style
  ListCellSeparator separator = 7;
  // The primary label content
  string label = 1;
  // Accessory description content, displayed below the label
  string description = 2;
  // Accessory detail content, displayed below the description
  string detail = 3;
  // Accessory description content, displayed in the trailing portion of the list cell
  string trailing_description = 4;
  // Accessory tags to be displayed below the detail content. You should avoid adding more than 4 tags to the list cell.
  repeated ListCellTag tags = 6;
  // action to be performed when the cell is selected
  repeated action_catalog.dx.v1.DxAction actions = 5;
}

// A horizontal tab bar that allows the user to select a tab from a collection of tabs.
message DriveComponentButtonTabs {
  // The supported styles.
  enum ButtonTabsStyle {
    // Tabs expand to the fill their parent container
    BUTTON_TABS_STYLE_EXPAND_TO_FILL_UNSPECIFIED = 0;
    // Tabs size to fit their content
    BUTTON_TABS_STYLE_INLINE = 1;
    // Tabs are horizontally scrollable and size to fit their content.
    //
    // If all of the tabs fit within the visible area of the `ButtonTabs` view,
    // they will be left aligned in the scrollable area (similarly to the `.inline` style).
    BUTTON_TABS_STYLE_SCROLLABLE = 2;
  }

  // The supported sizes.
  enum ButtonTabsSize {
    // Small `ButtonTab`
    BUTTON_TABS_SIZE_SMALL_UNSPECIFIED = 0;

    // Medium `ButtonTab`
    BUTTON_TABS_SIZE_MEDIUM = 1;

    // Large `ButtonTab`
    BUTTON_TABS_SIZE_LARGE = 2;
  }

  // A tag to display on a tab.
  message ButtonTabTag {
    // tag type
    component_catalog.common.prism.components.v1.Tag.TagType type = 1;
    // tag style
    component_catalog.common.prism.components.v1.Tag.TagStyle style = 2;
    // Used to describe the Tag in a short and succint way.
    string label = 3;
    // An icon to be displayed on the leading edge of the tag.
    // Used for additional, visual context for the input text.
    component_catalog.common.prism.shared.v1.Icon leading_icon = 4;
  }

  // A tab item.
  message ButtonTab {
    // A unique id for the tab, used to track selection.
    string id = 1;

    // The title to display.
    string title = 2;

    // An optional tag to include on the tab.
    ButtonTabTag tag = 3;
  }

  // The style of the ButtonTabs.
  ButtonTabsStyle style = 1;

  // The size variant of the component.
  ButtonTabsSize size = 2;

  // The tabs to display in the component.
  repeated ButtonTab tabs = 3;

  // When set, shows that tab first and defaults `selectedTabIDDataStoreKey` to this value. When not set, the first tab will be used.
  //
  // Corresponds to `id` in `tabs`.
  google.protobuf.StringValue initial_selected_tab_id = 4;

  // The key name of the binding for the selected tab id in the data store. Corresponds to `id` in `tabs`.
  string selected_tab_id_data_bag_key = 5;
}

// Component for displaying a legend (either in segments or with a gradient) for ratings.
message DriveComponentRatingsLegend {
  // The style of legend to display
  enum LegendStyle {
    // Shows each segment separated with solid colors
    LEGEND_STYLE_GROUPED_UNSPECIFIED = 0;
    // Uses a gradient to display a range of statuses
    LEGEND_STYLE_CONTINUOUS = 1;
  }

  // A styling to use on a segment
  enum SegmentStyle {
    // Uses segment color instead
    SEGMENT_STYLE_UNSPECIFIED = 0;

    // A shade of green indicating positive metrics
    SEGMENT_STYLE_POSITIVE = 1;
    // A shade of yellow indicating slightly negative metrics
    SEGMENT_STYLE_WARNING = 2;
    // A shade of red indicating bad metrics
    SEGMENT_STYLE_NEGATIVE = 3;
  }

  // A single component of the legend
  message Segment {
    // Indicates the value of the segment's range
    string value = 1;
    // Label for what the segment represents
    string label = 2;
    // The color to show the segment as. For continuous legends this is used to generate the gradient stop.
    component_catalog.common.prism.tokens.v1.Color color = 3;
    // The style to apply to the segment
    SegmentStyle style = 4;
  }

  // The type of legend to display
  LegendStyle style = 1;

  // The parts of the legend
  repeated Segment segments = 2;
}
