syntax = "proto3";

package component_catalog.dx.nv.common.v1;

import "action-catalog/dx/action.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/wrappers.proto";

option go_package = "github.com/doordash/services-protobuf/generated/component-catalog.dx/nv/common";
option java_multiple_files = true;
option java_package = "com.doordash.rpc.component_catalog.dx.nv.common";

// Component that takes a photo with validation checks
message TakePhotoV2 {
  // config for taking a photo
  TakePhotoConfiguration take_photo_configuration = 1;
  // when photo is taken successfully
  repeated action_catalog.dx.v1.DxAction navigation_actions = 2;

  // when photo needs to be retaken
  message TakePhotoConfiguration {
    // attributes
    Attributes attributes = 1;
    // additional screen properties
    AdditionalScreenProperties additional_screen_properties = 2;
    // photo actions
    repeated PhotoActionContent photo_actions = 3;

    // Take Photo config attributes
    message Attributes {
      // title
      google.protobuf.StringValue title = 1;
      // instructions
      google.protobuf.StringValue instructions = 2;
      // photo quality
      PhotoQuality photo_quality = 3;
      // whether selecting from photo library is allowed
      google.protobuf.BoolValue can_select_from_photo_library = 4;
      // whether to skip single photo review
      google.protobuf.BoolValue skip_single_photo_review = 5;
      // whether to enable camera flash
      google.protobuf.BoolValue enable_flash = 6;
      // capture mode
      PhotoCaptureMode capture_mode = 7;
      // camera overlay
      PhotoCaptureCameraOverlay camera_overlay = 8;
      // max number of blocking errors
      google.protobuf.Int32Value max_number_of_blocking_errors = 9;
      // whether to enable Pinch To Zoom
      google.protobuf.BoolValue enable_pinch_to_zoom = 10;
      // photo verifications to perform
      repeated PhotoCaptureVerification photo_verification = 11;
      // photo checks configuration
      repeated PhotoChecksConfiguration photo_checks_configurations = 12;
      // camera tilt range
      CameraTiltRange camera_tilt_range = 13;
      // image brightness threshold
      google.protobuf.Int32Value image_brightness_threshold = 14;
      // image key
      google.protobuf.StringValue image_key = 15;
      // camera result key
      google.protobuf.StringValue camera_result_key = 16;
      // logging attributes
      map<string, string> logging_attributes = 17;
      // max number of soft blocking errors
      google.protobuf.Int32Value max_number_of_soft_errors = 18;

      // definition of the photo quality
      message PhotoQuality {
        // image format check
        PhotoCaptureImageFormat image_format = 1;
        // high resolution check
        google.protobuf.BoolValue is_high_resolution = 2;
      }

      // definition of the photo checks configuration
      message PhotoChecksConfiguration {
        // specific photo verification method to configure
        PhotoCaptureVerification photo_verification = 1;
        // Displayed messages when photo verification fails
        Content content = 2;

        // definition of the content
        message Content {
          // title
          google.protobuf.StringValue title = 1;
          // subtitle
          google.protobuf.StringValue subtitle = 2;
        }
      }

      // definition of the camera tilt range
      message CameraTiltRange {
        // minimum tilt angle
        google.protobuf.Int32Value min = 1;
        // maximum tilt angle
        google.protobuf.Int32Value max = 2;
      }
    }

    // additional screen properties
    message AdditionalScreenProperties {
      // on launch information
      CameraAlertInformationInfo information_on_launch = 1;
      // info icon display
      CameraAlertInformationInfo info_icon_message = 2;
      // on close confirmation message
      CameraAlertInformationInfo confirmation_on_close = 3;
      // custom configurations
      CameraCustomConfigurations custom_configurations = 4;

      // camera alert information
      message CameraAlertInformationInfo {
        // title
        google.protobuf.StringValue title = 1;
        // body
        Body body = 2;
        // positive button title
        google.protobuf.StringValue positive_button_title = 3;
        // negative button title
        google.protobuf.StringValue negative_button_title = 4;
        // body, lego group id
        google.protobuf.StringValue body_lego_group_id = 5;

        // camera alert information body
        message Body {
          // text
          google.protobuf.StringValue text = 1;
          // image
          Image image = 2;

          // camera alert info image
          enum Image {
            // unspecified
            IMAGE_UNSPECIFIED = 0;
            // no image
            IMAGE_NONE = 1;
            // camera image
            IMAGE_CAMERA = 2;
            // gallery image
            IMAGE_GALLERY = 3;
          }
        }
      }

      // camera custom configurations
      message CameraCustomConfigurations {
        // autocomplete on photo taken
        google.protobuf.BoolValue autocomplete_on_photo_taken = 1;
        // screen title
        google.protobuf.StringValue screen_title = 2;
        // success state labels
        SuccessStateLabels success_state_labels = 3;
        // hard block state
        HardBlockState hard_block_state = 4;
        // soft block state labels
        SoftBlockStateLabels soft_block_state_labels = 5;
        // upload state labels
        UploadStateLabels upload_info = 6;

        // success state labels
        message SuccessStateLabels {
          // right primary button
          google.protobuf.StringValue right_primary_button = 1;
          // left secondary button
          google.protobuf.StringValue left_secondary_button = 2;
        }

        // hard block state
        message HardBlockState {
          // primary button label
          google.protobuf.StringValue primary_button = 1;
        }

        // soft block state labels
        message SoftBlockStateLabels {
          // right secondary button label
          google.protobuf.StringValue right_secondary_button = 1;
          // left primary button label
          google.protobuf.StringValue left_primary_button = 2;
        }

        // upload state labels
        message UploadStateLabels {
          // uploading label
          google.protobuf.StringValue uploading_label = 1;
          // upload complete label
          google.protobuf.StringValue upload_complete_label = 2;
        }
      }
    }

    // photo action content
    message PhotoActionContent {
      // action type, each key maps to a unique "content" field JSON structure
      google.protobuf.StringValue key = 1;
      // action content, a freeform JSON
      google.protobuf.Struct content = 2;
    }
  }
}

// definition of the image format
enum PhotoCaptureImageFormat {
  // default
  PHOTO_CAPTURE_IMAGE_FORMAT_UNSPECIFIED = 0;
  // JPEG format
  JPEG = 1;
  // PNG format
  PNG = 2;
}

// definition of the capture mode
enum PhotoCaptureMode {
  // default
  PHOTO_CAPTURE_MODE_UNSPECIFIED = 0;
  // single photo
  SINGLE = 1;
  // multiple photos
  MULTIPLE = 2;
}

// definition of the camera overlay
enum PhotoCaptureCameraOverlay {
  // default
  PHOTO_CAPTURE_CAMERA_OVERLAY_UNSPECIFIED = 0;
  // no overlay
  NONE = 1;
  // center overlay
  CENTER = 2;
  // bottom center square overlay - special cased naming for implementation
  BOTTOM_CENTER_SQUARE = 3;
}

// definition of the photo verification
enum PhotoCaptureVerification {
  // default
  PHOTO_CAPTURE_VERIFICATION_UNSPECIFIED = 0;
  // cannot be too blurry
  BLUR_DETECTION = 1;
  // cannot be too dark
  BRIGHTNESS_CHECK = 2;
  // camera angle check
  CAMERA_ANGLE = 3;
  // lens distance check
  LENS_DISTANCE = 4;
  // photo should have a receipt-like object
  RECEIPT_CHECK = 5;
  // photo should have a barcode
  RECEIPT_BARCODE_CHECK = 6;
}
