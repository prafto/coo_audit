syntax = "proto3";

package component_catalog.dx.payout_experience.v1;

import "component-catalog.common/prism/shared/icon.proto";
import "google/protobuf/any.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/wrappers.proto";

option go_package = "github.com/doordash/services-protobuf/generated/component-catalog.dx/payout_experience";
option java_multiple_files = true;
option java_package = "com.doordash.rpc.component_catalog.dx.payout_experience";

// VGSFieldType represents the types of fields that require specific formatting and validation.
enum VGSFieldType {
  // Unspecified field type, default value and don't use.
  VGS_FIELD_TYPE_UNSPECIFIED = 0;
  // Field type that doesn't require any input formatting and validation.
  VGS_FIELD_TYPE_NONE = 1;
  // Field type that requires Credit Card Number input formatting and validation.
  VGS_FIELD_TYPE_CARD_NUMBER = 2;
  // Field type that requires Expiration Date input formatting and validation.
  VGS_FIELD_TYPE_EXPIRATION_DATE = 3;
  // Field type that requires Date input formatting and validation.
  VGS_FIELD_TYPE_DATE = 4;
  // Field type that requires Credit Card CVC input formatting and validation.
  VGS_FIELD_TYPE_CVC = 5;
  // Field type that requires Cardholder Name input formatting and validation.
  VGS_FIELD_TYPE_CARD_HOLDER_NAME = 6;
  // Field type that requires US Social Security Number input formatting and validation.
  VGS_FIELD_TYPE_SSN = 7;
}

// Represents an unspecified field size.
enum FieldSize {
  // Represents an unspecified field size.
  FIELD_SIZE_UNSPECIFIED = 0;
  // Represents a small field size.
  FIELD_SIZE_SMALL = 1;
  // Represents a medium field size.
  FIELD_SIZE_MEDIUM = 2;
  // Represents a large field size.
  FIELD_SIZE_LARGE = 3;
}

// Represents an unspecified keyboard type.
enum KeyboardType {
  // Represents an unspecified keyboard type.
  KEYBOARD_TYPE_UNSPECIFIED = 0;
  // Represents a default keyboard type.
  KEYBOARD_TYPE_DEFAULT = 1;
  // Represents a phone keyboard type.
  KEYBOARD_TYPE_PHONE = 2;
  // Represents an email keyboard type.
  KEYBOARD_TYPE_EMAIL = 3;
  // Represents a number keyboard type.
  KEYBOARD_TYPE_NUMBER = 4;
  // Represents a decimal keyboard type.
  KEYBOARD_TYPE_DECIMAL = 5;
}

// ValidationRule is a message that encapsulates various types of validation rules.
message VGSValidationRule {
  // The type of validation rule.
  VGSValidation type = 1;
  // The actual rule which depends on the type. Can be any VGSValidationRuleXXX message.
  google.protobuf.Struct rule = 2;
}

// Represent the keyboard return key type
enum ReturnKeyType {
  // Default return ket type. OS will decide the context specific text
  RETURN_KEY_TYPE_UNSPECIFIED = 0;
  // Return button will have label continue
  RETURN_KEY_TYPE_CONTINUE = 1;
  // Return button will have label done
  RETURN_KEY_TYPE_DONE = 2;
}

// VGSValidation represents the types of validation rules.
enum VGSValidation {
  // Unspecified validation type, default value and don't use.
  VGS_VALIDATION_UNSPECIFIED = 0;
  // VGS Validation type for length validation.
  VGS_VALIDATION_LENGTH = 1;
  // VGS Validation type for length match validation.
  VGS_VALIDATION_LENGTH_MATCH = 2;
  // VGS Validation type for regex pattern validation.
  VGS_VALIDATION_PATTERN = 3;
  // VGS Validation type for payment card validation.
  VGS_VALIDATION_PAYMENT_CARD = 4;
  // VGS Validation type for Luhn algorithm check validation.
  VGS_VALIDATION_LUHN_CHECK = 5;
  // VGS Validation type for card expiration date validation.
  VGS_VALIDATION_CARD_EXPIRATION_DATE = 6;
  // VGS Validation type for date range validation.
  VGS_VALIDATION_DATE_RANGE = 7;
}

// Represents an unspecified auto-capitalization type.
enum AutoCapitalizationType {
  // Represents an unspecified auto-capitalization type.
  AUTO_CAPITALIZATION_TYPE_UNSPECIFIED = 0;
  // Represents the default auto-capitalization type.
  AUTO_CAPITALIZATION_TYPE_DEFAULT = 1;
  // Represents never auto-capitalization.
  AUTO_CAPITALIZATION_TYPE_NEVER = 2;
  // Represents auto-capitalization of words.
  AUTO_CAPITALIZATION_TYPE_WORDS = 3;
  // Represents auto-capitalization of sentences.
  AUTO_CAPITALIZATION_TYPE_SENTENCES = 4;
  // Represents auto-capitalization of characters.
  AUTO_CAPITALIZATION_TYPE_CHARACTERS = 5;
}

// Represents an unspecified autofill hint.
enum AutofillHint {
  // Represents an unspecified autofill hint.
  AUTOFILL_HINT_UNSPECIFIED = 0;
  // Represents a name prefix autofill hint.
  AUTOFILL_HINT_NAME_PREFIX = 1;
  // Represents a name autofill hint.
  AUTOFILL_HINT_NAME = 2;
  // Represents a name suffix autofill hint.
  AUTOFILL_HINT_NAME_SUFFIX = 3;
  // Represents a given name autofill hint.
  AUTOFILL_HINT_GIVEN_NAME = 4;
  // Represents a middle name autofill hint.
  AUTOFILL_HINT_MIDDLE_NAME = 5;
  // Represents a middle initial autofill hint.
  AUTOFILL_HINT_MIDDLE_INITIAL = 6;
  // Represents a family name autofill hint.
  AUTOFILL_HINT_FAMILY_NAME = 7;
  // Represents an organization name autofill hint.
  AUTOFILL_HINT_ORG_NAME = 8;
  // Represents a job title autofill hint.
  AUTOFILL_HINT_JOB_TITLE = 9;
  // Represents a gender autofill hint.
  AUTOFILL_HINT_GENDER = 10;
  // Represents a location autofill hint.
  AUTOFILL_HINT_LOCATION = 11;
  // Represents an address autofill hint.
  AUTOFILL_HINT_ADDRESS = 12;
  // Represents a street address line 1 autofill hint.
  AUTOFILL_HINT_STREET_ADDRESS_1 = 13;
  // Represents a street address line 2 autofill hint.
  AUTOFILL_HINT_STREET_ADDRESS_2 = 14;
  // Represents a city autofill hint.
  AUTOFILL_HINT_CITY = 15;
  // Represents a state autofill hint.
  AUTOFILL_HINT_STATE = 16;
  // Represents a postal code autofill hint.
  AUTOFILL_HINT_POSTAL_CODE = 17;
  // Represents a country autofill hint.
  AUTOFILL_HINT_COUNTRY = 18;
  // Represents a sublocality autofill hint.
  AUTOFILL_HINT_SUBLOCALITY = 19;
  // Represents a username autofill hint.
  AUTOFILL_HINT_USER_NAME = 20;
  // Represents a password autofill hint.
  AUTOFILL_HINT_PASSWORD = 21;
  // Represents a new password autofill hint.
  AUTOFILL_HINT_NEW_PASSWORD = 22;
  // Represents a one-time code autofill hint.
  AUTOFILL_HINT_ONE_TIME_CODE = 23;
  // Represents a promo code autofill hint.
  AUTOFILL_HINT_PROMO_CODE = 24;
  // Represents an email address autofill hint.
  AUTOFILL_HINT_EMAIL_ADDRESS = 25;
  // Represents a phone number autofill hint.
  AUTOFILL_HINT_PHONE_NUMBER = 26;
  // Represents a phone country code autofill hint.
  AUTOFILL_HINT_PHONE_COUNTRY_CODE = 27;
  // Represents a credit card number autofill hint.
  AUTOFILL_HINT_CC_NUMBER = 28;
  // Represents a credit card expiration date autofill hint.
  AUTOFILL_HINT_CC_EXPIRATION = 29;
  // Represents a credit card expiration month autofill hint.
  AUTOFILL_HINT_CC_EXPIRATION_MONTH = 30;
  // Represents a credit card expiration year autofill hint.
  AUTOFILL_HINT_CC_EXPIRATION_YEAR = 31;
  // Represents a credit card security code autofill hint.
  AUTOFILL_HINT_CC_SECURITY_CODE = 32;
  // Represents a credit card type autofill hint.
  AUTOFILL_HINT_CC_TYPE = 33;
  // Represents a credit card name autofill hint.
  AUTOFILL_HINT_CC_NAME = 34;
  // Represents a credit card given name autofill hint.
  AUTOFILL_HINT_CC_GIVEN_NAME = 35;
  // Represents a credit card middle name autofill hint.
  AUTOFILL_HINT_CC_MIDDLE_NAME = 36;
  // Represents a credit card family name autofill hint.
  AUTOFILL_HINT_CC_FAMILY_NAME = 37;
  // Represents a birthdate autofill hint.
  AUTOFILL_HINT_BIRTHDATE = 38;
  // Represents a birthdate day autofill hint.
  AUTOFILL_HINT_BIRTHDATE_DAY = 39;
  // Represents a birthdate month autofill hint.
  AUTOFILL_HINT_BIRTHDATE_MONTH = 40;
  // Represents a birthdate year autofill hint.
  AUTOFILL_HINT_BIRTHDATE_YEAR = 41;
  // Represents a date and time autofill hint.
  AUTOFILL_HINT_DATE_TIME = 42;
  // Represents a tracking number autofill hint.
  AUTOFILL_HINT_TRACKING_NUMBER = 43;
}

// Error message when the input text is invalid
message ErrorMessage {
  // leading icon
  component_catalog.common.prism.shared.v1.Icon leading_icon = 1;
  // error message shown (text)
  google.protobuf.StringValue error = 2;
}
