syntax = "proto3";

package component_catalog.dx.payout_experience.v1;

import "component-catalog.dx/payout_experience/common.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/wrappers.proto";

option go_package = "github.com/doordash/services-protobuf/generated/component-catalog.dx/payout_experience";
option java_multiple_files = true;
option java_package = "com.doordash.rpc.component_catalog.dx.payout_experience";

// VGS component of text input for payout experience
message VgsTextInput {
  // The VGS vault ID.
  string vault_id = 1;
  // The name of the key in which tokenized value will be stored.
  string token_key = 2;
  // The VGS field type, if nil, the default value is VGS_FIELD_TYPE_NONE.
  component_catalog.dx.payout_experience.v1.VGSFieldType field_type = 3;
  // If true the field is required to be non-empty and non-nil prior to tokenization.
  google.protobuf.BoolValue is_required = 4;
  // If true the field is required to be valid prior to tokenization.
  google.protobuf.BoolValue is_required_valid_only = 5;
  // Describes the visual formatting to apply to the field during user input.
  string format_pattern = 6;
  // Replaces the default format_pattern divider character prior to tokenization.
  string format_divider = 7;
  // The maximum number of characters that can be entered into the field.
  google.protobuf.Int32Value character_limit = 8;
  // An optional initial value that will be assigned to the text field on first appearance.
  string initial_value = 9;
  // The size of the control.
  component_catalog.dx.payout_experience.v1.FieldSize size = 10;
  // Hidden if nil.
  string label = 11;
  // Hidden if nil.
  string placeholder = 12;
  // Hidden if nil.
  string description = 13;
  // Hidden if nil.
  string hint = 14;
  // Displays errors live during editing.
  google.protobuf.BoolValue shows_errors_when_active = 15;
  // Turns the text field into a “password” style field.
  google.protobuf.BoolValue is_secure = 16;
  // The type of keyboard to display.
  component_catalog.dx.payout_experience.v1.KeyboardType keyboard_type = 17;
  // Disables auto-correct.
  google.protobuf.BoolValue disable_autocorrect = 18;
  // Changes the capitalization behavior.
  component_catalog.dx.payout_experience.v1.AutoCapitalizationType auto_capitalization_type = 19;
  // VGS validation rules that determine if a field is in a valid state.
  repeated component_catalog.dx.payout_experience.v1.VGSValidationRule validations = 20;
  // The key in the data bag where the validation state will be stored.
  string is_valid_field_key = 21;
  // The key in the data bag where the error state will be stored.
  string error_state_key = 22;
  // The name of the key in the data bag where the last 4 characters of an SSN or credit card number will be stored.
  string last4_data_bag_key = 23;
  // The name of the key in the data bag where the length of the input text will be stored.
  string text_length_data_bag_key = 24;
  // The name of the key in the data bag where the dirty state of the field will be stored.
  string is_dirty_data_bag_key = 25;
  // The name of the key in the data bag where the brand of credit card will be stored.
  string card_brand_data_bag_key = 26;
  // The name of the key in the data bag where the credit card “bin” will be stored.
  string bin_data_bag_key = 27;
  // An array of error state keys that are related to this field and that needs to be cleared when this field gets focus.
  repeated string related_error_state_keys = 28;
  // Keyboard return key type
  component_catalog.dx.payout_experience.v1.ReturnKeyType return_key_type = 29;
  // An optional error message to be shown when user enters invalid value
  string error_message = 30;
}
