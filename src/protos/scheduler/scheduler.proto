syntax = "proto3";
package scheduler;

import "google/protobuf/timestamp.proto";

option java_multiple_files = true;
option java_generic_services = true;

option java_package = "com.doordash.rpc.scheduler";
option go_package = "scheduler";

service SchedulerService {
    rpc CreateJob (CreateJobRequest) returns (CreateJobResponse);
}

message CreateJobRequest {
    google.protobuf.Timestamp created_at = 1;
    oneof callback {
        KafkaTopic kafka_topic = 2;
        GRPCEndpoint grpc_endpoint = 3;
    }
    oneof schedule_description {
        CronExpression cron_expression = 4;
        ScheduleExpression schedule_expression = 5;
    }
    bytes payload = 6;
}

message CreateJobResponse {
    UUID uuid = 1;
    google.protobuf.Timestamp next_schedule_time = 2;
}

message KafkaTopic {
    string kafka_topic = 1;
}

// refer to https://en.wikipedia.org/wiki/Cron#CRON_expression 
message CronExpression {
    string cron_expression = 1;
}

// expression depicts the job schedule
message ScheduleExpression {
    google.protobuf.Timestamp start_at = 1;
    google.protobuf.Timestamp end_at = 2;
    uint32 frequency_in_sec = 3;
    uint32 countdown = 4;
}

message GRPCEndpoint {
   string service_name = 1;
   string endpoint = 2;
}
 
message UUID {
   string value = 1;
}
