syntax = "proto3";

package router_service.v1;

import "google/protobuf/wrappers.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.labs_router_service.v1";

// A struct representing a robot router error.
message RobotRouterError {
  // Enum representing the type of router error
  // These errors are a union of cloud and robot router errors.
  enum Type {
    // Unspecified
    TYPE_UNSPECIFIED = 0;
    // Invalid number of points in the route request
    TYPE_INVALID_NUM_POINTS = 1;
    // Localization is not available
    TYPE_NO_LOCALIZATION = 2;
    // Robot needs to be stopped to route
    TYPE_STOP_NEEDED = 3;
    // No route can be found
    TYPE_NO_ROUTE_FOUND = 4;
    // One of the destinations is not serviceable (e.g mx, cx, p2p)
    TYPE_NOT_SERVICEABLE = 5;
    // The route is self-intersecting which is not allowed.
    TYPE_SELF_INTERSECTING_ROUTE = 6;
  }

  // The type of router error
  Type type = 1;
  // String containing details of the router error
  string message = 2;
  // The index of the router leg which led to the error.
  // This is only set for errors specific to a leg (e.g TYPE_NOT_SERVICEABLE)
  // and is indexed based on the input list of destinations.
  // e.g (leg == 0 -> mx, leg == 1 -> cx if there are 2 input
  // destinations) and (leg == 0 -> p2p if there's 1 input destination)
  google.protobuf.Int32Value leg = 3;
}
