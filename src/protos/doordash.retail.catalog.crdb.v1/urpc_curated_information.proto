syntax = "proto3";
// buf:lint:ignore DIRECTORY_SAME_PACKAGE
package doordash.retail.catalog.crdb.v1;

import "doordash.retail.catalog.common.v1/internal_attributes.proto";
import "doordash.retail.catalog.crdb.v1/well_known_types.proto";
import "google/protobuf/wrappers.proto";

option go_package = "github.com/doordash/services-protobuf/generated/doordash/retail/catalog/crdb/v1";

/*
   This proto defines attributes that are currently manually curated by DD internal teams
   many fields will likely be deprecated going forward.
*/

// Internally curated product data (many may be duped by external data sources)
message CuratedInformation {
  // required, general information about an item that doesn't belong to any other high level grouping
  InternalInformation internal_information = 1;
  // required, describes explicity information that controls UX navigation
  NavigationComponent navigation_component = 2;
  // required, describes a *group* of items, a legacy feature that will be re-worked
  ProductGroup product_group = 3;
  // required, describes how an item is purchased on doordash
  DoordashPurchaseInfo doordash_purchase_info = 4;
  // required, nutritinal information
  LegacyNutritionalInfo legacy_nutritional_info = 5;
  // required, whether catalog entry is active
  AttributedBoolValue is_active = 6;
  // internal attributes doesn't belong to any other high level grouping
  doordash.retail.catalog.common.v1.InternalAttributes internal_attributes = 7;
  // external identifier to identify from which 3rd party data we created/updated the 3PD/URPC
  ExternalIdentifier external_identifier = 8;
}

// Describes UX navigation specific information
message NavigationComponent {
  // required, Layer 1 nav component id
  AttributedInt64Value aisle_id_l1 = 1;
  // required, Layer 1 nav component name
  AttributedStringValue aisle_name_l1 = 2;
  // required, Layer 2 nav component id
  AttributedInt64Value aisle_id_l2 = 3;
  // required, Layer 2 nav component name
  AttributedStringValue aisle_name_l2 = 4;
  // optional, Layer 3 nav component id
  AttributedInt64Value aisle_id_l3 = 6;
  // optional, Layer 3 nav component name
  AttributedStringValue aisle_name_l3 = 7;
  // optional, Layer 3 nav component short name
  AttributedStringValue aisle_short_name_l3 = 8;
  // optional, pseudo popularity indicator
  AttributedInt64Value sort_id = 5;
}

// Legacy product group information, primarily used for UX purposes
message ProductGroup {
  // optional, related product groups
  AttributedStringValue product_group = 1;
  // optional, l4 size text description
  AttributedStringValue l4_size = 2;
  // optional, l4 variant optional
  AttributedStringValue l4_variant = 3;
}

// general information about an item that doesn't belong to any other high level grouping
message InternalInformation {
  // required, primary image of a product
  AttributedInternalImage primary_image = 1;
  // optional, additional images
  repeated AttributedInternalImage auxiliary_photos = 2;
  // required, item name
  AttributedStringValue item_name = 3;
  // optional, another description field used to be named detail
  AttributedStringValue detailed_description = 4;
  // optional, keywords
  repeated AttributedStringValue search_keywords = 5;
  // optional, brand taxonomy id
  AttributedInt64Value brand_id = 6;
  // optional, category taxonomy id
  AttributedInt64Value product_category_id = 7;
  // optional
  repeated AttributedCountryCodeValue selling_countries = 8;
}

// Manually configured, information required to purchase this item on doordash
message DoordashPurchaseInfo {
  // optional, PLU code for weighted items
  AttributedStringValue price_lookup_code = 1;
  // optional, approximate quantity of a weighted item
  AttributedDecimal approximate_sold_as_quantity = 2;
  // optional, unit of approximate quantity of a weighted item
  AttributedStringValue approximate_sold_as_unit = 3;
  // optional, unit a weighted item is sold in
  AttributedStringValue measurement_unit = 4;
  // optional, deprecated field, default to 1.
  AttributedDecimal measurement_factor = 5;
  // optional, unused field, short circuited in Cx logic
  AttributedDecimal increment = 6;
  // optional, unit a regular item is sold in
  AttributedStringValue unit = 7;
  // optional, additional description about how an item is priced
  AttributedStringValue additional_price_description = 8;
  // optional, describes if an items should be scanned or not
  AttributedStringValue scan_strategy = 9;
  // required, how this item is purchased in DD marketplace, enum of three values
  AttributedInt64Value purchase_type = 10;
}

// A legacy attribute that was sourced from label_insights
message LegacyNutritionalInfo {
  // optional , typtically contains nutritional information
  AttributedStruct nutritional_metadata = 1;
}

// We created/updated URPC/3PD from external third party sources,
// this proto stores the information which indicates
// 1. from which specific source we created/updated URPC/3PD
// 2. from which specific record we created/updated URPC/3PD
// 3. from which version of a record we created/updated URPC/3PD
message ExternalIdentifier {
  // Source e.g., Salsify|Open Catalog
  // this will be a composite value for example, within Salsify, there are multiple sub-sources e.g., open catalog, brand channel
  AttributedStringValue source = 1;

  // uuid for the external record
  AttributedStringValue id = 2;

  // version for the external record
  AttributedInt64Value version = 3;

  // auxiliary identification info that contains extra ax-related info
  ExternalIdentifierAuxiliaryInfo auxiliary_info = 4;
}

// Auxiliary identification information for 3PD
message ExternalIdentifierAuxiliaryInfo {
  // Flag to indicate whehter the 3PD is provided by Ax
  AttributedBoolValue is_ax_sku = 1;

  // Flag to indicate whether the 3PD is ingested from the ax preferred salsify channel
  // For syndicators other
  AttributedBoolValue is_from_ax_preferred_channel = 2;
}
