syntax = "proto3";
// buf:lint:ignore DIRECTORY_SAME_PACKAGE
package doordash.retail.catalog.crdb.v1;

import "common/restriction_rules.proto";
import "doordash.retail.catalog.common.v1/baby.proto";
import "doordash.retail.catalog.common.v1/general_attributes.proto";
import "doordash.retail.catalog.common.v1/health.proto";
import "doordash.retail.catalog.common.v1/home_improvement.proto";
import "doordash.retail.catalog.common.v1/household.proto";
import "doordash.retail.catalog.common.v1/music.proto";
import "doordash.retail.catalog.common.v1/personal_care.proto";
import "doordash.retail.catalog.crdb.v1/well_known_types.proto";
import "google/protobuf/wrappers.proto";

option go_package = "github.com/doordash/services-protobuf/generated/doordash/retail/catalog/crdb/v1";

/*
   This proto defines attributes that are currently sourced from an external partner
   e.g. a CPG
*/

// attributes associated with alcohol products
message Alcohol {
  // conditionally required, Standard measure of how much alchohol is contained in the given volume.
  AttributedFloatValue alcohol_by_volume = 1;
  // optional, Indicates the State or Region the wine is created
  AttributedCodeValue region_of_origin = 2;
  // optional, List of award/Competition along with the medal and Year
  repeated AttributedStringValue accolade = 3;
  // optional, List of foods that would compliment the product, TODO: codelist
  repeated AttributedCodeValue food_pairing = 4;
  // optional, Text description of tasting notes in paragraph form.
  LocalizedStringValueContainer tasting_notes = 5;
  // optional, Use this to say either this product is a craft beer (true) or not craft beer (false), TODO: codelist
  AttributedCodeValue beer_segment = 6;
  // optional, The year in which the grapes were harvest, TODO: codelist
  repeated AttributedCodeValue varietal = 7;
  // Vintage indicates the year in which a wine, particularly, was harvested. This term is primarily used in the context
  // of wine and refers to the year the grapes used in making the wine were harvested. In the context of other alcoholic
  // beverages, such as whiskey or brandy, the term vintage may also refer to the year in which the liquid was distilled
  // or aged.
  // optional
  AttributedUInt64Value vintage = 8;
  // optional, Indicates the level of dry/sweetness, TODO: codelist
  AttributedCodeValue dry_sweetness_level = 9;
  // optional, The legally defined and protected geographical indication used to identify where the grapes for a wine were grown, TODO: codelist
  AttributedCodeValue appellation = 10;
  // Indicates either this product contains alcohol (true) or this product does not contain alcohol (false)
  AttributedBoolValue is_alcohol = 11;
  // optional, description of flavor profile for Wines
  AttributedStringValue body = 12;
  // optional, actual review from the publication
  AttributedStringValue accolade_review = 13;
  // optional, such as barrels or tanks, play a key role in the maturation of wine and spirits
  google.protobuf.StringValue aging_vessel = 14;
  // optional, stands for International Bitterness Units, a scale to gauge the level of a beer's bitterness.
  google.protobuf.StringValue ibu = 15;
  // optional. Indicates the included items of the alcohol
  google.protobuf.StringValue included_items = 16;
  // optional, Indicates the distillation of the alcohol
  google.protobuf.StringValue distillation = 17;
  // optional, Indicates the type of alcohol
  google.protobuf.StringValue type = 18;
  // optional, indicates the amount of residual sugar retained from the grapes during the fermentation process.
  repeated DrySweetnessLevel dry_sweetness_level_v2 = 19;
  // optional, List of foods that would compliment the product
  repeated FoodPairing food_pairing_v2 = 20;
  // optional, description of flavor profile for Wines
  repeated AlcoholBody body_v2 = 21;
  // optional, The legally defined and protected geographical
  // indication used to identify where the grapes for a wine were grown,
  repeated Appellation appellation_v2 = 22;
  // optional, Text description of tasting notes in paragraph form.
  repeated TastingNotes tasting_notes_v2 = 23;
  // optional, Indicates the State or Region the wine is created
  repeated RegionOfOrigin region_of_origin_v2 = 24;
  // optional, indicates the combination of the color, taste, alcoholic strength and several other factors.
  repeated WineStyle wine_style = 25;
  // optional, refers to a wine that is made from a single grape variety and bears the name of that grape.
  repeated AlcoholVarietal alcohol_varietal = 26;
  // optional, indicates specific characteristics or variations within alcoholic beverages
  repeated AttributedStringValue alcohol_style = 27;
  // optional, defines the color of a wine (red, rose, orange, white)
  AttributedStringValue alcohol_color = 28;
  // optional, refers to how long a spirit has been aged
  AttributedStringValue age = 29;
  // optional, refers to special editions of alcohol; may be holiday or occasion specific or a limited run
  repeated AttributedStringValue edition = 30;
}

// categorization information
message Categorization {
  // required, Categorization for this product, TODO: codelist (kind)
  AttributedCodeValue product_category = 1;
  // optional, GPC Brick as defined by GS1. Higher levels of the GPC hierarchy are derived from this value, TODO: codelist
  AttributedCodeValue gpc_category = 2;
  // required, TODO: codelist
  AttributedCodeValue product_type = 3;
}

// Compliance related information
message Compliance {
  // required, Indicates if item requires nutritional facts labeling per FDA guidelines
  AttributedBoolValue nutrition_facts_label_required = 1;
  // optional, The full text of the warranty terms, including what is covered by the warranty and the duration of the warranty
  LocalizedStringValueContainer warranty = 2;
  //optional, General warnings statement for this product.
  repeated LocalizedStringValueContainer warning_statements = 3;
  // optiona, Selecting "Y" indicates the product requires California's Proposition 65 special warning. Proposition 65 entitles California consumers to special warnings for products that contain chemicals known to the state of California to cause cancer and birth defects or other reproductive harm
  AttributedBoolValue prop_65_warning_required = 4;
  // required, The date this product record becomes effective in its applicable market. Can be backdated. Example: 6/1/2020
  AttributedTimeStamp effective_date = 5;
  //optional, The date the product is no longer in production
  AttributedTimeStamp discontinued_date = 6;
  //optional, The restricted type of the item.
  // Will be deprecated in next release - tyler.hughesgorman@doordash.com
  AttributedRestrictionType restriction_type = 7;
  // optional, whether an item should be exlcuded from promotions to comply with the suppliers
  // rules on how much an item can be sold for
  AttributedBoolValue is_minimum_advertised_price_item = 8;
  // optional, The restriction types of the item.
  repeated AttributedRestrictionType restriction_types = 9 [deprecated = true];
  // optional, Restriction types and corresponding sensitivity levels.
  repeated .common.restriction_rules.v1.RestrictedTypeWLevel restriction_types_with_level = 10;
  // optional, indicates the term of services
  AttributedStringValue term_of_service = 11;
  // optional, indicates the legal disclaimer
  AttributedStringValue legal_disclaimer = 12;
  // optional, indicates the cardholder agreement
  AttributedStringValue cardholder_agreement = 13;
}

// product dimensions attributes
message Dimension {
  reserved "gross_weight", "item_volume", "length_uom", "width_uom", "height_uom", "volume_uom", "weight_uom";
  reserved 5, 6, 7, 8, 9, 10, 11;

  // required, Item length.
  MeasuredFloatValueContainer length = 1;
  // required, Item Width
  MeasuredFloatValueContainer width = 2;
  // required, Item height
  MeasuredFloatValueContainer height = 3;
  // conditionally required, The weight of the product without the weight of it's packaging
  MeasuredFloatValueContainer net_weight = 4;

  //  field 5 *was*  MeasuredFloatValueContainer gross_weight = 5, now removed. Instead use, item_gross_weight_v2
  //  field 6 *was*  MeasuredFloatValueContainer item_volume = 6, now removed. Instead use, item_volume_v2

  // required, The weight of the product including the weight of it's packaging
  AttributedItemWeightContainer item_gross_weight_v2 = 12;
  // optional, Volume of product
  AttributedItemVolumeContainer item_volume_v2 = 13;
}

// identification attributes such as gtin
message Identification {
  // required, GTIN-14, the 14-digit number including checkdigit of the consumer unit product as assigned by GS1. This is not the case/carton number unless the case/carton is a consumer unit.
  AttributedStringValue gtin_14 = 1;
  // required, Must be mapped to "INFORMATION_PROVIDER", TODO: codelist
  AttributedCodeValue party_role = 2;
  // required, The Global Location Number (GLN) is a GS1 13-digit unique identifier assigned by GS1 to uniquely identify the party providing the product information.
  AttributedStringValue gln_13 = 3;
  // optional, The string of letters and/or numbers a manufacturer uses to identify the item.
  AttributedStringValue manufacturer_sku = 4;
  // optional, ops requested a upc field
  AttributedStringValue upc = 5;
  // optional
  Barcode barcode = 6;
}

// Information on the make up of the item
message Composition {
  // optional, Text description of the constituent ingredient make up of the product, specified in paragraph form.
  LocalizedStringValueContainer ingredient_statement = 1;
  // optional, The full text description of the presence or absence of allergens, specified as one string
  LocalizedStringValueContainer allergen_statement = 2;
}

// Information related to content of an item, e.g. packaing, shelf life
message PackageInformation {
  // optional, Detailed information telling how the product should be operated or assembled. For Pet Food or Treats, feeding Instructions should be entered in "FEEDING DIRECTIONS".
  LocalizedStringValueContainer product_instructions = 1;
  // optional, Instructions for storage or preparation of potentially hazardous fresh food.
  LocalizedStringValueContainer product_safe_handling_instructions = 2;
  // optional, Text description of the consumer storage instructions of a product detailing elements as temperature, light conditions and humidity.
  LocalizedStringValueContainer storage_instructions = 3;
  // optional, Number used to express shelf life, must be given in days.
  AttributedInt64Value shelf_life = 4;
  // optional, Number of servings contained in a package
  AttributedFloatValue servings_per_package = 5;
  // required, The primary numerical size of an individual unit within the product.
  MeasuredFloatValueContainer unit_size = 6;
  // required, The total number of individual packaged-for-sale units included in the package/multipack. If an item does not contain other items, does not contain identical items, or if the items contained within cannot be sold individually, the value for this attribute should be "1."
  AttributedInt64Value unit_count = 7;
  // optional, The number of identical items inside each individual pack given by the UNIT COUNT attribute.
  AttributedInt64Value count_per_unit = 8;
  // optional, Item packaging material. Example: Glass, TODO: codelist
  AttributedStringValue package_material = 9;
  // optional, package type
  AttributedStringValue package_type = 10;
  // optional,  is this package eligible for charging fee
  AttributedBoolValue is_package_fee_eligble = 11;
  // optional, whether an item is heavy
  AttributedBoolValue is_heavy_item = 12;
}

// general information about an item that doesn't belong to any other high level grouping
message Information {
  reserved "health_sensitivity";
  reserved 18;

  // required, Country(ies) where product was produced; Market specified by Alpha3 country code as defined by ISO 3166, TODO: codelist
  repeated AttributedCodeValue country_of_origin = 1;
  // required
  AttributedStringValue manufacturer = 2;
  // optional, Descriptive functional name as outlined by GS1 GDSN standard definition
  LocalizedStringValueContainer functional_name = 3;
  // required, Longform descriptive name of product as it would appear on an ecommerce website. Includes Brand, Subbrand, Size and Count.
  LocalizedStringValueContainer product_title = 4;
  // required, Consumer facing brand name of this product.
  AttributedStringValue brand = 5;
  // optional
  AttributedStringValue sub_brand = 6;
  // required, Product description without the Brand, Subbrand, Size and Count
  LocalizedStringValueContainer short_description = 7;
  // optional, Selecting "Y" indicates the product is private label
  AttributedBoolValue is_private_label = 8;
  // optional, Indicates if product is seasonal or special release, specific season must be selected, TODO: codelist
  AttributedCodeValue seasonal = 9;
  // optional, Use this to say either this product is a variety pack (true) or not a variety pack (false)
  AttributedBoolValue is_variety_pack = 10;
  // deprecated, use Variant->flavor instead, Product flavor, must be sent in proper case and comma delimited if listing multiple flavors
  LocalizedStringValueContainer flavor = 11 [deprecated = true];
  // required, Consumer facing long description reviewings of the key selling points of the item, marketing content, and highlights in paragraph form.
  LocalizedStringValueContainer long_description = 12;
  // required, List of features meant to help the user understand the benefits of the product in a simple and clean format. Do not include bullet symbol or dashes. Multiple values should be sent in an array.
  repeated LocalizedStringValueContainer features_and_benefits = 13;
  // optional, A description of the facts and feelings that are created by your brand,
  LocalizedStringValueContainer brand_story = 14;
  // FSA/HSA eligibility
  AttributedBoolValue is_hsa_fsa_eligible = 15;
  // Recurring Delivery eligiblility
  AttributedBoolValue is_recurring_delivery_eligible = 16;
  // optional, Indicates if product is for any occasion
  AttributedOccasionContainer occasion = 17;
  // optional, Denotes the type of container for the product (e.g. box, keg, can, bottle, etc.).
  AttributedStringValue container_type = 19;
  // The material of which the product is made.
  Material material = 20;
  // optional, Provides a description of the product with HTML formatting.
  LocalizedStringValueContainer description_html = 21;
  // optional, Provides a description of the product with Markdown formatting.
  LocalizedStringValueContainer description_markdown = 22;
  // Indicates that the product is a staff-recommended product.
  AttributedBoolValue is_staff_pick = 23;
  // Indicates that the product is an exclusive release at this merchant.
  AttributedBoolValue is_exclusive = 24;
  // Indicates that the product is on a limited release.
  AttributedBoolValue is_limited_edition = 25;
  // Certification tags for the product (for example ISO 9001, UL Listed, CE Marking, Energy Star, FDA Approved,
  // LEED Certification, Fair Trade Certified, PCI DSS Compliance, FSC Certified, HIPAA Compliant).
  // Within the scope of deprecation. Proposed new attribute path: external_information -> general_attributes -> certification_and_production_details
  repeated AttributedStringValue certification_tags = 26;
  // The material of which the product is made(multi-select).
  repeated Material material_v2 = 27;
}

// Pet's specific information
message Pets {
  // optional, Species of animal the product is designed for. Multiple values to be sent in an array, TODO: codelist
  repeated AttributedCodeValue species = 1;
  // optional, Indicates the lifestage the food is best suited for. Multiple values to be sent in an array, TODO: codelist
  repeated AttributedCodeValue life_stage = 2;
  // optional, Breed or size of the animal the product is designed for, TODO: codelist
  repeated AttributedCodeValue breed_size = 3;
  // optional, Indicates which diets the food is best suited for. Multiple values to be sent in an array, TODO: codelist
  repeated AttributedCodeValue special_diet = 4;
  // optional, Text description stating "Feed (amount of product) per (weight) of dog/cat" and feeding frequency.
  LocalizedStringValueContainer feeding_directions = 5;
  // optional, The full text description explaining whether the food contains essential nutrients, how that was determined, and for which life stage the food is appropriate for.
  LocalizedStringValueContainer aafco_statement = 6;
  // optional, Text description of percentage of each of the nutrients in the food.
  LocalizedStringValueContainer guaranteed_analysis = 7;
  // The breed of animal for which the product is intended.
  AttributedStringValue breed_type = 8;
  // The category/type of food.
  AttributedStringValue food_type = 9;
  // optional, breed or size of an animal
  repeated BreedSize breed_size_v2 = 10;
  // optional, type of food - wet or dry
  repeated FoodType food_type_v2 = 11;
  // optional, indicates the age of animal
  repeated PetLifeStage pet_life_stage_v2 = 12;
  // optional, indicate the item form or formulation of the food.
  repeated PetFoodForm pet_food_form = 13;
  // optional, features of pets' toy
  repeated PetToyFeatures pet_toy_feature = 14;
  // optional, the type of pets
  repeated PetType pet_type = 15;
}

// Images related to this product
message ProductImage {
  // required
  AttributedExternalImage primary_image = 1;
  // optional
  repeated AttributedExternalImage secondary_image = 2;
  // optional
  AttributedExternalImage nutritional_label_image = 3;
}

// Supplier search terms
message Search {
  // optional
  repeated LocalizedStringValueContainer keywords = 1;
}

// General pricing guidance
message Pricing {
  // optional, Manufacturer's suggested retail price. Round to 2 digits to the right of the decimal point. Do not use commas or dollar signs.
  MeasuredFloatValueContainer msrp = 1;
}

// Variant Information
message Variant {
  // color variant information
  ColorVariant color_variant = 1;
  // Product flavor, free form string w/o validation
  // Describes the flavor profile of a product, providing information about its taste characteristics and qualities.
  // This can include descriptors such as sweet, salty, savory, bitter, sour, spicy, umami, fruity, floral, nutty, etc.,
  // as well as any specific flavor notes or nuances that distinguish the product's taste.
  // Within the scope of deprecation. Proposed new attribute path: external_information -> general_attributes -> flavors
  AttributedStringValue flavor = 2;
  // Product scent, free form string w/o validation
  AttributedStringValue scent = 3;
  // Product style, free form string w/o validation
  AttributedStringValue style = 4;
  // Product version, free form string w/o validation
  AttributedStringValue version = 5;
  // Product age group, free form string w/o validation
  AttributedStringValue age_group = 6;
  // An integer value that indicates how this variant should be sorted relative to other vairants in its product group.
  google.protobuf.Int64Value sort_value = 7;
}

// Diet information
message DietInformation {
  // Indicates product diet tags
  DietaryTags dietary_tags = 1;
}

// Meat Information
message MeatInformation {
  // Cut Type
  // Within the scope of deprecation. Proposed new attribute path: external_information -> general_attributes -> shape_and_cut
  // Attribute changes doc
  // https://docs.google.com/document/d/1BZo7isLHsSH3ga6VOMskfPVsEGQszej2huQuE6OWg-E/edit#heading=h.szsoqt5okp40
  // https://docs.google.com/spreadsheets/d/1xGiKzrU9lofZg3iq42u4-49u-Pgtt9AFL7gpTP_ciFw/edit#gid=0
  MeatCut cut = 1;
  // Grade Type
  // Within the scope of deprecation. Proposed new attribute path: external_information -> general_attributes -> certification_and_production_details
  MeatGrade grade = 2;
  // Preparation Type
  // Within the scope of deprecation. Proposed new attribute path: external_information -> general_attributes -> preparation_method
  MeatPreparations preparations = 3;
  // Fat Content
  MeatFatContent fat_content = 4;
  // Prepared State
  // Within the scope of deprecation. Proposed new attribute path: external_information -> general_attributes -> preparation_method
  MeatPreparedState prepared_state = 5;
  // Place of Origin
  // Within the scope of deprecation. Proposed new attribute path: external_information -> general_attributes -> source / species
  MeatOrigin origin = 6;
  // Meat Location
  MeatLocation location = 7;
  // Indicates whether the meat is found at the service counter.
  google.protobuf.BoolValue service_counter = 8;
}

// third-party item ratings and review information
message RatingsAndReviews {
  // average rating
  google.protobuf.FloatValue average_rating = 1;
  // total number of ratings
  google.protobuf.Int64Value number_of_ratings = 2;
  // total number of reviews, which are ratings that include a review text
  google.protobuf.Int64Value number_of_reviews = 3;
  // rating count distribution on 5 star scale
  RatingsDistribution ratings_distribution = 4;
}

// third-party rating count distribution on 5 star scale
message RatingsDistribution {
  // number of 1 star ratings
  google.protobuf.Int64Value one_star_count = 1;
  // number of 2 star ratings
  google.protobuf.Int64Value two_star_count = 2;
  // number of 3 star ratings
  google.protobuf.Int64Value three_star_count = 3;
  // number of 4 star ratings
  google.protobuf.Int64Value four_star_count = 4;
  // number of 5 star ratings
  google.protobuf.Int64Value five_star_count = 5;
}

// Represents a cosmetics product, containing information about its various attributes and characteristics.
message Cosmetics {
  // Specifies the finish of the cosmetics product.
  Finish finish = 1;
  // Specifies the coverage level provided by the cosmetics product.
  Coverage coverage = 2;
  // Specifies the types of skin for which the cosmetics product is suitable.
  repeated SkinType skin_types = 3;
  // Specifies the Sun Protection Factor (SPF) of the cosmetics product.
  SPF spf = 4;
  // Specifies the fragrance family of the cosmetics product.
  FragranceFamily fragrance_family = 5;
  // Specifies the fragrance type of the cosmetics product.
  FragranceType fragrance_type = 6;
  // Specifies the formulation or type of the cosmetics product.
  Formulation formulation = 7;
  // Specifies the types of hair for which the cosmetics product is suitable.
  repeated HairType hair_types = 8;
  // Specifies the hair textures for which the cosmetics product is suitable.
  repeated HairTexture hair_textures = 9;
  // Specifies the cosmetic ingredients present in the cosmetics product.
  repeated CosmeticIngredient cosmetic_ingredients = 10;
  // Specifies the skincare concerns addressed by the cosmetics product.
  repeated Concern concerns = 11;
  // Specifies the benefits provided by the cosmetics product.
  repeated Benefit benefits = 12;
  // Specifies the length of hair
  repeated google.protobuf.StringValue hair_length = 13;
  // Specifies the type of false hair and wig which the cosmetics product is suitable
  google.protobuf.StringValue false_hair_and_wig_type = 14;
  // Specifies the color permanence of the cosmetics product
  google.protobuf.StringValue color_permanence = 15;
  // Specifies the eyelash type of the cosmetics product
  google.protobuf.StringValue eyelash_type = 16;
  // Specifies the eyelash style of the cosmetics product
  google.protobuf.StringValue eyelash_style = 17;
  // Specifies the application method of the cosmetics product
  google.protobuf.StringValue application_method = 18;
  // Specifies the polish type of the cosmetics product
  google.protobuf.StringValue polish_type = 19;
  // Specifies the nail type ot the cosmetics product
  google.protobuf.StringValue nail_type = 20;
  // Specifies the nail length of the cosmetics product
  google.protobuf.StringValue nail_length = 21;
  // Specifies the shade range of the cosmetics product
  repeated google.protobuf.StringValue shade_range = 22;
  // Specifies the body area
  repeated google.protobuf.StringValue body_area = 23;
  // Specifies the bristle material of the cosmetics product
  repeated google.protobuf.StringValue bristle_material = 24;
  // Specifies the brush type of the cosmetics product
  repeated BrushType brush_type = 25;
  // Species the comb type of the cosmetics product
  google.protobuf.StringValue comb_type = 26;
  // Species the type of curler and roller of the cosmetics product
  google.protobuf.StringValue curler_and_roller_type = 27;
  // Species the mounting options of the cosmetics product
  repeated google.protobuf.StringValue mounting_options = 28;
  // Species the hold of the cosmetics product
  google.protobuf.StringValue hold = 29;
  // Species the barrel size of the cosmetics product
  google.protobuf.StringValue barrel_size = 30;
  // Species the wattage of the cosmetics product
  google.protobuf.StringValue wattage = 31;
  // Species the included items of the cosmetics product
  google.protobuf.StringValue included_items = 32;
  // Species the care maintenance of the cosmetics product
  google.protobuf.StringValue care_maintenance = 33;
  // Species the reusability of the cosmetics product
  google.protobuf.StringValue reusability = 34;
  // Species the undertone of the cosmetics product
  repeated google.protobuf.StringValue undertone = 35;
  // Species the closure_type of the cosmetics product
  google.protobuf.StringValue closure_type = 36;
  // Species the handle_material of the cosmetics product
  google.protobuf.StringValue handle_material = 37;
  // Species the frame_material of the cosmetics product
  google.protobuf.StringValue frame_material = 38;
  // Species the power source of the cosmetics product
  repeated google.protobuf.StringValue power_source = 39;
  // Specifies the finish of the cosmetics product.
  repeated Finish finish_v2 = 40;
  // Specifies the coverage level provided by the cosmetics product.
  repeated Coverage coverage_v2 = 41;
  // Specifies the formulation or type of the cosmetics product.
  repeated Formulation formulation_v2 = 42;
  // optional, species the range of ages that is appropriate to the product.
  repeated google.protobuf.StringValue age_range = 43;
  // Specifies the Sun Protection Factor (SPF) of the cosmetics product.
  repeated SPF spf_v2 = 44;
}

// Represents the target audience or demographic for a product or service.
// This message includes information about the gender and shopping preferences of the target audience.
message Audience {
  // Specifies the gender of the target audience.
  Gender gender = 1;
  // Specifies the shopping preferences of the target audience.
  repeated ShoppingPreference shopping_preferences = 2;
  // Free-text specification of the intended age range. For example, Puppy, Kitten, Adult, Senior,
  // Infant/Baby (0-12 months), Toddlers (1-3 years), Preschoolers (3-5 years), School-age Children (6-12 years),
  // Children, Teens, Young Adults, Maternity.
  AttributedStringValue age_range = 3;
  // Specifies the multi-select gender of the target audience.
  repeated Gender gender_v2 = 4;
}

// Attributes of products that are worn on the body.
message Apparel {
  // The width of the shoe.
  ShoeWidth shoe_width = 1;
  // The size of the shoe.
  ShoeSize shoe_size = 2;
  // The range of sizes available for the apparel.
  ApparelSizeRange size_range = 3;
  // The rise of the apparel, such as high-rise or low-rise.
  ApparelRise rise = 4;
  // The length of the apparel, such as short, regular, or long.
  ApparelLength length = 5;
  // The activity or sport for which the apparel is intended.
  // Possible values include: Basketball, Golf, Baseball, Softball, Soccer, Hockey, Football,
  // Lacrosse, Tennis & Racquet, Bikes & Cycling, Bowling, Boxing & MMA, Cheerleading, Climbing,
  // Cricket, Field Hockey, Fishing, Gymnastics & Dance, Hunting, Ice Skating, Pickle-ball, Rugby,
  // Running, Skates & Scooters, Snow Sports, Swimming, Table Tennis, Tee Ball, Track & Field,
  // Volleyball, Water Sports, Wrestling, Yoga & Studio, Game Room Games, Camping.
  AttributedStringValue activity = 6;
  // The temperature suitability of the apparel.
  // Possible values include: Cold Weather, Moderate Weather, Hot Weather, Arctic Weather.
  AttributedStringValue temperature = 7;
  // The fit of the apparel, such as slim fit or regular fit.
  ApparelFit fit = 8;
  // The size of a given bra.
  BraSize bra_size = 9;
  // Clothing size number/letters, depending on the type of apparel.
  AttributedStringValue size = 10;
  // optional, style of the neck on the apparel item
  AttributedStringValue neck_style = 11;
  // optional, length of the sleeves
  repeated AttributedStringValue sleeve_length = 12;
  // optional, overall silhouette/shape of the apparel item
  AttributedStringValue silhouette = 13;
  // optional, type of heel on footwear
  AttributedStringValue heel_type = 14;
  // optional, height of heel in inches
  AttributedFloatValue heel_height = 15;
  // optional, category/type of apparel item
  repeated AttributedStringValue apparel_type = 16;
  // optional, style of waist on the apparel item
  repeated AttributedStringValue waist_type = 17;
  // optional, style/type of skirt
  repeated AttributedStringValue skirt_type = 18;
  // optional, presence and type of train on apparel
  repeated AttributedStringValue train_type = 19;
  // optional, style classification of the apparel
  repeated AttributedStringValue apparel_style = 20;
  // optional, position/style of waistline
  repeated AttributedStringValue waistline = 21;
}

// Describes products that are comprised of or include flowers.
message Floral {
  // The types of flowers included in the floral arrangement.
  repeated FlowerType type = 1;
}

// Describes products that have a medicinal purpose.
message Medication {
  // The strength of the medication, typically indicated in milligrams or other units.
  AttributedStringValue strength = 1;
  // Form in which a medication is provided.
  MedicationForm form = 2;
}

// Describes products that are office-related, such as stationary and notebooks.
message OfficeSupplies {
  // The type or style of notebook.
  AttributedStringValue notebook_type = 1;
  // The size of the paper used in the office supplies.
  PaperSize paper_size = 2;
}

// Describes electronics products.
message Electronics {
  // The type of band used in an electronic watch.
  BandType band_type = 1;
  // The resolution of the screen in the electronics device.
  ScreenResolution screen_resolution = 2;
  // The storage capacity of the electronics device.
  ElectronicsStorageSize storage = 3;
  // The memory capacity of the electronics device.
  ElectronicsStorageSize memory = 4;
  // The clock frequency or speed of the processor in the electronics device.
  ClockFrequency processor_speed = 5;
  // The condition of the electronics device (e.g., new, refurbished, used).
  Condition condition = 6;
  // The model of the phone (e.g. Android, iPhone, etc.).
  AttributedStringValue phone_model = 7;
  // The brand of the processor used in the electronics device.
  AttributedStringValue processor_brand = 8;
  // Free text description of the screen size.
  AttributedStringValue screen_size = 9;
  // optional, type of electronic device
  AttributedStringValue electronic_type = 10;
  // optional, type of display screen (OLED, QLED, LED)
  AttributedStringValue display_type = 11;
  // optional, battery life in hours
  AttributedFloatValue battery_life = 12;
  // optional, format of the electronic item
  AttributedStringValue electronic_format = 13;
  // optional, ESRB rating for games and content
  AttributedStringValue esrb_rating = 14;
  // optional, refresh rate of the display
  AttributedStringValue refresh_rate = 15;
  // optional, voltage requirement in volts
  AttributedFloatValue voltage = 16;
  // optional, types of connectors available
  repeated AttributedStringValue connector_type = 17;
  // optional, whether batteries are included
  AttributedBoolValue battery_included = 18;
  // optional, whether batteries are required
  AttributedBoolValue battery_required = 19;
  // optional, screen resolution
  AttributedStringValue resolution = 20;
  // optional, battery size
  repeated AttributedStringValue battery_size = 21;
}

// Describes bedding-related products.
message Bedding {
  // The size of the bedding.
  BedSize size = 1;
}

// Externally sourced product
message ExternalInformation {
  // attributes associated with alcohol products
  Alcohol alcohol = 1;
  // categorization information
  Categorization categorization = 2;
  // product dimensions attributes
  Dimension dimensions = 3;
  // identification attributes such as gtin
  Identification identification = 4;
  // Information on the make up of the item
  Composition composition = 5;
  // General item details
  Information information = 6;
  // Pet's specific information
  Pets pets = 7;
  // Images
  ProductImage product_image = 8;
  // Supplier search terms
  Search search = 9;
  // General pricing guidance
  Pricing pricing = 10;
  // Compliance related information
  Compliance compliance = 11;
  // packaging information
  PackageInformation package_information = 12;
  // Product Variant Information
  Variant variant = 13;
  // Diet Information
  DietInformation diet_information = 14;
  // Meat Information
  MeatInformation meat_information = 15;
  // Ratings Information
  RatingsAndReviews ratings = 16;
  // Cosmetics Information
  Cosmetics cosmetics = 17;
  // Product Audience Information
  Audience audience = 18;
  // Apparel Information
  Apparel apparel = 19;
  // Floral Information
  Floral floral = 20;
  // Medication Information
  Medication medication = 21;
  // Electronics Information
  Electronics electronics = 22;
  // Bedding Information
  Bedding bedding = 23;
  // Office Supplies Information
  OfficeSupplies office_supplies = 24;
  // General attributes doesn't belong to any other high level grouping
  doordash.retail.catalog.common.v1.GeneralAttributes general_attributes = 25;
  // Drink Information
  Drinks drinks = 26;
  // Health Information
  doordash.retail.catalog.common.v1.Health health = 27;
  // Home Improvement Information
  doordash.retail.catalog.common.v1.HomeImprovement home_improvement = 28;
  // Household Information
  doordash.retail.catalog.common.v1.Household household = 29;
  // Music Information
  doordash.retail.catalog.common.v1.Music music = 30;
  // Personal Care Information
  doordash.retail.catalog.common.v1.PersonalCare personal_care = 31;
  // Baby Information
  doordash.retail.catalog.common.v1.Baby baby = 32;
}

// attributes associated with drinks products
message Drinks {
  // optional, Indicates the amount of pulp or fibrous portions of fruit in the juice product.
  google.protobuf.StringValue pulp_level = 1;
  // optional, Indicates the kind of protein added to drinks.
  google.protobuf.StringValue protein_type = 2;
  // optional, Indicate the kind of tea the product is.
  google.protobuf.StringValue tea_type = 3;
  // optional, Indicates the item form of the product.
  google.protobuf.StringValue form = 4;
  // optional, Indicates the type of coffee bean.
  google.protobuf.StringValue coffee_bean_type = 5;
  // optional, Indicates how long and thoroughly coffee beans have been roasted.
  google.protobuf.StringValue roast_level = 6;
  // optional, Indicates where the water is sourced from
  google.protobuf.StringValue water_source = 7;
  // optional, Indicates the amount of caffeine in a product.
  google.protobuf.StringValue caffeine_count = 8;
}
