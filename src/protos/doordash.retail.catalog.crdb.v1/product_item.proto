syntax = "proto3";

// buf:lint:ignore DIRECTORY_SAME_PACKAGE
package doordash.retail.catalog.crdb.v1;

import "common/marketplace_purchase.proto";
import "doordash.retail.catalog.crdb.v1/urpc_curated_information.proto";
import "doordash.retail.catalog.crdb.v1/urpc_external_information.proto";
import "doordash.retail.catalog.crdb.v1/well_known_types.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option go_package = "github.com/doordash/services-protobuf/generated/doordash/retail/catalog/crdb/v1";

// product item direct database model
// link: https://github.com/doordash/catalog-service/blob/b65225b453dcc2d39dcdd6618888d94f46b1225e/catalog/core/src/main/kotlin/models/ProductItem.kt#L24
message ProductItem {
  // business id
  google.protobuf.Int64Value dd_business_id = 1;
  // msid
  google.protobuf.StringValue merchant_supplied_id = 2;
  // navigation L1 id
  google.protobuf.Int64Value aisle_id_l1 = 3;
  // navigation L1 name
  google.protobuf.StringValue aisle_name_l1 = 4;
  // navigation L2 id
  google.protobuf.Int64Value aisle_id_l2 = 5;
  // navigation L2 name
  google.protobuf.StringValue aisle_name_l2 = 6;
  // sort id
  google.protobuf.Int64Value sort_id = 7;
  // item name
  google.protobuf.StringValue item_name = 8;
  // created at
  google.protobuf.Timestamp created_at = 9;
  // updated at
  google.protobuf.Timestamp updated_at = 10;
  // product group
  google.protobuf.StringValue product_group = 11;
  // traits
  map<string, string> traits = 12;
  // photo id
  google.protobuf.Int64Value photo_id = 13;
  // photo uuid
  google.protobuf.StringValue photo_uuid = 14;
  // photo url
  google.protobuf.StringValue photo_url = 15;
  // upc list
  repeated string upc = 16;
  // is active flag
  google.protobuf.BoolValue is_active = 17;
  // item location
  google.protobuf.StringValue item_location = 18;
  // price lookup code
  google.protobuf.StringValue price_lookup_code = 19;
  // sold as quantity
  google.protobuf.DoubleValue approximate_sold_as_quantity = 20;
  // approximate sold unit
  google.protobuf.StringValue approximate_sold_as_unit_str = 21;
  // measurement unit
  google.protobuf.StringValue measurement_unit = 22;
  // measurement factor
  google.protobuf.DoubleValue measurement_factor = 23;
  // increment
  google.protobuf.DoubleValue increment = 24;
  // unit
  google.protobuf.StringValue unit = 25;
  // additional price description
  google.protobuf.StringValue additional_price_description = 26;
  // scan strategy
  doordash.retail.catalog.crdb.v1.CatalogScanStrategy scan_strategy = 27;
  // detail
  google.protobuf.StringValue detail = 28;
  // secondary photo ids
  repeated string auxiliary_photo_ids = 29;
  // auxiliary photo uuids
  repeated string auxiliary_photo_uuids = 30;
  // auxiliary photo urls
  repeated string auxiliary_photo_urls = 31;
  // product metadata
  map<string, string> product_metadata = 32;
  // purchase type
  common.marketplace_purchase.v1.PurchaseType purchase_type = 33;
  // created by
  google.protobuf.StringValue created_by = 34;
  // updated by
  google.protobuf.StringValue updated_by = 35;
  // need photo backfill
  google.protobuf.BoolValue need_photo_backfill = 36;
  // dd_sic
  google.protobuf.StringValue dd_sic = 37;
  // global catalog id
  google.protobuf.StringValue global_catalog_id = 38;
  // brand id
  google.protobuf.Int64Value brand_id = 39;
  // product category id
  google.protobuf.Int64Value product_category_id = 40;
  // gtin14 list
  repeated string gtin_14 = 41;
  // nutrition programs
  repeated string nutrition_programs = 42;
  // package info
  CatalogPackageInformation package_info = 43;
  // external information
  doordash.retail.catalog.crdb.v1.ExternalInformation external_information = 44;
  // internal information
  doordash.retail.catalog.crdb.v1.CuratedInformation internal_information = 45;
  // audit info
  doordash.retail.catalog.crdb.v1.CatalogServiceAuditInfo catalog_audit_info = 46;
}

// Audit Info for tracking major event timestamps in Catalog Service as the update flows through the system
message CatalogServiceAuditInfo {
  // timestamp at which the update is received by Catalog Service
  google.protobuf.Timestamp received_at = 1;
  // timestamp at which the update is queued by Catalog Service
  google.protobuf.Timestamp queued_at = 2;
  // timestamp at which the update is picked from queue by Catalog Service
  google.protobuf.Timestamp dequeued_at = 3;
  // timestamp at which the update is processed by Catalog Service
  google.protobuf.Timestamp processed_at = 4;
  // timestamp at which the update is sent by Catalog Service to downstream services
  google.protobuf.Timestamp sent_at = 5;
}
