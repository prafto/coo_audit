syntax = "proto3";

import "doordash_for_group/consumer_group.proto";
import "google/protobuf/wrappers.proto";
import "google/protobuf/timestamp.proto";

option java_package = "com.doordash.rpc.consumergroupservice";
option java_multiple_files = true;
option java_outer_classname = "consumer_group_service";
option java_generic_services = true;

package consumer_group_service.v1;

/* The Consumer Group Service */
service ConsumerGroupService {

  /* Save a group of consumers with a group name */
  rpc SaveConsumerGroup (SaveConsumerGroupRequest) returns (SaveConsumerGroupResponse);

  /* get info of stores the group previously ordered  */
  rpc GetGroupOrderedStoreHistory(GetGroupOrderedStoreHistoryRequest) returns (GetGroupOrderedStoreHistoryResponse);

  /* add a member to a group  */
  rpc AddConsumerGroupMember(AddConsumerGroupMemberRequest) returns (AddConsumerGroupMemberResponse);

  /* create a group */
  rpc CreateGroup(CreateGroupRequest) returns (CreateGroupResponse);

  /* Save a group of consumers with a group name */
  rpc UpdateConsumerGroup (UpdateConsumerGroupRequest) returns (UpdateConsumerGroupResponse);

  /* List all groups that a consumer created */
  rpc ListConsumerGroupByCreator (ListConsumerGroupByCreatorRequest) returns (ListConsumerGroupByCreatorResponse);

  /* Get all group members of a group */
  rpc GetConsumerGroupMembersByCreator (GetConsumerGroupMembersByCreatorRequest) returns (GetConsumerGroupMembersByCreatorResponse);

  /* Delete a group */
  rpc DeleteConsumerGroupByCreator (DeleteConsumerGroupByCreatorRequest) returns (DeleteConsumerGroupByCreatorResponse);

  /* Remove a member from a group */
  rpc RemoveMemberFromGroupByCreator (RemoveMemberFromGroupByCreatorRequest) returns (RemoveMemberFromGroupByCreatorResponse);

  /* a generic API for sending notifications to group members. */
  rpc NotifyGroupMembers (NotifyGroupMembersRequest) returns (NotifyGroupMembersResponse);

  /* Pre-check for Save a group of consumers with a group name */
  rpc PreviewSaveConsumerGroup (PreviewSaveConsumerGroupRequest) returns (PreviewSaveConsumerGroupResponse);

  /* a generic API for sending notifications to multiple groups and members. */
  rpc NotifyGroupsAndMembers (NotifyGroupsAndMembersRequest) returns (NotifyGroupsAndMembersResponse);

}

/* GRPC Requests and Responses; All requests should be sent with user_id metadata */
/* Request to save a group of consumers with a group name */
message SaveConsumerGroupRequest {
  /* creator consumer_id */
  google.protobuf.StringValue creator_consumer_id = 1;
  /* user defined group name */
  google.protobuf.StringValue group_name = 2;
  /* A list of members initialized with the group */
  repeated RequestGroupMember members = 3;
  /* A auto-saved group's id; This is optional. If set, service will updated the group name and the flag to remove */
  google.protobuf.StringValue group_id = 4;
}

/* SaveConsumerGroup will return the group info */
message SaveConsumerGroupResponse {
  /* The group summary entity*/
  ConsumerGroupSummary consumer_group_summary = 1;
}

/* Request to preview save a group of consumers. */
message PreviewSaveConsumerGroupRequest {
  /* creator consumer_id */
  google.protobuf.StringValue creator_consumer_id = 1;
  /*dd cart uuid*/
  google.protobuf.StringValue cart_uuid = 2;
  /*order uuid*/
  google.protobuf.StringValue order_uuid = 3;
  /* A list of members initialized with the group */
  repeated RequestGroupMember members = 4;
  /* A map represents a summary of store id  as keys and store name as values*/
  map<string, string> metadata = 5;

}

/* PreviewSaveConsumerGroup will return a list of members for that group and instrument the client to prompt the UI or not */
message PreviewSaveConsumerGroupResponse {
  /* A list of members entities with is_guest flag */
  repeated ConsumerGroupMember members = 1;
  /* A flag shows should we prompt to show the edit_group banner or not. */
  google.protobuf.BoolValue should_prompt_save_group = 2;
  /* the group_id of the auto-saved group from the current order */
  google.protobuf.StringValue group_id = 3;
  /* the group_name of the auto-saved group from the current order */
  google.protobuf.StringValue group_name = 4;
  /* A flag shows should we use the content for edited group when showing the banner. */
  google.protobuf.BoolValue is_group_name_edited = 5;
}

/* Request to list all groups that a consumer created */
message ListConsumerGroupByCreatorRequest {
  /* The consumer who made this request */
  google.protobuf.StringValue creator_consumer_id = 1;
}

/* ListConsumerGroupRequest will return the group summary */
message ListConsumerGroupByCreatorResponse {
  /* A list of groups' summary created by the consumer */
  repeated ConsumerGroupSummary consumer_group_summaries = 1;
  /* A list of consumers from recent orders */
  repeated ConsumerGroupMember consumer_summaries = 2;
}

/* Request to get all group members of a group */
message GetConsumerGroupMembersByCreatorRequest {
  /* The consumer who made this request */
  google.protobuf.StringValue creator_consumer_id = 1;
  /* The group going to get member from */
  google.protobuf.StringValue group_id = 2;
}

/* GetConsumerGroupMembersRequest will return the group summary and list of ConsumerGroupMembers */
message GetConsumerGroupMembersByCreatorResponse {
  /* The consumer group entity */
  ConsumerGroupSummary consumer_group_summary = 1;
  /* A list of all members in the group */
  repeated ConsumerGroupMember members = 2;
}

/* Request to delete a group */
message DeleteConsumerGroupByCreatorRequest {
  /* The consumer who made this request */
  google.protobuf.StringValue creator_consumer_id = 1;
  /* The group going to delete */
  google.protobuf.StringValue group_id = 2;
}

/* DeleteConsumerGroupRequest will return the group_id that has been deleted */
message DeleteConsumerGroupByCreatorResponse {
  /* Deleted consumer group */
  google.protobuf.StringValue group_id = 1;
}

/* Request to remove a member from a group */
message RemoveMemberFromGroupByCreatorRequest {
  /* The consumer who made the request */
  google.protobuf.StringValue creator_consumer_id = 1;
  /* Removed consumer id */
  google.protobuf.StringValue remove_consumer_id = 2;
  /* Group removed the consumer from */
  google.protobuf.StringValue group_id = 3;
}

/* RemoveMemberFromGroupRequest will return the group_id and the consumer_id that has been removed */
message RemoveMemberFromGroupByCreatorResponse {
  /* Removed consumer id */
  google.protobuf.StringValue remove_consumer_id = 1;
  /* The Group the consumer removed from */
  google.protobuf.StringValue group_id = 2;
}

/* All group member notification use case */
enum ConsumerGroupNotificationUseCase {
  /* unspecified use case , should never be used in prod. */
  CONSUMER_GROUP_NOTIFICATION_USE_CASE_CART_UNSPECIFIED = 0;
  /* Used for sending notification to participants to join the group order cart.*/
  CONSUMER_GROUP_NOTIFICATION_USE_CASE_CART_INVITE = 1;
}

/* A request to notify group members to join the group cart */
message NotifyGroupMembersRequest {
  /* The Group going to be notified. */
  google.protobuf.StringValue group_id = 1;
  /* notification use case */
  ConsumerGroupNotificationUseCase notification_use_case = 2;

  /* one of the message that related to the use case */
  oneof message {
    /* cart_invitation_request_body payload for in-app notification only*/
    CartInAppInvitationRequestBody cart_invitation_request_body = 3;
    /* cart_invitation_request_body payload for in-app and sms notification*/
    CartInvitationRequestBody cart_invitation_request_app_and_sms_body = 4;
  }
}

/* A request to notify group members to join the group cart */
message NotifyGroupsAndMembersRequest {
  /* The consumer who made the request */
  google.protobuf.StringValue creator_consumer_id = 1;
  /* The consumer who made the request */
  google.protobuf.StringValue creator_user_id = 2;
  /* The groups going to be notified. */
  repeated string group_ids = 3;
  /* The members going to be notified. */
  repeated string consumer_ids = 4;
  /* notification use case */
  ConsumerGroupNotificationUseCase notification_use_case = 5;

  /* one of the message that related to the use case */
  oneof message {
    /* cart_invitation_request_body payload for in-app notification only*/
    CartInAppInvitationRequestBody cart_invitation_request_body = 6 [deprecated = true];
    /* cart_invitation_request_body payload for in-app and sms notification*/
    CartInvitationRequestBody cart_invitation_request_app_and_sms_body = 7;
  }
}

/* cart_invitation_request_body for in-app notification payload*/
message CartInAppInvitationRequestBody {
  option deprecated = true;
  /* cart id: uuid string. */
  google.protobuf.StringValue cart_id = 1;
  /* store id: is used to navigate to store page for group cart */
  google.protobuf.StringValue store_id = 2;
}

/* cart_invitation_request_body for in-app notification payload*/
message CartInvitationRequestBody {
  /* cart id: uuid string. */
  google.protobuf.StringValue cart_id = 1;
  /* store id: is used to navigate to store page for group cart */
  google.protobuf.StringValue store_id = 2;
  /* store name: is used to sending sms messages to group members */
  google.protobuf.StringValue store_name = 3;
  /* short_url: is used to sending sms messages to group members */
  google.protobuf.StringValue short_url = 4;
  /* menu_id: is used to be sent for push notification */
  google.protobuf.StringValue menu_id = 5;
}

/* notify group members response body */
message NotifyGroupMembersResponse {
  /* The Group being notified. */
  google.protobuf.StringValue group_id = 1;
  /* All group member notification use case */
  ConsumerGroupNotificationUseCase notification_use_case = 2;
}

/* notify group members response body */
message NotifyGroupsAndMembersResponse {
  /* The groups going to be notified. */
  repeated string group_ids = 1;
  /* The members going to be notified. */
  repeated string consumer_ids = 2;
  /* All group member notification use case */
  ConsumerGroupNotificationUseCase notification_use_case = 3;
  /* members failed to be notified */
  repeated ConsumerGroupMember exception_members = 4;
}

/* update group request. only support update group name atm */
message UpdateConsumerGroupRequest {
  /* The group id of the entity to be updated */
  google.protobuf.StringValue group_id = 1;
  /* creator consumer_id */
  google.protobuf.StringValue creator_consumer_id = 2;
  /* user defined group name */
  google.protobuf.StringValue group_name = 3;
}

/* UpdateConsumerGroupResponse */
message UpdateConsumerGroupResponse {
  /* The group id updated */
  google.protobuf.StringValue group_id = 1;
  /* the updated group name */
  google.protobuf.StringValue group_name = 2;
  /* A list of members entities with is_guest flag */
  repeated ConsumerGroupMember members = 3;
}

/* Request to get the stores a certain group has ordered */
message GetGroupOrderedStoreHistoryRequest{
  /* group id of the user group */
  google.protobuf.StringValue group_id = 1;
}
/* Response returns a map containing store_id and store names a certain group has ordered */
message GetGroupOrderedStoreHistoryResponse{
  /* group id of the user group */
  google.protobuf.StringValue group_id = 1;
  /* An object saving store_ids and store_names  */
  repeated GroupOrderStores store_info = 2;
}

/* A request to add a member to a group by groupId */
message AddConsumerGroupMemberRequest{
  /* group id of the user group */
  google.protobuf.StringValue group_id = 1;
  /* An object saving member info  */
  ConsumerGroupMemberInfo member_info = 2;
  /* consumer id if this member is not a guest */
  google.protobuf.StringValue member_consumer_id = 3;
}

/* Response returns the groupId a member added in */
message AddConsumerGroupMemberResponse{
  /* group id of the user group */
  google.protobuf.StringValue group_id = 1;
  /* consumer id if this member is not a guest */
  google.protobuf.StringValue added_member_consumer_id = 2;
}

/* Request to create a group */
message CreateGroupRequest{
  /* group name defined by user */
  google.protobuf.StringValue group_name = 1;
  /* creator consumer_id */
  google.protobuf.StringValue creator_consumer_id = 2;
}

/* Response to create a group */
message CreateGroupResponse{
  /* group id of this new group */
  google.protobuf.StringValue group_id = 1;
}