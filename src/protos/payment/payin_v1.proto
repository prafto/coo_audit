syntax = "proto3";

package doordash.payment.payin;

import "data_classification.v1/data_classification.proto";
import "google/protobuf/any.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "payment/common.proto";
import "payment/payin_cart_payment.proto";
import "payment/payin_payer.proto";
import "payment/payin_payment_method.proto";
import "payment/payin_subscription.proto";
import "payment/payin_subscription_plan.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.payment.payin.v1";

/*
   CartPayment entity of payin service v1 APIs
*/
message CartPayment {
  // Unique Id of this cart payment object
  google.protobuf.StringValue id = 1;

  // Current amount value of this cart payment at the time of API call or Event occurrence
  google.protobuf.Int32Value amount = 2;

  // Id of the payer whom this CartPayment was charged from
  google.protobuf.StringValue payer_id = 3;

  // Correlation Ids of the payer whom this CartPayment was charged from
  .doordash.payment.payin.PayerCorrelationIds payer_correlation_ids = 4;

  // Id of legacy Stripe Card which this CartPayment was charged on, if applicable
  google.protobuf.Int64Value dd_stripe_card_id = 5;

  // Id of payment method which this CartPayment was charged on
  google.protobuf.StringValue payment_method_id = 6;

  // If true, meaning this CartPayment is authorized first then captured later
  google.protobuf.BoolValue delay_capture = 7;

  // Client specified correlation ids when creating this CartPayment. Used for client to reference this object
  // besides it's unique primary id
  doordash.payment.payin.CorrelationIds correlation_ids = 8;

  // Client specified generic metadata that will be persisted in Payment system
  map<string, google.protobuf.Any> metadata = 9;

  // Timestamp when the CartPayment was created
  google.protobuf.Timestamp created_at = 10;

  // Timestamp when the CartPayment was last updated
  google.protobuf.Timestamp updated_at = 11;

  // Client's description of this CartPayment.
  // This field is marked PII since it has the full name of the Cx.
  google.protobuf.StringValue client_description = 12 [(data_classification.v1.data_classification).pii = true];

  // Client specified statement strings which will appear on Payer's bank statement
  google.protobuf.StringValue payer_statement_description = 13;

  // Client specified SplitPayment to indicate how the funds of this CartPayment
  // should flow between DoorDash, Payer and Merchant
  doordash.payment.payin.SplitPayment split_payment = 14;

  // When this CartPayment should be captured if it was created with "delay_capture = True"
  // Currently only server default is applied
  google.protobuf.Timestamp capture_after = 15;

  // Timestamp of when this CartPayment was pro-actively canceled by client
  google.protobuf.Timestamp deleted_at = 16;

  // When set to True, indicating this CartPayment was created via CommandoMode and its authorization was deferred
  // to a later time other than the time it was created per clients API call
  google.protobuf.BoolValue deferred = 17;

  // Indicate the last PaymentAction applied to this CartPayment at the time when this CartPayment is returned from
  // api call or published via Payment Events
  doordash.payment.payin.PaymentAction payment_action = 18;

  // Additional purchase metadata which could drive underlying payment behaviors
  doordash.payment.payin.PurchaseInfo purchase_info = 19;

  // Country of DoorDash platform account which this CartPayment was charged to
  doordash.payment.common.Country country = 20;

  // Currency of the amount fields
  doordash.payment.common.Currency currency = 21;

  // Original amount when this CartPayment was initially created
  google.protobuf.Int32Value amount_original = 22;

  // Pgp code of which payment provider was used to make the charge
  doordash.payment.common.PgpCode payment_provider = 23;

  // Indicate possible PaymentActions that would apply should adjust be used at this time for this CartPayment
  repeated doordash.payment.payin.PaymentAction next_eligible_payment_actions = 24;

  // Individual charge level details for Cart Payment
  doordash.payment.payin.PaymentDetailsList payment_details = 25;

  // Required actions client must take for CartPayment lifecycle to proceed
  doordash.payment.payin.PaymentRequiredAction payment_required_action = 26;

  // State describing the freshness of a cryptogram. This only applies to digital wallet
  // payments and will be set to the default value for other types of payments.
  doordash.payment.common.CryptogramFreshnessState cryptogram_freshness_state = 27;
}

/*
   PaymentMethod entity of payin service v1 APIs
*/
message PaymentMethod {
  // Unique identifier of this payment method
  google.protobuf.StringValue id = 1;

  // Id of the payer who owns this payment method
  google.protobuf.StringValue payer_id = 2;

  // Type of this payment method
  google.protobuf.StringValue type = 3;

  // Client reference Id of the payer who owns this payment method.
  // Used in combination of payer_reference_id_type
  google.protobuf.StringValue payer_reference_id = 4;

  // Type of payer_reference_id
  doordash.payment.payin.PayerReferenceIdType payer_reference_id_type = 5;

  // Id of legacy Stripe Card which this CartPayment was charged on, if applicable
  google.protobuf.Int64Value dd_stripe_card_id = 6;

  // Timestamp of when this payment method was created and associated to corresponding payer
  google.protobuf.Timestamp created_at = 7;

  // Timestamp of when this payment method was last updated
  google.protobuf.Timestamp updated_at = 8;

  // Timestamp of when this payment method was deleted
  google.protobuf.Timestamp deleted_at = 9;

  // Underlying card object of this payment method, if the payment method is card
  doordash.payment.payin.Card card = 10;

  // Billing details of this payment method
  doordash.payment.payin.BillingDetails billing_details = 11;

  // Underlying payment provider's payment method object details
  doordash.payment.payin.PaymentGatewayProviderDetails payment_gateway_provider_details = 12;

  // Metadata associated with this payment method
  map<string, google.protobuf.Any> metadata = 13;

  // An optional generic fingerprints of this payment method, which is provider agnostic
  doordash.payment.payin.GenericFingerprints generic_fingerprints = 14;

  // pgp details from onboarded multi-providers
  // e.g. If a payment method was onboarded to both Braintree and Stripe, there
  // will be 2 items in this list, one for Braintree and another one for Stripe
  repeated doordash.payment.payin.PaymentGatewayProviderDetails multi_pgp_details = 15;

  // Payment Method type, e.g. Venmo, PayPal or Card
  doordash.payment.payin.PaymentMethodType payment_method_type = 16;

  // PayPal Payment Method Details
  doordash.payment.payin.PayPalMethodDetails paypal_method_details = 17;

  // Venmo Payment Method Details
  doordash.payment.payin.VenmoMethodDetails venmo_method_details = 18;

  // Payment method availability
  doordash.payment.payin.PaymentMethodAvailability payment_method_availability = 19;

  // Payment method tag types, e.g. business payment method tag
  repeated doordash.payment.payin.PaymentMethodTagType payment_method_tag_types = 20;
}

/*
   PgpPaymentMethod entity of payin service v2 APIs
*/
message PgpPaymentMethod {
  // Unique identifier of the parent payment method object, which owns this pgp payment method
  google.protobuf.StringValue parent_payment_method_id = 1;

  // Payment Method type, e.g. Venmo, PayPal or Card
  doordash.payment.payin.PaymentMethodType payment_method_type = 2;

  // Id of the payer who owns this payment method
  google.protobuf.StringValue payer_id = 3;

  // Client reference Id of the payer who owns this payment method.
  // Used in combination of payer_reference_id_type
  google.protobuf.StringValue payer_reference_id = 4;

  // Type of payer_reference_id
  doordash.payment.payin.PayerReferenceIdType payer_reference_id_type = 5;

  // Timestamp of when this payment method was created and associated to corresponding payer
  google.protobuf.Timestamp created_at = 6;

  // Timestamp of when this payment method was last updated
  google.protobuf.Timestamp updated_at = 7;

  // Timestamp of when this payment method was deleted
  google.protobuf.Timestamp deleted_at = 8;

  // An optional generic fingerprints of this payment method, which is provider agnostic
  doordash.payment.payin.GenericFingerprints generic_fingerprints = 9;

  // Underlying payment provider's payment method object details
  doordash.payment.payin.PaymentGatewayProviderDetails payment_gateway_provider_details = 10;
}

/*
   PaymentMethodCreationFailed entity of payin service v1 APIs
*/
message PaymentMethodCreationFailed {
  // Client reference Id of the payer who owns this payment method.
  // Used in combination of payer_reference_id_type
  google.protobuf.StringValue payer_reference_id = 1;

  // Type of payer_reference_id
  doordash.payment.payin.PayerReferenceIdType payer_reference_id_type = 2;

  // Error code of the failure reason
  google.protobuf.StringValue error_code = 3;
}

/*
   Dispute entity of payin service v1 APIs
*/
message PaymentDispute {
  // Unique identifier of this dispute
  google.protobuf.StringValue id = 1;

  // Id of the payment intent that associates with this dispute
  google.protobuf.StringValue payment_intent_id = 2;

  // Status of this dispute
  google.protobuf.StringValue status = 3;

  // Amount of this dispute
  google.protobuf.Int32Value amount = 4;

  // Currency of this dispute
  doordash.payment.common.Currency currency = 5;

  // Reason of this dispute
  google.protobuf.StringValue reason = 6;

  // Timestamp of when this dispute will due for submitting evidence
  google.protobuf.Timestamp evidence_due_at = 7;

  // Timestamp of when this dispute was created
  google.protobuf.Timestamp created_at = 8;

  // Timestamp of when this dispute was last updated
  google.protobuf.Timestamp updated_at = 9;

  // Timestamp of when evidence was submitted for review for this dispute
  google.protobuf.Timestamp submitted_for_review_at = 10;

  // Timestamp of when this dispute was resolved
  google.protobuf.Timestamp resolved_at = 11;

  // Metadata associated with this dispute
  map<string, google.protobuf.Any> metadata = 12;

  // Correlation Ids of the payer of the CartPayment this dispute is associated with.
  doordash.payment.payin.PayerCorrelationIds payer_correlation_ids = 13;

  // Client specified correlation ids of the CartPayment this dispute is associated with.
  doordash.payment.payin.CorrelationIds correlation_ids = 14;

  // Net of this dispute
  google.protobuf.Int32Value net = 15;

  // Fee of this dispute
  google.protobuf.Int32Value fee = 16;

  // Pgp code indicating which provider was used for this dispute
  doordash.payment.common.PgpCode pgp_code = 17;
}

/*
   SubscriptionPlan entity of payin service v1 APIs
*/
message SubscriptionPlan {
  // Unique identifier of the subscription plan
  google.protobuf.StringValue id = 1;

  // Fee of the subscription plan
  google.protobuf.Int32Value fee = 2;

  // Country of the subscription plan
  doordash.payment.common.Country country = 3;

  // Currency of which the subscription plan's fee is in
  doordash.payment.common.Currency currency = 4;

  // Recurrence interval type of the subscription plan (day, month, year)
  doordash.payment.payin.SubscriptionPlanIntervalType recurrence_interval_type = 5;

  // Recurrence interval units of the subscription plan
  google.protobuf.Int32Value recurrence_interval_units = 6;

  // Trial period days of the subscription plan
  google.protobuf.Int32Value trial_period_days = 7;

  // True if the subscription plan is active, False otherwise
  google.protobuf.BoolValue is_active = 8;

  // Timestamp of when the subscription plan was created
  google.protobuf.Timestamp created_at = 9;

  // Timestamp of when the subscription plan was last updated
  google.protobuf.Timestamp updated_at = 10;

  // Timestamp of when the subscription plan was deleted
  google.protobuf.Timestamp deleted_at = 11;

  // Correlation ids of the subscription plan
  doordash.payment.payin.SubscriptionPlanCorrelationIds subscription_plan_correlation_ids = 12;

  // Payment gateway provider and plan id associated with the subscription plan
  doordash.payment.payin.PaymentGatewayProviderPlan payment_gateway_provider_plan = 13;

  // Product name and statement descriptor of a subscription plan
  doordash.payment.payin.SubscriptionPlanProductDetail product_detail = 14;
}

/*
   Subscription entity of payin service v1 APIs
*/
message Subscription {
  // Unique identifier of the subscription
  google.protobuf.StringValue id = 1;

  // Id of the subscription plan associated with this subscription
  google.protobuf.StringValue subscription_plan_id = 2;

  // Id of the MainDB consumer subscription if applicable
  google.protobuf.Int64Value dd_consumer_subscription_id = 3;

  // Trial id of the MainDB consumer subscription plan if applicable
  google.protobuf.Int64Value dd_consumer_subscription_plan_trial_id = 4;

  // Correlation ids of the subscription
  doordash.payment.payin.SubscriptionCorrelationIds subscription_correlation_ids = 5;

  // Id of the payer associated with this subscription
  google.protobuf.StringValue payer_id = 6;

  // Id of the default payment method associated with the subscription
  google.protobuf.StringValue default_payment_method = 7;

  // Status of the subscription
  doordash.payment.payin.SubscriptionStatusType status = 8;

  // Current period start time of the subscription
  google.protobuf.Timestamp current_period_start = 9;

  // Current period end time of the subscription
  google.protobuf.Timestamp current_period_end = 10;

  // Number of days of the trial period
  google.protobuf.Int32Value trial_period_days = 11;

  // Trial start time of the subscription
  google.protobuf.Timestamp trial_start = 12;

  // Trial end time of the subscription
  google.protobuf.Timestamp trial_end = 13;

  // Timestamp of when the subscription ended
  google.protobuf.Timestamp ended_at = 14;

  // Timestamp of when the subscription was created
  google.protobuf.Timestamp created_at = 15;

  // Timestamp of when the subscription was last updated
  google.protobuf.Timestamp updated_at = 16;

  // Timestamp of when the subscription was cancelled
  google.protobuf.Timestamp cancelled_at = 17;

  // Payment gateway provider and subscription id associated with this subscription (to be deprecated)
  doordash.payment.payin.PaymentGatewayProviderSubscription payment_gateway_provider_subscription = 18;

  // Billing provider subscription id (stripe: sub_xxx, doordash: xxx-xxx-xxx)
  google.protobuf.StringValue billing_provider_subscription_id = 19;

  // Billing provider code
  google.protobuf.StringValue billing_provider_code = 20;

  // To indicate if the subscription will be cancelled at period end
  google.protobuf.BoolValue cancel_at_period_end = 21;
}

// SubscriptionPlanDetails
message SubscriptionPlanDetails {
  // subscription plan id
  google.protobuf.StringValue subscription_plan_id = 1;
  // Correlation ids of the subscription plan
  doordash.payment.payin.SubscriptionPlanCorrelationIds subscription_plan_correlation_ids = 2;
  // Product name and statement descriptor of a subscription plan
  doordash.payment.payin.SubscriptionPlanProductDetail product_detail = 3;
}

/*
   SubscriptionInvoice entity of payin service v1 APIs
*/
message SubscriptionInvoice {
  // Unique identifier of this subscription invoice
  google.protobuf.StringValue id = 1;

  // Id of the dd consumer subscription unit
  google.protobuf.Int64Value dd_consumer_subscription_unit_id = 2;

  // Id of the associated subscription
  google.protobuf.StringValue subscription_id = 3;

  // Correlation ids of the associated subscription
  doordash.payment.payin.SubscriptionCorrelationIds subscription_correlation_ids = 4;

  // Id of the cart payment
  google.protobuf.StringValue cart_payment_id = 5;

  // Id of the dd consumer charge
  google.protobuf.Int64Value dd_consumer_charge_id = 6;

  // Final amount of the invoice
  google.protobuf.Int32Value amount = 7;

  // Original amount of the invoice
  google.protobuf.Int32Value amount_original = 8;

  // Currency of the subscription invoice
  doordash.payment.common.Currency currency = 9;

  // Status of the subscription invoice
  google.protobuf.StringValue status = 10;

  // Payment method of the subscription invoice
  PaymentMethod payment_method = 11;

  // Start time of the invoice
  google.protobuf.Timestamp start_time = 12;

  // End time of the invoice
  google.protobuf.Timestamp end_time = 13;

  // Creation time of the invoice
  google.protobuf.Timestamp created_at = 14;

  // Timestamp of the latest update
  google.protobuf.Timestamp updated_at = 15;

  // Deletion time of the invoice
  google.protobuf.Timestamp deleted_at = 16;

  // Id of the dd consumer subscription plan trial id
  google.protobuf.Int64Value dd_consumer_subscription_plan_trial_id = 17;

  // Billing reason why the invoice was created
  google.protobuf.StringValue billing_reason = 18;

  // Subscription invoice status
  google.protobuf.StringValue invoice_status = 19;

  // Subscription plan details
  SubscriptionPlanDetails subscription_plan_details = 20;

  // Untaxed cost of plan
  google.protobuf.Int32Value plan_fee = 21;

  // Tax amount added to plan fee
  google.protobuf.Int32Value tax_amount = 22;

  // Id of the pgp subscription invoice resource
  google.protobuf.StringValue pgp_subscription_invoice_resource_id = 23;

  // Amount paid for by a partner company for co-branded subscription programs
  google.protobuf.Int32Value partner_funded_amount = 24;
}
