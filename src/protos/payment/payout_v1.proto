syntax = "proto3";

package doordash.payment.payout;

import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "payment/common.proto";
import "payment/payout_account.proto";
import "payment/payout_payout.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.payment.payout.v1";

/*
   PayoutMethod entity of payout service v1 APIs
*/
message PayoutMethod {
  message BankDetails {
    google.protobuf.StringValue bank_name = 1;
    google.protobuf.StringValue bank_last4 = 2;
    google.protobuf.StringValue fingerprint = 3;
  }

  message CardDetails {
    google.protobuf.StringValue stripe_card_id = 1;
    google.protobuf.StringValue last4 = 2;
    google.protobuf.StringValue brand = 3;
    google.protobuf.BoolValue is_default = 4;
    google.protobuf.Int32Value exp_month = 5;
    google.protobuf.Int32Value exp_year = 6;
    google.protobuf.StringValue fingerprint = 7;
    google.protobuf.StringValue token = 8;
  }

  enum ExternalAccountType {
    _unknown_external_account_type = 0;
    bank_account = 1;
    card = 2;
  }

  // Unique id of this payout_method_bank entity
  google.protobuf.Int64Value id = 1;

  // Type of payout_method: bank_account, card
  ExternalAccountType type = 2;

  // Unique id of the associated payment account
  google.protobuf.Int64Value payout_account_id = 3;
  doordash.payment.common.Country country = 4;
  doordash.payment.common.Currency currency = 5;
  google.protobuf.Timestamp created_at = 6;
  google.protobuf.Timestamp updated_at = 7;
  google.protobuf.Timestamp deleted_at = 8;

  // Only of the included entity within this "oneof" block can be set for a single PayoutMethod instance.
  oneof entity {
    BankDetails bank_details = 9;
    CardDetails card_details = 10;
  }
}

/*
   PayoutAccount entity of payout service v1 APIs
*/
message PayoutAccount {
  // Unique id of the payout account
  google.protobuf.Int64Value id = 1;

  // The statement_descriptor associated with this payout account
  google.protobuf.StringValue statement_descriptor = 2;

  // Payment gateway provider's account type: stripe_managed_account
  .doordash.payment.payout_account.AccountType pgp_account_type = 3;

  // Unique id for the provider's account: stripe_managed_account id
  google.protobuf.Int64Value pgp_account_id = 4;

  // The external provider's account id: stripe id
  google.protobuf.StringValue pgp_external_account_id = 5;

  // Correlation Ids of the payer whom this CartPayment was charged from
  .doordash.payment.payout_account.VerificationRequirements verification_requirements = 6;
}

/*
   Payout entity of payout service v1 APIs
*/
message Payout {
  // Unique id of the payout
  google.protobuf.Int64Value id = 1;

  // type of payout: standard, instant
  .doordash.payment.payout_payout.PayoutType type = 2;

  // unique id of the associated payment account
  google.protobuf.Int64Value payout_account_id = 3;

  // total amount of this payout
  google.protobuf.Int64Value amount = 4;

  // created_at time of the payout
  google.protobuf.Timestamp created_at = 5;

  // The currency of the payout
  google.protobuf.StringValue currency = 6;

  // The status of the payout
  .doordash.payment.payout_payout.PayoutStatus status = 7;

  // The subtotal of the standard payout
  google.protobuf.Int32Value subtotal = 8;

  // The adjustment amount of the standard payout
  google.protobuf.StringValue adjustments = 9;

  // Payout method of the standard payout
  google.protobuf.StringValue method = 10;

  // Unique id of the recipient
  google.protobuf.Int64Value recipient_id = 11;

  // submitted time of the payout
  google.protobuf.Timestamp submitted_at = 12;

  // deleted time of the payout
  google.protobuf.Timestamp deleted_at = 13;

  // manual transfer reason of the standard payout
  google.protobuf.StringValue manual_transfer_reason = 14;

  // status code of the payout
  google.protobuf.StringValue status_code = 15;

  // submitting_at of the payout
  google.protobuf.Timestamp submitting_at = 16;

  // flag to indicate if it should retry on failure
  google.protobuf.BoolValue should_retry_on_failure = 17;

  // statement description of the payout
  google.protobuf.StringValue statement_description = 18;

  // unique id of the user to create the payout
  google.protobuf.Int64Value created_by_id = 19;

  // unique id of the user to delete the payout
  google.protobuf.Int64Value deleted_by_id = 20;

  // unique id of recipient
  google.protobuf.Int64Value recipient_ct_id = 21;

  // unique id of the user to submit the payout
  google.protobuf.Int64Value submitted_by_id = 22;

  // The fee of the instant payout
  google.protobuf.Int32Value fee = 23;

  // The payout card of the instant payout
  google.protobuf.StringValue card = 24;

  // Entity type (Dx, Mx, etc.). This is a column of payment account table
  PayoutAccountEntity entity_type = 25;
}

/*
   Entity type of the Payment Account
*/
enum PayoutAccountEntity {
  _unknown_entity = 0;
  dasher = 1;
  store = 2;
  merchant = 3;
  other = 4;
  partner = 5;
  work_team_account = 6;
}

/*
   Instant Payout entity of payout service v1 APIs
*/
message InstantPayout {
  // Unique id of the instant payout
  google.protobuf.Int64Value id = 1;

  // unique id of the associated payment account
  google.protobuf.Int64Value payout_account_id = 2;

  // total amount of the instant payout
  google.protobuf.Int64Value amount = 3;

  // created_at time of the instant payout
  google.protobuf.Timestamp created_at = 4;

  // updated_at time of the instant payout
  google.protobuf.Timestamp updated_at = 5;

  // The currency of the instant payout
  google.protobuf.StringValue currency = 6;

  // The status of the instant payout
  .doordash.payment.payout_payout.PayoutStatus status = 7;

  // The fee of the instant payout
  google.protobuf.Int32Value fee = 8;

  // The fee transaction id of the instant payout
  google.protobuf.Int64Value fee_transaction_id = 9;

  // transactions paid by the instant payout
  repeated google.protobuf.Int64Value transaction_ids = 10;

  // corresponding id in the payment gateway provider
  google.protobuf.StringValue pgp_resource_id = 11;
}

/*
   Transaction entity of payout service v1 APIs
*/
message Transaction {
  // Unique id of the payout transaction
  google.protobuf.Int64Value id = 1;

  // total amount of the transaction
  google.protobuf.Int64Value amount = 2;

  // unique id of the associated payment account
  google.protobuf.Int64Value payment_account_id = 3;

  // total paid amount of the transaction
  google.protobuf.Int64Value amount_paid = 4;

  // created_at time of the transaction
  google.protobuf.Timestamp created_at = 5;

  // updated_at time of the transaction
  google.protobuf.Timestamp updated_at = 6;

  // unique transfer id associated with this transaction
  google.protobuf.Int64Value transfer_id = 7;

  // unique id of the who creates this transaction
  google.protobuf.Int64Value created_by_id = 8;

  // optional transaction notes
  google.protobuf.StringValue notes = 9;

  // transaction metadata
  google.protobuf.StringValue metadata = 10;

  // transaction idempotency key
  google.protobuf.StringValue idempotency_key = 11;

  // currency of the transaction
  google.protobuf.StringValue currency = 12;

  // target id links this transaction
  google.protobuf.Int64Value target_id = 13;

  // target type links this transaction
  google.protobuf.StringValue target_type = 14;

  // transaction state
  google.protobuf.StringValue state = 15;

  // dsj_id for this transaction
  google.protobuf.Int64Value dsj_id = 16;

  // payout id (fastpay) for this transaction
  google.protobuf.Int64Value payout_id = 17;

  // invoice id for this transaction
  google.protobuf.Int64Value invoice_id = 18;

  // settlement id for this transaction
  google.protobuf.StringValue settlement_id = 19;

  // settlement type for this transaction
  google.protobuf.StringValue settlement_type = 20;

  // inserted timestamp of this transaction
  google.protobuf.Timestamp inserted_at = 21;
}

/*
   Type of Stripe Account

   Note: all enum members are lower cased to align with payment service pydantic definitions
*/
enum StripeAccountType {
  _unknown_stripe_account_type = 0;
  stripe_managed_account = 1;
  stripe_recipient = 2;
}

/*
   Submission status of Stripe transfer

   Note: all enum members are lower cased to align with payment service pydantic definitions
*/
enum StripeTransferSubmissionStatus {
  _unknown_stripe_transfer_submission_status = 0;
  submitting = 1;
  submitted = 2;
  failed_to_submit = 3;
  failed = 4;
}

/*
   Stripe Transfer entity of payout service v1 APIs
*/
message StripeTransfer {
  // Unique id of the payout Stripe transfer
  google.protobuf.Int64Value id = 1;

  // created_at time of the Stripe transfer
  google.protobuf.Timestamp created_at = 2;

  // unique transfer id associated with this Stripe transfer
  google.protobuf.Int64Value transfer_id = 3;

  // Stripe transfer status
  google.protobuf.StringValue stripe_status = 4;

  // Stripe unique ID for the transfer
  google.protobuf.StringValue stripe_id = 5;

  // Unique Stripe request ID
  google.protobuf.StringValue stripe_request_id = 6;

  // Failure code for the Stripe transfer
  google.protobuf.StringValue stripe_failure_code = 7;

  // Unique Stripe account ID
  google.protobuf.StringValue stripe_account_id = 8;

  // Type of Stripe account
  StripeAccountType stripe_account_type = 9;

  // Recipient country short name
  google.protobuf.StringValue country_shortname = 10;

  // Recipient bank last four
  google.protobuf.StringValue bank_last_four = 11;

  // Recipient bank name
  google.protobuf.StringValue bank_name = 12;

  // Transfer submission error code
  google.protobuf.StringValue submission_error_code = 13;

  // Transfer submission error type
  google.protobuf.StringValue submission_error_type = 14;

  // Submission status of Stripe transfer
  StripeTransferSubmissionStatus submission_status = 15;

  // Stripe transfer submission timestamp
  google.protobuf.Timestamp submitted_at = 16;
}

message Funding {
  // Unique id of the funding
  google.protobuf.Int64Value id = 1;

  // Amount flow from platform account to connected account
  google.protobuf.Int64Value amount = 2;

  // Created_at time of the funding
  google.protobuf.Timestamp created_at = 3;

  // Currency of the amount
  google.protobuf.StringValue currency = 4;

  // Method for the funding, e.g., braintree / stripe etc.
  google.protobuf.StringValue method = 5;

  // Unique id for the payout_account
  google.protobuf.Int64Value payout_account_id = 6;

  // Payout account entity e.g., 'dasher', 'merchant', 'store'
  PayoutAccountEntity payout_account_entity = 7;

  // 'standard' (for ACH) or 'instant' (for FP)
  google.protobuf.StringValue reference_type = 8;

  // transfer_id or payout_id(for fast pay)
  google.protobuf.StringValue reference_id = 9;

  // whether current money flow is out flow from dd
  google.protobuf.BoolValue outflow_from_dd = 10;

  // account that funding moved from
  google.protobuf.StringValue from_account = 11;

  // account that funding moved to
  google.protobuf.StringValue to_account = 12;
}

message StripeChargesEnabledUpdate {
  // identifier of the payment record
  google.protobuf.Int64Value payment_account_id = 1;

  // time of the event
  google.protobuf.Timestamp created_at = 2;

  // charges_enabled field from Stripe
  // https://docs.stripe.com/api/accounts/object#account_object-charges_enabled
  google.protobuf.BoolValue stripe_charges_enabled = 3;
}
