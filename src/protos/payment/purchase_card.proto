syntax = "proto3";

package doordash.payment.purchase_card;

import "google/protobuf/any.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "payment/common.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.payment.purchase_card";

enum PurchaseState {
  PENDING_APPROVAL = 0;
  PENDING_DECLINE = 1;
  APPROVED = 2;
  DECLINED = 3;
  ERROR = 4;
  SETTLED = 5;
  ALLOWANCE_CREATION_ERROR = 6;
}

enum PurchaseStateReason {
  APPROVED_BY_JIT = 0;
  TIMEOUT = 1;
  REVERSED = 2;
  INSUFFICIENT_FUNDS = 3;
  POS_CHECK_FAILURE = 4;
  BANNED_MCC = 5;
  TERMINAL_MISCONFIGURATION = 6;
  OTHER = 7;
  COMPLETION = 8;
  RED_CARD_NOT_FOUND_OR_INACTIVE = 9;
  NO_ALLOWANCES_FOUND = 10;
  INVALID_PIN = 11;
}

enum PurchaseCardUserType {
  DASHER = 0;
  SHOPPER = 1;
}

enum MarqetaProvider {
  UNDEFINED = 0;
  // MARQETA is used to represent the US environment on the backend for legacy reasons.
  MARQETA = 1;
  MARQETA_AU = 2;
  MARQETA_CA = 3;
  MARQETA_NZ = 4;
  STRIPE_US = 5;
}

// Refund State
enum RedCardPurchaseRefundState {
  RED_CARD_PURCHASE_REFUND_STATE_UNKNOWN = 0;
  // Refund has been initiated. Sent immediately.
  RED_CARD_PURCHASE_REFUND_STATE_AUTHORIZATION = 1;
  // Refund has completed and funds transfers. Sent ~1 day later.
  RED_CARD_PURCHASE_REFUND_STATE_CLEARED = 2;
  // Refund has been reversed. Sent anytime after authorization.
  RED_CARD_PURCHASE_REFUND_STATE_REVERSAL = 3;
  // Refund has been declined. Sent anytime.
  RED_CARD_PURCHASE_REFUND_STATE_DECLINED = 4;
}

message MarqetaPurchase {
  google.protobuf.Int64Value delivery_id = 1;

  google.protobuf.StringValue token = 2;

  google.protobuf.BoolValue timeout = 3;

  google.protobuf.Timestamp swiped_at_utc = 4;

  google.protobuf.Int32Value swipe_amount_in_usd = 5;

  google.protobuf.Int32Value swipe_amount = 6;

  doordash.payment.common.Currency swipe_amount_currency = 7;

  google.protobuf.BoolValue is_mpf_state = 8;

  google.protobuf.BoolValue is_pass_through = 9;
}

message MarqetaPurchaseV2 {
  google.protobuf.StringValue external_reference_id = 1; // could be either delivery id or order id for retail service

  google.protobuf.StringValue transaction_token = 2;

  google.protobuf.Timestamp swiped_at_utc = 3;

  google.protobuf.Int32Value amount_in_usd = 4;

  google.protobuf.Int32Value amount = 5;

  google.protobuf.Int32Value swipe_amount_in_total = 6; // accumulative swipe amount so far

  google.protobuf.Int32Value swipe_amount_authorized = 7; // amount that allows users to swipe

  doordash.payment.common.Currency amount_currency = 8;

  PurchaseState state = 9;

  PurchaseStateReason reason = 10;

  PurchaseCardUserType user_type = 11;

  google.protobuf.StringValue user_token = 12;

  google.protobuf.StringValue card_token = 13;

  map<string, string> swipe_merchant_info = 14;

  google.protobuf.Timestamp created_at_utc = 15;

  google.protobuf.BoolValue is_mpf_state = 16;

  google.protobuf.BoolValue is_pass_through = 17;

  google.protobuf.StringValue approval_code = 18;

  google.protobuf.StringValue network_reference_id = 19;

  google.protobuf.StringValue preceding_related_transaction_token = 20;

  MarqetaProvider provider_name = 21;
}

// Red Card Refund
message RedCardPurchaseRefund {
  // event created at
  google.protobuf.Timestamp created_at = 1;

  // refund state
  RedCardPurchaseRefundState state = 2;

  // amount
  google.protobuf.Int32Value amount = 3;

  // currency
  doordash.payment.common.Currency currency = 4;

  // dasher id
  google.protobuf.StringValue dasher_id = 5;

  // provider name (Marqeta or Stripe environment)
  MarqetaProvider provider_name = 6;

  // Provider's associated event id
  google.protobuf.StringValue provider_event_id = 7;
}
