syntax = "proto3";

package doordash.payment.common;

import "data_classification.v1/data_classification.proto";
import "google/protobuf/wrappers.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.payment.common";

enum Currency {
  option allow_alias = true;
  _unknown_currency = 0;
  usd = 1;
  cad = 2;
  aud = 3;
  jpy = 4;
  mxn = 5;
  eur = 6;
  nzd = 7;
  USD = 1;
  CAD = 2;
  AUD = 3;
  JPY = 4;
  MXN = 5;
  EUR = 6;
  NZD = 7;
}

enum Country {
  _UNKNOWN_COUNTRY = 0;
  US = 1;
  CA = 2;
  AU = 3;
  JP = 4;
  MX = 5;
  PR = 6;
  DE = 7;
  NZ = 8;
}

enum PgpCode {
  _unknown_pgp = 0;
  stripe = 1;
  paypal = 2;
  braintree = 3;
  jpm = 4;
  fiserv = 5;
  forage = 6;
  fiserv_connect_pay = 7;
}

enum TokenizationProvider {
  TOKENIZATION_PROVIDER_UNSPECIFIED = 0;
  TOKENIZATION_PROVIDER_STRIPE = 1;
  TOKENIZATION_PROVIDER_VGS = 2;
  TOKENIZATION_PROVIDER_BRAINTREE = 3;
  TOKENIZATION_PROVIDER_JPM = 4 [deprecated = true];
  TOKENIZATION_PROVIDER_VGS_PAYMENT = 5;
}

// Enum describing whether digital wallet cryptogram was requested by fraud and if it was fresh or stale after request.
enum CryptogramFreshnessState {
  // Unspecified cryptogram freshness state.
  CRYPTOGRAM_FRESHNESS_STATE_UNSPECIFIED = 0;
  // A fresh cryptogram was available, as requested.
  CRYPTOGRAM_FRESHNESS_STATE_FRESH_AS_REQUESTED = 1;
  // A fresh cryptogram was requested, but a stale one was used.
  CRYPTOGRAM_FRESHNESS_STATE_REQUESTED_BUT_STALE = 2;
  // A fresh cryptogram was used, but a fresh one was not requested.
  CRYPTOGRAM_FRESHNESS_STATE_FRESH_UNREQUESTED = 3;
  // A stale cryptogram was used, but a fresh one was not requested.
  CRYPTOGRAM_FRESHNESS_STATE_STALE_UNREQUESTED = 4;
}

// Represents a Card
message CardData {
  // Tokenization provider used
  TokenizationProvider tokenization_provider = 1;
  // Depending on the tokenization provider, one should be specified.
  oneof card {
    // This should be specified if TokenizationProvider == STRIPE
    TokenizedCardData tokenized_card_details = 2;
    // This should be specified if TokenizationProvider == VGS
    ItemizedCardData itemized_card_details = 3;
  }
}

// Represents card data wrapped a single token
message TokenizedCardData {
  // Token
  google.protobuf.StringValue token = 1;
}

// Represents card data where piece of data is itemized (and potentially tokenized)
message ItemizedCardData {
  // Card number
  google.protobuf.StringValue number = 1;
  // CVV
  google.protobuf.StringValue cvv = 2;
  // Expiration Month
  google.protobuf.Int32Value exp_month = 3;
  // Expiration Year
  google.protobuf.Int32Value exp_year = 4;
  // Billing Zip Code
  google.protobuf.StringValue zip = 5;
  // Card iin
  google.protobuf.StringValue iin = 6;
  // Card Last 4
  google.protobuf.StringValue last4 = 7;
  // Card address line 1
  google.protobuf.StringValue addressline1 = 8 [(data_classification.v1.data_classification).pii = true];
  // Card address line 2 (i.e. apartment etc.)
  google.protobuf.StringValue addressline2 = 9 [(data_classification.v1.data_classification).pii = true];
  // Card address city
  google.protobuf.StringValue city = 10 [(data_classification.v1.data_classification).pii = true];
  // Card address state
  google.protobuf.StringValue state = 11 [(data_classification.v1.data_classification).pii = true];
}

// Provider SDK parameters
message ProviderSdkConfig {
  // Environment for SDK
  google.protobuf.StringValue environment = 1;
  // Public key for provider SDK
  google.protobuf.StringValue key = 2;
  // Country
  Country country = 3;
}

// address
// used by payout-related services to onboard dashers in third-party tools
message Address {
  // line 1
  google.protobuf.StringValue line1 = 1 [(data_classification.v1.data_classification).pii = true];
  // line 2
  google.protobuf.StringValue line2 = 2 [(data_classification.v1.data_classification).pii = true];
  // city
  google.protobuf.StringValue city = 3 [(data_classification.v1.data_classification).pii = true];
  // ISO-3166-2 subdivision code
  google.protobuf.StringValue region = 4 [(data_classification.v1.data_classification).pii = true];
  // country code
  google.protobuf.StringValue country_code = 5 [(data_classification.v1.data_classification).pii = true];
  // postal code
  google.protobuf.StringValue postal_code = 6 [(data_classification.v1.data_classification).pii = true];
}
