syntax = "proto3";

package doordash.payment.payin;

import "google/protobuf/any.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "payment/common.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.payment.payin.paymentmethod";

enum WalletType {
  _unknown_wallet_type = 0;
  google_pay = 1;
  apple_pay = 2;
  samsung_pay = 3;
  amex_express_checkout = 4;
  masterpass = 5;
  visa_checkout = 6;
  android_pay = 7;
}

message Wallet {
  WalletType type = 1;
  google.protobuf.StringValue dynamic_last4 = 2;
}

message CardChecks {
  google.protobuf.StringValue address_postal_code_check = 1;
  google.protobuf.StringValue address_line1_check = 2;
  google.protobuf.StringValue cvc_check = 3;
}

message Card {
  google.protobuf.StringValue last4 = 1;
  google.protobuf.StringValue exp_year = 2;
  google.protobuf.StringValue exp_month = 3;
  google.protobuf.StringValue fingerprint = 4;
  google.protobuf.BoolValue active = 5;
  google.protobuf.StringValue country = 6;
  google.protobuf.StringValue brand = 7;
  google.protobuf.StringValue iin = 8;
  Wallet wallet = 9;
  google.protobuf.StringValue funding_type = 10;
  google.protobuf.BoolValue is_scanned = 11;
  CardChecks checks = 12;
  google.protobuf.StringValue brand_product = 13;
  google.protobuf.BoolValue three_d_secure_supported = 14;
}

message Addresses {
  google.protobuf.StringValue postal_code = 1;
}

message BillingDetails {
  Addresses addresses = 1;
}

message PaymentGatewayProviderDetails {
  doordash.payment.common.PgpCode payment_provider = 1;
  google.protobuf.StringValue payment_method_id = 2;
  google.protobuf.StringValue customer_id = 3;
  // the corresponding pk of dd payment method detail entity.
  // as of 2021 Aug, this means str(PgpCard(StripeCard).id)
  google.protobuf.StringValue dd_pgp_entity_id = 4;
  // an optional fingerprint
  // - vended by a specific payment provider (Stripe, Braintree, ...)
  // - make a payment method uniquely identifiable within the same payment provider scope
  google.protobuf.StringValue fingerprint = 5;
}

/*
   Represents a set of fingerprints
   - vended by generic payment method tokenizers
   - these fingerprints are payment gateway agnostic
   - can be used to uniquely identify a payment method onboarded through corresponding tokenizer
*/
message GenericFingerprints {
  google.protobuf.StringValue vgs_fingerprint = 1;
}

message PayPalMethodDetails {
  google.protobuf.StringValue paypal_payer_id = 1;
  google.protobuf.StringValue paypal_account = 2;
}

message VenmoMethodDetails {
  google.protobuf.StringValue venmo_username = 1;
  google.protobuf.StringValue venmo_user_id = 2;
}

// payment method availability status enum
enum PaymentMethodAvailabilityStatus {
  // unknown
  PAYMENT_METHOD_AVAILABILITY_STATUS_UNSPECIFIED = 0;
  // status ok
  PAYMENT_METHOD_AVAILABILITY_STATUS_OK = 1;
  // status degraded
  PAYMENT_METHOD_AVAILABILITY_STATUS_DEGRADED = 2;
  // status down
  PAYMENT_METHOD_AVAILABILITY_STATUS_DOWN = 3;
}

// Payment method availability
message PaymentMethodAvailability {
  // payment method availability status
  PaymentMethodAvailabilityStatus payment_method_availability_status = 1;
}

/**
 * To introduce new PaymentMethodType in payment-service repo
 * (https://github.com/doordash/payment-service/blob/master/app/payin/core/payment_method/types.py#L118)
 * we need to first introduce it here and sync it to payment-service like
 * https://github.com/doordash/payment-service/pull/5781
 *
 * To make the new payment method type visible to payin-platform repo, update
 *   enum PaymentMethodType in payment_method_v1.proto
 *
 * To make the new payment method type visible to payin-billing repo, update
 *   enum PaymentMethodType in payment_method_bs_v1.proto
 *
 * To make the new payment method type visible to users of common/payin, update
 *   enum PaymentMethodType in common/payin.proto
 */
enum PaymentMethodType {
  _unknown_payment_method_type = 0;
  CARD = 1;
  PAYPAL = 2;
  VENMO = 3;
  AFTERPAY = 4;
  APPLE_PAY = 5;
  GOOGLE_PAY = 6;
  EBT = 7;
  CASHAPP = 8;
  HSA_FSA = 9;
  KLARNA = 10;
}

// tag types that the payer can set on their payment methods
enum PaymentMethodTagType {
  // unknown
  PAYMENT_METHOD_TAG_TYPE_UNSPECIFIED = 0;
  // business payment method tag
  PAYMENT_METHOD_TAG_TYPE_BUSINESS = 1;
}
