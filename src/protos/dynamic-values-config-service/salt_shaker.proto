syntax = "proto3";
package doordash.decisions.v1;

import "dynamic-values-config-service/dynamic-values-configuration-service.proto";
import "google/protobuf/wrappers.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.decisions.v1";

// Service for producing salts that are distributed evenly across important strata
service SaltShakerService {
  // start a salt shake
  rpc Shake(ShakeRequest) returns (ShakeResponse);

  // start a salt shake v2
  rpc ShakeV2(ShakeV2Request) returns (stream ShakeV2Response);
}

// A specific variant and its allocation
message Variant {
  // Name of the variant (treatment/control/etc)
  string name = 1;
  // Value returned for the variant (could be just treatment/control, could be other values)
  string value = 2;
  // percentage of entities that get this variant
  int32 allocation = 3;
}

// Request to start salt shaker. Shaker may take minutes to run
message ShakeRequest {
  // name of the DV
  string dv_name = 1;
  // Key for the csv data source for the IDs to bucket on
  string csv_file_key = 2;
  // An optional string to add in front of salts. Only used if there is a problem with the default result
  google.protobuf.StringValue extra_salt_string = 3;
  // Variant buckets
  repeated Variant variants = 4;
}

// Captures completed Shake job
message ShakeResponse {
  // salt for this rollout (currently only 100%)
  string rollout_salt = 1;
  // salt for this variant
  string variant_salt = 2;
  // where the salts will be uploaded to
  string output_file_location = 3;
}

// Request to start salt shaker
message ShakeV2Request {
  // The experiment configuration
  ExperimentConfiguration experiment = 1;

  // The name of the distribution to balance
  string distribution = 2;

  // The dimensions to randomization across
  repeated string dimensions = 3;

  // Key for the csv data source for the IDs to bucket on
  string csv_file_key = 4;

  // How long to check for solutions
  int32 compute_duration_seconds = 5;

  // # of iterations
  int64 total_iterations = 6;

  // The starting iteration
  int64 starting_iteration = 7;

  // If enabled description will be more verbose
  bool verbose = 8;
}

// Captures completed Shake job V2
message ShakeV2Response {
  // Salt for this rollout (currently only 100%)
  string rollout_salt = 1;

  // Salt for this variant
  string variant_salt = 2;

  // Time elapsed in seconds
  int32 elapsed_seconds = 3;

  // The minimum error found
  double error = 4;

  // How many iterations were performed
  int64 iterations = 5;

  // Where the salts will be uploaded to
  string output_file_location = 6;

  // A description of what happened
  string description = 7;
}
