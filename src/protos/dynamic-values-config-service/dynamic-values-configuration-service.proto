syntax = "proto3";
package doordash.decisions.v1;

import "doordash.api/annotations.proto";
import "doordash.api/field_validate.proto";
import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_outer_classname = "DynamicValueConfigurationApi";
option java_package = "com.doordash.rpc.decisions.v1";

service DynamicValueConfigurationService {
  option (doordash.api.service) = {
    name: "dynamic-values-config-service-web"
    port: 50051
    name_spaces: ["decision-systems"]
    api_key_name: "DYNAMIC_VALUES_CONFIG_SERVICE_API_KEY"
    owner: {
      id: "dynamic-values-alerts"
      name: "app-decision-systems"
      slack_channel: "#team-decision-systems"
      email_alias: "team-decision-systems@doordash.com"
    }
    target_products: [INTERNAL]
  };

  rpc GetService(GetServiceRequest) returns (GetServiceResponse);
  rpc ListServices(ListServicesRequest) returns (ListServicesResponse);
  rpc CreateService(CreateServiceRequest) returns (CreateServiceResponse);
  rpc UpdateService(UpdateServiceRequest) returns (UpdateServiceResponse);
  rpc GetServicePermissions(GetServicePermissionsRequest) returns (GetServicePermissionsResponse);
  rpc ListAvailableServices(ListAvailableServicesRequest) returns (ListAvailableServicesResponse);
  rpc ListServiceContexts(ListServiceContextsRequest) returns (ListServiceContextsResponse);
  rpc CreateServiceContext(CreateServiceContextRequest) returns (CreateServiceContextResponse);
  rpc UpdateServiceContext(UpdateServiceContextRequest) returns (UpdateServiceContextResponse);
  rpc DeleteServiceContext(DeleteServiceContextRequest) returns (DeleteServiceContextResponse);

  rpc GetDynamicValue(GetDynamicValueRequest) returns (GetDynamicValueResponse) {
    option (google.api.http) = {get: "/decision-systems/v1/dvcs/dynamic-values/{id}"};

    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: DEV
      authorization: [DD_EMPLOYEE]
      authentication_config: {enable_okta_verification: true}
    };
  }
  rpc ListDynamicValues(ListDynamicValuesRequest) returns (ListDynamicValuesResponse) {
    option (google.api.http) = {
      post: "/decision-systems/v1/dvcs/dynamic-values",
      body: "*"
    };

    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: DEV
      authorization: [DD_EMPLOYEE]
      authentication_config: {enable_okta_verification: true}
    };
  }
  rpc ReviewDynamicValue(ReviewDynamicValueRequest) returns (ReviewDynamicValueResponse) {
    option (google.api.http) = {
      post: "/decision-systems/v1/dvcs/dynamic-values/{id}/review",
      body: "*"
    };

    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: DEV
      authorization: [DD_EMPLOYEE]
      authentication_config: {enable_okta_verification: true}
    };
  }

  // `PublishDynamicValue` pushes the most recent version of the dynamic value into
  // `config-distribution-service` so it can be replicated to all pods in the cluster.
  rpc PublishDynamicValue(PublishDynamicValueRequest) returns (PublishDynamicValueResponse);

  rpc ArchiveDynamicValue(ArchiveDynamicValueRequest) returns (ArchiveDynamicValueResponse) {
    option (google.api.http) = {
      post: "/decision-systems/v1/dvcs/dynamic-values/{id}/archive",
      body: "*"
    };

    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: DEV
      authorization: [DD_EMPLOYEE]
      authentication_config: {enable_okta_verification: true}
    };
  }
  rpc RetireDynamicValue(RetireDynamicValueRequest) returns (RetireDynamicValueResponse) {
    option (google.api.http) = {
      post: "/decision-systems/v1/dvcs/dynamic-values/{id}/retire",
      body: "*"
    };

    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: DEV
      authorization: [DD_EMPLOYEE]
      authentication_config: {enable_okta_verification: true}
    };
  }
  rpc ValidateDynamicValue(ValidateDynamicValueRequest) returns (ValidateDynamicValueResponse) {
    option (google.api.http) = {
      post: "/decision-systems/v1/dvcs/validate/dynamic-value",
      body: "*"
    };

    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: DEV
      authorization: [DD_EMPLOYEE]
      authentication_config: {enable_okta_verification: true}
    };
  }
  rpc GetDynamicValueChanges(GetDynamicValueChangesRequest) returns (GetDynamicValueChangesResponse) {
    option (google.api.http) = {get: "/decision-systems/v1/dvcs/dynamic-values/{id}/changes"};

    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: DEV
      authorization: [DD_EMPLOYEE]
      authentication_config: {enable_okta_verification: true}
    };
  }
  rpc GetDynamicValueRollouts(GetDynamicValueRolloutsRequest) returns (GetDynamicValueRolloutsResponse) {
    option (google.api.http) = {get: "/decision-systems/v1/dvcs/dynamic-values/{id}/rollouts"};

    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: DEV
      authorization: [DD_EMPLOYEE]
      authentication_config: {enable_okta_verification: true}
    };
  }
  rpc GetDynamicValueVersions(GetDynamicValueVersionsRequest) returns (GetDynamicValueVersionsResponse) {
    option (google.api.http) = {get: "/decision-systems/v1/dvcs/dynamic-values/{id}/versions"};

    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: DEV
      authorization: [DD_EMPLOYEE]
      authentication_config: {enable_okta_verification: true}
    };
  }
  rpc GetDynamicValuePermissions(GetDynamicValuePermissionsRequest) returns (GetDynamicValuePermissionsResponse) {
    option (google.api.http) = {get: "/decision-systems/v1/dvcs/dynamic-values/{id}/permissions"};

    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: DEV
      authorization: [DD_EMPLOYEE]
      authentication_config: {enable_okta_verification: true}
    };
  }
  rpc GetDynamicValueApprovers(GetDynamicValueApproversRequest) returns (GetDynamicValueApproversResponse) {
    option (google.api.http) = {get: "/decision-systems/v1/dvcs/dynamic-values/approvers"};

    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: DEV
      authorization: [DD_EMPLOYEE]
      authentication_config: {enable_okta_verification: true}
    };
  }

  // `GetDynamicValueFilters` returns the filters that can be applied when calling `ListDynamicValues`.
  rpc GetDynamicValueFilters(GetDynamicValueFiltersRequest) returns (GetDynamicValueFiltersResponse) {
    option (google.api.http) = {get: "/decision-systems/v1/dvcs/dynamic-values/filters"};

    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: DEV
      authorization: [DD_EMPLOYEE]
      authentication_config: {enable_okta_verification: true}
    };
  }

  // `EvaluateDynamicValue` uses the Evaluation Simulator to evaluate the dynamic value
  // with the given configuration context and segment configuration.
  rpc EvaluateDynamicValue(EvaluateDynamicValueRequest) returns (EvaluateDynamicValueResponse) {
    option (google.api.http) = {
      post: "/decision-systems/v1/dvcs/dynamic-values/{id}/evaluate",
      body: "*"
    };

    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: DEV
      authorization: [DD_EMPLOYEE]
      authentication_config: {enable_okta_verification: true}
    };
  }

  // `GetEvaluationComponents` returns the context and segment configuration for the given
  // dynamic value. The values are used as the Evaluation Simulator default values.
  rpc GetEvaluationComponents(GetEvaluationComponentsRequest) returns (GetEvaluationComponentsResponse);

  rpc CreateExperiment(CreateExperimentRequest) returns (CreateExperimentResponse) {
    option (google.api.http) = {
      post: "/decision-systems/v1/dvcs/experiments",
      body: "*"
    };

    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: DEV
      authorization: [DD_EMPLOYEE]
      authentication_config: {enable_okta_verification: true}
    };
  }
  rpc UpdateExperiment(UpdateExperimentRequest) returns (UpdateExperimentResponse) {
    option (google.api.http) = {
      post: "/decision-systems/v1/dvcs/experiments/{id}",
      body: "*"
    };

    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: DEV
      authorization: [DD_EMPLOYEE]
      authentication_config: {enable_okta_verification: true}
    };
  }
  rpc RolloutExperiment(RolloutExperimentRequest) returns (RolloutExperimentResponse) {
    option (google.api.http) = {
      post: "/decision-systems/v1/dvcs/experiments/{id}/rollout",
      body: "*"
    };

    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: DEV
      authorization: [DD_EMPLOYEE]
      authentication_config: {enable_okta_verification: true}
    };
  }
  rpc ValidateExperiment(ValidateExperimentRequest) returns (ValidateExperimentResponse) {
    option (google.api.http) = {
      post: "/decision-systems/v1/dvcs/validate/experiment",
      body: "*"
    };

    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: DEV
      authorization: [DD_EMPLOYEE]
      authentication_config: {enable_okta_verification: true}
    };
  }
  rpc GetExperimentComponents(GetExperimentComponentsRequest) returns (GetExperimentComponentsResponse) {
    option (google.api.http) = {get: "/decision-systems/v1/dvcs/experiments/{id}/components"};

    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: DEV
      authorization: [DD_EMPLOYEE]
      authentication_config: {enable_okta_verification: true}
    };
  }
  rpc RevertDynamicValueCurrentVersion(RevertDynamicValueCurrentVersionRequest) returns (RevertDynamicValueCurrentVersionResponse) {
    option (google.api.http) = {
      post: "/decision-systems/v1/dvcs/experiments/{id}/revert",
      body: "*"
    };

    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: DEV
      authorization: [DD_EMPLOYEE]
      authentication_config: {enable_okta_verification: true}
    };
  }

  // Legacy Feature Flags
  rpc CreateFeatureFlag(CreateFeatureFlagRequest) returns (CreateFeatureFlagResponse);
  rpc UpdateFeatureFlag(UpdateFeatureFlagRequest) returns (UpdateFeatureFlagResponse);
  rpc RolloutFeatureFlag(RolloutFeatureFlagRequest) returns (RolloutFeatureFlagResponse);
  rpc ValidateFeatureFlag(ValidateFeatureFlagRequest) returns (ValidateFeatureFlagResponse);
  rpc GetFeatureFlagComponents(GetFeatureFlagComponentsRequest) returns (GetFeatureFlagComponentsResponse);
  rpc MigrateFeatureFlag(MigrateFeatureFlagRequest) returns (MigrateFeatureFlagResponse);

  // Modern Feature Flags
  rpc UpdateFeatureFlagValue(UpdateFeatureFlagValueRequest) returns (UpdateFeatureFlagValueResponse);

  // Bulk Updating
  rpc MutateDynamicValues(MutateDynamicValuesRequest) returns (MutateDynamicValuesResponse);

  rpc GetUserPermissions(GetUserPermissionsRequest) returns (GetUserPermissionsResponse) {
    option (google.api.http) = {get: "/decision-systems/v1/dvcs/user/permissions"};

    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: DEV
      authorization: [DD_EMPLOYEE]
      authentication_config: {enable_okta_verification: true}
    };
  }

  rpc CreateCurieExperimentFromDynamicValue(CreateCurieExperimentFromDynamicValueRequest) returns (CreateCurieExperimentFromDynamicValueResponse);
  rpc SubmitReviewForDraftDynamicValue(SubmitReviewForDraftDynamicValueRequest) returns (SubmitReviewForDraftDynamicValueResponse) {
    option (google.api.http) = {
      post: "/decision-systems/v1/dvcs/dynamic-values/{dynamic_value_id}/submit-review",
      body: "*"
    };

    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: DEV
      authorization: [DD_EMPLOYEE]
      authentication_config: {enable_okta_verification: true}
    };
  }

  // Return the guardrail health for the specified dynamic value.
  rpc GetGuardrailHealth(GetGuardrailHealthRequest) returns (GetGuardrailHealthResponse) {
    option (google.api.http) = {get: "/decision-systems/v1/dvcs/dynamic-values/{id}/guardrail-health"};

    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: DEV
      authorization: [DD_EMPLOYEE]
      authentication_config: {enable_okta_verification: true}
    };
  }

  // Return the list of guardrail metrics that are being monitored for the specified dynamic value.
  rpc GetGuardrailConfiguration(GetGuardrailConfigurationRequest) returns (GetGuardrailConfigurationResponse) {
    option (google.api.http) = {get: "/decision-systems/v1/dvcs/dynamic-values/guardrail-configuration"};

    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: DEV
      authorization: [DD_EMPLOYEE]
      authentication_config: {enable_okta_verification: true}
    };
  }

  // `GetDynamicValueHealthChecks` returns the health checks for the specified dynamic value.
  rpc GetDynamicValueHealthChecks(GetDynamicValueHealthChecksRequest) returns (GetDynamicValueHealthChecksResponse) {
    option (google.api.http) = {get: "/decision-systems/v1/dvcs/dynamic-values/{id}/health-checks"};

    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: DEV
      authorization: [DD_EMPLOYEE]
      authentication_config: {enable_okta_verification: true}
    };
  }

  // `GetStaleDynamicValues` returns the list of stale DV ids for the specified owners.
  rpc GetStaleDynamicValues(GetStaleDynamicValuesRequest) returns (GetStaleDynamicValuesResponse) {
    option (google.api.http) = {get: "/decision-systems/v1/dvcs/dynamic-values/stale"};

    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: DEV
      authorization: [DD_EMPLOYEE]
      authentication_config: {enable_okta_verification: true}
    };
  }
}

message User {
  google.protobuf.StringValue name = 1;
  google.protobuf.StringValue email = 2;
}

message Team {
  string id = 1;
  google.protobuf.StringValue name = 2;
}

message Member {
  google.protobuf.StringValue name = 1;
  google.protobuf.StringValue role = 2;
  google.protobuf.StringValue email = 3;
}

// Namespace feature
enum NamespaceFeature {
  // Unknown feature
  NAMESPACE_FEATURE_UNSPECIFIED = 0;

  // Create feature flags
  NAMESPACE_FEATURE_CREATE_FEATURE_FLAG = 1;

  // View evaluations
  NAMESPACE_FEATURE_VIEW_EVALUATIONS = 2;

  // Add references
  NAMESPACE_FEATURE_ADD_REFERENCES = 3;
}

message Service {
  string id = 1;
  google.protobuf.StringValue name = 2;
  User owner = 3;
  google.protobuf.Timestamp created_at = 4;
  google.protobuf.Timestamp updated_at = 5;

  // This field will only be returned as part of the GetService API.
  repeated Member members = 6;

  // DevConsole asset name
  google.protobuf.StringValue asset = 7;

  // Service description
  google.protobuf.StringValue description = 8;
  google.protobuf.StringValue sdk_version = 9;
  repeated NamespaceFeature blocked_features = 10;
  bool is_retirable = 11;
}

message ServiceContext {
  string id = 1;
  google.protobuf.StringValue name = 2;
  google.protobuf.StringValue type = 3;
  google.protobuf.BoolValue is_bucket_key = 4;
}

message ServiceContextConfiguration {
  string service_id = 1;
  google.protobuf.StringValue name = 2;
  google.protobuf.StringValue type = 3;
  google.protobuf.BoolValue is_bucket_key = 4;
}

message DynamicValue {
  reserved 5, 12, 15;
  reserved "disabled_at", "concluded_at";

  message Variant {
    google.protobuf.StringValue name = 1;
    google.protobuf.StringValue value = 2;
  }

  message Service {
    string id = 1;
    google.protobuf.StringValue name = 2;
  }

  message Property {
    google.protobuf.StringValue name = 1;
    google.protobuf.StringValue type = 2;
    google.protobuf.BoolValue is_transitive = 3;
  }

  message Reference {
    enum Type {
      TYPE_UNKNOWN = 0;
      TYPE_INCOMING = 1;
      TYPE_OUTGOING = 2;
    }
    string id = 1;
    google.protobuf.StringValue name = 2;
    Type type = 3;

    // The variant names that are checked when this DV is referenced
    repeated string variants = 4;

    google.protobuf.BoolValue is_transitive = 5;
  }

  // Curie experiment details
  message Experiment {
    // The experiment ID
    string id = 1;

    // The experiment name
    string name = 2;
  }

  string id = 1;
  google.protobuf.StringValue name = 2;
  google.protobuf.StringValue type = 3;
  google.protobuf.StringValue description = 4;
  User owner = 6;
  google.protobuf.Timestamp created_at = 7;
  google.protobuf.Timestamp updated_at = 8;
  google.protobuf.Timestamp archived_at = 9;
  google.protobuf.BoolValue has_current_version = 10;
  google.protobuf.BoolValue has_pending_version = 11;

  repeated Variant variants = 13;
  ExperimentLoggingOptions options = 14;
  repeated Service services = 16;
  repeated Property properties = 17;
  repeated google.protobuf.StringValue curie_experiment_ids = 18 [deprecated = true];
  repeated Reference references = 19;
  google.protobuf.StringValue lifecycle_state = 20;

  // Dynamic value subtype
  google.protobuf.StringValue subtype = 21;

  // True if this is a template
  google.protobuf.BoolValue is_template = 22;

  // List of experiments that reference this dynamic value
  repeated Experiment experiments = 23;
}

// Evaluation Simulator configuration
message EvaluationConfiguration {
  // Segment configuration
  message Segment {
    // Segment name
    google.protobuf.StringValue name = 1;

    // Segment rollout percentage
    google.protobuf.DoubleValue rollout_percentage = 2;

    // Is the segment enabled?
    google.protobuf.BoolValue is_enabled = 3;
  }

  // Property configuration
  message Property {
    // The property name
    google.protobuf.StringValue name = 1;

    // The property type
    google.protobuf.StringValue type = 2;

    // The property value
    google.protobuf.StringValue value = 3;

    // Is the property enabled?
    google.protobuf.BoolValue is_enabled = 4;
  }

  // Reference configuration
  message Reference {
    // The reference name
    google.protobuf.StringValue name = 1;

    // The reference value
    google.protobuf.StringValue value = 3;

    // List of possible values for the reference
    repeated google.protobuf.StringValue variants = 4;
  }

  // List of segments
  repeated Segment segments = 1;

  // List of properties
  repeated Property properties = 2;

  // List of references
  repeated Reference references = 3;
}

// Evaluation Simulator result
message EvaluationResult {
  // The result value
  google.protobuf.StringValue value = 1;

  // The result variant
  google.protobuf.StringValue variant = 2;

  // The result segment
  google.protobuf.StringValue segment = 3;

  // The resolution log
  google.protobuf.StringValue resolution_log = 4;
}

message ExperimentLoggingOptions {
  google.protobuf.BoolValue log_rollout_included = 1;
  google.protobuf.BoolValue log_rollout_excluded = 2;
  google.protobuf.BoolValue log_unmatched_segment = 3;
  google.protobuf.DoubleValue exposure_log_sample_rate = 4;
  google.protobuf.BoolValue resolution_log_enable = 5;
  google.protobuf.DoubleValue resolution_log_sample_rate = 6;
  google.protobuf.BoolValue log_when_referenced = 7;
  google.protobuf.BoolValue exposure_log_dedupe_enabled = 8;
}

message DynamicValueVersion {
  User author = 1;
  google.protobuf.StringValue configuration = 2;
}

message DynamicValueChanges {
  DynamicValue value = 1;
  DynamicValueVersion current_version = 2;
  DynamicValueVersion pending_version = 3;
}

message DynamicValuePermissions {
  reserved 3;
  google.protobuf.BoolValue can_view = 1;
  google.protobuf.BoolValue can_update = 2;
  google.protobuf.BoolValue can_rollout = 4;
  google.protobuf.BoolValue can_review_accept = 5;
  google.protobuf.BoolValue can_review_reject = 6;
  repeated google.protobuf.StringValue next_lifecycle_states = 7;
  google.protobuf.BoolValue can_archive = 8;
  google.protobuf.BoolValue can_retire = 9;
}

// Filters that can be applied when calling `ListDynamicValues`
message DynamicValueFilter {
  enum Field {
    // Unknown field
    FIELD_UNSPECIFIED = 0;

    // Filter by namespace
    FIELD_TEAM = 1;

    // Filter by owner
    FIELD_OWNER = 2;

    // Filter by archived state
    FIELD_SHOW_ARCHIVED = 3;

    // Filter by subtype
    FIELD_SUBTYPE = 4;

    // Filter by lifecycle state
    FIELD_LIFECYCLE_STATE = 5;

    // Filter by template flag
    FIELD_IS_TEMPLATE = 6;

    // Filter by retired state
    FIELD_SHOW_RETIRED = 7;
  }

  message Value {
    // Filter value label
    google.protobuf.StringValue label = 1;

    // Filter value value
    google.protobuf.StringValue value = 2;
  }

  // The field to filter on
  Field field = 1;

  // The possible values for the field
  repeated Value values = 2;
}

message History {
  string id = 1;
  User author = 2;
  google.protobuf.StringValue status = 3;
  google.protobuf.StringValue version = 4;
  google.protobuf.StringValue description = 5;
  google.protobuf.Timestamp created_at = 6;
  google.protobuf.Timestamp updated_at = 7;
  User reviewer = 8;
}

message SegmentRollout {
  reserved 4;
  message CurrentDistribution {
    google.protobuf.StringValue variant_name = 1;
    google.protobuf.StringValue variant_value = 2;
    google.protobuf.DoubleValue distribution_percentage = 3;
    google.protobuf.DoubleValue allocation_percentage = 4;
  }

  google.protobuf.StringValue name = 1;
  google.protobuf.StringValue type = 2;
  google.protobuf.BoolValue is_disabled = 3;
  google.protobuf.BoolValue can_rollout = 5;
  google.protobuf.BoolValue can_rollback = 6;
  google.protobuf.DoubleValue percentage = 7;
  repeated CurrentDistribution distributions = 8;
}

message ValidationMessage {
  enum Severity {
    SEVERITY_UNSPECIFIED = 0;
    SEVERITY_WARNING = 1;
    SEVERITY_ERROR = 2;
  }

  Severity severity = 1;
  google.protobuf.StringValue message = 2;

  // Example: segment
  string source = 3;

  // Example: global
  string target = 4;

  // Location for more information
  string link = 5;
}

message Pagination {
  int32 page_size = 1;
  int32 page_number = 2;
  int32 total_pages = 3;
  int32 total_items = 4;
}

message ExperimentConfiguration {
  reserved 6;

  // Owner information
  message Owner {
    // Owner name
    string name = 1;

    // Owner email
    string email = 2;
  }

  message Details {
    reserved 2;
    google.protobuf.StringValue name = 1;
    google.protobuf.StringValue bucket_key = 3;
    google.protobuf.StringValue return_type = 4;
    google.protobuf.StringValue description = 5;
    google.protobuf.StringValue analysis_version = 6;
    google.protobuf.StringValue revision_version = 7;
    google.protobuf.StringValue vertical = 8;
    google.protobuf.Timestamp start_at = 9;
    google.protobuf.Timestamp finish_at = 10;
    google.protobuf.StringValue subtype = 11;
    google.protobuf.StringValue object_return_type = 12;
    google.protobuf.StringValue object_return_schema = 13;
    google.protobuf.StringValue variant_salt = 14;
    google.protobuf.StringValue rollout_salt = 15;
    google.protobuf.StringValue lifecycle_state = 16;
    google.protobuf.BoolValue is_template = 17;

    // When was the experiment created?
    google.protobuf.Timestamp created_at = 18;

    // When was the experiment last updated?
    google.protobuf.Timestamp updated_at = 19;

    // The experiment ID
    google.protobuf.StringValue id = 20;
  }

  message Rule {
    google.protobuf.StringValue node = 1;
    google.protobuf.StringValue type = 2;
    google.protobuf.StringValue value = 3;
    google.protobuf.StringValue property = 4;
    google.protobuf.StringValue operator = 5;
    google.protobuf.StringValue property_type = 6;
  }

  enum Match {
    MATCH_UNKNOWN = 0;
    MATCH_ALL = 1;
    MATCH_ANY = 2;
  }

  message RuleGroup {
    // Match type
    Match match = 1;

    // List of rules
    repeated Rule rules = 2;
  }

  message NestedRuleGroup {
    // Match type
    Match match = 1;

    // List of nested rules
    repeated RuleGroup groups = 2;
  }

  message Service {
    google.protobuf.StringValue id = 1;
    google.protobuf.StringValue name = 2;
  }

  message Variant {
    google.protobuf.StringValue name = 1;
    google.protobuf.StringValue value = 2;
  }

  message Segment {
    reserved 2, 3, 6, 8, 9, 11;
    google.protobuf.StringValue name = 1;
    google.protobuf.StringValue rollout_percentage = 4;
    google.protobuf.StringValue distribution = 5;
    google.protobuf.StringValue type = 7;
    google.protobuf.BoolValue disabled = 10;

    // Segment rules
    NestedRuleGroup criteria = 12;

    // Fallback pointing to what variant to use in case of segment match but out-of-rollout. If null control is injected
    google.protobuf.StringValue fallback = 13;

    // Randomization string used with a newer randomizer. Does not affect existing experiments using the legacy system
    google.protobuf.StringValue salt = 14;

    // If false exposures will not be sent for context matching this segment
    google.protobuf.BoolValue exposures_enabled = 15;
  }

  message Allocation {
    google.protobuf.StringValue name = 1;
    google.protobuf.StringValue allocation = 2;
  }

  message Distribution {
    google.protobuf.StringValue name = 1;
    repeated Allocation allocations = 2;
  }

  message Approver {
    google.protobuf.StringValue name = 1;
    google.protobuf.StringValue email = 2;
  }

  message Switchback {
    reserved 5, 6;
    reserved "rollout_includes_time", "rollout_includes_context";
    google.protobuf.Int64Value window_width_seconds = 1;
    google.protobuf.Int32Value mirror_windows = 2;
    google.protobuf.BoolValue pairing_enabled = 3;
    google.protobuf.BoolValue mirroring_enabled = 4;
    google.protobuf.BoolValue copying_enabled = 7;
  }

  // Deprecated
  message StickyAssignment {
    // Are sticky assignments enabled?
    google.protobuf.BoolValue enabled = 1;

    // Sticky assignment cache keys
    repeated google.protobuf.StringValue cache_keys = 2;

    // Sticky assignment cache time-to-live (seconds)
    google.protobuf.Int64Value cache_ttl_seconds = 3;
  }

  // Exposure logging configuration options
  message LoggingOptions {
    // Should we log when included in rollout?
    google.protobuf.BoolValue log_rollout_included = 1;

    // Should we log when excluded from rollout?
    google.protobuf.BoolValue log_rollout_excluded = 2;

    // Should we log when the segment does not match?
    google.protobuf.BoolValue log_unmatched_segment = 3;

    // Exposure log sample rate
    google.protobuf.DoubleValue exposure_log_sample_rate = 4;

    // Should we enable the resolution log?
    google.protobuf.BoolValue resolution_log_enable = 5;

    // Resolution log sample rate
    google.protobuf.DoubleValue resolution_log_sample_rate = 6;

    // Should we log when this DV is referenced?
    google.protobuf.BoolValue log_when_referenced = 7;

    // Should exposure logs be de-duped
    google.protobuf.BoolValue exposure_log_dedupe_enabled = 8;
  }

  // Rollout configuration options
  message RolloutOptions {
    // Should we enable automated rollouts?
    google.protobuf.BoolValue enable_automated_rollouts = 1;
  }

  Details details = 1;
  Variant control = 2;
  repeated Segment segments = 3;
  repeated Variant treatments = 4;
  repeated Distribution distributions = 5;
  repeated Service services = 7;
  repeated Approver approvers = 8;
  Switchback switchback = 9;
  StickyAssignment assignment = 10 [deprecated = true];
  LoggingOptions logging = 11;

  // Rollout configuration options
  RolloutOptions rollout_options = 12;

  // Owner information
  Owner owner = 13;
}

message FeatureFlagConfiguration {
  reserved 5;

  message Details {
    reserved 3, 11;
    google.protobuf.StringValue name = 1;
    google.protobuf.StringValue description = 4;
    google.protobuf.StringValue return_type = 5;
    google.protobuf.StringValue return_value = 6 [deprecated = true];
    google.protobuf.StringValue analysis_version = 7;
    google.protobuf.StringValue revision_version = 8;
    google.protobuf.StringValue match_type = 9;
    google.protobuf.StringValue rollout_type = 10;
    google.protobuf.StringValue rollout_percentage = 12;
    google.protobuf.StringValue curr_return_value = 13;
    google.protobuf.StringValue next_return_value = 14;
    google.protobuf.StringValue object_return_type = 15;
    google.protobuf.StringValue object_return_schema = 16;
  }

  message Service {
    google.protobuf.StringValue id = 1;
    google.protobuf.StringValue name = 2;
  }

  message Rule {
    google.protobuf.StringValue node = 1;
    google.protobuf.StringValue type = 2;
    google.protobuf.StringValue value = 3;
    google.protobuf.StringValue property = 4;
    google.protobuf.StringValue operator = 5;
  }

  message Approver {
    google.protobuf.StringValue name = 1;
    google.protobuf.StringValue email = 2;
  }

  Details details = 1;
  repeated Rule rules = 2;
  repeated Service services = 3;
  repeated Approver approvers = 4;
}

message ServiceConfiguration {
  message Owner {
    google.protobuf.StringValue name = 1;
    google.protobuf.StringValue email = 2;
  }

  message Member {
    google.protobuf.StringValue name = 1;
    google.protobuf.StringValue email = 2;
    google.protobuf.StringValue role = 3;
  }

  google.protobuf.StringValue name = 1;
  Owner owner = 2;
  repeated Member members = 3;

  // DevConsole asset name
  google.protobuf.StringValue asset = 4;

  // Service description
  google.protobuf.StringValue description = 5;

  // Is retirable
  bool is_retirable = 6;
}

message ServicePermissions {
  google.protobuf.BoolValue can_view = 1;
  google.protobuf.BoolValue can_update = 2;
  google.protobuf.BoolValue can_create_property = 3;
  google.protobuf.BoolValue can_update_property = 4;
  google.protobuf.BoolValue can_delete_property = 5;
}

message UserPermissions {
  google.protobuf.BoolValue can_create_service = 1;
}

message GetUserPermissionsRequest {}

message GetUserPermissionsResponse {
  UserPermissions permissions = 1;
}

message GetServiceRequest {
  string id = 1;
}

message GetServiceResponse {
  Service service = 1;
}

// Request proto for `ListServices`
message ListServicesRequest {
  // Fields that can be filtered
  enum Field {
    // Unspecified field
    FIELD_UNSPECIFIED = 0;

    // Service name
    FIELD_NAME = 1;

    // Service asset
    FIELD_ASSET = 2;

    // Service ID
    FIELD_ID = 3;
  }

  // Service filter message
  message Filter {
    // The field to filter on
    Field field = 1;

    // The value to filter for
    string value = 2;
  }

  // List of filters to apply
  repeated Filter filters = 1;

  // The page to fetch
  google.protobuf.Int32Value page = 2;

  // The number of results per-page
  google.protobuf.Int32Value size = 3;
}

// Response proto for `ListServices`
message ListServicesResponse {
  // Pagination details
  Pagination pagination = 1;

  // List of services that matched the filters
  repeated Service services = 2;
}

message CreateServiceRequest {
  ServiceConfiguration service = 1;
}

message CreateServiceResponse {
  Service service = 1;
}

message UpdateServiceRequest {
  string id = 1;
  ServiceConfiguration service = 2;
}

message UpdateServiceResponse {
  Service service = 1;
}

message GetServicePermissionsRequest {
  string id = 1;
}

message GetServicePermissionsResponse {
  ServicePermissions permissions = 1;
}

message ListAvailableServicesRequest {}

message ListAvailableServicesResponse {
  repeated Service services = 1;
}

message GetDynamicValueRequest {
  // Identifier type
  enum Identifier {
    // Identifier unspecified
    IDENTIFIER_UNSPECIFIED = 0;

    // Identifier is an ID
    IDENTIFIER_ID = 1;

    // Identifier is a name
    IDENTIFIER_NAME = 2;
  }

  string id = 1;

  // Identifier type
  Identifier identifier = 2;
}

message GetDynamicValueResponse {
  DynamicValue value = 1;
}

// Request proto for `ListDynamicValues`
message ListDynamicValuesRequest {
  // Filterable fields
  enum Field {
    // Unspecified field
    FIELD_UNSPECIFIED = 0;

    // Dynamic value name
    FIELD_NAME = 1;

    // Dynamic value namespace ID
    FIELD_TEAM = 2;

    // Dynamic value owner (email)
    FIELD_OWNER = 3;

    // True if we should show archived values
    FIELD_SHOW_ARCHIVED = 4;

    // Dynamic value type
    FIELD_TYPE = 5;

    // Dynamic value subtype
    FIELD_SUBTYPE = 6;

    // Dynamic value ID
    FIELD_ID = 7;

    // Lifecycle state
    FIELD_LIFECYCLE_STATE = 8;

    // Template flag
    FIELD_IS_TEMPLATE = 9;

    // True if we should show retired values
    FIELD_SHOW_RETIRED = 10;

    // Range start for created at
    FIELD_CREATED_AT_START = 11;

    // Range end for created at
    FIELD_CREATED_AT_END = 12;

    // Range start for updated at
    FIELD_UPDATED_AT_START = 13;

    // Range end for updated at
    FIELD_UPDATED_AT_END = 14;
  }

  enum Order {
    // Unknown order
    ORDER_UNKNOWN = 0;

    // Order by name
    ORDER_NAME = 1;

    // Order by subtype
    ORDER_SUBTYPE = 2;

    // Order by lifecycle state
    ORDER_LIFECYCLE_STATE = 3;

    // Order by owner
    ORDER_OWNER = 4;

    // Order by created at
    ORDER_CREATED_AT = 5;

    // Order by updated at
    ORDER_UPDATED_AT = 6;
  }

  enum Direction {
    DIRECTION_UNKNOWN = 0;
    DIRECTION_ASCENDING = 1;
    DIRECTION_DESCENDING = 2;
  }

  // Filter configuration
  message Filter {
    // Field value
    Field field = 1;

    // Filter value
    string value = 2;

    // True if this is an exact match
    bool is_exact_match = 3;
  }

  // List of filters
  repeated Filter filters = 1;

  // Page number
  google.protobuf.Int32Value page = 2;

  // Number of items per-page
  google.protobuf.Int32Value size = 3;

  Order order = 4;

  Direction direction = 5;
}

// Response proto for `ListDynamicValues`
message ListDynamicValuesResponse {
  // Pagination information
  Pagination pagination = 1;

  // List of matching Dynamic Values
  repeated DynamicValue values = 2;
}

message CreateExperimentRequest {
  // The experiment configuration
  ExperimentConfiguration experiment = 1;

  // The commit message
  google.protobuf.StringValue message = 2;
}

message CreateExperimentResponse {
  DynamicValue value = 1;
}

message UpdateExperimentRequest {
  // Identifier type
  enum Identifier {
    // Identifier unspecified
    IDENTIFIER_UNSPECIFIED = 0;

    // Identifier is an ID
    IDENTIFIER_ID = 1;

    // Identifier is a name
    IDENTIFIER_NAME = 2;
  }

  // The experiment ID
  string id = 1;

  // The experiment configuration
  ExperimentConfiguration experiment = 2;

  // The commit message
  google.protobuf.StringValue message = 3;

  // Identifier type
  Identifier identifier = 4;

  // Force approve the request; can only be set by allowed API keys from the builder SDK
  bool force_approve = 5;
}

message UpdateExperimentResponse {
  DynamicValue value = 1;
}

message GetDynamicValueChangesRequest {
  string id = 1;
  google.protobuf.StringValue version = 2;
}

message GetDynamicValueChangesResponse {
  DynamicValueChanges changes = 1;
}

message ReviewDynamicValueRequest {
  enum Action {
    ACTION_UNSPECIFIED = 0;
    ACTION_ACCEPT = 1;
    ACTION_REJECT = 2;
  }

  string id = 1;
  Action action = 2 [(doordash.api.validate.rules).missing_value = {action: FAIL}];
  bool is_emergency = 3;
  string emergency_reason = 4;
  string slack_channel = 5;
}

message ReviewDynamicValueResponse {
  DynamicValue value = 1;
}

// `PublishDynamicValueRequest` request proto for PublishDynamicValue
message PublishDynamicValueRequest {
  // The dynamic value ID
  string id = 1;
}

// `PublishDynamicValueResponse` response proto for PublishDynamicValue
message PublishDynamicValueResponse {}

message ArchiveDynamicValueRequest {
  // Action type
  enum Action {
    // Action unspecified
    ACTION_UNSPECIFIED = 0;

    // Action archive
    ACTION_ARCHIVE = 1;

    // Action unarchive
    ACTION_UNARCHIVE = 2;
  }

  // Identifier type
  enum Identifier {
    // Identifier unspecified
    IDENTIFIER_UNSPECIFIED = 0;

    // Identifier is an ID
    IDENTIFIER_ID = 1;

    // Identifier is a name
    IDENTIFIER_NAME = 2;
  }

  // Dynamic value ID
  string id = 1;

  // Action to perform
  Action action = 2;

  // Identifier type
  Identifier identifier = 3;

  // Force approve the request; can only be set by allowed API keys from the builder SDK
  bool force_approve = 4;
}

message ArchiveDynamicValueResponse {
  DynamicValue value = 1;
}

message RetireDynamicValueRequest {
  // Action type
  enum Action {
    // Action unspecified
    ACTION_UNSPECIFIED = 0;

    // Action retire
    ACTION_RETIRE = 1;

    // Action unarchive
    ACTION_UNRETIRE = 2;
  }

  // Identifier type
  enum Identifier {
    // Identifier unspecified
    IDENTIFIER_UNSPECIFIED = 0;

    // Identifier is an ID
    IDENTIFIER_ID = 1;

    // Identifier is a name
    IDENTIFIER_NAME = 2;
  }

  // Dynamic value ID
  string id = 1;

  // Retirement action to perform
  Action action = 2;

  // Configuration identifier type
  Identifier identifier = 3;

  // Force approve the request; can only be set by allowed API keys from the builder SDK
  bool force_approve = 4;
}

message RetireDynamicValueResponse {
  DynamicValue value = 1;
}

message GetDynamicValueRolloutsRequest {
  string id = 1;
}

message GetDynamicValueRolloutsResponse {
  reserved 1;
  repeated SegmentRollout segments = 2;
}

message GetDynamicValueVersionsRequest {
  enum Direction {
    DIRECTION_UNKNOWN = 0;
    DIRECTION_ASCENDING = 1;
    DIRECTION_DESCENDING = 2;
  }

  string id = 1;
  google.protobuf.Int32Value page = 2;
  google.protobuf.Int32Value size = 3;
  Direction direction = 4;
}

message GetDynamicValueVersionsResponse {
  repeated History versions = 1;
  Pagination pagination = 2;
}

message GetDynamicValuePermissionsRequest {
  string id = 1;
}

message GetDynamicValuePermissionsResponse {
  DynamicValuePermissions permissions = 1;
}

message GetDynamicValueApproversRequest {
  repeated string service_ids = 1;
}

message GetDynamicValueApproversResponse {
  repeated DynamicValueApprover approvers = 1;
}

// Request proto for `GetDynamicValueFilters`
message GetDynamicValueFiltersRequest {}

// Response proto for `GetDynamicValueFilters`
message GetDynamicValueFiltersResponse {
  // List of available filters
  repeated DynamicValueFilter filters = 1;
}

message DynamicValueApprover {
  google.protobuf.StringValue name = 1;
  google.protobuf.StringValue email = 2;
}

message ValidateDynamicValueRequest {
  google.protobuf.StringValue name = 1;
}

message ValidateDynamicValueResponse {
  enum Result {
    RESULT_UNSPECIFIED = 0;
    RESULT_VALID = 1;
    RESULT_INVALID = 2;
  }

  Result result = 1;
}

// Request proto for `RolloutExperiment`
message RolloutExperimentRequest {
  reserved 4;

  // Action type
  enum Action {
    // Action unspecified
    ACTION_UNSPECIFIED = 0;

    // Action rollout
    ACTION_ROLLOUT = 1;

    // Action rollback
    ACTION_ROLLBACK = 2;
  }

  // Identifier type
  enum Identifier {
    // Identifier unspecified
    IDENTIFIER_UNSPECIFIED = 0;

    // Identifier is an ID
    IDENTIFIER_ID = 1;

    // Identifier is a name
    IDENTIFIER_NAME = 2;
  }

  // Dynamic value ID
  string id = 1;

  // The action to take
  Action action = 2;

  // The segment to rollout
  google.protobuf.StringValue segment_name = 3;

  // The target rollout percentage
  google.protobuf.DoubleValue percentage = 5;

  // Identifier type
  Identifier identifier = 6;
}

// Response proto for `RolloutExperiment`
message RolloutExperimentResponse {
  reserved 1;

  // List of segment details after rollout
  repeated SegmentRollout segments = 2;
}

message GetExperimentComponentsRequest {
  enum Identifier {
    IDENTIFIER_UNSPECIFIED = 0;
    IDENTIFIER_ID = 1;
    IDENTIFIER_NAME = 2;
  }

  // Identifier value
  string id = 1;

  // Identifier type
  Identifier type = 2;
}

message GetExperimentComponentsResponse {
  ExperimentConfiguration experiment = 1;
}

message RevertDynamicValueCurrentVersionRequest {
  string id = 1;
  string version_id = 2;
}

message RevertDynamicValueCurrentVersionResponse {
  DynamicValue value = 1;
}

message MutateDynamicValuesRequest {
  repeated string ids = 1;
  string mutation = 2;
}

message MutateDynamicValuesResponse {
  repeated string success_ids = 1;
  repeated string skipped_ids = 2;
  repeated string failed_ids = 3;
}

message ValidateExperimentRequest {
  google.protobuf.StringValue id = 1;
  ExperimentConfiguration experiment = 2;
}

message ValidateExperimentResponse {
  enum Result {
    RESULT_UNSPECIFIED = 0;
    RESULT_VALID = 1;
    RESULT_INVALID = 2;
  }

  Result result = 1;
  repeated ValidationMessage messages = 2;
}

message CreateFeatureFlagRequest {
  FeatureFlagConfiguration feature_flag = 1;
}

message CreateFeatureFlagResponse {
  DynamicValue value = 1;
}

message UpdateFeatureFlagRequest {
  string id = 1;
  FeatureFlagConfiguration feature_flag = 2;
}

message UpdateFeatureFlagResponse {
  DynamicValue value = 1;
}

message RolloutFeatureFlagRequest {
  enum Action {
    ACTION_UNSPECIFIED = 0;
    ACTION_ROLLOUT = 1;
    ACTION_ROLLBACK = 2;
  }

  string id = 1;
  Action action = 2;
  google.protobuf.DoubleValue percentage = 3;
}

message RolloutFeatureFlagResponse {
  reserved 1;
  repeated SegmentRollout segments = 2;
}

message ValidateFeatureFlagRequest {
  google.protobuf.StringValue id = 1;
  FeatureFlagConfiguration feature_flag = 2;
}

message ValidateFeatureFlagResponse {
  enum Result {
    RESULT_UNSPECIFIED = 0;
    RESULT_VALID = 1;
    RESULT_INVALID = 2;
  }

  Result result = 1;
  repeated ValidationMessage messages = 2;
}

message GetFeatureFlagComponentsRequest {
  enum Identifier {
    IDENTIFIER_UNSPECIFIED = 0;
    IDENTIFIER_ID = 1;
    IDENTIFIER_NAME = 2;
  }

  // Identifier value
  string id = 1;

  // Identifier type
  Identifier type = 2;
}

message GetFeatureFlagComponentsResponse {
  FeatureFlagConfiguration feature_flag = 1;
}

message MigrateFeatureFlagRequest {
  // The ID of the DV
  string id = 1;

  // An optional field. If set the created Experiment will use this value as the randomization key
  google.protobuf.StringValue randomization_key = 2;
}

message MigrateFeatureFlagResponse {
  DynamicValue value = 1;
}

message UpdateFeatureFlagValueRequest {
  string id = 1;
  string segment_name = 2;
  string value = 3;
}

message UpdateFeatureFlagValueResponse {
  DynamicValue value = 1;
}

message ListServiceContextsRequest {
  repeated string service_ids = 1;
}

message ListServiceContextsResponse {
  repeated ServiceContext contexts = 1;
}

message CreateServiceContextRequest {
  ServiceContextConfiguration configuration = 1;
}

message CreateServiceContextResponse {
  ServiceContext context = 1;
}

message UpdateServiceContextRequest {
  string id = 1;
  ServiceContextConfiguration configuration = 2;
}

message UpdateServiceContextResponse {
  ServiceContext context = 1;
}

message DeleteServiceContextRequest {
  string id = 1;
}

message DeleteServiceContextResponse {
  ServiceContext context = 1;
}

// Request proto for `GetEvaluationComponents`
message GetEvaluationComponentsRequest {
  // The dynamic value ID
  string id = 1;
}

// Response proto for `GetEvaluationComponents`
message GetEvaluationComponentsResponse {
  // The evaluation simulator configuration
  EvaluationConfiguration configuration = 1;
}

// Request proto for `EvaluateDynamicValue`
message EvaluateDynamicValueRequest {
  // The dynamic value ID
  string id = 1;

  // The evaluation simulator configuration
  EvaluationConfiguration configuration = 2;
}

// Response proto for `EvaluateDynamicValue`
message EvaluateDynamicValueResponse {
  // The evaluation result
  EvaluationResult result = 1;
}

message CreateCurieExperimentFromDynamicValueRequest {
  string dynamic_value_id = 1;
}

message CreateCurieExperimentFromDynamicValueResponse {
  repeated string curie_experiment_config_ids = 1;
}

message SubmitReviewForDraftDynamicValueRequest {
  string dynamic_value_id = 1;
}

message SubmitReviewForDraftDynamicValueResponse {
  DynamicValue value = 1;
}

// Metric being monitored as part of an automated rollout
message MonitoredMetric {
  message Dimension {
    // Dimension ID
    string id = 1;

    // Dimension name
    string name = 2;
  }

  // Metric ID
  string id = 1;

  // Metric name
  string name = 2;

  // Metric dimensions
  repeated Dimension dimensions = 3;
}

// Service being monitored as part of an automated rollout
message MonitoredService {
  // Service ID
  string id = 1;

  // Service name
  string name = 2;
}

// Request proto for `GetGuardrailConfiguration`
message GetGuardrailConfigurationRequest {
  // Dynamic value vertical
  string vertical = 1;

  // Dynamic value bucket key
  string bucket_key = 2;

  // Dynamic value namespace IDs
  repeated string namespace_ids = 3;
}

// Response proto for `GetGuardrailConfiguration`
message GetGuardrailConfigurationResponse {
  // List of monitored metrics
  repeated MonitoredMetric metrics = 1;

  // List of monitored services
  repeated MonitoredService services = 2;
}

// Guardrail health
enum GuardrailHealth {
  // Health is unknown
  HEALTH_UNSPECIFIED = 0;

  // Health is inconclusive
  HEALTH_INCONCLUSIVE = 1;

  // Health is healthy
  HEALTH_HEALTHY = 2;

  // Health is warning
  HEALTH_WARNING = 3;

  // Health is critical
  HEALTH_CRITICAL = 4;

  // Health is not applicable
  HEALTH_NOT_APPLICABLE = 5;
}

// Guardrail health check
message SegmentHealth {
  // Segment name
  string name = 1;

  // Segment health status
  GuardrailHealth health = 2;

  // Curie analysis ID
  string analysis_id = 3;

  // Curie experiment ID
  string experiment_id = 4;
}

// Request proto for `GetGuardrailHealth`
message GetGuardrailHealthRequest {
  // Dynamic value ID
  string id = 1;
}

// Response proto for `GetGuardrailHealth`
message GetGuardrailHealthResponse {
  // Overall analysis status
  GuardrailHealth health = 1;

  // Per-segment guardrail health
  repeated SegmentHealth segments = 2;
}

message DynamicValueHealthCheck {
  reserved 8;
  reserved "missing_properties";

  enum HealthCheckStatus {
    // Health check status is unknown
    STATUS_UNSPECIFIED = 0;

    // Health check passed
    STATUS_PASSED = 1;

    // Health check failed
    STATUS_FAILED = 2;

    // Health check skipped
    STATUS_SKIPPED = 3;

    // Health check completed with warnings
    STATUS_WARNING = 4;
  }

  enum DynamicValueHealthCheckType {
    // Unknown
    TYPE_UNKNOWN = 0;

    // Configuration
    CONFIGURATION_EVALUATIONS = 1;
    CONFIGURATION_EVALUATIONS_SEGMENT = 2;
    CONFIGURATION_EXPOSURES = 3;
    CONFIGURATION_EXPOSURES_SEGMENT = 4;
    CONFIGURATION_STALENESS = 5;
    CONFIGURATION_EXPIRATION = 6;
    CONFIGURATION_ARCHIVAL = 7;
    CONFIGURATION_MISSING_BUCKET_KEY = 8;
    CONFIGURATION_MISSING_PROPERTY_KEY = 9;
  }

  message QueryResult {
    // Property name
    string name = 1;

    // Property count
    uint64 count = 2;
  }

  message AggregateQueryResults {
    // Aggregator type
    string aggregator_type = 1;

    // Missing properties
    repeated QueryResult query_results = 2;
  }

  // Health check type
  DynamicValueHealthCheckType type = 1;

  // Segment name for segment level checks
  // Does not apply to other checks (empty string)
  string segment = 2;

  // Health check status
  HealthCheckStatus status = 3;

  // Health check time
  google.protobuf.Timestamp checked_at = 4;

  // Start time of the aggregations that was checked
  google.protobuf.Timestamp aggregation_start = 5;

  // End time of the aggregations that was checked
  google.protobuf.Timestamp aggregation_end = 6;

  // Count of evaluations/exposures in the aggregation window
  uint64 records_count = 7;

  // Additional missing properties context in the health check
  repeated AggregateQueryResults aggregate_query_results = 9;
}

message GetDynamicValueHealthChecksRequest {
  // Identifier type
  enum Identifier {
    // Identifier unspecified
    IDENTIFIER_UNSPECIFIED = 0;

    // Identifier is an ID
    IDENTIFIER_ID = 1;

    // Identifier is a name
    IDENTIFIER_NAME = 2;
  }

  // DV id or name
  string id = 1;

  // Identifier type
  Identifier identifier = 2;
}

message GetDynamicValueHealthChecksResponse {
  repeated DynamicValueHealthCheck healthchecks = 1;
}

message GetStaleDynamicValuesRequest {
  repeated string owner_emails = 1;
}

message GetStaleDynamicValuesResponse {
  repeated DynamicValue values = 1;
}

// Iguazu event for health check status
message DVHealthCheck {
  reserved 1, 2, 3, 4, 5;
  reserved "name", "check", "segment", "status", "check_time";

  // Triggered by UI or scheduled check
  string triggered_by = 6;

  // DV ID
  string experiment_id = 7;

  // DV name
  string experiment_name = 8;

  // CONFIGURATION or SEGMENT
  string check_type = 9;

  // Check name
  string check_name = 10;

  // Segment name
  google.protobuf.StringValue segment_name = 11;

  // Check result
  string check_result = 12;

  // Check time
  google.protobuf.Timestamp occurred_at = 13;
}
