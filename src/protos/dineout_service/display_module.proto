syntax = "proto3";

package dineout_service.v1;

import "dineout_service/reward.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option go_package = "github.com/doordash/services-protobuf/generated/dineout_service/api/v1";
option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.dineout";

/*
 * This file contains custom display components we use to
 * render content on the client.
 *
 * Examples are display_modules for reward detail pages
 * and share button for merchant details
 */

// Data needed to construct Share Button by frontend
message ShareButton {
  // Share button message
  google.protobuf.StringValue share_message = 1;
}

// UI content for the reward details page
message DisplayModule {
  // type of display module, e.g. go-page-header
  string type = 1;

  // content of the display module
  oneof content {
    // go-page-image-collage content
    ImageCollage image_collage_content = 2;

    // go-page-body, go-page-card content
    ListContent list_content = 3;

    // Used in the go-page-card sections
    // go-page-store-details content
    StoreDetailsContent store_details_content = 4;
    // go-page-deal-details content
    DealDetailsContent deal_details_content = 5;
    // go-page-package-details content
    PackageDetailsContent package_details_content = 6;

    // go-page-body-how-it-works content
    HowItWorksContent how_it_works_content = 7;

    // go-page-bottom-action content
    BottomActionContent bottom_action_content = 8;

    // go-page-support
    SupportContent support_content = 9;

    // go-page-terms
    TermsContent terms_content = 10;

    // go-page-banner
    BannerContent banner_content = 11;
  }

  // content for the header display module
  message ImageCollage {
    // image urls for the store header
    repeated google.protobuf.StringValue image_urls = 1;
  }

  // display module content that contains multiple other display modules
  message ListContent {
    // set of items to display
    repeated DisplayModule sections = 1;
  }

  // content for the deal details display module
  message DealDetailsContent {
    // title of the deal
    google.protobuf.StringValue title = 1;
    // subtitle of the deal
    google.protobuf.StringValue subtitle = 2;
    // tags for the deal
    repeated google.protobuf.StringValue tags = 3;
  }

  // content for the deal details display module
  message PackageDetailsContent {
    // string tags on the package details
    repeated google.protobuf.StringValue tags = 1;
    // details about the package
    PackageDetails details = 2;
    // items in the package
    repeated Item items = 3;

    // content for the package details display module
    message PackageDetails {
      // title of the package
      google.protobuf.StringValue title = 1;
      // description of the package
      google.protobuf.StringValue description = 2;
    }

    // content for the item display module
    message Item {
      // name of the item
      google.protobuf.StringValue name = 1;
      // description of the item
      google.protobuf.StringValue description = 2;
      // image url depicting the item
      google.protobuf.StringValue image_url = 3;
    }
  }

  // content for the store details display module
  message StoreDetailsContent {
    // name of the store
    google.protobuf.StringValue store_name = 1;
    // image url of the store's logo
    google.protobuf.StringValue cover_square_image_url = 2;
    // rating of the store
    Rating rating = 3;
    // price range of the store
    google.protobuf.StringValue price_range = 4;
    // instore business tags
    repeated google.protobuf.StringValue tags = 5;
    // address of the store
    google.protobuf.StringValue address = 6;
    // travel details to get to the store
    TravelDetails travel_details = 7;
  }

  // content for the how it works display module
  message HowItWorksContent {
    // title of the how it works section
    google.protobuf.StringValue title = 1;
    // steps in the how it works section
    repeated Step steps = 2;

    // content for the step display module
    message Step {
      // icon name for the step
      google.protobuf.StringValue icon = 1;
      // title of the step
      google.protobuf.StringValue title = 2;
      // subtitle of the step
      google.protobuf.StringValue subtitle = 3;
    }
  }

  // content for the bottom action display module
  message BottomActionContent {
    // unclaimed state
    ButtonGroup unclaimed = 1;
    // claimed state
    ButtonGroup claimed = 2;
    // redeemed state
    ButtonGroup redeemed = 3;

    // content for the button group
    message ButtonGroup {
      // description above the button
      google.protobuf.StringValue description = 1;
      // button
      ActionButton button = 2;
    }

    // content for the button
    message ActionButton {
      // type of the action button
      google.protobuf.StringValue type = 1;
      // text displayed on the action button
      google.protobuf.StringValue text = 2;
      // text displayed after the action is completed, optional
      google.protobuf.StringValue completion_text = 3;
    }
  }

  // content for support display module
  message SupportContent {
    // The title of the banner
    string title = 1;
    // The leading icon for the banner
    string leading_icon = 2;
    // The main text of the support banner
    string text = 3;
    // The trailing icon for the banner
    string trailing_icon = 4;
    // The support page details
    SupportPage support_page = 5;
    // The support case number to correlate with metadata to assist support case
    // The client should send the iguazu event with this support number, and the BE need to make sure this is consistent
    // with the support number in the other text fields
    string case_number = 6;
    // The rewards states in which we should show this DM
    repeated string enabled_reward_states = 7;

    // params to configure buttons on support content
    message Button {
      // The text displayed on the button
      string text = 1;
    }

    // params to configure email button and default templating
    message Email {
      // The button for the email action
      Button button = 1;
      // The recipient's email address
      string recipient_email = 2;
      // The subject of the email
      string subject = 3;
      // The body of the email
      string body = 4;
      // Flag to indicate if the body of the email is HTML
      bool is_html = 5;
    }

    // params to configure sms button and default templating
    message Sms {
      // The button for the SMS action
      Button button = 1;
      // The phone number to send the SMS to
      string phone_number = 2;
      // The body of the SMS
      string body = 3;
    }

    // params to configure the support page shown
    message SupportPage {
      // The title of the support page
      string title = 1;
      // The body text of the support page
      string body = 3;
      // The email details for the support page
      Email email = 4;
      // The SMS details for the support page
      Sms sms = 5;
    }
  }

  // content for the terms display module
  message TermsContent {
    // markdown text for terms display module, can contain hyperlinks
    string text = 1;
  }
}

// banner for the page card view (e.g. "Expires on Sat, Jun 29")
message BannerContent {
  // the redeem window info
  RedeemWindow redeem_window = 1;

  // the current reward state
  RewardState current_reward_state = 2;

  // the number of hours to start counting down from
  double countdown_from_hours_offset = 3;

  // all the banner state based info used to map to the correct info
  repeated StateBasedInfo banner_state_based_info = 4;

  // Any redeem window info
  message RedeemWindow {
    // the date the reward must be redeemed before
    google.protobuf.Timestamp redeem_before_date = 1;
  }

  // the state of the reward to use to determine how to show the banner
  message RewardState {
    // the current state of the reward
    dineout_service.v1.Reward.RewardState state = 1;

    // the date the reward must be redeemed before
    google.protobuf.Timestamp redeemed_at = 2;
  }

  // the corresponding info for the specified state to help display the banner
  message StateBasedInfo {
    // the banner state that represents the info
    BannerState state = 1;

    // the display string template for the state (its templatized to inject strings on the client, such as the timer)
    string display_string_template = 2;

    // the placeholder string to replace in the display_string_template if necessary
    google.protobuf.StringValue placeholder_string = 3;
  }

  // Enum for the state of the banner (the current state is resolved on the client)
  enum BannerState {
    // banner state is unspecified
    BANNER_STATE_UNSPECIFIED = 0;

    // banner is in the unclaimed state
    BANNER_STATE_UNCLAIMED = 1;

    // banner is in the claimed countdown state where an active countdown timer shows
    BANNER_STATE_CLAIMED_COUNTDOWN = 2;

    // banner is in the claimed static state where we just show the date it expires
    BANNER_STATE_CLAIMED_STATIC = 3;

    // banner is in the redeemed state
    BANNER_STATE_REDEEEMED = 4;

    // banner is in the expired state
    BANNER_STATE_EXPIRED = 5;
  }
}

// details about a store's rating
message Rating {
  // name of the store
  google.protobuf.FloatValue average_rating = 1;
  // image url of the store's logo
  google.protobuf.StringValue number_of_ratings_display_string = 2;
}

// travel time and distance details
message TravelDetails {
  // travel time in minutes
  google.protobuf.StringValue duration_string = 1;
  // travel distance in miles
  google.protobuf.StringValue distance_string = 2;
  // travel method (walk or drive)
  TravelMode travel_mode = 3;

  // Enum of the travel mode
  enum TravelMode {
    // Unspecified
    TRAVEL_MODE_UNSPECIFIED = 0;

    // We default to driving for longer distances
    TRAVEL_MODE_DRIVE = 1;

    // We use walking for short distances, like <10 min duration
    TRAVEL_MODE_WALK = 2;
  }
}

// Content for the Merchant Header
message MerchantHeader {
  // image urls for the store header
  repeated google.protobuf.StringValue image_urls = 1;
  // store id
  google.protobuf.StringValue store_id = 2;
}
