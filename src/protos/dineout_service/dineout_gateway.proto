syntax = "proto3";

package dineout_service.v1;

import "common/service_client_config.proto";
import "google/rpc/status.proto";

option go_package = "github.com/doordash/services-protobuf/generated/dineout_service/api/v1";
option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.dineout";

// Service for all Dine Out related logic
service DineOutGatewayService {
  option (service_client.client_config).response_attempt_timeout_millis = 2000;
  option (service_client.client_config).retry_config.max_attempts = 4;
  option (service_client.client_config).retry_config.do_retry_grpc_code = 8;
  option (service_client.client_config).circuit_breaker_config.failure_rate_threshold = 0.8;
  option (service_client.client_config).circuit_breaker_config.do_ignore_grpc_code = 5;

  // List photos by entity type and id
  rpc ListPhotos(ListPhotosRequest) returns (ListPhotosResponse);
}

// Request message for listing photos associated with merchant entities.
message ListPhotosRequest {
  // List of merchants we want to fetch photos for
  repeated MerchantEntity entities = 1;
}

// Represents a merchant entity with its identifier and type.
// Used to uniquely identify different types of merchant resources.
message MerchantEntity {
  // The ID of the entity.  The meaning depends on the entity_type.
  string id = 1;

  // The type of the entity.
  EntityType entity_type = 2;
}

// Defines the different types of merchant entities that can be referenced.
// Used to distinguish between different merchant resource types in the system.
enum EntityType {
  // Default unspecified value. Should not be used.
  ENTITY_TYPE_UNSPECIFIED = 0;
  // Represents a business entity in the system.
  ENTITY_TYPE_BUSINESS = 1;
  // Represents a store entity in the system.
  ENTITY_TYPE_STORE = 2;
}

// Response message containing photo results for requested merchant entities.
// Contains a list of results, one for each requested entity.
message ListPhotosResponse {
  // List of results, one for each requested entity.
  repeated ListPhotosResult results = 1;
}

// Contains the photo listing result for a single merchant entity.
// Includes the entity reference, status of the request, and retrieved image URLs.
message ListPhotosResult {
  // The entity for which this result applies.
  MerchantEntity entity = 1;

  // gRPC status for this entity.  Use google.rpc.Status.
  google.rpc.Status status = 2;

  // List of image URLs.  This field is only populated if the status is OK (code 0).
  repeated string image_urls = 3;
}
