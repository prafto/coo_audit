syntax = "proto3";

package dineout_service.v1;

import "common/money.proto";
import "dineout_service/common.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option go_package = "github.com/doordash/services-protobuf/generated/dineout_service/api/v1";
option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.dineout";

// TODO(mgao): deprecate Reward proto

// Reward details
message Reward {
  // Set depreczted fields
  reserved 16;

  // Enum of the types of people receiving the meals
  enum RewardState {
    // Unspecified state
    REWARD_STATE_UNSPECIFIED = 0;

    // When reward is available to be claimed
    REWARD_STATE_UNCLAIMED = 1;

    // When reward is claimed, showing an intent to dine out
    REWARD_STATE_CLAIMED = 2;

    // When reward is redeemed, showing the Cx arrived at the store
    REWARD_STATE_REDEEMED = 3;
  }

  // id is the reward id
  string id = 1;

  // campaign this reward is associated with
  string campaign_id = 2;

  // state is the state of the reward
  RewardState state = 3;

  // store id
  int64 store_id = 4;

  // store business name
  string store_name = 5;

  // store store image url
  string store_image_url = 6;

  // store description, flexible field to show different information in the store cell
  string description = 7;

  // store ratings
  float average_rating = 8;

  // store ratings display string
  string number_of_ratings_display_string = 9;

  // store lat
  double lat = 10;

  // store lng
  double lng = 11;

  // Reward amounts
  money.MonetaryFields credit_amount = 12;

  // price range is the number of $ signs for this store (i.e. 1 = $, 3 = $$$)
  int64 price_range = 13;

  // Optional: driving distance in miles for now
  // Will only be returned if we have sufficient information, client's lat/lng
  google.protobuf.StringValue driving_distance_string = 14;

  // Optional: driving time in minutes, computed using an average speed to cover the distance from current location to
  // Will only be returned if we have sufficient information, client's lat/lng
  google.protobuf.StringValue driving_time_string = 15;

  // Reminder contains details about a reward reminder
  RewardReminder reward_reminder = 17;

  // Details about the campaign, typically includes time constraints and limits
  CampaignDetails campaign_details = 18;

  // Method of redeeming a reward
  dineout_service.v1.RedemptionMethod redemption_method = 19;

  // Coupon offer string, e.g. "$10 off", "20% off", or "free beer"
  google.protobuf.StringValue coupon_offer_string = 20;

  // Minimum amount users must spend to receive rewards. Currently not enforced on BE
  money.MonetaryFields min_spend_amount = 21;

  // Optional: Specified if this is a business level deal
  google.protobuf.Int64Value business_id = 22;

  // Optional: Specified if this is a business group level deal
  google.protobuf.Int64Value business_group_id = 23;

  // Stores expanded contains details for all stores related to this reward. It particularly provides store level
  // information for business level rewards. The client should use both the existing reward data overlayed with this data
  // to handle store level reward logic
  repeated dineout_service.v1.StoreDetails stores_expanded = 24;

  // Cost to purchase this reward
  money.MonetaryFields purchase_cost = 25;

  // Timestamp for when a given reward is redeemed
  google.protobuf.Timestamp redeemed_at = 26;

  // Timestamp for when a given reward is redeemable
  google.protobuf.Timestamp redeemable_at = 27;

  // Promo text if needed for redemption
  google.protobuf.StringValue promo_text = 28;

  // Time bound details for redeeming and claiming rewards
  TimeBoundDetails time_bound_details = 29;

  // Content for tags on the reward
  RewardTag tag = 30;
}

// Reminder contains details about a reward reminder
message RewardReminder {
  // Reminder id
  string id = 1;
}

// Details about the campaign, typically includes time constraints and limits
message CampaignDetails {
  // Adding here to make this object more complete and future compatible
  string id = 1;

  // When this campaign will start. Rewards can only be claimed when the campaign is active.
  google.protobuf.Timestamp starts_at = 2;

  // When this campaign will end. Rewards can only be claimed when the campaign is active.
  google.protobuf.Timestamp ends_at = 3;

  // When this campaign will almost end, change tag a different color
  google.protobuf.Timestamp ends_soon_at = 4;

  // How many rewards are available to be claimed
  google.protobuf.Int64Value remaining_amount = 5;

  // How many rewards are available in total
  google.protobuf.Int64Value total_amount = 6;

  // When the user cannot redeem a claimed reward anymore
  google.protobuf.Timestamp redeem_ends_at = 7;
}

// Contains details about types of time bound redemption methods
// and time windows for redeeming and claiming rewards
message TimeBoundDetails {
  // Time bound redemption method
  enum TimeBoundRedemptionMethod {
    // Unspecified
    TIME_BOUND_REDEMPTION_METHOD_UNSPECIFIED = 0;

    // Reward must be redeemed on the same day it is claimed
    TIME_BOUND_REDEMPTION_METHOD_SAME_DAY = 1;

    // Reward must be redeemed within 7 days of claiming
    TIME_BOUND_REDEMPTION_METHOD_SAME_WEEK = 2;

    // Reward is scheduled for redeeming on a specific date
    TIME_BOUND_REDEMPTION_METHOD_SCHEDULED = 3;
  }

  // Details about the time window for claiming a reward
  message ClaimDate {
    // date when the reward can be claimed
    google.protobuf.Timestamp date = 1;
  }

  // Time bound redemption method
  TimeBoundRedemptionMethod type = 1;

  // Time window for redeeming a reward
  RedeemTimeWindow redeem_window = 2;

  // Optional, nonnull if type is "TIME_BOUND_REDEMPTION_METHOD_SCHEDULED"
  // Time windows for claiming a reward
  repeated ClaimDate claim_time_window = 3;
}

// Time window for redeeming a reward
message RedeemTimeWindow {
  // Start time for redeeming a reward
  google.protobuf.Timestamp redeemable_at = 1;

  // End time for redeeming a reward
  google.protobuf.Timestamp redeemable_before = 2;
}

// Content for tags on the reward
message RewardTag {
  // Tag string to appear on the reward image
  google.protobuf.StringValue image_tag = 1;
}
