syntax = "proto3";

package doordash_notification;

option java_multiple_files = true;
option java_package = "com.doordash.rpc.notification";
option java_generic_services = true;

import "google/protobuf/timestamp.proto";

service NotificationByPreference {
    // SendNotificationToUserByPreference is deprecated.
    // For SMS, use SendSMS in postal-service: https://doordash.atlassian.net/wiki/spaces/Eng/pages/2820803485
    // For push notifications, use SendPush in postal-service: https://doordash.atlassian.net/wiki/spaces/Eng/pages/2900099108
    rpc SendNotificationToUserByPreference(SendNotificationToUserByPreferenceRequest) returns (SendNotificationToUserByPreferenceResponse);

    // DO NOT USE THIS API
    // This API's sole purpose is to help switch to the new APNS server integration in Notification Service
    rpc SendPush(SendPushRequest) returns (SendPushResponse);
}

message SendNotificationToUserByPreferenceRequest {
    int64 user_id = 1; // This is now optional. Originally this was a required field since the API did not support profile_id
    string template_key = 2; // Required field
    string metadata = 3; // JSON-data
    int64 profile_id = 4; // consumer or dasher id. This is a required field if the profile value in the template_key config in notification service is consumer. We plan to make this a required field for dasher soon. If you are adding a new template, make sure to pass profile_id in the API call
    LocalizePlaceholders localize_placeholders = 5;
}

message SendNotificationToUserByPreferenceResponse {
    string request_id = 1;
}

message LocalizePlaceholders {
    repeated Name names = 1;
    repeated Money money = 2;
    repeated Date dates = 3;
    repeated Time times = 4;
    repeated DateTime date_times = 5;
    repeated TimeRange time_ranges = 6;
    repeated Address addresses = 7;
}

// To localize name placeholders in notification templates. All fields are mandatory
message Name {
    string placeholder_name = 1;
    string given_name = 2;
    string family_name = 3;
    NameFormat format_type = 4;
    Profile profile = 5;
}

// To localize monetary placeholders in notification templates. All fields are mandatory
message Money {
    string placeholder_name = 1;
    int64 unit_amount = 2;
    string currency = 3;
    bool concise = 4;
}

message Address {
    string placeholder_name = 1;
    int64 address_id = 2;
}

message Date {
    string placeholder_name = 1;
    google.protobuf.Timestamp timestamp = 2;
    string timezone = 3; // e.g. 'US/Pacific', 'Asia/Tokyo'
    DateTimeFormat format_type = 4;
}

message Time {
    string placeholder_name = 1;
    google.protobuf.Timestamp timestamp = 2;
    string timezone = 3; // e.g. 'US/Pacific', 'Asia/Tokyo'
    DateTimeFormat format_type = 4;
}

message DateTime {
    string placeholder_name = 1;
    google.protobuf.Timestamp timestamp = 2;
    string timezone = 3; // e.g. 'US/Pacific', 'Asia/Tokyo'
    DateTimeFormat format_type = 4;
}

// To format time range in notifications e.g. 3:00 PM-3:30 PM
message TimeRange {
    string placeholder_name = 1;
    google.protobuf.Timestamp timestamp_start = 2;
    google.protobuf.Timestamp timestamp_end = 3;
    string timezone = 4; // e.g. 'US/Pacific', 'Asia/Tokyo'
}

// To format names in notifications
enum NameFormat {
    // unspecified format
    NAME_FORMAT_UNSPECIFIED = 0;
    // informal format e.g. Hi Foo
    NAME_FORMAT_INFORMAL_NAME = 1;
    // formal e.g. Hi Foo Bar
    NAME_FORMAT_FORMAL_NAME = 2;
    // short formal e.g. Hi Foo B
    NAME_FORMAT_FORMAL_NAME_ABBREVIATED = 3;
}

// To format date/time in notifications
enum DateTimeFormat {
    // unspecified format, FORMAT_SHORT is used in this case
    DATE_TIME_FORMAT_UNSPECIFIED = 0;
    // e.g. Date: 2/23/21 Time: 3:00 PM DateTime: 2/23/21, 3:00 PM
    DATE_TIME_FORMAT_SHORT = 1;
    // e.g. Date: Feb 23, 2021 Time: 3:00:00 PM DateTime: Feb 23, 2021, 3:30:00 PM
    DATE_TIME_FORMAT_MEDIUM = 2;
    // e.g. Tue, Feb 23
    DATE_TIME_FORMAT_DAY_AND_DATE_SHORT = 3;
}

// To format names in sms and push notifications
enum Profile {
    // Unspecified
    PROFILE_UNSPECIFIED = 0;
    // Use this when referring to a consumer
    PROFILE_CONSUMER = 1;
    // Use this when referring to a dasher
    PROFILE_DASHER = 2;
}

message SendPushRequest {
    string apn_service = 1; // To choose the right certs
    string message = 2; // notification content
    repeated string device_tokens = 3; // device token list
    string apns_data = 4; // JSON-data like badge, sound, silent, mutable-content
    // JSON-data any extra data that needs to be supported Ex: {'content_id': 1234, 'delivery_id': 1223443}
    // push_event_id is present in extra
    string extra = 5;
    bool is_mass = 6;
    string segment_metadata = 7;
}

message SendPushResponse {
    bool is_success = 1;
    string error_message = 2;
}