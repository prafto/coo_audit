syntax = "proto3";

package storage_self_serve.v1;

import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option go_package = "github.com/doordash/services-protobuf/generated/storage_self_serve.v1";

// Status types for changefeed
enum ChangefeedStatus {
  // Status for unknown status
  CHANGEFEED_STATUS_UNSPECIFIED = 0;
  // Status for pending changefeed
  CHANGEFEED_STATUS_PENDING = 1;
  // Status for paused changefeed
  CHANGEFEED_STATUS_PAUSED = 2;
  // Status for pause requested changefeed
  CHANGEFEED_STATUS_PAUSE_REQUESTED = 3;
  // Status for failed changefeed
  CHANGEFEED_STATUS_FAILED = 4;
  // Status for succeeded changefeed
  CHANGEFEED_STATUS_SUCCEEDED = 5;
  // Status for canceled changefeed
  CHANGEFEED_STATUS_CANCELED = 6;
  // Status for cancel requested changefeed
  CHANGEFEED_STATUS_CANCEL_REQUESTED = 7;
  // Status for running changefeed
  CHANGEFEED_STATUS_RUNNING = 8;
  // Status for retry running changefeed
  CHANGEFEED_STATUS_RETRY_RUNNING = 9;
  // Status for retry reverting changefeed
  CHANGEFEED_STATUS_RETRY_REVERTING = 10;
  // Status for reverting changefeed
  CHANGEFEED_STATUS_REVERTING = 11;
  // Status for revert failed changefeed
  CHANGEFEED_STATUS_REVERT_FAILED = 12;
}

// Changefeed data returned from argo
message Changefeed {
  // Job Id for the changefeed
  google.protobuf.StringValue job_id = 1;
  // Description for the changefeed
  google.protobuf.StringValue description = 2;
  // User name for the changefeed
  google.protobuf.StringValue username = 3;
  // Running status for the changefeed
  google.protobuf.StringValue running_status = 4;
  // When the changefeed was created
  google.protobuf.Timestamp created = 5;
  // When the changefeed was started
  google.protobuf.Timestamp started = 6;
  // When the changefeed was finished
  google.protobuf.Timestamp finished = 7;
  // Sink URI for the changefeed
  google.protobuf.StringValue sink_uri = 8;
  // Full table names for the changefeed
  google.protobuf.StringValue full_table_names = 9;
  // Format for the changefeed
  google.protobuf.StringValue format = 10;
  // When the changefeed was modified
  google.protobuf.Timestamp modified = 11;
  // High water timestamp for the changefeed
  google.protobuf.Timestamp high_water_timestamp = 12;
  // Error status for the changefeed
  google.protobuf.StringValue error = 13;
  // Current status for the changefeed
  ChangefeedStatus status = 14;
}

// Request body for getting a changefeed
message GetChangefeedRequest {
  // Job Id for the changefeed to get
  google.protobuf.StringValue job_id = 1;
  // Region for the changefeed to get
  google.protobuf.StringValue region = 2;
  // Cluster name for the changefeed to get
  google.protobuf.StringValue cluster_name = 3;
  // Deployment env for the changefeed to get
  google.protobuf.StringValue deployment_env = 4;
}

// Response body for getting a changefeed
message GetChangefeedResponse {
  // The changefeed returned
  Changefeed changefeed = 1;
}

// Define types of changefeed as enum
enum ChangefeedType {
  // Enum for unspecified Type
  CHANGEFEED_TYPE_UNSPECIFIED = 0;
  // Enum for Hot Cold Type changefeeds
  CHANGEFEED_TYPE_HOT_COLD = 1;
}

// Request body for creating a changefeed
message CreateChangefeedRequest {
  // Cluster name for the changefeed
  google.protobuf.StringValue cluster_name = 1;
  // Region for the changefeed
  google.protobuf.StringValue region = 2;
  // Aws account for the changefeed
  google.protobuf.StringValue aws_account = 3;
  // Deployment environemnt for the database for the changefeed
  google.protobuf.StringValue deployment_env = 4;
  // Type of Changefeed
  ChangefeedType type = 5;
  // Subobject specific to different changefeed types
  oneof details {
    // Details for HotCold type Changefeed
    HotColdChangefeedDetails hot_cold_changefeed_details = 6;
  }
}

//Details for Hot Cold changefeed
message HotColdChangefeedDetails {
  // Name of the table to create changefeed on
  google.protobuf.StringValue table = 1;
  // Name of the source database
  google.protobuf.StringValue source_database = 2;
  // Name of the target database
  google.protobuf.StringValue target_database = 3;
  // Replication service url
  google.protobuf.StringValue service_url = 4;
  // Replication service port
  google.protobuf.StringValue service_port = 5;
  // TTL in seconds
  google.protobuf.StringValue ttl = 6;
}

// Request body for pausing a changefeed
message PauseChangefeedRequest {
  // Job id for the changefeed to get
  google.protobuf.StringValue job_id = 1;
  // Region for the changefeed to get
  google.protobuf.StringValue region = 2;
  // Cluster name for the changefeed to get
  google.protobuf.StringValue cluster_name = 3;
  // Deployment env for the changefeed to get
  google.protobuf.StringValue deployment_env = 4;
}

// Request body for resuming a changefeed
message ResumeChangefeedRequest {
  // Job id for the changefeed to get
  google.protobuf.StringValue job_id = 1;
  // Region for the changefeed to get
  google.protobuf.StringValue region = 2;
  // Cluster name for the changefeed to get
  google.protobuf.StringValue cluster_name = 3;
  // Deployment env for the changefeed to get
  google.protobuf.StringValue deployment_env = 4;
}

// Request body for resuming a changefeed
message CancelChangefeedRequest {
  // Job id for the changefeed to get
  google.protobuf.StringValue job_id = 1;
  // Region for the changefeed to get
  google.protobuf.StringValue region = 2;
  // Cluster name for the changefeed to get
  google.protobuf.StringValue cluster_name = 3;
  // Deployment env for the changefeed to get
  google.protobuf.StringValue deployment_env = 4;
}

// response body for creating a changefeed
message CreateChangefeedResponse {
  // The changefeed created
  Changefeed changefeed = 1;
}

// response body for pausing a changefeed
message PauseChangefeedResponse {
  // The changefeed paused
  Changefeed changefeed = 1;
}

// response body for resuming a changefeed
message ResumeChangefeedResponse {
  // The changefeed resumed
  Changefeed changefeed = 1;
}

// response body for resuming a changefeed
message CancelChangefeedResponse {
  // The changefeed canceled
  Changefeed changefeed = 1;
}

// gRPC service for managing changefeed
service ChangefeedService {
  // Get a specific changefeed by jobId
  rpc GetChangefeed(GetChangefeedRequest) returns (GetChangefeedResponse);

  // Create a new changefeed
  rpc CreateChangefeed(CreateChangefeedRequest) returns (CreateChangefeedResponse);

  // Pause an existing changefeed
  rpc PauseChangefeed(PauseChangefeedRequest) returns (PauseChangefeedResponse);

  // Resume an existing changefeed
  rpc ResumeChangefeed(ResumeChangefeedRequest) returns (ResumeChangefeedResponse);

  // Cancel an existing changefeed
  rpc CancelChangefeed(CancelChangefeedRequest) returns (CancelChangefeedResponse);
}
