syntax = "proto3";

package storage_self_serve.v1;

import "google/protobuf/wrappers.proto";
import "infra_service.common/common.proto";

option go_package = "github.com/doordash/services-protobuf/generated/storage_self_serve.v1";

// Values for kafka topic
message KafkaTopicValues {
  // The Kafka Topic name
  google.protobuf.StringValue name = 1;
  // The Kafka cluster the topic belongs to
  google.protobuf.StringValue cluster = 2;
  // The description for the topic
  google.protobuf.StringValue description = 3;
  // The partition count for the topic
  google.protobuf.Int32Value partition_count = 4;
  // The replication factor for the topic
  google.protobuf.Int32Value replication_factor = 5;
  // The retention hours for the topic
  google.protobuf.Int32Value retention_hours = 6;
  // The max topic size in bytes for this topic
  google.protobuf.Int64Value max_topic_size_bytes = 7;
  // The asset service project for the topic
  google.protobuf.StringValue project = 8;
  // The owning team for the topic
  google.protobuf.StringValue owning_team = 9;
  // The Infra service environment
  infra_service.common.v1.Environment environment = 10;
  // Whether or not to skip review
  google.protobuf.BoolValue admin_skip_review = 11;
  // Person who sent this reqeust
  google.protobuf.StringValue editor = 12;
}

// Request for creating a Kafka Topic
message CreateKafkaTopicRequest {
  // Kafka topic values
  KafkaTopicValues kafka_topic_values = 1;
}

// Response for creating a kafka topic
message CreateKafkaTopicResponse {
  // Change request for the topic
  google.protobuf.StringValue change_request_id = 1;
}

// Reqeust for updating a Kafka Topic
message UpdateKafkaTopicRequest {
  // Kafka topic ID
  google.protobuf.StringValue resource_id = 1;
  // Kafka topic values
  KafkaTopicValues kafka_topic_values = 2;
}

// Response for updating a kafka topic
message UpdateKafkaTopicResponse {
  // Change request for the topic
  google.protobuf.StringValue change_request_id = 1;
}

// Values for a kafka user
message KafkaUserValues {
  // The Kafka Username
  google.protobuf.StringValue name = 1;
  // The Kafka cluster the user belongs to
  google.protobuf.StringValue cluster = 2;
  // Max produce bytes for user
  google.protobuf.Int64Value max_produce_bytes = 3;
  // Max consume bytes for user
  google.protobuf.Int64Value max_consume_bytes = 4;
  // Asset service project for the user
  google.protobuf.StringValue project = 5;
  // The owning team for the topic
  google.protobuf.StringValue owning_team = 6;
  // The Kafka environment
  infra_service.common.v1.Environment environment = 7;
  // Person who sent this reqeust
  google.protobuf.StringValue editor = 8;
}

// Request for creating a Kafka User
message CreateKafkaUserRequest {
  // Kafka user values
  KafkaUserValues kafka_user_values = 1;
}

// Response for creating a kafka topic
message CreateKafkaUserResponse {
  // Change request for the user
  google.protobuf.StringValue change_request_id = 1;
}

// Request for updating a Kafka User
message UpdateKafkaUserRequest {
  // Kafka user ID
  google.protobuf.StringValue resource_id = 1;
  // Kafka user values
  KafkaUserValues kafka_user_values = 2;
}

// Response for updating a Kafka User
message UpdateKafkaUserResponse {
  // Change request for the user
  google.protobuf.StringValue change_request_id = 1;
}

// Kafka Acl Values
message KafkaAclValues {
  // The Kafka Topic name for this ACL
  google.protobuf.StringValue topic_name = 1;

  // The Kafka Topic id for this ACL
  google.protobuf.StringValue topic_id = 2;

  // The Kafka user name for this ACL
  google.protobuf.StringValue user_name = 3;

  // The Kafka user id for this ACL
  google.protobuf.StringValue user_id = 4;

  // Read access
  google.protobuf.BoolValue read = 5;

  // Read access
  google.protobuf.BoolValue write = 6;

  // Describe access
  google.protobuf.BoolValue describe = 7;

  // The Kafka cluster the acl belongs to
  google.protobuf.StringValue cluster = 8;

  // Asset service project for the acl's user
  google.protobuf.StringValue user_project = 9;

  // The owning team for the user
  google.protobuf.StringValue user_owning_team = 10;

  // The owning team for the topic
  google.protobuf.StringValue topic_owning_team = 11;

  // The Kafka environment
  infra_service.common.v1.Environment environment = 12;

  // Person who sent this reqeust
  google.protobuf.StringValue editor = 13;

  // Admin skip review
  google.protobuf.BoolValue admin_skip_review = 14;
}

// Request for creating a Kafka User
message CreateKafkaAclRequest {
  // Kafka Acl Values
  KafkaAclValues kafka_acl_values = 1;
}

// Response for creating a kafka acl
message CreateKafkaAclResponse {
  // Change request for the acl
  google.protobuf.StringValue change_request_id = 1;
}

// Request for updating a Kafka acl
message UpdateKafkaAclRequest {
  // Kafka ACL ID
  google.protobuf.StringValue resource_id = 1;
  // Kafka Acl Values
  KafkaAclValues kafka_acl_values = 2;
}

// Response for updating a kafka acl
message UpdateKafkaAclResponse {
  // Change request for the acl
  google.protobuf.StringValue change_request_id = 1;
}
