syntax = "proto3";

package storage_self_serve.v1;

import "storage_self_serve.v1/common.proto";

option go_package = "github.com/doordash/services-protobuf/generated/storage_self_serve.v1";

// StorageControlPlaneOperationType is the type of operation that the operation template is for.
enum StorageControlPlaneOperationType {
  // DO NOT USE. Placeholder for forward compatibility.
  STORAGE_CONTROL_PLANE_OPERATION_TYPE_UNSPECIFIED = 0;
  // GENERIC is the operation type for a generic operation.
  STORAGE_CONTROL_PLANE_OPERATION_TYPE_GENERIC = 1;
  // FLEXI_REPAVE is the operation type for a flexi repave operation.
  STORAGE_CONTROL_PLANE_OPERATION_TYPE_FLEXI_REPAVE = 2;
}

// Numeric constraints: e.g. min/max.
message NumberParameter {
  // min is the minimum value for the parameter.
  int64 min = 1;
  // max is the maximum value for the parameter.
  int64 max = 2;
  // step is the step value for the parameter.
  int64 step = 3;
  // default_value is the default value for the parameter.
  int64 default_value = 4;
}

// Argo values enum
message EnumParameter {
  // allowed_values is the list of allowed values for the parameter.
  repeated string allowed_values = 1;
  // default_value is the default value for the parameter.
  string default_value = 2;
}

// StringParameter is a parameter that is a string.
message StringParameter {
  // regex is the regex pattern for the parameter.
  string regex = 1;
  // max_length is the maximum length for the parameter.
  uint32 max_length = 2;
  // default_value is the default value for the parameter.
  string default_value = 3;
}

// ParameterDefinition is the definition of a parameter.
message ParameterDefinition {
  // name is the name of the parameter.
  string name = 1;
  // description is the description of the parameter.
  string description = 2;
  // required is whether the parameter is required.
  bool required = 3;
  // default_value is the default value for the parameter.
  string default_value = 4;

  // The actual type constraints and default value for this parameter
  oneof parameter_type {
    // string_param is the parameter definition for a string parameter.
    StringParameter string_param = 10;
    // enum_param is the parameter definition for an enum parameter.
    EnumParameter enum_param = 11;
    // number_param is the parameter definition for a number parameter.
    NumberParameter number_param = 12;
  }
}

// OperationTemplateMetadata is the metadata for an operation template.
message OperationTemplateMetadata {
  // name is the name of the operation template.
  string name = 1;
}

// ListOperationTemplatesForResourceCategoryRequest is the request for listing operation templates for a resource category.
message ListOperationTemplatesForResourceCategoryRequest {
  // resource_category is the category of the resource to list operation templates for.
  ResourceCategory resource_category = 1;
}

// ListOperationTemplatesForResourceCategoryResponse is the response for listing operation templates for a resource category.
message ListOperationTemplatesForResourceCategoryResponse {
  // operation_template_metadata is the metadata for the operation.
  repeated OperationTemplateMetadata operation_template_metadata = 1;
}

// GetOperationTemplateRequest is the request for getting an operation template.
message GetOperationTemplateRequest {
  // operation_type is the type of operation to get the template for.
  StorageControlPlaneOperationType operation_type = 1;
  // operation_template_name is the name of the operation template to get.
  string operation_template_name = 2;
}

// GetOperationTemplateResponse is the response for getting an operation template.
message GetOperationTemplateResponse {
  // operation_template_metadata is the metadata for the operation template.
  OperationTemplateMetadata operation_template_metadata = 1;
  // parameters is the list of parameters for the operation template.
  repeated ParameterDefinition parameters = 2;
}
