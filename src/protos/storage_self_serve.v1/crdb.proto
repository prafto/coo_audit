syntax = "proto3";

package storage_self_serve.v1;

import "google/protobuf/wrappers.proto";
import "infra_service.common/common.proto";

option go_package = "github.com/doordash/services-protobuf/generated/storage_self_serve.v1";

// Status types for Role
enum RoleType {
  // The role has no permission
  ROLE_TYPE_NO_PERMISSION_UNSPECIFIED = 0;
  // The role has read only access
  ROLE_TYPE_READ_ONLY = 1;
  // The role has read write access
  ROLE_TYPE_READ_WRITE = 2;
}

// Create CRDB user Request
message CreateCrdbUserRequest {
  // CRDB cluster name
  google.protobuf.StringValue cluster_name = 1;
  // CRDB database name
  google.protobuf.StringValue database_name = 2;
  // CRDB username
  google.protobuf.StringValue username = 3;
  // The Infra service environment
  infra_service.common.v1.Environment environment = 4;
  // Environemnt for created user
  google.protobuf.StringValue bucket_env = 5;
  // Team that owns this crdb cluster
  google.protobuf.StringValue owning_team = 6;
  // The project
  google.protobuf.StringValue project = 7;
  // Type of role getting created
  RoleType role_type = 8;
}

// Create CRDB user Response
message CreateCrdbUserResponse {
  // Change request for the acl
  google.protobuf.StringValue change_request_id = 1;
}

// Update CRDB user Request
message UpdateCrdbUserRequest {
  // User id
  google.protobuf.StringValue user_id = 1;
  // Version
  google.protobuf.StringValue version = 2;
  // Type of role getting updated
  RoleType role_type = 3;
  // The team that owns this cluster
  google.protobuf.StringValue owning_team = 4;
}

// Update CRDB user Response
message UpdateCrdbUserResponse {
  // Change request for the acl
  google.protobuf.StringValue change_request_id = 1;
}

// Crdb Self Serve Service
service CrdbSelfServeService {
  // Create crdb user
  rpc CreateCrdbUser(CreateCrdbUserRequest) returns (CreateCrdbUserResponse) {}
  // Update crdb user
  rpc UpdateCrdbUser(UpdateCrdbUserRequest) returns (UpdateCrdbUserResponse) {}
}
