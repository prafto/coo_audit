syntax = "proto3";

package customer_engagement_insights.v1;

import "common/common.proto";
import "common/money.proto";
import "common/service_client_config.proto";
import "customer_engagement_insights/loyalty_reporting_service.proto";
import "google/protobuf/wrappers.proto";

option go_package = "github.com/doordash/services-protobuf/generated/customer_engagement_insights/api/v1";
option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.customer_engagement_insights.rpc.api";

// Self serve loyalty program service
service SelfServeLoyaltyProgramService {
  option (service_client.client_config).circuit_breaker_config.failure_rate_threshold = 1.0;
  option (service_client.client_config).circuit_breaker_config.minimum_request_threshold = 50;
  // Gets the budget estimate
  rpc GetBudgetEstimate(GetBudgetEstimateRequest) returns (GetBudgetEstimateResponse);
}

// Get budget estimate request
message GetBudgetEstimateRequest {
  // Business id
  google.protobuf.StringValue business_id = 1;
  // Store id list
  repeated google.protobuf.StringValue store_ids = 2;
  // Channel (Marketplace, Storefront)
  Channel channel = 3;
  // Currency
  google.protobuf.StringValue currency = 4;
  // Point system type of loyalty program (ex: subtotal based)
  PointSystemType point_system_type = 5;
  // Criteria points to earn incentive
  google.protobuf.Int32Value incentive_criteria_points = 6;
  // Promo incentive
  PromoIncentive promo_incentive = 7;
  // min_spend_to_earn_points is in MAJOR units
  google.protobuf.Int32Value min_spend_to_earn_points = 8;
  // locale
  google.protobuf.StringValue locale = 9;
}

// Get budget estimate response
message GetBudgetEstimateResponse {
  // Sales with reward
  money.MonetaryFields sales_with_reward = 1;
  // Total estimated cost
  money.MonetaryFields total_estimated_cost = 2;
  // Reward name
  google.protobuf.StringValue reward_name = 3;
  // Marketing fee
  money.MonetaryFields marketing_fee = 4;
  // Estimated redemptions
  google.protobuf.Int32Value estimated_redemptions = 5;
  // Reward redeeming customers
  google.protobuf.Int32Value reward_redeeming_customers = 6;
}

// Point system type of program
enum PointSystemType {
  // Unspecified
  POINT_SYSTEM_TYPE_UNSPECIFIED = 0;
  // Visits based program
  POINT_SYSTEM_TYPE_VISITS = 1;
  // Subtotal based program
  POINT_SYSTEM_TYPE_SUBTOTAL = 2;
}

// Promotion incentive details
message PromoIncentive {
  // The value of discount
  oneof value {
    // Flat dollars amount off the target, unit amount, ex: $5 -> 500 for USD currency
    google.protobuf.Int32Value flat_amount_off = 1;
    // Percentage off the target
    google.protobuf.Int32Value percent_off = 2;
  }
}
