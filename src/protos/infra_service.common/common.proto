syntax = "proto3";

package infra_service.common.v1;

option go_package = "github.com/doordash/services-protobuf/generated/infra_service.common";
option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.infra_service.common";

// Environment is the k8s cluster used to provision the resource
enum Environment {
  // ENVIRONMENT_UNSPECIFIED is an unspecified cluster ( do not use it )
  ENVIRONMENT_UNSPECIFIED = 0;
  // ENVIRONMENT_MAIN_00_STAGING_US_WEST_2 staging cluster
  ENVIRONMENT_MAIN_00_STAGING_US_WEST_2 = 1;
  // ENVIRONMENT_MAIN_03_PROD_US_WEST_2 prod cluster
  ENVIRONMENT_MAIN_03_PROD_US_WEST_2 = 2;
  // ENVIRONMENT_MAIN_00_BUILD_PROD_US_WEST_2 build cluster
  ENVIRONMENT_MAIN_00_BUILD_PROD_US_WEST_2 = 3;
  // ENVIRONMENT_CELL_001_00_CELL_001_PROD_MAIN_US_WEST_2 cell 001 cluster
  ENVIRONMENT_CELL_001_00_CELL_001_PROD_MAIN_US_WEST_2 = 4;
  // ENVIRONMENT_CELL_002_00_CELL_002_PROD_MAIN_US_WEST_2 cell 002 cluster
  ENVIRONMENT_CELL_002_00_CELL_002_PROD_MAIN_US_WEST_2 = 5;
  // ENVIRONMENT_CELL_003_00_CELL_003_PROD_MAIN_US_WEST_2 cell 003 cluster
  ENVIRONMENT_CELL_003_00_CELL_003_PROD_MAIN_US_WEST_2 = 6;
  // ENVIRONMENT_CELL_004_00_CELL_004_PROD_MAIN_US_WEST_2 cell 004 cluster
  ENVIRONMENT_CELL_004_00_CELL_004_PROD_MAIN_US_WEST_2 = 7;
  // ENVIRONMENT_DEV_00_STAGING_US_WEST_2 infra dev cluster
  ENVIRONMENT_DEV_00_STAGING_US_WEST_2 = 8;
  // ENVIRONMENT_DEV dev environment for local testing
  ENVIRONMENT_DEV = 9;
  // ENVIRONMENT_LOCAL dev environment for local testing
  ENVIRONMENT_LOCAL = 10;
  // ENVIRONMENT_DATA_00_STAGING_US_WEST_2 staging cluster
  ENVIRONMENT_DATA_00_STAGING_US_WEST_2 = 11;
  // ENVIRONMENT_MAIN_00_PROD_US_WEST_2 prod cluster
  ENVIRONMENT_MAIN_00_PROD_US_WEST_2 = 12;
  // ENVIRONMENT_MAIN_02_PROD_US_WEST_2 prod cluster
  ENVIRONMENT_MAIN_02_PROD_US_WEST_2 = 13;
  // ENVIRONMENT_DATA_00_PROD_US_WEST_2 prod cluster
  ENVIRONMENT_DATA_00_PROD_US_WEST_2 = 14;
  // ENVIRONMENT_CELL_001_00_WOLT_PROD_MAIN_EU_WEST_1 cell 001 cluster
  ENVIRONMENT_CELL_001_00_WOLT_PROD_MAIN_EU_WEST_1 = 15;
  // ENVIRONMENT_CELL_002_00_WOLT_PROD_MAIN_EU_WEST_1 cell 002 cluster
  ENVIRONMENT_CELL_002_00_WOLT_PROD_MAIN_EU_WEST_1 = 16;
  // ENVIRONMENT_VAULT_LOCAL points to the local vault cluster, usually at http://localhost:8200
  ENVIRONMENT_VAULT_LOCAL = 17;
  // ENVIRONMENT_VAULT_STAGING points to the staging vault, https://vault-staging.doordash-int.com
  ENVIRONMENT_VAULT_STAGING = 18;
  // ENVIRONMENT_VAULT_PRODUCTION points to the prod vault, https://vault.doordash-int.com
  ENVIRONMENT_VAULT_PRODUCTION = 19;
  // ENVIRONMENT_DATA_01_PROD_US_WEST_2 prod cluster
  ENVIRONMENT_DATA_01_PROD_US_WEST_2 = 20;
  // ENVIRONMENT_DASH_COMPUTE is the Pedregal compute cluster
  ENVIRONMENT_DASH_COMPUTE = 21;
  // ENVIRONMENT_DASH_STORAGE is the Pedregal storage cluster
  ENVIRONMENT_DASH_STORAGE = 22;
  // ENVIRONMENT_DASH_MANAGEMENT is the Pedregal management cluster
  ENVIRONMENT_DASH_MANAGEMENT = 23;
}

// ResourceType is the type of resource infra service supports
enum ResourceType {
  // RESOURCE_TYPE_UNSPECIFIED is a unspecified resource ( do not use it )
  RESOURCE_TYPE_UNSPECIFIED = 0;
  // RESOURCE_TYPE_CACHE_CLUSTER is a cache cluster resource type
  RESOURCE_TYPE_CACHE_CLUSTER = 1;
  // RESOURCE_TYPE_DUMMY is a no-op Resource for pulse tests
  RESOURCE_TYPE_DUMMY = 2;
  // RESOURCE_TYPE_KAFKA_TOPIC is a Kafka topic resource type
  RESOURCE_TYPE_KAFKA_TOPIC = 3;
  // RESOURCE_TYPE_ECR is a ecr repo resource type
  RESOURCE_TYPE_ECR = 4;
  // RESOURCE_TYPE_CONSUL_SYNC drives consul sync traffic migrations for microservice apps
  RESOURCE_TYPE_CONSUL_SYNC = 5;
  // RESOURCE_TYPE_KAFKA_ACL is a Kafka acl resource type
  RESOURCE_TYPE_KAFKA_ACL = 6;
  // RESOURCE_TYPE_KAFKA_USER is a Kafka user resource type
  RESOURCE_TYPE_KAFKA_USER = 7;
  // RESOURCE_TYPE_IAM_ROLE is a standalone AWS IAM role
  RESOURCE_TYPE_IAM_ROLE = 8;
  // RESOURCE_TYPE_TRANSFER_FAMILY is a AWS Transfer family server. TODO: Remove
  RESOURCE_TYPE_TRANSFER_FAMILY = 9;
  // RESOURCE_TYPE_TRANSFER_FAMILY is a user for AWS Transfer family server. TODO: Remove
  RESOURCE_TYPE_TRANSFER_FAMILY_USER = 10;
  // RESOURCE_TYPE_CACHE_INSTANCE is a cache instance resource type
  RESOURCE_TYPE_CACHE_INSTANCE = 11;
  // RESOURCE_TYPE_S3 is a s3 resoruce type
  RESOURCE_TYPE_S3 = 12;
  // RESOURCE_TYPE_S3 is a resource for test scenarios
  RESOURCE_TYPE_TEST = 13;
  // RESOURCE_TYPE_CLOUD_CONSOLE_REVIEW is a resource type to trigger service creation once a review is approved
  RESOURCE_TYPE_CLOUD_CONSOLE_REVIEW = 14;
  // RESOURCE_TYPE_CRDB_USER is a resource type to manage CRDB Users
  RESOURCE_TYPE_CRDB_USER = 15;
  // RESOURCE_TYPE_TERRAFORM_TEST is a resource for test terraform provisioner
  RESOURCE_TYPE_TERRAFORM_TEST = 16;
  // RESOURCE_TYPE_TABULA_TABLE is the source of truth for a pinax table
  RESOURCE_TYPE_TABULA_TABLE = 17;
  // RESOURCE_TYPE_VAULT_SERVICE is for a service to operate in vault
  RESOURCE_TYPE_VAULT_SERVICE = 18;
  // RESOURCE_TYPE_SFTP is for AWS Transfer Family SFTP Server and User
  RESOURCE_TYPE_SFTP = 19;
  // RESOURCE_TYPE_PINOT_TABLE is a Pinot table resource type
  RESOURCE_TYPE_PINOT_TABLE = 20;
  // RESOURCE_TYPE_SERVERLESS_REDIS is a serverless redis cluster resource type
  RESOURCE_TYPE_SERVERLESS_REDIS = 21;
  // RESOURCE_TYPE_DATABRICKS_CLUSTER is a Databricks cluster designated for team ad-hoc use
  RESOURCE_TYPE_DATABRICKS_CLUSTER = 22;
  // RESOURCE_TYPE_DATABRICKS_CLUSTER is a Databricks identity for service interactions with Databricks
  RESOURCE_TYPE_DATABRICKS_SERVICE_PRINCIPAL = 23;
  // RESOURCE_TYPE_IAM_ABSTRACTION_SERVICE_ROLE is a AWS IAM abstraction k8s service role
  RESOURCE_TYPE_IAM_ABSTRACTION_SERVICE_ROLE = 24;
}
