syntax = "proto3";

package infra_service.web.v1;

import "google/protobuf/struct.proto";
import "google/protobuf/wrappers.proto";
import "infra_service.common/common.proto";
import "infra_service.web.v1/change_request.proto";
import "infra_service.web.v1/notification_preference.proto";
import "infra_service.web.v1/plugin.proto";
import "infra_service.web.v1/resource.proto";
import "infra_service.web.v1/review.proto";

option go_package = "github.com/doordash/services-protobuf/generated/infra_service.web.v1";
option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.infra_service.web.v1";

// WebService exposes core infra service operations
service WebService {
  // GetResource returns a description according to the resource id
  rpc GetResource(GetResourceRequest) returns (GetResourceResponse);
  // ListResourcesByType returns a list of resources of a given type
  rpc ListResourcesByType(ListResourcesByTypeRequest) returns (ListResourcesByTypeResponse);
  // CreateChangeRequest create a new change request and return its id
  rpc CreateChangeRequest(CreateChangeRequestRequest) returns (CreateChangeRequestResponse);
  // GetChangeRequest describe an existing change request
  rpc GetChangeRequest(GetChangeRequestRequest) returns (GetChangeRequestResponse);
  // ListReview returns a list of exisiting reviews
  rpc ListReview(ListReviewRequest) returns (ListReviewResponse);
  // GetReview returns an existing review based on the review id
  rpc GetReview(GetReviewRequest) returns (GetReviewResponse);
  // CreateDecision create a new decision to a specific review request
  rpc CreateDecision(CreateDecisionRequest) returns (CreateDecisionResponse);
  // GetNotificationPreference returns a list of slack channels who receive notifications
  rpc GetNotificationPreference(GetNotificationPreferenceRequest) returns (GetNotificationPreferenceResponse);
  // SetNotificationPreference configures the infra-service notification preference of an okta group
  rpc SetNotificationPreference(SetNotificationPreferenceRequest) returns (SetNotificationPreferenceResponse);
  // GetVersions returns a list of version data for a given resource
  rpc GetVersions(GetVersionsRequest) returns (GetVersionsResponse);
  // GetVersions returns a list of changes requests for given IDs
  rpc BatchGetChangeRequests(BatchGetChangeRequestsRequest) returns (BatchGetChangeRequestsResponse);
  // StartExecutorMigration prepares a resource for executor migration
  rpc StartExecutorMigration(StartExecutorMigrationRequest) returns (StartExecutorMigrationResponse);
  // FinishExecutorMigration finalizes a resource's executor migration
  rpc FinishExecutorMigration(FinishExecutorMigrationRequest) returns (FinishExecutorMigrationResponse);
  // CreatePlugin creates a new plugin
  rpc CreatePlugin(CreatePluginRequest) returns (CreatePluginResponse);
  // GetPlugin retrieves a plugin
  rpc GetPlugin(GetPluginRequest) returns (GetPluginResponse);
  // UpdatePlugin updates a plugin
  rpc UpdatePlugin(UpdatePluginRequest) returns (UpdatePluginResponse);
  // DeletePlugin deletes a plugin
  rpc DeletePlugin(DeletePluginRequest) returns (DeletePluginResponse);
  // ListPlugins lists all plugins
  rpc ListPlugins(ListPluginsRequest) returns (ListPluginsResponse);
  // CreatePluginVersion creates a new version of a plugin
  rpc CreatePluginVersion(CreatePluginVersionRequest) returns (CreatePluginVersionResponse);
  // GetPluginVersion gets a version of a plugin
  rpc GetPluginVersion(GetPluginVersionRequest) returns (GetPluginVersionResponse);
  // DeletePluginVersion deletes a version of a plugin if it is not in use
  rpc DeletePluginVersion(DeletePluginVersionRequest) returns (DeletePluginVersionResponse);
  // ListPluginVersions lists all versions of a plugin for a given major version
  rpc ListPluginVersions(ListPluginVersionsRequest) returns (ListPluginVersionsResponse);
  // DeployPluginVersion sets the specified plugin version to be the active version for a plugin
  rpc DeployPluginVersion(DeployPluginVersionRequest) returns (DeployPluginVersionResponse);
  // BatchGetChangeRequestsForResource gets any existing change requests for all provided resources
  rpc BatchGetChangeRequestsForResource(BatchGetChangeRequestsForResourceRequest) returns (BatchGetChangeRequestsForResourceResponse);
  // PreviewChangeRequest generates a preview of a change request
  rpc PreviewChangeRequest(PreviewChangeRequestRequest) returns (PreviewChangeRequestResponse);
  // GetChangeRequestByReviewID gets a change request by its review
  rpc GetChangeRequestByReviewID(GetChangeRequestByReviewIDRequest) returns (GetChangeRequestByReviewIDResponse);
}
