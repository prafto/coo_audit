syntax = "proto3";

package infra_service.web.v1;

import "google/protobuf/struct.proto";
import "google/protobuf/wrappers.proto";
import "infra_service.common/common.proto";

option go_package = "github.com/doordash/services-protobuf/generated/infra_service.web.v1";
option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.infra_service.web.v1";

// ReviewType describes the type of a review (e.g. DIFF)
enum ReviewType {
  // REVIEW_TYPE_UNSPECIFIED indicates the type of the review is unknown
  REVIEW_TYPE_UNSPECIFIED = 0;
  // REVIEW_TYPE_DIFF indicates the type of this review is a diff of resources
  REVIEW_TYPE_DIFF = 1;
}

// ReviewStatus describes the current state of a review (e.g. PENDING_APPROVAL)
enum ReviewStatus {
  // REVIEW_STATUS_UNSPECIFIED indicates the statusÂ of the review is unknown
  REVIEW_STATUS_UNSPECIFIED = 0;
  // REVIEW_STATUS_PENDING_APPROVAL indicates the review is still waiting for decision
  REVIEW_STATUS_PENDING_APPROVAL = 1;
  // REVIEW_STATUS_APPROVED indicates the reivew is approved
  REVIEW_STATUS_APPROVED = 2;
  // REVIEW_STATUS_DECLINED indicates the review is declined
  REVIEW_STATUS_DECLINED = 3;
}

// DecisionAction describes if decision is made on the review (e.g. APPROVED)
enum DecisionAction {
  // DECISION_ACTION_UNSPECIFIED indicates the action is not specified
  DECISION_ACTION_UNSPECIFIED = 0;
  // DECISION_ACTION_APPROVED indicates an approval is attached to a review
  DECISION_ACTION_APPROVED = 1;
  // DECISION_ACTION_DECLINED indicates a decline is attached to a review
  DECISION_ACTION_DECLINED = 2;
}

// Decision defines the decision of a review
message Decision {
  // result of the decision
  DecisionAction result = 1;
  // group who makes the decision
  google.protobuf.StringValue group = 2;
  // reviewer who writes the decision
  google.protobuf.StringValue reviewer = 3;
  // reason of making such decision
  google.protobuf.StringValue reason = 4;
  // created_on specifies the decision created datetime
  google.protobuf.StringValue created_on = 5;
}

// Review defines the body of review
message Review {
  // id of the existing review
  google.protobuf.StringValue id = 1;
  // type of the review (e.g. DIFF)
  ReviewType type = 2;
  // status of the review (e.g. PENDING_APPROVAL)
  ReviewStatus status = 3;
  // content of the review
  google.protobuf.StringValue content = 4;
  // requester specifies who sends out the review request
  google.protobuf.StringValue requester = 5;
  // requirements defines which team and how many approvals required to greenlight this review
  map<string, int64> requirements = 6;
  // decisions define the list of decisions made by reviewer
  repeated Decision decisions = 7;
  // created_on specifies the review created datetime
  google.protobuf.StringValue created_on = 8;
  // preview_id is the id of the change request which contains preview details (if any)
  google.protobuf.StringValue preview_id = 9 [deprecated = true];
}

// ListReviewRequest defines the request body of listing existing reviews
message ListReviewRequest {
  // group that used for filtering the list of review requests
  google.protobuf.StringValue group = 1;
  // status that used for filtering the list of review requests
  ReviewStatus status = 2;
  // page_token represents the token used to paginate the next series of results
  google.protobuf.StringValue page_token = 3;
  // page_size represents the desired number of results per request
  int64 page_size = 4;
}

// ListReviewResponse defines the response body of list of reviews
message ListReviewResponse {
  // reviews define a list of existing reviews
  repeated Review reviews = 8;
  // next_page_token is the token used to paginate the next set of results (empty string means end of results)
  google.protobuf.StringValue next_page_token = 9;
}

// GetReviewRequest defines the request body to describe a single review
message GetReviewRequest {
  // id of the existing review
  google.protobuf.StringValue id = 1;
}

// GetReviewResponse defines the return body of a single review
message GetReviewResponse {
  // id of the existing review
  google.protobuf.StringValue id = 1;
  // type of the review (e.g. DIFF)
  ReviewType type = 2;
  // status of the review (e.g. PENDING_APPROVAL)
  ReviewStatus status = 3;
  // content of the review
  google.protobuf.StringValue content = 4;
  // requester specifies who sends out the review request
  google.protobuf.StringValue requester = 5;
  // requirements defines which team and how many approvals required to greenlight this review
  map<string, int64> requirements = 6;
  // decisions define the list of decisions made by reviewer
  repeated Decision decisions = 7;
  // created_on specifies the review created datetime
  google.protobuf.StringValue created_on = 8;
  // preview_id is the id of the change request which contains preview details (if any)
  google.protobuf.StringValue preview_id = 9;
}

// CreateDecisionRequest defines the request body to create a decision for a review
message CreateDecisionRequest {
  // review_id defines which review the decision should be attached onto
  google.protobuf.StringValue review_id = 1;
  // decision describes what is the decision to this review
  DecisionAction decision = 2;
  // reason defines why such decision is made
  google.protobuf.StringValue reason = 3;
}

// CreateDecisionResponse defines the respond body after successfully created a decision
message CreateDecisionResponse {
  // id defines the id of decision which is newly created
  google.protobuf.StringValue id = 1;
}
