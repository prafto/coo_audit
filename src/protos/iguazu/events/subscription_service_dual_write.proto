syntax = "proto3";

package iguazu.events.v1;

import "common/common.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option go_package = "github.com/doordash/services-protobuf/generated/iguazu/events";
option java_multiple_files = true;
option java_package = "com.doordash.iguazu.events.v1";

// NOTE: IF YOU ARE ADDING FIELDS/COLUMNS WITH USER PERSONALLY IDENTIFIABLE INFORMATION, PLEASE FOLLOW THIS
// DOCUMENTATION IN ORDER TO ENSURE CCPA COMPLIANCE:
// https://doordash.atlassian.net/wiki/spaces/Eng/pages/3160834089/Making+Datalake+Table+CCPA+Compliant

// Message for subscription service dual write event
message SubscriptionServiceDualWriteEvent {
  option (common.dataframe_transformations) = "pii_obfuscation";

  // The timestamp when the dual write event has happened
  google.protobuf.Timestamp timestamp = 1 [(common.timestamp_granularity) = "TIMESTAMP_PROTOBUF"];
  // The consumer id of the dual write event
  int64 consumer_id = 2 [(common.pii_type) = "CONSUMER_ID"];
  // The user id of the dual write event
  int64 user_id = 3 [(common.pii_type) = "USER_ID"];
  // The JSON-encoded message from the CDC
  string cdc_message_json = 4 [(common.pii_type) = "CONSUMER_ID"];
  // The JSON-encoded subscription pulled from the legacy system
  string fetched_legacy_state_json = 9 [(common.pii_type) = "CONSUMER_ID"];
  // The JSON-encoded generated GSM state (a list of protos)
  string generated_gsm_state_json = 5;
  // The comparison result of the GSM state and the CDC message
  ComparisonResult comparison_result = 6;
  // Extra information contained in the comparison result (e.g., message for mismatch, or stacktrace for crash)
  string comparison_result_extra = 7;
  // If the dual write processing has crashed, the stacktrace of the crash
  string error_stacktrace = 8;
}

// Shadows Kotlin's GsmDualWriteComparator.Result
enum ComparisonResult {
  // Unknown comparison result
  COMPARISON_RESULT_UNSPECIFIED = 0;
  // The GSM state and the CDC message match
  COMPARISON_RESULT_OK = 1;
  // The GSM state and the CDC message do not match
  COMPARISON_RESULT_MISMATCH = 2;
  // The comparator has crashed
  COMPARISON_RESULT_CRASH = 3;
}
