syntax = "proto3";

package iguazu.events.v1;

import "google/protobuf/timestamp.proto";

option go_package = "github.com/doordash/services-protobuf/generated/iguazu/events";
option java_multiple_files = true;
option java_package = "com.doordash.iguazu.events.v1";

// Iguazu event accept_modal_payload_sent_event sent before sending the new accept modal payload to client
message AcceptModalPayloadSentV2Event {
  // assignment id for the task group
  string assignment_id = 1;
  // shift id of the dasher
  int64 shift_id = 2;
  // id of the dasher
  int64 dasher_id = 3;
  // mp, drive or dsd
  string fulfillment_type = 4;
  // determines if the order is HQHP or not
  bool is_high_paying_order = 5;
  // determines if the order is dsd or not. Can be derived from fulfillment_type but here for backward compatibility
  bool is_dsd = 6;
  // determines if the order is cash order or not
  bool is_cash_order = 7;
  // determines if the earnings mode is time mode or not
  bool is_time_mode = 8;
  // determines if it is a peer to peer order
  bool is_p2p = 9;
  // determines if it is a returnable delivery
  bool is_returnable_delivery = 10;
  // determines if post tipping is eligible for this order
  bool is_post_tipping_eligible = 11;
  // determines if it is a batched order
  bool is_batched = 12;
  // determines if redcard required tag is shown
  bool is_redcard_required = 13;
  // determines if catering bag required tag is shown
  bool is_catering_bag_required = 14;
  // determines if catering setting required tag is shown
  bool is_catering_setup_required = 15;
  // determines if pizza bag required tag is shown
  bool is_pizza_bag_required = 16;
  // determines if it is an alchohol order
  bool is_alchohol = 17;
  // number of deliveries in the current route/assignment
  int32 delivery_count = 18;
  // time when the offer was assigned
  google.protobuf.Timestamp offer_assigned_at = 19;
  // time when the offer was sent by the backed to the client
  google.protobuf.Timestamp offer_sent_at = 20;
  // time when the offer expires
  google.protobuf.Timestamp offer_expires_at = 21;
  // seconds remaining for dasher to confirm, determined from above fields
  int32 seconds_remaining_to_confirm = 22;
  // pay data header shown to the dasher
  string pay_shown_to_dasher = 23;
  // effort estimate shown to the dasher
  string effort_estimate_shown = 24;
  // delivery_by time shown to the dasher
  google.protobuf.Timestamp delivery_time_shown_to_dasher = 25;
  // user locale/language preference
  string locale = 26;
  // uuid of the current delivery
  string delivery_uuid = 27;
  // legacy assignment id
  int64 legacy_assignment_id = 28;
  // is dasher place order protocol, for dasher stores
  bool is_dasher_place = 29;
  // is depot delivery; for dasher labs; self driving robot pickup
  bool is_depot = 30;
  // is packages, for return pickups
  bool is_packages = 31;
  // estimated distance shown to dasher
  int32 estimated_distance_meters = 32;
  // offered pay unit amount
  int32 offered_pay_unit_amount = 33;
  // currency of offered pay
  string offered_pay_currency = 34;
  // is grocery pro order
  bool is_grocery_pro_order = 35;
  // starting point id of the delivery
  int64 starting_point_id = 36;
  // delivery ids of this route/assignment
  string delivery_ids = 37;
  // works units in this route/assigment
  string work_units = 38;
  // maximum duration in seconds for the dasher to accept the assignment
  int32 accept_assignment_max_duration_seconds = 39;
  // bonuses shown in descriptionPrimary
  repeated string description_primary = 40;
  // the busyness level of the drop off SP (Long distance delivery)
  string ldd_drop_off_sp_busyness_level = 41;
  // dasher total peak pay amount for the drop off SP (Long distance delivery)
  int32 ldd_drop_off_sp_peak_pay_amount = 42;
  // the accept modal payload in json format
  string accept_modal_payload_json = 43;
  // compliance code
  string compliance_code = 44;
}
