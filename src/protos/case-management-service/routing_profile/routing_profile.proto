syntax = "proto3";

package case_management_service.routing_profile.v1;

import "case-management-service/common.proto";
import "case-management-service/queue/queue.proto";
import "common/service_client_config.proto";
import "doordash.api/annotations.proto";
import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.casemanagement.routing_profile";

// Service for Routing Profile Management Service
service RoutingProfileManagementService {
  option (doordash.api.service) = {
    name: "case-management-service"
    url: "case-management-service-web.service.prod.ddsd"
    port: 50051
    name_spaces: ["case-management-service"]
    api_key_name: "CASE_MANAGEMENT_SERVICE_API_KEY_FOR_UNIFIED_GATEWAY"
    owner: {
      id: "opex-platform-for-managing-cases"
      name: "case-management-service"
      slack_channel: "#ask-case-management-platform"
      email_alias: "team-case-management@doordash.com"
    }
    target_products: [INTERNAL]
  };
  // Timeout after 700 milliseconds.
  option (service_client.client_config).response_attempt_timeout_millis = 700;
  // Make a total 4 attempts (initial + three retries).

  // Loads list of routing profiles
  rpc FetchRoutingProfileList(FetchRoutingProfileListRequest) returns (FetchRoutingProfileListResponse) {
    option (google.api.http) = {get: "/case-management-service/v1/routing_profiles/list"};

    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: DEV
      authorization: [DD_USER]
      target_products: [INTERNAL]
      role_based_authorization: {
        mode: ANY,
        roles: [
          "perm_access_teammate_headquarters",
          "perm_risk_workstation"
        ]
      }
      authentication_config: {enable_okta_verification: true}
    };
  }

  // Creates a new routing profile
  rpc CreateRoutingProfile(CreateRoutingProfileRequest) returns (CreateRoutingProfileResponse) {
    option (google.api.http) = {
      post: "/case-management-service/v1/routing_profiles"
      body: "*"
    };

    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: DEV
      authorization: [DD_USER]
      target_products: [INTERNAL]
      role_based_authorization: {
        mode: ANY,
        roles: [
          "perm_access_teammate_headquarters",
          "perm_risk_workstation"
        ]
      }
      authentication_config: {enable_okta_verification: true}
    };
  }

  // Updates an existing routing profile
  rpc UpdateRoutingProfile(UpdateRoutingProfileRequest) returns (UpdateRoutingProfileResponse) {
    option (google.api.http) = {
      put: "/case-management-service/v1/routing_profiles"
      body: "*"
    };

    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: DEV
      authorization: [DD_USER]
      target_products: [INTERNAL]
      role_based_authorization: {
        mode: ANY,
        roles: [
          "perm_access_teammate_headquarters",
          "perm_risk_workstation"
        ]
      }
      authentication_config: {enable_okta_verification: true}
    };
  }

  // Upsert routing profile based auto assignment
  rpc UpsertRoutingProfileAutoAssignment(UpsertRoutingProfileAutoAssignmentRequest) returns (UpsertRoutingProfileAutoAssignmentResponse);
}

// RoutingProfile message
message RoutingProfile {
  // ID
  google.protobuf.StringValue routing_profile_id = 1;
  // Display name
  google.protobuf.StringValue display_name = 2;
  // Is active
  google.protobuf.BoolValue is_active = 3;
  // Created at timestamp
  google.protobuf.Timestamp created_at = 4;
  // Updated at timestamp
  google.protobuf.Timestamp updated_at = 5;
  // Queues associated with the routing profile
  repeated case_management_service.queue.v1.Queue queues = 6;
  // Description
  google.protobuf.StringValue description = 7;
  // Agent Count
  google.protobuf.Int32Value agent_count = 8;
}

// FetchRoutingProfileListRequest message
message FetchRoutingProfileListRequest {
  // Pagination options
  case_management_service.v1.PaginationOptions pagination_options = 1;
  // Search query for routing profiles
  google.protobuf.StringValue query = 2;
}

// FetchRoutingProfileListResponse message
message FetchRoutingProfileListResponse {
  // List of routing profiles
  repeated RoutingProfile routing_profiles = 1;
}

// QueuePriority message
message QueuePriority {
  // Queue Id
  google.protobuf.StringValue queue_id = 1;
  // Priority Level
  google.protobuf.Int32Value priority = 2;
}

// CreateRoutingProfileRequest message
message CreateRoutingProfileRequest {
  // Display name of the routing profile
  google.protobuf.StringValue display_name = 1;
  // Is active
  google.protobuf.BoolValue is_active = 2;
  // Reserved for deprecated Queue Id list
  reserved 3;
  reserved "queue_ids";
  // Description
  google.protobuf.StringValue description = 4;
  // QueuePriority messages
  repeated QueuePriority queue_priorities = 5;
}

// CreateRoutingProfileResponse message
message CreateRoutingProfileResponse {
  // Created routing profile
  RoutingProfile routing_profile = 1;
}

// GetRoutingProfileRequest message
message GetRoutingProfileRequest {
  // Routing profile ID
  string routing_profile_id = 1;
}

// GetRoutingProfileResponse message
message GetRoutingProfileResponse {
  // Retrieved routing profile
  RoutingProfile routing_profile = 1;
}

// UpdateRoutingProfileRequest message
message UpdateRoutingProfileRequest {
  // Deprecated RoutingProfile Parameter
  reserved 1;
  reserved "routing_profile";
  // Routing Profile ID
  google.protobuf.StringValue routing_profile_id = 2;
  // Display name of the routing profile
  google.protobuf.StringValue display_name = 3;
  // Is active
  google.protobuf.BoolValue is_active = 4;
  // Description
  google.protobuf.StringValue description = 5;
  // QueuePriority messages
  repeated QueuePriority queue_priorities = 6;
}

// UpdateRoutingProfileResponse message
message UpdateRoutingProfileResponse {
  // Updated routing profile
  RoutingProfile routing_profile = 1;
}

// request for UpsertRoutingProfileAutoAssignment
message UpsertRoutingProfileAutoAssignmentRequest {
  // routing profile id
  google.protobuf.StringValue routing_profile_id = 1;
  // Strategy defining how assignment should work, ex. MICRO_BATCH_POLLING
  google.protobuf.StringValue strategy = 2;
}

// response for UpsertRoutingProfileAutoAssignment
message UpsertRoutingProfileAutoAssignmentResponse {
  // routing profile id
  google.protobuf.StringValue routing_profile_id = 1;
  // Strategy defining how assignment should work, ex. MICRO_BATCH_POLLING
  google.protobuf.StringValue strategy = 2;
}
