syntax = "proto3";

package webgrpcserviceplayground.v1;

import "doordash.api/annotations.proto";
import "google/api/annotations.proto";
import "google/protobuf/wrappers.proto";
import "lego.response/lego_response.proto";
import "mosaic_test/mosaic.proto";

option java_multiple_files = true;
option java_package = "com.doordash.rpc.webgrpcserviceplayground";

// Hello service definition.
service HelloService {
  option (doordash.api.service) = {
    name: "web-grpc-service-playground"
    url: "web-grpc-service-playground-web.service.prod.ddsd"
    port: 50051
    name_spaces: ["web-grpc-service-playground"]
    owner: {
      id: "web-platform"
      name: "web-infra"
      slack_channel: "#ask-web-infra"
      email_alias: "web-infra@doordash.com"
    }
    target_products: [
      CX,
      DX,
      MX
    ]
  };

  // Sends a greeting
  rpc SayHello(HelloServiceSayHelloRequest) returns (HelloServiceSayHelloResponse) {
    option (google.api.http) = {
      post: "/web-grpc-service-playground/v1/sayHello"
      body: "*"
    };
    option (doordash.api.endpoint) = {
      tier: T3
      lifecycle: DEV
      authorization: [NONE]
    };
  }

  // Get movies
  rpc GetMovies(HelloServiceGetMoviesRequest) returns (HelloServiceGetMoviesResponse) {
    option (google.api.http) = {get: "/web-grpc-service-playground/v1/getMovies"};
    option (doordash.api.endpoint) = {
      tier: T3
      lifecycle: DEV
      authorization: [NONE]
    };
  }

  // Get food items
  rpc GetFoods(HelloServiceGetFoodsRequest) returns (HelloServiceGetFoodsResponse) {
    option (google.api.http) = {get: "/web-grpc-service-playground/v1/getFoods"};
    option (doordash.api.endpoint) = {
      tier: T3
      lifecycle: DEV
      authorization: [NONE]
    };
  }

  // Get car items
  rpc GetCars(HelloServiceGetCarsRequest) returns (HelloServiceGetCarsResponse) {
    option (google.api.http) = {get: "/web-grpc-service-playground/v1/getCars"};
    option (doordash.api.endpoint) = {
      tier: T3
      lifecycle: DEV
      authorization: [NONE]
    };
  }

  // Get a mosaic view
  rpc GetMosaicView(HelloServiceGetMosaicViewRequest) returns (HelloServiceGetMosaicViewResponse) {
    option (google.api.http) = {get: "/web-grpc-service-playground/v1/getMosaicView"};
    option (doordash.api.endpoint) = {
      tier: T3
      lifecycle: DEV
      authorization: [NONE]
    };
  }

  // Get Movies by genre
  rpc GetMoviesByGenre(HelloServiceGetMoviesByGenreRequest) returns (HelloServiceGetMoviesByGenreResponse) {
    option (google.api.http) = {get: "/web-grpc-service-playground/v1/getMoviesByGenre"};
    option (doordash.api.endpoint) = {
      tier: T3
      lifecycle: DEV
      authorization: [NONE]
    };
  }
}

// The request message containing the user's name.
message HelloServiceSayHelloRequest {
  // hello message name
  string name = 1;
}

// The response message containing the greetings
message HelloServiceSayHelloResponse {
  // hello message
  string message = 1;
}

// A request to get movies
message HelloServiceGetMoviesRequest {
  // movie genre
  string genre = 1;
}

// A response containing movies
message HelloServiceGetMoviesResponse {
  // movie names
  repeated string movies = 1;
}

// A request to get food items
message HelloServiceGetFoodsRequest {}

// A response containing food items
message HelloServiceGetFoodsResponse {
  // food names
  repeated string foods = 1;
}

// A request to get car items
message HelloServiceGetCarsRequest {
  // optional year of the car
  google.protobuf.StringValue year = 1;
}

// A car type
message HelloServiceCar {
  // optional name of the car
  google.protobuf.StringValue name = 1;
}

// A response containing food items
message HelloServiceGetCarsResponse {
  // cars
  repeated HelloServiceCar cars = 1;
}

// A request to get a mosaic view
message HelloServiceGetMosaicViewRequest {
  // view type
  string type = 1;
}

// The response containing a mosaic view
message HelloServiceGetMosaicViewResponse {
  // a lego response
  lego.response.v1.LegoPageResponse response = 1;
  // a mosaic response
  mosaic_test.v1.MosaicPage mosaic_response = 2;
}

// A request for movies by a genre
message HelloServiceGetMoviesByGenreRequest {
  // movie genre
  MovieGenre genre = 1;
}

// A response containing movies
message HelloServiceGetMoviesByGenreResponse {
  // movie names
  repeated string movies = 1;
}

// Movie Genre
enum MovieGenre {
  // movie genre unspecified
  MOVIE_GENRE_UNSPECIFIED = 0;
  // movie genre comedy
  MOVIE_GENRE_COMEDY = 1;
  // movie genre family
  MOVIE_GENRE_FAMILY = 2;
  // movie genre horror
  MOVIE_GENRE_HORROR = 3;
}
