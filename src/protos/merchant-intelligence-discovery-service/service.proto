syntax = "proto3";

package doordash_merchant_intelligence_discovery_service;

import "async_platform_callback_service.v1/callback_service.proto";
import "common/code.proto";
import "common/service_client_config.proto";
import "google/protobuf/wrappers.proto";

option go_package = "mids";
option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.mids";

service MerchantIntelligenceDiscoveryService {
  option (service_client.client_config).response_attempt_timeout_millis = 10000;
  option (service_client.client_config).retry_config.max_attempts = 4;

  rpc GetSourceMerchant(MerchantSourceIdentifier) returns (MerchantSource);
  rpc GetSourceMerchants(MerchantSourceIdentifiers) returns (MerchantSources);
  rpc PutSourceMerchant(MerchantSource) returns (MerchantSource);
  rpc PutSourceMerchants(MerchantSources) returns (MerchantSources);
  rpc StandardizeSourceMerchant(MerchantSourceIdentifier) returns (StandardizedMerchant);
  rpc MatchSourceMerchant(MerchantSourceIdentifier) returns (Merchant);
  rpc ProcessSourceFile(SourceFileLocation) returns (WorkflowIdentifier);
  rpc GetProcessSourceFileStatus(WorkflowIdentifier) returns (Workflow);
  rpc TrajectMxRefresh(TrajectMxRefreshRequest) returns (TrajectMxRefreshStatus);
  rpc GetTrajectRefreshMxIds(TrajectRefreshMxIdsRequest) returns (TrajectRefreshMxIds);
  rpc SaveTrajectData(TrajectDataCallbackIdentifier) returns (TrajectDataIdentifier);
  rpc GetMxNimdaIdByExternalStoreId(GetMxNimdaIdByExternalStoreIdRequest) returns (GetMxNimdaIdByExternalStoreIdResponse);
  rpc GetMerchantsToStandardize(GetMerchantsToStandardizeRequest) returns (MerchantSourceIdentifiers);
  rpc GetMerchantsToMatch(GetMerchantsToMatchRequest) returns (MerchantSourceIdentifiers);
  rpc MatchRawMerchant(MerchantSource) returns (Merchant);
  rpc ScheduleTrajectRefresh(ScheduleTrajectRefreshRequest) returns (ScheduleTrajectRefreshResponse);
  rpc BackfillMissingRefresh(BackfillMissingRefreshRequest) returns (BackfillMissingRefreshResponse);
  rpc GetTotalMerchantCount(GetTotalMerchantCountRequest) returns (GetTotalMerchantCountResponse);
  rpc GetMxIdsForTrajectRefresh(GetMxIdsForTrajectRefreshRequest) returns (TrajectRefreshMxIds);
  rpc DeleteAsyncEvent(DeleteAsyncEventRequest) returns (DeleteAsyncEventResponse);
  rpc GetAsyncEvent(GetAsyncEventRequest) returns (GetAsyncEventResponse);
  rpc BatchDeleteGooglePlaceRecords(BatchDeleteGooglePlaceRecordsRequest) returns (BatchDeleteGooglePlaceRecordsResponse);
}

message TrajectDataIdentifier {
  string traject_id = 1;
  string merchant_id = 2;
}

message TrajectDataCallbackIdentifier {
  string merchant_id = 1;
  string json_id = 2;
}

message TrajectRefreshMxIdsRequest {}

message TrajectRefreshMxIds {
  repeated string merchant_id = 1;
}

message TrajectMxRefreshRequest {
  string merchant_id = 1;
}

message TrajectMxRefreshStatus {
  string merchant_id = 1;
  string status = 2;
}

message MerchantSourceIdentifier {
  string source_name = 1;
  string source_id = 2;
}

message Address {
  string address_1 = 1;
  string address_2 = 2;
  string administrative_area_level_1 = 3;
  string country_iso_3 = 4;
  string country_iso_2 = 5;
  string locality = 6;
  string postal_code = 7;
  string premise = 8;
  string premise_number = 9;
  string thoroughfare = 10;
  string thoroughfare_name = 11;
  string thoroughfare_trailing_type = 12;
  double latitude = 13;
  double longitude = 14;
}

message RawAddress {
  string street_address = 1;
  string street_name = 2;
  string street_primary_number = 3;
  string street_secondary_number = 4;
  string locality = 5;
  string administrative_area_level_1 = 6;
  string country = 7;
  string postal_code = 8;
  string latitude = 9;
  string longitude = 10;
}

message MerchantSource {
  MerchantSourceIdentifier id = 1;
  string name = 2;
  string phone = 3;
  RawAddress address = 4;
  map<string, string> metadata = 5;
  bool mids_only = 6;
  map<string, string> verticals_metadata = 7;
  string latin_name = 8;
  google.protobuf.StringValue default_vertical = 9;
  string native_address = 10;
  google.protobuf.BoolValue request_deck_rank = 11;
  google.protobuf.BoolValue request_mx_validation = 12;
}

message StandardizedMerchant {
  MerchantSourceIdentifier id = 1;
  string name = 2;
  string phone = 3;
  map<string, Address> language_address = 4;
  string google_place_id = 5;
  string invalid_reason = 6;
  string latin_name = 7;
}

message MerchantMatch {
  MerchantSourceIdentifier id = 1;
  double score = 2;
}

message Merchant {
  string id = 1;
  string name = 2;
  string phone = 3;
  map<string, Address> language_address = 4;
  string google_place_id = 5;
  repeated MerchantMatch matches = 6;
  string latin_name = 7;
  string door_dash_store_id = 8;
  google.protobuf.StringValue deck_rank = 9;
  google.protobuf.StringValue marketplace_store_id = 10;
  code.Code code = 11;
  google.protobuf.StringValue error = 12;
  google.protobuf.StringValue drive_store_id = 13;
  google.protobuf.BoolValue mx_validated = 14;
}

message WorkflowIdentifier {
  string id = 1;
}

message Workflow {
  string id = 1;
  enum WorkflowStatus {
    WORKFLOW_STATUS_UNSPECIFIED = 0;
    WORKFLOW_STATUS_PENDING = 1;
    WORKFLOW_STATUS_IN_PROGRESS = 2;
    WORKFLOW_STATUS_COMPLETED = 3;
    WORKFLOW_STATUS_FAILED = 4;
  }
  WorkflowStatus status = 2;
}

message SourceFileLocation {
  string bucket = 1;
  string key = 2;
}

message MerchantSources {
  repeated MerchantSource merchant_sources = 1;
}

message MerchantSourceIdentifiers {
  repeated MerchantSourceIdentifier merchant_source_identifiers = 1;
}

message GetMxNimdaIdByExternalStoreIdRequest {
  int64 external_id = 1;
}

message GetMxNimdaIdByExternalStoreIdResponse {
  int64 nimda_id = 1;
}

message GetMerchantsToStandardizeRequest {
  int32 partition = 1;
  int32 number_of_partitions = 2;
}

message GetMerchantsToMatchRequest {
  int32 partition = 1;
  int32 number_of_partitions = 2;
}

message ScheduleTrajectRefreshRequest {
  string merchant_id = 1;
}

message ScheduleTrajectRefreshResponse {
  string merchant_id = 1;
  code.Code code = 2;
  google.protobuf.StringValue error = 3;
}

message BackfillMissingRefreshRequest {
  int64 chunk_size = 1;
  int64 offset = 2;
}

message BackfillMissingRefreshResponse {
  code.Code code = 1;
  google.protobuf.StringValue error = 2;
}

message GetTotalMerchantCountRequest {}

message GetTotalMerchantCountResponse {
  int64 count = 1;
}

message GetMxIdsForTrajectRefreshRequest {}

message DeleteAsyncEventRequest {
  string event_id = 1;
}

message DeleteAsyncEventResponse {
  // Empty placeholder
}

message GetAsyncEventRequest {
  string event_id = 1;
}

message GetAsyncEventResponse {
  async_platform_callback_service.v1.Event event = 1;
  google.protobuf.BoolValue not_found = 2;
  google.protobuf.StringValue error = 3;
}

message BatchDeleteGooglePlaceRecordsRequest {
  google.protobuf.Int32Value batch_size = 1;
}

message BatchDeleteGooglePlaceRecordsResponse {
  google.protobuf.BoolValue completed = 1;
}
