syntax = "proto3";

package data_quality_service.v2;

import "data_quality_service.v1/data_quality_service.proto";
import "data_tool_grpc_service.v1/common.proto";
import "google/protobuf/any.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.data.quality.v2";

// Indicate whether the request has been successfully completed
enum DataQualityResponseCode {
  // Unspecified
  DATA_QUALITY_RESPONSE_CODE_UNSPECIFIED = 0;
  // Request is successful
  DATA_QUALITY_RESPONSE_CODE_SUCCESS = 1;
  // Request fails
  DATA_QUALITY_RESPONSE_CODE_ERROR = 2;
  // Request fails
  DATA_QUALITY_RESPONSE_CODE_RULE_NOT_FOUND = 3;
  // Request fails
  DATA_QUALITY_RESPONSE_CODE_FAILURE = 4;
}

// v2 of service for enhancing data knowledge and improving the data quality
service DataQualityService {
  // Create data quality rule
  rpc CreateRuleV2(CreateRuleV2Request) returns (CreateRuleV2Response);
  // Upsert data quality rule. Identifier: either name - owner_team combination or id
  rpc UpdateRuleV2(UpdateRuleV2Request) returns (UpdateRuleV2Response);
  // Delete data quality rule
  rpc DeleteRuleV2(DeleteRuleV2Request) returns (DeleteRuleV2Response);
  // Execute data quality rule
  rpc ExecuteRuleV2(ExecuteRuleV2Request) returns (ExecuteRuleV2Response);
  // View data quality rules
  rpc ViewRuleV2(ViewRuleV2Request) returns (ViewRuleV2Response);
  // View data quality rule results
  rpc ViewRuleResultV2(ViewRuleResultV2Request) returns (ViewRuleResultV2Response);
}

// Rule template definition
message RuleTemplate {
  // rule check type
  CheckType check_type = 1;
}

// Rule invocation definition
message RuleInvocation {
  // invocation type
  google.protobuf.StringValue type = 1;
  // etl binding config
  data_quality_service.v1.ETLJob etl_binding_config = 2;
  // cron schedule
  data_quality_service.v1.Cron cron_schedule = 3;
  // additional parameters
  map<string, string> additional_params = 4;
}

// Rule notifications definition
message RuleNotifications {
  // emails
  repeated google.protobuf.StringValue emails = 1;
  // slack channels
  repeated google.protobuf.StringValue slack_chhanels = 2;
  // slack webhooks
  repeated google.protobuf.StringValue slack_webhooks = 3;
  // pagerduty emails
  repeated google.protobuf.StringValue pagerduty_emails = 4;
  // opted in notifications
  repeated google.protobuf.StringValue opted_in_notifications = 5;
  // additional parameters
  map<string, string> additional_params = 6;
}

// Rule check types
message CheckType {
  // null check
  data_quality_service.v1.NullCheck null_check = 1;
  // duplication check
  data_quality_service.v1.UniqueCheck unique_check = 2;
  // greater than check
  data_quality_service.v1.GreaterCheck greater_check = 3;
  // less than check
  data_quality_service.v1.LessCheck less_check = 4;
  // custom check
  data_quality_service.v1.CustomCheck custom_check = 5;
  // freshness check
  data_quality_service.v1.FreshnessCheck freshness_check = 6;
  // Between Range check
  data_quality_service.v1.BetweenRangeCheck between_range_check = 7;
  // has min length check
  data_quality_service.v1.HasMinLengthCheck has_min_length_check = 8;
  // has max length check
  data_quality_service.v1.HasMaxLengthCheck has_max_length_check = 9;
  // has min check
  data_quality_service.v1.HasMinCheck has_min_check = 10;
  // has max check
  data_quality_service.v1.HasMaxCheck has_max_check = 11;
  // has mean check
  data_quality_service.v1.HasMeanLessThanCheck has_mean_less_than_check = 12;
  // has sum check
  data_quality_service.v1.HasSumGreaterThanCheck has_sum_greater_than_check = 13;
}

// Data Quality Rule Result Filter condition
message DataQualityRuleResultFilter {
  // property name of a filter. Accepted properties are ruleId, ruleName, startTime, endTime, status, tableName, metricName
  google.protobuf.StringValue property = 1;
  // filter value
  google.protobuf.StringValue value = 2;
}

// Rule definition
message RuleV2 {
  // rule id
  google.protobuf.StringValue id = 1;
  // rule name
  google.protobuf.StringValue name = 2;
  // rule template
  RuleTemplate rule_template = 3;
  // rule check type
  google.protobuf.StringValue check_type = 4;
  // rule tags
  repeated google.protobuf.StringValue tags = 5;
  // rule invocation
  RuleInvocation invocation = 6;
  // rule notifications
  RuleNotifications notifications = 7;
  // owner team
  google.protobuf.StringValue owner_team = 8;
  // owner email
  google.protobuf.StringValue owner_email = 9;
  // whether the rule is active
  bool active = 10;
  // query engine to be used for the rule. Expecting SNOWFLAKE or TRINO
  google.protobuf.StringValue query_engine = 11;
  // additional parameters for the rule
  google.protobuf.Struct additional_params = 12;
}

// Rule status
enum DataQualityRuleStatus {
  // Unspecified
  DATA_QUALITY_RULE_STATUS_UNSPECIFIED = 0;
  // Pass
  DATA_QUALITY_RULE_STATUS_PASS = 1;
  // Rule check errored with runtime exception
  DATA_QUALITY_RULE_STATUS_ERROR = 2;
  // Rule check failed
  DATA_QUALITY_RULE_STATUS_FAIL = 3;
  // Running
  DATA_QUALITY_RULE_STATUS_RUNNING = 4;
}

// Rule Result
message RuleResult {
  // rule result id
  google.protobuf.StringValue id = 1;
  // rule id
  google.protobuf.StringValue rule_id = 2;
  // rule name
  google.protobuf.StringValue rule_name = 3;
  // status
  DataQualityRuleStatus status = 4;
  // when the test started
  google.protobuf.Timestamp started_at = 5;
  // when the test status updated
  google.protobuf.Timestamp updated_at = 6;
  // Result
  google.protobuf.StringValue result = 7;
  // Error Details. Contains the error message and other relevant logging if the rule failed.
  google.protobuf.StringValue error_details = 8;
  // Result Details. Contains the parameters that were used for the rule in this result
  google.protobuf.Struct result_details = 9;
}

// Queryable data source
message QueryableDataSource {
  // table data source
  TableDataSource table_data_source = 1;
  // metric data source
  MetricDataSource metric_data_source = 2;
  // file data source
  FileDataSource file_data_source = 3;
}

// Data source type
enum DataSourceType {
  // unspecified data source
  DATA_SOURCE_TYPE_UNSPECIFIED = 0;
  // table data source
  DATA_SOURCE_TYPE_TABLE = 1;
  // metric data source
  DATA_SOURCE_TYPE_METRIC = 2;
  // file data source
  DATA_SOURCE_TYPE_FILE = 3;
}

// Table data source
message TableDataSource {
  // data source type
  DataSourceType data_source_type = 1;
  // table name
  google.protobuf.StringValue table_name = 2;
  // database name
  google.protobuf.StringValue database_name = 3;
}

// Metric data source
message MetricDataSource {
  // data source type
  DataSourceType data_source_type = 1;
  // metric name
  google.protobuf.StringValue metric_name = 2;
  // metric SQL
  google.protobuf.StringValue sql = 3;
  // whether it is ump metric
  bool is_ump_metric = 4;
}

// File data source
message FileDataSource {
  // data source type
  DataSourceType data_source_type = 1;
  // file location
  google.protobuf.StringValue file_location = 2;
}

// Rule Group, which is a pairing between a data_source and at least one rule
message RuleGroup {
  // Rules applied to the data source
  repeated RuleV2 rules = 1;
  // This is repeated in case the queryable_data_source comes in pairs for consistency rule
  repeated QueryableDataSource queryable_data_source = 2;
}

// Create data quality rule request
message CreateRuleV2Request {
  // Create a new data quality rule
  RuleV2 rule = 1;
  // List of qeryable data sources
  repeated QueryableDataSource queryable_data_source = 2;
  // List of rule groups
  repeated RuleGroup rule_groups = 3;
}

// Create data quality rule response
message CreateRuleV2Response {
  // Response code
  data_tool_grpc_service.v1.ResponseCode response_code = 1;
  // Response message with more details
  google.protobuf.StringValue response_message = 2;
  // List of rules created
  repeated RuleV2 rules = 3;
}

// Update data quality rule request
message UpdateRuleV2Request {
  // Rule name
  google.protobuf.StringValue name = 1;
  // Updated rule to apply
  RuleV2 rule = 2;
  // List of updated data sources
  repeated QueryableDataSource queryable_data_source = 3;
}

// Update data quality rule response
message UpdateRuleV2Response {
  // Response code
  data_tool_grpc_service.v1.ResponseCode response_code = 1;
  // Response message with more details
  google.protobuf.StringValue response_message = 2;
}

// Delete data quality rule request
message DeleteRuleV2Request {
  // List of rule names
  repeated google.protobuf.StringValue rule_name = 1;
  // List of rule ids
  repeated string rule_id = 2;
}

// Delete data quality rule response
message DeleteRuleV2Response {
  // Response code
  data_tool_grpc_service.v1.ResponseCode response_code = 1;
  // Response message with more details
  google.protobuf.StringValue response_message = 2;
}

// Execute data quality rule request
message ExecuteRuleV2Request {
  // list of rule names
  repeated google.protobuf.StringValue name = 1;
  // Run with ETL
  data_quality_service.v1.ETLJob etl_job = 2;
  // Run with cron
  bool cron = 3;
  // Run on demand
  bool on_demand = 4;
  // List of table names
  repeated google.protobuf.StringValue table_name = 7;
  // List of metric names
  repeated google.protobuf.StringValue metric_name = 8;
  // List of file data sources
  repeated google.protobuf.StringValue file_location = 9;
}

// Execute data quality rule response
message ExecuteRuleV2Response {
  // Response code
  data_tool_grpc_service.v1.ResponseCode response_code = 1;
  // list of response object
  repeated ResponseObject response_object = 2;
  // Response message with more details
  google.protobuf.StringValue response_message = 3;
}

// response object
message ResponseObject {
  // attr map
  map<string, string> attributes = 1;
}

// View data quality rule request
message ViewRuleV2Request {
  // id of the Rule
  repeated google.protobuf.StringValue id = 1;
  // name of the rule, should be accompanied with owner_team
  repeated google.protobuf.StringValue name = 2;
  // owner of the rule
  google.protobuf.StringValue owner_team = 3;
  // current page
  int32 page = 4;
  // page size
  int32 limit = 5;
}

// View data quality rule response
message ViewRuleV2Response {
  // Response code
  data_tool_grpc_service.v1.ResponseCode response_code = 1;
  // Response message with more details
  google.protobuf.StringValue response_message = 2;
  // List of rules created
  repeated RuleV2 rules = 3;
  // page size
  int32 limit = 4;
  // current page
  int32 page = 5;
  // total count
  int32 total_count = 6;
  // whether there is more data left available
  bool has_more = 7;
}

// View data quality rule request
message ViewRuleResultV2Request {
  // page offset
  int32 offset = 1;
  // Data Quality Rule Result filter conditions, return all if no filter
  repeated DataQualityRuleResultFilter filter = 2;
  // page size (deprecated)
  int32 pagination = 3;
  // time window start time
  google.protobuf.Timestamp start_time = 4;
  // time window end time
  google.protobuf.Timestamp end_time = 5;
  // page size
  int32 limit = 6;
}

// View data quality rule response
message ViewRuleResultV2Response {
  // Response code
  DataQualityResponseCode response_code = 1;
  // Response message with more details
  google.protobuf.StringValue response_message = 2;
  // List of rule results
  repeated RuleResult rule_results = 3;
  // page size
  int32 limit = 4;
  // current page
  int32 page = 5;
  // total count
  int32 total_count = 6;
  // whether there is more data left available
  bool has_more = 7;
}
