syntax = "proto3";

package doordash_order_transmission;

service DoordashOrderTransmission {
    rpc RaiseError(EmptyRequest) returns (EmptyRequest);
    rpc CreateOrderTransmission(CreateOrderTransmissionRequest) returns (OrderTransmissionResponse);

    rpc GetOrderTransmission(GetRequest) returns (OrderTransmissionResponse);
    rpc GetUnclaimedOrderCount(EmptyRequest) returns (CountResponse);

    rpc ListOrderTransmissionsForStore(ListOrderTransmissionsForStoreRequest) returns (ListOrderTransmissionsResponse);
    rpc ListOrderTransmissionsForOrderPlacer(OrderPlacerRequest) returns (ListOrderTransmissionsResponse);
    rpc ListOrderTransmissionsForDeliveries(DeliveryRequest) returns (ListOrderTransmissionsResponse);

    // Transmission status
    rpc UpdateOrderTransmitted(OrderTransmissionUpdateTimestampRequest) returns (OrderTransmissionResponse);
    rpc ResetOrderTransmittedStatus(SimpleRequest) returns (OrderTransmissionResponse);
    rpc UpdateOrderShouldBeManuallyTransmitted(OrderTransmissionUpdateBoolRequest) returns (OrderTransmissionResponse);
    rpc UpdateOrderManuallyTransmitted(OrderTransmissionUpdateBoolRequest) returns (OrderTransmissionResponse);
    rpc UpdateOrderNeedsSecondStoreConfirmation(OrderTransmissionUpdateBoolRequest) returns (OrderTransmissionResponse);
    rpc UpdateOrderFaxSucceeded(OrderTransmissionUpdateTimestampRequest) returns (OrderTransmissionResponse);
    rpc UpdateOrderRobocallAborted(OrderTransmissionUpdateTimestampRequest) returns (OrderTransmissionResponse);

    // Store events
    rpc UpdateOrderStoreConfirmed(OrderTransmissionUpdateTimestampRequest) returns (OrderTransmissionResponse);
    rpc UpdateOrderStoreReceived(OrderTransmissionUpdateTimestampRequest) returns (OrderTransmissionResponse);
    rpc UpdateOrderStoreReconfirmed(OrderTransmissionUpdateTimestampRequest) returns (OrderTransmissionResponse);
    rpc UpdateOrderOnsiteEstimatedReady(OrderTransmissionUpdateTimestampRequest) returns (OrderTransmissionResponse);
    rpc UpdateOrderReadyForPickup(OrderTransmissionUpdateTimestampRequest) returns (OrderTransmissionResponse);

    // Order placer
    rpc UpdateOrderSentToOrderPlacer(OrderTransmissionUpdateTimestampRequest) returns (OrderTransmissionResponse);
    rpc ResetOrderPlacerStatus(SimpleRequest) returns (OrderTransmissionResponse);
    rpc UpdateOrderClaimedByOrderPlacer(OrderTransmissionClaimedRequest) returns (OrderTransmissionResponse);
    rpc UpdateOrderEscalatedByOrderPlacer(OrderTransmissionEscalatedRequest) returns (OrderTransmissionResponse);

    // Internal states
    rpc UpdateOrderProtocols(OrderTransmissionUpdateProtocolsRequest) returns (OrderTransmissionResponse);
    rpc UpdateOrderPredictionTimes(OrderTransmissionUpdatePredictionTimesRequest) returns (OrderTransmissionResponse);
    rpc UpdateOrderIsAsap(OrderTransmissionUpdateBoolRequest) returns (OrderTransmissionResponse);
    rpc UpdateOrderSubtotal(OrderTransmissionUpdateIntRequest) returns (OrderTransmissionResponse);

    // Delivery state
    rpc UpdateOrderPickedUp(OrderTransmissionUpdateTimestampRequest) returns (OrderTransmissionResponse);
    rpc UpdateOrderFulfilled(OrderTransmissionUpdateTimestampRequest) returns (OrderTransmissionResponse);
    rpc UpdateOrderCancelled(OrderTransmissionUpdateTimestampRequest) returns (OrderTransmissionResponse);
}

message EmptyRequest { }

message DeliveryRequest {
    repeated int64 delivery_ids = 1;
}

message OrderTransmissionUpdatePredictionTimesRequest {
    int64 store_order_cart_id = 1;
    string quoted_delivery_time = 2;
    int32 estimated_prep_duration = 3;
    string estimated_pickup_time = 4;
}

message OrderTransmissionEscalatedRequest {
    int64 store_order_cart_id = 1;
    string order_placer_escalation = 2;
    string order_placer_escalation_time = 3;
}

message OrderTransmissionClaimedRequest {
    int64 store_order_cart_id = 1;
    int64 order_placer_claimed_id = 2;
    string order_placer_claimed_time = 3;
}

message OrderTransmissionUpdateProtocolsRequest {
    int64 store_order_cart_id = 1;
    string order_protocol = 2;
    string confirm_protocol = 3;
}

message OrderTransmissionUpdateTimestampRequest {
    int64 store_order_cart_id = 1;
    string timestamp = 2;
}

message OrderTransmissionUpdateIntRequest {
    int64 store_order_cart_id = 1;
    int32 value = 2;
}

message OrderTransmissionUpdateBoolRequest {
    int64 store_order_cart_id = 1;
    bool value = 2;
}

message GetRequest {
    int32 deprecated_store_order_cart_id = 1;
    int64 store_order_cart_id = 2;
}

message SimpleRequest {
    int32 deprecated_store_order_cart_id = 1;
    int64 store_order_cart_id = 2;
}

message OrderPlacerRequest {
    int32 order_placer_id = 1;
    bool unclaimed_only = 2;
}

message ListOrderTransmissionsForStoreRequest {
    int64 store_id = 1;
    string quoted_delivery_start_time = 2;
    bool include_cancelled = 3;
    bool fulfilled = 4;  // TODO(mike) delete this once dsj is updated
    bool exclude_fulfilled = 5;
}

message CountResponse {
    int32 count = 1;
}

message ListOrderTransmissionsResponse {
    repeated OrderTransmission order_transmissions = 1;
}

message CreateOrderTransmissionRequest {
    OrderTransmission order_transmission = 1;
}

message OrderTransmissionResponse {
    OrderTransmission order_transmission = 1;
}

message OrderTransmission {
    string created_at = 1;
    string updated_at = 2;

    int64 store_order_cart_id = 3;
    int64 order_cart_id = 4;
    int64 delivery_id = 5;
    int64 store_id = 6;
    int64 market_id = 7;
    int64 submarket_id = 8;
    int64 country_id = 9;

    int32 migration_version = 10;

    string order_protocol = 11;
    string confirm_protocol = 12;

    // When order finally sent
    string order_transmitted_time = 13;
    bool should_be_manually_transmitted = 14;
    bool manually_transmitted = 15;

    // Merchant times
    string store_confirmed_time = 16;
    string store_reconfirmed_time = 17;
    string store_order_ready_time = 18;
    string store_order_received_time = 19;

    bool second_store_confirmation_required = 20;

    // Order placer
    string order_placer_sent_time = 21;
    string order_placer_claimed_time = 22;
    string order_placer_escalation_time = 23;

    // User ID of OrderPlacer that claimed (will delete this redundant field soon)
    int64 order_placer_claimed_id = 24;
    string order_placer_escalation = 25;

    // Fax timestamps and such
    string fax_data = 26;

    // Robocall confirmation digits, success timestamp
    string robocall_data = 27;

    // Fields that are duplicated from Delivery or other tables
    bool is_asap = 28;
    string quoted_delivery_time = 29;
    string estimated_pickup_time = 30;
    int32 estimated_prep_duration = 31;
    string onsite_estimated_ready_time = 32;

    string pickup_time = 33;

    // this is either the delivery time, or possibly pickup time for pickup orders.
    string fulfilled_at = 34;

    int32 order_subtotal = 35;

    string cancelled_at = 36;
}
