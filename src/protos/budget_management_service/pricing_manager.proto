syntax = "proto3";

package budget_management_service.v1;

import "budget_management_service/common.proto";
import "google/protobuf/any.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.budget_management_service.rpc.api";

// Request for pricing rate card
message GetPricingRateCardRequest {
  // Service name like pepto, iguazu
  string service_name = 1;
}

// Payload entity
message Payload {
  // name of the payload
  string name = 1;
  // description of the payload
  string description = 2;
  // unit of payload
  string unit = 3;
  // data type of the payload
  string data_type = 4;
  // default value
  int32 default_value = 5;
}

// Response for pricing rate card
message GetPricingRateCardResponse {
  // list of payloads
  repeated Payload payload = 1;
  // payload count
  int32 payload_count = 2;
  // Response code
  ResponseCode response_code = 3;
  // misc message for error handling
  google.protobuf.StringValue error_message = 4;
}

// payload name to value map
message PayloadEntryValue {
  // payload name
  string payload_name = 1;
  // payload value
  int32 payload_value = 2;
}

// Request to get the estimated price
message GetEstimatedPricingRequest {
  // Service name like pepto, iguazu
  string service_name = 1;
  // list of payload entry values
  repeated PayloadEntryValue payload_entries = 2;
}

// pricing resource value
message ResourceEstimatedPrice {
  // resource name
  string resource_name = 1;
  // estimated price
  double price = 2;
}

// Response for the estimated price
message GetEstimatedPricingResponse {
  // list of resource and their estimated price
  repeated ResourceEstimatedPrice resource_estimated_price = 1;
  // Response code
  ResponseCode response_code = 2;
  // misc message for error handling
  google.protobuf.StringValue error_message = 3;
}

// Service for managing pricing rate card service
service PricingRateCardService {
  // Fetch rate card for a service
  rpc GetPricingRateCard(GetPricingRateCardRequest) returns (GetPricingRateCardResponse);
  // Get calculated price
  rpc GetEstimatedPricing(GetEstimatedPricingRequest) returns (GetEstimatedPricingResponse);
}
