syntax = "proto3";
package drive_partnership.v1;

import "common/common.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "merchant_financial_service/common.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_outer_classname = "DrivePartnershipProtos";
option java_package = "com.doordash.service.drive_partnership.v1";

service DrivePartnershipService {
  rpc GetPartnershipById(GetPartnershipByIdRequest) returns (GetPartnershipByIdResponse);
  rpc GetAllPartnershipsFor(GetAllPartnershipsForRequest) returns (GetAllPartnershipsForResponse);
  rpc GetAppliedPartnershipFor(GetAppliedPartnershipForRequest) returns (GetAppliedPartnershipForResponse);
  rpc CreatePartnership(CreatePartnershipRequest) returns (CreatePartnershipResponse);
  rpc CreatePartnershipFeeModifier(CreatePartnershipFeeModifierRequest) returns (CreatePartnershipFeeModifierResponse);
  rpc EndPartnership(EndPartnershipRequest) returns (EndPartnershipResponse);
}

message GetPartnershipByIdRequest {
  // UUID of the partnership
  google.protobuf.StringValue id = 1;
}

message GetPartnershipByIdResponse {
  // Drive Partnership
  DrivePartnership partnership = 1;
}

message GetAppliedPartnershipForRequest {
  reserved 3;
  reserved "current_time";
  // message containing three level entity id: 1. developer 2. store 3. business
  // store and business id are required else will fail validation
  RelatedEntityIdGroup related_entity_group = 1;
  // Required. The active partnerships of the provided entity ids with the highest min order value threshold < order value will be retrieved
  google.protobuf.Int32Value order_value = 2;
  // Optional. When set only partnership of this order type is returned and order value will be override to Int.MAX_VALUE
  OrderType order_type = 4;
  // When set to false, all partnerships will be returned in their raw form
  // When set to true, the partnerships will be merged, and a single partnership  for each order type will be returned
  google.protobuf.BoolValue merge_hierarchy = 5;
  // Optional. When set only partnership having end_time < request_time will be retrieved. Defaults to current time
  google.protobuf.Timestamp request_time = 6;
}

message GetAppliedPartnershipForResponse {
  // The partnership being returned
  DrivePartnership partnership = 1;
  // Is this partnership from a merged hierarchy or in raw form
  // Note: Merged partnerships from requests that did not include all entity IDs (store, business, developer) may be incomplete
  google.protobuf.BoolValue is_merged = 2;
}

message GetAllPartnershipsForRequest {
  // message containing three level entity id: 1. developer 2. store 3. business
  RelatedEntityIdGroup related_entity_group = 1;
  // Optional. When set only partnerships of this order type are returned
  OrderType order_type = 2;
  // Optional. When set only partnerships having min order threshold smaller than or equal to order value will be returned
  google.protobuf.Int32Value order_value = 3;
  // Optional. When set only partnership having end_time < request_time will be retrieved. Defaults to current time
  google.protobuf.Timestamp request_time = 4;
}

message GetAllPartnershipsForResponse {
  // A list of the partnerships that could have applied to the provided IDs
  repeated DrivePartnership partnerships = 1;
}

message CreatePartnershipRequest {
  // The entity type of the partnership
  merchant_financial_service.common.EntityType related_entity_type = 1;
  // The entity id of the partnership
  google.protobuf.StringValue related_entity_id = 2;
  // The country applied to the partnership
  common.CountryCode country = 3;
  // The store currency of the partnership
  google.protobuf.StringValue store_currency = 4;
  // The order type this partnership will apply to
  OrderType order_type = 5;
  // The partnership fetched should have order_value > min_order_value_threshold
  google.protobuf.Int32Value min_order_value_threshold = 6;
  // The message holding the contract details
  ContractDetails contract_details = 7;
  // The message holding the drive fee details
  DriveFeeDetails drive_fee_details = 8;
  // The message holding the delivery level deal term details
  DeliveryLevelDealTermDetails delivery_level_deal_term_details = 9;
  // The message holding the non-delivery level deal term details
  NonDeliveryLevelDealTermDetails aggregate_deal_term_details = 10;
  // Jira ticket for the request
  google.protobuf.StringValue ticket = 11;
  // Reason code for the request
  google.protobuf.StringValue reason_code = 12;
  // The id of the person creating the partnership
  google.protobuf.Int64Value created_by = 13;
  // marketplace eq of related_entity_id
  google.protobuf.Int64Value marketplace_related_entity_id = 14;
  // How this partnership was created
  PartnershipUpdateMethod creation_method = 15;
  // partnership id used for updating partnership
  google.protobuf.StringValue id = 16;
}

message CreatePartnershipResponse {
  // Created Drive Partnership
  DrivePartnership partnership = 1;
}

message CreatePartnershipFeeModifierRequest {
  reserved 1;
  reserved "fee_modifer";
  // fee modifier to be created
  repeated DrivePartnershipFeeModifier fee_modifiers = 4;
  // ticket associated to create the fee modifier
  google.protobuf.StringValue ticket = 2;
  // reason code to create the fee modifer
  google.protobuf.StringValue reason_code = 3;
}

message CreatePartnershipFeeModifierResponse {
  reserved 1;
  reserved "fee_modifier";
  // Created fee modifier
  repeated DrivePartnershipFeeModifier fee_modifiers = 2;
}

message EndPartnershipRequest {
  // ID of the partnership to end
  google.protobuf.StringValue partnership_id = 1;
  // end time of the partnership
  google.protobuf.Timestamp end_at = 2;
  // user ending the partnership
  google.protobuf.StringValue updated_by = 3;
}

message EndPartnershipResponse {
  // Ended partnership
  DrivePartnership partnership = 1;
}

message DrivePartnership {
  // The message holding the partnership details
  PartnershipDetails partnership_details = 1;
  // The message holding the contract details
  ContractDetails contract_details = 2;
  // The message holding the drive fee details
  DriveFeeDetails drive_fee_details = 3;
  // The message holding the delivery level deal term details
  DeliveryLevelDealTermDetails delivery_level_deal_term_details = 4;
  // The message holding the non-delivery level deal term details
  NonDeliveryLevelDealTermDetails aggregate_deal_term_details = 5;
  // The message holding the database level details
  DatabaseLevelDetails db_level_details = 6;
  // A list of all partnership IDs merged into this "applied" partnership
  repeated google.protobuf.StringValue ids = 7;
}

message RelatedEntityIdGroup {
  // The UUID of the drive store
  google.protobuf.StringValue store_level_related_entity_id = 1;
  // The UUID of the drive account (business)
  google.protobuf.StringValue business_level_related_entity_id = 2;
  // The ID of the developer (Long)
  google.protobuf.Int64Value developer_level_related_entity_id = 3;
  // The ID of the marketplace store
  google.protobuf.Int64Value mp_store_level_related_entity_id = 4;
  // The ID for the marketplace business
  google.protobuf.Int64Value mp_business_level_related_entity_id = 5;
}

message PartnershipDetails {
  // The UUID of the partnership
  google.protobuf.StringValue id = 1;
  // The current version of the partnership
  google.protobuf.Int32Value version = 2;
  // The entity type of the partnership
  merchant_financial_service.common.EntityType related_entity_type = 3;
  // The entity id of the partnership
  google.protobuf.StringValue related_entity_id = 4;
  // The country applied to the partnership
  common.CountryCode country = 5;
  // The store currency of the partnership
  google.protobuf.StringValue store_currency = 6;
  // The order type this partnership will apply to
  OrderType order_type = 7;
  // The partnership fetched should have order_value > min_order_value_threshold
  google.protobuf.Int32Value min_order_value_threshold = 8;
}

message ContractDetails {
  // The salesforce opportunity id of the partnership
  google.protobuf.StringValue salesforce_opportunity_id = 1;
  // A link to the contract the Mx signed (or most recent addendum)
  google.protobuf.StringValue contract_link = 2;
  // When the partnership became live (typically based on contract signed date, or when created in our system)
  google.protobuf.Timestamp start_at = 3;
  // When the partnership was no longer active. When null or dated in the future it is still live
  google.protobuf.Timestamp end_at = 4;
}

message DriveFeeDetails {
  // The commission rate for the partnership if applicable
  google.protobuf.DoubleValue commission_rate = 1;
  // commission_rate * order value >= min_fee
  google.protobuf.Int32Value min_fee = 2;
  // commission_rate * order value <= max_fee
  google.protobuf.Int32Value max_fee = 3;
  // the logic to calculate the commission, if this is present, it will override `min_fee` and `max_fee`
  google.protobuf.StringValue commission_logic = 4;
  // The list of commission fee (fee_type, logic, display_name) applied to the partnership
  repeated FeeComponent commission_fee_component = 5;
  // The logic of return fee
  google.protobuf.StringValue return_fee_logic = 6;
}

message DeliveryLevelDealTermDetails {
  // aggregator fee
  google.protobuf.Int32Value aggregator_fee = 1;
  // guaranteed tip amount
  google.protobuf.Int32Value guaranteed_tip_amount = 2;
  // the logic to calculate cash fee
  google.protobuf.StringValue cash_fee_logic = 3;
  // The logic to calculate cancellation fee
  google.protobuf.StringValue cancellation_fee_logic = 4;
  // max tip override
  google.protobuf.Int32Value max_tip_override = 5;
}

message NonDeliveryLevelDealTermDetails {
  // The logic to calculate the fee per delivery shy of their target if target order volume commitment is missed in the aggregation period
  google.protobuf.StringValue volume_miss_fee_logic = 1;
  // The _child suffix indicates a logic that applies one entity level lower (i.e. _child logic on a business partnership applies to all stores under that business.)
  google.protobuf.StringValue volume_miss_fee_logic_child = 2;
  // The logic to calculate the discount provided for every delivery depending on the number of deliveries completed in the aggregation period
  google.protobuf.StringValue discount_logic_volume = 3;
  // The _child suffix indicates a logic that applies one entity level lower (i.e. _child logic on a business partnership applies to all stores under that business.)
  google.protobuf.StringValue discount_logic_volume_child = 4;
  // The logic to calculate a discount (or fee) applied to each delivery depending on if they hit (or were below) a specified average dasher wait time in the aggregation period
  google.protobuf.StringValue discount_logic_dasher_wait_time = 5;
  // The _child suffix indicates a logic that applies one entity level lower (i.e. _child logic on a business partnership applies to all stores under that business.)
  google.protobuf.StringValue discount_logic_dasher_wait_time_child = 6;
  // The logic to calculate the discount per order if there is tip
  google.protobuf.StringValue discount_logic_tip_rate = 7;
  // The _child suffix indicates a logic that applies one entity level lower (i.e. _child logic on a business partnership applies to all stores under that business.)
  google.protobuf.StringValue discount_logic_tip_rate_child = 8;
  // The logic to calculate the fee charged for each delivery or for each store to pay for support as a service
  google.protobuf.StringValue support_fee_logic = 9;
}

message DatabaseLevelDetails {
  // How the partnership is updated
  PartnershipUpdateMethod update_method = 1;
  // When this partnership version was created in our system
  // Note: If this is a merged partnership this value comes from the lowest entity_level partnership included
  google.protobuf.Timestamp created_at = 2;
  // When the partnership is updated
  google.protobuf.Timestamp updated_at = 3;
}

message DrivePartnershipFeeModifier {
  reserved 17;
  reserved "commission_fee_components";
  // fee modifier id - must be omitted to fee modifier
  google.protobuf.Int64Value id = 1;
  // partnership id to which modifier type is defined to
  google.protobuf.StringValue partnership_id = 2;
  // modifier type for the fee modifier to apply to
  ModifierType modifier_type = 3;
  // country if applicable
  google.protobuf.StringValue country = 4;
  // state if applicable
  google.protobuf.StringValue state = 5;
  // submarket id if applicable
  google.protobuf.Int32Value submarket_id = 6;
  // city if applicable
  google.protobuf.StringValue city = 7;
  // locality if applicable
  google.protobuf.StringValue locality = 8;
  // zipcode if applicable
  google.protobuf.StringValue zip_code = 9;
  // drive store id if applicable
  google.protobuf.StringValue store_id = 10;
  // the minimum commission fee for the fee modifier if applicable
  google.protobuf.Int32Value min_fee = 11;
  // The maximum commission fee for the fee modifier if applicable
  google.protobuf.Int32Value max_fee = 12;
  // The dasher regulatory fee value for the fee modifier
  google.protobuf.Int32Value dasher_regulatory_fee = 13;
  // The dasher regulatory fee maximum value if applicable
  google.protobuf.Int32Value dasher_regulatory_fee_max = 14;
  // The commission logic for the fee modifier if applicable
  google.protobuf.StringValue commission_logic = 15;
  // The commission rate for the fee modifier if applicable
  google.protobuf.DoubleValue commission_rate = 16;
  // When the fee modifier was created
  google.protobuf.Timestamp created_at = 18;
  // When the fee modifier was updated
  google.protobuf.Timestamp updated_at = 19;
  // The list of commission fee (fee_type, logic)
  repeated FeeComponent commission_fee_component = 20;
  // marketplace related entity id
  google.protobuf.Int64Value marketplace_related_entity_id = 21;
  // marketplace related entity type
  merchant_financial_service.common.EntityType marketplace_related_entity_type = 22;
}

message FeeComponent {
  // The type of the fee component
  FeeComponentType fee_type = 1;
  // What is the logic of a fee type
  google.protobuf.StringValue fee_logic = 2;
  // How the name should be displayed
  google.protobuf.StringValue display_name = 3;
}

enum PartnershipUpdateMethod {
  // unspecified
  UPDATE_METHOD_UNSPECIFIED = 0;
  // SFDC Figment instance (pull model)
  SFDC = 1;
  // API auto-onboarding for select MWP (check ...)
  AUTO_ONBOARDING = 2;
  // Manually created through ReTool
  RETOOL = 3;
  // Developer portal
  DRIVE_PUBLIC_ADMIN_API = 4;
  // Configuration API, primarily SFDC Lemonade instance as of 3/28/2023 (push model)
  CONFIGURATION_API = 5;
  // Unknown method
  UNKNOWN = 6;
}

enum OrderType {
  // unspecified type
  ORDER_TYPE_UNSPECIFIED = 0;
  // small order fulfillment order type
  SMALL_ORDER_FULFILLMENT = 1;
  // large order fulfillment order type
  LARGE_ORDER_FULFILLMENT = 2;
  // route fulfillment order type
  ROUTE_FULFILLMENT = 3;
  // on call order type
  // Special Hotspot deliveries where dashers go wait somewhere in case they are needed as backups
  ON_CALL = 4;
}

enum FeeComponentType {
  // unspecified type
  FEE_COMPONENT_TYPE_UNSPECIFIED = 0;
  // distance based fee type
  DISTANCE_BASED_FEE = 1;
  // order value based fee type
  ORDER_VALUE_BASED_FEE = 2;
  // service fee type
  SERVICE_FEE = 3;
  // mx subsidy fee type
  MX_SUBSIDY = 4;
  // other fee type
  OTHER = 5;
  // small order fee type
  SMALL_ORDER_FEE = 6;
  // dasher wait time fee type
  DWT_FEE = 7;
  // flat fee type
  FLAT_FEE = 8;
  // weight based fee type
  WEIGHT_BASED_FEE = 9;
  // dasher regulatory fee type
  DASHER_REGULATORY_FEE = 10;
  // promotion fee type
  PROMOTION = 11;
}

enum ModifierType {
  MODIFIER_TYPE_UNSPECIFIED = 0;
  COUNTRY = 1;
  STATE = 2;
  SUBMARKET_ID = 3;
  CITY = 4;
  LOCALITY = 5;
  ZIP_CODE = 6;
  STORE_ID = 7;
}
