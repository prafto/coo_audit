syntax = "proto3";
package merchant_program;

import "common/common.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "merchant_financial_service/common.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_outer_classname = "MerchantProgramProtos";
option java_package = "com.doordash.service.merchant_program";

service MerchantProgramService {
  rpc onboardPrograms(OnboardProgramsRequest) returns (OnboardProgramsResponse) {}
  rpc bulkOnboardPrograms(BulkOnboardProgramsRequest) returns (BulkOnboardProgramsResponse) {}
  rpc getMxAffiliatePrograms(GetMxAffiliateProgramsRequest) returns (GetMxAffiliateProgramsResponse) {}
  rpc getAllMxAffiliateProgramsByStore(GetAllMxAffiliateProgramsByStoreRequest) returns (GetAllMxAffiliateProgramsByStoreResponse) {}
  rpc onboardRecurringPrograms(OnboardRecurringProgramsRequest) returns (OnboardRecurringProgramsResponse) {}
  rpc endRecurringProgram(EndRecurringProgramRequest) returns (EndRecurringProgramResponse) {}
  rpc onboardGeographicPrograms(OnboardGeographicProgramsRequest) returns (OnboardGeographicProgramsResponse) {}
  rpc createInvoiceableFeeSetting(CreateInvoiceableFeeSettingRequest) returns (CreateInvoiceableFeeSettingResponse) {}
  rpc updateInvoiceableFeeSettingEndTime(UpdateInvoiceableFeeSettingEndTimeRequest) returns (UpdateInvoiceableFeeSettingEndTimeResponse) {}
  rpc getInvoiceableFeeSetting(GetInvoiceableFeeSettingRequest) returns (GetInvoiceableFeeSettingResponse) {}
}

service PaymentProtocolService {
  rpc GetPaymentProtocolById(GetPaymentProtocolByIdRequest) returns (GetPaymentProtocolByIdResponse);
}

service MxVariableProgramService {
  rpc getCurrentMxVariableProgram(GetCurrentMxVariableProgramRequest) returns (GetCurrentMxVariableProgramResponse) {}
  rpc mxVariableProgramHistoryCheck(MxVariableProgramHistoryCheckRequest) returns (MxVariableProgramHistoryCheckResponse) {}
  rpc getCurrentMxVariableProgramConfig(GetCurrentMxVariableProgramConfigRequest) returns (GetCurrentMxVariableProgramConfigResponse) {}
  rpc createMxVariableProgramConfig(CreateMxVariableProgramConfigRequest) returns (CreateMxVariableProgramConfigResponse) {}
}

/*
   The FeeType enum has been moved to the common folder under mfs_common.proto
   to be shared across multiple definitions, e.g. revenue subledger
   But this FeeType is still being used, e.g. SFDC
*/
enum FeeType {
  UNKNOWN_FEE = 0;
  FEE = 1;
  COMMISSION = 2;
  TECHNOLOGY = 3;
  PAYMENT_PROCESSING_FEE = 4;
  DELIVERY_ORDER_FEE = 5;
  PICKUP_ORDER_FEE = 6;
  DASH_PASS_MARKETING_FEE = 7;
  ALCOHOL_FLAT_FEE = 8;
  FLEXIBLE_FULFILLMENT_FLAT_FEE = 9;
  DISCOUNT = 10;
  MERCHANT_BUNDLE_FEE = 11;
  VOICE_ORDER_FEE = 12;
  // Supports distinct commission rate for alcohol items
  ALCOHOL_COMMISSION = 13;
  // Cash on Delivery fee
  CASH_FEE = 14;
  AGGREGATOR_FEE = 15;
  CANCELLATION_FEE = 16;
  DISTANCE_BASED_FEE = 17;
  ORDER_VALUE_BASED_FEE = 18;
  SERVICE_FEE = 19;
  MX_SUBSIDY = 20;
  SMALL_ORDER_FEE = 21;
  DASHER_REGULATORY_FEE = 22;
  DWT_FEE = 23;
  RETURN_FEE = 24;
}

enum FeeRateChargingTarget {
  NO_RATE = 0;
  SUBTOTAL = 1;
  TOTAL = 2;
  RED_CARD_SWIPED_SUBTOTAL = 3;
  PRE_INFLATED_SUBTOTAL = 4;
  // Supports targeting fee against only alcohol items in order
  ALCOHOL_SUBTOTAL = 5;
}

enum RecurringProgramType {
  UNKNOWN_RECURRING_PROGRAM_TYPE = 0;
  STOREFRONT_SUBSCRIPTION_PROGRAM = 1;
}

enum RecurringFeeType {
  UNKNOWN_RECURRING_FEE_TYPE = 0;
  STOREFRONT_SUBSCRIPTION_FEE = 1;
}

message FeeAttribute {
  string name = 1;
  google.protobuf.StringValue friendly_display_name = 2;
  FeeType fee_type = 3;
  google.protobuf.Int32Value flat_fee_in_cents = 4;
  google.protobuf.StringValue fee_rate = 5;
  FeeRateChargingTarget fee_rate_charging_target = 6;
  google.protobuf.Int32Value min_amount_in_cents = 7;
  google.protobuf.Int32Value max_amount_in_cents = 8;
  google.protobuf.Timestamp start_time = 9;
  google.protobuf.Timestamp end_time = 10;
  google.protobuf.Int32Value min_target_range_in_minor_units = 11;
  google.protobuf.Int32Value max_target_range_in_minor_units = 12;
  google.protobuf.BoolValue is_tiered = 13;
  google.protobuf.StringValue fee_logic = 14;
  Category category = 15;
}

message Category {
  google.protobuf.StringValue id = 1;
  google.protobuf.StringValue name = 2;
  google.protobuf.StringValue level = 3;
  Category sub_category = 4;
}

enum ProgramCapType {
  NO_CAP = 0;
  FLAT = 1;
  RATE = 2;
}

message Program {
  int64 store_id = 1;
  common.Experience experience = 2;
  common.Channel channel = 3;
  common.FulfillmentType fulfillment_type = 4;
  common.Audience audience = 5;
  repeated FeeAttribute fee_attributes = 6;
  ProgramCapType program_cap_type = 7;
  google.protobuf.StringValue program_cap = 8;
  google.protobuf.Timestamp start_time = 9;
  google.protobuf.Timestamp end_time = 10;
  google.protobuf.StringValue salesforce_opportunity_id = 11;
  google.protobuf.StringValue source = 12;
}

message OnboardProgramsRequest {
  repeated Program programs = 1;
  int64 creator_user_id = 2;
  google.protobuf.StringValue currency = 3;
}

message BulkOnboardProgramsRequest {
  repeated Program programs = 1;
  int64 creator_user_id = 2;
  google.protobuf.StringValue currency = 3;
}

message OnboardGeographicProgramsRequest {
  int64 creator_user_id = 1;
  SourceType source = 2;
  repeated GeographicProgram programs = 3;
}

enum SourceType {
  SOURCE_TYPE_UNSPECIFIED = 0;
  SOURCE_TYPE_SFDC = 1;
  SOURCE_TYPE_REMOTE_SCRIPT = 2;
}

enum GeographicLevelType {
  GEOGRAPHIC_LEVEL_TYPE_UNSPECIFIED = 0;
  GEOGRAPHIC_LEVEL_TYPE_STATE = 1;
}

message GeographicProgram {
  string reference_entity_id = 1;
  EntityType reference_entity_type = 2;
  string geographic_level_type = 3;
  string geographic_level_value = 4;
  string country_shortname = 5;
  string currency_code = 6;
  FeeType fee_type = 7;
  FeeStructure fee_structure = 8;
  google.protobuf.Timestamp start_time = 9;
  google.protobuf.Timestamp end_time = 10;
}

message FeeStructure {
  // For tiered fees, each tier should be input here. There should be no gaps and it should include all possible values
  // For flat fee (no tiers), input a single tier with min_range of 0 and no max_range
  repeated FeeTier tiers = 1;
}

message FeeTier {
  // The fee to apply to this tier (required)
  google.protobuf.Int64Value fee = 1;
  // The min range of the tier (required)
  google.protobuf.Int64Value min_range = 2;
  // The max range of the tier (optional, the final tier does not need this value)
  google.protobuf.Int64Value max_range = 3;
  // The commission rate to apply to this tier (instead of a flat fee)
  google.protobuf.DoubleValue commission_rate = 4;
}

message OnboardGeographicProgramsResponse {
  repeated CreatedGeographicProgramResponse created_geographic_programs = 1;
}

message CreatedGeographicProgramResponse {
  GeographicProgram program = 1;
}

message CreatedProgramResponse {
  string program_id = 1;
  repeated string fee_attribute_ids = 2;
}

message OnboardProgramsResponse {
  repeated CreatedProgramResponse created_programs = 1;
}

message BulkOnboardProgramsResponse {
  repeated CreatedProgramResponse created_programs = 1;
}

message GetMxAffiliateProgramsRequest {
  int64 store_id = 1;
  common.Experience experience = 2;
  google.protobuf.Timestamp active_at = 3;
}

message GetMxAffiliateProgramsResponse {
  repeated Program programs = 1;
}

message GetAllMxAffiliateProgramsByStoreRequest {
  int64 store_id = 1;
}

message GetAllMxAffiliateProgramsByStoreResponse {
  repeated Program programs = 1;
}

message RecurringFeeAttribute {
  google.protobuf.StringValue name = 1;
  google.protobuf.StringValue friendly_display_name = 2;
  RecurringFeeType fee_type = 3;
  google.protobuf.Int32Value flat_fee_in_minor_units = 4;
}

message RecurringSchedule {
  merchant_financial_service.common.FrequencyType frequency = 1;
  google.protobuf.StringValue name = 2;
  google.protobuf.Timestamp effective_start_date = 3; //Not null
  google.protobuf.Timestamp effective_end_date = 4; //Optional
  google.protobuf.Timestamp anchor_start_date = 5; //Optional
  google.protobuf.Timestamp anchor_end_date = 6; //Optional
  merchant_financial_service.common.CreationMethodType create_method_type = 7;
}

message RecurringProgram {
  int64 store_id = 1;
  RecurringProgramType program_type = 2;
  RecurringSchedule schedule = 3;
  repeated RecurringFeeAttribute fee_attributes = 4;
  google.protobuf.StringValue salesforce_opportunity_id = 5;
}

message OnboardRecurringProgramsRequest {
  repeated RecurringProgram programs = 1;
  int64 creator_user_id = 2;
  google.protobuf.StringValue currency = 3;
}

message CreatedRecurringProgramResponse {
  google.protobuf.StringValue program_id = 1;
  google.protobuf.StringValue schedule_id = 2;
  repeated google.protobuf.StringValue fee_attribute_ids = 3;
}

message OnboardRecurringProgramsResponse {
  repeated CreatedRecurringProgramResponse created_programs = 1;
}

message EndRecurringProgramRequest {
  int64 store_id = 1;
  RecurringProgramType program_type = 2;
  google.protobuf.Timestamp effective_end_date = 3; // optional, by default we would use now() if not in request
}

message EndRecurringProgramResponse {}

enum EntityType {
  STORE = 0;
  BUSINESS = 1;
}

enum ItemEligible {
  ALL = 0;
  ALCOHOL = 1;
}

message InvoiceableFeeSetting {
  EntityType entity_type = 1;
  int64 entity_id = 2;
  FeeType fee_type = 3;
  ItemEligible item_category = 4;
  google.protobuf.Timestamp start_time = 5;
  google.protobuf.Timestamp end_time = 6;
  string created_by = 7;
}

message CreateInvoiceableFeeSettingRequest {
  InvoiceableFeeSetting invoiceable_fee_setting = 1;
  int64 creator_user_id = 2;
}

message CreateInvoiceableFeeSettingResponse {}

message UpdateInvoiceableFeeSettingEndTimeRequest {
  EntityType entity_type = 1;
  int64 entity_id = 2;
  FeeType fee_type = 3;
  int64 user_id = 4;
  google.protobuf.Timestamp end_time = 5;
  string updated_by = 6;
}

message UpdateInvoiceableFeeSettingEndTimeResponse {}

message GetInvoiceableFeeSettingRequest {
  EntityType entity_type = 1;
  int64 entity_id = 2;
  FeeType fee_type = 3;
}

message GetInvoiceableFeeSettingResponse {
  EntityType entity_type = 1;
  google.protobuf.Int64Value entity_id = 2;
  google.protobuf.BoolValue is_invoiceable_commission_activated = 3;
  google.protobuf.StringValue updated_by = 4;
}

message GetPaymentProtocolByIdRequest {
  int32 payment_protocol_id = 1;
}

message GetPaymentProtocolByIdResponse {
  int32 payment_protocol_id = 1;
  PaymentProtocolType payment_protocol_type = 2;
  string friendly_name = 3;
}

enum PaymentProtocolType {
  UNDEFINED = 0;
  DIRECT_DEPOSIT = 1;
  DASHER_RED_CARD = 2;
  ORDER_PLACER_RED_CARD = 3;
  DASHER_CASH = 4;
  PAYMENTLESS = 5;
}

message MxVariableProgramHistoryCheckRequest {
  google.protobuf.Int64Value entity_id = 1;
  EntityType entity_type = 2;
}

message MxVariableProgramHistoryCheckResponse {
  google.protobuf.BoolValue has_history_data = 1;
}

message GetCurrentMxVariableProgramRequest {
  google.protobuf.Int64Value store_id = 1;
  google.protobuf.Int64Value business_id = 2;
}

message GetCurrentMxVariableProgramResponse {
  google.protobuf.DoubleValue metric = 1;
  google.protobuf.StringValue unit = 2;
  google.protobuf.Timestamp measurement_start_date = 3;
  google.protobuf.Timestamp measurement_end_date = 4;
  google.protobuf.Timestamp program_start_date = 5;
  google.protobuf.Timestamp program_end_date = 6;
  ConfigType config_type = 7;
  repeated Program programs = 8;
}

// Request for GetCurrentMxVariableProgramConfig
message GetCurrentMxVariableProgramConfigRequest {
  // entity type. required
  EntityType entity_type = 1;

  // entity id. required
  google.protobuf.Int64Value entity_id = 2;

  // config type. required
  ConfigType config_type = 3;
}

// Response for GetCurrentMxVariableProgramConfig
message GetCurrentMxVariableProgramConfigResponse {
  // variable program config response
  MxVariableProgramConfig config = 1;
}

// Request for CreateMxVariableProgramConfig
message CreateMxVariableProgramConfigRequest {
  // config type. required
  ConfigType config_type = 1;

  // variable program config. required
  VariableProgramConfig config = 2;

  // entity type. required
  EntityType entity_type = 3;

  // entity id. required
  google.protobuf.Int64Value entity_id = 4;

  // start time of the program. required
  google.protobuf.Timestamp start_time = 5;

  // end time of the program. optional
  google.protobuf.Timestamp end_time = 6;

  // created by
  google.protobuf.Int64Value created_by = 7;
}

// Response for CreateMxVariableProgramConfig
message CreateMxVariableProgramConfigResponse {
  // id of the created config
  string created_configs = 1;
}

// MxVariableProgramConfig
message MxVariableProgramConfig {
  // config type
  ConfigType config_type = 1;

  // variable program config.
  VariableProgramConfig config = 2;

  // entity type
  EntityType entity_type = 3;

  // entity id
  google.protobuf.Int64Value entity_id = 4;

  // start time of the program
  google.protobuf.Timestamp start_time = 5;

  // end time of the program. nullable field
  google.protobuf.Timestamp end_time = 6;

  // created by
  google.protobuf.Int64Value created_by = 7;
}

// enum ConfigType
enum ConfigType {
  // UNSPECIFIED
  CONFIG_TYPE_UNSPECIFIED = 0;

  // AWDT config type
  AVERAGE_DASHER_WAIT_TIME = 1;
}

// VariableProgramConfig
message VariableProgramConfig {
  // nullable config. Can add more configs in future as additional fields
  ProgramConfig time_config = 1;
}

// AverageDasherWaitTimeConfig
message ProgramConfig {
  // time range unit
  Unit unit = 1;

  // list of AverageWaitTimeRange to specify the ranges for commission rates
  repeated VariableProgramRange variable_program_time_ranges = 2;
}

// enum TimeRangeUnit
enum Unit {
  // UNSPECIFIED
  UNIT_UNSPECIFIED = 0;

  // TIME RANGE UNIT SECONDS
  SECONDS = 1;
}

// AverageWaitTimeRange
message VariableProgramRange {
  // min range
  google.protobuf.Int64Value min_range = 1;

  // max range
  google.protobuf.Int64Value max_range = 2;

  // list of Mx affiliate program configs
  repeated Program programs = 3;
}
