syntax = "proto3";
package drive_quotes.v1;

import "common/common.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "merchant_financial_service/common.proto";
import "merchant_financial_service/drive_partnership_service.proto";
import "parcel_protobuf/parcel_midmile_service.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_outer_classname = "DriveQuotesProtos";
option java_package = "com.doordash.service.drive_quotes.v1";

service DriveQuotesService {
  rpc CreateQuote(CreateQuoteRequest) returns (CreateQuoteResponse);
  rpc AcceptQuote(AcceptQuoteRequest) returns (AcceptQuoteResponse);
  rpc GetQuote(GetQuoteRequest) returns (GetQuoteResponse);
}

message QuoteContext {
  // Pickup Address or Store Address
  Address pickup_address = 1;
  // Drop off Address or Cx Address
  Address drop_off_address = 2;
  // Time of the delivery creation request
  google.protobuf.Timestamp delivery_time = 3;
  // Timezone of the store
  google.protobuf.StringValue start_point_timezone = 4;
  // Road Distance from pickup to drop off
  google.protobuf.Int32Value road_r2c_distance = 5;
  // Order Value
  google.protobuf.Int32Value order_value = 6;
  // Mx Specified Promotion ID
  google.protobuf.StringValue promotion_id = 7;
  // Amount to be used for COD
  google.protobuf.Int32Value cash_on_delivery = 8;
  // Original Delivery Fee
  google.protobuf.Int32Value original_delivery_fee = 9;
  // Requested cash on delivery
  google.protobuf.BoolValue requested_cash = 10;
  // Return delivery indicator
  google.protobuf.BoolValue is_return_delivery = 11;
  // Weight
  google.protobuf.Int32Value weight = 12;
  // Existing Quote UUID: If passed, this quote id will be used to decide if the pricing needs a re-computation
  google.protobuf.StringValue existing_quote_id = 13;
  // Midmile details for parcel orders to determine the correct midmile rate
  ParcelMidmileDetails parcel_midmile_info = 14;
}

// Midmile details for parcel orders to determine the correct midmile rate
message ParcelMidmileDetails {
  // Required: The weight class of the parcel order
  google.protobuf.DoubleValue parcel_weight_class = 1;
  // Required: The straight line distance from origin warehouse's pickup address to customer dropoff address,
  // also termed as the midmile distance
  google.protobuf.Int32Value distance_in_miles = 2;
  // Required: The id of the merchant warehouse from where the parcel is picked up
  google.protobuf.StringValue origin_warehouse_id = 3;
  // Required: Service tier of the parcel route
  merchant_financial_service.common.MidmileServiceTier service_tier = 4;
  // Optional: Upcharge market name if applies
  parcel_service.v1.UpchargeMarketName upcharge_market_name = 5;
}

message TaxComponent {
  // Tax type
  TaxComponentType tax_type = 1;
  // Tax value in cents
  google.protobuf.Int64Value tax_cents = 2;
}

message FeeDetail {
  // Fee type
  FeeComponentType fee_type = 1;
  // Fee value in cents
  google.protobuf.Int32Value fee_cents = 2;
  // Display name of the fees
  google.protobuf.StringValue fee_name = 3;
  // Tax value in cents
  google.protobuf.Int32Value tax_cents = 4;
  // Breakdown of tax
  repeated TaxComponent tax_breakdown = 5;
  // Sub fee details
  repeated FeeDetail sub_fee_details = 6;
}

message CreateQuoteRequest {
  // Drive store uuid
  google.protobuf.StringValue drive_store_id = 1;
  // Drive business uuid
  google.protobuf.StringValue drive_business_id = 2;
  // Drive developer id
  google.protobuf.Int64Value developer_id = 3;
  // Submarket id
  google.protobuf.Int32Value submarket_id = 4;
  // Order Type
  drive_partnership.v1.OrderType order_type = 5;
  // Context for quote creation
  QuoteContext context = 6;
  // Quote Created By Related Entity Type
  QuoteRelatedEntityType related_entity_type = 7;
  // Quote Created By Related Entity Id
  google.protobuf.StringValue related_entity_id = 8;
  // Store id
  google.protobuf.Int64Value store_id = 9;
  // Business id
  google.protobuf.Int64Value business_id = 10;
}

message AcceptQuoteRequest {
  // Quote UUID
  google.protobuf.StringValue id = 1;
  // Quote accepted timestamp
  google.protobuf.Timestamp accepted_at = 2;
  // Quote Accepted By Related Entity Type
  QuoteRelatedEntityType related_entity_type = 3;
  // Quote Accepted By Related Entity ID
  google.protobuf.StringValue related_entity_id = 4;
}

message GetQuoteRequest {
  // Quote UUID
  google.protobuf.StringValue id = 1;
}

message CreateQuoteResponse {
  // Quote
  Quote quote = 1;
}

message AcceptQuoteResponse {
  // Quote
  Quote quote = 1;
}

message GetQuoteResponse {
  // Quote
  Quote quote = 1;
}

// Quote Object
message Quote {
  // Quote UUID
  google.protobuf.StringValue id = 1;
  // Created at
  google.protobuf.Timestamp created_at = 2;
  // Subtotal of the fees
  google.protobuf.Int32Value sub_total = 3;
  // Tax on the fees
  google.protobuf.Int32Value tax = 4;
  // Total = subtotal + tax
  google.protobuf.Int32Value total = 5;
  // Currency
  google.protobuf.StringValue currency = 6;
  // Fee breakdown
  repeated FeeDetail fee_details = 7;
  // Tax breakdown
  repeated TaxComponent tax_breakdown = 8;
  // Quote Acceptance time
  google.protobuf.Timestamp accepted_at = 9;
  // Related entity type
  QuoteRelatedEntityType related_entity_type = 10;
  // Related entity id
  google.protobuf.StringValue related_entity_id = 11;
  // Promotion id which was applied
  google.protobuf.StringValue promotion_id = 12;
  // Tax transaction id which was applied
  google.protobuf.StringValue tax_transaction_id = 13;
}

// Address Object
message Address {
  // Address ID
  int64 id = 1;
  // Google place id
  google.protobuf.StringValue google_place_id = 2;
  // Printable address
  google.protobuf.StringValue printable_address = 3;
  // Unit
  google.protobuf.StringValue unit = 4;
  // Street
  google.protobuf.StringValue street = 5;
  // City
  google.protobuf.StringValue city = 6;
  // Subpremise
  google.protobuf.StringValue subpremise = 7;
  // State
  google.protobuf.StringValue state = 8;
  // Zipcode
  google.protobuf.StringValue zip_code = 9;
  // longitude
  google.protobuf.FloatValue lng = 10;
  // latitude
  google.protobuf.FloatValue lat = 11;
  // Country
  google.protobuf.StringValue country = 12;
  // Shortname
  google.protobuf.StringValue shortname = 13;
  // HP longitude
  google.protobuf.DoubleValue hp_lng = 14;
  // HP latitude
  google.protobuf.DoubleValue hp_lat = 15;
  // Address uuid
  google.protobuf.StringValue address_uuid = 16;
  // Locality
  google.protobuf.StringValue locality = 17;
}

// Different related entity types for quotes
enum QuoteRelatedEntityType {
  // Unspecified Type
  QUOTE_RELATED_ENTITY_TYPE_UNSPECIFIED = 0;
  // Drive Order
  DRIVE_ORDER = 1;
  // Delivery
  DELIVERY = 2;
}

// Different FeeComponent Types
enum FeeComponentType {
  // Unspecified Type
  FEE_COMPONENT_TYPE_UNSPECIFIED = 0;
  // Distance based fee type
  DISTANCE_BASED_FEE = 1;
  // Order value base fee
  ORDER_VALUE_BASED_FEE = 2;
  // Service fee
  SERVICE_FEE = 3;
  // Mx Subdisized fee
  MX_SUBSIDY = 4;
  // Other fees
  OTHER = 5;
  // Small order fee
  SMALL_ORDER_FEE = 6;
  // Driver wait time fee
  DWT_FEE = 7;
  // Flat fee
  FLAT_FEE = 8;
  // Weight based fee
  WEIGHT_BASED_FEE = 9;

  // Other fees which are not part of the commission_fee_components but are part of the fee breakdown
  // Promotion discount
  PROMOTION = 10; // = COMMISSION_FEE - PROMOTIONAL_FEE
  // Dasher regulatory fee
  DASHER_REGULATORY_FEE = 11;
  // Commission fee
  COMMISSION_FEE = 12;
  // Cash on delivery fee
  CASH_FEE = 13;
}

// Differenet Tax Component Types
enum TaxComponentType {
  // Unspecified type
  TAX_COMPONENT_TYPE_UNSPECIFIED = 0;
  // General Service Tax
  GST_HST = 1;
  // Qubec Sales Tax
  QST = 2;
  // Provice Specific Tax
  PST = 3;
}
