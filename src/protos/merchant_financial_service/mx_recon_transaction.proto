syntax = "proto3";
package mx_recon_transaction.v1;

import "common/common.proto";
import "common/money.proto";
import "common/order.proto";
import "common/order_config.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "merchant_financial_service/merchant_payout_transaction_service.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_outer_classname = "MxReconTransactionProtos";
option java_package = "com.doordash.service.mx_recon_transaction";

// Fee group Enum
enum FeeGroup {
  // Unknown fee group
  FEE_GROUP_UNSPECIFIED = 0;
  // Subtotal fee group
  SUBTOTAL = 1;
  // Subtotal tax fee group
  SUBTOTAL_TAX = 2;
  // Customer fees fee group
  CUSTOMER_FEES = 3;
  // Customer fees tax fee group
  CUSTOMER_FEES_TAX = 4;
  // Tips fee group
  TIPS = 5;
  // Sales fee group
  SALES = 6;
  // Commission fee group
  COMMISSION = 7;
  // Commission tax fee group
  COMMISSION_TAX = 8;
  // Merchant fees fee group
  MERCHANT_FEES = 9;
  // Merchant fees tax fee group
  MERCHANT_FEES_TAX = 10;
  // Doordash services fee group
  DOORDASH_SERVICES = 11;
  // Error charges fee group
  ERROR_CHARGES = 12;
  // Adjustments credit fee group
  ADJUSTMENTS_CREDIT = 13;
  // Adjustments debit fee group
  ADJUSTMENTS_DEBIT = 14;
  // Adjustments fee group
  ADJUSTMENTS = 15;
  // Amendments fee group
  AMENDMENTS = 16;
  // Snap EBT fee group
  SNAP_EBT = 17;
  // Tax remitted by Doordash to state fee group
  TAX_REMITTED_BY_DOORDASH_TO_STATE = 18;
  // Subtotal tax passed to CAN fee group
  SUBTOTAL_TAX_PASSED_TO_CAN = 19;
  // Net total fee group
  NET_TOTAL = 20;
  // Discount fee group
  DISCOUNT = 21;
  // Surcharge fee group
  SURCHARGE = 22;
  // Commission inclusive of GST fee group
  COMMISSION_INCLUSIVE_OF_GST = 23;
  // Subtotal inclusive of GST fee group
  SUBTOTAL_INCLUSIVE_OF_GST = 24;
  // Subtotal tax passed to merchant federal harmonized CAN fee group
  SUBTOTAL_TAX_PASSED_TO_MERCHANT_FEDERAL_HARMONIZED_CAN = 25;
  // Subtotal tax passed to merchant provincial CAN fee group
  SUBTOTAL_TAX_PASSED_TO_MERCHANT_PROVINCIAL_CAN = 26;
  // Tax remitted fee group
  TAX_REMITTED = 27;
  // Merchant fees inclusive of GST fee group
  MERCHANT_FEES_INCLUSIVE_OF_GST = 28;
  // Customer fees inclusive of GST fee group
  CUSTOMER_FEES_INCLUSIVE_OF_GST = 29;
  // Customer fee tax - this is to make sure enum conversion succeed since in db we store as customer_fee_tax
  CUSTOMER_FEE_TAX = 30;
  // Adjustments v2 fee group
  ADJUSTMENTS_V2 = 31;
  // Merchant fees v2 fee group
  MERCHANT_FEES_V2 = 32;
  // Merchant fees tax v2 fee group
  MERCHANT_FEES_TAX_V2 = 33;
  // Commission and fees fee group
  COMMISSION_AND_FEES = 34;
  // Net total v2 fee group
  NET_TOTAL_V2 = 35;
  // Amendments v2 fee group
  AMENDMENTS_V2 = 36;
  // Marketing cost fee group
  MARKETING_COST = 37;
  // Sponsored partner contribution fee group
  reserved 38;
  reserved "SPONSORED_PARTNER_CONTRIBUTION";
  // group is renamed below
  reserved 39; // MARKETING_CREDITS = 39;
  reserved "MARKETING_CREDITS";
  // Marketing spend fee group
  MARKETING_SPEND = 40;
  // Marketing fees v2 fee group
  MARKETING_FEES_V2 = 41;
  // Discount paid by MX fee group
  DISCOUNT_PAID_BY_MX = 42;
  // Discount paid by Doordash fee group
  DISCOUNT_PAID_BY_DOORDASH = 43;
  // Discount paid by sponsor contribution fee group
  reserved 44;
  reserved "DISCOUNT_PAID_BY_SPONSOR_CONTRIBUTION";
  // Marketing credit fee group
  MARKETING_CREDIT = 45;
  // third party contribution fee group
  THIRD_PARTY_CONTRIBUTION = 46;
  // discount paid by third party contribution fee group
  DISCOUNT_PAID_BY_THIRD_PARTY_CONTRIBUTION = 47;
  // Customer Fee Tax Remitted by Doordash to Tax authorities
  CUSTOMER_FEE_TAX_REMITTED_BY_DOORDASH = 48;
  // Subtotal tax Remitted by Doordash to Tax authorities
  SUBTOTAL_TAX_REMITTED_BY_DOORDASH = 49;
}

// Fee Group Entry. Represents Included components in each fee group
message FeeGroupEntry {
  // Fee Group Name
  FeeGroup fee_group_name = 1; // subtotal (subtotal fee group) commission, amount = 300
  // Fee Group Amount
  money.MonetaryFields fee_group_amount = 2;
}

// recon entry
message ReconEntry {
  // recon entry Name
  google.protobuf.StringValue entry_name = 1; // subtotal (payout component)
  // breakdown Amount
  money.MonetaryFields entry_amount = 2;
}

// ReconFeeGroup
message ReconFeeGroup {
  // Fee Group Name
  FeeGroupEntry entry = 1; // commission, amount = 300
  // Fee Group BreakDowns
  repeated ReconEntry fee_group_breakdown = 2; // commission amount = 400 , commission_adjustment = -100
}

// Merchant Payout Transaction Type
message MxPayoutReconTransaction {
  // Type of the transaction
  merchant_payout_transaction.MxPayoutEntityType reference_type = 1;
  // Reference ID of the transaction
  google.protobuf.StringValue reference_id = 2;
  // Friendly Name of the transaction
  google.protobuf.StringValue mx_recon_transaction_type = 3; // Order, Fee, Adjustments, Error Charge
  // Transaction ID. Actual Bank service transaction id
  google.protobuf.StringValue transaction_id = 4;
  // Transaction Amount. Actual Bank service transaction amount
  money.MonetaryFields transaction_amount = 5;
  // collection of all fee groups
  repeated ReconFeeGroup fee_groups = 6;
  // transaction time in UTC
  google.protobuf.Timestamp transaction_created_at = 7;
  // description of the transaction
  google.protobuf.StringValue description = 8;
  // payment account id
  google.protobuf.StringValue payment_account_id = 9;
  // is the transaction voided (reversed transaction)
  google.protobuf.BoolValue is_void = 10;
}

// Order Details
message OrderDetails {
  // delivery uuid
  google.protobuf.StringValue delivery_uuid = 1;
  // order config
  common.order_config.v1.OrderConfig order_config = 2;
  // order id
  google.protobuf.StringValue order_id = 3;
  // channel
  google.protobuf.StringValue channel = 4;
  // delivery id
  google.protobuf.StringValue delivery_id = 5;
  // is this a test order
  google.protobuf.BoolValue is_test = 6;
  // revenue center
  google.protobuf.StringValue revenue_center = 7;
  // payment method type
  google.protobuf.StringValue payment_method_type = 8;
  // revenue center uuid
  google.protobuf.StringValue revenue_center_uuid = 9;
  // deprecated order created at
  google.protobuf.Timestamp order_created_at = 10 [deprecated = true];
  // deprecated payout protocol
  google.protobuf.StringValue payout_protocol = 11 [deprecated = true];
  // is this a dashpass order
  google.protobuf.BoolValue is_dashpass_order = 12;
  // fullfillment type
  google.protobuf.StringValue fullfillment_type = 13;
  // payment protocol
  google.protobuf.StringValue payment_protocol = 14;
}

// store details
message StoreInfo {
  // store id
  google.protobuf.StringValue store_id = 1;
  // business id
  google.protobuf.StringValue business_id = 2;
  // store name
  google.protobuf.StringValue store_name = 3;
  // business name
  google.protobuf.StringValue business_name = 4;
  // store timezone
  google.protobuf.StringValue timezone = 5;
  //Cx address, country shortname such as US, DE
  google.protobuf.StringValue country_shortname = 6;
  //Cx address state information
  google.protobuf.StringValue administrative_area_level1 = 7;
  // payment account id
  google.protobuf.StringValue payment_account_id = 8 [deprecated = true];
}

// Merchant Payout Transaction
message ReconTransactionEvent {
  // Merchant Payout Recon Transaction
  MxPayoutReconTransaction recon_transaction = 1;
  // Order Details
  OrderDetails order_details = 2;
  // Store Info
  StoreInfo store_info = 3;
}
