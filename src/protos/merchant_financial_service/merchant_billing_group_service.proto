syntax = "proto3";
package merchant_billing_group.v1;

import "common/common.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "merchant_financial_service/common.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_outer_classname = "MerchantBillingGroupProtos";
option java_package = "com.doordash.service.merchant_billing_group";

/**
 * Service that provides operations for billing groups.
 */
service BillingGroupService {
  /**
   * Read APIs
   */
  // Endpoint that returns billing group level based on entity type and entity id.
  rpc GetBillingGroupLevel(GetBillingGroupLevelRequest) returns (GetBillingGroupLevelResponse);
  // Endpoint to query billing group using UUID or Numeric ID
  rpc GetBillingGroupAndPaymentConfigById(GetBillingGroupAndPaymentConfigByIdRequest) returns (GetBillingGroupAndPaymentConfigByIdResponse);
  // Endpoint to query invoicing groups
  // This endpoint uses pagination using page_size, page_token and next_page_token
  rpc GetBillingGroups(GetBillingGroupsRequest) returns (GetBillingGroupsResponse);
  // Endpoint to query all active payments methods of a store
  rpc GetAvailablePaymentMethods(GetAvailablePaymentMethodsRequest) returns (GetAvailablePaymentMethodsResponse);
  // Endpoint to query billing group memberships
  rpc GetBillingGroupMemberships(GetBillingGroupMembershipsRequest) returns (GetBillingGroupMembershipsResponse);
  // Endpoint to query billing group onboarding rules
  rpc GetBillingGroupOnboardingRules(GetBillingGroupOnboardingRulesRequest) returns (GetBillingGroupOnboardingRulesResponse);

  /**
   * Write APIs
   */
  // CreateBillingGroup  will create a new billing configuration with necessary payment methods specified along with creating netsuite customer
  // It does the following step
  //   Creates a billing group
  //   Create a billing group payment config
  rpc CreateBillingGroup(CreateBillingGroupRequest) returns (CreateBillingGroupResponse);
  // Endpoint to create new payment config for existing billing groups
  // This will end the previous payment config for the target type and create a new one
  rpc CreateBillingGroupPaymentConfigs(CreateBillingGroupPaymentConfigsRequest) returns (CreateBillingGroupPaymentConfigsResponse);
  // Endpoint to create Billing Group Membership
  rpc CreateBillingGroupMembership(CreateBillingGroupMembershipRequest) returns (CreateBillingGroupMembershipResponse);
  // Endpoint to create Billing Group Onboarding rule
  rpc CreateBillingGroupOnboardingRule(CreateBillingGroupOnboardingRuleRequest) returns (CreateBillingGroupOnboardingRuleResponse);
  // Deactivate BillingGroup membership
  rpc DeactivateBillingGroupMembership(DeactivateBillingGroupMembershipRequest) returns (DeactivateBillingGroupMembershipResponse);
  // Deactivate BillingGroup onboarding rule
  rpc DeactivateBillingGroupOnboardingRule(DeactivateBillingGroupOnboardingRuleRequest) returns (DeactivateBillingGroupOnboardingRuleResponse);
}

// CreateBillingGroup request message
// All the parameters are required and the request will be rejected if any is missing
message CreateBillingGroupRequest {
  // Billing group
  BillingGroup billing_group = 1;
  // Payment Configurations
  repeated BillingGroupPaymentConfig payment_configurations = 2;
}

// CreateBillingGroup response message
message CreateBillingGroupResponse {
  // Billing group
  BillingGroup billing_group = 1;
  // Payment Configurations
  repeated BillingGroupPaymentConfig payment_configurations = 2;
}

// CreateBillingGroupPaymentConfigs request message
message CreateBillingGroupPaymentConfigsRequest {
  // Payment Configurations
  repeated BillingGroupPaymentConfig payment_configurations = 1;
}

// CreateBillingGroupPaymentConfigs response message
message CreateBillingGroupPaymentConfigsResponse {
  // Created Payment Configurations
  repeated BillingGroupPaymentConfig payment_configurations = 1;
}

// CreateNetsuiteAccountForBillingGroup request message
message CreateNetsuiteAccountRequest {
  // Billing Contact
  BillingContact billing_contact = 1;
  // Customer Name
  google.protobuf.StringValue customer_name = 2;
  // Numeric billing group id
  google.protobuf.Int64Value billing_group_id = 3;
  // brand name
  google.protobuf.StringValue brand_name = 4;
}

// CreateBillingGroupMembership request message
message CreateBillingGroupMembershipRequest {
  // Billing group membership
  BillingGroupMembership membership = 1;
}

// CreateBillingGroupMembership response message
message CreateBillingGroupMembershipResponse {
  // Billing group membership
  BillingGroupMembership membership = 1;
}

// CreateBillingOnboardingRule request message
message CreateBillingGroupOnboardingRuleRequest {
  // Billing group onboarding rule
  BillingGroupOnboardingRule onboarding_rule = 1;
}

// CreateBillingGroupOnboardingRule response message
message CreateBillingGroupOnboardingRuleResponse {
  // Billing group onboarding rule
  BillingGroupOnboardingRule onboarding_rule = 1;
}

// DeactivateBillingGroupMembership request message
message DeactivateBillingGroupMembershipRequest {
  // Billing group membership id
  google.protobuf.StringValue membership_id = 1;
  // operator id
  google.protobuf.StringValue operator_id = 2;
}

// DeactivateBillingGroupMembership response message
message DeactivateBillingGroupMembershipResponse {
  // Billing group membership
  BillingGroupMembership membership = 1;
}

// DeactivateBillingGroupOnboardngRule request message
message DeactivateBillingGroupOnboardingRuleRequest {
  // Billing group onboarding rule id
  google.protobuf.StringValue onboarding_rule_id = 1;
  // operator id
  google.protobuf.StringValue operator_id = 2;
}

// DeactivateBillingGroupOnboardngRule response message
message DeactivateBillingGroupOnboardingRuleResponse {
  // Billing group onboarding rule
  BillingGroupOnboardingRule onboarding_rule = 1;
}

// GetBillingGroupLevel request messages.
message GetBillingGroupLevelRequest {
  // Entity type for which billing group level is requested.
  merchant_financial_service.common.EntityType entity_type = 1;
  // Entity id for which billing group level is requested.
  google.protobuf.Int64Value entity_id = 2;
}

// GetBillingGroupLevel response messages.
message GetBillingGroupLevelResponse {
  // Billing group level for the entity.
  BillingGroupLevel level = 1;
}

// GetBillingGroupAndPaymentConfigById request message
message GetBillingGroupAndPaymentConfigByIdRequest {
  // Billing group uuid or numeric id
  oneof id {
    // Billing group UUID
    google.protobuf.StringValue billing_group_uuid = 1;
    // Billing group numeric id
    google.protobuf.Int64Value billing_group_id = 2;
  }
}

// GetBillingGroupAndPaymentConfigById response message
message GetBillingGroupAndPaymentConfigByIdResponse {
  // Billing group
  BillingGroup billing_group = 1;
  // Payment configs of billing group
  repeated BillingGroupPaymentConfig payment_configs = 2;
}

// GetBillingGroups request message
message GetBillingGroupsRequest {
  // Billing group name
  google.protobuf.StringValue billing_group_name = 1;
  // page size
  google.protobuf.Int32Value page_size = 2;
  // page token
  google.protobuf.StringValue page_token = 3;
  // payment target id
  google.protobuf.Int64Value payment_target_id = 4;
  // payment target type =
  PaymentTargetType payment_target_type = 5;
}

// GetBillingGroups response message
message GetBillingGroupsResponse {
  reserved 1;
  reserved "billing_groups";
  // Billing Group and its related payment configs
  repeated BillingGroupAndPaymentConfigs billing_groups_with_payment_configs = 3;
  // next page token
  google.protobuf.StringValue next_page_token = 2;
}

// GetAvailablePaymentMethods request message
message GetAvailablePaymentMethodsRequest {
  // store id
  google.protobuf.Int64Value store_id = 1;
  // business id
  google.protobuf.Int64Value business_id = 2;
  // developer id
  google.protobuf.Int64Value developer_id = 3;
  // Source of gRPC request to determine valid sources
  ProductSource source = 4;
  // List of payment methods specified at delivery level
  repeated DeliveryPaymentMethod delivery_level_payment_method_filter = 5;
}

// GetAvailablePaymentMethods response message
message GetAvailablePaymentMethodsResponse {
  // Available payment methods
  repeated common.PaymentMethod payment_methods = 1;
}

// GetBillingGroupMemberships request message
message GetBillingGroupMembershipsRequest {
  // Billing group uuid or numeric id
  oneof id {
    // Billing group UUID
    google.protobuf.StringValue billing_group_uuid = 1;
    // Billing group numeric id
    google.protobuf.Int64Value billing_group_id = 2;
    // Entity details
    EntityDetails entity_details = 3;
  }
}

// GetBillingGroupMemberships response message
message GetBillingGroupMembershipsResponse {
  // Billing Group Memberships
  repeated BillingGroupMembership memberships = 1;
}

// GetBillingGroupOnboardingRules request message
message GetBillingGroupOnboardingRulesRequest {
  // Billing group uuid or numeric id
  oneof id {
    // Billing group UUID
    google.protobuf.StringValue billing_group_uuid = 1;
    // Billing group numeric id
    google.protobuf.Int64Value billing_group_id = 2;
    // Entity details
    EntityDetails entity_details = 3;
  }
  // Geographic type
  GeoType geo_type = 4;
  // The corresponding geographic id for the geographich type
  // Ex: if geo_type = country then geo_id can be 'US', 'CAN', 'AUS' etc
  // This determines an onboarding rule based on country/state for onboarding to specific billing groups
  google.protobuf.StringValue geo_id = 5;
}

// GetBillingGroupOnboardingRules response message
message GetBillingGroupOnboardingRulesResponse {
  // Billing Group Onboarding Rules
  repeated BillingGroupOnboardingRule onboarding_rules = 1;
}

// Entity type and Entity id combination message
message EntityDetails {
  // Entity type
  merchant_financial_service.common.EntityType entity_type = 1;
  // Entity id
  google.protobuf.Int64Value entity_id = 2;
}

// Billing Group
message BillingGroup {
  // UUID
  google.protobuf.StringValue id = 1;
  // Numeric ID
  google.protobuf.Int64Value billing_group_id = 2;
  // Name
  google.protobuf.StringValue name = 3;
  // Level like BUSINESS/DEVELOPER
  merchant_financial_service.common.EntityType level = 4;
  // Is the billing group active
  google.protobuf.BoolValue is_active = 5;
  // Reasons for deactivation
  google.protobuf.StringValue deactivation_reason = 6;
  // Currency
  google.protobuf.StringValue currency = 7;
  // created by
  google.protobuf.StringValue created_by = 8;
  // updated by
  google.protobuf.StringValue updated_by = 9;
  // contract link
  google.protobuf.StringValue contract_link = 10;
  // Country code
  common.CountryCode country_code = 11;
  // Source
  google.protobuf.StringValue source = 12;
  // created at
  google.protobuf.Timestamp created_at = 13;
}

// Billing Group Payment Config
message BillingGroupPaymentConfig {
  // Billing group uuid
  google.protobuf.StringValue billing_group_uuid = 1;
  // Payment target type
  PaymentTargetType payment_target_type = 2;
  // Payment target id
  google.protobuf.Int64Value payment_target_id = 3;
  // Start at
  google.protobuf.Timestamp start_at = 4;
  // End at
  google.protobuf.Timestamp end_at = 5;
  // Source
  google.protobuf.StringValue source = 6;
  // invoicing payment term
  PaymentTerm invoicing_payment_term = 7;
  // netsuite configuration id
  google.protobuf.StringValue netsuite_configuration_id = 8;
  // is withholding enabled
  google.protobuf.BoolValue withholding_enabled = 9;
  // created by
  google.protobuf.StringValue created_by = 10;
  // updated by
  google.protobuf.StringValue updated_by = 11;
  // create netsuite account
  CreateNetsuiteAccountRequest netsuite_account_details = 12;
  // Blocked sources
  repeated google.protobuf.StringValue blocked_sources = 13;
  // Reasons for deactivation
  repeated google.protobuf.StringValue reasons_for_deactivation = 14;
}

// Billing Group and related Payment Configurations
message BillingGroupAndPaymentConfigs {
  // Billing Group
  BillingGroup billing_group = 1;
  // Billing Group Payment Config
  repeated BillingGroupPaymentConfig payment_configs = 2;
}

// Billing Group membership
message BillingGroupMembership {
  // id
  google.protobuf.StringValue id = 1;
  // Entity Type
  merchant_financial_service.common.EntityType entity_type = 2;
  // Entity id
  google.protobuf.Int64Value entity_id = 3;
  // experience
  common.Experience experience = 4;
  // Billing group uuid
  google.protobuf.StringValue billing_group_uuid = 5;
  // start at
  google.protobuf.Timestamp start_at = 6;
  // end at
  google.protobuf.Timestamp end_at = 7;
  // source
  google.protobuf.StringValue source = 8;
  // created by
  google.protobuf.StringValue created_by = 9;
  // updated by
  google.protobuf.StringValue updated_by = 10;
  // created at
  google.protobuf.Timestamp created_at = 11;
}

// Billing Group onboarding rule
message BillingGroupOnboardingRule {
  // id
  google.protobuf.StringValue id = 1;
  // Billing group uuid
  google.protobuf.StringValue billing_group_uuid = 2;
  // Entity type
  merchant_financial_service.common.EntityType entity_type = 3;
  // Entity id
  google.protobuf.Int64Value entity_id = 4;
  // experience
  common.Experience experience = 15;
  // Geographic type
  GeoType geo_type = 6;
  // The corresponding geographic id for the geographich type
  // Ex: if geo_type = country then geo_id can be 'US', 'CAN', 'AUS' etc
  // This determines an onboarding rule based on country/state for onboarding to specific billing groups
  google.protobuf.StringValue geo_id = 7;
  // start at
  google.protobuf.Timestamp start_at = 8;
  // end at
  google.protobuf.Timestamp end_at = 9;
  // source
  google.protobuf.StringValue source = 10;
  // created by
  google.protobuf.StringValue created_by = 11;
  // updated by
  google.protobuf.StringValue updated_by = 12;
  // created at
  google.protobuf.Timestamp created_at = 13;
}

// Contact details used in netsuite account creation for billing
message BillingContact {
  // Billing contact name
  google.protobuf.StringValue name = 1;
  // Billing contact email
  google.protobuf.StringValue email = 2;
  // Billing contact address
  google.protobuf.StringValue address = 3;
  // Billing contact city
  google.protobuf.StringValue city = 4;
  // Billing contact state
  google.protobuf.StringValue state = 5;
  // Billing contact zipcode
  google.protobuf.StringValue zipcode = 6;
  // Billing contact country
  common.CountryCode country = 7;
}

// Different related billing group levels
enum BillingGroupLevel {
  // Billing group level is not specified
  UNSPECIFIED = 0;
  // Billing group level is for business
  BUSINESS = 1;
  // Billing group level is for store
  STORE = 2;
  // Billing group level is for drive
  DEVELOPER = 3;
}

// Different payment terms
enum PaymentTerm {
  // Unspecified
  PAYMENT_TERM_UNSPECIFIED = 0;
  // Payment term 7 days
  NET_7 = 1;
  // Payment term 15 days
  NET_15 = 2;
  // Payment term 30 days
  NET_30 = 3;
  // Payment term 45 days
  NET_45 = 4;
  // Payment term 60 days
  NET_60 = 5;
}

// Different payment targets
enum PaymentTargetType {
  // Unspecified
  PAYMENT_TARGET_TYPE_UNSPECIFIED = 0;
  // Direct deposit
  // This is the current default payment method for Marketplace stores where Mx's earnings are deposited
  // This is also used for withholding payment method for drive orders
  DIRECT_DEPOSIT = 1;
  // Invoicing
  // This is the current default payment method for Drive stores
  // Here we invoice the stores/businesses for the expenses for using Drive
  INVOICE = 2;
  // Payable invoicing
  // Use Mx provided data (invoice) to facilitate the payment
  PAYABLE_INVOICE = 3;
  // Withholding balance tracking
  // Currently uses netsuite to track the wh balances across the business
  WITHHOLDING_BALANCES = 4;
  // New Vertical Invoice is used to generate an invoice for new verticals (CnG) Mx,
  // primarily for Mx Controlled Inflation currently
  NEW_VERTICAL_INVOICE = 5;
}

// Geographic Type
// Represents a geographic level
// currently it has a country and state and can be extended to include more granular geographich regions
enum GeoType {
  // Unspecified
  GEO_TYPE_UNSPECIFIED = 0;
  // Country
  COUNTRY = 1;
  // State
  STATE = 2;
}

// Describes what kind of product the endpoint/object (where this is used) is coming from
enum ProductSource {
  // Default
  PRODUCT_SOURCE_UNSPECIFIED = 0;
  // Source is the merchant portal order form product
  PRODUCT_SOURCE_MERCHANT_PORTAL_ORDER_FORM = 1;
  // Source is the merchant portal bulk uploader product
  PRODUCT_SOURCE_MERCHANT_PORTAL_BULK_UPLOADER = 2;
  // Source is the Drive Public API V1
  PRODUCT_SOURCE_DRIVE_PUBLIC_API_V1 = 3;
  // Source is Dispatch Customer Support (app-customer-support) redelivery form
  PRODUCT_SOURCE_DISPATCH_CUSTOMER_SUPPORT_REDELIVERY_FORM = 4;
  // Source is merchant portal redelivery form
  PRODUCT_SOURCE_MERCHANT_PORTAL_REDELIVERY_FORM = 5;
  /**
   * Source is merchant portal loading action e.g. endpoint to get initial state information for Mx Portal
   * One example is the Mx Portal store endpoint in which the portal fetches all store-related info
   * that is used throughout Mx Portal. "Loading" can be seen as its own sort of product/action and not tied
   * to any particular specific product page.
   */
  PRODUCT_SOURCE_MERCHANT_PORTAL_APP_LOAD = 6;
  /**
   * Source is from merchant portal but specific subproduct/source is unidentified. Use case: Fallback if specific subproduct
   * Use case:
   * - Request comes in from Mx Portal but was unable to be mapped to more specific ProductSource enums. But because we know
   *   the request is from Mx Portal, use this enum as fallback
   */
  PRODUCT_SOURCE_MERCHANT_PORTAL = 7;
  // Source is the merchant portal request refund form for a single order.
  PRODUCT_SOURCE_MERCHANT_PORTAL_REQUEST_REFUND_FORM = 8;
  // Source is the Dispatch Customer Support tool.
  PRODUCT_SOURCE_DISPATCH_CUSTOMER_SUPPORT = 9;
  // Source is the outage processor tool.
  PRODUCT_SOURCE_OUTAGE_PROCESSOR = 10;
  // Source is Drive Public API V2.
  PRODUCT_SOURCE_DRIVE_PUBLIC_API_V2 = 11;
  // Source is from Admin Gateway Bulk Tools.
  PRODUCT_SOURCE_ADMIN_GATEWAY_BULK_TOOLS = 12;
  // Source is Cx-facing Order Tracking Page
  PRODUCT_SOURCE_CUSTOMER_ORDER_TRACKING_PAGE = 13;
  // Source is from Legacy Bulk Tools
  PRODUCT_SOURCE_LEGACY_BULK_TOOLS = 14;
  // Source is THQ's Order Resolution Tool
  PRODUCT_SOURCE_THQ_ORDER_RESOLUTION_TOOL = 15;
  // Source is the Parcel Redelivery Switch Stores Tool
  PRODUCT_SOURCE_PARCEL_REDELIVERY_SWITCH_STORES_TOOL = 16;
}

// Delivery Level Payment Method
enum DeliveryPaymentMethod {
  // Default
  DELIVERY_PAYMENT_METHOD_UNSPECIFIED = 0;
  // Cash Payment Method
  DELIVERY_PAYMENT_METHOD_CASH = 1;
}
