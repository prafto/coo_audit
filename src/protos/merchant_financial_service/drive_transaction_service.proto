syntax = "proto3";
package drive_transaction.v1;

import "common/common.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "merchant_financial_service/common.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_outer_classname = "DriveTransactionProtos";
option java_package = "com.doordash.service.drive_transaction.v1";

// Service for drive transactions
service DriveTransactionService {
  // Create new transaction
  rpc CreateTransaction(CreateTransactionRequest) returns (CreateTransactionResponse);
  // Update doNotCharge field for a given transaction
  rpc MarkTransactionsAsDoNotCharge(MarkTransactionsAsDoNotChargeRequest) returns (MarkTransactionsAsDoNotChargeResponse);
  // Fetch transactions
  rpc GetTransactions(GetTransactionsRequest) returns (GetTransactionsResponse);
}

// Request for CreateTransaction
message CreateTransactionRequest {
  // transaction to be created
  DriveTransaction transaction = 1;
  // account entity for the transaction
  AccountEntity account_entity = 2;
}

// Response for CreateTransaction
message CreateTransactionResponse {
  // new transaction
  DriveTransaction transaction = 1;
}

// Request for MarkTransactionsAsDoNotCharge
message MarkTransactionsAsDoNotChargeRequest {
  // ids of the transactions to be updated
  repeated google.protobuf.StringValue ids = 1;
}

// Response for MarkTransactionsAsDoNotCharge
message MarkTransactionsAsDoNotChargeResponse {
  // if true the transactions were updated successfully, if false do_not_charge remains unchanged
  google.protobuf.BoolValue success = 1;
}

// Request for GetTransactions
message GetTransactionsRequest {
  // query data to look up a transaction
  oneof query_data {
    // transaction id data
    FindByTransactionIdQueryData transaction_id_data = 1;
    // entity data
    FindByEntityIdAndTypeQueryData entity_data = 2;
    // deliver id data
    FindByDeliveryIdQueryData delivery_id_data = 3;
    // delivery id and transaction types data
    FindByDeliveryIdAndTransactionTypesQueryData delivery_id_transaction_types_data = 4;
    // time period data
    FindByTimePeriodQueryData time_period_data = 5;
  }
  // page size indicating how many results should be returned
  google.protobuf.Int32Value page_size = 6;
  // cursor used to get the next set of results
  google.protobuf.StringValue cursor = 7;
}

// Query data to find a transaction by id
message FindByTransactionIdQueryData {
  // transaction id
  google.protobuf.StringValue transaction_id = 1;
}

// Query data to find transactions by entity id and type
message FindByEntityIdAndTypeQueryData {
  // related entity id
  google.protobuf.StringValue related_entity_id = 1;
  // related entity type
  RelatedEntityType related_entity_type = 2;
}

// Query data to find transactions by delivery id, void transactions can be filtered out
message FindByDeliveryIdQueryData {
  // delivery id
  google.protobuf.Int64Value delivery_id = 1;
  // if set to true, transactions with 'do_not_charge = true' will not be included in the results
  google.protobuf.BoolValue filter_out_do_not_charge_transactions = 2;
}

// Query data to find transactions by delivery id and transaction types
message FindByDeliveryIdAndTransactionTypesQueryData {
  // delivery id
  google.protobuf.Int64Value delivery_id = 1;
  // transaction types
  repeated TransactionType transaction_types = 2;
}

// Query data to find transactions created between start and end time,
// all transactions returned will have related_entity_type = 'drive_prod.public.drive_transaction_requests'
message FindByTimePeriodQueryData {
  // start time
  google.protobuf.Timestamp start_time = 1;
  // end time
  google.protobuf.Timestamp end_time = 2;
}

// Response for GetTransactions
message GetTransactionsResponse {
  // drive transactions
  repeated DriveTransaction transactions = 1;
  // cursor to get the next page
  google.protobuf.StringValue next_cursor = 2;
}

// Transaction in Drive service
message DriveTransaction {
  // transaction unique id
  google.protobuf.StringValue id = 1;
  // invoicing group id
  google.protobuf.StringValue invoicing_group_id = 2;
  // account id
  google.protobuf.StringValue account_id = 3;
  // store id
  google.protobuf.StringValue store_id = 4;
  // delivery id
  google.protobuf.Int64Value delivery_id = 5;
  // transaction amount
  google.protobuf.Int32Value transaction_amount = 6;
  // transaction currency
  google.protobuf.StringValue transaction_currency = 7;
  // transaction tax
  google.protobuf.Int32Value transaction_tax = 8;
  // transaction type
  TransactionType transaction_type = 9;
  // transaction notes
  google.protobuf.StringValue transaction_notes = 10;
  // related entity type
  RelatedEntityType related_entity_type = 11;
  // related entity id
  google.protobuf.StringValue related_entity_id = 12;
  // charge type
  ChargeType charge_type = 13;
  // charge id
  google.protobuf.StringValue charge_id = 14;
  // charged dttm
  google.protobuf.Timestamp charged_dttm = 15;
  // adjustment
  google.protobuf.Int32Value adjustment = 16;
  // tip
  google.protobuf.Int32Value tip = 17;
  // commission subtotal
  google.protobuf.Int32Value commission_subtotal = 18;
  // commission tax
  google.protobuf.Int32Value commission_tax = 19;
  // cash on delivery
  google.protobuf.Int32Value cash_on_delivery = 20;
  // aggregator fee
  google.protobuf.Int32Value aggregator_fee = 21;
  // transaction total
  google.protobuf.Int32Value transaction_total = 22;
  // support fee
  google.protobuf.Int32Value support_fee = 23;
  // start at
  google.protobuf.Timestamp start_at = 24;
  // end at
  google.protobuf.Timestamp end_at = 25;
  // period start
  google.protobuf.Timestamp period_start_tz = 26;
  // period end
  google.protobuf.Timestamp period_end_tz = 27;
  // created at
  google.protobuf.Timestamp created_at = 28;
  // updated at
  google.protobuf.Timestamp updated_at = 29;
  // tenant id
  google.protobuf.StringValue tenant_id = 30;
  // internal notes
  google.protobuf.StringValue internal_notes = 31;
  // do not charge
  google.protobuf.BoolValue do_not_charge = 32;
}

// Account entity
message AccountEntity {
  // account entity id
  google.protobuf.Int64Value entity_id = 1;
  // account entity type
  merchant_financial_service.common.EntityType entity_type = 2;
}

// Transaction types
enum TransactionType {
  // TRANSACTION_TYPE_UNSPECIFIED
  TRANSACTION_TYPE_UNSPECIFIED = 0;
  // TRANSACTION_TYPE_ORDER_VOLUME_FEE_ADJUSTMENT
  TRANSACTION_TYPE_ORDER_VOLUME_FEE_ADJUSTMENT = 1;
  // TRANSACTION_TYPE_ORDER_VOLUME_STORE_AVERAGE_FEE_ADJUSTMENT
  TRANSACTION_TYPE_ORDER_VOLUME_STORE_AVERAGE_FEE_ADJUSTMENT = 2;
  // TRANSACTION_TYPE_DWT_FEE_ADJUSTMENT
  TRANSACTION_TYPE_DWT_FEE_ADJUSTMENT = 3;
  // TRANSACTION_TYPE_DWT_DISCOUNT_ADJUSTMENT
  TRANSACTION_TYPE_DWT_DISCOUNT_ADJUSTMENT = 4;
  // TRANSACTION_TYPE_TIP_RATE_DISCOUNT_ADJUSTMENT
  TRANSACTION_TYPE_TIP_RATE_DISCOUNT_ADJUSTMENT = 5;
  // TRANSACTION_TYPE_COMMISSION_ADJUSTMENT
  TRANSACTION_TYPE_COMMISSION_ADJUSTMENT = 6;
  // TRANSACTION_TYPE_PROMOTION
  TRANSACTION_TYPE_PROMOTION = 7;
  // TRANSACTION_TYPE_PROMOTION_SUBSIDY
  TRANSACTION_TYPE_PROMOTION_SUBSIDY = 8;
  // TRANSACTION_TYPE_PROMOTION_ON_COMMISSION
  TRANSACTION_TYPE_PROMOTION_ON_COMMISSION = 9;
  // TRANSACTION_TYPE_VALIDATE_PROMOTION_ON_COMMISSION
  TRANSACTION_TYPE_VALIDATE_PROMOTION_ON_COMMISSION = 10;
  // TRANSACTION_TYPE_TRANSACTION_REQUEST
  TRANSACTION_TYPE_TRANSACTION_REQUEST = 11;
  // TRANSACTION_TYPE_FEE_ADJUSTMENT
  TRANSACTION_TYPE_FEE_ADJUSTMENT = 12;
  // TRANSACTION_TYPE_DASHER_REGULATORY_FEE
  TRANSACTION_TYPE_DASHER_REGULATORY_FEE = 13;
  // TRANSACTION_TYPE_RETURN_FEE
  TRANSACTION_TYPE_RETURN_FEE = 14;
  // TRANSACTION_TYPE_VALIDATE_DASHER_REGULATORY_FEE
  TRANSACTION_TYPE_VALIDATE_DASHER_REGULATORY_FEE = 15;
  // TRANSACTION_TYPE_TIP_ADJUSTMENT
  TRANSACTION_TYPE_TIP_ADJUSTMENT = 16;
  // TRANSACTION_TYPE_SUPPORT
  TRANSACTION_TYPE_SUPPORT = 17;
  // TRANSACTION_TYPE_CANCELLATION_FEE
  TRANSACTION_TYPE_CANCELLATION_FEE = 18;
  // TRANSACTION_TYPE_CANCELLATION_ADJUSTMENT
  TRANSACTION_TYPE_CANCELLATION_ADJUSTMENT = 19;
  // TRANSACTION_TYPE_ACCEPTANCE_RATE_FEE_ADJUSTMENT
  TRANSACTION_TYPE_ACCEPTANCE_RATE_FEE_ADJUSTMENT = 20;
  // TRANSACTION_TYPE_DELIVERY_LEVEL_REFUND
  TRANSACTION_TYPE_DELIVERY_LEVEL_REFUND = 21;
  // TRANSACTION_TYPE_ITEM_LEVEL_REFUND
  TRANSACTION_TYPE_ITEM_LEVEL_REFUND = 22;
  // TRANSACTION_TYPE_DELIVERY_LEVEL_ORDER_VALUE_REFUND
  TRANSACTION_TYPE_DELIVERY_LEVEL_ORDER_VALUE_REFUND = 23;
  // TRANSACTION_TYPE_ITEM_LEVEL_ORDER_VALUE_REFUND
  TRANSACTION_TYPE_ITEM_LEVEL_ORDER_VALUE_REFUND = 24;
  // TRANSACTION_TYPE_COMMISSION_FEE
  TRANSACTION_TYPE_COMMISSION_FEE = 25;
  // TRANSACTION_TYPE_WITHHOLDING_COMMISSION_FEE_BACKFILL
  TRANSACTION_TYPE_WITHHOLDING_COMMISSION_FEE_BACKFILL = 26;
  // TRANSACTION_TYPE_ACCEPTANCE_RATE_FEE
  TRANSACTION_TYPE_ACCEPTANCE_RATE_FEE = 27;
}

// Related entity types
enum RelatedEntityType {
  // RELATED_ENTITY_TYPE_UNSPECIFIED
  RELATED_ENTITY_TYPE_UNSPECIFIED = 0;
  // RELATED_ENTITY_TYPE_DRIVE_PROD_ORDER
  RELATED_ENTITY_TYPE_DRIVE_PROD_ORDER = 1;
  // RELATED_ENTITY_TYPE_CANCELLATION_ADJUSTMENT
  RELATED_ENTITY_TYPE_CANCELLATION_ADJUSTMENT = 2;
  // RELATED_ENTITY_TYPE_CANCELLATION_FEE
  RELATED_ENTITY_TYPE_CANCELLATION_FEE = 3;
  // RELATED_ENTITY_TYPE_COMMISSION_ADJUSTMENT
  RELATED_ENTITY_TYPE_COMMISSION_ADJUSTMENT = 4;
  // RELATED_ENTITY_TYPE_DRIVE_PROD_PROMOTION
  RELATED_ENTITY_TYPE_DRIVE_PROD_PROMOTION = 5;
  // RELATED_ENTITY_TYPE_DRIVE_PROD_TRANSACTION_REQUEST
  RELATED_ENTITY_TYPE_DRIVE_PROD_TRANSACTION_REQUEST = 6;
  // RELATED_ENTITY_TYPE_RCOPY_FACT_DRIVE_DELIVERY_AGGREGATIONS
  RELATED_ENTITY_TYPE_RCOPY_FACT_DRIVE_DELIVERY_AGGREGATIONS = 7;
  // RELATED_ENTITY_TYPE_FEE_ADJUSTMENT
  RELATED_ENTITY_TYPE_FEE_ADJUSTMENT = 8;
  // RELATED_ENTITY_TYPE_DASHER_REGULATORY_FEE
  RELATED_ENTITY_TYPE_DASHER_REGULATORY_FEE = 9;
  // RELATED_ENTITY_TYPE_TIP_ADJUSTMENT
  RELATED_ENTITY_TYPE_TIP_ADJUSTMENT = 10;
  // RELATED_ENTITY_TYPE_ACCEPTANCE_RATE_FEE_ADJUSTMENT
  RELATED_ENTITY_TYPE_ACCEPTANCE_RATE_FEE_ADJUSTMENT = 11;
  // RELATED_ENTITY_TYPE_PROMOTION_ON_COMMISSION
  RELATED_ENTITY_TYPE_PROMOTION_ON_COMMISSION = 12;
}

// Charge types
enum ChargeType {
  // CHARGE_TYPE_UNSPECIFIED
  CHARGE_TYPE_UNSPECIFIED = 0;
  // CHARGE_TYPE_INVOICE
  CHARGE_TYPE_INVOICE = 1;
  // CHARGE_TYPE_PAYMENT_WITHHOLDING
  CHARGE_TYPE_PAYMENT_WITHHOLDING = 2;
  // CHARGE_TYPE_CREDIT_CARD
  CHARGE_TYPE_CREDIT_CARD = 3;
  // CHARGE_TYPE_CASH_ON_DELIVERY
  CHARGE_TYPE_CASH_ON_DELIVERY = 4;
}
