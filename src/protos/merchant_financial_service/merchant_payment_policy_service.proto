syntax = "proto3";
package merchant_payment_policy;

import "google/protobuf/wrappers.proto";
import "google/protobuf/timestamp.proto";

option java_multiple_files = true;
option java_generic_services = true;

option java_package = "com.doordash.service.merchant_payment_policy";
option java_outer_classname = "MerchantPaymentPolicyProtos";

/**
   MerchantPaymentPolicy supports merchants using multiple payment protocols, as in the Alcohol Dual Protocol project.
   APIs here allow for creating, retrieving, and updating MerchantPaymentPolicy, and retrieving the MerchantPaymentPolicyConfiguration.
  */
service MerchantPaymentPolicyService {
  // Retrieve latest Merchant Payment Policy based on entity type and ID if row is active
  rpc GetMerchantPaymentPolicy (GetMerchantPaymentPolicyRequest) returns (MerchantPaymentPolicyResponse) {}

  // Create Merchant Payment Policy row in DB
  rpc CreateMerchantPaymentPolicy (CreateMerchantPaymentPolicyRequest) returns (MerchantPaymentPolicyResponse) {}

  // Mark latest row in Merchant Payment Policy as inactive
  rpc MarkInactiveMerchantPaymentPolicy (MarkInactiveMerchantPaymentPolicyRequest) returns (MerchantPaymentPolicyResponse) {}

  // API to retrieve Payment Configuration based on Payment Policy
  rpc GetMerchantPaymentPolicyConfiguration (GetMerchantPaymentPolicyConfigurationRequest) returns (MerchantPaymentPolicyConfigurationResponse) {}

  // API to retrieve payment configurations for list of stores
  rpc GetBulkMerchantPaymentPolicyConfigurations (GetMerchantPaymentPolicyConfigurationBulkRequest) returns (MerchantPaymentPolicyConfigurationBulkResponse) {}
}

// Level for Payment Policy configuration
enum ConfigurationLevel {
  UNKNOWN_CONFIGURATION_LEVEL = 0;
  STORE = 1;
  ORDER = 2;
  ITEM = 3;
}

// Merchant Payment Protocol options (inputs)
enum MerchantPaymentProtocol {
  UNKNOWN_MERCHANT_PAYMENT_PROTOCOL = 0;
  RED_CARD = 1;
  DIRECT_DEPOSIT = 2;
}

// Determined Payment Protocol based on MerchantPaymentPolicy and order attributes (output)
enum ConfiguredPaymentProtocol {
  UNKNOWN_CONFIGURED_PAYMENT_PROTOCOL = 0;
  DIRECT_DEPOSIT_PROTOCOL = 1;
  RED_CARD_PROTOCOL = 2;
}

// Entity type associated with entity ID
enum EntityType {
  UNKNOWN_ENTITY_TYPE = 0;
  ENTITY_STORE = 1;
  ENTITY_BUSINESS = 2;
}

enum ConfiguredPaymentProtocolItemType {
  UNKNOWN_ITEM_TYPE = 0;
  ALCOHOL_ITEM_TYPE = 1;
  DEFAULT_ITEM_TYPE = 2;
}

// Request to create MerchantPaymentPolicy
message CreateMerchantPaymentPolicyRequest {
  string entity_id = 1;
  EntityType entity_type = 2;
  ConfigurationLevel configuration_level = 3;
  repeated MerchantPaymentProtocol merchant_payment_protocol = 4;
  string creator_user_id = 5;
}

// Request to get MerchantPaymentPolicy
message GetMerchantPaymentPolicyRequest {
  string entity_id = 1;
  EntityType entity_type = 2;
}

// Request to mark MerchantPaymentPolicy inactive
message MarkInactiveMerchantPaymentPolicyRequest {
  string entity_id = 1;
  EntityType entity_type = 2;
  string updater_user_id = 3;
}

// MerchantPaymentPolicy response
message MerchantPaymentPolicyResponse {
  string entity_id = 1;
  EntityType entity_type = 2;
  ConfigurationLevel configuration_level = 3;
  repeated MerchantPaymentProtocol merchant_payment_protocol = 4;
  string creator_user_id = 5;
  google.protobuf.Timestamp created_at = 6;
  bool is_active = 7;
  string marked_inactive_by = 8;
  google.protobuf.Timestamp marked_inactive_at = 9;
}

// Request to get MerchantPaymentPolicyConfiguration
message GetMerchantPaymentPolicyConfigurationRequest {
  string entity_id = 1;
  EntityType entity_type = 2;
  google.protobuf.Int32Value min_age_restricted = 3; //Deprecated as of 2.9.50
}

message ServiceCallerProtocols {
  ConfiguredPaymentProtocolItemType item_type = 1;
  ConfiguredPaymentProtocol red_card_service_caller_protocol = 2;
  ConfiguredPaymentProtocol direct_deposit_service_caller_protocol = 3;
}

// MerchantPaymentPolicyConfiguration response
message MerchantPaymentPolicyConfigurationResponse {
  string entity_id = 1;
  EntityType entity_type = 2;
  ConfiguredPaymentProtocol red_card_service_caller_protocol = 3; //Deprecated as of 2.9.50
  ConfiguredPaymentProtocol direct_deposit_service_caller_protocol = 4; //Deprecated as of 2.9.50
  repeated ServiceCallerProtocols payment_protocols = 5;
  ConfigurationLevel configuration_level = 6;
}

// Request to get MerchantPaymentPolicyConfiguration in bulk
message GetMerchantPaymentPolicyConfigurationBulkRequest {
  repeated GetMerchantPaymentPolicyConfigurationRequest requests = 1;
}

// MerchantPaymentPolicyConfiguration bulk response
message MerchantPaymentPolicyConfigurationBulkResponse {
  repeated MerchantPaymentPolicyConfigurationResponse responses = 1;
}