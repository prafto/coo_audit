syntax = "proto3";

// buf:lint:ignore DIRECTORY_SAME_PACKAGE
// buf:lint:ignore PACKAGE_VERSION_SUFFIX
package ratings_service;

import "common/common.proto";
import "common/money.proto";
import "common/service_client_config.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "ratings_service/common.proto";
import "ratings_service/consumer_rating.proto";

option java_generic_services = true;
// buf:lint:ignore PACKAGE_SAME_JAVA_PACKAGE
option java_multiple_files = true;
option java_package = "com.doordash.rpc.ratings";

// consumer photo service
service ConsumerPhotoService {
  option (service_client.client_config).service_name = "ratings-service";
  option (service_client.client_config).service_app = "web";
  option (service_client.client_config).response_attempt_timeout_millis = 500;

  // get photo collection incentive
  rpc GetPhotoCollectionIncentive(GetPhotoCollectionIncentiveRequest) returns (GetPhotoCollectionIncentiveResponse);
  // trigger the UGC photo menu display workflow
  rpc TriggerUGCPhotoMenuDisplayWorkflow(TriggerUGCPhotoMenuDisplayWorkflowRequest) returns (TriggerUGCPhotoMenuDisplayWorkflowResponse);
  // manually submit UGC photos for menu display
  rpc ManuallySubmitUGCPhotosForMenuDisplay(ManuallySubmitUGCPhotosForMenuDisplayRequest) returns (ManuallySubmitUGCPhotosForMenuDisplayResponse);
  // trigger the recomputation of UGC Photo ML model predictions
  rpc RecomputeUGCPhotoMLModelPredictions(RecomputeUGCPhotoMLModelPredictionsRequest) returns (RecomputeUGCPhotoMLModelPredictionsResponse);
  // resend UGC photos for Appen moderation
  rpc ResendUGCPhotosForAppenModeration(ResendUGCPhotosForAppenModerationRequest) returns (ResendUGCPhotosForAppenModerationResponse);
  // get UGC display photos
  rpc GetUGCDisplayPhotos(GetUGCDisplayPhotosRequest) returns (GetUGCDisplayPhotosResponse);
  // get UGC photo incentive details by store id and consumer id
  rpc GetUGCPhotoIncentiveDetailsByStoreIdAndConsumerId(GetUGCPhotoIncentiveDetailsByStoreIdAndConsumerIdRequest) returns (GetUGCPhotoIncentiveDetailsByStoreIdAndConsumerIdResponse);
  // get UGC photo incentive details by item id and consumer id
  rpc GetUGCPhotoIncentiveDetailsByItemIdAndConsumerId(GetUGCPhotoIncentiveDetailsByItemIdAndConsumerIdRequest) returns (GetUGCPhotoIncentiveDetailsByItemIdAndConsumerIdResponse);
  // add moderator photo item tags
  rpc AddModeratorPhotoItemTags(AddModeratorPhotoItemTagsRequest) returns (AddModeratorPhotoItemTagsResponse);
  // bulk update tool for photo_features entry
  rpc BulkUpdatePhotoFeatures(BulkUpdatePhotoFeaturesRequest) returns (BulkUpdatePhotoFeaturesResponse);
  // moderate consumer photos
  rpc UpdateUGCPhotosModerationResults(UpdateUGCPhotosModerationResultsRequest) returns (UpdateUGCPhotosModerationResultsResponse);
  // notify ratings-service when photo processing result is available
  rpc SubmitPhotoProcessingResult(SubmitPhotoProcessingResultRequest) returns (SubmitPhotoProcessingResultResponse);
  // get top ugc content for targets
  rpc GetTopUGCContentForTarget(GetTopUGCContentForTargetRequest) returns (GetTopUGCContentForTargetResponse);
}

// photo response status
message PhotoResponseStatus {
  // status
  bool success = 1;
  // response error
  ConsumerPhotoError error = 2;
}

// error details
message ConsumerPhotoError {
  // error code
  ConsumerPhotoErrorCode error_code = 1;
  // error message
  google.protobuf.StringValue error_message = 2;
}

// business logic error codes for consumer photo
enum ConsumerPhotoErrorCode {
  // unspecified error
  CONSUMER_PHOTO_ERROR_CODE_UNSPECIFIED = 0;
  // invalid parameter (possibly null) error
  CONSUMER_PHOTO_ERROR_CODE_INVALID_PARAMETER = 1;
}

// photo collection incentive bucket request
message GetPhotoCollectionIncentiveRequest {
  // consumer id
  string consumer_id = 1;
  // submarket id
  string submarket_id = 2;
}

// photo collection incentive bucket response
message GetPhotoCollectionIncentiveResponse {
  // incentive in the MonetaryFields message format
  money.MonetaryFields incentive = 1;
  // ugc photos enabled
  google.protobuf.BoolValue ugc_photos_enabled = 2;
}

// trigger the UGC photo menu display workflow request
message TriggerUGCPhotoMenuDisplayWorkflowRequest {
  // minus days
  int64 minus_days = 1;
}

// trigger the UGC photo menu display workflow response
message TriggerUGCPhotoMenuDisplayWorkflowResponse {
  // success
  repeated string failed_photo_uuids = 1;
}

// manually submit UGC photos for menu display request
message ManuallySubmitUGCPhotosForMenuDisplayRequest {
  // photo uuids
  repeated string photo_uuids = 1;
}

// manually submit UGC photos for menu display response
message ManuallySubmitUGCPhotosForMenuDisplayResponse {
  // success
  repeated string failed_photo_uuids = 1;
}

// trigger the recomputation of UGC Photo ML model predictions request
message RecomputeUGCPhotoMLModelPredictionsRequest {
  // Ml Model enum
  enum MlModel {
    // Default
    ML_MODEL_UNSPECIFIED = 0;
    // Blurry model
    ML_MODEL_BLURRY = 1;
    // Core Model
    ML_MODEL_CORE = 2;
  }
  // list of ml models.
  repeated MlModel models = 1;
  // list of photo uuids
  repeated string photo_uuids = 2;
}

// trigger the recomputation of UGC Photo ML model predictions response
message RecomputeUGCPhotoMLModelPredictionsResponse {
  // success
  repeated string failed_photo_uuids = 1;
}

// resend UGC photos for Appen moderation request
message ResendUGCPhotosForAppenModerationRequest {
  // list of photo uuids
  repeated string photo_uuids = 1;
}

// resend UGC photos for Appen moderation response
message ResendUGCPhotosForAppenModerationResponse {
  // success
  repeated string failed_photo_uuids = 1;
}

// get UGC display photos request
message GetUGCDisplayPhotosRequest {
  // store id
  google.protobuf.StringValue store_id = 1;
  // item id (optional)
  google.protobuf.StringValue item_id = 2;
  // photo display type
  PhotoDisplayType photo_display_type = 3;
  // offset
  google.protobuf.Int32Value offset = 4;
  // limit
  google.protobuf.Int32Value limit = 5;
  // consumer id
  google.protobuf.StringValue consumer_id = 6;
  // item menu photo url
  google.protobuf.StringValue item_menu_photo_url = 7;

  // photo display type
  enum PhotoDisplayType {
    // unspecified
    PHOTO_DISPLAY_TYPE_UNSPECIFIED = 0;
    // header
    PHOTO_DISPLAY_TYPE_HEADER = 1;
    // gallery
    PHOTO_DISPLAY_TYPE_GALLERY = 2;
    // all ugc photos
    PHOTO_DISPLAY_TYPE_GALLERY_ALL_UGC = 3;
  }

  // apply quality threshold for all ugc photos
  google.protobuf.BoolValue apply_quality_threshold = 8;
  // ui view the photos are used for
  UIViewType ui_view = 9;

  //ui view type
  enum UIViewType {
    // unspecified
    UI_VIEW_TYPE_UNSPECIFIED = 0;
    // window shopping
    UI_VIEW_TYPE_WINDOW_SHOPPING = 1;
  }
}

// get UGC display photos response
message GetUGCDisplayPhotosResponse {
  // sorted list of Mx photo details
  repeated PhotoDetails mx_photo_details = 1;
  // sorted list of UGC photo details
  repeated PhotoDetails ugc_photo_details = 2;
  // photo response status
  PhotoResponseStatus photo_response_status = 3;
  // number of UGC photos
  google.protobuf.Int32Value num_ugc_photos = 4;
}

// photo details
message PhotoDetails {
  // photo url
  google.protobuf.StringValue photo_url = 1;
  // photo uuid in photo-service
  google.protobuf.StringValue photo_uuid = 2;
  // title ex: “Whole Chicken”
  google.protobuf.StringValue title = 3;
  // reviewer data
  ConsumerReview.ReviewerData reviewer_data = 4;
  // submission time ex: "3 days ago"
  google.protobuf.StringValue submission_time = 5;
  // list of tagged items for the photo
  repeated OrderedItem photo_tagged_items = 6;
  // subtitle ex: "By Brian H"
  google.protobuf.StringValue subtitle = 7;
  // number of UGC photos
  google.protobuf.Int32Value num_ugc_photos = 8 [deprecated = true];
  // created at
  google.protobuf.Timestamp created_at = 9;
  // order uuid
  google.protobuf.StringValue order_uuid = 10;
  // moderation status
  PhotoModerationStatus moderation_status = 11;
  // store id for item associated with photo
  google.protobuf.StringValue store_id = 12;
}

// menu item incentive details
message MenuItemIncentiveDetails {
  // item id
  google.protobuf.StringValue item_id = 1;
  // incentive name
  google.protobuf.StringValue incentive_name = 2;
  // incentive value
  google.protobuf.DoubleValue incentive_value = 3;
  // incentive callout string
  google.protobuf.StringValue incentive_callout_text = 4;
  // incentive banner string
  google.protobuf.StringValue incentive_banner_text = 5;
}

// get UGC photo incentive details by store id and consumer id request
message GetUGCPhotoIncentiveDetailsByStoreIdAndConsumerIdRequest {
  // store id
  google.protobuf.StringValue store_id = 1;
  // consumer id
  google.protobuf.StringValue consumer_id = 2;
}

// get UGC photo incentive details by store id and consumer id response
message GetUGCPhotoIncentiveDetailsByStoreIdAndConsumerIdResponse {
  // menu item incentive details
  repeated MenuItemIncentiveDetails menu_item_incentive_details = 1;
}

// get UGC photo incentive details by item id and consumer id request
message GetUGCPhotoIncentiveDetailsByItemIdAndConsumerIdRequest {
  // store id
  google.protobuf.StringValue store_id = 1;
  // item id
  google.protobuf.StringValue item_id = 2;
  // consumer id
  google.protobuf.StringValue consumer_id = 3;
}

// get UGC photo incentive details by item id and consumer id response
message GetUGCPhotoIncentiveDetailsByItemIdAndConsumerIdResponse {
  // menu item incentive details
  MenuItemIncentiveDetails menu_item_incentive_details = 1;
  // cta button text
  google.protobuf.StringValue cta_button_text = 2;
  // cta button action url
  google.protobuf.StringValue cta_button_action_url = 3;
}

// get UGC photo incentive details by item id and consumer id response
message AddModeratorPhotoItemTagsRequest {
  // photo uuid
  google.protobuf.StringValue photo_uuid = 1;
  // moderator added photo item tags
  repeated google.protobuf.StringValue item_ids = 2;
}

// get UGC photo incentive details by item id and consumer id response
message AddModeratorPhotoItemTagsResponse {
  // success status
  bool success = 1;
  // error
  ModeratorPhotoItemTagError error = 2;
}

// Photo item tag error details
message ModeratorPhotoItemTagError {
  // error code
  ModeratorPhotoItemTagErrorCode error_code = 1;
  // error message
  google.protobuf.StringValue error_message = 2;
}

// business logic error codes for consumer photo
enum ModeratorPhotoItemTagErrorCode {
  // unspecified error
  MODERATOR_PHOTO_ITEM_TAG_ERROR_CODE_UNSPECIFIED = 0;
  // invalid parameter (possibly null) error
  MODERATOR_PHOTO_ITEM_TAG_ERROR_CODE_INVALID_PARAMETER = 1;
  // duplicated (spf_photo_id,item_id) error
  MODERATOR_PHOTO_ITEM_TAG_ERROR_CODE_DUPLICATED = 2;
  // invalid photo_id error
  MODERATOR_PHOTO_ITEM_TAG_ERROR_CODE_PHOTO_ID_NOT_FOUND = 3;
}

// Bulk update photo features request
message BulkUpdatePhotoFeaturesRequest {
  // photo features
  repeated PhotoFeature photo_features = 1;
}

// Entity representing a photo_feature
message PhotoFeature {
  // spf photo uuid
  google.protobuf.StringValue spf_photo_id = 1;
  // photo uuid
  google.protobuf.StringValue photo_id = 2;
  // photo feature type
  google.protobuf.StringValue feature_type = 3;
  // score
  google.protobuf.DoubleValue score = 4;
  // feature name
  google.protobuf.StringValue feature_name = 5;
  // feature value
  google.protobuf.StringValue feature_value = 6;
  // metadata
  google.protobuf.StringValue meta = 7;
  // updated at
  google.protobuf.Timestamp updated_at = 8;
  // model name
  google.protobuf.StringValue model_name = 9;
}

// bulk update photo features result
message BulkUpdatePhotoFeaturesResult {
  // success
  google.protobuf.BoolValue success = 1;
}

// bulk update photo features response
message BulkUpdatePhotoFeaturesResponse {
  // return result or error
  oneof value {
    // result
    BulkUpdatePhotoFeaturesResult result = 1;
    // error
    BulkPhotoFeaturesUpdateError error = 2;
  }
}

// error details
message BulkPhotoFeaturesUpdateError {
  // error code
  BulkPhotoFeaturesUpdateErrorCode error_code = 1;
  // error message
  google.protobuf.StringValue error_message = 2;
}

// business logic error codes for bulk photo features update.
enum BulkPhotoFeaturesUpdateErrorCode {
  // unspecified error
  BULK_PHOTO_FEATURES_UPDATE_ERROR_CODE_UNSPECIFIED = 0;
  // invalid parameter (possibly null) error
  BULK_PHOTO_FEATURES_UPDATE_ERROR_CODE_INVALID_PARAMETER = 1;
}

// Request object for soft delete photo
message UpdateUGCPhotosModerationResultsRequest {
  // data for list of photosIds, and statuses
  message Data {
    // photo uuids
    google.protobuf.StringValue photo_uuid = 1;
    // moderation Status
    PhotoModerationStatus photo_moderation_status = 2;
  }
  //list of data objects
  repeated Data data = 1;
}

// Photo moderation status
enum PhotoModerationStatus {
  //status unspecified
  PHOTO_MODERATION_STATUS_UNSPECIFIED = 0;
  //status in Progress
  PHOTO_MODERATION_STATUS_PROGRESS = 1;
  // status in pending
  PHOTO_MODERATION_STATUS_PENDING = 2;
  // status is approved
  PHOTO_MODERATION_STATUS_APPROVED = 3;
  // status is rejected
  PHOTO_MODERATION_STATUS_REJECTED = 4;
  // status is deleted
  PHOTO_MODERATION_STATUS_DELETED = 5;
}

// Moderation Result
message UpdateUGCPhotosModerationResultsResult {
  // success or not
  google.protobuf.BoolValue success = 1;
}

// Response object of Moderation response
message UpdateUGCPhotosModerationResultsResponse {
  // object with result object and error (if exists)
  oneof value {
    // Moderation result
    UpdateUGCPhotosModerationResultsResult result = 1;
    // ConsumerPhotoError object
    ConsumerPhotoError error = 2;
  }
}

// photo processing result event type
enum PhotoProcessingResultEventType {
  // unspecified status code
  PHOTO_PROCESSING_RESULT_EVENT_TYPE_UNSPECIFIED = 0;
  // photo validated event type
  PHOTO_PROCESSING_RESULT_EVENT_TYPE_PHOTO_VALIDATED = 1;
  // photo approved event type
  PHOTO_PROCESSING_RESULT_EVENT_TYPE_PHOTO_APPROVED = 2;
  // photo linked event type
  PHOTO_PROCESSING_RESULT_EVENT_TYPE_PHOTO_LINKED = 3;
  // photo rejected event type
  PHOTO_PROCESSING_RESULT_EVENT_TYPE_PHOTO_REJECTED = 4;
  // photo unlinked event type
  PHOTO_PROCESSING_RESULT_EVENT_TYPE_PHOTO_UNLINKED = 5;
  // photo deleted event type
  PHOTO_PROCESSING_RESULT_EVENT_TYPE_PHOTO_DELETED = 6;
}

// Request to notify ratings service when photo processing result is available
message SubmitPhotoProcessingResultRequest {
  // data for list of photosIds, and statuses
  message PhotoProcessingResult {
    // Original business photo ingested under
    google.protobuf.Int64Value business_id = 1;
    // source of downloaded image
    google.protobuf.StringValue original_image_url = 2;
    // MSID, enriched_sku_id, etc.
    google.protobuf.StringValue entity_id = 3;
    // CRDB photo uuid
    google.protobuf.StringValue photo_uuid = 4;
    // origin photo id
    google.protobuf.StringValue photo_id = 5;
    // gRPC code
    google.protobuf.StringValue status_code = 6;
    // More details [Success, Invalid URL, Unsupported file type etc]
    google.protobuf.StringValue message = 7;
    // Time of event
    google.protobuf.Timestamp event_ts = 8;
    // photo use case [pos,ssme,cng,ugc,etc]
    google.protobuf.StringValue source = 9;
    // request received ts
    google.protobuf.Timestamp request_ts = 10;
    // async wf created ts
    google.protobuf.Timestamp workflow_created_ts = 11;
    // parent photo id
    google.protobuf.StringValue parent_photo_id = 12;
    // photo processing event type
    PhotoProcessingResultEventType photo_processing_event_type = 13;
  }
  //list of data objects
  repeated PhotoProcessingResult photo_processing_results = 1;
}

// Response object of photo processing result.
message SubmitPhotoProcessingResultResponse {
  // success or failure
  google.protobuf.BoolValue success = 1;
  // error message
  google.protobuf.StringValue error_message = 2;
}

// get top ugc content request
message GetTopUGCContentForTargetRequest {
  // ugc content request
  repeated UGCContentRequest ugc_content_request = 1;
  // consumer id
  google.protobuf.StringValue consumer_id = 2;
}

// UGC content request
message UGCContentRequest {
  // ugc type photo/review
  UGCType ugc_type = 1;
  // target (item or store)
  Target target = 2;
  // limit on no of entries returned(default = 1)
  google.protobuf.Int32Value limit = 3;
  // store id
  google.protobuf.StringValue store_id = 4;
}

// get top ugc content response
message GetTopUGCContentForTargetResponse {
  // ugc content response
  repeated UGCContentResponse ugc_content_response = 1;
}

// ugc content response
message UGCContentResponse {
  // ugc type photo/review
  UGCType ugc_type = 1;
  // target (item or store)
  Target target = 2;
  // data
  message Data {
    // photo content or review content(future)
    oneof value {
      // photo details
      PhotoDetails photo_details = 1;
    }
  }
  // data field
  Data data = 3 [deprecated = true];
  // ugc data field -- same type as data field, but a list, instead of singular
  repeated Data ugc_data = 4;
  // store id
  google.protobuf.StringValue store_id = 5;
}
