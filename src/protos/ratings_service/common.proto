syntax = "proto3";

// buf:lint:ignore DIRECTORY_SAME_PACKAGE
// buf:lint:ignore PACKAGE_VERSION_SUFFIX
package ratings_service;

import "common/money.proto";
import "common/order_config.proto";
import "feed_service/facet_response_v2.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option java_generic_services = true;
// buf:lint:ignore PACKAGE_SAME_JAVA_PACKAGE
option java_multiple_files = true;
option java_package = "com.doordash.rpc.ratings";

// target of a rating
message Target {
  // target type options
  enum TargetType {
    // unset target type
    TARGET_TYPE_UNSPECIFIED = 0;
    // target type store
    TARGET_TYPE_STORE = 1;
    // target type dasher
    TARGET_TYPE_DASHER = 2;
    // target type store pickup
    TARGET_TYPE_STORE_PICKUP = 3;
    // target type item
    TARGET_TYPE_ITEM = 4;
    // target typ consumer
    TARGET_TYPE_CONSUMER = 5;
    // target type business
    TARGET_TYPE_BUSINESS = 6;
  }
  // target type
  TargetType target_type = 1;
  // target id
  int64 target_id = 2;
  // target id as string
  google.protobuf.StringValue target_id_str = 3;
}

// rating tag
message Tag {
  // tag name
  string tag_name = 1;
  // deprecated tag id
  int64 deprecated_tag_id = 2 [deprecated = true];
  // tag id
  google.protobuf.StringValue tag_id = 3;
  // tag type
  google.protobuf.StringValue tag_type = 4;
}

// order
message Order {
  // order uuid
  string order_uuid = 1;
  // store id associated with the order
  int64 store_id = 2;
  // formatted order date
  string order_date_display = 3 [deprecated = true];
  // array of ordered items
  repeated OrderedItem ordered_item = 4;
  // formatted order total
  string order_total_display = 5;
  // order fulfillment timestamp
  google.protobuf.Timestamp order_fulfilled_at = 6;
  // Defines the type of store this order is against
  common.order_config.v1.OrderConfig.OrderTarget order_target = 7;
  // store name
  string store_name = 8;
  // store image URL
  string store_image_url = 9;
  // indicates whether the store is DashPass eligible
  google.protobuf.BoolValue is_consumer_subscription_eligible = 10;
  // store id (as a string) associated with the order
  google.protobuf.StringValue store_id_str = 11;
}

// ordered item
message OrderedItem {
  // item id
  int64 item_id = 1;
  // item name
  string item_name = 2;
  // item price
  money.MonetaryFields price = 3;
  // item image
  Image image = 4;
  // item id (as a string)
  google.protobuf.StringValue item_id_str = 5;
  // category_name
  google.protobuf.StringValue category_name = 6;
  //incentive
  repeated Incentive incentives = 7;
  // menu id
  google.protobuf.StringValue menu_id = 8;
  // ratings display string
  google.protobuf.StringValue rating_display_string = 9;
}

// consumer experience
enum Experience {
  // undefined
  EXPERIENCE_UNSPECIFIED = 0;
  // doordash
  // buf:lint:ignore ENUM_VALUE_PREFIX
  DOORDASH = 1;
  // caviar
  // buf:lint:ignore ENUM_VALUE_PREFIX
  CAVIAR = 2;
}

// Image
message Image {
  //image url
  google.protobuf.StringValue url = 1;
}

// consumer review source
enum ConsumerReviewSource {
  // unknown
  CONSUMER_REVIEW_SOURCE_UNSPECIFIED = 0;
  // doordash
  CONSUMER_REVIEW_SOURCE_DOORDASH = 1;
  // google
  CONSUMER_REVIEW_SOURCE_GOOGLE = 2;
  // third party
  CONSUMER_REVIEW_SOURCE_THIRD_PARTY = 3;
  // AI generated review summary
  CONSUMER_REVIEW_SOURCE_AI_SUMMARY = 4;
  // Yelp
  CONSUMER_REVIEW_SOURCE_YELP = 5;
}

//preferred layout
message PreferredLayout {
  // layout
  string layout = 1;

  //data to store itemIds
  message Data {
    //list of itemIds
    repeated google.protobuf.StringValue item_ids = 1;
    //cx feedback workflow id
    string nv_cx_feedback_workflow_id = 2;
  }

  // data
  Data data = 2;
}

// business logic error code
enum ErrorCode {
  // unspecified error
  ERROR_CODE_UNSPECIFIED = 0;
  // invalid parameter (possibly null) error
  ERROR_CODE_INVALID_PARAMETER = 1;
  // service error
  ERROR_CODE_INTERNAL_SERVICE_ERROR = 2;
}

// error details
message Error {
  // error code
  ErrorCode error_code = 1;
  // error message
  google.protobuf.StringValue error_message = 2;
}

// incentive
message Incentive {
  // message
  google.protobuf.StringValue incentive_msg = 1;
  // incentive_value  in the MonetaryFields message format
  money.MonetaryFields incentive_value = 2;
}

//Banner message
message BannerMessage {
  //key to banner message
  BannerMessageKey key = 1;
  //actual message
  google.protobuf.StringValue value = 2;
}

// Banner message key
enum BannerMessageKey {
  // unspecified
  BANNER_MESSAGE_KEY_UNSPECIFIED = 0;
  // generalized incentive
  // buf:lint:ignore ENUM_VALUE_PREFIX
  GENERALIZED_INCENTIVE = 1;
}

// menu item details
message MenuItemDetails {
  // store id
  google.protobuf.StringValue store_id = 1;
  // item id
  google.protobuf.StringValue item_id = 2;
  // item name
  google.protobuf.StringValue item_name = 3;
  // menu id
  google.protobuf.StringValue menu_id = 4;
  // category id
  google.protobuf.StringValue category_id = 5;
  // start date
  google.protobuf.Timestamp start_date = 6;
}

// Incentive payout target type.
enum IncentivePayoutTargetType {
  // unspecified
  INCENTIVE_PAYOUT_TARGET_TYPE_UNSPECIFIED = 0;
  // PHOTO
  INCENTIVE_PAYOUT_TARGET_TYPE_PHOTO = 1;
}

// UGC type
enum UGCType {
  // unspecified
  UGC_TYPE_CONTENT_UNSPECIFIED = 0;
  // review
  UGC_TYPE_REVIEW = 1;
  // photo
  UGC_TYPE_PHOTO = 2;
  // post
  UGC_TYPE_POST = 3;
}

// metadata for store-level ratings
message StoreRatings {
  // average rating of all consumer ratings submitted for store (e.g. 4.431)
  google.protobuf.DoubleValue avg_rating = 1;
  // display string for number of ratings for store (e.g. "(1,900+)", "(138)")
  google.protobuf.StringValue num_ratings_display_string = 2;
  // numerical value for number of ratings for store
  google.protobuf.Int64Value num_ratings = 3;
}

// profile status enum
enum ProfileStatus {
  // unspecified profile status
  PROFILE_STATUS_UNSPECIFIED = 0;
  // public profile status
  PROFILE_STATUS_PUBLIC = 1;
  // private profile status
  PROFILE_STATUS_PRIVATE = 2;
}

// WrappedBoolValue
message WrappedBoolValue {
  //value
  google.protobuf.BoolValue value = 1;
}

// consumer profile status
message ConsumerProfileStatus {
  // consumer id
  google.protobuf.StringValue consumer_id = 1;
  // profile status
  ProfileStatus profile_status = 2;
}

// targets in each store
message TargetInfo {
  // targets
  repeated Target targets = 1;
  // store id (required)
  google.protobuf.StringValue store_id = 2;
}

// Display attributes for list
message ListDisplayAttributes {
  // primary background color
  feed_service.Style.Color primary_bg_color = 1;
  // secondary background color
  feed_service.Style.Color secondary_bg_color = 2;
  // header image for the list
  google.protobuf.StringValue header_image_url = 3;
}

// social list type
enum ListType {
  // unspecified list type
  LIST_TYPE_UNSPECIFIED = 0;
  // list type for leaderboard
  LIST_TYPE_LEADERBOARD = 1;
}
