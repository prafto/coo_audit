syntax = "proto3";

// buf:lint:ignore DIRECTORY_SAME_PACKAGE
// buf:lint:ignore PACKAGE_VERSION_SUFFIX
package ratings_service;

import "common/common.proto";
import "common/money.proto";
import "common/service_client_config.proto";
import "doordash.api/annotations.proto";
import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "ratings_service/common.proto";
import "ratings_service/consumer_rating.proto";

option java_generic_services = true;
// buf:lint:ignore PACKAGE_SAME_JAVA_PACKAGE
option java_multiple_files = true;
option java_package = "com.doordash.rpc.ratings";

// configuration service
service ConfigurationService {
  option (doordash.api.service) = {
    name: "ratings-configuration-service-web"
    url: "ratings-service-web.service.prod.ddsd"
    port: 50051
    name_spaces: ["configuration"]
    owner: {
      id: "social-proof"
      name: "consumer-ratings-configuration-service"
      slack_channel: "#eng-ratings-service-deploy"
      email_alias: "eng-social@doordash.com"
    }
    target_products: [CX]
  };

  option (service_client.client_config).service_name = "ratings-service";
  option (service_client.client_config).service_app = "web";
  option (service_client.client_config).response_attempt_timeout_millis = 500;

  // add consumer role in ratings db
  rpc AddConsumerRoles(AddConsumerRolesRequest) returns (AddConsumerRolesResponse);
  // insert consumer role in ratings db
  rpc InsertConsumerRoles(InsertConsumerRolesRequest) returns (InsertConsumerRolesResponse);
  // delete consumer role in ratings db
  rpc DeleteConsumerRoles(DeleteConsumerRolesRequest) returns (DeleteConsumerRolesResponse);
  // check consumer role exists
  rpc CheckConsumerRoleExists(CheckConsumerRoleExistsRequest) returns (CheckConsumerRoleExistsResponse) {
    option (google.api.http) = {
      post: "/configuration/v1/check_consumer_roles"
      body: '*'
    };
    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: TEST
      authorization: [CX_USER]
    };
  }
  // insert store role in ratings db
  rpc InsertStoreRoles(InsertStoreRolesRequest) returns (InsertStoreRolesResponse);
  // delete store role in ratings db
  rpc DeleteStoreRoles(DeleteStoreRolesRequest) returns (DeleteStoreRolesResponse);

  // create incentive targets
  rpc CreateIncentiveTargets(CreateIncentiveTargetsRequest) returns (CreateIncentiveTargetsResponse) {
    option deprecated = true;
  }
  // delete incentive targets
  rpc DeleteIncentiveTargets(DeleteIncentiveTargetsRequest) returns (DeleteIncentiveTargetsResponse) {
    option deprecated = true;
  }
  // update incentive targets
  rpc UpdateIncentiveTargets(UpdateIncentiveTargetsRequest) returns (UpdateIncentiveTargetsResponse) {
    option deprecated = true;
  }
  // insert menu item details
  rpc InsertMenuItemDetails(InsertMenuItemDetailsRequest) returns (InsertMenuItemDetailsResponse);

  // insert target role in ratings db
  rpc InsertTargetRoles(InsertTargetRolesRequest) returns (InsertTargetRolesResponse);
  // delete target role in ratings db
  rpc DeleteTargetRoles(DeleteTargetRolesRequest) returns (DeleteTargetRolesResponse);

  //send to notification hub
  rpc SubmitToNotificationHub(SubmitToNotificationHubRequest) returns (SubmitToNotificationHubResponse);

  // initiate incentive payout
  rpc InitiateIncentivePayout(InitiateIncentivePayoutRequest) returns (InitiateIncentivePayoutResponse);

  // send UGC email notification
  rpc SendUgcEmailNotification(SendUgcEmailNotificationRequest) returns (SendUgcEmailNotificationResponse);

  // trigger UGC photo moderation result ingestion
  rpc TriggerPhotoModerationResultIngestion(TriggerPhotoModerationResultIngestionRequest) returns (TriggerPhotoModerationResultIngestionResponse);
}

//add consumer role request
message AddConsumerRolesRequest {
  // list of consumer roles
  repeated ConsumerRole consumer_role = 1;
}

//add consumer role response
message AddConsumerRolesResponse {
  // return success or error
  oneof value {
    // success
    WrappedBoolValue success = 1;
    // error
    Error error = 2;
  }
}

//insert consumer role request
message InsertConsumerRolesRequest {
  // list of consumer roles
  repeated ConsumerRole consumer_role = 1;
}

//insert consumer role response
message InsertConsumerRolesResponse {
  // return success or error
  oneof value {
    // success
    google.protobuf.BoolValue success = 1;
    // error
    Error error = 2;
  }
}

//delete consumer role request
message DeleteConsumerRolesRequest {
  // list of consumer roles
  repeated ConsumerRole consumer_role = 1;
}

//delete consumer role response
message DeleteConsumerRolesResponse {
  // return success or error
  oneof value {
    // success
    google.protobuf.BoolValue success = 1;
    // error
    Error error = 2;
  }
}

//check consumer role exists request
message CheckConsumerRoleExistsRequest {
  // consumer role
  ConsumerRole consumer_role = 1;
}

//check consumer role exists response
message CheckConsumerRoleExistsResponse {
  // return result or error
  oneof value {
    // consumer role exists result
    CheckConsumerRoleExistsResult result = 1;
    // error
    Error error = 2;
  }
}

//check consumer role exists result
message CheckConsumerRoleExistsResult {
  // consumer role exists or not
  google.protobuf.BoolValue consumer_role_exists = 1;
}

//consumer role
message ConsumerRole {
  // consumer id
  google.protobuf.StringValue consumer_id = 1;
  // role
  google.protobuf.StringValue role = 2;
}

//insert store role request
message InsertStoreRolesRequest {
  // list of store roles
  repeated StoreRole store_role = 1;
}

//insert store role response
message InsertStoreRolesResponse {
  // return success or error
  oneof value {
    // success
    google.protobuf.BoolValue success = 1;
    // error
    Error error = 2;
  }
}

//delete store role request
message DeleteStoreRolesRequest {
  // list of store roles
  repeated StoreRole store_role = 1;
}

//delete store role response
message DeleteStoreRolesResponse {
  // return success or error
  oneof value {
    // success
    google.protobuf.BoolValue success = 1;
    // error
    Error error = 2;
  }
}

//store role
message StoreRole {
  // store id
  google.protobuf.StringValue store_id = 1;
  // role
  google.protobuf.StringValue role = 2;
}

// create incentive targets request
message CreateIncentiveTargetsRequest {
  // incentive targets
  repeated IncentiveTarget incentive_targets = 1 [deprecated = true];
}

// create incentive targets response
message CreateIncentiveTargetsResponse {
  // return success or error
  oneof value {
    // success
    google.protobuf.BoolValue success = 1 [deprecated = true];
    // error
    Error error = 2 [deprecated = true];
  }
}

// delete incentive targets request
message DeleteIncentiveTargetsRequest {
  // incentive targets
  repeated IncentiveTarget incentive_targets = 1 [deprecated = true];
}

// delete incentive targets response
message DeleteIncentiveTargetsResponse {
  // return success or error
  oneof value {
    // success
    google.protobuf.BoolValue success = 1 [deprecated = true];
    // error
    Error error = 2 [deprecated = true];
  }
}

// update incentive targets request
message UpdateIncentiveTargetsRequest {
  // incentive targets
  repeated IncentiveTarget incentive_targets = 1 [deprecated = true];
}

// update incentive targets response
message UpdateIncentiveTargetsResponse {
  // return success or error
  oneof value {
    // success
    google.protobuf.BoolValue success = 1 [deprecated = true];
    // error
    Error error = 2 [deprecated = true];
  }
}

// incentive target
message IncentiveTarget {
  // target type
  IncentiveTargetType target_type = 1;
  // target id
  google.protobuf.StringValue target_id = 2;
  // incentive name
  google.protobuf.StringValue incentive_name = 3;
  // store id
  google.protobuf.StringValue store_id = 4;
  // incentive value
  google.protobuf.DoubleValue incentive_value = 5;
  // is active
  google.protobuf.BoolValue is_active = 6;
  // incentive source
  google.protobuf.StringValue incentive_source = 7;
}

//incentive target type enum
enum IncentiveTargetType {
  // unspecified
  INCENTIVE_TARGET_TYPE_UNSPECIFIED = 0;
  // item
  INCENTIVE_TARGET_TYPE_ITEM = 1;
}

// insert menu item details request
message InsertMenuItemDetailsRequest {
  // menu item details
  repeated MenuItemDetails menu_item_details = 1;
}

// insert menu item details response
message InsertMenuItemDetailsResponse {
  // return success or error
  oneof value {
    // success
    google.protobuf.BoolValue success = 1;
    // error
    Error error = 2;
  }
}

//insert target role request
message InsertTargetRolesRequest {
  // list of target roles
  repeated TargetRole target_role = 1;
}

//insert target role response
message InsertTargetRolesResponse {
  // return success or error
  oneof value {
    // success
    google.protobuf.BoolValue success = 1;
    // error
    Error error = 2;
  }
}

//delete target role request
message DeleteTargetRolesRequest {
  // list of target roles
  repeated TargetRole target_role = 1;
}

//delete target role response
message DeleteTargetRolesResponse {
  // return success or error
  oneof value {
    // success
    google.protobuf.BoolValue success = 1;
    // error
    Error error = 2;
  }
}

//target role
message TargetRole {
  //target type
  RoleTargetType role_target_type = 1;
  // target id
  google.protobuf.StringValue target_id = 2;
  // role
  Role role = 3;
  //store_id (optional) only for item_id
  google.protobuf.StringValue store_id = 4;
}

//role target type enum
enum RoleTargetType {
  // unspecified
  ROLE_TARGET_TYPE_UNSPECIFIED = 0;
  // store
  ROLE_TARGET_TYPE_STORE = 1;
  // consumer
  ROLE_TARGET_TYPE_CONSUMER = 2;
  // item
  ROLE_TARGET_TYPE_ITEM = 3;
  // photo
  ROLE_TARGET_TYPE_PHOTO = 4;
  // review
  ROLE_TARGET_TYPE_REVIEW = 5;
}

//roles
enum Role {
  // unspecified role
  ROLE_UNSPECIFIED = 0;

  // disable ugc menu display
  ROLE_DISABLE_UGC_MENU_DISPLAY = 1;

  // photo uuid different in photo url
  ROLE_PHOTO_UUID_DIFFERENT_IN_PHOTO_URL = 2;

  // hide review in cx profiles
  ROLE_HIDE_REVIEW_IN_CX_PROFILES = 3;
}

// Incentive payout request
message InitiateIncentivePayoutRequest {
  // incentive payout targets
  repeated IncentivePayoutTargets incentive_payout_targets = 1;
}

// The Payout target
message IncentivePayoutTargets {
  // target_id
  google.protobuf.StringValue target_id = 1;
  // target_type
  IncentivePayoutTargetType target_type = 2;
}

// Incentive payout response
message InitiateIncentivePayoutResponse {
  // return success or error
  oneof value {
    // success
    google.protobuf.BoolValue success = 1;
    // error
    Error error = 2;
  }
}

// UGC Photo Notification Type
enum UGCPhotoNotificationType {
  // unspecified
  UGC_PHOTO_NOTIFICATION_TYPE_UNSPECIFIED = 0;
  // approved and credit is issued
  UGC_PHOTO_NOTIFICATION_TYPE_CREDIT_ISSUED = 1;
  // photo is rejected
  UGC_PHOTO_NOTIFICATION_TYPE_PHOTO_REJECTED = 2;
  // there has been a prior submission
  UGC_PHOTO_NOTIFICATION_TYPE_PRIOR_SUBMISSION = 3;
  // non incentivized submission
  UGC_PHOTO_NOTIFICATION_TYPE_NON_INCENTIVIZED_SUBMISSION = 4;
  // photo is rejected for menu only
  UGC_PHOTO_NOTIFICATION_TYPE_PHOTO_REJECTED_MENU_ONLY = 5;
}

// ugc photo notification
message UGCPhotoNotification {
  // item id
  google.protobuf.StringValue item_id = 1;
  // store id
  google.protobuf.StringValue store_id = 2;
  // consumer id
  google.protobuf.StringValue consumer_id = 3;
  // ugc photo notification type
  UGCPhotoNotificationType ugc_photo_notification_type = 4;
  // dollar value of incentive
  google.protobuf.StringValue dollar_value = 5;
}

// SubmitToNotificationHub request
message SubmitToNotificationHubRequest {
  // ugc photo notifications
  repeated UGCPhotoNotification ugc_photo_notifications = 1;
}

// SubmitToNotificationHub response
message SubmitToNotificationHubResponse {
  // return success or error
  oneof value {
    // success
    google.protobuf.BoolValue success = 1;
    // error
    Error error = 2;
  }
}

// email notification target type
enum EmailNotificationTargetType {
  // default to unspecified
  EMAIL_NOTIFICATION_TARGET_TYPE_UNSPECIFIED = 0;
  // email notification target type is photo
  EMAIL_NOTIFICATION_TARGET_TYPE_PHOTO = 1;
  // email notification target type is review
  EMAIL_NOTIFICATION_TARGET_TYPE_REVIEW = 2;
}

// email notification type
enum EmailNotificationType {
  // default to unspecified
  EMAIL_NOTIFICATION_TYPE_UNSPECIFIED = 0;
  // email notification type is incentive payout approval
  EMAIL_NOTIFICATION_TYPE_INCENTIVE_PAYOUT_APPROVAL = 1;
  // email notification type is consumer review submission
  EMAIL_NOTIFICATION_TYPE_CONSUMER_REVIEW_SUBMISSION = 2;
}

// Ugc email notification data
message UgcEmailNotificationData {
  // Target id for which the email is being sent.
  // For UGC photo this is the photo id, for review this is the review id.
  google.protobuf.StringValue target_id = 1;
  // Type of the target, i.e. review, photo, video etc.
  EmailNotificationTargetType target_type = 2;
  // Type of the email being sent
  EmailNotificationType notification_type = 3;
  // Consumer id of the email recipient.
  google.protobuf.StringValue recipient_consumer_id = 4;
}

// SendUgcEmailNotification request
message SendUgcEmailNotificationRequest {
  // a collection of Ugc email notification data
  repeated UgcEmailNotificationData email_notification_data = 1;
}

// SendUgcEmailNotification response
message SendUgcEmailNotificationResponse {
  // return success or error
  oneof value {
    // success
    google.protobuf.BoolValue success = 1;
    // error
    Error error = 2;
  }
}

// TriggerPhotoModerationResultIngestionRequest Request
message TriggerPhotoModerationResultIngestionRequest {}

// TriggerPhotoModerationResultIngestionResponse
message TriggerPhotoModerationResultIngestionResponse {
  // return success or error
  oneof value {
    // success
    google.protobuf.BoolValue success = 1;
    // error
    Error error = 2;
  }
}
