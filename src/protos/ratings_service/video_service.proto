syntax = "proto3";

// buf:lint:ignore DIRECTORY_SAME_PACKAGE
// buf:lint:ignore PACKAGE_VERSION_SUFFIX
package ratings_service;

import "common/service_client_config.proto";
import "doordash.api/annotations.proto";
import "doordash.api/client.proto";
import "doordash.api/field_validate.proto";
import "google/api/annotations.proto";
import "google/protobuf/wrappers.proto";
import "merchant_data_service_store_service/store.proto";
import "ratings_service/common.proto";

option java_generic_services = true;
// buf:lint:ignore PACKAGE_SAME_JAVA_PACKAGE
option java_multiple_files = true;
option java_package = "com.doordash.rpc.ratings";

// This service is used to fetch data related to Videos
service VideoService {
  option (doordash.api.service) = {
    name: "ratings-service-web"
    port: 50051
    name_spaces: ["video"]
    owner: {
      id: "social-proof"
      name: "consumer-ratings-video-service"
      slack_channel: "#ask-social-proof"
      email_alias: "eng-social@doordash.com"
    }
    target_products: [CX]
  };
  option (service_client.client_config).service_name = "ratings-service";
  option (service_client.client_config).service_app = "web";
  option (service_client.client_config).response_attempt_timeout_millis = 500;

  // Endpoint to tag stores
  rpc GetStoreTaggingRecommendations(GetStoreTaggingRecommendationsRequest) returns (GetStoreTaggingRecommendationsResponse) {
    option (google.api.http) = {get: "/video/v1/store_recommendations"};
    option (service_client.client_method_config).response_attempt_timeout_millis = 5000;
    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: DEV
      authorization: [CX_USER]
    };
    option (doordash.api.inject_headers) = {
      inject: [
        {field: "platform"},
        {field: "is_guest"},
        {field: "is_employee"},
        {field: "cx_id"}]
    };
  }
}

// Request to fetch the store recommendations.
message GetStoreTaggingRecommendationsRequest {
  // consumer id
  google.protobuf.Int64Value consumer_id = 1;
  // lat of the user geo
  google.protobuf.DoubleValue lat = 2;
  // lng of the user geo
  google.protobuf.DoubleValue lng = 3;
}

// Response to get store tagging recommendations.
message GetStoreTaggingRecommendationsResponse {
  // list of collections containing store recommendations.
  repeated StoreCollection collections = 1;
}

// A collection of store recommendations.
message StoreCollection {
  // Header of the collection
  StoreCollectionHeader header = 1;
  // Data related to stores.
  repeated StoreData stores = 2;
}

// Header of the store collection.
message StoreCollectionHeader {
  // title of the store collection.
  google.protobuf.StringValue title = 1;
}

// Data related to the store recommendation.
message StoreData {
  // thumbnail image of the store.
  google.protobuf.StringValue thumbnail_image_url = 1;
  // Display name of the store
  google.protobuf.StringValue display_name = 2;
  // Ratings of the store.
  ratings_service.StoreRatings store_ratings = 3;
  // Distance string from the user location.
  google.protobuf.StringValue distance = 4;
  // tags associated with the store.
  repeated google.protobuf.StringValue tags = 5;
  // Address of the store
  store_service.Address address = 6;
  // Id of the store
  google.protobuf.StringValue store_id = 7;
}
