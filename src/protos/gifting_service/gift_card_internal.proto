syntax = "proto3";

package doordash_gifting_service.v1;

import "doordash.api/annotations.proto";
import "gifting_service/common.proto";
import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option go_package = "gifting_service";
option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.gifting.service";

// GiftCardInternalService responsible for internal gift card usage
service GiftCardInternalService {
  option (doordash.api.service) = {
    name: "gift-card-internal-grpc-service"
    url: "gifting-service-web.service.prod.ddsd"
    port: 50051
    name_spaces: ["giftcard"]
    api_key_name: "CONSUMER_FINANCIALS_SERVICE_API_KEY"
    owner: {
      name: "gifting-service-team"
      id: "gifting-service-team"
      slack_channel: "#ask-cx-financials-platform"
      email_alias: "eng-giftcard@doordash.com"
    }
    vertical_domains: [CX]
    target_products: [
      CX,
      INTERNAL
    ]
  };

  // RunGiftCardScript runs a script for 1p gift card or 3p gift cards sold on doordash (for internal use only)
  rpc RunGiftCardScript(RunGiftCardScriptRequest) returns (RunGiftCardScriptResponse);
}

// RunGiftCardScriptRequest
message RunGiftCardScriptRequest {
  // type of script to run
  google.protobuf.StringValue script_name = 1;
  // json parameters to use with script as a string value
  google.protobuf.StringValue params = 2;
}

// RunGiftCardScriptResponse
message RunGiftCardScriptResponse {
  // if script is success then returns true
  google.protobuf.BoolValue success = 1;
  // response from script
  google.protobuf.StringValue response = 2;
}
