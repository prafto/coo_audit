syntax = "proto3";

package doordash_gifting_service.v1;

import "doordash.api/annotations.proto";
import "gifting_service/common.proto";
import "gifting_service/native_gift_card.proto";
import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option go_package = "gifting_service";
option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.gifting.service";

// gift card marketplace service
service GiftCardMarketplaceService {
  // Set up this service to be exposed via Unified Gateway
  option (doordash.api.service) = {
    name: "gifting-service-web"
    url: "gifting-service-web.service.prod.ddsd"
    port: 50051
    name_spaces: ["giftcard"]
    api_key_name: "CONSUMER_FINANCIALS_SERVICE_API_KEY"
    owner: {
      name: "gifting-service-team"
      id: "gifting-service-team"
      slack_channel: "#ask-cx-financials-platform"
      email_alias: "eng-giftcard@doordash.com"
    }
    target_products: [CX]
  };
  // ShareGiftCard
  rpc ShareGiftCard(ShareGiftCardRequest) returns (ShareGiftCardResponse) {
    option (google.api.http) = {get: "/giftcard/v1/share_gift_card/{card_id}"};
    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: DEV
      authorization: [CX_USER]
      target_products: [CX]
    };
    option (doordash.api.inject_headers) = {
      inject: [
        {field: "cx_id"}]
    };
  }
  // GetGiftCardByLink
  rpc GetGiftCardByLink(GetGiftCardByLinkRequest) returns (GetGiftCardByLinkResponse) {
    option (google.api.http) = {get: "/giftcard/v1/get_gift_card_by_link"};
    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: DEV
      authorization: [NONE]
      target_products: [CX]
    };
  }
}

// ShareGiftCardRequest
message ShareGiftCardRequest {
  // card id
  string card_id = 1;
  // sender consumer id from injected cx id through headers
  string consumer_id = 2 [(doordash.api.inject_id) = CX_ID];
}

// ShareGiftCardResponse
message ShareGiftCardResponse {
  // error
  GiftCardError error = 1;
  // gift card link
  google.protobuf.StringValue gift_card_link = 2;
}

// GetGiftCardByLinkRequest
message GetGiftCardByLinkRequest {
  // card id
  string card_id = 1;
  // sender consumer id
  string sender_consumer_id = 2;
}

// GetGiftCardByLinkResponse
message GetGiftCardByLinkResponse {
  // error
  GiftCardError error = 1;
  // gift card
  GiftCardEntity gift_card = 2;
}
