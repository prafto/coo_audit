syntax = "proto3";

// buf:lint:ignore DIRECTORY_SAME_PACKAGE
package doordash_gifting_service.v2;

import "doordash.api/annotations.proto";
import "gifting_service/common.proto";
import "gifting_service/gift_card_adapter.proto";
import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option go_package = "gifting_service";
option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.gifting.service.v2";

// gift card adapter service
service GiftCardAdapterService {
  // Set up this service to be exposed via Unified Gateway
  option (doordash.api.service) = {
    name: "gifting-service-web"
    url: "gifting-service-web.service.prod.ddsd"
    port: 50051
    name_spaces: ["giftcard"]
    owner: {
      name: "gifting-service-team"
      id: "gifting-service-team"
      slack_channel: "#ask-cx-financials-platform"
      email_alias: "eng-giftcard@doordash.com"
    }
    target_products: [INTERNAL]
  };
  // GetGiftCardAdapter
  rpc Status(GiftCardAdapterServiceStatusRequest) returns (GiftCardAdapterServiceStatusResponse) {
    option (google.api.http) = {
      post: "/giftcard/v2/status"
      body: "*"
    };
    option (doordash.api.endpoint) = {
      tier: T2
      lifecycle: DEV
      authorization: [DD_USER]
      target_products: [INTERNAL]
    };
  }
  // GetBulkGiftCardStatusAdapter
  rpc BulkStatus(GiftCardAdapterServiceBulkStatusRequest) returns (GiftCardAdapterServiceBulkStatusResponse) {
    option (google.api.http) = {
      post: "/giftcard/v2/bulk_status"
      body: "*"
    };
    option (doordash.api.endpoint) = {
      tier: T2
      lifecycle: DEV
      authorization: [DD_USER]
      target_products: [INTERNAL]
    };
  }
  // UnredeemGiftCardAdapter
  rpc Unredeem(GiftCardAdapterServiceUnredeemRequest) returns (GiftCardAdapterServiceUnredeemResponse) {
    option (google.api.http) = {
      post: "/giftcard/v2/unredeem"
      body: "*"
    };
    option (doordash.api.endpoint) = {
      tier: T2
      lifecycle: DEV
      authorization: [DD_USER]
      target_products: [INTERNAL]
    };
  }
  // resend gift card
  rpc Resend(GiftCardAdapterServiceResendRequest) returns (GiftCardAdapterServiceResendResponse) {
    option (google.api.http) = {
      post: "/giftcard/v2/resend"
      body: "*"
    };
    option (doordash.api.endpoint) = {
      tier: T2
      lifecycle: DEV
      authorization: [DD_USER]
      target_products: [INTERNAL]
    };
  }
  // RedeemHistory
  rpc RedeemHistory(GiftCardAdapterServiceRedeemHistoryRequest) returns (GiftCardAdapterServiceRedeemHistoryResponse) {
    option (google.api.http) = {
      post: "/giftcard/v2/redeem_history"
      body: "*"
    };
    option (doordash.api.endpoint) = {
      tier: T2
      lifecycle: DEV
      authorization: [DD_USER]
      target_products: [INTERNAL]
    };
  }
}

// GetGiftCardAdapterRequest
message GiftCardAdapterServiceStatusRequest {
  // one of the identifiers for getting gift card
  oneof identifier {
    // order uuid
    google.protobuf.StringValue order_uuid = 1;
    // gift pin
    google.protobuf.StringValue gift_pin = 2;
    // gift product id
    google.protobuf.StringValue product_id = 3;
    // consumer id
    google.protobuf.StringValue consumer_id = 4;
  }
  // is view event
  bool is_view_gift_card = 5;
  // correlation_id
  string correlation_id = 6;
  // Metadata for the request headers
  map<string, string> metadata = 7;
  // support user id
  google.protobuf.StringValue support_user_id = 8;
}

// GetGiftCardAdapterResponse
message GiftCardAdapterServiceStatusResponse {
  // success or failure
  bool success = 1;
  // error
  doordash_gifting_service.v1.GiftCardError error = 2;
  // gift card
  repeated doordash_gifting_service.v1.GiftCardAdapterEntity gift_cards = 3;
}

// GetGiftCardAdapterRequest
message GiftCardAdapterServiceBulkStatusRequest {
  // one of the identifiers for getting gift card
  repeated doordash_gifting_service.v1.BulkStatusIdentifier identifiers = 1;
  // support user id
  string support_user_id = 2;
}

// GetGiftCardAdapterResponse
message GiftCardAdapterServiceBulkStatusResponse {
  // success or failure
  bool success = 1;
  // gift cards
  repeated doordash_gifting_service.v1.GiftCardAdapterEntity gift_cards = 2;
  // errors
  repeated doordash_gifting_service.v1.GiftCardError error = 3;
}

// UnredeemGiftCardAdapterRequest
message GiftCardAdapterServiceUnredeemRequest {
  // gift card pin
  string gift_pin = 1;
  // consumer id
  int64 consumer_id = 2;
  // correlation_id
  string correlation_id = 3;
  // Metadata for the request headers
  map<string, string> metadata = 4;
  // support user id
  string support_user_id = 5;
}

// UnredeemGiftCardAdapterResponse
message GiftCardAdapterServiceUnredeemResponse {
  // success or failure
  bool success = 1;
  // error
  doordash_gifting_service.v1.GiftCardError error = 2;
  // code
  string code = 3;
  // reverted
  bool reverted = 4;
  // from_state
  int32 from_state = 5;
  // to_state
  int32 to_state = 6;
}

// GiftCardAdapterServiceResendRequest
message GiftCardAdapterServiceResendRequest {
  // order id
  google.protobuf.StringValue order_id = 1;
  // first 5 character of order_id
  google.protobuf.StringValue order_id_display = 2;
  // card uuid (reserved for the future)
  google.protobuf.StringValue card_id = 3;
  // first 5 character of card_id
  google.protobuf.StringValue card_id_display = 4;
  // buyer cx id (only valid for native gift card)
  google.protobuf.StringValue buyer_consumer_id = 5;
  // buyer email
  google.protobuf.StringValue buyer_email = 6;
  // card amount (face_value in native gift card)
  int64 card_amount = 7;
  // original receiver email
  google.protobuf.StringValue receiver_email = 8;
  // original receiver phone
  google.protobuf.StringValue receiver_phone = 9;
  // changed receiver email
  google.protobuf.StringValue new_receiver_email = 10;
  // changed receiver phone
  google.protobuf.StringValue new_receiver_phone = 11;
  // supporter user id
  string supporter_id = 12;
  // resend reason
  string resend_reason = 13;
  // correlation_id
  string correlation_id = 14;
  // Metadata for the request headers
  map<string, string> metadata = 15;
}

// GiftCardAdapterServiceResendResponse
message GiftCardAdapterServiceResendResponse {
  // total success or failure
  bool success = 1;
  // error
  doordash_gifting_service.v1.GiftCardError error = 2;
  // message
  google.protobuf.StringValue client_message = 3;
  // resend cards information if success
  repeated doordash_gifting_service.v1.ResendCard cards = 4;
}

// GetGiftCardAdapterRedeemHistoryRequest
message GiftCardAdapterServiceRedeemHistoryRequest {
  // one of the identifiers for getting gift card redeem history
  oneof identifier {
    // gift pin
    google.protobuf.StringValue gift_pin = 1;
    // gift product id
    google.protobuf.StringValue product_id = 2;
    // consumer id
    google.protobuf.StringValue consumer_id = 3;
  }
  // correlation_id
  string correlation_id = 4;
  // Metadata for the request headers
  map<string, string> metadata = 5;
  // support user id
  google.protobuf.StringValue support_user_id = 6;
}

// GetGiftCardAdapterRedeemHistoryResponse
message GiftCardAdapterServiceRedeemHistoryResponse {
  // success or failure
  bool success = 1;
  // error
  doordash_gifting_service.v1.GiftCardError error = 2;
  // gift card redeem history
  repeated doordash_gifting_service.v1.GiftCardAdapterRedeemHistoryEntity redeem_history = 3;
}
