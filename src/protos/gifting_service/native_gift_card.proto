syntax = "proto3";

package doordash_gifting_service.v1;

import "doordash.api/annotations.proto";
import "gifting_service/common.proto";
import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option go_package = "gifting_service";
option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.gifting.service";

// native gift card service
service NativeGiftCardService {
  // Set up this service to be exposed via Unified Gateway
  option (doordash.api.service) = {
    name: "gifting-service-web"
    url: "gifting-service-web.service.prod.ddsd"
    port: 50051
    name_spaces: ["giftcard"]
    api_key_name: "CONSUMER_FINANCIALS_SERVICE_API_KEY"
    owner: {
      name: "gifting-service-team"
      id: "gifting-service-team"
      slack_channel: "#ask-cx-financials-platform"
      email_alias: "eng-giftcard@doordash.com"
    }
    target_products: [CX]
  };
  // GetGiftCard
  rpc GetGiftCard(GetGiftCardRequest) returns (GetGiftCardResponse);
  // ResendGiftCard
  rpc ResendGiftCard(ResendGiftCardRequest) returns (ResendGiftCardResponse);
  // PurchaseGiftCard
  rpc PurchaseGiftCard(PurchaseGiftCardRequest) returns (PurchaseGiftCardResponse);
  // RedeemGiftCard
  rpc RedeemGiftCard(RedeemGiftCardRequest) returns (RedeemGiftCardResponse);
  // UnredeemGiftCard
  rpc UnredeemGiftCard(UnredeemGiftCardRequest) returns (UnredeemGiftCardResponse);
  // CancelGiftCard
  rpc CancelGiftCard(CancelGiftCardRequest) returns (CancelGiftCardResponse);
  // RecordGiftCardRedeemHistory
  rpc RecordGiftCardRedeemHistory(RecordGiftCardRedeemHistoryRequest) returns (RecordGiftCardRedeemHistoryResponse);
  // GetResendEligibility
  rpc GetResendEligibility(GetResendEligibilityRequest) returns (GetResendEligibilityResponse) {
    option (google.api.http) = {get: "/giftcard/v1/resend_eligibility"};
    option (doordash.api.endpoint) = {
      tier: T2
      lifecycle: DEV
      authorization: [CX_USER]
      target_products: [CX]
    };
  }
  // PostCheckoutResendGiftCard
  rpc PostCheckoutResendGiftCard(PostCheckoutResendGiftCardRequest) returns (PostCheckoutResendGiftCardResponse) {
    option (google.api.http) = {
      post: "/giftcard/v1/post_checkout_resend"
      body: "*"
    };

    option (doordash.api.endpoint) = {
      tier: T2
      lifecycle: DEV
      authorization: [CX_USER]
      target_products: [CX]
    };
  }
}

// native gift card
message GiftCardEntity {
  // primary key
  string id = 1;
  // uuid reference to order service order
  string order_uuid = 2;
  // delivery uuid reference to delivery service delivery
  string delivery_uuid = 3 [deprecated = true];
  // store id reference to MDS store
  google.protobuf.Int64Value store_id = 4;
  // item id reference to MDS item
  google.protobuf.Int64Value item_id = 5;
  // the url which links to the gift card photo’s url
  google.protobuf.StringValue card_image_url = 6;
  // the message CX input for the card
  google.protobuf.StringValue card_message = 7;
  // type of the card such like BIRTHDAY
  CardCategory card_category = 8;
  // family Name
  google.protobuf.StringValue recipient_family_name = 9;
  // given name
  google.protobuf.StringValue recipient_given_name = 10;
  // phone number cx input for receiving the gift card
  google.protobuf.StringValue recipient_phone = 11;
  // email address cx input for receiving the gift card
  google.protobuf.StringValue recipient_email = 12;
  // consumerId who bought the card
  string sender_consumer_id = 13;
  // consumerId who eventually redeem the code
  google.protobuf.StringValue redeemer_consumer_id = 14;
  // the price consumer bought for the card
  int64 price = 15;
  // the face_value the gift card have
  int64 face_value = 16;
  // the discount amount while cx bought the card (Price + Discount = Amount)
  int64 discount = 17;
  // the amount/price/discount’s currency
  string currency = 18;
  // card provider
  CardProvider provider = 19;
  // reference url
  google.protobuf.StringValue reference_url = 20;
  // card status like REDEEMED
  CardStatus status = 21;
  // created at
  google.protobuf.Timestamp created_at = 22;
  // updated at
  google.protobuf.Timestamp updated_at = 23;
  // quoted delivery time for sending the gift card
  google.protobuf.Timestamp quoted_delivery_time = 24;
  // sent at
  google.protobuf.Timestamp sent_at = 25;
  // seen at
  google.protobuf.Timestamp seen_at = 26;
  // last checked at
  google.protobuf.Timestamp last_checked_at = 27;
  // issued at
  google.protobuf.Timestamp issued_at = 28;
  // redeemed at
  google.protobuf.Timestamp redeemed_at = 29;
  // failed at
  google.protobuf.Timestamp failed_at = 30;
  // canceled at
  google.protobuf.Timestamp canceled_at = 31;
  // product id
  google.protobuf.StringValue product_id = 32;
  // serial id
  google.protobuf.StringValue serial_id = 33;
  // the method to send gift card
  DeliveryChannel delivery_channel = 34;
  // gift card pin
  google.protobuf.StringValue pin_hashed = 35;
  // gift card pin
  google.protobuf.StringValue pin = 36;
  // the name of the consumer who bought the card
  google.protobuf.StringValue sender_name = 37;
  // the transaction id for the deposit
  google.protobuf.Int64Value deposit_transaction_id = 38;
  // delivery ID
  google.protobuf.Int64Value delivery_id = 39;
  // delivery ID
  google.protobuf.StringValue sender_user_id = 40;
  // payer reference ID, link to the payment, should be order_cart_id now
  google.protobuf.StringValue payment_reference_id = 41;
  // recipient name
  google.protobuf.StringValue recipient_name = 42;
  // deposit time
  google.protobuf.Timestamp deposited_at = 43;
  // activities, only be used on verbose mode
  repeated GiftCardActivity activities = 44;
  // pin last resent time time
  google.protobuf.Timestamp last_resent_at = 45;
  // sender's timezone
  google.protobuf.StringValue sender_timezone = 46;
  // sender's language
  google.protobuf.StringValue sender_lang = 47;
  // canceled at
  google.protobuf.Timestamp replaced_at = 48;
  // sender email
  google.protobuf.StringValue sender_email = 49;
}

// activites happen on the gift card
message GiftCardActivity {
  // id of activity
  string id = 1;
  // is the system auto generated activity
  bool is_system_activity = 2;
  // if it is not system activity , requester's id, user id or admin_id
  google.protobuf.StringValue request_user_id = 3;
  // is this request comes from admin or not
  bool is_admin_request = 4;
  // which kind of activity is, list can be redeem, resend, send
  ActivityType activity_type = 5;
  // input information of the activity
  google.protobuf.StringValue activity_context = 6;
  // is this activity successfully performed
  bool is_success_activity = 7;
  // output information of the activity
  google.protobuf.StringValue activity_result = 8;
  // the activity start time
  google.protobuf.Timestamp created_at = 9;
  // the activity completion time
  google.protobuf.Timestamp completed_at = 10;
}

// GetGiftCardRequest
message GetGiftCardRequest {
  // one of the identifiers for getting gift card
  oneof identifier {
    // order uuid
    google.protobuf.StringValue order_uuid = 1;
    // gift pin
    google.protobuf.StringValue gift_pin = 2;
    // gift product id
    google.protobuf.StringValue product_id = 3;
    // gift card id
    google.protobuf.StringValue id = 7;
    // payer_reference_id , should be order_cart_id now
    google.protobuf.StringValue payer_reference_id = 8;
    // last 4 digit of card id, used by support to roughly query, deprecated by the order_uuid_prefix_five and card_id_prefix_five
    google.protobuf.StringValue id_last_four = 9 [deprecated = true];
    // first 5 digit of order id, used by support to roughly query
    google.protobuf.StringValue order_uuid_prefix_five = 11;
    // first 5 digit of card id, used by support to roughly query
    google.protobuf.StringValue card_id_prefix_five = 12;
    // consumer id as sender and as redeemer
    google.protobuf.StringValue consumer_id = 13;
  }
  // is customer originated request, used for record the gift card was seen by customer
  bool is_customer_request = 4;
  // order's buyer(gift card sender) id
  google.protobuf.StringValue sender_consumer_id = 5;
  // is customer requesting the pin, used for share by myself function, after the cx place the order
  bool is_request_pin = 6;
  // show the verbose status of the gift card, list all the activity of the gift card, such like resend/query activity
  bool show_verbose = 10;
}

// GetGiftCardResponse
message GetGiftCardResponse {
  // success or failure
  bool success = 1;
  // error
  GiftCardError error = 2;
  // gift card
  repeated GiftCardEntity gift_cards = 3;
  // activities of the gift card, only be used on verbose mode
  repeated GiftCardActivity activities = 4 [deprecated = true];
}

// ResendGiftCardRequest
message ResendGiftCardRequest {
  // order uuid
  string order_uuid = 1;
  // cx id
  string consumer_id = 2;
  // resend reason
  string resend_reason = 3;
  // resend channel
  DeliveryChannel resend_channel = 4;
  // phone number cx input for receiving the gift card
  google.protobuf.StringValue recipient_phone = 5;
  // email address cx input for receiving the gift card
  google.protobuf.StringValue recipient_email = 6;
  // card_id
  string card_id = 7;
  // supporter user id
  string support_user_id = 8;
}

// ResendGiftCardResponse
message ResendGiftCardResponse {
  // success or failure
  bool success = 1;
  // error
  GiftCardError error = 2;
  // card id
  string id = 3;
  // the face_value the gift card have
  int64 face_value = 4;
  // quoted delivery time for sending the gift card
  google.protobuf.Timestamp quoted_delivery_time = 5;
  // new phone number tx input for receiving the gift card
  google.protobuf.StringValue recipient_phone = 6;
  // new email address tx input for receiving the gift card
  google.protobuf.StringValue recipient_email = 7;
}

// Card Item
message CardItem {
  // item id reference to MDS item
  google.protobuf.Int64Value item_id = 1;
  // the url which links to the gift card photo’s url
  google.protobuf.StringValue card_image_url = 2;
  // the message CX input for the card
  google.protobuf.StringValue card_message = 3;
  // type of the card such like BIRTHDAY
  CardCategory card_category = 4;
  // the price consumer bought for the card
  int64 price = 5;
  // the face_value the gift card have
  int64 face_value = 6;
  // the discount amount while cx bought the card (Price + Discount = face_value)
  int64 discount = 7;
  // the amount/price/discount’s currency
  string currency = 8;
  // card provider
  CardProvider provider = 9;
  // product id
  google.protobuf.StringValue product_id = 10;
  //serial id
  google.protobuf.StringValue serial_id = 11;
  // last Name
  google.protobuf.StringValue recipient_family_name = 12;
  // first name
  google.protobuf.StringValue recipient_given_name = 13;
  // DeliveryChannel
  DeliveryChannel delivery_channel = 14;
  // phone number cx input for receiving the gift card
  google.protobuf.StringValue recipient_phone = 15;
  // email address cx input for receiving the gift card
  google.protobuf.StringValue recipient_email = 16;
  // recipient name
  google.protobuf.StringValue recipient_name = 17;
  // sender name
  google.protobuf.StringValue sender_name = 18;
  // Brand of the Gift Card
  google.protobuf.StringValue brand = 19;
  // Item Merchant Supplied Id
  google.protobuf.StringValue item_merchant_supplied_id = 20;
}

// PurchaseGiftCardRequest
message PurchaseGiftCardRequest {
  // uuid reference to order service order
  string order_uuid = 1;
  // delivery uuid reference to delivery service delivery
  string delivery_uuid = 2 [deprecated = true];
  // store id reference to MDS store
  google.protobuf.Int64Value store_id = 3;
  // card items
  repeated CardItem items = 4;
  // last Name
  google.protobuf.StringValue recipient_family_name = 5 [deprecated = true];
  // first name
  google.protobuf.StringValue recipient_given_name = 6 [deprecated = true];
  // DeliveryChannel
  DeliveryChannel receive_channel = 7 [deprecated = true];
  // phone number cx input for receiving the gift card
  google.protobuf.StringValue recipient_phone = 8 [deprecated = true];
  // email address cx input for receiving the gift card
  google.protobuf.StringValue recipient_email = 9 [deprecated = true];
  // consumerId who bought the card
  string cx_sender_id = 10 [deprecated = true];
  // the price consumer bought for the cards
  int64 price = 11;
  // the order's whole amount
  int64 amount = 12;
  // the discount amount while cx bought the card (Price + Discount = Amount)
  int64 discount = 13;
  // the amount/price/discount’s currency
  string currency = 14;
  // reference url
  google.protobuf.StringValue reference_url = 15 [deprecated = true];
  // quoted delivery time for sending the gift card
  google.protobuf.Timestamp quoted_delivery_time = 16;
  // the name of the consumer who bought the card
  google.protobuf.StringValue sender_name = 17 [deprecated = true];
  // delivery ID
  google.protobuf.Int64Value delivery_id = 18;
  // user ID
  google.protobuf.StringValue sender_user_id = 19;
  // payer reference ID, link to the payment, should be order_cart_id now
  google.protobuf.StringValue payer_reference_id = 20 [deprecated = true];
  // payer reference ID's type, will be 37 for the order_cart_id
  google.protobuf.StringValue payer_reference_type = 21 [deprecated = true];
  // recipient name
  google.protobuf.StringValue recipient_name = 22 [deprecated = true];
  // consumerId who bought the card
  string sender_consumer_id = 23;
  // payment reference id
  google.protobuf.StringValue payment_reference_id = 24;
  // payment reference type
  google.protobuf.StringValue payment_reference_type = 25;
  // sender email
  google.protobuf.StringValue sender_email = 26;
  // sender phone
  google.protobuf.StringValue sender_phone = 27;
  // card provider
  // if the card provider is test, the process can still run without cross-reference, but the redeem will not really deposit credit
  CardProvider provider = 28;
  // sender's timezone
  google.protobuf.StringValue sender_timezone = 29;
  // sender's language
  google.protobuf.StringValue sender_lang = 30;
  // Discount campaign Id
  google.protobuf.StringValue discount_campaign_id = 31;
}

// PurchaseGiftCardResponse
message PurchaseGiftCardResponse {
  // success or failure
  bool success = 1;
  // error
  GiftCardError error = 2;
}

// RedeemGiftCardRequest
message RedeemGiftCardRequest {
  // gift card pin
  string gift_pin = 1;
  // consumer id
  int64 consumer_id = 2;
  // user country code
  google.protobuf.StringValue user_country_code = 3;
}

// RedeemGiftCardResponse
message RedeemGiftCardResponse {
  // success or failure
  bool success = 1;
  // error
  GiftCardError error = 2;
  // user country
  string user_country = 3;
  // country
  string country = 4;
  // code
  string code = 5;
  // redeemed
  bool redeemed = 6;
  // gift card redeem monetary fields
  GiftCardRedeemMonetaryFields gift_card_redeem_monetary_fields = 7;
}

// UnredeemGiftCardRequest
message UnredeemGiftCardRequest {
  // gift card pin
  string gift_pin = 1;
  // consumer id
  int64 consumer_id = 2;
}

// UnredeemGiftCardResponse
message UnredeemGiftCardResponse {
  // success or failure
  bool success = 1;
  // error
  GiftCardError error = 2;
}

// CancelGiftCardRequest
message CancelGiftCardRequest {
  // gift card id
  string card_id = 1;
  // consumer id
  int64 consumer_id = 2;
  // the reason for canceling
  string cancel_reason = 3;
  // who canceled the request
  string cancel_origin = 4;
  // whether the cancel was manual
  bool is_manual_cancel = 5;
  // the support user id
  google.protobuf.StringValue support_user_id = 6;
  // order uuid
  google.protobuf.StringValue order_uuid = 7;
}

// CancelGiftCardResponse
message CancelGiftCardResponse {
  // success or failure
  bool success = 1;
  // error
  GiftCardError error = 2;
}

// RecordGiftCardRedeemHistoryRequest
message RecordGiftCardRedeemHistoryRequest {
  // productId
  google.protobuf.StringValue product_id = 1;
  // pinHashed
  string pin_hashed = 2;
  // cxRedeemerId
  int64 cx_redeemer_id = 3;
  // fromIp
  google.protobuf.StringValue from_ip = 4;
  // status
  RedeemStatus status = 5;
  // faceValue
  google.protobuf.Int64Value face_value = 6;
  // statusCode
  int64 status_code = 7;
  // requestJson
  google.protobuf.StringValue request_json = 8;
  // responseJson
  google.protobuf.StringValue response_json = 9;
  // referenceId
  google.protobuf.StringValue reference_id = 10;
  // cardId
  google.protobuf.StringValue card_id = 11;
}

// RecordGiftCardRedeemHistoryResponse
message RecordGiftCardRedeemHistoryResponse {
  // success or failure
  bool success = 1;
  // error
  GiftCardError error = 2;
}

// GetResendEligibilityRequest
message GetResendEligibilityRequest {
  reserved 1;
  reserved "order_uuid";
  // gift card id
  string card_id = 2;
  // requester cx id
  google.protobuf.StringValue consumer_id = 3 [(doordash.api.inject_id) = CX_ID];
}

// GetResendEligibilityResponse
message GetResendEligibilityResponse {
  // if it's eligible for resend
  bool is_eligible = 1;
  // the original delivery channel to send gift card
  DeliveryChannel delivery_channel = 2;
  // phone number cx input for receiving the gift card
  google.protobuf.StringValue recipient_phone = 3;
  // email address cx input for receiving the gift card
  google.protobuf.StringValue recipient_email = 4;
  // 404 - card id not found, 441 - card not in resendable status, 443 - hit rate limit
  GiftCardError error = 5;
}

// PostCheckoutResendGiftCardRequest
message PostCheckoutResendGiftCardRequest {
  // gift card id
  string card_id = 1;
  // resend channel
  DeliveryChannel resend_channel = 2;
  // phone number cx input for receiving the gift card
  google.protobuf.StringValue recipient_phone = 3;
  // email address cx input for receiving the gift card
  google.protobuf.StringValue recipient_email = 4;
  // requester cx id
  google.protobuf.StringValue consumer_id = 5 [(doordash.api.inject_id) = CX_ID];
}

// PostCheckoutResendGiftCardResponse
message PostCheckoutResendGiftCardResponse {
  // success or failure
  bool success = 1;
  // 404 - card id not found, 444 - mfa not verified
  GiftCardError error = 2;
}
