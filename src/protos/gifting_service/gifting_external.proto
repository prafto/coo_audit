syntax = "proto3";

package doordash_gifting_service.v1;

import "common/money.proto";
import "google/protobuf/wrappers.proto";

option go_package = "gifting_service";
option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.gifting.service";

// external gift card generic service error
message ExternalGiftCardServiceError {
  // String error code for the error.
  string error_code = 1;
  // error message
  string error_message = 2;
  // http_code
  int32 http_code = 3;
}

// request for adding external gift card
message AddExternalGiftCardRequest {
  // consumer id
  google.protobuf.StringValue consumer_id = 1;
  // store id
  google.protobuf.StringValue store_id = 2;
  // gift_card id
  google.protobuf.StringValue external_gift_card_number_token = 3;
  // pin id
  google.protobuf.StringValue external_gift_card_pin_token = 4;
  // display string
  google.protobuf.StringValue external_gift_card_display_string = 5;
  // experience
  google.protobuf.StringValue experience = 6;
  // currency
  google.protobuf.StringValue currency = 7;
  // fingerprint of the device sending the request
  google.protobuf.StringValue fingerprint = 8;
  // boolean to identify if we should skip vgs
  google.protobuf.BoolValue skip_vgs = 9;
  // cloudflare ja3 fingerprint of the device sending the request
  google.protobuf.StringValue ja3 = 10;
  // order cart id
  google.protobuf.StringValue order_cart_uuid = 11;
}

// response for adding external
message AddExternalGiftCardResponse {
  // success
  message Success {
    // gift card value available on the card
    money.MonetaryFields external_gift_card_value = 1;
  }
  // result is either success or error
  oneof result {
    // on success, return external gift card balanc
    Success success = 1;
    // on failure, return error
    ExternalGiftCardServiceError error = 2;
  }
}

// get external gift card balance request
message GetExternalGiftCardBalanceRequest {
  // gift_card id
  google.protobuf.StringValue external_gift_card_number_token = 1;
  // lock
  google.protobuf.BoolValue enable_lock = 2;
  // order cart uuid, this is needed when enable lock is true
  google.protobuf.StringValue order_cart_uuid = 3;
  // currency
  google.protobuf.StringValue currency = 4;
  // consumer id
  google.protobuf.StringValue consumer_id = 5;
  // store id
  google.protobuf.StringValue store_id = 6;
  // experience
  google.protobuf.StringValue experience = 7;
  // boolean to identify if we should skip vgs
  google.protobuf.BoolValue skip_vgs = 8;
}

// get external gift card balance response
message GetExternalGiftCardBalanceResponse {
  // success
  message Success {
    // gift card value available on the card
    money.MonetaryFields external_gift_card_value = 1;
  }
  // result is either success or error
  oneof result {
    // on success, return external gift card balanc
    Success success = 1;
    // on failure, return error
    ExternalGiftCardServiceError error = 2;
  }
}

//  get external gifts for a given consumer request
message GetExternalGiftCardsForConsumerRequest {
  // consumer id
  google.protobuf.StringValue consumer_id = 1;
  // store id
  google.protobuf.StringValue store_id = 2;
  // experience
  google.protobuf.StringValue experience = 3;
}

// external gift card info
message ExternalGiftCardDisplayInfo {
  // token
  google.protobuf.StringValue external_gift_card_number_token = 1;
  // display string
  google.protobuf.StringValue external_gift_card_display_string = 2;
}

//  get external gifts for a given consumer response
message GetExternalGiftCardsForConsumerResponse {
  // success
  message Success {
    //  external gifts for a given consumer
    repeated ExternalGiftCardDisplayInfo external_gift_cards = 1;
  }
  // result is either success or error
  oneof result {
    // on success, return external gifts for a given consumer
    Success success = 1;
    // on failure, return error
    ExternalGiftCardServiceError error = 2;
  }
}

// delete external gift card request
message DeleteExternalGiftCardRequest {
  // consumer id
  google.protobuf.StringValue consumer_id = 1;
  // gift_card id
  google.protobuf.StringValue external_gift_card_number_token = 2;
}

// delete external gift card response
message DeleteExternalGiftCardResponse {
  // success
  message Success {}
  // result is either success or error
  oneof result {
    // on success, return program and membership
    Success success = 1;
    // on failure, return error
    ExternalGiftCardServiceError error = 2;
  }
}

// redeem external gift card request
message RedeemExternalGiftCardRequest {
  // order id
  google.protobuf.StringValue order_uuid = 1;
  // order cart uuid
  google.protobuf.StringValue order_cart_uuid = 2;
  // consumer id
  google.protobuf.StringValue consumer_id = 3;
  // store id
  google.protobuf.StringValue store_id = 4;
  // experience
  google.protobuf.StringValue experience = 5;
  // one or more gift card data
  repeated money.ExternalGiftCard external_gift_cards = 6;
  // boolean to identify if we should skip vgs
  google.protobuf.BoolValue skip_vgs = 7;
}

// redeem external gift card response
message RedeemExternalGiftCardResponse {
  // success
  message Success {}
  // result is either success or error
  oneof result {
    // on success
    Success success = 1;
    // on failure, return error
    ExternalGiftCardServiceError error = 2;
  }
}

// refund external gift card request
message RefundExternalGiftCardRequest {
  // order uuid
  google.protobuf.StringValue order_uuid = 1;
  // refund amount
  money.MonetaryFields value_to_refund = 2;
  // order cart uuid
  google.protobuf.StringValue order_cart_uuid = 3;
  // boolean to identify if we should skip vgs
  google.protobuf.BoolValue skip_vgs = 4;
}

// refund external gift card response
message RefundExternalGiftCardResponse {
  // success
  message Success {}
  // partial success
  message PartialSuccess {
    // failed gc tokens
    repeated google.protobuf.StringValue failed_external_gift_card_tokens = 1;
  }
  // result is either success or error
  oneof result {
    // on success
    Success success = 1;
    // on partial success
    PartialSuccess partial_success = 2;
    // on failure, return error
    ExternalGiftCardServiceError error = 3;
  }
}

// check if external gift enabled for store request
message IsExternalGiftCardEnabledForStoreRequest {
  // store id
  google.protobuf.StringValue store_id = 1;
  // store id
  google.protobuf.StringValue experience = 2;
}

// check if external gift enabled for store response
message IsExternalGiftCardEnabledForStoreResponse {
  // success
  message Success {
    //  external gifts for a given consumer
    google.protobuf.BoolValue is_store_enabled = 1;
    //  vgs id for the tokenizer
    google.protobuf.StringValue vgs_id = 2;
  }
  // result is either success or error
  oneof result {
    // on success, return if store has external gc or not
    Success success = 1;
    // on failure, return error
    ExternalGiftCardServiceError error = 2;
  }
}

// load external gift card info
message LoadExternalGiftCardInfo {
  // gift card number token
  google.protobuf.StringValue external_gift_card_number_token = 1;
  // load amount
  money.MonetaryFields value_to_load = 2;
}

// load external gift card request
message LoadExternalGiftCardRequest {
  // order id
  google.protobuf.StringValue order_uuid = 1;
  // order cart uuid
  google.protobuf.StringValue order_cart_uuid = 2;
  // consumer id
  google.protobuf.StringValue consumer_id = 3;
  // employee uuid
  google.protobuf.StringValue employee_uuid = 4;
  // store id
  google.protobuf.StringValue store_id = 5;
  // experience
  google.protobuf.StringValue experience = 6;
  // load external gift card
  repeated LoadExternalGiftCardInfo external_gift_cards = 7;
}

// load external gift card response
message LoadExternalGiftCardResponse {
  // load external gift card transaction info
  message ExternalGiftCardData {
    // external identifier for the load transaction
    google.protobuf.StringValue transaction_reference_id = 1;
    // gift card number token
    google.protobuf.StringValue external_gift_card_number_token = 2;
    // current gift card value
    money.MonetaryFields current_balance = 3;
    // previous gift card value
    money.MonetaryFields previous_balance = 4;
  }

  // success
  message Success {
    // loaded gift cards
    repeated ExternalGiftCardData external_gift_card_data = 1;
  }
  // result is either success or error
  oneof result {
    // on success
    Success success = 1;
    // on failure, return error
    ExternalGiftCardServiceError error = 2;
  }
}

// cash out external gift card
// a legal requirement in certain states:
// Mx must to allow the Cx to cash-out the remaining unspent balance on their gift card if it's under a certain amount
// (this will be a Pathfinder and In-store specific endpoint)
message CashOutExternalGiftCardRequest {
  // intentionally empty (stub)
}

// cash out external gift card response
message CashOutExternalGiftCardResponse {
  // intentionally empty (stub)
}

// external gift card service
service ExternalGiftCardService {
  // add external gift card endpoint
  rpc AddExternalGiftCard(AddExternalGiftCardRequest) returns (AddExternalGiftCardResponse) {}
  // get external gift card balance endpoint
  rpc GetExternalGiftCardBalance(GetExternalGiftCardBalanceRequest) returns (GetExternalGiftCardBalanceResponse) {}
  // get external gifts for a given consumer
  rpc GetExternalGiftCardsForConsumer(GetExternalGiftCardsForConsumerRequest) returns (GetExternalGiftCardsForConsumerResponse) {}
  // delete external gift card endpoint
  rpc DeleteExternalGiftCard(DeleteExternalGiftCardRequest) returns (DeleteExternalGiftCardResponse) {}
  // redeem external gift card endpoint
  rpc RedeemExternalGiftCard(RedeemExternalGiftCardRequest) returns (RedeemExternalGiftCardResponse) {}
  // refund external gift card endpoint
  rpc RefundExternalGiftCard(RefundExternalGiftCardRequest) returns (RefundExternalGiftCardResponse) {}
  // check if external gift enabled for store
  rpc IsExternalGiftCardEnabledForStore(IsExternalGiftCardEnabledForStoreRequest) returns (IsExternalGiftCardEnabledForStoreResponse) {}
  // load external gift card endpoint
  rpc LoadExternalGiftCard(LoadExternalGiftCardRequest) returns (LoadExternalGiftCardResponse) {}
  // cash out external gift card endpoint
  rpc CashOutExternalGiftCard(CashOutExternalGiftCardRequest) returns (CashOutExternalGiftCardResponse) {}
}
