syntax = "proto3";

package conversation_rag_chat_service.v1;

import "google/protobuf/wrappers.proto";

option go_package = "github.com/doordash/services-protobuf/generated/conversation_rag_chat_service/api/v1";
option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.conversation_rag_chat_service.rpc.api";

// RAG Chat Service
service RagChatService {
  // UpsertKnowledgeBases upsert knowledge bases
  rpc UpsertKnowledgeBases(UpsertKnowledgeBasesRequest) returns (UpsertKnowledgeBasesResponse);
}

// Request message for the UpsertKnowledgeBases RPC
message UpsertKnowledgeBasesRequest {
  // List of knowledge base to upsert
  repeated UpsertKnowledgeBaseEntry upsert_knowledge_base_entries = 1;

  // Knowledge base entry to upsert
  message UpsertKnowledgeBaseEntry {
    // UUID of the knowledge base entry
    string uuid = 1;
    // Topic
    string topic = 2;
    // Category L1
    google.protobuf.StringValue category_l1 = 3;
    // Category L2
    google.protobuf.StringValue category_l2 = 4;
    // Embedding search string, will be converted to embeddings during the upsert
    string embedding_search_string = 5;
    // Article body
    string article_body = 6;
    // Copy values used in the article
    repeated string article_copy_values = 7;
    // Action associated with the action
    google.protobuf.StringValue action = 8;
    // Article contexts
    map<string, StringList> article_context = 9;
    // System checks used in the article
    repeated string article_system_checks = 10;

    // String list type
    message StringList {
      // List of values
      repeated string values = 1;
    }
  }
}

// Response of UpsertKnowledgeBases RPC
message UpsertKnowledgeBasesResponse {
  // Labyrinth upsert operation id
  int64 labyrinth_operation_id = 1;
}
