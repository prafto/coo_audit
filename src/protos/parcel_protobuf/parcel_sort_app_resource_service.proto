syntax = "proto3";

package parcel_service.v1;

import "doordash.api/annotations.proto";
import "doordash.api/client.proto";
import "google/api/annotations.proto";
import "google/protobuf/wrappers.proto";
import "parcel_protobuf/common.proto";

option go_package = "drive_parcel_service";
option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.parcel";

// service for all resource related operations within parcel sort app
service ParcelSortAppResourceService {
  option (doordash.api.service) = {
    name: "parcel-sort-app-resource"
    url: "parcel-service-web.service.prod.ddsd"
    port: 50051
    api_key_name: "API_KEY_FOR_PARCEL_SERVICE"
    owner: {
      id: "drive-parcels"
      name: "parcel"
      slack_channel: "#drive-parcels-alerts"
      email_alias: "drive-eng-parcel-plus@doordash.com"
    }
    name_spaces: ["parcel"]
    vertical_domains: [CX]
    target_products: [CX]
  };
  option (doordash.api.service_forward_headers) = {
    forward: [
      {field: "X-Application-Name"}]
  };

  // create resource api
  rpc CreateResource(CreateResourceRequest) returns (CreateResourceResponse) {
    option (google.api.http) = {
      post: "/parcel/v1/parcel_sort_app/create-resource"
      body: "*"
    };
    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: DEV
      authorization: [CX_USER]
      role_based_authorization: {
        mode: ANY,
        roles: [
          "perm_parcel_admin",
          "perm_parcel_site_lead"
        ]
      }
      slo_config: {
        critical_alerts_enabled: true
        critical_5m_burn_threshold: 3000
        critical_5m_burn_sustain_seconds: 300
        p99_latency: 3
      }
    };
  }

  // assign resource to route api
  rpc AssignResourceToTruck(AssignResourceToTruckRequest) returns (AssignResourceToTruckResponse) {
    option (google.api.http) = {
      post: "/parcel/v1/parcel_sort_app/assign-resource-to-truck"
      body: "*"
    };
    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: DEV
      authorization: [CX_USER]
      role_based_authorization: {
        mode: ANY,
        roles: ["perm_parcel_operator"]
      }
      slo_config: {
        critical_alerts_enabled: true
        critical_5m_burn_threshold: 3000
        critical_5m_burn_sustain_seconds: 300
        p99_latency: 3
      }
    };
  }

  // get resource details api
  rpc GetResourceDetails(GetResourceDetailsRequest) returns (GetResourceDetailsResponse) {
    option (google.api.http) = {
      post: "/parcel/v1/parcel_sort_app/get-resource-details"
      body: "*"
    };
    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: DEV
      authorization: [CX_USER]
      role_based_authorization: {
        mode: ANY,
        roles: ["perm_parcel_operator"]
      }
      slo_config: {
        critical_alerts_enabled: true
        critical_5m_burn_threshold: 3000
        critical_5m_burn_sustain_seconds: 300
        p99_latency: 3
      }
    };
  }

  // Validate And Move A Parcel To A Bin
  rpc MoveParcelToBin(MoveParcelToBinRequest) returns (MoveParcelToBinResponse) {
    option (google.api.http) = {
      post: "/parcel/v1/parcel_sort_app/move-parcel-to-bin"
      body: "*"
    };
    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: PROD
      authorization: [CX_USER]
      // no role_based_authorization
      role_based_authorization: {
        mode: ANY,
        roles: ["perm_parcel_operator"]
      }
      slo_config: {
        critical_alerts_enabled: true
        critical_5m_burn_threshold: 3000
        critical_5m_burn_sustain_seconds: 300
        p99_latency: 3
      }
    };
  }

  // Gets the parcel details needed for a specific bin barcode
  rpc GetParcelDetailsForBin(GetParcelDetailsForBinRequest) returns (GetParcelDetailsForBinResponse) {
    option (google.api.http) = {
      post: "/parcel/v1/parcel_sort_app/get-parcel-details-for-bin"
      body: "*"
    };
    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: PROD
      authorization: [CX_USER]
      // no role_based_authorization
      role_based_authorization: {
        mode: ANY,
        roles: ["perm_parcel_operator"]
      }
      slo_config: {
        critical_alerts_enabled: true
        critical_5m_burn_threshold: 3000
        critical_5m_burn_sustain_seconds: 300
        p99_latency: 3
      }
    };
  }

  // update the resource details
  rpc UpdateResource(UpdateResourceRequest) returns (UpdateResourceResponse) {
    option (google.api.http) = {
      post: "/parcel/v1/parcel_sort_app/update-resource"
      body: "*"
    };
    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: PROD
      authorization: [CX_USER]
      // no role_based_authorization
      role_based_authorization: {
        mode: ANY,
        roles: [
          "perm_parcel_admin",
          "perm_parcel_site_lead"
        ]
      }
      slo_config: {
        critical_alerts_enabled: true
        critical_5m_burn_threshold: 3000
        critical_5m_burn_sustain_seconds: 300
        p99_latency: 3
      }
    };
  }
}

// resource types
enum ResourceType {
  // unspecified resource type
  RESOURCE_TYPE_UNSPECIFIED = 0;
  // dock door
  RESOURCE_TYPE_DOCK_DOOR = 1;
  // not ready bin
  RESOURCE_TYPE_NOT_READY_BIN = 2;
  // dispatch bin
  RESOURCE_TYPE_DISPATCH_BIN = 3;
}

// create resource request
message CreateResourceRequest {
  //facility code
  google.protobuf.StringValue facility_code = 1;
  // resource type
  ResourceType resource_type = 2;
  // resource name
  google.protobuf.StringValue name = 3 [(doordash.api.client.optional) = true];
}

// resource status
enum ResourceStatus {
  // default unspecified
  RESOURCE_STATUS_UNSPECIFIED = 0;
  // when resource is available
  RESOURCE_STATUS_ACTIVE = 1;
  // when resource is being used
  RESOURCE_STATUS_IN_USE = 2;
  // when resource is unavailable(may be inoperable)
  RESOURCE_STATUS_INACTIVE = 3;
}

// create resource response
message CreateResourceResponse {
  // resource details
  ResourceDetails resource_details = 1;
}

// assign resource to truck request
message AssignResourceToTruckRequest {
  // facility code
  google.protobuf.StringValue facility_code = 1;
  // route id used for the truck
  google.protobuf.StringValue route_id = 2;
  // resource being assigned
  google.protobuf.StringValue resource_id = 3;
}

// assign resource to truck response
message AssignResourceToTruckResponse {
  // used for deprecated field numbers
  reserved 1, 2, 3, 4, 5;
  // used for deprecated field names
  reserved "resource_id", "facility_code", "name", "status", "container_id";
  // resource details
  ResourceDetails resource_details = 6;
}

// resource details api request
message GetResourceDetailsRequest {
  // facility code
  string facility_code = 3;
  // unique identifier for resource, at least within facility
  oneof resource_identifier {
    // resource ID
    // buf:breaking:ignore FIELD_SAME_ONEOF
    google.protobuf.StringValue resource_id = 1;
    // resource name
    string resource_name = 2;
  }
}

// resource details
message ResourceDetails {
  // resource id
  google.protobuf.StringValue resource_id = 1;
  // status of the resource (ACTIVE, INACTIVE, IN_USE)
  ResourceStatus status = 2;
  // facility_code
  google.protobuf.StringValue facility_code = 3;
  // container using this resource
  google.protobuf.StringValue container_id = 4;
  // resource type
  ResourceType resource_type = 5;
  // resource name
  google.protobuf.StringValue name = 6;
}

// get resource details response
message GetResourceDetailsResponse {
  // resource details
  ResourceDetails resource_details = 1;
  // if the container is a truck then facility codes of its route
  repeated google.protobuf.StringValue route_facility_codes = 2;
}

// Enum representing types of bins
enum ExpectedBinType {
  // UNSPECIFIED
  EXPECTED_BIN_TYPE_UNSPECIFIED = 0;
  // Not Ready Bin Type
  EXPECTED_BIN_TYPE_NOT_READY_BIN = 1;
  // Dispatch Bin Type
  EXPECTED_BIN_TYPE_DISPATCH_BIN = 2;
}

// Validation status around the bin being scanned for a specific parcel
enum BinValidationStatus {
  // UNSPECIFIED
  BIN_VALIDATION_STATUS_UNSPECIFIED = 0;
  // The parcel was successfully validated the correct bin was scanned
  BIN_VALIDATION_STATUS_CORRECT_BIN = 1;
  // The bin which was scanned for the parcel to be placed in was incorrect
  BIN_VALIDATION_STATUS_INCORRECT_BIN = 2;
}

// Request to move a parcel to a bin
message MoveParcelToBinRequest {
  // parcel barcode
  string parcel_barcode = 1;
  // facility_code
  string facility_code = 2;
  // bin barcode
  string bin_barcode = 3;
  // Expected Bin Type
  ExpectedBinType expected_bin_type = 4;
}

// Response for moving a parcel to a bin
message MoveParcelToBinResponse {
  // The status around if the bin being scanned for a parcel is correct
  BinValidationStatus bin_validation_status = 1;
}

// Request for fetching parcel information for a bin
message GetParcelDetailsForBinRequest {
  // The bin barcode to get information for
  string bin_barcode = 1;
  // The facility code which the request is coming from
  string facility_code = 2;
}

// Types of ParcelDetails lists which could exist in a bin
enum ParcelDetailsListType {
  // UNSPECIFIED
  PARCEL_DETAILS_LIST_TYPE_UNSPECIFIED = 0;
  // ParcelDetails which still need to be scanned to the bin
  PARCEL_DETAILS_LIST_TYPE_TO_SCAN = 1;
  // ParcelDetails which are scanned into the bin
  PARCEL_DETAILS_LIST_TYPE_IN_BIN = 2;
  // ParcelDetails which need to be sorted out of the bin
  PARCEL_DETAILS_LIST_TYPE_TO_SORT = 3;
}

// A single list of ParcelDetails objects described by a list type
message ParcelDetailsList {
  // List type describing the accompanying ParcelDetails list
  ParcelDetailsListType parcel_details_list_type = 1;
  // List of similar ParcelDetails objects
  repeated ParcelDetails parcel_details = 2;
}

// Response for returning parcel information for a bin
message GetParcelDetailsForBinResponse {
  // Partitioned lists of ParcelDetails objects describing what is in a specific bin
  repeated ParcelDetailsList parcel_details_list = 1;
}

// Update resource request
message UpdateResourceRequest {
  // resource_id that is getting updated
  google.protobuf.StringValue resource_id = 1;
  // new name
  google.protobuf.StringValue name = 2;
  // new status
  ResourceStatus status = 3;
}

// Response update resource
message UpdateResourceResponse {
  // resource details
  ResourceDetails resource_details = 1;
}
