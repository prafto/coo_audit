syntax = "proto3";

package parcel_service.visualization.v1;

import "doordash.api/annotations.proto";
import "doordash.api/field_validate.proto";
import "google/api/annotations.proto";
import "parcel_protobuf/common.proto";

option go_package = "drive_parcel_service";
option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.parcel.visualization";

// service for all visualization related APIs
service ParcelVisualizationService {
  option (doordash.api.service) = {
    name: "parcel-visualization"
    url: "parcel-service-web.service.prod.ddsd"
    port: 50051
    api_key_name: "API_KEY_FOR_PARCEL_SERVICE"
    owner: {
      id: "drive-parcels"
      name: "parcel"
      slack_channel: "#drive-parcels-alerts"
      email_alias: "drive-eng-parcel-plus@doordash.com"
    }
    name_spaces: ["parcel"]
    target_products: [INTERNAL]
  };

  // Get parcels by forceBatchId
  rpc GetParcelsByForceBatchId(GetParcelsByForceBatchIdRequest) returns (GetParcelsByForceBatchIdResponse) {
    option (google.api.http) = {get: "/parcel/v1/parcel_visualization/get-parcels-by-force-batch-id"};
    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: PROD
      authorization: [DD_EMPLOYEE]
      role_based_authorization: {
        mode: ANY,
        roles: ["perm_view_delivery_visualizations_info"]
      }
      slo_config: {
        critical_alerts_enabled: true
        critical_5m_burn_threshold: 3000
        critical_5m_burn_sustain_seconds: 300
        p99_latency: 3
      }
    };
  }
  // Get parcel details
  rpc GetParcelDetails(GetParcelDetailsRequest) returns (GetParcelDetailsResponse) {
    option (google.api.http) = {get: "/parcel/v1/parcel_visualization/get-parcel-details"};
    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: PROD
      authorization: [DD_EMPLOYEE]
      role_based_authorization: {
        mode: ANY,
        roles: ["perm_view_delivery_visualizations_info"]
      }
      slo_config: {
        critical_alerts_enabled: true
        critical_5m_burn_threshold: 3000
        critical_5m_burn_sustain_seconds: 300
        p99_latency: 3
      }
    };
  }
}

// Request for GetParcelsByForceBatchId
message GetParcelsByForceBatchIdRequest {
  // facility id
  int32 facility_id = 1;
  // force batch id for parcels
  string force_batch_id = 2;
}

// response for GetParcelsByForceBatchId
message GetParcelsByForceBatchIdResponse {
  // parcels
  repeated parcel_service.v1.Parcel parcels = 1;
  // batch detail
  parcel_service.v1.BatchDetail batch_detail = 2 [(doordash.api.validate.rules).missing_value = {action: USE_DEFAULT_VALUE}];
}

// request to fetch basic details about parcel
message GetParcelDetailsRequest {
  // barcode
  string barcode = 1;
}

// detailed parcel response
message GetParcelDetailsResponse {
  // Parcel
  parcel_service.v1.ParcelDetails parcel = 1;
}
