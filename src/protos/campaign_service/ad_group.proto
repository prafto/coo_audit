syntax = "proto3";

package campaign_service.v1;

import "campaign_service/ad.proto";
import "campaign_service/billing_settings.proto";
import "campaign_service/budgets.proto";
import "campaign_service/common.proto";
import "campaign_service/common/deactivation_info.proto";
import "campaign_service/common/experiment.proto";
import "campaign_service/frequency_cap.proto";
import "campaign_service/funding.proto";
import "campaign_service/metadata.proto";
import "campaign_service/target.proto";
import "common/money.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.campaign";

/**
 * Atomic Ad Group object configuring targeting, bid prices, budgets and a collection of Ads.
 */
message AdGroup {
  // campaign_id in which the ad exists
  // string representation of a UUID
  google.protobuf.StringValue campaign_id = 1;

  // unique identifier for the ad group
  // string representation of a UUID
  google.protobuf.StringValue id = 2;

  // advertiser provided identifier for the ad group
  google.protobuf.StringValue external_id = 3;

  // advertiser provided name of the ad group
  google.protobuf.StringValue name = 4;

  // active flag for the ad group to turn on/off serving
  google.protobuf.BoolValue is_active = 5;

  // start at timestamp
  google.protobuf.Timestamp start_at = 6;

  // end at timestamp
  google.protobuf.Timestamp end_at = 7;

  // budget configurations limiting the serving of the ad group
  Budgets budgets = 8;

  // base bid price for the ad group
  Bid bid = 9;

  // targeting configurations the control the consumers, merchants, and context in which the ad group is served
  repeated Target targets = 10;

  // ads will be an empty list when the Prefer header contains 'return=minimal' - default
  // ads will be returned when the Prefer header contains 'return=representation'
  // collection of Ads adhering to the targeting and budget configurations of the ad group
  repeated Ad ads = 11;

  // billing model for the ad group
  BillingModel billing_model = 12;

  reserved 13, 14;
  reserved "billing_profile_id", "billing_profile";

  // Billing configuration specific to this ad_group
  BillingSettings billing_settings = 15;

  // billing model for the ad group
  enum BillingModel {
    // unspecified billing model
    UNSPECIFIED = 0;
    // cost per acquisition - default for SL or Promo
    CPA = 1;
    // cost per click - default for SP or SB
    CPC = 2;
    // cost per milli - default for banner
    CPM = 3;
    // cost per redemption
    CPR = 4;
  }

  // metadata for the ad group
  Metadata metadata = 16;

  // sets maximum number of interactions with the ad group over a given time window
  repeated FrequencyCap frequency_caps = 17;

  // experiment configuration for the ad group
  common.v1.Experiment experiment = 18 [deprecated = true];

  // Deactivation reason for the ad group
  campaign_service.common.v1.DeactivationReason deactivation_reason = 19;

  // deduplication condition to be used to remove self-competition
  DeduplicationCondition deduplication_condition = 20;

  // funding sources and allocations for this ad group
  repeated Funding funding = 21;

  // extraneous fees for this ad group
  Fees fees = 22;

  // experiment configuration for the ad group
  repeated common.v1.Experiment experiments = 23;

  // Persisted state in the DB
  State state = 24;
}

// bid configuration
message Bid {
  // bid type
  Type type = 1;

  // required bid information based on the bid type
  oneof bid {
    // base bid price if the type is MANUAL
    money.MonetaryFields price = 2;

    // automated bidding properties if the type is AUTOMATED
    AutomatedBid automated_bid = 3;
  }

  // bid type for the ad group
  enum Type {
    // unspecified bid type
    UNSPECIFIED = 0;

    // manual bid price set
    MANUAL = 1;

    // automatically set the bid price for the ad group
    AUTOMATED = 2;
  }

  // configuration for automatic bidding
  message AutomatedBid {
    // bid strategy if the type is AUTOMATED
    Strategy strategy = 1;

    // Bidding strategy for automatic bid type
    enum Strategy {
      // unspecified strategy
      UNSPECIFIED = 0;

      // moderate strategy - will be default
      BALANCED = 1;

      // least aggressive strategy
      CONSERVATIVE = 2;

      // most aggressive strategy
      AGGRESSIVE = 3;
    }
  }
}

// Dedup condition used to remove self-competition between ad groups
message DeduplicationCondition {
  // exact match strings to remove self-competition
  repeated google.protobuf.StringValue keys = 1;
}
