syntax = "proto3";

package campaign_service.v1;

import "campaign_service/enrichment.proto";
import "common/service_client_config.proto";
import "doordash.api/annotations.proto";
import "google/api/annotations.proto";
import "google/protobuf/wrappers.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.campaign";

// enrichment service rpc definition
service EnrichmentService {
  // Timeout after 1 s.
  option (service_client.client_config).response_attempt_timeout_millis = 1000;
  // Make a total 4 attempts (initial + three retries).
  option (service_client.client_config).retry_config.max_attempts = 4;
  // Break the circuit if the error rate exceeds 80%.
  option (service_client.client_config).circuit_breaker_config.failure_rate_threshold = 0.8;
  // Ignore NOT_FOUND from circuit breaker error rate calculation.
  option (service_client.client_config).circuit_breaker_config.do_ignore_grpc_code = 5;
  // Ignore ILLEGAL_ARGUMENT from circuit breaker error rate calculation.
  option (service_client.client_config).circuit_breaker_config.do_ignore_grpc_code = 3;

  option (doordash.api.service) = {
    name: "enrichment-service"
    url: "campaign-service-web.service.prod.ddsd"
    port: 50051
    name_spaces: ["ads"]
    api_key_name: "UG_ENRICHMENT_SECRET_API_KEY"
    owner: {
      name: "advertiser-experience"
      id: "advertiser-experience"
      slack_channel: "#ads-demand-eng"
      email_alias: "ads-demand-eng@doordash.com"
    }
    target_products: [
      ADMIN_PORTAL,
      INTERNAL
    ]
  };

  // create a new enrichment
  rpc CreateEnrichment(CreateEnrichmentRequest) returns (CreateEnrichmentResponse) {
    option (google.api.http) = {
      post: "/admin_portal/ads/v1/enrichment"
      body: "*"
    };
    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: DEV
      authorization: [DD_EMPLOYEE]
      target_products: [
        ADMIN_PORTAL,
        INTERNAL
      ],
      role_based_authorization: {
        roles: ["perm_write_enrichment"],
        mode: ANY
      }
    };
  }

  // update an existing enrichment
  rpc UpdateEnrichment(UpdateEnrichmentRequest) returns (UpdateEnrichmentResponse) {
    option (google.api.http) = {
      put: "/admin_portal/ads/v1/enrichment"
      body: "*"
    };
    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: DEV
      authorization: [DD_EMPLOYEE]
      target_products: [
        ADMIN_PORTAL,
        INTERNAL
      ],
      role_based_authorization: {
        roles: ["perm_write_enrichment"],
        mode: ANY
      }
    };
  }

  // get enrichment by id
  rpc GetEnrichmentById(GetEnrichmentByIdRequest) returns (GetEnrichmentByIdResponse) {
    option (google.api.http) = {get: "/admin_portal/ads/v1/enrichment/{enrichment_id}"};
    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: DEV
      authorization: [DD_EMPLOYEE]
      target_products: [
        ADMIN_PORTAL,
        INTERNAL
      ],
      role_based_authorization: {
        roles: [
          "perm_write_enrichment",
          "perm_read_enrichment"
        ],
        mode: ANY
      }
    };
  }

  // get paginated list of enrichments
  rpc GetEnrichments(GetEnrichmentsRequest) returns (GetEnrichmentsResponse) {
    option (google.api.http) = {get: "/admin_portal/ads/v1/enrichment"};
    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: DEV
      authorization: [DD_EMPLOYEE]
      target_products: [
        ADMIN_PORTAL,
        INTERNAL
      ],
      role_based_authorization: {
        roles: [
          "perm_write_enrichment",
          "perm_read_enrichment"
        ],
        mode: ANY
      }
    };
  }

  // assign selection id to enrichment
  rpc AssignSelectionElement(AssignSelectionElementRequest) returns (AssignSelectionElementResponse) {}

  // update enrichment indexing result
  rpc UpdateEnrichmentIndexingResult(UpdateEnrichmentIndexingResultRequest) returns (UpdateEnrichmentIndexingResultResponse) {}

  // Deactivate a enrichment
  rpc DeactivateEnrichment(DeactivateEnrichmentRequest) returns (DeactivateEnrichmentResponse) {
    option (google.api.http) = {
      put: "/admin_portal/ads/v1/enrichment/deactivate"
      body: "*"
    };
    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: DEV
      authorization: [DD_EMPLOYEE]
      target_products: [
        ADMIN_PORTAL,
        INTERNAL
      ],
      role_based_authorization: {
        roles: ["perm_write_enrichment"],
        mode: ANY
      }
    };
  }
}

// request message for CreateEnrichment
message CreateEnrichmentRequest {
  // enrichment to create
  Enrichment enrichment = 1;
}

// response message for CreateEnrichment
message CreateEnrichmentResponse {
  // enrichment created
  Enrichment enrichment = 1;
}

// request message for UpdateEnrichment
message UpdateEnrichmentRequest {
  // enrichment to update
  Enrichment enrichment = 1;
}

// response message for UpdateEnrichment
message UpdateEnrichmentResponse {
  // enrichment updated
  Enrichment enrichment = 1;
}

// request message for GetEnrichmentById
message GetEnrichmentByIdRequest {
  reserved 1;
  reserved "id";
  // id of enrichment to get
  google.protobuf.StringValue enrichment_id = 2;
}

// response message for GetEnrichmentById
message GetEnrichmentByIdResponse {
  // enrichment
  Enrichment enrichment = 1;
}

// request message for GetEnrichments
message GetEnrichmentsRequest {
  // search parameters here when defined

  // number of results to return
  int32 limit = 1;
  // offset from beginning of list of results to return
  int32 offset = 2;
  // search term against id/name.
  google.protobuf.StringValue search_term = 3;
}

// response message for GetEnrichments
message GetEnrichmentsResponse {
  reserved 1;
  reserved "enrichments";
  // paginated list of enrichments matching the search parameters from request
  repeated SearchedEnrichment searched_enrichments = 2;
}

// request message for AssignSelectionId
message AssignSelectionElementRequest {
  // id of enrichment to update
  google.protobuf.StringValue enrichment_id = 1;
  // selection id to assign
  SelectionElement selection_element = 2;
}

// response message for AssignSelectionId
message AssignSelectionElementResponse {}

// update enrichment serving result request
message UpdateEnrichmentIndexingResultRequest {
  // id of enrichment to update
  google.protobuf.StringValue enrichment_id = 1;
  // serving result for the enrichment
  EnrichmentIndexingResult result = 2;
}

// update enrichment serving result response
message UpdateEnrichmentIndexingResultResponse {}

// deactivate request for enrichment
message DeactivateEnrichmentRequest {
  // id of enrichment to deactivate
  google.protobuf.StringValue enrichment_id = 1;
}

// response for deactivate request
message DeactivateEnrichmentResponse {}
