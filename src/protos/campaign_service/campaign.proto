syntax = "proto3";

package campaign_service.v1;

import "campaign_service/ad_group.proto";
import "campaign_service/billing_profile.proto";
import "campaign_service/billing_settings.proto";
import "campaign_service/budgets.proto";
import "campaign_service/common.proto";
import "campaign_service/common/deactivation_info.proto";
import "campaign_service/frequency_cap.proto";
import "campaign_service/metadata.proto";
import "campaign_service/status.proto";
import "common/common.proto";
import "common/money.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.campaign";

/**
 * Atomic Campaign object configuring objectives, budgets, and collections of ad groups.
 */
message Campaign {
  reserved "vertical"; // moved to vertical_type
  reserved 13; // moved to vertical_type

  // unique identifier for the ad group
  // string representation of a UUID
  google.protobuf.StringValue id = 1;

  // advertiser provided identifier for the campaign
  google.protobuf.StringValue external_id = 2;

  // advertiser provided name for the campaign
  google.protobuf.StringValue name = 3;

  // advertiser provided description for the campaign
  google.protobuf.StringValue description = 4;

  // active flag for the campaign to turn on/off serving
  google.protobuf.BoolValue is_active = 5;

  // start at timestamp
  google.protobuf.Timestamp start_at = 6;

  // end at timestamp
  google.protobuf.Timestamp end_at = 7;

  // budget configurations limiting the serving of the campaign
  Budgets budgets = 8;

  // template id for the campaign
  google.protobuf.StringValue template_id = 9;

  // advertiser id in UUID format
  google.protobuf.StringValue advertiser_id = 10;

  // DRI
  google.protobuf.StringValue directly_responsible_individual = 11;

  // notes about the campaign
  google.protobuf.StringValue notes = 12;

  // addition metadata for the campaign. this is non-essential information
  Metadata metadata = 14;

  // ad_groups will be an empty list when the Prefer header contains 'return=minimal' - default
  // ad_groups will be returned when the Prefer header contains 'return=representation'
  // collection of Ad Groups adhering to the campaign's objectives and budgets
  repeated AdGroup ad_groups = 15;

  // Determines which entity is paying and how they are paying
  oneof billing_profile_value {
    // Id of external billing profile, uuid format
    google.protobuf.StringValue billing_profile_id = 16;

    // Embedded billing profile for compatibility purposes
    BillingProfile billing_profile = 17;
  }

  // Billing configuration specific to this campaign
  BillingSettings billing_settings = 18;

  // deduplication conditions to be used to remove self-competition
  // DeduplicationCondition deduplication_conditions = 19; // moved to ad_group
  reserved 19;
  reserved "deduplication_conditions";

  // Amount of free trial credits allocated to the campaign
  money.MonetaryFields free_trial_credits = 20;

  // sets maximum number of interactions with the campaign over a given time window
  repeated FrequencyCap frequency_caps = 21;

  // Deactivation reason for the campaign
  campaign_service.common.v1.DeactivationReason deactivation_reason = 22;

  // Persisted campaign state in the DB
  State state = 23;

  // Calculated status only on the read path
  // Does not get persisted in the DB
  Status status = 24;

  // vertical of the campaign
  VerticalType vertical_type = 25;

  // audience criteria of test audience
  TestCriteria test_criteria = 26;

  // flag to indicate if the campaign is only visible for internal users
  google.protobuf.BoolValue is_internal = 27;

  // Name of the overall business campaign
  // For tagging purposes ONLY. Not to be used by serving
  google.protobuf.StringValue business_campaign = 28;

  // Attribution channel, for example, where the campaign's codes were sent
  // For tagging purposes ONLY. Not to be used by serving
  google.protobuf.StringValue attribution_channel = 29;

  // Vertical tag of the campaign
  enum VerticalType {
    // unspecified vertical
    VERTICAL_TYPE_UNSPECIFIED = 0;
    // convenience
    CONVENIENCE = 1;
    // pickup
    PICKUP = 2;
    // new cx or activation
    NEW_CX_OR_ACTIVATION = 3;
    // engagement (deprecated)
    ENGAGEMENT = 4 [deprecated = true];
    // resurrection
    RESURRECTION = 5;
    // dashpass (deprecated)
    DASHPASS = 6 [deprecated = true];
    // drive
    DRIVE = 7;
    // enterprise promotions
    ENTERPRISE_PROMOTIONS = 8;
    // other strategy and ops
    OTHER_STRATEGY_AND_OPS = 9;
    // other new verticals
    OTHER_NEW_VERTICALS = 10;
    // mx funded
    MX_FUNDED = 11;
    // caviar
    CAVIAR = 12;
    // australia
    AUSTRALIA = 13;
    // canada
    CANADA = 14;
    // small experiments
    SMALL_EXPERIMENTS = 15;
    // new cx or acquisition
    NEW_CX_OR_ACQUISITION = 16;
    // alcohol
    ALCOHOL = 17;
    // pets
    PETS = 18;
    // dashmart
    DASHMART = 19;
    // gifting
    GIFTING = 20;
    // storefront
    STOREFRONT = 21;
    // partner marketing
    PARTNER_MARKETING = 22;
    // group orders
    GROUP_ORDERS = 23;
    // dashpass rotating awards (deprecated)
    DASHPASS_ROTATING_AWARDS = 24 [deprecated = true];
    // doordash for work
    DOORDASH_FOR_WORK = 25;
    // enterprise
    ENTERPRISE = 26;
    // grocery
    GROCERY = 27;
    // large orders
    LARGE_ORDERS = 28;
    // strategic markets (deprecated)
    STRATEGIC_MARKETS = 29 [deprecated = true];
    // premium
    PREMIUM = 30;
    // enterprise cpg
    ENTERPRISE_CPG = 31;
    // other mx (deprecated)
    OTHER_MX = 32 [deprecated = true];
    // dashpass cofunded
    DASHPASS_COFUNDED = 33;
    // enterprise cofunded (deprecated)
    ENTERPRISE_COFUNDED = 34 [deprecated = true];
    // self delivery
    SELF_DELIVERY = 35;
    // dashpass cofunded cpg
    DASHPASS_COFUNDED_CPG = 36;
    // ads midmarket rx
    ADS_MIDMARKET_RX = 37;
    // ads smb rx
    ADS_SMB_RX = 39;
    // funded new verticals
    FUNDED_NEW_VERTICALS = 40;
    // ship anywhere
    SHIP_ANYWHERE = 41;
    // flowers
    FLOWERS = 42;
    // homegoods
    HOMEGOODS = 43;
    // rx enterprise
    RX_ENTERPRISE = 44;
    // doordash kitchens
    DOORDASH_KITCHENS = 45;
    // rx midmarket
    RX_MIDMARKET = 46;
    // rx smb
    RX_SMB = 47;
    // other restaurants
    OTHER_RESTAURANTS = 48;
    // virtual brands
    VIRTUAL_BRANDS = 49;
    // other cofunded
    OTHER_COFUNDED = 50;
    // dashpass adoption
    DASHPASS_ADOPTION = 51;
    // dashpass retention
    DASHPASS_RETENTION = 52;
    // engagement active
    ENGAGEMENT_ACTIVE = 53;
    // engagement dormant
    ENGAGEMENT_DORMANT = 54;
    // dashpass cofunded nv
    DASHPASS_COFUNDED_NV = 55;
    // dashpass cofunded other
    DASHPASS_COFUNDED_OTHER = 56;
    // wolt
    WOLT = 57;
    // retail
    RETAIL = 58;
    // mx ingested
    MX_INGESTED = 59;
    // dashpass retention nudge only
    DASHPASS_RETENTION_NUDGE_ONLY = 60;
    // canada occasions
    CANADA_OCCASIONS = 61;
    // Mx 3rd party funded
    MX_3P_FUNDED = 62;
    // Dashpass benefits
    DASHPASS_BENEFITS = 64;
    // Dashpass partnership
    DASHPASS_PARTNERSHIP = 65;
    // Multi-vertical
    MULTI_VERTICAL = 66;
  }

  // Criteria that's used on campaign state = TEST
  message TestCriteria {
    // segment containing emails of users eligible for the test mode campaign
    google.protobuf.StringValue segment_id = 1;

    // segment containing users testing the campaign that also need to match the campaign criteria
    google.protobuf.StringValue test_audience_segment_id = 2;

    // Any further constraints can be added below
  }
}
