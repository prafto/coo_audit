syntax = "proto3";

package campaign_service.v1;

import "common/common.proto";
import "common/money.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.campaign";

/*
 * MerchantId object pairing the id_type with the id
 */
message MerchantId {
  // The type of id
  common.MerchantIdType id_type = 1;

  // The id
  string id = 2;
}

/*
 * wrapper object for a collection of MerchantIds
 */
message MerchantIds {
  // collection of MerchantIds
  repeated MerchantId ids = 1;
}

/*
 * ProductId object pairing the id_type with the id
 */
message ProductId {
  reserved 3;
  reserved "parent_product_id";
  // The type of id
  common.ProductIdType id_type = 1;

  // The id
  string id = 2;

  // optional repeated ProductId options to provide taxonomy of a menu
  repeated ProductId options = 4;

  // optional field that determines whether an item is considered a priority item in a sponsored brand ad
  google.protobuf.BoolValue is_priority = 5;
}

/*
 * wrapper object for a collection of ProductIds
 */
message ProductIds {
  // collection of ProductIds
  repeated ProductId ids = 1;
}

/**
 * The state of the atomic entity (campaign, ad group) that is persisted in the database.
 * This is the state of the atomic entity which determines whether the atomic entity is eligible to serve.
 * The above line is true pending the deprecation of is_active to be replaced by state.
 * We need to wrap this enum in a message since UNSPECIFIED is shared between multiple enums.
 */
message State {
  // State type
  Type type = 1;
  // State of the entity
  enum Type {
    // UNSPECIFIED state
    UNSPECIFIED = 0;
    // Entity is eligible to serve
    ELIGIBLE = 1;
    // Entity is paused and cannot serve
    PAUSED = 2;
    // Entity is in draft and cannot serve
    DRAFT = 3;
    // Entity is rejected and cannot serve
    REJECTED = 4;
    // Entity is in review and cannot serve
    IN_REVIEW = 5;
    // Entity is cancelled and cannot serve
    CANCELLED = 6;
    // Entity is in Test and will only serve to test audience
    TESTING = 7;
  }

  /**
   * When the state of the entity is changed, this field will be populated
   */
  message StateChangeInfo {
    // enums values for the state change reason
    enum StateChangeReason {
      // UNSPECIFIED state change reason
      // buf:lint:ignore ENUM_VALUE_PREFIX
      UNSPECIFIED = 0;
      // state change reason is manual (by user)
      // buf:lint:ignore ENUM_VALUE_PREFIX
      REASON_MANUAL = 1;
      // budget cap reached - usually due to a billing
      // buf:lint:ignore ENUM_VALUE_PREFIX
      BUDGET_CAP_REACHED = 2;

      // When campaign enters test mode from Draft state or from Eligible state if start date is in the future
      // buf:lint:ignore ENUM_VALUE_PREFIX
      NON_LIVE_TO_TEST = 3;

      // When campaign enters test mode from Eligible State if start date is in the past
      // buf:lint:ignore ENUM_VALUE_PREFIX
      LIVE_TO_TEST = 4;

      // When campaign changes state triggered by the Campaign Moderation tool
      // buf:lint:ignore ENUM_VALUE_PREFIX
      ADMIN_MODERATION = 5;
    }

    // reason for the state change
    StateChangeReason reason_for_state_change = 1;
    // specific details about the state change
    google.protobuf.StringValue state_change_details = 2;
  }
  // when the state of the entity is changed, this field will be populated
  StateChangeInfo state_change_info = 2;
}

/**
 * Placeholder configuration for strings enabling translation and dynamic content
 */
message StringPlaceholder {
  // placeholder type
  PlaceholderType type = 1;

  // enum of placeholder types
  enum PlaceholderType {
    // UNSPECIFIED placeholder type
    UNSPECIFIED = 0;

    // placeholder type for int
    INT = 1;

    // placeholder type for monetary fields
    MONETARY_FIELDS = 2;

    // placeholder type for long
    LONG = 3;

    // placeholder type for string
    STRING = 4;
  }

  // placeholder value: need to have 1:1 mapping with the PlaceholderType
  oneof value {
    // int value
    google.protobuf.Int32Value int = 2;
    // money value
    money.MonetaryFields monetary_fields = 3;
    // long value
    google.protobuf.Int64Value long = 4;
    // string value
    google.protobuf.StringValue string = 5;
  }
}
