syntax = "proto3";

package marketing_api_service.v1;

import "doordash.api/annotations.proto";
import "doordash.api/field_validate.proto";
import "google/api/annotations.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "marketing_api_service/cpg_onboarding_request.proto";
import "marketing_api_service/netsuite_customer.proto";
import "promotion/campaign.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.marketing_api_service";

/*
   marketing-api-service
*/
service MarketingApiService {
  option (doordash.api.service) = {
    name: "marketing-api-service"
    url: "marketing-api-service-web.service.prod.ddsd"
    port: 50051
    name_spaces: ["ads"]
    owner: {
      name: "marketing-api-service"
      id: "marketing-api-service-adxp-brandse"
      slack_channel: "#ads-demand-eng"
      email_alias: "ads-demand-eng@doordash.com"
    }
    target_products: [
      AX_PORTAL,
      ADMIN_PORTAL,
      INTERNAL,
      AX
    ]
  };

  // Get campaign by id
  rpc GetCampaignById(GetCampaignByIdRequest) returns (GetCampaignByIdResponse);

  // Get netsuite customer by id
  rpc GetNetsuiteCustomerById(GetNetsuiteCustomerByIdRequest) returns (GetNetsuiteCustomerByIdResponse) {
    option (google.api.http) = {
      // {HttpMethod}: "{pathPattern}"
      get: "/ads/v1/netsuite_customers/{netsuite_customer_id}"
    };

    option (doordash.api.endpoint) = {
      tier: T2
      lifecycle: TEST
      authorization: [DD_EMPLOYEE]
      target_products: [
        AX_PORTAL,
        ADMIN_PORTAL,
        INTERNAL,
        AX
      ]
    };
  }

  // Update onboarding request status
  rpc UpdateCpgOnboardingRequestStatus(UpdateCpgOnboardingRequestStatusRequest) returns (UpdateCpgOnboardingRequestStatusResponse) {
    option (google.api.http) = {
      put: "/admin_portal/ads/v1/onboardingRequest/status"
      body: "*"
    };

    option (doordash.api.endpoint) = {
      tier: T2
      lifecycle: TEST // We can change this to PROD once live for SLOs
      authorization: [DD_USER]
      role_based_authorization: {
        mode: ALL,
        roles: [
          "security-raven-managed-authorization",
          "perm_mhub_advertiser_edit",
          "perm_mhub_advertiser_view"
        ]
      }
      target_products: [
        ADMIN_PORTAL,
        INTERNAL
      ]
    };

    option (doordash.api.forward_headers) = {
      forward: [
        {field: "DD-User-Info"}]
    };
  }
}

// Request to get campaign by id
message GetCampaignByIdRequest {
  // The id for campaign
  google.protobuf.StringValue campaign_id = 1;
}

// Request to get netsuite customer by id
message GetNetsuiteCustomerByIdRequest {
  // The id for netsuite customer
  google.protobuf.StringValue netsuite_customer_id = 1;
}

// Request to update onboarding request status
message UpdateCpgOnboardingRequestStatusRequest {
  // The onboarding request status update request
  marketing_api_service.v1.CpgOnboardingRequestStatus onboarding_request_status = 1;
}

// Response to get campaign by id
message GetCampaignByIdResponse {
  // The campaign response
  promotion_service.Campaign campaign = 1;
}

// Response to get netsuite customer by id
message GetNetsuiteCustomerByIdResponse {
  // The netsuite customer response
  marketing_api_service.v1.NetsuiteCustomer netsuite_customer = 1;
}

// Response to updating onboarding request status
message UpdateCpgOnboardingRequestStatusResponse {
  // The onboarding request status update response
  marketing_api_service.v1.CpgOnboardingRequestStatus onboarding_request_status = 1;
}
