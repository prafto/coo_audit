syntax = "proto3";
package url_shortener;

import "common/service_client_config.proto";
import "google/protobuf/wrappers.proto";

option java_multiple_files = true;
option java_generic_services = true;
option java_package = "com.doordash.rpc.url_shortener";

enum URLType {
    OTHER = 0;
    CONSUMER_GIFT = 1;
    CONSUMER_RATING = 2;
    CONSUMER_REFERRAL = 3;
    DASHER_REFERRAL = 4;
    DASHER_APPLICANT = 5;
    DASHER_APP_HOME = 6;
    DASHER_APP_PROMOS = 7;
    DASHER_DROPOFF_PHOTOS = 8;
    GROUP_CART = 9;
    INTERNAL_TOOL = 10;
    MERCHANT_PORTAL = 11;
    PUBLIC_TRACKING_LINK = 12;
    DASHER_IMAGE = 13;
    DRIVE_INVOICE_REPORT = 14;
    ORDER_TRACKER = 15;
    // Redirects to consumer app
    CONSUMER_APP = 16;
    VOICE_PAYMENT_LINK = 17;
    DOORDASH_FOR_WORK = 18;
}

enum TTLType {
  NONE = 0;
  DAYS = 1;
  SECONDS = 2;
}

service URLShortenService {
    rpc GetOrCreateURLCode(GetOrCreateURLCodeRequest) returns (GetOrCreateURLCodeResponse) {
        option (service_client.client_method_config).response_attempt_timeout_millis = 1000;
        option (service_client.client_method_config).retry_config.max_attempts = 3;
    }
    rpc GetOriginalURL(GetOriginalURLRequest) returns (GetOriginalURLResponse) {
        option (service_client.client_method_config).response_attempt_timeout_millis = 1000;
        option (service_client.client_method_config).retry_config.max_attempts = 3;
    }
    rpc GetReadiness (GetReadinessRequest) returns (GetReadinessResponse);
}

message GetOrCreateURLCodeRequest {
  // The original url needs shortened url_code
  string original_url = 1;
  
  // url_type: the type of url e.g. CONSUMER_REFERRAL
  URLType url_type = 2;
  
  // specify ttl type, none means no-expiration
  TTLType ttl_type = 3;
  
  // optional ttl value, if ttl type is None then omit this value, otherwise it means ttl seconds/days based on ttl_type
  google.protobuf.Int32Value ttl = 4;
  
}

message GetOrCreateURLCodeResponse {
  // Return shortened url_code
  string url_code = 1;
}

message GetOriginalURLRequest {
  // shortened url code 
  string url_code = 1;
}

message GetOriginalURLResponse {
  // Return the origin url
  string original_url = 1;
}

message GetReadinessRequest {
}

message GetReadinessResponse {
  // ready == true means it is ready to take traffic, this is used internally for k8s readiness probe
  bool ready = 1;
}

message SegmentUrlClickMessage {
  // shortened url code
  string url_code = 1;

  // original url
  string expanded_url = 2;

  // url type string
  string url_type = 3;
}
