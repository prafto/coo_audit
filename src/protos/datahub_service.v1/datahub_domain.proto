syntax = "proto3";

package datahub_service.v1;

import "google/protobuf/any.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.datahub.service.v1";

// Indicate whether the request has been successfully completed
enum DomainSubDomainResponseCode {
  // Unspecified
  DOMAIN_SUB_DOMAIN_RESPONSE_CODE_UNSPECIFIED = 0;
  // Request is successful
  DOMAIN_SUB_DOMAIN_RESPONSE_CODE_SUCCESS = 1;
  // Request fails
  DOMAIN_SUB_DOMAIN_RESPONSE_CODE_ERROR = 2;
}

// get dataset by name request
message GetDomainsRequest {
  // domain request input
  DomainRequestInput input = 1;
}

// domain request input
message DomainRequestInput {
  // start
  int32 start = 1;
  // count
  int32 count = 2;
}

// get dataset by name response
message GetDomainsResponse {
  // Nested message that includes the data key
  ListDomains data = 1;
  // Response code
  DomainSubDomainResponseCode response_code = 2;
  // misc message for error handling
  google.protobuf.StringValue error_message = 3;
}

// Top-level structure wrapping the entire response
message ListDomains {
  // Contains the list of domains with pagination details
  DomainList list_domains = 1;
}

// Handles pagination and list of domains
message DomainList {
  // Index of the first domain in this page
  int32 start = 1;
  // Number of domains returned in this page
  int32 count = 2;
  // Total number of domains available across all pages
  int32 total = 3;
  // Array of Domain objects
  repeated DomainLite domains = 4;
}

// Definition of a single domain
message DomainLite {
  // Unique Resource Name for the domain
  string urn = 1;
  // Properties of the domain such as name and description
  DomainPropertiesLite properties = 2;
  // Data about entities under this domain
  DomainEntityData entities = 3;
}

// Properties of a domain
message DomainPropertiesLite {
  // Name of the domain
  string name = 1;
  // Description of what the domain entails
  string description = 2;
}

// Entity count within a domain
message DomainEntityData {
  // Total number of entities in this domain
  int32 total = 1;
}

// top level structure for the entire api request
message GetSubDomainByDomainRequest {
  // domain name in caps
  SubDomainByDomainInput input = 2;
  reserved 1;
  reserved "domain_name";
}

// Detailed structure of the search input.
message SubDomainByDomainInput {
  // List of types to be included in the search
  repeated string types = 1;
  // Search query text
  string query = 2;
  // Pagination start
  int32 start = 3;
  // Number of items to return
  int32 count = 4;
  // OR-combined filters
  repeated DomainSubDomainOrFilter or_filters = 5;
  // Additional flags for the search
  DomainSubDomainSearchFlags search_flags = 6;
}

// Represents an OR-filter which consists of multiple AND-filters.
message DomainSubDomainOrFilter {
  // List of AND conditions within this OR-filter
  repeated DomainSubDomainAndFilter and = 1;
}

// Represents an AND-filter condition.
message DomainSubDomainAndFilter {
  // Field to be filtered
  string field = 1;
  // Values for the field to match
  repeated string values = 2;
}

// Flags used to modify the search behavior.
message DomainSubDomainSearchFlags {
  // Whether to skip the cache
  bool skip_cache = 1;
}

// Top-level structure for the entire API response
message GetSubDomainByDomainResponse {
  // Nested message that includes the data key, encapsulating search response
  ListSubDomains sub_domain_data = 4;
  // Response code
  DomainSubDomainResponseCode response_code = 2;
  // misc message for error handling
  google.protobuf.StringValue error_message = 3;
  reserved 1;
  reserved "data";
}

// top level structure for sub domains
message ListSubDomains {
  // contains the list of subdomains
  SubDomainSearchList search_across_entities = 1;
}

// Contains the result of a search across subdomains
message SubDomainSearchList {
  // Index of the first subdomain in the search result
  int32 start = 1;
  // Number of subdomains returned in this search
  int32 count = 2;
  // Total number of subdomains that match the search criteria
  int32 total = 3;
  // Array of SubDomainSearchResult objects
  repeated SubDomainSearchResult search_results = 4;
}

// Represents a single search result for a subdomain
message SubDomainSearchResult {
  // The subdomain that matches the search
  SubDomainEntity entity = 1;
  // Fields that matched the search criteria
  repeated MatchedField matched_fields = 2;
  // Insights or additional information derived from the search
  repeated string insights = 3;
}

// Definition of an entity (subdomain)
message SubDomainEntity {
  // Unique Resource Name for the subdomain
  string urn = 1;
  // Type of the subdomain, e.g., DATA_PRODUCT
  string type = 2;
  // Properties specific to the subdomain
  SubDomainEntityProperties properties = 3;
  // Contains count of nested entities or related items
  SubDomainEntityData entities = 4;
}

// Properties specific to a subdomain
message SubDomainEntityProperties {
  // Name of the subdomain
  string name = 1;
}

// Entity count related to the main subdomain
message SubDomainEntityData {
  // Total number of nested or related entities
  int32 total = 1;
}

// Represents fields that matched during the search
message MatchedField {
  // Name of the field that matched
  string name = 1;
  // Value of the matched field, can be empty if not applicable
  string value = 2;
}

// domain service for datahub
service DataHubDomainService {
  // domains
  rpc GetDomains(GetDomainsRequest) returns (GetDomainsResponse);
  // sub domains by domain
  rpc GetSubDomainByDomain(GetSubDomainByDomainRequest) returns (GetSubDomainByDomainResponse);
}
