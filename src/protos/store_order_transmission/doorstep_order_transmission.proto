syntax = "proto3";

package doorstep_order_transmission;
option java_package = "com.doordash.service.ordertransmission";
option java_outer_classname = "OrderTransmissionProtos";

service DoorstepOrderTransmission {
    rpc TransmitOrder(TransmitOrderRequest) returns (SimpleOrderTransmissionResponse);

    // is the Store for a StoreOrderCart currently open?
    rpc CheckOrderStoreOpen(CheckOrderStoreOpenRequest) returns (CheckOrderStoreOpenResponse);

    rpc ScheduleRobocallForOrder(ScheduleRobocallRequest) returns (SimpleOrderTransmissionResponse);

    rpc SendSecondStoreConfirmation(TransmitOrderRequest) returns (SimpleOrderTransmissionResponse);
}

message TransmitOrderRequest {
    int64 store_order_cart_id = 1;
    string order_protocol = 2;
    string confirm_protocol = 3;
}


message ScheduleRobocallRequest {
    int64 store_order_cart_id = 1;
    bool long_delay = 2;
    bool reconfirm = 3;
}

message SimpleOrderTransmissionResponse {
    bool success = 1;
}

message CheckOrderStoreOpenRequest {
    int64 store_order_cart_id = 1;
    int32 store_id = 2;    // optional
}

message CheckOrderStoreOpenResponse {
    bool store_open = 1;
}
