syntax = "proto3";

// buf:lint:ignore DIRECTORY_SAME_PACKAGE
package task_service.v1;

import "google/protobuf/field_mask.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.task_service";

// Service for task fulfillment
service TaskStateChangeService {
  rpc GetTaskStateChangeEventsByTaskGroupId(GetTaskStateChangeEventsByTaskGroupIdRequest) returns (GetTaskStateChangeEventsByTaskGroupIdResponse);
  rpc UpdateTaskStateChangeEvents(UpdateTaskStateChangeEventsRequest) returns (UpdateTaskGroupEventResponse);
}

message GetTaskStateChangeEventsByTaskGroupIdRequest {
  google.protobuf.StringValue task_group_id = 1;
}

message GetTaskStateChangeEventsByTaskGroupIdResponse {
  repeated StateChangeEvent state_change_events = 1;
}

message UpdateTaskStateChangeEventRequest {
  // define a map that associates task_group_id with StateChangeEvent
  map<string, StateChangeEvent> state_change_events_map = 1 [deprecated = true];
  google.protobuf.FieldMask update_field_mask = 2;
  google.protobuf.StringValue context = 3;
  google.protobuf.StringValue creator = 4;
  StateChangeEvent state_change_event = 5;
}

message UpdateTaskStateChangeEventsRequest {
  repeated UpdateTaskStateChangeEventRequest batch_requests = 1;
}

message StateChangeEvent {
  google.protobuf.StringValue id = 1;
  google.protobuf.StringValue task_group_id = 2;
  google.protobuf.StringValue event_name = 3;
  google.protobuf.StringValue event_payload = 4;
  google.protobuf.Timestamp created_at = 5;
  google.protobuf.StringValue event_type = 6;
}

message AssignmentProposedEvent {
  option deprecated = true;
  google.protobuf.StringValue assignment_id = 1;
  google.protobuf.Timestamp assignment_proposed_at = 2;
}

message AssignmentReadyEvent {
  option deprecated = true;
  google.protobuf.StringValue assignment_id = 1;
  google.protobuf.Timestamp assignment_ready_at = 2;
}

message ConfirmAssignmentEvent {
  option deprecated = true;
  google.protobuf.StringValue assignment_id = 1;
  google.protobuf.Timestamp confirmed_at = 2;
}

message UnassignEvent {
  option deprecated = true;
  google.protobuf.StringValue assignment_id = 1;
  google.protobuf.Timestamp unassigned_at = 2;
}

message CancelAssignmentEvent {
  option deprecated = true;
  google.protobuf.StringValue assignment_id = 1;
  google.protobuf.Timestamp cancelled_at = 2;
}

message TaskCompleteEvent {
  option deprecated = true;
  google.protobuf.StringValue task_id = 1;
  string task_type = 2;
  google.protobuf.Timestamp completed_at = 3;
}

message TaskGroupEvent {
  option deprecated = true;
  google.protobuf.StringValue task_group_id = 1;
  google.protobuf.Timestamp timestamp = 2;
  string message_id = 3;
  google.protobuf.Int64Value shift_id = 4;
  google.protobuf.Int64Value dasher_id = 11;
  // Kafka events
  oneof event {
    AssignmentProposedEvent assignment_proposed = 5;
    AssignmentReadyEvent assignment_ready = 6;
    ConfirmAssignmentEvent confirm_assignment = 7;
    UnassignEvent unassign = 8;
    CancelAssignmentEvent cancel_assignment = 9;
    TaskCompleteEvent task_complete = 10;
  }
}

message UpdateTaskGroupEventResponse {
  oneof result {
    google.protobuf.Timestamp updated_at = 1;
    ErrorResponse error = 2;
  }
}

message ErrorResponse {
  enum ErrorCode {
    // base error code, unmapped
    ERROR_CODE_UNSPECIFIED = 0;
    // entity not found
    ERROR_CODE_NOT_FOUND = 1;
    // failed validation
    ERROR_CODE_INVALID_REQUEST = 2;
  }

  // enum error encountered
  ErrorCode error_code = 1;
  // human readable message
  google.protobuf.StringValue error_details = 2;
}
