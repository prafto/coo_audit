syntax = "proto3";

// buf:lint:ignore DIRECTORY_SAME_PACKAGE
package task_service.v2;

import "common/service_client_config.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.task_service";

// CRUD endpoints for task config
service TaskConfigService {
  option (service_client.client_config).response_attempt_timeout_millis = 2000;

  // Endpoint to get a list of task configs based on filters
  rpc GetTaskConfigs(GetTaskConfigsRequest) returns (GetTaskConfigsResponse);
  // Endpoint to get a single task config by name and version
  rpc GetTaskConfig(GetTaskConfigRequest) returns (GetTaskConfigResponse);
  // Endpoint to create a task config
  rpc CreateTaskConfig(CreateTaskConfigRequest) returns (CreateTaskConfigResponse);
  // Endpoint to remove a task config by name and version
  rpc DeleteTaskConfig(DeleteTaskConfigRequest) returns (DeleteTaskConfigResponse);
}

// Request for GetTaskConfigs with flexible filtering options
message GetTaskConfigsRequest {
  // optional task name filter
  google.protobuf.StringValue task_name = 1;

  // optional version filter
  google.protobuf.Int32Value version = 2;

  // optional status filters
  repeated TaskConfigStatus statuses = 3;
}

// Response for GetTaskConfigs
message GetTaskConfigsResponse {
  // a list of task configs matching the filters
  repeated TaskConfig task_configs = 1;
}

// Request for GetTaskConfig for getting a specific task config by name and version
message GetTaskConfigRequest {
  // task name
  google.protobuf.StringValue task_name = 1;
  // version
  google.protobuf.Int32Value version = 2;
}

// Response for GetTaskConfig, containing the requested task config
message GetTaskConfigResponse {
  // The requested task config
  TaskConfig task_config = 1;
}

// Request for creating a task config
message CreateTaskConfigRequest {
  // The task config to create
  TaskConfig task_config = 1;
}

// Response for creating a task config
message CreateTaskConfigResponse {
  // The created task config
  TaskConfig task_config = 1;
}

// Request for deleting a task config
message DeleteTaskConfigRequest {
  // task name
  google.protobuf.StringValue task_name = 1;

  // version
  google.protobuf.Int32Value version = 2;
}

// Response for deleting a task config
message DeleteTaskConfigResponse {
  // The deleted task config
  TaskConfig task_config = 1;
}

// task config
message TaskConfig {
  // task name
  google.protobuf.StringValue task_name = 1;

  // task type
  TaskConfigType task_type = 2;

  // task data
  google.protobuf.StringValue task_data = 3;

  // task config version
  google.protobuf.Int32Value version = 4;

  // pay config
  TaskPayConfig pay = 5;

  // eta config
  TaskEtaConfig eta = 6;

  // mobile config
  TaskMobileConfig mobile = 7;

  // assignment config
  TaskAssignmentConfig assignment = 8;

  // config metadata
  TaskConfigMetadata metadata = 9;
}

// pay config
message TaskPayConfig {
  // pay targets
  repeated LitePayTarget pay_targets = 1;
}

// lite pay target
message LitePayTarget {
  // id
  google.protobuf.Int64Value id = 1;

  // sp id
  google.protobuf.Int64Value starting_point_id = 2;

  // tip additive time pay per minute
  repeated float tip_additive_time_pay_per_minute = 3;

  // effort pay per min
  repeated float effort_pay_per_min = 4;

  // store wait pay per min
  repeated float store_wait_pay_per_min = 5;

  // tip additive tiered distance pay per km
  google.protobuf.StringValue tip_additive_tiered_distance_pay_per_km = 6;

  // offer level min base pay
  google.protobuf.Int32Value offer_level_min_base_pay = 7;

  // dropoff time pay per min
  repeated float dropoff_time_pay_per_min = 8;
}

// task mobile config
message TaskMobileConfig {
  // instructions id
  google.protobuf.Int32Value instructions_id = 1;

  // survey id
  google.protobuf.Int32Value survey_id = 2;
}

// task assignment config
message TaskAssignmentConfig {
  // constraint
  TaskAssignmentConstraint constraint = 1;

  // step type
  google.protobuf.StringValue step_type = 2;
}

// task assignment constraint
message TaskAssignmentConstraint {
  // device type
  google.protobuf.StringValue device_type = 1;

  // minimum app version
  google.protobuf.StringValue minimum_app_version = 2;
}

// task eta config
message TaskEtaConfig {
  // model id
  google.protobuf.StringValue model_id = 1;

  // in task duration base seconds
  google.protobuf.Int32Value in_task_duration_base_seconds = 2;

  // in task duration dynamic seconds
  google.protobuf.Int32Value in_task_duration_dynamic_seconds = 3;

  // in task duration dynamic multiplier
  google.protobuf.StringValue in_task_duration_dynamic_multiplier = 4;
}

// task config metadata
message TaskConfigMetadata {
  // display name id
  google.protobuf.StringValue display_name_id = 1;

  // description
  google.protobuf.StringValue description = 2;

  // created at
  google.protobuf.Timestamp created_at = 3;

  // created by
  google.protobuf.StringValue created_by = 4;

  // updated at
  google.protobuf.Timestamp updated_at = 5;

  // updated by
  google.protobuf.StringValue updated_by = 6;

  // status
  TaskConfigStatus status = 7;
}

// task config status
enum TaskConfigStatus {
  // task config status
  TASK_CONFIG_STATUS_UNSPECIFIED = 0;

  // draft
  TASK_CONFIG_STATUS_DRAFT = 1;

  // in review
  TASK_CONFIG_STATUS_IN_REVIEW = 2;

  // active
  TASK_CONFIG_STATUS_ACTIVE = 3;

  // rejected
  TASK_CONFIG_STATUS_REJECTED = 4;

  // deprecated
  TASK_CONFIG_STATUS_DEPRECATED = 5;
}

// task config type
enum TaskConfigType {
  // task config type unspecified
  TASK_CONFIG_TYPE_UNSPECIFIED = 0;

  // survey
  TASK_CONFIG_TYPE_SURVEY = 1;

  // custom
  TASK_CONFIG_TYPE_CUSTOM = 2;
}
