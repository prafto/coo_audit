syntax = "proto3";

package doordash.retail.fulfillment.in_store_navigation_service.v1;

import "common/common.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.retail.fulfillment";

// In store navigation service
service InStoreNavigationService {
  // creates a list of Store Map with Item Sequencing async
  rpc CreateStoreMapItemSequencingAsync(CreateStoreMapItemSequencingAsyncRequest) returns (CreateStoreMapItemSequencingAsyncResponse);
  // build or retrieve the Store Map Item Sequencing
  rpc GetStoreMapItemSequencing(GetStoreMapItemSequencingRequest) returns (GetStoreMapItemSequencingResponse);
}

// Request to create the item sequencing and store map async
message CreateStoreMapItemSequencingAsyncRequest {
  reserved 2, 6;
  reserved "delivery_uuid", "developer_flags";
  // Service that is calling this end point
  string client_service = 1;
  // Store location id (external store id)
  google.protobuf.StringValue external_store_id = 3;
  // List of skus that needs to be sequenced
  repeated string merchant_supplied_ids = 4;
  // Provider name
  google.protobuf.StringValue provider_name = 5;
  // Caller Identifier metadata used to cache store map item sequence plan
  GetItemMapRequestIdentifier request_identifier = 7;
  // Developer flags that provide debugging, feature enablement
  InStoreNavigationDeveloperFlags in_store_nav_developer_flags = 8;
}

// Response for create the item sequencing and store map
message CreateStoreMapItemSequencingAsyncResponse {
  // acknowledges if the request was received
  bool request_received = 1;
  // Caller Identifier metadata used to cache store map item sequence plan
  GetItemMapRequestIdentifier request_identifier = 2;
}

// Request to get the item sequencing and store map
message GetStoreMapItemSequencingRequest {
  reserved 2, 5;
  reserved "delivery_uuid", "developer_flags";
  // Service that is calling this end point
  string client_service = 1;
  // Store location id (external store id)
  google.protobuf.StringValue external_store_id = 3;
  // Provider name.
  google.protobuf.StringValue provider_name = 4;
  // Caller Identifier metadata used to cache store map item sequence plan
  GetItemMapRequestIdentifier request_identifier = 6;
  // Developer flags that provide debugging, feature enablement
  InStoreNavigationDeveloperFlags in_store_nav_developer_flags = 7;
}

// Response of getting the item sequencing and store map
message GetStoreMapItemSequencingResponse {
  reserved 1, 4;
  reserved "delivery_uuid", "map_url";
  // Sequence to item location details
  map<string, ItemLocationDetails> item_location_metadata = 2;
  // List of coordinates that provides the optimal pick path
  repeated LocationCoordinates optimal_path = 3;
  // Caller Identifier metadata used to cache store map item sequence plan
  GetItemMapRequestIdentifier request_identifier = 5;
  // In-Store map related details
  InStoreMapDetails in_store_map_details = 6;
}

// Defines the In-Store Map Details
message InStoreMapDetails {
  // Url of the in-store map image
  google.protobuf.StringValue map_image_url = 1;
  // Store Map image format
  InStoreMapImageFormat in_store_map_image_format = 2;
  // Dimensions of the original image
  ImageDimensions original_image_dimensions = 3;
  // Position of the origin (0,0) coordinate
  OriginPosition origin_position = 4;
}

// Origin position
enum OriginPosition {
  // UNSPECIFIED
  ORIGIN_POSITION_UNSPECIFIED = 0;
  // top-left
  ORIGIN_POSITION_TOP_LEFT = 1;
  // bottom-left
  ORIGIN_POSITION_BOTTOM_LEFT = 2;
  // top-right
  ORIGIN_POSITION_TOP_RIGHT = 3;
  // bottom-right
  ORIGIN_POSITION_BOTTOM_RIGHT = 4;
  // center
  ORIGIN_POSITION_CENTER = 5;
}

// Dimensions of the image
message ImageDimensions {
  // height of the image
  google.protobuf.StringValue height = 1;
  // width of the image
  google.protobuf.StringValue width = 2;
}

// Format of the store map Image URL
enum InStoreMapImageFormat {
  // UNSPECIFIED
  IN_STORE_MAP_IMAGE_FORMAT_UNSPECIFIED = 0;
  // svg format
  IN_STORE_MAP_IMAGE_FORMAT_SVG = 1;
  // png format
  IN_STORE_MAP_IMAGE_FORMAT_PNG = 2;
}

// Request Identifier to cache store map and item sequence
message GetItemMapRequestIdentifier {
  // We will cache with key: {identifier}
  oneof identifier {
    // Delivery UUID
    string delivery_uuid = 1;
  }
}

// Item with its coordinates
message ItemLocationDetails {
  // MSID of the item
  string merchant_supplied_id = 1;
  // Coordinates of the item on map
  LocationCoordinates location_coordinates = 2;
  // Is the order of the item returned successfully from Mx
  google.protobuf.BoolValue is_success = 3;
  // Is the item location approximate
  google.protobuf.BoolValue is_approximate = 4;
}

// Coordinates of the item on the map
message LocationCoordinates {
  // X coordinate
  google.protobuf.StringValue x_coordinate = 1;
  // Y coordinate
  google.protobuf.StringValue y_coordinate = 2;
}

// InStore Navigation Developer Flags
message InStoreNavigationDeveloperFlags {
  // Provide a verbose response to justify return value (more logging)
  google.protobuf.BoolValue explain = 1;
  // Skip the cache
  google.protobuf.BoolValue skip_cache = 2;
  // Skip the map fetch
  google.protobuf.BoolValue skip_map = 3;
}
