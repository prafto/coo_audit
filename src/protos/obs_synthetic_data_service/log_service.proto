syntax = "proto3";

package obs_synthetic_data_service.v1;

import "common/service_client_config.proto";

option go_package = "github.com/doordash/services-protobuf/generated/obs_synthetic_data_service";
option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.observability.syntheticdata";

//LogSerivce for ObsSyntheticDataService
service LogService {
  // Hermes client config. The options not listed here use Hermes default.
  // The following applies for all RPCs in the service, if not overridden on individual RPCs.

  // Timeout after 700 milliseconds.
  option (service_client.client_config).response_attempt_timeout_millis = 700;
  // Make a total 4 attempts (initial + three retries).
  option (service_client.client_config).retry_config.max_attempts = 4;
  // Add RESOURCE_EXHAUSTED to the set of retriable codes.
  option (service_client.client_config).retry_config.do_retry_grpc_code = 8;
  // Break the circuit if the error rate exceeds 80%.
  option (service_client.client_config).circuit_breaker_config.failure_rate_threshold = 0.8;
  // Ignore NOT_FOUND from circuit breaker error rate calculation.
  option (service_client.client_config).circuit_breaker_config.do_ignore_grpc_code = 5;

  // Get current synthetic log gen config
  rpc GetConfiguration(GetConfigurationRequest) returns (GetConfigurationResponse);

  //set and update synthetic log gen config and provide config
  rpc SetConfiguration(SetConfigurationRequest) returns (SetConfigurationResponse);
}

// Request for GetConfiguration
message GetConfigurationRequest {}

// Response for GetConfiguration
message GetConfigurationResponse {
  //size of log message that will be generate per interval in bytes
  int64 log_size_bytes = 1;
  //rate of log generation in ms
  int64 log_gen_interval_ms = 2;
  //num logs generated per interval
  int64 num_logs_gen = 3;
}

// Request for SetConfiguration
message SetConfigurationRequest {
  //size of log message that will be generate per interval in bytes
  int64 log_size_bytes = 1;
  //rate of log generation in ms
  int64 log_gen_interval_ms = 2;
  //num logs generated per interval
  int64 num_logs_gen = 3;
  //fields to be added to generated log line
  map<string, string> fields = 4;
}

// Response for SetConfiguration
message SetConfigurationResponse {
  //response field indicating success or failure
  bool success = 1;
}
