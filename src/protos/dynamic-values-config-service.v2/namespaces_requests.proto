syntax = "proto3";
package doordash.dvcs.v2;

import "dynamic-values-config-service.v2/common.proto";
import "dynamic-values-config-service.v2/namespaces_models.proto";
import "google/protobuf/wrappers.proto";

option java_multiple_files = true;
option java_package = "com.doordash.dvcs.v2";

///////////////////////////////////////////////////////////
// Namespaces
///////////////////////////////////////////////////////////

// Request proto for `GetNamespace`
message GetNamespaceRequest {
  // Namespace ID
  string id = 1;

  // Identifier type
  Identifier identifier = 2;
}

// Response proto for `GetNamespace`
message GetNamespaceResponse {
  // Namespace details
  Namespace namespace = 1;
}

// Request proto for `ListNamespaces`
message ListNamespacesRequest {
  // Filter field
  enum Field {
    // Field is unspecified
    FIELD_UNSPECIFIED = 0;

    // Filter by ID
    FIELD_ID = 1;

    // Filter by name
    FIELD_NAME = 2;

    // Filter by software_asset_id
    FIELD_SOFTWARE_ASSET_ID = 3;

    // Filter by software_asset_name
    FIELD_SOFTWARE_ASSET_NAME = 4;
  }

  // Filter values
  message Filter {
    // Filter field
    Field field = 1;

    // Filter value
    string value = 2;
  }

  // List of filters
  repeated Filter filters = 1;

  // Number of items to return per-page
  google.protobuf.Int32Value page_size = 2;

  // Continue from this page
  google.protobuf.StringValue page_token = 3;
}

// Response proto for `ListNamespaces`
message ListNamespacesResponse {
  // List of namespaces
  repeated Namespace namespaces = 1;

  // Previous page of results
  google.protobuf.StringValue prev_page_token = 2;

  // Next page of results
  google.protobuf.StringValue next_page_token = 3;
}

// Request proto for `CreateNamespace`
message CreateNamespaceRequest {
  // Namespace details
  Namespace namespace = 1;
}

// Response proto for `CreateNamespace`
message CreateNamespaceResponse {
  // Namespace details
  Namespace namespace = 1;
}

// Request proto for `UpdateNamespace`
message UpdateNamespaceRequest {
  // Namespace details
  Namespace namespace = 1;
}

// Response proto for `UpdateNamespace`
message UpdateNamespaceResponse {
  // Namespace details
  Namespace namespace = 1;
}

// Request proto for `DeleteNamespace`
message DeleteNamespaceRequest {
  // Namespace ID
  string id = 1;
}

// Response proto for `DeleteNamespace`
message DeleteNamespaceResponse {
  // Namespace details
  Namespace namespace = 1;
}

///////////////////////////////////////////////////////////
// Namespace Members
///////////////////////////////////////////////////////////

// Request proto for `ListNamespaceMembers`
message ListNamespaceMembersRequest {
  // Filter field
  enum Field {
    // Field is unspecified
    FIELD_UNSPECIFIED = 0;

    // Filter by name
    FIELD_NAME = 1;
  }

  // Filter values
  message Filter {
    // Filter field
    Field field = 1;

    // Filter value
    string value = 2;
  }

  // Namespace ID
  string namespace_id = 1;

  // List of filters
  repeated Filter filters = 4;

  // Number of items to return per-page
  google.protobuf.Int32Value page_size = 2;

  // Continue from this page
  google.protobuf.StringValue page_token = 3;
}

// Response proto for `ListNamespaceMembers`
message ListNamespaceMembersResponse {
  // List of members
  repeated NamespaceMember members = 1;

  // Previous page of results
  google.protobuf.StringValue prev_page_token = 2;

  // Next page of results
  google.protobuf.StringValue next_page_token = 3;
}

// Request proto for `CreateNamespaceMember`
message CreateNamespaceMemberRequest {
  // Namespace ID
  string namespace_id = 1;

  // Member details
  NamespaceMember member = 2;
}

// Response proto for `CreateNamespaceMember`
message CreateNamespaceMemberResponse {
  // Member details
  NamespaceMember member = 1;
}

// Request proto for `UpdateNamespaceMember`
message UpdateNamespaceMemberRequest {
  // Member details
  NamespaceMember member = 1;
}

// Response proto for `UpdateNamespaceMember`
message UpdateNamespaceMemberResponse {
  // Member details
  NamespaceMember member = 1;
}

// Request proto for `DeleteNamespaceMember`
message DeleteNamespaceMemberRequest {
  // Member ID
  string id = 1;
}

// Response proto for `DeleteNamespaceMember`
message DeleteNamespaceMemberResponse {
  // Member details
  NamespaceMember member = 1;
}

///////////////////////////////////////////////////////////
// Namespace Properties
///////////////////////////////////////////////////////////

// Request proto for `ListNamespaceProperties`
message ListNamespacePropertiesRequest {
  // Filter field
  enum Field {
    // Field is unspecified
    FIELD_UNSPECIFIED = 0;

    // Filter by name
    FIELD_NAME = 1;
  }

  // Filter values
  message Filter {
    // Filter field
    Field field = 1;

    // Filter value
    string value = 2;
  }

  // Namespace ID
  string namespace_id = 1;

  // List of filters
  repeated Filter filters = 4;

  // Number of items to return per-page
  google.protobuf.Int32Value page_size = 2;

  // Continue from this page
  google.protobuf.StringValue page_token = 3;
}

// Response proto for `ListNamespaceProperties`
message ListNamespacePropertiesResponse {
  // List of properties
  repeated NamespaceProperty properties = 1;

  // Previous page of results
  google.protobuf.StringValue prev_page_token = 2;

  // Next page of results
  google.protobuf.StringValue next_page_token = 3;
}

// Request proto for `CreateNamespaceProperty`
message CreateNamespacePropertyRequest {
  // Namespace ID
  string namespace_id = 1;

  // Property details
  NamespaceProperty property = 2;
}

// Response proto for `CreateNamespaceProperty`
message CreateNamespacePropertyResponse {
  // Property details
  NamespaceProperty property = 1;
}

// Request proto for `UpdateNamespaceProperty`
message UpdateNamespacePropertyRequest {
  // Property details
  NamespaceProperty property = 1;
}

// Response proto for `UpdateNamespaceProperty`
message UpdateNamespacePropertyResponse {
  // Property details
  NamespaceProperty property = 1;
}

// Request proto for `DeleteNamespaceProperty`
message DeleteNamespacePropertyRequest {
  // Property ID
  string id = 1;
}

// Response proto for `DeleteNamespaceProperty`
message DeleteNamespacePropertyResponse {
  // Property details
  NamespaceProperty property = 1;
}
