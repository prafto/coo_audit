syntax = "proto3";
package doordash.dvcs.v2;

import "doordash.api/annotations.proto";
import "dynamic-values-config-service.v2/namespaces_requests.proto";
import "google/api/annotations.proto";

option java_multiple_files = true;
option java_outer_classname = "NamespaceConfigurationApi";
option java_package = "com.doordash.dvcs.v2";

// Service used to manage namespace configuration
service NamespaceConfigurationService {
  option (doordash.api.service) = {
    name: "dynamic-values-config-service-web"
    port: 50051
    name_spaces: ["decision-systems"]
    api_key_name: "DYNAMIC_VALUES_CONFIG_SERVICE_API_KEY"
    owner: {
      id: "dynamic-values-alerts"
      name: "app-decision-systems"
      slack_channel: "#team-decision-systems"
      email_alias: "team-decision-systems@doordash.com"
    }
    target_products: [INTERNAL]
  };
  // `GetNamespaces` returns a single namespace
  rpc GetNamespace(GetNamespaceRequest) returns (GetNamespaceResponse) {
    option (google.api.http) = {get: "/decision-systems/v1/dvcs/namespaces/{id}"};

    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: DEV
      authorization: [DD_EMPLOYEE]
      authentication_config: {enable_okta_verification: true}
    };
  }

  // `ListNamespaces` returns a list of namespaces
  rpc ListNamespaces(ListNamespacesRequest) returns (ListNamespacesResponse) {
    option (google.api.http) = {
      post: "/decision-systems/v1/dvcs/namespaces",
      body: "*"
    };

    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: DEV
      authorization: [DD_EMPLOYEE]
      authentication_config: {enable_okta_verification: true}
    };
  }

  // `CreateNamespace` creates a new namespace
  rpc CreateNamespace(CreateNamespaceRequest) returns (CreateNamespaceResponse) {
    option (google.api.http) = {
      post: "/decision-systems/v1/dvcs/namespaces/new",
      body: "*"
    };

    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: DEV
      authorization: [DD_EMPLOYEE]
      authentication_config: {enable_okta_verification: true}
    };
  }

  // `UpdateNamespace` updates an existing namespace
  rpc UpdateNamespace(UpdateNamespaceRequest) returns (UpdateNamespaceResponse) {
    option (google.api.http) = {
      post: "/decision-systems/v1/dvcs/namespaces/update",
      body: "*"
    };

    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: DEV
      authorization: [DD_EMPLOYEE]
      authentication_config: {enable_okta_verification: true}
    };
  }

  // `DeleteNamespace` deletes an existing namespace
  rpc DeleteNamespace(DeleteNamespaceRequest) returns (DeleteNamespaceResponse) {
    option (google.api.http) = {delete: "/decision-systems/v1/dvcs/namespaces/delete"};

    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: DEV
      authorization: [DD_EMPLOYEE]
      authentication_config: {enable_okta_verification: true}
    };
  }

  // `ListNamespaceMembers` returns a list of members
  rpc ListNamespaceMembers(ListNamespaceMembersRequest) returns (ListNamespaceMembersResponse) {
    option (google.api.http) = {get: "/decision-systems/v1/dvcs/namespaces/members"};

    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: DEV
      authorization: [DD_EMPLOYEE]
      authentication_config: {enable_okta_verification: true}
    };
  }

  // `CreateNamespaceMember` adds a member to a namespace
  rpc CreateNamespaceMember(CreateNamespaceMemberRequest) returns (CreateNamespaceMemberResponse) {
    option (google.api.http) = {
      post: "/decision-systems/v1/dvcs/namespaces/{namespace_id}/members",
      body: "*"
    };

    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: DEV
      authorization: [DD_EMPLOYEE]
      authentication_config: {enable_okta_verification: true}
    };
  }

  // `UpdateNamespaceMember` updates a member in a namespace
  rpc UpdateNamespaceMember(UpdateNamespaceMemberRequest) returns (UpdateNamespaceMemberResponse) {
    option (google.api.http) = {
      post: "/decision-systems/v1/dvcs/namespaces/members/update",
      body: "*"
    };

    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: DEV
      authorization: [DD_EMPLOYEE]
      authentication_config: {enable_okta_verification: true}
    };
  }

  // `DeleteNamespaceMember` deletes a member from a namespace
  rpc DeleteNamespaceMember(DeleteNamespaceMemberRequest) returns (DeleteNamespaceMemberResponse) {
    option (google.api.http) = {delete: "/decision-systems/v1/dvcs/namespaces/members/{id}"};

    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: DEV
      authorization: [DD_EMPLOYEE]
      authentication_config: {enable_okta_verification: true}
    };
  }

  // `ListNamespaceProperties` returns a list of properties
  rpc ListNamespaceProperties(ListNamespacePropertiesRequest) returns (ListNamespacePropertiesResponse) {
    option (google.api.http) = {get: "/decision-systems/v1/dvcs/namespaces/{namespace_id}/properties"};

    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: DEV
      authorization: [DD_EMPLOYEE]
      authentication_config: {enable_okta_verification: true}
    };
  }

  // `CreateNamespaceProperty` add a property to a namespace
  rpc CreateNamespaceProperty(CreateNamespacePropertyRequest) returns (CreateNamespacePropertyResponse) {
    option (google.api.http) = {
      post: "/decision-systems/v1/dvcs/namespaces/{namespace_id}/properties",
      body: "*"
    };

    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: DEV
      authorization: [DD_EMPLOYEE]
      authentication_config: {enable_okta_verification: true}
    };
  }
  // `UpdateNamespaceProperty` updates a property in a namespace
  rpc UpdateNamespaceProperty(UpdateNamespacePropertyRequest) returns (UpdateNamespacePropertyResponse) {
    option (google.api.http) = {
      post: "/decision-systems/v1/dvcs/namespaces/properties/update",
      body: "*"
    };

    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: DEV
      authorization: [DD_EMPLOYEE]
      authentication_config: {enable_okta_verification: true}
    };
  }

  // `DeleteNamespaceProperty` deletes a property from a namespace
  rpc DeleteNamespaceProperty(DeleteNamespacePropertyRequest) returns (DeleteNamespacePropertyResponse) {
    option (google.api.http) = {delete: "/decision-systems/v1/dvcs/namespaces/properties/{id}"};

    option (doordash.api.endpoint) = {
      tier: T1
      lifecycle: DEV
      authorization: [DD_EMPLOYEE]
      authentication_config: {enable_okta_verification: true}
    };
  }
}
