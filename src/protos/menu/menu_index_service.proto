syntax = "proto3";

package menuindexservice;

import "google/protobuf/wrappers.proto";
import "menu/menu.proto";

option go_package = "github.com/doordash/services-protobuf/generated/menu/menuindexservice/grpc";
option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.menuindexservice.grpc";

message DateTime {
  google.protobuf.StringValue date_time = 1;
}

message IndexCommonFields {
  google.protobuf.StringValue business_id = 1;
  google.protobuf.StringValue store_id = 2;
  google.protobuf.StringValue menu_id = 3;
  google.protobuf.StringValue external_id = 4;
  google.protobuf.StringValue title = 5;
  DateTime created_at = 6;
  DateTime updated_at = 7;
}

message MenuIndexEntity {
  google.protobuf.StringValue business_id = 1;
  google.protobuf.StringValue store_id = 2;
  google.protobuf.StringValue menu_id = 3;
  google.protobuf.StringValue title = 4;
  google.protobuf.StringValue subtitle = 5;
  google.protobuf.BoolValue catering = 6;
  google.protobuf.BoolValue business_enabled = 7;
  google.protobuf.BoolValue everything_bike_friendly = 8;
  google.protobuf.StringValue image_id = 9;
  google.protobuf.Int32Value menu_version = 10;
  google.protobuf.StringValue external_id = 11;
  google.protobuf.StringValue source_of_creation = 12;
  google.protobuf.StringValue created_at = 13;
  google.protobuf.StringValue updated_at = 14;
}

message CategoryIndexEntity {
  google.protobuf.StringValue business_id = 1;
  google.protobuf.StringValue store_id = 2;
  google.protobuf.StringValue menu_id = 3;
  google.protobuf.StringValue category_id = 4;
  google.protobuf.StringValue title = 5;
  google.protobuf.StringValue subtitle = 6;
  google.protobuf.BoolValue everything_bike_friendly = 7;
  google.protobuf.StringValue external_id = 8;
  google.protobuf.StringValue created_at = 9;
  google.protobuf.StringValue updated_at = 10;
}

message ItemIndexEntity {
  google.protobuf.StringValue business_id = 1;
  google.protobuf.StringValue store_id = 2;
  google.protobuf.StringValue menu_id = 3;
  google.protobuf.StringValue item_id = 4;
  google.protobuf.StringValue type = 5;
  google.protobuf.StringValue title = 6;
  google.protobuf.StringValue descriptoin = 7;
  google.protobuf.BoolValue alcohol = 8;
  google.protobuf.Int32Value min_age_requirement = 9;
  google.protobuf.StringValue image_url = 10;
  google.protobuf.StringValue image_id = 11;
  google.protobuf.StringValue external_id = 12;
  google.protobuf.StringValue vendor_sku = 13;
  google.protobuf.StringValue bike_friendly = 14;
  google.protobuf.BoolValue default = 15;
  repeated google.protobuf.StringValue tags = 16;
  google.protobuf.StringValue created_at = 17;
  google.protobuf.StringValue updated_at = 18;
}

message ExtraIndexEntity {
  google.protobuf.StringValue business_id = 1;
  google.protobuf.StringValue store_id = 2;
  google.protobuf.StringValue menu_id = 3;
  google.protobuf.StringValue extra_id = 4;
  google.protobuf.StringValue external_id = 5;
  google.protobuf.StringValue title = 6;
  google.protobuf.StringValue descriptoin = 7;
  google.protobuf.StringValue created_at = 8;
  google.protobuf.StringValue updated_at = 9;
}

// MenuIdentifierEntry is the struct of identifiers that can be used to query menu/catalog as primary key.
// Store_menu_id + item_id is the primary key to query menu db.
// Business_id + external_id is the primary key to query catalog.
message MenuIdentifierEntry {
  google.protobuf.StringValue item_id = 1;
  // Also known as vendor_id/merchant_supplied_id. This field is possible to be empty.
  google.protobuf.StringValue external_id = 2;
  // The following 2 fields is not mandatory but nice to have for debugging purpose.
  google.protobuf.StringValue store_id = 4;
  google.protobuf.StringValue menu_id = 5;
  // Doordash global product item identifier.
  google.protobuf.StringValue ddsic = 6;
}

service IndexService {
  rpc SearchEntity(ESSearchEntityRequest) returns (ESSearchEntityResponse);
  rpc SearchEntityV2(ESSearchEntityRequestV2) returns (ESSearchEntityResponseV2);
  rpc PartialSearchEntity(ESPartialSearchEntityRequest) returns (ESPartialSearchEntityResponse);
  rpc GetExternalIdMappings(GetExternalIdMappingsRequest) returns (GetExternalIdMappingsResponse);
  rpc SearchMenuIdentifiersByItemIds(SearchMenuIdentifiersByItemIdsRequest) returns (SearchMenuIdentifiersByItemIdsResponse);
  rpc SearchMenuIdentifiersByExternalIds(SearchMenuIdentifiersByExternalIdsRequest) returns (SearchMenuIdentifiersByExternalIdsResponse);
  rpc SearchMenuIdentifiersByDdsics(SearchMenuIdentifiersByDdsicsRequest) returns (SearchMenuIdentifiersByDdsicsResponse);

  // backfills MenuStructure & ItemLookup ES Indexes APIs
  rpc UpdateMenuStructureAndItemLookupIndexesForStores(UpdateMenuStructureAndItemLookupIndexesRequest) returns (UpdateMenuStructureAndItemLookupIndexesResponse);
  rpc StartMenuStructureItemLookupBackfillAcrossStoresWorkflow(MenuStructureItemLookupBackfillWorkflowRequest) returns (MenuStructureItemLookupBackfillWorkflowResponse);
  rpc StartMenuStructureItemLookupBackfillInTokenRangeWorkflow(MenuStructureItemLookupBackfillInTokenRangeRequest) returns (MenuStructureItemLookupBackfillInTokenRangeResponse);
}

message SearchEntityValue {
  menu.EntityType entity_type = 1;
  google.protobuf.StringValue entity_id = 2;
  google.protobuf.StringValue store_menu_id = 3;
  google.protobuf.StringValue external_id = 4;
}

enum SearchKeyType {
  ES_SKT_UNKNOWN = 0;
  // values should be string id
  ES_SKT_BUSINESS_ID = 1;
  ES_SKT_STORE_ID = 2;
  ES_SKT_MENU_ID = 3;
  ES_SKT_CATEGORY_ID = 4;
  ES_SKT_ITEM_ID = 5;
  ES_SKT_EXTRA_ID = 6;
  ES_SKT_EXTERNAL_ID = 7;

  // values should be string text
  ES_SKT_TITLE = 8;
  ES_SKT_SUBTITLE = 9;
  ES_SKT_DESCRIPTION = 10;
  ES_SKT_EVERYTHING_BIKE_FRIENDLY = 11;
  ES_SKT_IMAGE_ID = 12;
  ES_SKT_SOURCE_OF_CREATION = 13;
  ES_SKT_VENDOR_SKU = 14;
  ES_SKT_BIKE_FRIENDLY = 15;
  ES_SKT_TAG = 16;

  // values should be integers
  ES_SKT_MENU_VERSION = 17;
  ES_SKT_MIN_AGE_REQUIREMENT = 18;

  // values should be boolean type
  ES_SKT_CATERING = 19;
  ES_SKT_BUSINESS_ENABLED = 20;
  ES_SKT_ALCOHOL = 21;
  ES_SKT_DEFAULT = 22;
  ES_SKT_IS_ACTIVE = 23;
}

enum SearchQueryType {
  ES_SQT_MATCH = 0;
  ES_SQT_TERM = 1;
  ES_SQT_MATCH_PHRASE_PREFIX = 2;
  ES_SQT_MATCH_BOOL_PREFIX = 3;
  ES_SQT_FUZZY = 4;
}

message SearchKeyParams {
  SearchKeyType search_key_type = 1;
  oneof key_value {
    google.protobuf.StringValue string_search_value = 2;
    google.protobuf.BoolValue boolean_search_value = 3;
    google.protobuf.Int32Value integer_search_value = 4;
  }
  bool do_exact_match = 5;
  int32 doc_size = 6 [deprecated = true];
}

message PartialSearchKeyParams {
  SearchKeyType search_key_type = 1;
  oneof key_value {
    google.protobuf.StringValue string_search_value = 2;
    google.protobuf.BoolValue boolean_search_value = 3;
    google.protobuf.Int32Value integer_search_value = 4;
  }
  SearchQueryType search_query_type = 6;
}

message SearchIndex {
  menu.EntityType index_type = 1;
}

message EntitySearchParams {
  repeated SearchIndex search_indexes = 1;
  repeated SearchKeyParams search_key_params = 2;
  bool do_or_query = 3;
  int32 doc_size = 4; // desired doc size for early termination
}

/**
 * Request to search entities
 * store_menu_id: store menu id. If empty, search across store menus
 * entity_type: entity type enum. If empty, search across entity types
 * search_key: one of search keys
 */
message ESSearchEntityRequest {
  google.protobuf.StringValue store_menu_id = 1;
  EntitySearchParams entity_search_params = 2;
}

/**
 * Request to search entities
 * store_menu_id: store menu id. If empty, search across store menus
 * entity_search_params list: list of separate queries
 * outer_query: logical AND or OR
 * results_limit: the maximum number of hits to return (Details: https://docs.google.com/document/d/1687_YfCPCgn9opZx5x9XYK9IThUdl91yL0c8eZaO_p0)
 */
message ESSearchEntityRequestV2 {
  google.protobuf.StringValue store_menu_id = 1;
  repeated EntitySearchParams entity_search_params = 2;
  bool outer_query = 3;
  google.protobuf.Int32Value results_limit = 4;
}

/**
 * Return of searching entities
 * search_entity: list of search entities
 */
message ESSearchEntityResponseV2 {
  repeated SearchEntityValue search_entity_values = 1;
}

/**
 * Return of searching entities
 * search_entity: list of search entities
 */
message ESSearchEntityResponse {
  repeated SearchEntityValue search_entity_values = 1;
}

/**
 * The parameters needed for an advanced logical partial search.
 * partial_search_queries: A collection of queries to be used in the search.
 * use_or_logic: If true, the search will return results that match any of the queries.
 * If false, the search will only return results that match all of the queries.
 */
message AdvancedPartialSearchParams {
  repeated PartialSearchKeyParams partial_search_queries = 1;
  bool use_or_logic = 2;
}

/**
 * Request to partial search entities
 * index_type: defines the index we query, return nothing if empty
 * store_menu_id: store menu id, return nothing if empty
 * search_key_params list: list of separate queries
 * do_or_query: logical AND or OR
 * from: the number of hits to skip, defaulting to 0
 * size: the maximum number of hits to return
 * do_not_include_option: exclude option and search item only if true
 * do_not_include_item: exclude item and search for option only if true
 */
message ESPartialSearchEntityRequest {
  menu.EntityType entity_type = 1;
  google.protobuf.StringValue store_menu_id = 2;
  repeated PartialSearchKeyParams search_key_params = 3 [deprecated = true];
  bool do_or_query = 4;
  int32 from = 5;
  int32 size = 6;
  bool do_not_include_option = 7;
  bool do_not_include_item = 8;
  repeated AdvancedPartialSearchParams advanced_partial_search_params = 9;
}

/**
 * Return of searching entities
 * search_entity: list of search entities
 * total_count: total hits from the search query, it does not need to be the same as the number of entities returned
 * Ex: the request returns 10 entities as we set query size to be 5, but total_count could be > 10
 */
message ESPartialSearchEntityResponse {
  repeated SearchEntityValue search_entity_values = 1;
  int32 total_count = 2;
}

/**
 * Request to get external id mappings
 * store_menu_id: store menu id
 */
message GetExternalIdMappingsRequest {
  string store_menu_id = 1;
}

/**
 * Return of getting external id mappings
 * externalToInternalIdMap: a map of external id -> internal id
 */
message GetExternalIdMappingsResponse {
  map<string, string> external_to_internal_id_map = 1;
}

/**
 * Request message to look up menu identifier entries by item ids.
 */
message SearchMenuIdentifiersByItemIdsRequest {
  google.protobuf.StringValue store_id = 1;
  google.protobuf.StringValue menu_id = 2;
  // Ideally item id itself should be sufficient to identify an item since it's global unique.
  // Having specified store id and menu id in the request helps to filter items linked to unwanted stores/menus.
  repeated google.protobuf.StringValue item_ids = 3;
}

/**
 * Response message to look up menu identifier entries by item ids.
 */
message SearchMenuIdentifiersByItemIdsResponse {
  repeated MenuIdentifierEntry menu_identifier_entries = 1;
}

/**
 * Request message to look up menu identifier entries by external ids.
 */
message SearchMenuIdentifiersByExternalIdsRequest {
  google.protobuf.StringValue store_id = 1;
  google.protobuf.StringValue menu_id = 2;
  repeated google.protobuf.StringValue external_ids = 3;
}

/**
 * Response message to look up menu identifier entries by external ids.
 */
message SearchMenuIdentifiersByExternalIdsResponse {
  repeated MenuIdentifierEntry menu_identifier_entries = 1;
}

/**
 * Request message to look up menu identifier entries by ddsics.
 */
message SearchMenuIdentifiersByDdsicsRequest {
  google.protobuf.StringValue store_id = 1;
  google.protobuf.StringValue menu_id = 2;
  repeated google.protobuf.StringValue ddsics = 3;
  // this field indicates if we should fetch data from C* or ES. Default value is false (default to search from ES)
  bool should_query_db = 4;
}

/**
 * Response message to look up menu identifier entries by external ids.
 */
message SearchMenuIdentifiersByDdsicsResponse {
  repeated MenuIdentifierEntry menu_identifier_entries = 1;
}

/**
   Request message to update the MenuStructure, Item Lookup indexes for the stores_menu_ids passed
*/
message UpdateMenuStructureAndItemLookupIndexesRequest {
  repeated string store_menu_ids = 1;
}

/**
   Response message to UpdateMenuStructureAndItemLookupIndexesRequest
*/
message UpdateMenuStructureAndItemLookupIndexesResponse {
  string workflow_id = 1;
  string run_id = 2;
}

/**
   Request message to start the MenuStructure, Item Lookup indexes update via backfill workflow
*/
message MenuStructureItemLookupBackfillWorkflowRequest {}

/**
   Response message to MenuStructureItemLookupBackfillWorkflowResponse
*/
message MenuStructureItemLookupBackfillWorkflowResponse {
  string workflow_id = 1;
  string run_id = 2;
}

/**
   Request message to start the MenuStructure, Item Lookup indexes backfill workflow in a given token range
*/
message MenuStructureItemLookupBackfillInTokenRangeRequest {
  string start_token = 1;
  string end_token = 2;
}

/**
   Response message MenuStructureItemLookupBackfillInTokenRangeResponse
*/
message MenuStructureItemLookupBackfillInTokenRangeResponse {
  string workflow_id = 1;
  string run_id = 2;
}
