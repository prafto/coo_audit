syntax = "proto3";

package doordash.shadow_service.v1;

option go_package = "github.com/doordash/services-protobuf/generated/shadow_service";
option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.shadowservice";

// Protocols supported.
enum Protocol {
  // Unknown protocol.
  PROTOCOL_UNSPECIFIED = 0;

  // HTTP protocol.
  PROTOCOL_HTTP = 1;

  // gRPC protocol.
  PROTOCOL_GRPC = 2;
}

// HTTPData captures the HTTP request/response data.
message HTTPData {
  // Method name for the request.
  string method = 1;

  // Relative path of the request.
  string relative_path = 2;

  // List of request headers in the form key=[value].
  repeated string request_headers = 3;

  // List of query parameters in the form key=[value].
  repeated string query_parameters = 4;

  // Request payload.
  bytes request_payload = 5;

  // Response status code.
  int64 response_status = 6;

  // Response headers in the form key=[value].
  repeated string response_headers = 7;

  // Response payload.
  bytes response_payload = 8;
}

// GRPCData captures the gRPC request/response data.
message GRPCData {
  // Method name for the request.
  string method = 1;

  // List of request headers in the form key=[value].
  repeated string request_headers = 2;

  // Request payload.
  bytes request_payload = 3;

  // Response status code.
  int64 response_status = 4;

  // Response headers in the form key=[value].
  repeated string response_headers = 5;

  // Response payload.
  bytes response_payload = 6;
}

// RecorderData is a generic envelope for the recording data.
message RecorderData {
  // serviceName this request is for.
  string service_name = 1;

  // timestamp.
  int64 timestamp = 2;

  // Latency incurred in milliseconds.
  int64 latency_ms = 3;

  // Protocol being used.
  Protocol protocol = 4;

  // Data for HTTP.
  HTTPData http_data = 5;

  // Data for gRPC.
  GRPCData grpc_data = 6;
}
