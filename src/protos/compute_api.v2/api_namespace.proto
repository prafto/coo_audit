syntax = "proto3";

package compute_api.v2;

import "compute_api.v2/common.proto";
import "google/protobuf/wrappers.proto";

option go_package = "github.com/doordash/services-protobuf/generated/compute_api.v2";

// Namespace defines the schema for namespace
message Namespace {
  // Namespace name
  google.protobuf.StringValue name = 1;

  // Namespace type
  NamespaceType type = 2;

  // Namespace liveness status
  NamespaceStatus status = 3;

  // Namespace sync status
  NamespaceSyncStatus sync_status = 4;

  // Namespace permissions
  NamespacePermission permission = 5;

  // Namespace iam role binding
  NamespaceIamRoleBinding iam_role_binding = 6;

  // Namespace feature flags
  NamespaceFeatureFlag flag = 7;

  // Namespace health status
  NamespaceHealthStatus health_status = 8;
}

// NamespaceType defines the type for namespace
enum NamespaceType {
  // No type specified
  NAMESPACE_TYPE_UNSPECIFIED = 0;

  // General namespace
  NAMESPACE_TYPE_GENERAL = 1;

  // Sandbox namespace
  NAMESPACE_TYPE_SANDBOX = 2;
}

// NamespaceStatus defines the liveness status for namespace
enum NamespaceStatus {
  // No status specified
  NAMESPACE_STATUS_UNSPECIFIED = 0;

  // Namespace is active
  NAMESPACE_STATUS_ACTIVE = 1;

  // Namespace is inactive
  NAMESPACE_STATUS_INACTIVE = 2;
}

// NamespaceHealthStatus defines the health status for namespace
enum NamespaceHealthStatus {
  // No status specified
  NAMESPACE_HEALTH_STATUS_UNSPECIFIED = 0;

  // Namespace is healthy
  NAMESPACE_HEALTH_STATUS_HEALTHY = 1;

  // Namespace is degraded
  NAMESPACE_HEALTH_STATUS_DEGRADED = 2;

  // Namespace is missing
  NAMESPACE_HEALTH_STATUS_MISSING = 3;
}

// NamespaceSyncStatus defines the sync status for namespace
enum NamespaceSyncStatus {
  // No sync status specified
  NAMESPACE_SYNC_STATUS_UNSPECIFIED = 0;

  // Namespace is synced
  NAMESPACE_SYNC_STATUS_SYNCED = 1;

  // Namespace is syncing in progress
  NAMESPACE_SYNC_STATUS_IN_PROGRESS = 2;

  // Namespace failed to sync
  NAMESPACE_SYNC_STATUS_FAILED = 3;
}

// NamespacePermission defines the permission for namespace
message NamespacePermission {
  // Namespace reader groups
  repeated google.protobuf.StringValue readers = 1;

  // Namespace developer groups
  repeated google.protobuf.StringValue developers = 2;

  // Namespace operator groups
  repeated google.protobuf.StringValue operators = 3;

  // Namespace admin groups
  repeated google.protobuf.StringValue admins = 4;
}

// NamespaceIamRoleBinding defines the iam role binding for namespace
message NamespaceIamRoleBinding {
  // Namespace allowed iam roles
  repeated google.protobuf.StringValue roles = 1;
}

// NamespaceFeatureFlag defines the feature flag for namespace
message NamespaceFeatureFlag {
  // Envoy sidecar injector flag
  google.protobuf.BoolValue envoy_sidecar_injector_enabled = 1;

  // OBS env injector flag
  google.protobuf.BoolValue obs_env_injector_enabled = 2;
}

// NamespaceKubernetesState defines the kubernetes state for namespace in a cluster
message NamespaceKubernetesState {
  // Kubernetes cluster id
  google.protobuf.StringValue cluster_id = 1;

  // Link to the namespace resource in argocd
  google.protobuf.StringValue resource_link = 2;

  // Namespace health status
  NamespaceHealthStatus health_status = 3;

  // Namespace sync status
  NamespaceSyncStatus sync_status = 4;
}

// ListNamespacesRequest defines the request body for querying namespaces
message ListNamespacesRequest {
  // List namespaces by service DDRN
  google.protobuf.StringValue service_id = 1;

  // List namespaces by service name
  google.protobuf.StringValue service_name = 2;
}

// ListNamespacesResponse defines the response body for querying namespaces.
message ListNamespacesResponse {
  // List of namespaces
  repeated Namespace namespaces = 1;
}

// GetNamespaceStatusRequest defines the request body for getting namespace status.
message GetNamespaceStatusRequest {
  // Namespace name
  google.protobuf.StringValue namespace_name = 1;

  // Namespace type
  NamespaceType namespace_type = 2;
}

// GetNamespaceStatusResponse defines the response body for getting namespace status.
message GetNamespaceStatusResponse {
  // Source of namespace configs in github
  google.protobuf.StringValue github_source = 1;

  // Pending github PRs for updating the namespace
  repeated PullRequest pending_prs = 2;

  // Namespace kubernetes status overview
  google.protobuf.StringValue kubernetes_status = 3;

  // Namespace kubernetes states in each cluster
  repeated NamespaceKubernetesState kubernetes_states = 4;
}

// GetNamespacePendingChangesRequest defines the request body for getting namespace pending changes.
message GetNamespacePendingChangesRequest {
  // Namespace name
  google.protobuf.StringValue namespace_name = 1;

  // Namespace type
  NamespaceType namespace_type = 2;
}

// GetNamespacePendingChangesResponse defines the response body for getting namespace pending changes.
message GetNamespacePendingChangesResponse {
  // Source of namespace configs in github
  google.protobuf.StringValue github_source = 1;

  // Pending github PRs for updating the namespace
  repeated PullRequest pending_prs = 2;
}

// GetNamespaceConfigsRequest defines the request body for getting namespace configs.
message GetNamespaceConfigsRequest {
  // Namespace name
  google.protobuf.StringValue namespace_name = 1;

  // Namespace type
  NamespaceType namespace_type = 2;
}

// GetNamespaceConfigsResponse defines the response body for getting namespace configs.
message GetNamespaceConfigsResponse {
  // Namespace permissions
  NamespacePermission permission = 1;

  // Namespace iam role binding
  NamespaceIamRoleBinding iam_role_binding = 2;

  // Namespace feature flags
  NamespaceFeatureFlag flag = 3;
}

// UpdateNamespaceConfigsRequest defines the request body for updating namespace configs.
message UpdateNamespaceConfigsRequest {
  // Namespace name
  google.protobuf.StringValue namespace_name = 1;

  // Namespace type
  NamespaceType namespace_type = 2;

  // Update Requester
  User requester = 3;

  // Namespace permissions
  NamespacePermission permission = 4;

  // Namespace iam role binding
  NamespaceIamRoleBinding iam_role_binding = 5;

  // Namespace feature flags
  NamespaceFeatureFlag flag = 6;
}

// UpdateNamespaceConfigsResponse defines the response body for updating namespace configs.
message UpdateNamespaceConfigsResponse {
  // Update namespace response
  google.protobuf.StringValue response = 1;
}

// CreateNamespaceRequest defines the request body for creating namespace configs.
message CreateNamespaceRequest {
  // Namespace name
  google.protobuf.StringValue namespace_name = 1;

  // Namespace type
  NamespaceType namespace_type = 2;

  // Update Requester
  User requester = 3;

  // Namespace permissions
  NamespacePermission permission = 4;

  // Namespace iam role binding
  NamespaceIamRoleBinding iam_role_binding = 5;

  // Namespace feature flags
  NamespaceFeatureFlag flag = 6;
}

// CreateNamespaceResponse defines the response body for creating namespace configs.
message CreateNamespaceResponse {
  // Update namespace response
  google.protobuf.StringValue response = 1;

  // Generated PullRequest details
  PullRequest pr = 2;
}
