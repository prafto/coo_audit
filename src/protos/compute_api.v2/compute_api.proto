syntax = "proto3";

package compute_api.v2;

import "compute_api.v2/api_argocd.proto";
import "compute_api.v2/api_cluster.proto";
import "compute_api.v2/api_namespace.proto";
import "compute_api.v2/api_workload.proto";
import "compute_api.v2/config_api.proto";
import "compute_api.v2/create_argocd_app.proto";
import "compute_api.v2/health.proto";

option go_package = "github.com/doordash/services-protobuf/generated/compute_api.v2";

// ComputeApiService is an infrastructure service to manage compute APIs
service ComputeApiService {
  // Returns Health response for this service
  rpc Health(HealthRequest) returns (HealthResponse);

  // CreateArgocdApp accepts a new argocd app creation request
  rpc CreateArgocdApp(CreateArgocdAppRequest) returns (CreateArgocdAppResponse);

  // CreateArgocdService accepts a new argocd service creation request
  rpc CreateArgocdService(CreateArgocdServiceRequest) returns (CreateArgocdServiceResponse);

  // ListNamespaces returns a list of namespaces
  rpc ListNamespaces(ListNamespacesRequest) returns (ListNamespacesResponse);

  // GetNamespaceStatus returns the status of a namespace
  rpc GetNamespaceStatus(GetNamespaceStatusRequest) returns (GetNamespaceStatusResponse);

  // GetNamespacePendingChanges returns the pending changes of a namespace
  rpc GetNamespacePendingChanges(GetNamespacePendingChangesRequest) returns (GetNamespacePendingChangesResponse);

  // GetNamespaceConfigs returns the configs of a namespaces
  rpc GetNamespaceConfigs(GetNamespaceConfigsRequest) returns (GetNamespaceConfigsResponse);

  // UpdateNamespaceConfigs updates a namespace to the new configs
  rpc UpdateNamespaceConfigs(UpdateNamespaceConfigsRequest) returns (UpdateNamespaceConfigsResponse);

  // CreateNamespace create a new namespace
  rpc CreateNamespace(CreateNamespaceRequest) returns (CreateNamespaceResponse);

  // ListApplications returns a list of application details in a service
  rpc ListApplications(ListApplicationsRequest) returns (ListApplicationsResponse);

  // AddApplication creates a new service
  rpc AddApplication(AddApplicationRequest) returns (AddApplicationResponse);

  // DeleteApplication deletes an application
  rpc DeleteApplication(DeleteApplicationRequest) returns (DeleteApplicationResponse);

  // ListServiceConfiguration returns a list of service configurations
  rpc ListServiceConfiguration(ListServiceConfigurationRequest) returns (ListServiceConfigurationResponse);

  // GetCurrentApplicationConfiguration returns the current configuration of an application
  rpc GetCurrentApplicationConfiguration(GetCurrentApplicationConfigurationRequest) returns (GetCurrentApplicationConfigurationResponse);

  // PreviewServiceConfigurationChange returns the preview of the service configuration change
  rpc PreviewServiceConfigurationChange(PreviewServiceConfigurationChangeRequest) returns (PreviewServiceConfigurationChangeResponse);

  // UpdateServiceConfiguration updates the service configuration
  rpc UpdateServiceConfiguration(UpdateServiceConfigurationRequest) returns (UpdateServiceConfigurationResponse);

  // MergePullRequest with the given PR url
  rpc MergePullRequest(MergePullRequestRequest) returns (MergePullRequestResponse);

  // GetPullRequestStatus for a given PR Url
  rpc GetPullRequestStatus(GetPullRequestStatusRequest) returns (GetPullRequestStatusResponse);

  // ListWorkloads returns a list of workloads
  rpc ListWorkloads(ListWorkloadsRequest) returns (ListWorkloadsResponse);

  // GetWorkloadDetails returns the detail info of a workload
  rpc GetWorkloadDetails(GetWorkloadDetailsRequest) returns (GetWorkloadDetailsResponse);

  // GetWorkload returns the details of a workload
  rpc GetWorkload(GetWorkloadRequest) returns (GetWorkloadResponse);

  // DeleteWorkloads attempts to delete the provided workloads
  rpc DeleteWorkloads(DeleteWorkloadsRequest) returns (DeleteWorkloadsResponse);

  // UpdateWorkloadLabels updates the labels of the provided workloads
  rpc UpdateWorkloadLabels(UpdateWorkloadLabelsRequest) returns (UpdateWorkloadLabelsResponse);

  // ListClusters returns a list of clusters
  rpc ListClusters(ListClustersRequest) returns (ListClustersResponse);
}
