syntax = "proto3";

package compute_api.v2;

import "compute_api.v2/common.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/wrappers.proto";

option go_package = "github.com/doordash/services-protobuf/generated/compute_api.v2";

// Request for CreateArgocdApp
message CreateArgocdAppRequest {
  // the client ID of the caller
  google.protobuf.StringValue client_id = 1;

  // requester details
  User requester = 2;

  // reviewer details
  repeated User reviewers = 3;

  // additional parameters
  google.protobuf.Struct parameters = 4;

  // enable or disable dry-run
  google.protobuf.BoolValue dry_run = 5;

  // argocd app configs
  ArgocdAppConfigs app_configs = 6;

  // argocd app deploy configs
  ArgocdAppDeployConfigs deploy_configs = 7;
}

// Argocd app configs
message ArgocdAppConfigs {
  // app name
  google.protobuf.StringValue name = 1;

  // chart path
  google.protobuf.StringValue chart = 2;

  // argocd project
  google.protobuf.StringValue project = 3;

  // namespace
  google.protobuf.StringValue namespace = 4;

  // base chart default values
  google.protobuf.StringValue base_chart_default_values = 5;
}

// Argocd app deploy configs
message ArgocdAppDeployConfigs {
  // enable or disable auto sync
  google.protobuf.BoolValue auto_sync_enabled = 1;

  // enable or disable progressive sync
  google.protobuf.BoolValue progressive_sync_enabled = 2;

  // app deploy event notifiers
  repeated ArgocdAppDeployEventNotifier deploy_event_notifiers = 3;

  // cluster-based override values
  google.protobuf.Struct k8s_cluster_override_values = 4;
}

// Argocd app deploy event notifier
message ArgocdAppDeployEventNotifier {
  // deploy event type
  ArgocdAppDeployEventType event_type = 1;

  // slack channel names
  repeated google.protobuf.StringValue slack_channels = 2;
}

// Argocd app deploy event type
enum ArgocdAppDeployEventType {
  // type unspecified
  ARGOCD_APP_DEPLOY_EVENT_TYPE_UNSPECIFIED = 0;

  // when the app is synced and healthy
  ARGOCD_APP_DEPLOY_EVENT_TYPE_ON_DEPLOYED = 1;

  // when the app is degraded
  ARGOCD_APP_DEPLOY_EVENT_TYPE_ON_HEALTH_DEGRADED = 2;

  // when the app fails to sync
  ARGOCD_APP_DEPLOY_EVENT_TYPE_ON_SYNC_FAILED = 3;

  // when the app begins a sync
  ARGOCD_APP_DEPLOY_EVENT_TYPE_ON_SYNC_RUNNING = 4;

  // when the app sync has succeeded
  ARGOCD_APP_DEPLOY_EVENT_TYPE_ON_SYNC_SUCCEEDED = 5;
}

// Response for CreateArgocdApp
message CreateArgocdAppResponse {
  // request ID generated by the api server
  google.protobuf.StringValue request_id = 1;

  // argocd app name
  google.protobuf.StringValue name = 2;

  // github pull request
  PullRequest pr = 4;

  // argocd app status
  ResourceStatus status = 5;
}
