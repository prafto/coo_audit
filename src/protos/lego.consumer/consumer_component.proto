syntax = "proto3";

package lego.consumer.v1;

option java_package = "com.doordash.rpc.lego_consumer";
option java_multiple_files = true;

import "google/protobuf/wrappers.proto";
import "lego/action.proto";
import "lego.consumer.cx_financial/cx_financials_component.proto";

// [DEPRECATED] consumer components. Never used in production. Use lego.cx.v1.ConsumerComponent
message ConsumerComponentData {
    option deprecated = true;
    // consumer components
    oneof value {
        // carousel - DEPRECATED do not use
        Carousel carousel = 1;
        // carousel header default - DEPRECATED do not use
        CarouselHeaderDefault carousel_header_default = 2;
        // cx financials components - DEPRECATED - to be replaced with lego.cx.financial.v1
        lego.consumer.cx_financial.v1.CxFinancialsComponentData cx_financials_component_data = 3;
        // banner
        Banner banner = 4;
    }
}

// carousel component - DEPRECATED do not use. Never used in production.
message Carousel {
    option deprecated = true;
    // header lego id
    google.protobuf.StringValue header_id = 1;
    // children
    repeated google.protobuf.StringValue children = 2;
}

// carousel header component - DEPRECATED do not use. Never used in production
message CarouselHeaderDefault {
    option deprecated = true;
    reserved 1, 2;
    reserved "title", "subtitle";

    // [DELETED] header lego id
    // lego.v1.StyledText title = 1;
    // [DELETED] children
    // lego.v1.StyledText subtitle = 2;
}

// Banner component
message Banner {
    // Remote background image for a banner
    RemoteImage background_image = 1;

    // Click action for a banner
    lego.v1.Action click_action = 2;

    // Placeholder text for a banner
    google.protobuf.StringValue placeholder_text = 3;

    // Title text for a banner.
    google.protobuf.StringValue title_text = 4;

    // Styling for banner element.
    BannerElementStyling styling = 5;

    // Extra styling for banner element.
    map<string, BannerElementStyling> extra_styles = 6;

    // Styling for the banner element.
    message BannerElementStyling {
        reserved 1;

        // Banner font styling for a banner
        BannerFont font = 2;

        // Background color for a banner
        google.protobuf.StringValue background_color = 3;

        // Text color as a HEX string
        string color = 4;

        // Option to add underlined under the element
        bool is_underlined = 5;

        // Insets to be applied to the banner container
        CopyInsets copy_insets = 6;

        // Percentage-based text insets
        CopyInsets percentage_copy_insets = 7;

        // Alignment styling for a banner
        string alignment = 8;

        // Font for the banner
        message BannerFont {
            // Font size
            double size = 1;

            // Font family
            string family = 2;
        }

        // Insets for the banner.
        message CopyInsets {
            // Top
            double top = 1;

            // Left
            double left = 2;

            // Right
            double right = 3;

            // Bottom
            double bottom = 4;
        }
    }
}


// An image stored remotely as opposed to on the client
message RemoteImage {
    // URI of the image
    string url = 1;

    // A local placeholder whiel the remote image is loading
    LocalImage placeholder = 2;

    // Clipping style for the corners of the image
    ImageClipStyle clip_style = 3;
}

// An image stored locally on the client
message LocalImage {
    // Reference used to look up the local asset
    string reference = 1;

    // Domain for the reference (e.g. Prism icon)
    LocalImageDomain domain = 2;

    // Clipping style for the corners of the image
    ImageClipStyle clip_style = 3;

    // The doman for a local image (e.g. Prism icon).
    enum LocalImageDomain {
        // Unspecified.
        // buf:lint:ignore ENUM_VALUE_PREFIX
        LOCAL_IMAGE_DOMAIN_UNSPECIFIED = 0;

        // Domain for a Prism icon.
        // buf:lint:ignore ENUM_VALUE_PREFIX
        PRISM_ICON = 1;
    }
}

// Clipping style for the corners of an image.
enum ImageClipStyle {
    // Unspecified
    // buf:lint:ignore ENUM_VALUE_PREFIX
    STYLE_UNSPECIFIED = 0;

    // Rounded Small
    // buf:lint:ignore ENUM_VALUE_PREFIX
    STYLE_ROUNDED_SMALL = 1;

    // Rounded Medium
    // buf:lint:ignore ENUM_VALUE_PREFIX
    STYLE_ROUNDED_MEDIUM = 2;

    // Circle
    // buf:lint:ignore ENUM_VALUE_PREFIX
    STYLE_CIRCLE = 3;
}