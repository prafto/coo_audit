syntax = "proto3";

// buf:lint:ignore PACKAGE_VERSION_SUFFIX
// buf:lint:ignore DIRECTORY_SAME_PACKAGE
package com.doordash.rpc.voice.v1.api;

import "delivery_event/delivery_event.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option java_generic_services = true;
option java_multiple_files = true;
// It is suggested to start package name with com.doordash.voice.grpc
// The reason is that, a message name might be conflict with a class name defined in application code,
// without the name "rpc", it would be hard to pick the correct one from the hints provided by your IDE.
option java_package = "com.doordash.rpc.voice.v1.api";

// Service for Voice APIs
service VoiceApiService {
  // Get a Salesforce Case by Amazon Connect Contact ID
  // DEPRECATED
  rpc GetCaseByContactId(GetCaseByContactIdRequest) returns (GetCaseByContactIdResponse);
  // Get a Salesforce Case together with a consumer ID by Amazon Connect Contact ID
  rpc GetCaseAndConsumerByContactId(GetCaseAndConsumerByContactIdRequest) returns (GetCaseAndConsumerByContactIdResponse);
  // Get saved consumerId from customer phone number
  rpc GetConsumerDetailsByPhoneNumber(GetConsumerDetailsByPhoneNumberRequest) returns (GetConsumerDetailsByPhoneNumberResponse);
  // Creates a mapping of store_id, phone_number => consumer_id
  rpc CreateOrUpdateConsumerPhoneMapping(CreateOrUpdateConsumerPhoneMappingRequest) returns (CreateOrUpdateConsumerPhoneMappingResponse);
  // Get all mappings of case_id, connect contact_id, and cart_id
  rpc GetCaseAndAmazonConnectMapping(GetCaseAndAmazonConnectMappingRequest) returns (GetCaseAndAmazonConnectMappingResponse);
  // Creates a mapping of cart_id => salesforce_case_id
  rpc CreateSalesforceCaseAndCartMapping(CreateSalesforceCaseAndCartMappingRequest) returns (CreateSalesforceCaseAndCartMappingResponse);
  // Creates data for merchants in Voice Foundry AWS account for Amazon Connect Flows
  rpc CreateOrUpdateMxAmazonConnectData(CreateOrUpdateMxAmazonConnectDataRequest) returns (CreateOrUpdateMxAmazonConnectDataResponse);
  // Get all merchant data for in Voice Foundry AWS account for Amazon Connect Flows
  rpc GetMxAmazonConnectData(GetMxAmazonConnectDataRequest) returns (GetMxAmazonConnectDataResponse);
  // Bulk upsert call flow
  rpc BulkCallFlowUpsert(BulkCallFlowUpsertRequest) returns (BulkCallFlowUpsertResponse);
  // Get call flow page
  rpc GetCallFlowPage(GetCallFlowPageRequest) returns (GetCallFlowPageResponse);
  // Create or update announcement for merchants
  rpc CreateOrUpdateMerchantAnnouncementMapping(CreateOrUpdateMerchantAnnouncementMappingRequest) returns (CreateOrUpdateMerchantAnnouncementMappingResponse);
  // Get all announcements and their impacted merchants
  rpc GetMerchantAnnouncementMapping(GetMerchantAnnouncementMappingRequest) returns (GetMerchantAnnouncementMappingResponse);
  // Delete merchant announcement mapping for a specific merchant
  rpc DeleteMerchantAnnouncementMapping(DeleteMerchantAnnouncementMappingRequest) returns (DeleteMerchantAnnouncementMappingResponse);
  // Send order confirmation SMS
  rpc SendOrderConfirmationSMS(SendOrderConfirmationSMSRequest) returns (SendOrderConfirmationSMSResponse);
  // Create post call logging
  rpc CreatePostCallLogging(CreatePostCallLoggingRequest) returns (CreatePostCallLoggingResponse);
  // Get post call logging
  rpc GetPostCallLogging(GetPostCallLoggingRequest) returns (GetPostCallLoggingResponse);
  // Process delivery event from kafka consumer
  rpc ProcessKafkaEvent(ProcessKafkaEventRequest) returns (ProcessKafkaEventResponse);
}

// Request object for CreateOrUpdateConsumerPhoneMapping
message CreateOrUpdateConsumerPhoneMappingRequest {
  // Consumer phone #
  google.protobuf.StringValue phone_number = 1;
  // Store ID
  google.protobuf.Int64Value store_id = 2;
  // Consumer ID
  google.protobuf.Int64Value consumer_id = 3;
  // flag indicating whether stored payment method can be used for future orders
  google.protobuf.BoolValue can_use_stored_payment_method = 4;
}

// Response object for CreateOrUpdateConsumerPhoneMapping
message CreateOrUpdateConsumerPhoneMappingResponse {
  // Was the operation successful
  google.protobuf.BoolValue is_success = 1;
}

// The Salesforce Case object
message SalesforceCase {
  // Salesforce Case ID
  google.protobuf.StringValue id = 1;
  // Salesforce Case customer phone #
  google.protobuf.StringValue customer_phone = 2;
}

// Request object for GetCaseByContactId
message GetCaseByContactIdRequest {
  // Amazon Connect Contact ID
  google.protobuf.StringValue contact_id = 1;
}

// Response object for GetCaseByContactId
message GetCaseByContactIdResponse {
  // The Salesforce Case object
  SalesforceCase case = 1;
}

// Request object for GetCaseAndConsumerByContactId
message GetCaseAndConsumerByContactIdRequest {
  // Amazon Connect Contact ID
  google.protobuf.StringValue contact_id = 1;
  // Store ID
  google.protobuf.Int64Value store_id = 2;
}

// Response object for GetCaseAndConsumerByContactId
message GetCaseAndConsumerByContactIdResponse {
  // The Salesforce Case object
  SalesforceCase case = 1;
  // Consumer ID
  google.protobuf.Int64Value consumer_id = 2;
  // flag indicating whether stored payment method can be used for future orders
  google.protobuf.BoolValue can_use_stored_payment_method = 3;
}

// Request object for GetConsumerDetailsByPhoneNumber
message GetConsumerDetailsByPhoneNumberRequest {
  // Consumer phone number
  google.protobuf.StringValue phone_number = 1;
  // Store ID
  google.protobuf.Int64Value store_id = 2;
}

// Response object for GetConsumerDetailsByPhoneNumber
message GetConsumerDetailsByPhoneNumberResponse {
  // Consumer ID
  google.protobuf.Int64Value consumer_id = 1;
  // flag indicating whether stored payment method can be used for future orders
  google.protobuf.BoolValue can_use_stored_payment_method = 2;
}

// Request object for CreateSalesforceCaseAndCartMapping
message CreateSalesforceCaseAndCartMappingRequest {
  // Contact id
  google.protobuf.StringValue contact_id = 1;
  // Cart id
  google.protobuf.StringValue cart_id = 2;
  // Twilio Call SID
  google.protobuf.StringValue call_sid = 3;
}

// Response object for CreateSalesforceCaseAndCartMapping
message CreateSalesforceCaseAndCartMappingResponse {
  // Contact id
  google.protobuf.StringValue contact_id = 1;
  // Salesforce case id
  google.protobuf.StringValue salesforce_case_id = 2;
  // Cart id
  google.protobuf.StringValue cart_id = 3;
  // Twilio Call SID
  google.protobuf.StringValue call_sid = 4;
}

// represents a column data map along with row number of the uploaded csv data
message ColumnMappedData {
  // csv row captured as json data string
  map<string, string> column_data = 2;
}

// Request object for CreateOrUpdateMxAmazonConnectData
message CreateOrUpdateMxAmazonConnectDataRequest {
  // Csv data represented with row id and column mapping
  map<int32, ColumnMappedData> data_rows = 1;
  // If this flag is false we just return the exceptions post validation without committing to database
  bool should_commit_data = 2;
}

// Response object for CreateOrUpdateMxAmazonConnectData
message CreateOrUpdateMxAmazonConnectDataResponse {
  // validation exceptions for csv rows represented with row id and column mapping
  map<int32, ColumnMappedData> exception_strings = 1;
}

// Request object for GetMxAmazonConnectData
message GetMxAmazonConnectDataRequest {
  // optional field, if business_id not specified then all data would be returned
  string business_id = 1;
}

// Response object for GetMxAmazonConnectData
message GetMxAmazonConnectDataResponse {
  // mapped mx data where each element represents a store
  repeated ColumnMappedData store_data = 1;
}

// Request object for GetCallFlows
message GetCallFlowPageRequest {
  // pagination offset key. returns first page if null
  google.protobuf.StringValue exclusive_start_key = 1;
}

// Response object for GetCallFlows
message GetCallFlowPageResponse {
  // Exclusive start key for next page
  google.protobuf.StringValue exclusive_start_key = 1;
  // mapped call flows
  repeated ColumnMappedData call_flows = 2;
}

// Request object for BulkCallFlowUpsert
message BulkCallFlowUpsertRequest {
  // Csv data
  repeated ColumnMappedData data_rows = 1;
  // If this flag is false we just return the exceptions post validation without committing to database
  bool should_commit_data = 2;
}

// Response object for BulkCallFlowUpsert
message BulkCallFlowUpsertResponse {
  // validation exceptions for csv rows represented with row id and column mapping
  map<int32, ColumnMappedData> exception_strings = 1;
}

// Merchant Type
enum MerchantType {
  // Unspecified merchant type
  MERCHANT_TYPE_UNSPECIFIED = 0;
  // Store as merchant type
  MERCHANT_TYPE_STORE = 1;
  // Business as merchant type
  MERCHANT_TYPE_BUSINESS = 2;
}

// Represents merchant information which the announcement is created for
message MerchantInfo {
  // Merchant id
  google.protobuf.Int64Value merchant_id = 1;
  // Merchant name
  string merchant_name = 2;
  // Merchant type
  MerchantType merchant_type = 3;
}

// Represents announcement information
message AnnouncementInfo {
  // Optional in request
  string announcement_uuid = 1;
  // Announcement Type
  enum AnnouncementType {
    // Unspecified announcement type
    ANNOUNCEMENT_TYPE_UNSPECIFIED = 0;
    // IMPORTANT as merchant type
    ANNOUNCEMENT_TYPE_IMPORTANT = 1;
    // INFORMATIONAL as merchant type
    ANNOUNCEMENT_TYPE_INFORMATIONAL = 2;
  }
  // Announcement type
  AnnouncementType announcement_type = 2;
  // Title of the announcement
  string announcement_title = 3;
  // Description of the announcement
  string announcement_description = 4;
  // Time since when the announcement was enabled
  google.protobuf.Timestamp enabled_at = 5;
  // Time since when the announcement was disabled
  google.protobuf.Timestamp disabled_at = 6;
}

// Represents merchant mappings for a specific announcement
message MerchantAnnouncementMapping {
  // List of impacted merchants
  repeated MerchantInfo impacted_merchants = 1;
  // Announcement Info
  AnnouncementInfo announcement_info = 2;
}

// Request object for GetMerchantAnnouncementMapping
message GetMerchantAnnouncementMappingRequest {
  // Merchant type
  MerchantType merchant_type = 1;
  // Optional field, if merchant_id not specified then all data would be returned
  string merchant_id = 2;
  // Get expired announcements if has_expired is true otherwise get announcements which are currently in effect
  google.protobuf.BoolValue has_expired = 3;
  // Optional field, if announcement_id not specified then all data would be returned
  string announcement_id = 4;
  // Get future announcements as well if is_current is set to false
  google.protobuf.BoolValue is_current = 5;
}

// Response object for GetMerchantAnnouncementMapping
message GetMerchantAnnouncementMappingResponse {
  // List of merchant announcement mappings
  repeated MerchantAnnouncementMapping merchant_announcement_mappings = 1;
}

// Request object for CreateOrUpdateMerchantAnnouncementMapping
message CreateOrUpdateMerchantAnnouncementMappingRequest {
  // List of merchants the announcements are created for
  repeated MerchantInfo impacted_merchants = 1;
  // Announcement type
  AnnouncementInfo announcement_info = 2;
}

// Represents each entry of resolution details
message PostCallLoggingResolutionEntry {
  // prompt
  string prompt = 1;
  // answer
  string answer = 2;
}

// Request object for CreateOrUpdatePostCallLoggingRequest
message CreatePostCallLoggingRequest {
  // Contact Id
  string contact_id = 1;
  // Store Id
  google.protobuf.Int64Value store_id = 2;
  // Resolution Detail
  repeated PostCallLoggingResolutionEntry resolution_detail = 3;
  // User Id
  google.protobuf.Int64Value user_id = 4;
}

// Response object for CreateOrUpdateMerchantAnnouncementMapping
message CreateOrUpdateMerchantAnnouncementMappingResponse {
  // Announcement UUID
  string announcement_uuid = 1;
}

// Request object for DeleteMerchantAnnouncementMapping
message DeleteMerchantAnnouncementMappingRequest {
  // Announcement UUID
  string announcement_uuid = 1;
}

// Response object for DeleteMerchantAnnouncementMapping
message DeleteMerchantAnnouncementMappingResponse {
  // Announcement UUID
  string announcement_uuid = 1;
  // Announcement title
  string announcement_title = 2;
}

// Request object for SendSMS
message SendOrderConfirmationSMSRequest {
  // From number of SMS
  google.protobuf.StringValue from_number = 1;
  // To number of SMS
  google.protobuf.StringValue to_number = 2;
  // SMS template placeholder.
  // Required if the configuration_id maps to a configuration with
  // configuration_type == SMS_TEMPLATE AND the template of the corresponding
  // configuration includes templated fields.
  map<string, string> placeholder = 3;
  // Message for sms, required if
  // the configuration_id maps to a configuration with configuration_type == SMS
  google.protobuf.StringValue message = 4;
  // Delivery id
  google.protobuf.StringValue delivery_id = 5;
  // Configuration id. Values are here :
  // https://doordash.atlassian.net/wiki/spaces/Eng/pages/3055944171/SMS+configuration
  google.protobuf.StringValue configuration_id = 6;
}

// Response object for SendSMS
message SendOrderConfirmationSMSResponse {
  // Was the operation successful
  google.protobuf.BoolValue is_success = 1;
}

// Represents case and amazon connect mapping
message CaseAndAmazonConnectMapping {
  // Contact id
  google.protobuf.StringValue contact_id = 1;
  // Case id
  google.protobuf.StringValue case_id = 2;
  // Cart id
  google.protobuf.StringValue cart_id = 3;
  // Timestamp for creation
  google.protobuf.Timestamp created_at = 4;
}

// Request object for GetCaseAndAmazonConnectMapping
message GetCaseAndAmazonConnectMappingRequest {
  // Contact Id
  google.protobuf.StringValue contact_id = 1;
}

// Response object for GetCaseAndAmazonConnectMapping
message GetCaseAndAmazonConnectMappingResponse {
  // List of caseAndAmazonConnectMapping
  repeated CaseAndAmazonConnectMapping mappings = 1;
}

// Response object for createOrUpdatePostCallLogging
message CreatePostCallLoggingResponse {
  // Was the operation successful
  google.protobuf.BoolValue is_success = 1;
}

// Request object for GetPostCallLoggingRequest
message GetPostCallLoggingRequest {
  // Contact Id
  google.protobuf.StringValue contact_id = 1;
}

// Object for post call logging retrieved from the DB
message PostCallLoggingData {
  // Contact Id
  google.protobuf.StringValue contact_id = 1;
  // Store Id
  google.protobuf.Int64Value store_id = 2;
  // Resolution Detail
  google.protobuf.StringValue resolution_detail = 3;
  // User Id
  google.protobuf.Int64Value user_id = 4;
}

// Request object for GetPostCallLoggingResponse
message GetPostCallLoggingResponse {
  // List of post call logging
  repeated PostCallLoggingData post_call_logging = 1;
}

// Request object for ProcessKafkaEvent
message ProcessKafkaEventRequest {
  // Order UUID
  google.protobuf.StringValue order_uuid = 1;
  // Event category name
  google.protobuf.StringValue event_category_name = 2;
  // Delivery context
  delivery_event.DeliveryContext delivery_context = 3;
}

// Request object for ProcessKafkaEvent
message ProcessKafkaEventResponse {
  // Was the operation successful
  google.protobuf.BoolValue is_success = 1;
}
