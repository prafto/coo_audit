syntax = "proto3";

// buf:lint:ignore DIRECTORY_SAME_PACKAGE
package com.doordash.rpc.merchant_order_service.v1;

import "common/common.proto";
import "common/money.proto";
import "common/mx_hospitality.proto";
import "common/order.proto";
import "delivery_event/delivery_event.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_outer_classname = "OrderModelProto";
option java_package = "com.doordash.rpc.merchant_order_service";

// Order object
message Order {
  // delivery uuid
  google.protobuf.StringValue delivery_uuid = 1;
  // updated at timestamp
  google.protobuf.Timestamp updated_at = 2;
  // contains objects, will be used for domain objects tracking. E.g. return [] for full Order object; return ["order_details"] for Order object with only order_details field.
  repeated google.protobuf.StringValue contained_objects = 3;
  // fulfillment detail
  FulfillmentDetail fulfillment_detail = 4;
  // order metadata, shared info for each order
  OrderMetadata order_metadata = 5;
  // order details, more than one if group order
  repeated OrderDetail order_details = 6;
  // gift info
  GiftInfo gift_info = 7;
  // storefront refund detail
  StorefrontRefundDetail storefront_refund_detail = 8;
  // merchant info
  MerchantDetails merchant_details = 9;
  // the main order uuid for the Delivery
  google.protobuf.StringValue order_uuid = 10;
  // the primary customer info for the Delivery
  CustomerDetail customer_detail = 11;
}

// Fulfillment detail
message FulfillmentDetail {
  // delivery uuid
  google.protobuf.StringValue delivery_uuid = 1;
  // fulfillment status
  FulfillmentStatus fulfillment_status = 2;
  // dasher info
  DasherInfo dasher_info = 3;
  // batch id
  google.protobuf.Int64Value batch_id = 4;
  // delivery status
  delivery_event.DeliveryStatus delivery_status = 5;
  // deliery timestamps
  OrderMetadata.DeliveryTimestamps delivery_timestamps = 6;
  // batch order list
  BatchedOrderList batched_order_list = 7;
  // Order cancellation reason category
  order.CancellationReason.CancellationReasonCategory cancellation_reason_category = 8;
  // Order cancellation paid status
  CancellationPaidStatus cancellation_paid_status = 9;
  // the current tablet_order state of the order
  TabletOrderState tablet_order_state = 10;

  // batched order list
  message BatchedOrderList {
    // batched orders
    repeated BatchedOrder batched_orders = 1;
  }

  // batched order into
  message BatchedOrder {
    // batched delivery uuid
    google.protobuf.StringValue batched_delivery_uuid = 1;
    // the current tablet_order state of the order
    TabletOrderState tablet_order_state = 2;
    // the consumer name of the order
    google.protobuf.StringValue customer_name = 3;
    // item count
    google.protobuf.Int64Value item_count = 4;
  }

  // dasher info
  message DasherInfo {
    // dasher id
    google.protobuf.Int64Value dasher_id = 1;
    // first name
    google.protobuf.StringValue first_name = 2;
    // last name
    google.protobuf.StringValue last_name = 3;
    // dasher phone number
    google.protobuf.StringValue dasher_phone_number = 4;
    // latitude
    google.protobuf.DoubleValue lat = 5;
    // longitude
    google.protobuf.DoubleValue lng = 6;
    // dasher eta secs
    google.protobuf.Int32Value dasher_eta_secs = 7;
    // dasher confirmed at store time
    google.protobuf.Timestamp dasher_confirmed_at_store_time = 8;
    // dasher at store time
    google.protobuf.Timestamp dasher_at_store_time = 9;
    // dasher vehicle info
    DasherVehicleInfo dasher_vehicle_info = 10;
    // dasher confirmed time
    google.protobuf.Timestamp dasher_confirmed_time = 11;
  }

  // Dasher Vehicle Info
  message DasherVehicleInfo {
    // type
    google.protobuf.StringValue type_name = 1;
    // make
    google.protobuf.StringValue make = 2;
    // model
    google.protobuf.StringValue model = 3;
    // year
    google.protobuf.StringValue year = 4;
    // color
    google.protobuf.StringValue color = 5;
  }

  // Fulfillment Status
  enum FulfillmentStatus {
    // Unspecified
    FULFILLMENT_STATUS_UNSPECIFIED = 0;
    // En Route
    FULFILLMENT_STATUS_EN_ROUTE = 1;
    // Waiting
    FULFILLMENT_STATUS_WAITING = 2;
    // Picked Up
    FULFILLMENT_STATUS_PICKED_UP = 3;
    // Late
    FULFILLMENT_STATUS_LATE = 4;
  }

  // CancellationPaidStatus
  enum CancellationPaidStatus {
    // Unspecified
    CANCELLATION_PAID_STATUS_UNSPECIFIED = 0;
    // Paid status
    CANCELLATION_PAID_STATUS_PAID = 1;
    // Unpaid status
    CANCELLATION_PAID_STATUS_UNPAID = 2;
    // Unknown status
    CANCELLATION_PAID_STATUS_UNKNOWN = 3;
  }
}

// Order Metadata
message OrderMetadata {
  // delivery timestamps. Moving to under FulfillmentDetail
  DeliveryTimestamps delivery_timestamps = 1 [deprecated = true];
  // pricing info
  PricingInfo pricing_info = 2;
  // simulated order
  google.protobuf.BoolValue is_simulated_order = 3 [deprecated = true];
  // order protocol
  google.protobuf.StringValue order_protocol = 4;
  // order experience
  common.Experience order_experience = 5;
  // mpf state
  google.protobuf.BoolValue is_mpf_state = 6;
  // asap
  google.protobuf.BoolValue is_asap = 7;
  // fulfillment type
  FulfillmentType fulfillment_type = 8;
  // order type
  common.OrderCategory order_type = 9;
  // submit platform
  google.protobuf.StringValue submit_platform = 10;

  // Delivery Timestamps
  message DeliveryTimestamps {
    // delivery created at
    google.protobuf.Timestamp created_at = 1;
    // delivery cancelled at
    google.protobuf.Timestamp cancelled_at = 2;
    // static delivery estimated pickup time
    google.protobuf.Timestamp estimated_pickup_time = 3;
    // store confirmed time
    google.protobuf.Timestamp store_confirmed_time = 4;
    // store reconfirmed time
    google.protobuf.Timestamp store_reconfirmed_time = 5;
    // store order ready time
    google.protobuf.Timestamp store_order_ready_time = 6;
    // actual pickup time
    google.protobuf.Timestamp actual_pickup_time = 7;
    // quoted delivery time
    google.protobuf.Timestamp quoted_delivery_time = 8;
    // actual delivery time
    google.protobuf.Timestamp actual_delivery_time = 9;
    // transmission time
    google.protobuf.Timestamp transmission_time = 10;
    // estimated prep duration secs
    google.protobuf.Int32Value estimated_prep_duration_secs = 11;
    // mx confirmed prep duration secs
    google.protobuf.Int32Value mx_confirmed_prep_duration_secs = 12;
    // Dynamic ETA timestamps
    DynamicETATimestamps dynamic_eta_timestamps = 13;
  }

  // ETA Timestamps
  message DynamicETATimestamps {
    // quoted delivery time
    google.protobuf.Timestamp estimated_delivery_time = 1;
    // delivery estimated pickup time
    google.protobuf.Timestamp estimated_pickup_time = 2;
  }

  // Fulfillment type
  enum FulfillmentType {
    // Unspecified
    FULFILLMENT_TYPE_UNSPECIFIED = 0;
    // Merchant
    FULFILLMENT_TYPE_MERCHANT = 1;
    // Dasher
    FULFILLMENT_TYPE_DASHER = 2;
    // Consumer
    FULFILLMENT_TYPE_CONSUMER = 3;
    // Dine In
    FULFILLMENT_TYPE_DINE_IN = 4;
    // Drone
    FULFILLMENT_TYPE_DRONE = 5;
    // virtual
    FULFILLMENT_TYPE_VIRTUAL = 6;
    // DD_POS fulfillment
    FULFILLMENT_TYPE_DD_POS_DINE_IN = 7;
    // DD_POS self-serve kiosk takeout fulfillment
    FULFILLMENT_TYPE_DD_POS_TAKE_OUT = 8;
    // Merchant ships their order
    FULFILLMENT_TYPE_MX_SHIPPING = 9;
  }
}

// Order Detail
message OrderDetail {
  // reserve order identifier, i.e. the orderUuid.
  reserved 1;
  // item detail
  ItemsDetail item_detail = 2;
  // customer detail
  CustomerDetail customer_detail = 3 [deprecated = true];
  // order id
  google.protobuf.Int64Value id = 4;
  // sub-cart customer detail
  SubCartCustomerDetail sub_cart_customer_detail = 5;
}

// Pricing Info
message PricingInfo {
  // net subtotal
  money.MonetaryFields net_subtotal = 1;
  // subtotal
  money.MonetaryFields subtotal = 2;
  // total
  money.MonetaryFields total = 3;
  // tax
  money.MonetaryFields tax = 4;
  // tips
  money.MonetaryFields tips = 5;
  // pre merchant tips
  money.MonetaryFields pre_merchant_tips = 6;
  // final delivery fee
  money.MonetaryFields final_delivery_fee = 7;
  // subtotal for tax
  money.MonetaryFields subtotal_for_tax = 8;
  // promotion title
  google.protobuf.StringValue promotion_title = 9;
  // subtotal discount funding source
  google.protobuf.StringValue subtotal_discount_funding_source = 10;
  // show subtotal for tax
  google.protobuf.BoolValue show_subtotal_for_tax = 11;
  // hide_sales_tax
  google.protobuf.BoolValue hide_sales_tax = 12;
}

// Customer Detail
message CustomerDetail {
  reserved 5, 6;
  reserved "customer_stats", "customer_tags";

  // customer name
  google.protobuf.StringValue customer_name = 1;
  // customer name localized
  google.protobuf.StringValue customer_name_localized = 2;
  // phone number
  google.protobuf.StringValue phone_number = 3;
  // delivery address
  DeliveryAddress delivery_address = 4;
  // Customer Stats for Mx Hospitality
  repeated common.mx_hospitality.v1.CxStat cx_stats = 7;
  // Customer Tags for Mx Hospitality
  repeated common.mx_hospitality.v1.CxTag cx_tags = 8;

  // Delivery Address
  message DeliveryAddress {
    // printable address
    google.protobuf.StringValue printable_address = 1;
    // dasher instructions
    google.protobuf.StringValue dasher_instructions = 2;
    // latitude
    google.protobuf.DoubleValue lat = 3;
    // longitude
    google.protobuf.DoubleValue lng = 4;
  }
}

// Sub Cart Customer Detail
message SubCartCustomerDetail {
  // customer name
  google.protobuf.StringValue customer_name = 1;
}

// Items Detail
message ItemsDetail {
  // order items
  repeated OrderItem items = 1;
  // include utensils
  google.protobuf.BoolValue include_utensils = 2;

  // Order Item
  message OrderItem {
    // id
    google.protobuf.StringValue id = 1;
    // name
    google.protobuf.StringValue name = 2;
    // quantity
    google.protobuf.Int32Value quantity = 3;
    // unit price
    money.MonetaryFields unit_price = 4;
    // additional cost
    money.MonetaryFields additional_cost = 5;
    // special instructions
    google.protobuf.StringValue special_instructions = 6;
    // substitution preference
    google.protobuf.StringValue substitution_preference = 7;
    // deactivation event
    DeactivationEvent deactivation_event = 8;
    // menu item
    common.MenuItem menu_item = 9;
    // item extras
    repeated ItemExtra item_extras = 10;
    // is removed
    google.protobuf.BoolValue is_removed = 11;
    // substituted_order_item_id
    google.protobuf.Int64Value substituted_order_item_id = 12;
    // original order item id
    google.protobuf.Int64Value original_order_item_id = 13;
    // (NV) substitution choices
    repeated SubstitutionChoiceItem substitution_choice_items = 14;
    // image url
    google.protobuf.StringValue image_url = 15;

    // Item Extra
    message ItemExtra {
      // id
      google.protobuf.StringValue id = 1;
      // name
      google.protobuf.StringValue name = 2;
      // title
      google.protobuf.StringValue title = 3;
      // sort id
      google.protobuf.Int32Value sort_id = 4;
      // num free options
      google.protobuf.Int32Value num_free_options = 5;
      // options
      repeated ItemExtraOption options = 6;
      // min num options
      google.protobuf.Int32Value min_num_options = 7;
      // max num options
      google.protobuf.Int32Value max_num_options = 8;
      // merchant supplied id
      google.protobuf.StringValue merchant_supplied_id = 9;
    }

    // Item Extra Option
    message ItemExtraOption {
      // id
      google.protobuf.StringValue id = 1;
      // name
      google.protobuf.StringValue name = 2;
      // price
      google.protobuf.StringValue description = 3;
      // price
      money.MonetaryFields price = 4;
      // quantity
      google.protobuf.Int32Value quantity = 5;
      // item extras
      repeated ItemExtra item_extras = 6;
      // is free
      bool is_free = 7;
      // sort id
      google.protobuf.Int32Value sort_id = 8;
      // extra title
      google.protobuf.StringValue extra_title = 9;
      // extra id
      google.protobuf.StringValue extra_id = 10;
      // merchant supplied id
      google.protobuf.StringValue merchant_supplied_id = 11;
      // default quantity
      google.protobuf.Int32Value default_quantity = 12;
      // is recipe
      bool is_recipe = 13;
      // menu extra option id for the current extra option
      google.protobuf.StringValue menu_item_extra_option_id = 14;
    }
    // Cx approved substitution item
    message SubstitutionChoiceItem {
      // name
      google.protobuf.StringValue name = 1;
      // merchant supplied id
      google.protobuf.StringValue merchant_supplied_id = 2;
      // price
      money.MonetaryFields unit_price = 3;
      // quantity
      google.protobuf.Int32Value quantity = 4;
      // max allowed quantity
      google.protobuf.Int32Value max_allowed_quantity = 5;
      // image url
      google.protobuf.StringValue image_url = 6;
      // menu item id
      google.protobuf.StringValue menu_item_id = 7;
      // substitution type: UNSPECIFIED, DOORDASH_CHOICE, PRE_APPROVED, GENERIC_CATEGORY
      google.protobuf.StringValue substitution_type = 8;
    }
  }
}

// Deactivation Event
message DeactivationEvent {
  // type
  google.protobuf.StringValue type = 1;
  // replaced item name
  google.protobuf.StringValue replaced_item_name = 2;
}

// Gift Info
message GiftInfo {
  // recipient name
  google.protobuf.StringValue recipient_name = 1;
  // recipient phone
  google.protobuf.StringValue recipient_phone = 2;
  // card message
  google.protobuf.StringValue card_message = 3;
  // sender name
  google.protobuf.StringValue sender_name = 4;
}

// Refund Detail
message StorefrontRefundDetail {
  // total amount
  money.MonetaryFields total_amount = 1;
  // items refund detail
  repeated ItemRefundDetail items_refund_detail = 2;
  // refund decline detail
  RefundDeclineDetail refund_decline_detail = 3;
  // customer refund request
  CustomerRefundRequest customer_refund_request = 4;

  // Item Refund Detail
  message ItemRefundDetail {
    // item id
    google.protobuf.StringValue item_id = 1;
  }

  // Refund Decline Detail
  message RefundDeclineDetail {
    // decline message
    google.protobuf.StringValue decline_message = 1;
    // decline reasons
    repeated google.protobuf.StringValue decline_reasons = 2;
  }

  // Customer Refund Request
  message CustomerRefundRequest {
    // request time
    google.protobuf.Timestamp request_time = 1;
    // customer comments
    repeated google.protobuf.StringValue customer_comments = 2;
    // DO NOT USE. have to keep the name and type due to breaking change no longer allowed
    map<string, RefundItemProblem> refund_item_problems = 3 [deprecated = true];
    // refund item problems
    map<string, RefundItemProblems> item_problems = 4;
  }

  // Refund Item Problem
  message RefundItemProblem {
    // refund reason
    RefundReason refund_reason = 1;
    // count
    google.protobuf.Int32Value count = 2;
  }

  // refund item problems
  message RefundItemProblems {
    // list of RefundItemProblem
    repeated RefundItemProblem refund_item_problems = 1;
  }

  // Refund Reason
  enum RefundReason {
    // Unspecified
    REFUND_REASON_UNSPECIFIED = 0;
    // Food Quality Arrived Cold
    REFUND_REASON_FOOD_QUALITY_ARRIVED_COLD = 1;
    // Food Quality Handled Poorly
    REFUND_REASON_FOOD_QUALITY_HANDLED_POORLY = 2;
    // Food Quality Not Tasty
    REFUND_REASON_FOOD_QUALITY_NOT_TASTY = 3;
    // Food Quality Overcooked Or Undercooked
    REFUND_REASON_FOOD_QUALITY_OVERCOOKED_OR_UNDERCOOKED = 4;
    // Food Quality Unsafe To Eat
    REFUND_REASON_FOOD_QUALITY_UNSAFE_TO_EAT = 5;
    // Incorrect Instructions Not Followed
    REFUND_REASON_INCORRECT_INSTRUCTIONS_NOT_FOLLOWED = 6;
    // Incorrect Missing Ingredients
    REFUND_REASON_INCORRECT_MISSING_INGREDIENTS = 7;
    // Incorrect Overcooked Or Undercooked
    REFUND_REASON_INCORRECT_OVERCOOKED_OR_UNDERCOOKED = 8;
    // Incorrect Unwanted Ingredients
    REFUND_REASON_INCORRECT_UNWANTED_INGREDIENTS = 9;
    // Missing Item
    REFUND_REASON_MISSING_ITEM = 10;
    // Missing Side Item
    REFUND_REASON_MISSING_SIDE_ITEM = 11;
  }
}

// merchant details
message MerchantDetails {
  // Merchant store id
  google.protobuf.Int64Value store_id = 1;
  // Merchant business id.
  google.protobuf.Int64Value business_id = 2;
  // Merchant store address
  delivery_event.DeliveryContext.MerchantDetails.PickupAddress pickup_address = 3;
}

// Tablet Order State
enum TabletOrderState {
  // Unspecified
  TABLET_ORDER_STATE_UNSPECIFIED = 0;
  // order has been cancelled
  TABLET_ORDER_STATE_CANCELLED = 1;
  // order has been picked up
  TABLET_ORDER_STATE_PICKED_UP = 2;
  // order ready for pick up
  TABLET_ORDER_STATE_READY_FOR_PICKUP = 3;
  // order is still in progress
  TABLET_ORDER_STATE_IN_PROGRESS = 4;
  // POS order that has not benn transmitted ready for preview
  TABLET_ORDER_STATE_READ_ONLY_PREVIEW = 5;
  // non POS order ready for preview
  TABLET_ORDER_STATE_PREVIEW = 6;
  // order ready to confirm
  TABLET_ORDER_STATE_READY_TO_CONFIRM = 7;
}
