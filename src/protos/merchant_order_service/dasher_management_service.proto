syntax = "proto3";

// buf:lint:ignore DIRECTORY_SAME_PACKAGE
package com.doordash.rpc.merchant_order_service.v1;

import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_outer_classname = "DasherManagementServiceProto";
option java_package = "com.doordash.rpc.merchant_order_service";

// DasherManagementService
service DasherManagementService {
  // rpc: to get dasher assignment history for a delivery
  rpc GetDasherAssignmentHistory(GetDasherAssignmentHistoryRequest) returns (GetDasherAssignmentHistoryResponse);
}

// GetDasherAssignmentHistoryRequest
message GetDasherAssignmentHistoryRequest {
  // one of the following ids to retrieve the assignment history
  oneof id {
    // delivery id
    google.protobuf.UInt64Value delivery_id = 1;
    // delivery uuid
    google.protobuf.StringValue delivery_uuid = 2;
    // order uuid
    // deprecating it as getting delivery from this field is not straight forward
    google.protobuf.StringValue order_uuid = 3 [deprecated = true];
  }
  // query param object
  GetDasherAssignmentHistoryQueryParam get_dasher_assignment_history_query_param = 4;
}

// GetDasherAssignmentHistoryRequest query params
message GetDasherAssignmentHistoryQueryParam {
  // should fetch unassigned Dx who never came to the store
  google.protobuf.BoolValue should_fetch_unassigned_dashers = 1;
}

// GetDasherAssignmentHistoryResponse
message GetDasherAssignmentHistoryResponse {
  // list of dashers
  repeated Dasher dashers = 1;
}

// dasher obj
message Dasher {
  // first name
  google.protobuf.StringValue first_name = 1;
  // last name
  google.protobuf.StringValue last_name = 2;
  // id
  google.protobuf.StringValue id = 3;
  // feedback
  DasherFeedback feedback = 4;
  // travel records
  DasherTravelRecords dasher_travel_records = 5;
  // total number of deliveries completed
  google.protobuf.UInt64Value lifetime_num_deliveries_made = 6;
  // vehicle information
  VehicleInfo vehicle_info = 7;
}

// Dasher travel time records, used to calculate whether dasher is late
message DasherTravelRecords {
  // dasher_at_store_time
  google.protobuf.Timestamp dasher_at_store_time = 1;
  // dasher_confirmed_at_store_time
  google.protobuf.Timestamp dasher_confirmed_at_store_time = 2;
  // unassigned time
  google.protobuf.Timestamp unassigned_time = 3;
}

// vehicle information
message VehicleInfo {
  // Dasher vehicle_make
  google.protobuf.StringValue vehicle_make = 2;
  // Dasher vehicle_model
  google.protobuf.StringValue vehicle_model = 3;
  // Dasher vehicle_color
  google.protobuf.StringValue vehicle_color = 4;
}

// dasher feedback from merchant
message DasherFeedback {
  // unassigned reason
  google.protobuf.StringValue unassigned_reason = 1;
  // feedback reasons
  repeated FeedbackReasonType feedback_reasons = 2;
  // comments
  google.protobuf.StringValue comments = 3;
  // submit time
  google.protobuf.Timestamp submit_time = 4;
  // dasher status
  DasherStatus dasher_status = 5;
}

// dasher feedback reason types
enum FeedbackReasonType {
  // unspecified
  FEEDBACK_REASON_TYPE_UNSPECIFIED = 0;

  // <positive reasons>
  // equipped
  FEEDBACK_REASON_TYPE_EQUIPPED = 1;
  // on time
  FEEDBACK_REASON_TYPE_ON_TIME = 2;
  // patient respectful
  FEEDBACK_REASON_TYPE_PATIENT_RESPECTFUL = 3;
  // instructions followed
  FEEDBACK_REASON_TYPE_INSTRUCTIONS_FOLLOWED = 4;
  // great communication
  FEEDBACK_REASON_TYPE_GREAT_COMMUNICATION = 5;
  // checked items
  FEEDBACK_REASON_TYPE_CHECKED_ITEMS = 6;

  // <negative reasons> and block reasons
  // dasher unprofessional
  FEEDBACK_REASON_TYPE_DASHER_UNPROFESSIONAL = 7;
  // instructions not followed
  FEEDBACK_REASON_TYPE_INSTRUCTIONS_NOT_FOLLOWED = 8;
  // not equipped
  FEEDBACK_REASON_TYPE_NOT_EQUIPPED = 9;
  // stole order
  FEEDBACK_REASON_TYPE_STOLE_ORDER = 10;
  // dasher someone else
  FEEDBACK_REASON_TYPE_DASHER_SOMEONE_ELSE = 11;
  // mishandled order
  FEEDBACK_REASON_TYPE_MISHANDLED_ORDER = 12;
  // early or late for pickup
  FEEDBACK_REASON_TYPE_EARLY_LATE_FOR_PICKUP = 13;
  // dasher never arrived
  FEEDBACK_REASON_TYPE_DASHER_NEVER_ARRIVED = 14;
  // other
  FEEDBACK_REASON_TYPE_OTHER = 15;
  // harassed staff or customers
  FEEDBACK_REASON_TYPE_HARASSED_STAFF_OR_CUSTOMERS = 16;
  // inappropriate behavior
  FEEDBACK_REASON_TYPE_INAPPROPRIATE_BEHAVIOR = 17;
  // under the influence
  FEEDBACK_REASON_TYPE_UNDER_THE_INFLUENCE = 18;
}

// Status of a dasher for an order
enum DasherStatus {
  // No status
  DASHER_STATUS_UNSPECIFIED = 0;
  // Dasher is blocked (takes precedence over preferred)
  DASHER_STATUS_BLOCKED = 1;
  // Dasher is preferred
  DASHER_STATUS_PREFERRED = 2;
  // Dasher is upvoted
  DASHER_STATUS_UPVOTE = 3;
  // Dasher is downvoted
  DASHER_STATUS_DOWNVOTE = 4;
}
