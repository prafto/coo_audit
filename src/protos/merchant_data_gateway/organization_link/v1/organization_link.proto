syntax = "proto3";

package merchant_data_gateway.organization_link.v1;

import "common/organization_service.proto";
import "common/service_client_config.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.merchant_data_gateway";

// The organization service is responsible for managing organizations.
service OrganizationLinkService {
  option (service_client.client_config).response_attempt_timeout_millis = 5000;
  option (service_client.client_config).retry_config.max_attempts = 1;
  option (service_client.client_config).circuit_breaker_config.failure_rate_threshold = 0.5;
  option (service_client.client_config).circuit_breaker_config.minimum_request_threshold = 50;
  option (service_client.client_config).circuit_breaker_config.counter_sliding_window_millis = 60000;
  option (service_client.client_config).circuit_breaker_config.circuit_open_window_millis = 30000;

  // Get organization link by child model.
  rpc GetOrganizationLinksByChildModel(GetOrganizationLinksByChildModelRequest) returns (GetOrganizationLinksByChildModelResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 500;
  }

  // Get organization links by organization id.
  rpc GetOrganizationLinksByStatusAndOrganizationId(GetOrganizationLinksByStatusAndOrganizationIdRequest) returns (GetOrganizationLinksByStatusAndOrganizationIdResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 500;
  }

  // Get organization link by organization id and child model.
  rpc GetOrganizationLinkByOrganizationIdAndChildModel(GetOrganizationLinkByOrganizationIdAndChildModelRequest) returns (GetOrganizationLinkByOrganizationIdAndChildModelResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 500;
  }

  // Get organization link by id.
  rpc GetOrganizationLinkById(GetOrganizationLinkByIdRequest) returns (GetOrganizationLinkByIdResponse) {
    option (service_client.client_method_config).response_attempt_timeout_millis = 500;
  }

  // Create organization link.
  rpc CreateOrganizationLink(CreateOrganizationLinkRequest) returns (CreateOrganizationLinkResponse);

  // Update organization link status.
  rpc UpdateOrganizationLinkStatus(UpdateOrganizationLinkStatusRequest) returns (UpdateOrganizationLinkStatusResponse);
}

// Request to get organization link by child model.
message GetOrganizationLinksByChildModelRequest {
  // optional: The child model.
  // If not passed, it will filter by child id = 0, model type = MODEL_TYPE_UNSPECIFIED.
  // Child model.
  organization_service.v1.Model child_model = 1;
  // Page token.
  google.protobuf.StringValue page_token = 2;
  // Limit.
  google.protobuf.Int64Value limit = 3;
}

// Response to get organization link by child model.
message GetOrganizationLinksByChildModelResponse {
  // Organization link.
  repeated OrganizationLinkData organization_link = 1;
  // Next page token.
  google.protobuf.StringValue next_page_token = 2;
}

// Request to get organization links by organization id.
message GetOrganizationLinksByStatusAndOrganizationIdRequest {
  // Organization id.
  int64 organization_id = 1;
  // Organization status.
  organization_service.v1.OrganizationLinkStatus status = 2;
  // Page token.
  google.protobuf.StringValue page_token = 3;
  // Limit.
  google.protobuf.Int64Value limit = 4;
}

// Response to get organization links by organization id.
message GetOrganizationLinksByStatusAndOrganizationIdResponse {
  // Organization links.
  repeated OrganizationLinkData organization_links = 1;
  // Next page token.
  google.protobuf.StringValue next_page_token = 2;
}

// Request to get organization link by organization id and child model.
message GetOrganizationLinkByOrganizationIdAndChildModelRequest {
  // Organization id.
  int64 organization_id = 1;
  // optional: The child model of the organization.
  // Child model.
  organization_service.v1.Model child_model = 2;
}

// Response to get organization link by organization id and child model.
message GetOrganizationLinkByOrganizationIdAndChildModelResponse {
  // Organization link.
  OrganizationLinkData organization_link = 1;
}

// Request to get organization link by id.
message GetOrganizationLinkByIdRequest {
  // Organization link id.
  string id = 1;
}

// Response to get organization link by id.
message GetOrganizationLinkByIdResponse {
  // Organization link.
  OrganizationLinkData organization_link = 1;
}

// Request to create organization link.
message CreateOrganizationLinkRequest {
  // Organization link.
  OrganizationLinkData organization_link = 1;
  // Child entity type, used for cdc.
  organization_service.v1.EntityType child_entity_type = 2;
}

// Response to create organization link.
message CreateOrganizationLinkResponse {
  // Organization link.
  OrganizationLinkData organization_link = 1;
}

// Request to update organization link status.
message UpdateOrganizationLinkStatusRequest {
  // Organization link id.
  string id = 1;
  // Organization link status.
  organization_service.v1.OrganizationLinkStatus status = 2;
  // Child entity type, used for cdc.
  organization_service.v1.EntityType child_entity_type = 3;
}

// Response to update organization link status.
message UpdateOrganizationLinkStatusResponse {
  // Organization link.
  OrganizationLinkData organization_link = 1;
}

// Organization link data.
message OrganizationLinkData {
  // Organization link id.
  string id = 1;
  // Organization id.
  int64 organization_id = 2;
  // Organization status.
  organization_service.v1.OrganizationLinkStatus status = 3;
  // Child model.
  organization_service.v1.Model child_model = 4;
  // Created at.
  google.protobuf.Timestamp updated_at = 5;
}
