syntax = "proto3";
package experience_reliability_service.bulk_credits_and_refunds;

import "common/service_client_config.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.ers.bulk_credits_and_refunds";

service CreditAndRefundBulkIssuanceService {
  // for reference: https://github.com/doordash/dd-util-java/wiki/Hermes#hermes-default-behavior
  option (service_client.client_config).service_name = "experience-reliability-service";
  option (service_client.client_config).retry_config.max_attempts = 3;
  option (service_client.client_config).response_attempt_timeout_millis = 60000;
  option (service_client.client_config).circuit_breaker_config.failure_rate_threshold = 1.0;
  option (service_client.client_config).retry_config.initial_wait_millis = 500;
  option (service_client.client_config).retry_config.wait_multiplier = 2.0;

  // The Merchant endpoints continue to remain in experience reliability service (CreateMerchantPaymentAdjustmentForDelivery, IssueDriveMerchantPaymentAdjustment)
  // The other endpoints are now in cnr-platform (IssueCreditAndOrRefundToDelivery, IssueCreditToConsumerId, IssueReferreeCreditToConsumerId)
  rpc IssueCreditAndOrRefundToDelivery(IssueCreditAndOrRefundToDeliveryRequest) returns (IssueCreditAndOrRefundToDeliveryResponse);
  rpc IssueCreditToConsumerId(IssueCreditToConsumerIdRequest) returns (IssueCreditToConsumerIdResponse);
  rpc CreateMerchantPaymentAdjustmentForDelivery(CreateMerchantPaymentAdjustmentForDeliveryRequest) returns (CreateMerchantPaymentAdjustmentForDeliveryResponse);
  rpc IssueReferreeCreditToConsumerId(IssueReferreeCreditToConsumerIdRequest) returns (IssueReferreeCreditToConsumerIdResponse);
  rpc IssueDriveMerchantPaymentAdjustment(IssueDriveMerchantPaymentAdjustmentRequest) returns (IssueDriveMerchantPaymentAdjustmentResponse);
}

message IssueCreditAndOrRefundToDeliveryRequest {
  oneof refund_amount_or_full_refund {
    int32 consumer_refund = 1;
    bool provide_full_refund = 2; // do not use this if want to set fullRefund, use field full_refund_to_original_payment_methods
  }
  int32 consumer_credits = 3;
  string delivery_id = 4;
  int64 created_by_id = 5;
  string description = 6;
  string idempotency_key = 7;
  string error_category = 8;
  bool subtract_existing_c_r_from_issuance = 9;
  string jira_approval_link = 10;
  bool full_refund_to_original_payment_methods = 11;
  int32 consumer_hsa_fsa_refund = 12;
  int32 consumer_snap_ebt_refund = 13;
}

message IssueCreditAndOrRefundToDeliveryResponse {
  int64 dispatch_error_id = 1;
  string delivery_id = 2;
  int32 consumer_credits = 3;
  int32 consumer_refund = 4;
  string error_category = 5;
  int32 consumer_hsa_fsa_refund = 6;
  int32 consumer_snap_ebt_refund = 7;
}

message IssueCreditToConsumerIdRequest {
  int64 consumer_id = 1;
  int32 consumer_credits = 2;
  string currency = 3;
  int64 created_by_id = 4;
  string description = 5;
  string idempotency_key = 6;
  string jira_approval_link = 7;
  string credit_type_enum_value = 8;
}

message IssueCreditToConsumerIdResponse {
  int64 consumer_id = 1;
  int32 consumer_credits = 2;
  string credit_type_enum_value = 3;
}

message CreateMerchantPaymentAdjustmentForDeliveryRequest {
  string delivery_uuid_short = 1;
  int32 store_refund = 2;
  int64 store_id = 3;
  string description = 4;
  string idempotency_key = 5;
  string merchant_payment_adjustment_reason = 6;
  google.protobuf.BoolValue should_override_validation_rules = 7;
  google.protobuf.StringValue reason_for_override = 8;
}

message CreateMerchantPaymentAdjustmentForDeliveryResponse {
  int64 dispatch_error_id = 1;
  string delivery_uuid_short = 2;
  int32 store_refund = 3;
}

message IssueReferreeCreditToConsumerIdRequest {
  int64 consumer_id = 1;
  int32 consumer_credits = 2;
  string currency = 3;
  string description = 4;
  string idempotency_key = 5;
  string jira_approval_link = 6;
}

message IssueReferreeCreditToConsumerIdResponse {
  int64 consumer_id = 1;
  int32 consumer_credits = 2;
}

message IssueDriveMerchantPaymentAdjustmentRequest {
  google.protobuf.Int64Value drive_order_id = 1;
  int32 store_refund = 2;
  google.protobuf.Timestamp submission_date = 3;
  string description = 4;
  string idempotency_key = 5;
  google.protobuf.Int64Value delivery_id = 6;
  google.protobuf.Int64Value store_id = 7;
}

message IssueDriveMerchantPaymentAdjustmentResponse {
  int64 dispatch_error_id = 1;
  google.protobuf.Int64Value drive_order_id = 2;
  int32 store_refund = 3;
  google.protobuf.Int64Value delivery_id = 4;
}
