syntax = "proto3";

package revenue_platform.wolt.v1;

import "google/protobuf/timestamp.proto";
import "revenue_platform/wolt/common.proto";

option java_multiple_files = true;

// Data generated automatically by invoicing-service when an invoice becomes
// official.
message InvoiceFiling {
  // Unique identifier for the invoice
  string invoice_id = 1;

  // Identifier for the invoice PDF in Wolf system
  string pdf_wolf_id = 2;

  // Date when the invoice was issued
  google.protobuf.Timestamp issuing_date = 3;

  // TODO: Remove? Identifier for the HTML version of the invoice
  string html_wolf_id = 6;

  // External system invoice identifier
  string external_invoice_id = 7;

  // Warning: Tax reporting fields are mutable based on timing of posting to
  // Kafka.
  // Serbia tax reporting information
  SerbiaReporting srb_tax_reporting = 8;

  // Croatia tax reporting information
  CroatiaReporting hrv_tax_reporting = 9;

  // Greece tax reporting information
  GreeceReporting grc_tax_reporting = 10;

  // Slovenia tax reporting information
  SloveniaReporting svn_tax_reporting = 11;

  // Kazakhstan tax reporting information
  KazakhstanReporting kaz_tax_reporting = 12;

  // Albania tax reporting information
  AlbaniaReporting alb_tax_reporting = 13;

  // Israel tax reporting information
  IsraelReporting isr_tax_reporting = 14;

  // com.wolt.api.taxintegration.v1.UzbekistanReporting uzb_tax_reporting = 15;
  // Temporarily commented out
}

// Serbia tax reporting information
message SerbiaReporting {
  // URL returned by the Serbian tax authorities for verification
  string verification_link = 1;

  // QR code for verification from Serbian tax authorities
  string verification_qr_code = 2;

  // Salesforce invoice number
  string sfdc_invoice_number = 3;

  // Salesforce invoice counter
  string sfdc_invoice_counter = 4;

  // Timestamp of when the invoice was processed in SFDC
  google.protobuf.Timestamp sfdc_time = 5;

  // List of tax items related to the invoice
  repeated SerbiaTaxItem tax_items = 6;

  // Cashier's name handling the transaction
  string cashier = 7;

  // Name of the shop issuing the invoice
  string shop_name = 8;

  // ESIR timestamp for the invoice
  string esir_time = 9;

  // ESIR number for the invoice
  string esir_number = 10;

  // Journal reference for the transaction
  string journal = 11;
}

// Represents a tax item in Serbia
message SerbiaTaxItem {
  // Label for the tax category
  string category_label = 1;

  // Name of the tax category
  string category_name = 2;

  // Applicable tax rate for the item
  string tax_rate = 3;

  // Amount for the item before tax
  string amount = 4;
}

// Croatia tax reporting information
message CroatiaReporting {
  // ZKI code for Croatian tax reporting
  string zki_code = 1;

  // JIR code for Croatian tax reporting
  string jir_code = 2;

  // QR code for Croatian tax reporting
  string qr_code = 3;

  // URL for Croatian tax reporting QR code
  string qr_code_url = 4;
}

// Greece tax reporting information
message GreeceReporting {
  // URL to access the Greek tax reporting QR code
  string qr_code_url = 1;

  // Unique identifier for the Greek tax report
  string uid = 2;

  // Authentication code for accessing the report
  string authentication_code = 3;

  // Tax mark indicating the status of the report
  string mark = 4;

  // Information about the service provider
  string provider_info = 5;

  // Whether the Greek tax reporting was successful
  bool success = 6;

  // com.wolt.type.v1.GreeceTaxReportingTransmissionFailure transmission_failure
  // = 7; Temporarily commented out
}

// Slovenia tax reporting information
message SloveniaReporting {
  // ZOI code for Slovenian tax reporting
  string zoi_code = 1;

  // Unique invoice identification code for Slovenia
  string eor_code = 2;

  // QR content for Slovenian tax reporting
  string qr_content = 3;
}

// Kazakhstan tax reporting information
message KazakhstanReporting {
  // Business ID of the issuer
  string bin = 1;

  // Unique number of the CashBox
  string znk = 2;

  // Registration number of the CashBox with tax authority
  string rnc = 3;

  // Serial number of the receipt from the tax authority
  string check_order_number = 4;

  // Fiscal feature code for the receipt
  string check_number = 5;

  // Name of the fiscal data operator
  string data_operator = 6;

  // Address where the cash register is used
  string address = 7;

  // URL to access the encoded ticket information
  string ticket_url = 8;

  // Whether the receipt was generated offline
  bool offline_mode = 9;

  // Date and time when the purchase was made
  string date_time = 10;

  // URL to print the receipt
  string ticket_print_url = 11;

  // Identity number of the CashBox
  string identity_number = 12;
}

// Albania tax reporting information
message AlbaniaReporting {
  // IIC code for Albanian tax reporting
  string iic_code = 1;

  // URL for Albanian tax reporting QR code
  string qr_code_url = 2;

  // FIC code for Albanian tax reporting
  string fic_code = 3;

  // Operator code for Albanian tax reporting
  string operator_code = 4;

  // Business unit code for Albanian tax reporting
  string business_unit_code = 5;
}

// Israel tax reporting information
message IsraelReporting {
  // Allocation number for Israel tax reporting
  string allocation_number = 1;
}
