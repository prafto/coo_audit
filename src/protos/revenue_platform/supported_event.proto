syntax = "proto3";
// buf:lint:ignore DIRECTORY_SAME_PACKAGE
package revenue_platform.supported_event.v1;

import "consumer_financials_platform/event_v1.proto";
import "consumer_service/subscription_event.proto";
import "dasher_service/dasher_liability_event.proto";
import "drive_protobuf/events/revenue_platform.proto";
import "experience_reliability_service/dispatch_error_event.proto";
import "google/protobuf/wrappers.proto";
import "merchant_financial_service/store_payment_service.proto";
import "order/cx_revenue_ledger.proto";
import "order/event.proto";
import "order/order_lifecycle.proto";
import "payment/event.proto";
import "payout_platform/payment_program_v1.proto";
import "revenue_platform/reset_aggregator_event.proto";
import "revenue_platform/timer_event.proto";
import "revenue_platform/wolt/invoice_response.proto";
import "state_change_events/delivery_state_change.proto";
import "task_service/task_lifecycle_events.proto";

// Event for upstream dependency
message SupportedEvent {
  // Event name
  reserved 1;
  reserved "event_name"; // Deprecated google.protobuf.StringValue event_name = 1;

  // One of attribute name from upstream class, used by Configurator
  google.protobuf.StringValue one_of_attribute_name = 2;

  // Payload attribute name from upstream class, used by Configurator
  reserved 3;
  reserved "payload_attribute_name"; // Deprecated google.protobuf.StringValue payload_attribute_name = 3;

  // Kafka topic name, used by Archiver
  google.protobuf.StringValue kafka_topic = 4;

  // Config property prefix, used by Archiver
  google.protobuf.StringValue config_property_prefix = 5;

  // Metric prefix, used by Archiver
  google.protobuf.StringValue metric_prefix = 6;

  // Whether this is upstream event, used by Archiver
  google.protobuf.BoolValue is_upstream_event = 7;

  // Sink type, used by Archiver
  AnalyticsSinkType analytics_sink_type = 8;

  // Upstream dependency
  oneof event {
    // Payment Event
    doordash.payment.event.PaymentEvent payment_event = 9;
    // Merchant Order Event
    order_service.MerchantOrderEvent merchant_order_event = 10;
    // Customer Order Event
    order_service.CxOrderEvent cx_order_event = 11;
    // Dasher Liability Event
    dasher_service.dasher_liability.DasherLiabilityEvent dasher_liability_event = 12;
    // Dispatch Error Event
    experience_reliability_service.DispatchErrorEvent dispatch_error_event = 13;
    // Store Payment Event
    store_payment.StorePaymentEvent store_payment_event = 14;
    // Merchant Order Delivery Event
    order_service.MerchantOrderDeliveryEvent merchant_order_delivery_event = 15;
    // Subscription Event
    doordash_consumer_service.subscription.SubscriptionEvent subscription_event = 16;
    // Drive Event
    com.doordash.drive.events.revenue_platform.v1.DriveEvent drive_event = 17;
    // Payout Event
    doordash.payment.payout.v2.PayoutEvent payout_event = 18;
    // Delivery Event
    state_change_events.DeliveryEvent delivery_event = 19;
    // Order Lifecycle Event
    order_service.OrderLifecycleEvent order_lifecycle_event = 20;
    // Cx Financials Event
    doordash.consumer_financials_platform.event.v1.ConsumerFinancialsEvent consumer_financials_event = 21;
    // RSL Timer Event
    revenue_platform.event.TimerEvent timer_event = 22;
    // RSL Subscription Adjustment Event
    revenue_platform.event.RslSubscriptionAdjustmentEvent rsl_subscription_adjustment_event = 23;
    // RSL Reset Aggregator Event
    revenue_platform.event.v1.ResetAggregatorEvent reset_aggregator_event = 24;
    // Task Lifecycle Events
    task_service.v2.TaskServiceLifecycleEvent task_lifecycle_event = 26;
    // Fin eng 2.0 UpstreamTimerEvent
    revenue_platform.event.UpstreamTimerEvent upstream_timer_event = 27;

    // Wolt invoice response
    revenue_platform.wolt.v1.InvoiceResponse wolt_invoice_response = 28;
  }

  // Event Type
  EventTypeList event_type_list = 25;

  // Analytics sink type
  enum AnalyticsSinkType {
    // Unspecified
    ANALYTICS_SINK_TYPE_UNSPECIFIED = 0;
    // Both sinks
    ANALYTICS_SINK_TYPE_DELTA_AND_PARQUET = 1;
    // Delta sink
    ANALYTICS_SINK_TYPE_DELTA = 2;
    // Parquet sink
    ANALYTICS_SINK_TYPE_PARQUET = 3;
    // No sink is enabled
    ANALYTICS_SINK_TYPE_NONE = 4;
  }

  // Event type List
  message EventTypeList {
    // List of event types
    repeated EventType event_type = 1;
  }

  // Event type
  message EventType {
    // Event name
    google.protobuf.StringValue event_name = 1;
    // Allow Level
    AllowLevel allow_level = 2;
    // Payload attribute name from upstream class, used by Configurator
    google.protobuf.StringValue payload_attribute_name = 3;

    // Allow level
    enum AllowLevel {
      // Unspecified
      ALLOW_LEVEL_UNSPECIFIED = 0;
      // Not allowed in any environment.
      ALLOW_LEVEL_BLOCKED = 1;
      // The level to set if the events should be sourced only for archiver
      ALLOW_LEVEL_ARCHIVER = 2;
      // The level to set if the events should be sourced only till Alpha
      ALLOW_LEVEL_ALPHA = 3;
      // The level to set if the events should be sourced only till BETA
      ALLOW_LEVEL_BETA = 4;
      // The level to set if we need it in all environments (ALPHA, BETA, UAT and PROD)
      ALLOW_LEVEL_PROD = 5;
    }
  }
}
