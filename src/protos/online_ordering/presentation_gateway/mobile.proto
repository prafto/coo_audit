syntax = "proto3";

package online_ordering.v1;

import "doordash.api/annotations.proto";
import "google/api/annotations.proto";
import "google/protobuf/wrappers.proto";
import "online_ordering/presentation_gateway/app_metadata.proto";
import "online_ordering/presentation_gateway/common.proto";
import "online_ordering/presentation_gateway/create_jwt.proto";
import "online_ordering/presentation_gateway/push_notifications.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.online_ordering.v1";

/*
 *  Expose UG/PG APIs for Online Ordering
 */
// buf:lint:ignore SERVICE_SUFFIX
// APIs for Online Ordering Owned by Mobile Team
service Mobile {
  //annotated with the doordash.api.service option for metadata and traffic routing
  option (doordash.api.service) = {
    port: 50051
    name_spaces: ["online-ordering"]
    owner: {
      name: "storefront-mobile-team"
      id: "storefront-integrations"
      slack_channel: "#eng-storefront-integrations-monitoring"
      email_alias: "rx-services-order-experience-eng@doordash.com"
    }
    target_products: [
      CX,
      MX
    ]
  };

  // create jwt
  rpc CreateJwt(CreateJwtRequest) returns (CreateJwtResponse) {
    option (google.api.http) = {
      post: "/online-ordering/v1/create-jwt"
      body: "*"
    };
    option (doordash.api.endpoint) = {
      hostname: "online-ordering-v1-mobile-create-jwt.service.prod.ddsd"
      port: 50051
      tier: T1
      lifecycle: DEV
      target_products: [
        CX,
        MX
      ]
      authorization: [NONE]
      presentation_gateway_endpoint: true
    };
  }

  // register crm device
  rpc RegisterCrmDevice(RegisterCrmDeviceRequest) returns (RegisterCrmDeviceResponse) {
    option (google.api.http) = {
      post: "/online-ordering/v1/register-crm-device"
      body: "*"
    };
    option (doordash.api.endpoint) = {
      hostname: "online-ordering-v1-mobile-register-crm-device.service.prod.ddsd"
      port: 50051
      tier: T1
      lifecycle: DEV
      target_products: [
        CX,
        MX
      ]
      authorization: [DEVELOPER]
    };
  }
  // push user event crm
  rpc PublishCrmUserEvent(PublishCrmUserEventRequest) returns (PublishCrmUserEventResponse) {
    option (google.api.http) = {
      post: "/online-ordering/v1/publish-crm-user-event"
      body: "*"
    };
    option (doordash.api.endpoint) = {
      hostname: "online-ordering-v1-mobile-publish-crm-user-event.service.prod.ddsd"
      port: 50051
      tier: T1
      lifecycle: DEV
      target_products: [
        CX,
        MX
      ]
      authorization: [DEVELOPER]
    };
  }

  // Retrieves application metadata for the mobile client
  // Provides configuration, UI elements, and feature flags needed to initialize the app
  // Includes authentication URLs, loyalty program details, and account settings
  rpc GetAppMetadata(GetAppMetadataRequest) returns (GetAppMetadataResponse) {
    option (google.api.http) = {get: "/online-ordering/v1/app-metadata"};
    option (doordash.api.endpoint) = {
      hostname: "online-ordering-v1-mobile-get-app-metadata.service.prod.ddsd"
      port: 50051
      tier: T1
      lifecycle: DEV
      target_products: [
        CX,
        MX
      ]
      authorization: [DEVELOPER]
    };
  }
}
