syntax = "proto3";
package doordash.growth.notification_hub.v1;

import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.growth.notification_hub";

// Iguazu event published for analytics purposes
message GrowthNotificationHubAnalyticsEvent {
  // Unique id of the notification
  string id = 1;
  // Consumer id of the user
  string consumer_id = 2;
  // Message type of the notification
  string message_type = 3;
  // Sub message type of the notification
  string sub_message_type = 4;
  // Id of the notification template
  string template_id = 5;
  // Type of the notification template
  string template_type = 6;
  // Id of the campaign (DD promo notification specific)
  string campaign_id = 7;
  // Title of the notification message
  string text_title = 8;
  // Sub title of the notification message
  string text_sub_title = 9;
  // Description of the notification message
  string text_description = 10;
  // Accessory of the notification message
  string text_accessory = 11;
  // Url of the image
  string image_url = 12;
  // Accessory of the image
  string image_accessory = 13;
  // Redirect url after clicking
  string action_url = 14;
  // Expiration time of the notification
  google.protobuf.Timestamp expiration_time = 15;
  // Creation time of the notification
  google.protobuf.Timestamp created_at = 16;
  // Update time of the notification
  google.protobuf.Timestamp updated_at = 17;
  // The model we create and show notifications on the hub
  HubNotificationModel notification_model = 18;
  // Stage of the notification
  HubNotificationStage stage = 19;
  // Context for the stage change of the notification
  string context = 20;
  // json string for the hub notification metadata including placeholders, custom and children
  string metadata = 21;
}

// Stage Enum of the Hub notification
enum HubNotificationStage {
  // Default stage value for hub notification
  HUB_NOTIFICATION_STAGE_UNSPECIFIED = 0;
  // Create stage for hub notification
  HUB_NOTIFICATION_STAGE_CREATE = 1;
  // Update stage for hub notification
  HUB_NOTIFICATION_STAGE_UPDATE = 2;
  // Delete stage for hub notification
  HUB_NOTIFICATION_STAGE_DELETE = 3;
}

// The model we create and show notifications on the hub
enum HubNotificationModel {
  // Default value for hub notification model
  HUB_NOTIFICATION_MODEL_UNSPECIFIED = 0;
  // Notifications are pushed through EP (Engagement Platform) and FPN (First Party Notification), or Journey Service (e.g. MxP (Merchant Promotion))
  HUB_NOTIFICATION_MODEL_PUSH_MODEL = 1;
  // notifications directly pulled from campaign manager through promo service (e.g. SODP (Summer Of DashPass))
  HUB_NOTIFICATION_MODEL_PULL_MODEL = 2;
}

// Iguazu event published for deduped hub notification
message GrowthNotificationHubDedupAnalyticsEvent {
  // Unique id of the notification
  string id = 1;
  // Consumer id of the user
  string consumer_id = 2;
  // algorithm used for dedup
  DedupAlgo dedup_algo = 3;
  // Creation time of the notification
  google.protobuf.Timestamp dedup_at = 4;
}

// algorithm used for hub notification dedup
enum DedupAlgo {
  // Default value for unspecified dedup algo
  DEDUP_ALGO_UNSPECIFIED = 0;
  // dedup by notification template_id and metadata
  DEDUP_ALGO_TEMPLATE_AND_METADATA = 1;
  // dedup after hydration
  DEDUP_ALGO_AFTER_HYDRATION = 2;
}

// staleness check event to log hidden or fallback notifications
message GrowthNotificationHubStalenessCheckEvent {
  // used for deprecated field numbers
  reserved 3, 4;
  // used for deprecated field names
  reserved "template_id", "template_type";
  // Unique id of the notification
  string id = 1;
  // Consumer id of the user
  string consumer_id = 2;
  // Id of the campaign (DD promo notification specific)
  string campaign_id = 5;
  // staleness resolution of the notification
  StalenessResolution resolution = 6;
  // Creation time of the notification
  google.protobuf.Timestamp notification_created_at = 7;
  // Id of the notification template
  string notification_template_id = 8;
}

// staleness check decision made for the notification
enum StalenessResolution {
  // Default value for unspecified staleness resolution
  STALENESS_RESOLUTION_UNSPECIFIED = 0;
  // hide if the notification is stale
  STALENESS_RESOLUTION_HIDE = 1;
  // fallback if the notification is stale
  STALENESS_RESOLUTION_FALLBACK = 2;
}
