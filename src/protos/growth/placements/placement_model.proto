syntax = "proto3";
package doordash.growth.placements.v2;

import "google/protobuf/struct.proto";
import "google/protobuf/wrappers.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.growth.placements.v2";

// Enum for placement type
enum PlacementModelType {
  // Unspecified placement type
  PLACEMENT_MODEL_TYPE_UNSPECIFIED = 0;
  // Universal Savings Interface (USI) placement type
  PLACEMENT_MODEL_TYPE_USI_ITEM = 1;
  // Carousel placement type
  PLACEMENT_MODEL_TYPE_CAROUSEL_ITEM = 2;
  // Single Line Item placement type
  PLACEMENT_MODEL_TYPE_SINGLE_LINE_ITEM = 3;
  // Engagement Milestone Item placement type
  PLACEMENT_MODEL_TYPE_ENGAGEMENT_MILESTONE_ITEM = 4;
}

// Enum for button type
enum ButtonType {
  // unspecified button type
  BUTTON_TYPE_UNSPECIFIED = 0;
  // primary button type
  BUTTON_TYPE_PRIMARY = 1;
  // secondary button type
  BUTTON_TYPE_SECONDARY = 2;
  // save store for later button type
  BUTTON_TYPE_SAVE = 3;
  // linked text button type
  BUTTON_TYPE_LINKED_TEXT = 4;
  // flat secondary button type
  BUTTON_TYPE_FLAT_SECONDARY = 5;
  // disabled text button type
  BUTTON_TYPE_DISABLED_TEXT = 6;
}

// Enum for action type
enum ActionType {
  // unspecified action type
  ACTION_TYPE_UNSPECIFIED = 0;
  // navigate action type
  ACTION_TYPE_NAVIGATE = 1;
  // bottom sheet action type
  ACTION_TYPE_BOTTOM_SHEET = 2;
  // claim promotion
  ACTION_TYPE_CLAIM = 3;
  // auxiliary modal action type
  ACTION_TYPE_AUXILIARY_MODAL = 4;
}

// Placements data model
message PlacementModel {
  // placement name
  google.protobuf.StringValue id = 1;
  // placement type
  PlacementModelType type = 2;
  // text title
  Text title = 3;
  // text description
  Text description = 4;
  // button object array
  repeated Button buttons = 5;
  // head icon name
  Icon head_icon = 6;
  // tail icon name
  Icon tail_icon = 7;
  // styling object
  Styling styling = 8;
  // logging dictionary
  map<string, string> logging = 9;
  // custom struct
  google.protobuf.Struct custom = 10;
  // placement model layout variant
  google.protobuf.StringValue layout_variant = 11;
  // List of images
  repeated Image images = 12;
  // Associated action, if any
  Action action = 13;
  // Benefit category associated with placement
  BenefitCategory benefit_category = 14;
  // Number of redemptions for placement, if any
  google.protobuf.Int32Value redemption_count = 15;
}

// enum for benefit category
enum BenefitCategory {
  // unspecified
  BENEFIT_CATEGORY_UNSPECIFIED = 0;
  // deals
  BENEFIT_CATEGORY_DEALS = 1;
  // benefits
  BENEFIT_CATEGORY_BENEFITS = 2;
  // monthly benefits
  BENEFIT_CATEGORY_MONTHLY_BENEFITS = 3;
  // rewards
  BENEFIT_CATEGORY_REWARDS = 4;
  // dashpass benefit
  BENEFIT_CATEGORY_DASHPASS_BENEFITS = 5;
  // affordability/pad benefit
  BENEFIT_CATEGORY_AFFORDABILITY_BENEFITS = 6;
}

// Text object
message Text {
  // display string
  google.protobuf.StringValue copy = 1;
  // head icon name
  Icon head_icon = 2;
  // tail icon name
  Icon tail_icon = 3;
  // styling object
  Styling styling = 4;
  // type of text e.g. title, description etc
  TextType type = 5;
}

// Button object
message Button {
  // Text object representing the button title
  Text title = 1;
  // type of button
  ButtonType type = 2;
  // action object
  Action action = 3;
  // icon object
  Icon icon = 4;
  // whether or not to gray out this button
  ButtonStatus status = 5;
  // custom struct
  google.protobuf.Struct custom = 6;
}

// enum for button status
enum ButtonStatus {
  // default
  BUTTON_STATUS_UNSPECIFIED = 0;
  // button is clickable
  BUTTON_STATUS_UNCLAIMED = 1;
  // button is grayed out
  BUTTON_STATUS_CLAIMED = 2;
}

// Action object
message Action {
  // uri, to be used for deeplink to trigger action on FE client side
  google.protobuf.StringValue uri = 1;
  // type of action
  ActionType type = 2;
  // custom struct for adding additional info
  google.protobuf.Struct custom = 3;
}

// Icon object
message Icon {
  // name of icon, maps directly to prism
  google.protobuf.StringValue name = 1;
  // icon color string that will map directly to prism
  google.protobuf.StringValue color = 2;
  // image url to display instead of prism icon
  google.protobuf.StringValue image_url = 3;
  // custom struct for adding additional info to the existing icon e.g. bolt-icon with some numeric value
  google.protobuf.Struct custom = 4;
  // title used by flat secondary button
  Text title = 5;
}

// Styling object
message Styling {
  // background color prism token, maps directly to prism
  google.protobuf.StringValue background_color = 1;
  // foreground color prism token, maps directly to prism
  google.protobuf.StringValue foreground_color = 2;
  // textstyle that will map directly to prism
  google.protobuf.StringValue text_style = 3;
}

// Image message type - for images from server side
message Image {
  // (optional) unique identifier - in case of multiple images
  google.protobuf.StringValue id = 1;
  // URI for image
  google.protobuf.StringValue uri = 2;
  // Placeholder text / string
  google.protobuf.StringValue placeholder = 3;
  // Placeholder local asset identifier (in case)
  google.protobuf.StringValue local = 4;
}

// enum for text type
enum TextType {
  // default
  TEXT_TYPE_UNSPECIFIED = 0;
  // title text
  TEXT_TYPE_TITLE = 1;
  // description text
  TEXT_TYPE_DESCRIPTION = 2;
}
