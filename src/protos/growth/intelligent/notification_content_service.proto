syntax = "proto3";
package doordash.growth.intelligent.v1;

import "common/common.proto";
import "common/service_client_config.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "growth/common/common.proto";
import "growth/intelligent/gen_ai.proto";
import "promotion/incentive.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.growth.intelligent";

// Service definition for notification content grpc service
service NotificationContentService {
  // Endpoint to upsert notification content
  rpc SaveNotificationContent(SaveNotificationContentRequest) returns (SaveNotificationContentResponse);
  // Endpoint to trigger notification content ingestion
  rpc IngestNotificationContent(IngestNotificationContentRequest) returns (IngestNotificationContentResponse);
  // Endpoint to trigger notification content delivery from list of specification
  rpc DeliverNotificationContent(DeliverNotificationContentRequest) returns (DeliverNotificationContentResponse);
  // Endpoint to trigger batch notification content ingestion v1
  rpc BatchIngestNotificationContentV1(BatchIngestNotificationContentV1Request) returns (BatchIngestNotificationContentV1Response);
  // Endpoint to trigger batch notification content delivery v1 from list of specification
  rpc BatchDeliverNotificationContentV1(BatchDeliverNotificationContentV1Request) returns (BatchDeliverNotificationContentV1Response);
  // Endpoint to get notification contents
  rpc GetAllNotificationContents(GetAllNotificationContentsRequest) returns (GetAllNotificationContentsResponse);
  // Endpoint to get notification contents for marketing data feed (e.g. Braze)
  rpc GetGrowthDataFeed(GetGrowthDataFeedRequest) returns (GetGrowthDataFeedResponse);
  // Endpoint to get notification contents for Try Something New - Everywhere
  rpc GetGrowthTrySomethingNewData(GetGrowthTrySomethingNewDataRequest) returns (GetGrowthTrySomethingNewDataResponse);
  // Endpoint to debug evergreen notification
  rpc DebugEvergreenNotification(DebugEvergreenNotificationRequest) returns (DebugEvergreenNotificationResponse);
  // Endpoint to debug mxp notification
  rpc DebugMxPNotification(DebugMxPNotificationRequest) returns (DebugMxPNotificationResponse);
  // Endpoint to debug deliver notification content with synchronize call
  rpc DebugDeliverNotificationContent(DebugDeliverNotificationContentRequest) returns (DebugDeliverNotificationContentResponse);
  // Enedpoint to debug GenerateGenAiContentEvent
  rpc DebugGenerateGenAiContentEvent(DebugGenerateGenAiContentEventRequest) returns (DebugGenerateGenAiContentEventResponse);
  // Endpoint to save notification history
  rpc SaveNotificationHistory(SaveNotificationHistoryRequest) returns (SaveNotificationHistoryResponse);
}

// Request to ingest notification content
message IngestNotificationContentRequest {
  // audience id
  google.protobuf.StringValue audience_id = 1;
  // audience type
  .growth.common.v1.NotificationAudienceType audience_type = 2;
  // ingestion contents
  repeated IngestionContent ingestion_contents = 3;
  // program name
  google.protobuf.StringValue program_name = 4;
  // Journey tracking attributes
  JourneyTrackingAttributes journey_tracking_attributes = 5;
  // Batch ID
  google.protobuf.StringValue batch_id = 6;
}

// Request to batch ingest notification content v1
message BatchIngestNotificationContentV1Request {
  // audience ids
  repeated google.protobuf.StringValue audience_ids = 1;
  // audience type
  .growth.common.v1.NotificationAudienceType audience_type = 2;
  // ingestion contents
  repeated IngestionContent ingestion_contents = 3;
  // program name
  google.protobuf.StringValue program_name = 4;
  // Journey tracking attributes
  JourneyTrackingAttributes journey_tracking_attributes = 5;
}

// IngestionContent
message IngestionContent {
  // notification type
  NotifType notification_type = 1;
  // other fields for future requirements
}

// Response of ingest notification content
message IngestNotificationContentResponse {}

// Response of debug GenerateGenAiContentEvent
message DebugGenerateGenAiContentEventRequest {
  // event of GenerateGenAiContentEvent
  GenerateGenAiContentEvent event = 1;
}

// Response of debug GenerateGenAiContentEvent
message DebugGenerateGenAiContentEventResponse {
  // returned message
  google.protobuf.StringValue message = 1;
}

// Response of batch ingest notification content v1
message BatchIngestNotificationContentV1Response {}

// Request to deliver notification content
message DeliverNotificationContentRequest {
  reserved 6;
  reserved "notification_content_type";
  // audience id
  google.protobuf.StringValue audience_id = 1;
  // audience type
  .growth.common.v1.NotificationAudienceType audience_type = 2;
  // specifications for candidate contents to deliver
  repeated DeliverySpecification specifications = 3;
  // program name
  google.protobuf.StringValue program_name = 4;
  // Journey tracking attributes
  JourneyTrackingAttributes journey_tracking_attributes = 5;
  // Program type
  ProgramType program_type = 7;
}

// Request to deliver notification batch content v1
message BatchDeliverNotificationContentV1Request {
  reserved 1;
  reserved "audience_ids";
  // audience type
  .growth.common.v1.NotificationAudienceType audience_type = 2;
  // specifications for candidate contents to deliver
  repeated DeliverySpecification specifications = 3;
  // program name
  google.protobuf.StringValue program_name = 4;
  // Journey tracking attributes
  JourneyTrackingAttributes journey_tracking_attributes = 5;
  // Program type
  ProgramType program_type = 6;
  // audience ids as list
  repeated google.protobuf.StringValue audience_ids_list = 7;
}

// Delivery specification
message DeliverySpecification {
  // notification type
  NotifType notification_type = 1;
  // start hour (local time) - earliest hour of day to deliver the carousel notification
  google.protobuf.Int32Value start_hour = 2;
  // end hour (local time) - latest hour of day to deliver the carousel notification
  google.protobuf.Int32Value end_hour = 3;
  // use best time to send determined by ML model. If not enabled, use start_hour and end_hour
  google.protobuf.BoolValue use_btts = 4;
  // push template id. If not set, skip sending push
  google.protobuf.StringValue push_template_id = 5;
  // hub template id. If not set, skip sending hub
  google.protobuf.StringValue hub_template_id = 6;
  // landing page type
  LandingPageType landing_page_type = 7;
}

// Response of deliver notification content
message DeliverNotificationContentResponse {
  // status of the delivery
  DeliveryStatus status = 1;
}

// Response of batch deliver notification content
message BatchDeliverNotificationContentV1Response {
  // status of the delivery
  DeliveryStatus status = 1;
}

// Landing page type
enum LandingPageType {
  //unspecified
  LANDING_PAGE_TYPE_UNSPECIFIED = 0;
  // store landing
  LANDING_PAGE_TYPE_STORE = 1;
  // carousel landing
  LANDING_PAGE_TYPE_CAROUSEL = 2;
}

// Delivery status
enum DeliveryStatus {
  // unspecified
  DELIVERY_STATUS_UNSPECIFIED = 0;
  // enqueued
  DELIVERY_STATUS_ENQUEUED = 1;
  // failure
  DELIVERY_STATUS_ERROR = 2;
  // no content found
  DELIVERY_STATUS_NO_CONTENT = 3;
  // delivery status duplicated
  DELIVERY_STATUS_DUPLICATE = 4;
}

// Program type
enum ProgramType {
  // unspecified
  PROGRAM_TYPE_UNSPECIFIED = 0;
  // evergreen
  PROGRAM_TYPE_EVERGREEN = 1;
  // MxP
  PROGRAM_TYPE_MXP = 2;
}

// Request to upsert notification content
message SaveNotificationContentRequest {
  // consumer id
  google.protobuf.Int64Value consumer_id = 1;
  // lat
  google.protobuf.DoubleValue latitude = 2;
  // lng
  google.protobuf.DoubleValue longitude = 3;
  // notification type
  NotifType notification_type = 4;
  // notification content
  NotifContent notification_content = 5;
}

// Response of upsert notification content
message SaveNotificationContentResponse {
  // consumer id
  google.protobuf.Int64Value consumer_id = 1;
  // geo hash from lat/lng
  google.protobuf.StringValue geo_hash = 2;
  // notification type
  NotifType notification_type = 3;
  // updated at
  google.protobuf.Timestamp updated_at = 4;
}

// Request to get notification contents
message GetAllNotificationContentsRequest {
  // consumer id
  google.protobuf.Int64Value consumer_id = 1;
  // lat
  google.protobuf.DoubleValue latitude = 2;
  // lng
  google.protobuf.DoubleValue longitude = 3;
  // to query contents with updated_at >= (current time - freshness_days)
  google.protobuf.Int32Value freshness_days = 4;
  // notification type
  NotifType notification_type = 5; // optional
  // include closed stores
  google.protobuf.BoolValue include_closed_stores = 6;
  // delivery channel. Used to identify the source pipeline to fetch data from.
  DeliveryChannel channel = 7;
  // number of stores to return
  google.protobuf.Int64Value stores_count = 8;
  // exclude stores that are out of search radius. Use for small traffic as it invokes search service API.
  google.protobuf.BoolValue exclude_unreachable_stores = 9;
}

// Response of get notification contents
message GetAllNotificationContentsResponse {
  // consumer id
  google.protobuf.Int64Value consumer_id = 1;
  // geo hash from lat/lng
  google.protobuf.StringValue geo_hash = 2;
  // notification contents query results
  repeated NotificationContentResponseData contents = 3;
}

// Each notification content query result
message NotificationContentResponseData {
  // notification type
  NotifType notification_type = 1;
  // notification content
  NotifContent notification_content = 2;
  // updated at
  google.protobuf.Timestamp updated_at = 3;
}

// Type of notification
enum NotifType {
  // unspecified format
  NOTIF_TYPE_UNSPECIFIED = 0;
  // Under two dollar delivery fee
  NOTIF_TYPE_UNDER_TWO_DOLLAR_DELIVERY = 1;
  // Hottest 10 nearby
  NOTIF_TYPE_HOTTEST_TEN = 2;
  // Try something new
  NOTIF_TYPE_TRY_SOMETHING_NEW = 3;
  // GNN v2 based try something new
  NOTIF_TYPE_GNN_MX_YOU_MAY_LIKE = 4;
  // GNN v2 based store you may like
  NOTIF_TYPE_GNN_STORE_YOU_MAY_LIKE = 5;
  // GNN based visited store
  NOTIF_TYPE_GNN_STORE_YOU_VISITED = 6;
  // GNN v3 based try something new
  NOTIF_TYPE_GNN_V3_TRY_SOMETHING_NEW = 7;
  // Inspired by your past orders
  NOTIF_TYPE_INSPIRED_BY_YOUR_PAST_ORDERS = 8;
  // National fav
  NOTIF_TYPE_NATIONAL_FAVORITES = 9;
  // Most popular local restaurants
  NOTIF_TYPE_MOST_POPULAR_LOCAL_RESTAURANTS = 10;
  // Now on DD
  NOTIF_TYPE_NOW_ON_DOORDASH = 11;
  // Generic try something new
  NOTIF_TYPE_GENERIC_TRY_SOMETHING_NEW = 12;
  // GNN v2 retrained store you may like
  NOTIF_TYPE_GNN_V2_RETRAINED_TRY_SOMETHING_NEW = 13;
  // Summer of DashPass Platinum Mx
  NOTIF_TYPE_PLATINUM_MX = 14;
  // Summer of DashPass Local Heros Mx
  NOTIF_TYPE_LOCAL_HEROS_MX = 15 [deprecated = true];
  // Summer of DashPass Immersive Spotlight
  NOTIF_TYPE_IMMERSIVE_SPOTLIGHT = 16;
  // Summer of DashPass Local Heroes Mx
  NOTIF_TYPE_LOCAL_HEROES_MX = 17;
  // Notification type for MxP
  NOTIF_TYPE_MXP = 18;
}

// Request to get growth data feed
message GetGrowthDataFeedRequest {
  // Unique identifier for the consumer.
  google.protobuf.Int64Value consumer_id = 1;

  // Identifier for the specific data feed type to fetch.
  DataFeedType data_feed_type = 2;

  // The maximum number of items to retrieve, default is 10
  google.protobuf.Int32Value max_items = 3;

  // Flags for performing various eligibility checks.
  EligibilityCheckFlag eligibility_check_flag = 4;

  // Delivery channel for the data feed.
  DeliveryChannel delivery_channel = 5;
}

// Request to get growth TSN
message GetGrowthTrySomethingNewDataRequest {
  // Unique identifier for the consumer.
  google.protobuf.Int64Value consumer_id = 1;

  // The maximum number of items to retrieve, default is 10
  google.protobuf.Int32Value max_items = 2;

  // Flags for performing various eligibility checks.
  EligibilityCheckFlag eligibility_check_flag = 3;
}

// Enum for data feed types supported for fetching growth data feed.
enum DataFeedType {
  // Unspecified data feed type
  DATA_FEED_TYPE_UNSPECIFIED = 0;
  // Summer of DashPass Platinum Mx data feed type
  DATA_FEED_TYPE_PLATINUM_MX = 1;
  // Summer of DashPass Local Heroes Mx data feed type
  DATA_FEED_TYPE_LOCAL_HEROES_MX = 2;
  // Summer of DashPass Immersive Spotlight data feed type
  DATA_FEED_TYPE_IMMERSIVE_SPOTLIGHT = 3;
  // Try something new data feed type
  DATA_FEED_TYPE_TRY_SOMETHING_NEW = 4;
  // Merchant has promo data feed type
  DATA_FEED_TYPE_MERCHANT_HAS_PROMO = 5;
}

// EligibilityCheckFlag defines specific checks that need to be performed during the data fetch process.
message EligibilityCheckFlag {
  // If true, check whether the store is within service hours. Default is true if not specified.
  google.protobuf.BoolValue store_hour_check = 1;

  // If true, check whether the store is within Cx address radius. Default is true if not specified.
  google.protobuf.BoolValue store_radius_check = 2;
}

// Response containing data feed stores
message GetGrowthDataFeedResponse {
  // defined a Data feed type
  message GrowthDataFeed {
    // store id
    google.protobuf.Int64Value store_id = 1;
    // store name
    google.protobuf.StringValue store_name = 2;
    //store rank
    google.protobuf.Int64Value store_rank = 3;
    // store header image url
    google.protobuf.StringValue store_header_image_url = 4;
    // store logo image url
    google.protobuf.StringValue store_logo_image_url = 5;
    // store promo data
    PromoInfo promo_info = 6;
  }
  // the list of DataFeed you want to get.
  repeated GrowthDataFeed data_feeds = 1;
}

// Response containing data feed store infos for TSN
message GetGrowthTrySomethingNewDataResponse {
  // defined a Data feed type
  message GrowthTrySomethingNewData {
    // store id
    google.protobuf.Int64Value store_id = 1;
  }
  // the list of DataFeed you want to get.
  repeated GrowthTrySomethingNewData data_feeds = 1;
}

// Delivery channel
enum DeliveryChannel {
  // unspecified format
  DELIVERY_CHANNEL_UNSPECIFIED = 0;
  // for push flow
  DELIVERY_CHANNEL_PUSH = 1;
  // for email flow
  DELIVERY_CHANNEL_EMAIL = 2;
  // for hub flow
  DELIVERY_CHANNEL_HUB = 3;
  // for sms flow
  DELIVERY_CHANNEL_SMS = 4;
}

// Promo info for store as part of GetAllNotificationContentsResponse
message PromoInfo {
  // User facing campaign title (localized by Cx locale by Promotion Service, used by Feed and Hub to display promo info)
  string title = 1;

  // User facing campaign description (localized by Cx locale by Promotion Service)
  string description = 2;

  // needed for store page banner title/desc processing and later Pricing service
  repeated promotion_service.Incentive incentives = 3 [deprecated = true];

  // promo expiration time for eligibility check
  google.protobuf.Timestamp end_time = 4;
}

// Store attributes needed to hydrate notification.
message StoreForNotification {
  // store identifier
  int64 store_id = 1;
  // store name
  google.protobuf.StringValue store_name = 2;
  // sort order of the store
  int64 store_sort_order = 3;
  // url of store image
  google.protobuf.StringValue store_image_url = 4;
  // url for store logo
  google.protobuf.StringValue store_logo_url = 5;
  // promo
  PromoInfo promo = 6;
  // business identifier
  int64 business_id = 7;
  // business vertical identifier
  int64 business_vertical_id = 8;
  // store eta
  int64 store_eta = 9;
  // store distance
  double store_distance = 10;
  // store delivery fee
  int64 store_delivery_fee = 11;
}

// List of stores for notification
message NotifContentStores {
  // Save the top index range (1-100) for the metadata of NotifContentStores.

  // List of stores
  repeated StoreForNotification stores = 101;
}

// Full notification content
message NotifContent {
  // Save the top index range (1-100) for the metadata of NotifContent.

  // List of stores
  NotifContentStores notif_content_stores = 101;
}

// Request to debug evergreen notification
message DebugEvergreenNotificationRequest {
  // consumer id
  google.protobuf.Int64Value consumer_id = 1;
  // program name
  google.protobuf.StringValue program_name = 2;
  // variant name
  google.protobuf.StringValue variant_name = 3;
  // child DV variant name, if there are any
  google.protobuf.StringValue child_variant_name = 4;
  // notification type
  NotifType notification_type = 5;
}

// Response of debug evergreen notification
message DebugEvergreenNotificationResponse {
  // consumer id
  google.protobuf.Int64Value consumer_id = 1;
  // Log and Debug message
  google.protobuf.StringValue debugger_message = 2;
}

// Journey tracking attributes to identify unique journey event
message JourneyTrackingAttributes {
  // Journey uuid
  google.protobuf.StringValue journey_uuid = 1;
  // Journey version
  google.protobuf.StringValue journey_version = 2;
  // Current node uuid on the journey
  google.protobuf.StringValue node_uuid = 3;
  // Current entry uuid on the journey
  google.protobuf.StringValue entry_uuid = 4;
  // Batch ID
  google.protobuf.StringValue batch_id = 5;
}

// Request to debug MxP notification
message DebugMxPNotificationRequest {
  // consumer id
  google.protobuf.Int64Value consumer_id = 1;
  // program name
  google.protobuf.StringValue program_name = 2;
  // variant name
  google.protobuf.StringValue variant_name = 3;
  // child DV variant name, if there are any
  google.protobuf.StringValue child_variant_name = 4;
}

// Response of debug MxP notification
message DebugMxPNotificationResponse {
  // consumer id
  google.protobuf.Int64Value consumer_id = 1;
  // Log and Debug message
  google.protobuf.StringValue debugger_message = 2;
}

// Debug request to deliver notification content
message DebugDeliverNotificationContentRequest {
  reserved 6;
  reserved "notification_content_type";
  // audience id
  google.protobuf.StringValue audience_id = 1;
  // audience type
  .growth.common.v1.NotificationAudienceType audience_type = 2;
  // specifications for candidate contents to deliver
  repeated DeliverySpecification specifications = 3;
  // program name
  google.protobuf.StringValue program_name = 4;
  // Journey tracking attributes
  JourneyTrackingAttributes journey_tracking_attributes = 5;
  // Program type
  ProgramType program_type = 7;
  // Child DV variant name, if there are any
  google.protobuf.StringValue child_variant_name = 8;
}

// Debug response of deliver notification content
message DebugDeliverNotificationContentResponse {
  reserved 1;
  reserved "status";
  // Debug status of the delivery
  DeliveryDebugStatus delivery_debug_status = 2;
  // Additional message information
  google.protobuf.StringValue message = 3;
}

// Request to save notification history
message SaveNotificationHistoryRequest {
  // audience id
  google.protobuf.StringValue audience_id = 1;
  // audience type
  .growth.common.v1.NotificationAudienceType audience_type = 2;
  // notification history
  NotificationHistory notification_history = 3;

  // default = null/empty. record_stage=atc_sent if triggered by ATC to record actual sent history
  google.protobuf.StringValue record_stage = 4;
}

// Notification history
message NotificationHistory {
  // store_id
  google.protobuf.StringValue store_id = 1;
  // content source
  google.protobuf.StringValue content_source = 2;
  // promotion type
  google.protobuf.StringValue promotion_type = 3;
  // program name
  google.protobuf.StringValue program_name = 4;
  // channel
  DeliveryChannel channel = 5;
}

// Response of save notification history
message SaveNotificationHistoryResponse {}

// Delivery status
enum DeliveryDebugStatus {
  // Unspecified
  DELIVERY_DEBUG_STATUS_UNSPECIFIED = 0;
  // Successful
  DELIVERY_DEBUG_STATUS_SUCCESSFUL = 1;
  // Failed
  DELIVERY_DEBUG_STATUS_FAILED = 2;
}
