syntax = "proto3";

package pkg.processing.v1;

import "common/code.proto";
import "google/protobuf/wrappers.proto";
import "pkg_processing/inventory_processing_common.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.pkg.processing";

// PKG inventory processing service
service InventoryProcessingService {
  // Ingest a Store Menu
  rpc IngestInventoryStoreMenu(IngestInventoryStoreMenuRequest) returns (IngestInventoryStoreMenuResponse);

  // Batch create or update inventory
  // buf:lint:ignore RPC_REQUEST_STANDARD_NAME
  // buf:lint:ignore RPC_RESPONSE_STANDARD_NAME
  // buf:lint:ignore RPC_REQUEST_RESPONSE_UNIQUE
  rpc CreateOrUpdateInventory(CreateOrUpdateInventoryRequest) returns (CreateOrUpdateInventoryResponse);

  // Temporarily used to ingest boh data
  // buf:lint:ignore RPC_REQUEST_STANDARD_NAME
  // buf:lint:ignore RPC_RESPONSE_STANDARD_NAME
  // buf:lint:ignore RPC_REQUEST_RESPONSE_UNIQUE
  rpc CreateOrUpdateBalanceOnHandInventoryTemporary(CreateOrUpdateInventoryRequest) returns (CreateOrUpdateInventoryResponse);
}

// The request for IngestStoreMenu
message IngestInventoryStoreMenuRequest {
  // Request ID
  string request_id = 1;
  // Business ID
  google.protobuf.Int64Value business_id = 2;
  // Store ID
  google.protobuf.Int64Value store_id = 3;
  // Store Menu json str
  google.protobuf.StringValue store_menu = 4;
  // Flag to skip removing all suspensions in the store
  google.protobuf.BoolValue skip_store_unsuspension = 5;
  // Flag to indicate if this is a partial update
  google.protobuf.BoolValue is_partial_update = 6;
}

// The response for IngestStoreMenu
message IngestInventoryStoreMenuResponse {}

// The request for CreateOrUpdateInventory
message CreateOrUpdateInventoryRequest {
  // Store information such as businessId and storeId for inventory request, required
  StoreInfo store_info = 1;
  // The inventory items to create or update
  repeated Inventory inventory = 2;
  // UUID to associate and track the request
  google.protobuf.StringValue request_id = 3;
  // Determine if this request is to do a full_menu_update,
  // if true, the existing items which were not mentioned in the inventory list will be set to inactive
  // if false, the existing unmentioned items will keep as they are
  google.protobuf.BoolValue full_menu_update = 4;
  // Determine if the request wants to return the update result immediately, the response will include the item level update info, and the request will take longer
  // This flag is only applicable to partial update
  google.protobuf.BoolValue real_time_update = 5;
  // Determine if we want to send the partial update to menu immediately without the aggregation window
  // This could cause some race condition on menu side if there are multiple channels updating that menu at the same time
  // This flag is only applicable to partial update
  google.protobuf.BoolValue skip_aggregation = 6;
  // Determine if we want the request to only persist inventory info in Raw Inventory Feed and skip sending to menu.
  // If true, will persist inventory attributes in Raw Inventory Feed and skip send to Menu.
  // If false, will skip persist inventory attributes in Raw Inventory Feed and continue the normal update workflow.
  google.protobuf.BoolValue skip_sending_to_menu = 7;
  // Source of the inventory
  SourceOfFeed source = 8;
  // Determine if we want to skip price guardrail in the inventory process.
  google.protobuf.BoolValue skip_price_guardrail = 9;
  // cleaning flags for inventory updates
  InventoryCleaningFlags cleaning_flags = 10;
}

// Create or update one or multiple inventory response - Temp Empty response
message CreateOrUpdateInventoryResponse {
  //  // Store information such as businessId and storeId for inventory request
  //  StoreInfo store_info = 1;
  //  // The update result for each item,
  //  // This will be included in the response only if the real_time_update was set to true
  //  repeated InventoryUpdateResult inventory_update_result = 2;
  //  // UUID to associate and track the request. If request ID
  //  // was provided in the request, this will be the same value as that.
  //  // Otherwise, a new UUID will be generated by the service.
  //  google.protobuf.StringValue request_id = 3;
  //  // Source of the inventory
  //  SourceOfFeed source = 4;
  //  // gRPC response code
  //  code.Code code = 5;
  //  // Error message if there is any
  //  google.protobuf.StringValue error_message = 6;
}
