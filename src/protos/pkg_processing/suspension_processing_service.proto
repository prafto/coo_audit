syntax = "proto3";

package pkg.processing.v1;

import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.pkg.processing";

// PKG menu item activations/deactivations
service SuspensionProcessingService {
  // Suspend items
  rpc SuspendEntities(SuspendEntitiesRequest) returns (SuspendEntitiesResponse);
  // Unsuspend items
  rpc UnsuspendEntities(UnsuspendEntitiesRequest) returns (UnsuspendEntitiesResponse);
  // Synchronize suspensions
  rpc SynchronizeSuspensionsByStore(SynchronizeSuspensionsByStoreRequest) returns (SynchronizeSuspensionsByStoreResponse);
}

// Menu entity type
enum EntityType {
  // item type
  ENTITY_TYPE_ITEM = 0;
  // option type
  ENTITY_TYPE_OPTION = 1;
  // menu type
  ENTITY_TYPE_MENU = 2;
  // category type
  ENTITY_TYPE_CATEGORY = 3;
  // extra type
  ENTITY_TYPE_EXTRA = 4;
}

// Menu entity to suspend
message MenuEntity {
  // Menu entity id
  string entity_id = 1;
  // Menu entity type
  EntityType entity_type = 2;
}

// Suspension data
message Suspension {
  // Suspend from timestamp
  google.protobuf.Int64Value suspend_from_milliseconds = 1;
  // Suspend util timestamp
  google.protobuf.Int64Value suspend_until_milliseconds = 2;
  // Suspend reason
  google.protobuf.StringValue reason = 3;
}

// Suspend entity request
message EntitySuspension {
  // Suspension id (either merchant_supplied_id or menu entity id)
  oneof suspension_id {
    // Mx supplied ID/External ID
    string merchant_supplied_id = 2;
    // Menu entity
    MenuEntity menu_entity = 3;
  }
  // Suspension
  Suspension suspension = 4;
}

// The request for SuspendEntities
message SuspendEntitiesRequest {
  // Store ID
  string store_id = 1;
  // Batch entities to suspend
  repeated EntitySuspension suspend_entities = 2;
}

// The response for SuspendEntities
message SuspendEntitiesResponse {}

// The request for UnsuspendEntities
message UnsuspendEntitiesRequest {
  // Store ID
  string store_id = 1;
  // Batch entities to unsuspend
  repeated EntitySuspension unsuspend_entities = 2;
}

// The response for UnsuspendEntities
message UnsuspendEntitiesResponse {}

// Request for SynchronizeSuspensionsByStore
message SynchronizeSuspensionsByStoreRequest {
  // Store ID
  string store_id = 1;
  // Out of stock items MSIDs
  repeated string out_of_stock_items = 2;
  // Out of stock options MSIDs
  repeated string out_of_stock_options = 3;
}

// Response for SynchronizeSuspensionsByStore
message SynchronizeSuspensionsByStoreResponse {}
