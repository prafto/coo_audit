syntax = "proto3";

package action_catalog.dx.nv.item_details.v1;

import "google/protobuf/wrappers.proto";

option go_package = "github.com/doordash/services-protobuf/generated/action-catalog/dx/nv/item_details";
option java_multiple_files = true;
option java_package = "com.doordash.rpc.action_catalog.dx.nv.item_details";

//Item details image click action
message ClickAndZoomAction {}

// launch scan barcode action
message ItemDetailsLaunchScanBarcodeAction {}

// launch native scanner action
message ItemDetailsLaunchNativeScannerAction {}

// add xx items action
message ItemDetailsAddItemCountAction {
  // Item details navigation
  enum AddItemActionContext {
    // default
    ADD_ITEM_ACTION_CONTEXT_UNSPECIFIED = 0;
    // shopping list
    ADD_ITEM_ACTION_CONTEXT_SHOPPING_LIST = 1;
    // dx picked an item by using the scanner entry point
    ADD_ITEM_ACTION_CONTEXT_NONE = 2;
  }

  // the action type
  AddItemActionContext action_context = 1;
}

// item unavailable action
message ItemDetailsItemUnavailableAction {}

// item unavailable with inf action
message ItemDetailsItemUnavailableWithInfAction {}

// enter item weight action
message ItemDetailsEnterItemWeightAction {}

// add different quantity action
message ItemDetailsAddDifferentQuantityAction {}

// enter details action
message ItemDetailsEnterDetailsAction {
  // enter details action type
  enum ActionContext {
    reserved 2;
    reserved "ACTION_CONTEXT_DX_DYF_PICKED_MEAT";
    // default
    ACTION_CONTEXT_UNSPECIFIED = 0;
    // dx picked an item by using the scanner entry point
    ACTION_CONTEXT_DX_DYF_PICKED = 1;
    // dx to pick (add to shopping list)
    ACTION_CONTEXT_DX_DYF_TO_PICK = 3;
    // dx picked fixed pack meat type (multi-scan) by using the scanner entry point
    ACTION_CONTEXT_DX_DYF_PICKED_MEAT_FIXED_PACK = 4;
  }

  // the action type
  ActionContext action_context = 1;
}

// none action (dummy action)
message ItemDetailsNoneAction {}

// launch scan barcode action
message ItemDetailsLaunchMeatScanBarcodeAction {}

// refund action
message ItemDetailsRefundItemAction {}

// send suggestion action
message ItemDetailsSendSuggestionAction {
  // the message that needs to be sent to Cx when Dx clicks on send suggestion
  string message = 1;
  // business context
  string business_context = 2;
}

// launch PLU code entry page
message ItemDetailsLaunchPluCodeEntryAction {
  // group_name must match the group that has the plu entry lego content
  string group_name = 1;
}

// check weight action for weight nudge
message ItemDetailsCheckWeightAction {
  // Lower bound of the weight range
  google.protobuf.DoubleValue min_weight = 1;
  // Upper bound of the weight range
  google.protobuf.DoubleValue max_weight = 2;
}

// Trigger cancellation flow assuming all items are already marked unavailable
message ItemDetailsTriggerCancellationFlowAction {}

// Launches the native manual plu code screen
message ItemDetailsLaunchNativeManualPluEntryAction {}

// Loads the In-Store Map image with item location
message ItemLocationInStoreMapLoadAction {
  reserved 1;
  reserved "item_location";
  // Location of the item
  string item_map_sub_text = 2;
}

// Trigger found empty shelf flow when item is unavailable
message ItemDetailsItemUnavailableFoundEmptyShelfAction {}

// Trigger cannot find item location flow when item is unavailable
message ItemDetailsItemUnavailableCannotFindItemLocationAction {}

// Report quality issue when item is unavailable
message ItemDetailsItemUnavailableReportQualityIssuesAction {}
