syntax = "proto3";

package action_catalog.dx.nv.meat_scan.v1;

import "action-catalog/common/colors.proto";
import "google/protobuf/wrappers.proto";

option go_package = "github.com/doordash/services-protobuf/generated/action-catalog/dx/nv/meat_scan";
option java_multiple_files = true;
option java_package = "com.doordash.rpc.action_catalog.dx.nv.meat_scan";

// MeatScanLoadWeightInputFormAction
message MeatScanLoadWeightInputFormAction {}

// MeatScanLoadQuantityStepperWeightInputFormAction
message MeatScanLoadQuantityStepperWeightInputFormAction {}

// MeatScanLoadWeightInputAction
message MeatScanLoadWeightInputAction {}

// MeatScanWeightValidationAction
message MeatScanWeightValidationAction {
  // contains the min and max weight values that we want to validate against
  message Guardrail {
    // Content that we want to be shown to Dx if weight entered fails the guardrail
    message FailureContent {
      // Message to be shown next to the input field
      message GuardrailMessage {
        // Icon
        enum Icon {
          // Unspecified icon
          ICON_UNSPECIFIED = 0;
          // Error fill icon
          ICON_ERROR_FILL = 1;
        }
        // Text
        google.protobuf.StringValue text = 1;
        // Color
        action_catalog.common.v1.PrismTextColor color = 2;
        // Icon
        Icon icon = 3;
      }
      // Name of the modal group to be shown if weight fails the guardrail
      google.protobuf.StringValue group_name = 1;
      // Guardrail message
      GuardrailMessage guardrail = 2;
      // key to set for modal
      google.protobuf.StringValue total_weight_key = 3;
    }
    // Min threshold
    google.protobuf.DoubleValue min = 1;
    // Max threshold
    google.protobuf.DoubleValue max = 2;
    // Content to be shown to Dx if weight fails the guardrail
    FailureContent failure_content = 3;
  }
  // List of guardrails to validate against
  repeated Guardrail guardrails = 1;
  // state keys for weight input
  repeated google.protobuf.StringValue state_keys = 2;
}
