syntax = "proto3";

package action_catalog.dx.dap.on_dash_delivery.v1;

import "google/protobuf/wrappers.proto";

option go_package = "github.com/doordash/services-protobuf/generated/action-catalog/dx/dap/on_dash_delivery";
option java_multiple_files = true;
option java_package = "com.doordash.rpc.action_catalog.dx.dap.on_dash_delivery";

// Confirm a Delivery dropoff in the on-a-dash flow.
message ConfirmDropOff {
  // The uuid of the delivery to complete.
  string delivery_uuid = 1;
  // Whether the delivery is contactless
  bool is_contactless_delivery = 2;
}

// Confirm an arrival in the on-a-dash flow.
message ConfirmArrival {
  // The uuid of the delivery to complete.
  string delivery_uuid = 1;
}

// Patching the delivery state in the on-a-dash flow.
message PatchDeliveryState {
  // The uuid of the delivery to update.
  repeated string delivery_uuids = 1;
  // The new state of the delivery.
  DeliveryState state = 2;
}

// Clear delivery from Self help quota.
message ClearDeliveryFromSelfHelpDropOffQuota {
  // The uuid of the delivery to update.
  string delivery_uuid = 1;
  // The source of the screen from where the event is fired.
  google.protobuf.StringValue source_screen = 2;
}

// Launch support chat in the on-a-dash flow.
message LaunchSupportChat {
  // The uuid of the delivery for which support is needed
  string delivery_uuid = 1;
}

// Launch dasher wait survery in the on-a-dash flow.
message LaunchDxWaitSurvey {
  // The uuid of the delivery for which support is needed
  string delivery_uuid = 1;
  // The store identifier (optional)
  google.protobuf.StringValue store_id = 2;
}

// Enum for the state of the delivery
enum DeliveryState {
  // Unspecified delivery state
  DELIVERY_STATE_UNSPECIFIED = 0;
  // Arrived at store
  DELIVERY_STATE_ARRIVED_AT_STORE = 1;
  // picked up the delivery
  DELIVERY_STATE_PICKED_UP = 2;
  // arrived at customer
  DELIVERY_STATE_ARRIVED_AT_CUSTOMER = 3;
  // dropped off the delivery
  DELIVERY_STATE_DROPPED_OFF = 4;
}
