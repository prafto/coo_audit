syntax = "proto3";

package action_catalog.common.self_help.v1;

import "action-catalog/common/primitive_value.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/wrappers.proto";

option go_package = "github.com/doordash/services-protobuf/generated/action-catalog/common/self_help";
option java_multiple_files = true;
option java_package = "com.doordash.rpc.action_catalog.common.self_help";

// an action to execute actions based on client state conditions
message ConditionalAction {
  // conditions to check in client state
  // if all conditions are true, then the action is executed
  repeated ClientStateCondition conditions = 1;
  // operator
  Operator operator = 2;
  // actions to execute when the conditions are ALL met
  repeated google.protobuf.Struct actions_on_conditions_met = 3;
  // actions to execute when the conditions are not met
  repeated google.protobuf.Struct actions_on_conditions_not_met = 4;
}

// a condition to check in client state
message ClientStateCondition {
  // [DEPRECATED]
  reserved 4;
  reserved "value";
  // key to check in client state
  google.protobuf.StringValue key = 1;
  // comparison
  Comparison comparison = 2;
  // value to compare with
  ConditionalValue conditional_value = 3;
}

// value to compare with
message ConditionalValue {
  // oneOf value to compare with
  oneof value {
    // client state key of value to compare with
    google.protobuf.StringValue client_state_key = 1;
    // primitive value to compare with
    action_catalog.common.v1.PrimitiveValue primitive_value = 2;
  }
}

// operator to combine conditions
enum Operator {
  // unspecified
  OPERATOR_UNSPECIFIED = 0;
  // and
  OPERATOR_AND = 1;
  // or
  OPERATOR_OR = 2;
}

// comparison enum for client state conditions
enum Comparison {
  // unspecified
  COMPARISON_UNSPECIFIED = 0;
  // equals
  COMPARISON_EQUALS = 1;
  // not equals
  COMPARISON_NOT_EQUALS = 2;
  // greater than
  COMPARISON_GREATER_THAN = 3;
  // less than
  COMPARISON_LESS_THAN = 4;
  // greater than or equal
  COMPARISON_GREATER_THAN_OR_EQUAL = 5;
  // less than or equal
  COMPARISON_LESS_THAN_OR_EQUAL = 6;
}
