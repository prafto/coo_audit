syntax = "proto3";

package drive_order_service.v1;

import "common/service_client_config.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option go_package = "drive_order_service";
option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.drive_order_service";

// DeliveryItemService exposes endpoints to manage Delivery Items
service DeliveryItemService {
  option (service_client.client_config).service_name = "drive-order-service";
  option (service_client.client_config).service_app = "web";
  option (service_client.client_config).response_attempt_timeout_millis = 1000;
  option (service_client.client_config).circuit_breaker_config.failure_rate_threshold = 1.0;

  // Create a batch of DeliveryItemEntry in DB
  rpc CreateDeliveryItemEntries(CreateDeliveryItemEntriesRequest) returns (CreateDeliveryItemEntriesResponse);

  // Update scan status of DeliveryItemEntries in DB
  rpc UpdateDeliveryItemEntries(UpdateDeliveryItemEntriesRequest) returns (UpdateDeliveryItemEntriesResponse);

  // Update scan status of DeliveryItemEntries in DB by the item ids. Note: the provided barcode will get updated rather
  // than be used as an id.
  rpc UpdateDeliveryItemsScanStatus(UpdateDeliveryItemsScanStatusRequest) returns (UpdateDeliveryItemsScanStatusResponse);

  // Update scan status of DeliveryItemEntries in DB by the barcode.
  rpc UpdateDeliveryItemsScanStatusByBarcode(UpdateDeliveryItemsScanStatusByBarcodeRequest) returns (UpdateDeliveryItemsScanStatusByBarcodeResponse);

  // Delete a batch of DeliveryItemEntry in DB
  rpc DeleteDeliveryItemEntries(DeleteDeliveryItemEntriesRequest) returns (DeleteDeliveryItemEntriesResponse);

  // Get a batch of DeliveryItemEntry by Delivery ID from DB
  rpc GetDeliveryItemEntries(GetDeliveryItemEntriesRequest) returns (GetDeliveryItemEntriesResponse);

  // Get a list of DeliveryItemEntry by barcode from DB
  rpc GetDeliveryItemEntriesByBarcode(GetDeliveryItemEntriesByBarcodeRequest) returns (GetDeliveryItemEntriesByBarcodeResponse);

  // Get a most recent DeliveryItemEntry by barcode from DB
  rpc GetMostRecentDeliveryItemByBarcode(GetMostRecentDeliveryItemByBarcodeRequest) returns (GetMostRecentDeliveryItemByBarcodeResponse);
}

// Contains information needed to create a new batch of DeliveryItemEntry in DB
message CreateDeliveryItemEntriesRequest {
  // Delivery ID (Deprecated) delivery_id contained in items
  int64 delivery_id = 1 [deprecated = true];
  // Delivery Item Entries
  repeated DeliveryItemEntry items = 2;
}

// Contains the result of creating a new list of DeliveryItemEntry in DB
message CreateDeliveryItemEntriesResponse {
  // List of DeliveryItemEntry in DB
  repeated DeliveryItemEntry delivery_item_entries = 1;
}

// Contains Delivery ID and list of DeliveryItemEntry to be updated
message UpdateDeliveryItemEntriesRequest {
  // Delivery ID
  int64 delivery_id = 1;
  // List of DeliveryItemEntry in DB
  repeated DeliveryItemEntry entries = 2;
}

// Contains the result of updating a list of DeliveryItemEntry in DB
message UpdateDeliveryItemEntriesResponse {
  // Size of updated DeliveryItemEntries in DB
  int64 num_of_updated_entries = 1;
}

// Contains Delivery ID and scan status for items to be updated
message UpdateDeliveryItemsScanStatusRequest {
  // Delivery ID
  int64 delivery_id = 1;
  // TODO(DRIVE-26620): Remove.
  // List of DeliveryItemEntry in DB
  repeated DeliveryItemScanStatus status = 2;
  // List of DeliveryItemEntry in DB. Each item should have an id.
  repeated DeliveryItemScanStatusV2 scan_status = 3;
  // TODO(DRIVE-26620): Remove.
  // Update barcode. Denotes if the barcode should be updated as part of the request. If enabled then the id must be
  // present in all items.
  google.protobuf.BoolValue update_barcode = 4;
}

// Contains the result of updating a list of DeliveryItemEntry in DB
message UpdateDeliveryItemsScanStatusResponse {
  reserved 1;
  reserved "delivery_item_entries";
}

// Updates the scan status of DeliveryItemEntries in DB by the barcode.
message UpdateDeliveryItemsScanStatusByBarcodeRequest {
  // Delivery ID
  google.protobuf.Int64Value delivery_id = 1;
  // List of DeliveryItemEntry in DB. Each item should not have an id since we'll identify the item by barcode.
  repeated DeliveryItemScanStatusV2 scan_status = 2;
}

// Contains the result of updating a list of DeliveryItemEntry in DB
message UpdateDeliveryItemsScanStatusByBarcodeResponse {}

// Contains Delivery ID needed to delete the DeliveryItemEntry from DB
message DeleteDeliveryItemEntriesRequest {
  // Delivery ID
  int64 delivery_id = 1;
}

// Empty
message DeleteDeliveryItemEntriesResponse {}

// Contains Delivery ID needed to get the list of DeliveryItemEntry from DB
message GetDeliveryItemEntriesRequest {
  // Delivery ID
  int64 delivery_id = 1;
  // Barcode
  google.protobuf.StringValue barcode = 2;
}

// Contains the corresponding list of DeliveryItemEntry from DB
message GetDeliveryItemEntriesResponse {
  // List of DeliveryItemEntry in DB
  repeated DeliveryItemEntry delivery_item_entries = 1;
}

// Contains barcode needed to get the list of DeliveryItemEntry from DB
message GetDeliveryItemEntriesByBarcodeRequest {
  // Item barcode
  string barcode = 1;
}

// Contains the corresponding list of DeliveryItemEntry from DB
message GetDeliveryItemEntriesByBarcodeResponse {
  // List of DeliveryItemEntry in DB
  repeated DeliveryItemEntry delivery_item_entries = 1;
}

// Contains barcode needed to get the most recent DeliveryItemEntry from DB
message GetMostRecentDeliveryItemByBarcodeRequest {
  // Item barcode
  string barcode = 1;
}

// Contains the most recent DeliveryItemEntry from DB
message GetMostRecentDeliveryItemByBarcodeResponse {
  // DeliveryItemEntry in DB
  DeliveryItemEntry delivery_item_entry = 1;
}

// Scan status v2
message DeliveryItemScanStatusV2 {
  // Scan Status
  google.protobuf.StringValue scan_status = 1;
  // Is Damaged
  google.protobuf.BoolValue is_damaged = 2;
  // Barcode
  google.protobuf.StringValue barcode = 3;
  // Id
  google.protobuf.Int64Value id = 4;
}

// TODO(DRIVE-26620): Remove.
// Scan Status
message DeliveryItemScanStatus {
  reserved 1;
  reserved "barcode";
  // Scan Status
  string scan_status = 2;
  // Is Damaged
  bool is_damaged = 3;
  // Item Identifier
  oneof id {
    // Barcode
    string item_barcode = 4;
    // Item ID
    int64 item_id = 5;
  }
}

// DeliveryItemEntry in DB
message DeliveryItemEntry {
  // Delivery ID
  int64 delivery_id = 1;
  // Delivery Item ID
  int64 delivery_item_id = 2;
  // Name
  string name = 3;
  // Description
  google.protobuf.StringValue description = 4;
  // Quantity
  int32 quantity = 5;
  // Barcode
  google.protobuf.StringValue barcode = 6;
  // Is Damaged
  google.protobuf.BoolValue is_damaged = 7;
  // Scan Status
  google.protobuf.StringValue scan_status = 8;
  // Drive Order ID
  google.protobuf.Int64Value drive_order_id = 9;
  // External ID
  google.protobuf.StringValue external_id = 10;
  // Volume
  google.protobuf.DoubleValue volume = 11;
  // Weight
  google.protobuf.DoubleValue weight = 12;
  // Price
  google.protobuf.Int32Value price = 13;
  // Updated At Time
  google.protobuf.Timestamp updated_at = 14;
  // BundleKey
  google.protobuf.StringValue bundle_key = 15;
  // Special Instructions
  google.protobuf.StringValue special_instructions = 16;
  // Length in inches
  google.protobuf.DoubleValue length = 17;
  // Width in inches
  google.protobuf.DoubleValue width = 18;
  // Height in inches
  google.protobuf.DoubleValue height = 19;
}
