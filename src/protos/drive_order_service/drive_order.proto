syntax = "proto3";

package drive_order_service.v1;

import "common/common.proto";
import "common/service_client_config.proto";
import "drive_order_service/common.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option go_package = "drive_order_service";
option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.drive_order_service";

// DriveOrderService exposes endpoints to manage a Drive Order
service DriveOrderService {
  option (service_client.client_config).service_name = "drive-order-service";
  option (service_client.client_config).service_app = "web";
  option (service_client.client_config).response_attempt_timeout_millis = 1000;
  option (service_client.client_config).circuit_breaker_config.failure_rate_threshold = 0.8;

  // Create a Drive Order Entry in DB
  rpc CreateDriveOrderEntry(CreateDriveOrderEntryRequest) returns (CreateDriveOrderEntryResponse);
  // Update a Drive Order Entry in DB
  rpc UpdateDriveOrderEntry(UpdateDriveOrderEntryRequest) returns (UpdateDriveOrderEntryResponse);
  // Cancel a Drive Order Entry in DB
  rpc CancelDriveOrderEntry(CancelDriveOrderEntryRequest) returns (CancelDriveOrderEntryResponse);
  // Get a Drive Order Entry by Id from DB
  rpc GetDriveOrderEntry(GetDriveOrderEntryRequest) returns (GetDriveOrderEntryResponse);
  // Get a Drive Order Entry by DoordashId from DB
  rpc GetDriveOrderEntryByDoordashId(GetDriveOrderEntryByDoordashIdRequest) returns (GetDriveOrderEntryByDoordashIdResponse);
  // Get a Drive Order Entry by DeliveryId and/or ReturnDeliveryId from DB
  rpc GetDriveOrderEntryByDeliveryId(GetDriveOrderEntryByDeliveryIdRequest) returns (GetDriveOrderEntryByDeliveryIdResponse);
  // Get a Drive Order Entry by ExternalDeliveryId from DB
  rpc GetDriveOrderEntryByExternalDeliveryId(GetDriveOrderEntryByExternalDeliveryIdRequest) returns (GetDriveOrderEntryByExternalDeliveryIdResponse);
  // Get a Drive Order Entry by ExternalDeliveryId and StoreId from DB
  rpc GetDriveOrderEntryByExternalDeliveryIdAndStoreId(GetDriveOrderEntryByExternalDeliveryIdAndStoreIdRequest) returns (GetDriveOrderEntryByExternalDeliveryIdAndStoreIdResponse);
  // Get a Drive Order Entry by UrlCode from DB
  rpc GetDriveOrderEntryByUrlCode(GetDriveOrderEntryByUrlCodeRequest) returns (GetDriveOrderEntryByUrlCodeResponse);
  // Get a Drive Order Entry by OrderPlatformId from DB
  rpc GetDriveOrderEntryByOrderPlatformId(GetDriveOrderEntryByOrderPlatformIdRequest) returns (GetDriveOrderEntryByOrderPlatformIdResponse);
  // Get a List of Drive Order Entry by RedeliveryId from DB
  rpc GetDriveOrderEntriesByRedeliveryId(GetDriveOrderEntriesByRedeliveryIdRequest) returns (GetDriveOrderEntriesByRedeliveryIdResponse);
  // Get a List of Drive Order Entry by deliveryId and developer deny list from DB
  rpc GetByExternalDeliveryIdAndDeveloperDenyList(GetByExternalDeliveryIdAndDeveloperDenyListRequest) returns (GetByExternalDeliveryIdAndDeveloperDenyListResponse);
  // Get a List of Drive delivery ids by outage start and end time from DB
  rpc GetOutageRefundDriveOrders(GetOutageRefundDriveOrdersRequest) returns (GetOutageRefundDriveOrdersResponse);
  // Create a task service's workflow id given a drive order id
  rpc CreateWorkflowIDForDriveOrder(CreateWorkflowIDForDriveOrderRequest) returns (CreateWorkflowIDForDriveOrderResponse);
  // Add the task service's workflow id and task_group_id for a given drive order id
  rpc AddTaskServiceIdsForDriveOrder(AddTaskServiceIdsForDriveOrderRequest) returns (AddTaskServiceIdsForDriveOrderResponse);
  // Get task service's workflow id and task_group_ids for a given drive order id
  rpc GetTaskServiceIdsForDriveOrder(GetTaskServiceIdsForDriveOrderRequest) returns (GetTaskServiceIdsForDriveOrderResponse);
  // Get workflow info by task group ids
  rpc GetWorkflowInfoByTaskGroupIds(GetWorkflowInfoByTaskGroupIdsRequest) returns (GetWorkflowInfoByTaskGroupIdsResponse);
  // Batch add task service workflow id and task_group_id for drive_order_id
  rpc BatchAddTaskServiceIdsForDriveOrder(BatchAddTaskServiceIdsForDriveOrderRequest) returns (BatchAddTaskServiceIdsForDriveOrderResponse);
}

// Task group info
message TaskGroupInfo {
  // Task group id
  string task_group_id = 1;
  // Is return task group
  bool is_return_task_group = 2;
}

// Workflow info
message WorkflowInfo {
  // Workflow id
  string workflow_id = 1;
  // Drive order id, in current phase, one workflow can have multiple drive orders
  int64 drive_order_id = 2;
  // Task group ids, in current phase, one drive order only maps to one task group id and one return task group id
  // In this list, the first item is assumed to be the task group id,
  // and any additional elements are return task group ids
  repeated TaskGroupInfo task_group_infos = 3;
  // Delivery return id that is used as we migrate from delivery to task flow
  google.protobuf.Int64Value legacy_return_delivery_id = 4;
}

// Request object for create workflow id for a given drive order
message CreateWorkflowIDForDriveOrderRequest {
  // Drive Order ID
  int64 drive_order_id = 1;
  // Task workflow id
  google.protobuf.StringValue workflow_id = 2;
}

// Response for CreateWorkflowIDForDriveOrder API
message CreateWorkflowIDForDriveOrderResponse {}

// Request for adding workflow_od and task_group_id for a given drive order
message AddTaskServiceIdsForDriveOrderRequest {
  // Drive Order ID
  int64 drive_order_id = 1;
  // Workflow id
  google.protobuf.StringValue workflow_id = 2;
  // Task group id
  google.protobuf.StringValue task_group_id = 3;
  // Return task group id
  google.protobuf.StringValue return_task_group_id = 4;
}

// Response for AddTaskServiceIdsForDriveOrder API
message AddTaskServiceIdsForDriveOrderResponse {}

// Request for GetTaskServiceIdsForDriveOrder
message GetTaskServiceIdsForDriveOrderRequest {
  // Drive Order ID
  int64 drive_order_id = 1;
}

// Response for GetTaskServiceIdsForDriveOrder
message GetTaskServiceIdsForDriveOrderResponse {
  // Drive Order ID
  int64 drive_order_id = 1;
  // Workflow id
  google.protobuf.StringValue workflow_id = 2;
  // Task group id
  repeated google.protobuf.StringValue task_group_ids = 3;
  // Return task group id
  repeated google.protobuf.StringValue return_task_group_ids = 4;
}

// Request for GetDriveOrderByTaskGroupIds
message GetWorkflowInfoByTaskGroupIdsRequest {
  // Task group ids
  repeated TaskGroupInfo task_group_infos = 1;
}

// Response for GetWorkflowInfoByTaskGroupIds
message GetWorkflowInfoByTaskGroupIdsResponse {
  // Workflow infos
  repeated WorkflowInfo workflow_infos = 1;
}

// Request for BatchAddTaskServiceIdsForDriveOrder
message BatchAddTaskServiceIdsForDriveOrderRequest {
  // List of workflow infos
  repeated WorkflowInfo workflow_infos = 1;
}

// Response for BatchAddTaskServiceIdsForDriveOrder
message BatchAddTaskServiceIdsForDriveOrderResponse {
  // List of workflow_ids that succeeded
  repeated google.protobuf.StringValue successful_workflow_ids = 1;
  // List of workflow_ids that failed
  repeated google.protobuf.StringValue failed_workflow_ids = 2;
}

// Contains information needed to update a new Drive Order Entry in DB
message UpdateDriveOrderEntryRequest {
  reserved 51;
  reserved "delivery_creation_extra_params";
  // Drive Order ID
  int64 id = 1;
  // Dropoff Address ID
  google.protobuf.Int64Value dropoff_address_id = 2;
  // Dropoff Instructions
  google.protobuf.StringValue dropoff_instructions = 3;
  // Pickup Instructions
  google.protobuf.StringValue pickup_instructions = 4;
  // Pickup Phone Number
  google.protobuf.StringValue pickup_phone_number = 5;
  // Pickup Business Name
  google.protobuf.StringValue pickup_business_name = 6;
  // Contains Alcohol
  google.protobuf.BoolValue contains_alcohol = 7;
  // Min Age Requirement
  google.protobuf.Int64Value min_age_requirement = 8;
  // Delivery Window Start Time
  google.protobuf.Timestamp delivery_window_start_time = 9;
  // Delivery Window End Time
  google.protobuf.Timestamp delivery_window_end_time = 10;
  // Pickup Window Start Time
  google.protobuf.Timestamp pickup_window_start_time = 11;
  // Pickup Window End Time
  google.protobuf.Timestamp pickup_window_end_time = 12;
  // Quoted Delivery Time
  google.protobuf.Timestamp quoted_delivery_time = 13;
  // Quoted Pickup Time
  google.protobuf.Timestamp quoted_pickup_time = 14;
  // Customer
  Customer customer = 15;
  // Requires Signature
  google.protobuf.BoolValue requires_signature = 16;
  // Allow Unattended Delivery
  google.protobuf.BoolValue allow_unattended_delivery = 17;
  // Delivery Metadata
  google.protobuf.StringValue delivery_metadata = 18;
  // Allowed Vehicles
  google.protobuf.StringValue allowed_vehicles = 19;
  // Delivery Creation Extra Params
  DeliveryCreationExtraParams delivery_creation_extra_params_object = 20;
  // Items
  repeated DriveOrderItem items = 21;
  // Num Items
  google.protobuf.Int64Value num_items = 22;
  // Order Volume
  google.protobuf.Int64Value order_volume = 23;
  // Requires Barcode Scanning
  google.protobuf.BoolValue requires_barcode_scanning = 24;
  // Is Contactless Delivery
  google.protobuf.BoolValue is_contactless_delivery = 25;
  // Redelivery ID
  google.protobuf.Int64Value redelivery_id = 26;
  // Delivery ID
  google.protobuf.Int64Value delivery_id = 27;
  // Commission Subtotal
  google.protobuf.Int64Value commission_subtotal = 28;
  // Commission Tax
  google.protobuf.Int64Value commission_tax = 29;
  // Commission Total
  google.protobuf.Int64Value commission_total = 30;
  // Commission Rate
  google.protobuf.DoubleValue commission_rate = 31;
  // DD Pre Tip Contribution
  google.protobuf.Int64Value dd_pre_tip_contribution = 32;
  // Tip Pending Until
  google.protobuf.Timestamp tip_pending_until = 33;
  // Tip (Used as preTip in the getter for a drive order)
  int64 tip = 34;
  // Pre Tip Updated Dttm
  google.protobuf.Timestamp pre_tip_updated_dttm = 35;
  // Post Tip
  google.protobuf.Int64Value post_tip = 36;
  // Post Tip Received Dttm
  google.protobuf.Timestamp post_tip_received_dttm = 37;
  // Developer ID
  google.protobuf.Int64Value developer_id = 38;
  // Delivery Creation Response
  google.protobuf.StringValue delivery_creation_response = 39;
  // Delivery Creation Status
  google.protobuf.StringValue delivery_creation_status = 40;
  // Order Platform ID
  google.protobuf.StringValue order_platform_id = 41;
  // Order Type
  google.protobuf.StringValue order_type = 42;
  // Includes Catering Setup
  google.protobuf.BoolValue includes_catering_setup = 43;
  // Requires Catering Setup
  google.protobuf.BoolValue requires_catering_setup = 44;
  // Submit Platform
  google.protobuf.StringValue submit_platform = 45;
  // Is Route Based
  google.protobuf.BoolValue is_route_based = 46;
  // Is Asap
  google.protobuf.BoolValue is_asap = 47;
  // Delivery Requirements
  google.protobuf.StringValue delivery_requirements = 48;
  // Return Delivery ID
  google.protobuf.Int64Value return_delivery_id = 49;
  // Return Type
  google.protobuf.StringValue return_type = 50;
  // Completed By Drive Dasher
  google.protobuf.BoolValue completed_by_drive_dasher = 52;
  // Field mask
  google.protobuf.FieldMask update_mask = 53;
}

// Contains the result of updating a Drive Order Entry
message UpdateDriveOrderEntryResponse {
  // Drive Order Entry
  DriveOrderEntry drive_order_entry = 1;
}

// Contains information needed to create a new Drive Order Entry in DB
message CreateDriveOrderEntryRequest {
  reserved 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82;
  reserved "public_id", "store_id", "driver_reference_tag", "quoted_pickup_time", "quoted_delivery_time", "order_type", "order_volume", "is_route_based", "pickup_window_start_time", "pickup_window_end_time", "delivery_window_start_time", "delivery_window_end_time", "accepts_dasher_receipts", "requires_catering_setup", "includes_catering_setup", "requires_barcode_scanning", "contains_alcohol", "requires_team_lift", "requires_signature", "allow_unattended_delivery", "allowed_vehicles", "min_age_requirement", "is_asap", "pickup_instructions", "dropoff_instructions", "currency", "order_value", "delivery_tracking_url_code", "developer_id", "external_delivery_id", "num_items", "pickup_address_id", "dropoff_address_id", "delivery_creation_status", "delivery_creation_response", "task_id", "items", "customer", "return_type", "cancelled_at", "external_order_status", "aggregator_fee", "post_tip", "max_cash_withdrawal_from_merchant_allowed", "store_point", "dasher_pay_per_dropoff", "delivery_metadata", "delivery_pay_pad_time", "delivery_radius", "delivery_requirements", "pickup_business_name", "pickup_phone_number", "setup_pay", "sof_pay_boost", "tip_pending_until", "is_contactless_delivery", "external_pickup_zone_id", "partnership_id", "completed_by_drive_dasher", "completed_by_preferred_dasher", "submit_platform", "doordash_id", "tip_paid_by_mx", "post_tip_received_dttm", "dd_pre_tip_contribution", "pre_tip_updated_dttm", "pre_tip_pending_until", "tenant_id", "order_platform_id", "requires_shopping", "redelivery_id", "delivery_creation_extra_params_object", "tip", "commission_rate", "commission_subtotal", "commission_tax", "commission_total", "driver_zero_tip_details", "delivery_id", "return_delivery_id", "merchant_payment_transaction_id", "delivery_creation_extra_params";

  // Drive Order Entry
  DriveOrderEntry drive_order_entry = 83;
}

// Contains the result of creating a new Drive Order Entry in DB
message CreateDriveOrderEntryResponse {
  // Drive Order Entry in DB
  DriveOrderEntry drive_order_entry = 1;
}

// Contains primary id needed to cancel the Drive Order  from DB
message CancelDriveOrderEntryRequest {
  // Drive Order ID
  int64 drive_order_id = 1;
}

// Contains the corresponding Drive Order Entry from DB
message CancelDriveOrderEntryResponse {
  // Drive Order Entry in DB
  DriveOrderEntry drive_order_entry = 1;
}

// Contains primary id needed to get the Drive Order Entry from DB
message GetDriveOrderEntryRequest {
  // Drive Order ID
  int64 drive_order_id = 1;
}

// Contains the corresponding Drive Order Entry from DB
message GetDriveOrderEntryResponse {
  // Drive Order Entry in DB
  DriveOrderEntry drive_order_entry = 1;
}

// Contains DoordashId needed to get the Drive Order Entry from DB
message GetDriveOrderEntryByDoordashIdRequest {
  // DoordashId
  string doordash_id = 1;
}

// Contains the corresponding Drive Order Entry from DB
message GetDriveOrderEntryByDoordashIdResponse {
  // Drive Order Entry in DB
  DriveOrderEntry drive_order_entry = 1;
}

// Contains DeliveryId needed to get the Drive Order Entry from DB
message GetDriveOrderEntryByDeliveryIdRequest {
  // DeliveryId
  int64 delivery_id = 1;
  // Query by Delivery Id if true
  bool include_delivery = 2;
  // Query by Return Delivery Id if true
  bool include_return_delivery = 3;
}

// Contains the corresponding Drive Order Entry from DB
message GetDriveOrderEntryByDeliveryIdResponse {
  // Drive Order Entry in DB
  DriveOrderEntry drive_order_entry = 1;
}

// Contains ExternalDeliveryId and DeveloperId needed to get the Drive Order Entry from DB
message GetDriveOrderEntryByExternalDeliveryIdRequest {
  // ExternalDeliveryId
  string external_delivery_id = 1;
  // DeveloperId
  int64 developer_id = 2;
}

// Contains the corresponding Drive Order Entry from DB
message GetDriveOrderEntryByExternalDeliveryIdResponse {
  // Drive Order Entry in DB
  DriveOrderEntry drive_order_entry = 1;
}

// Contains ExternalDeliveryId and StoreId needed to get the Drive Order Entry from DB
message GetDriveOrderEntryByExternalDeliveryIdAndStoreIdRequest {
  // ExternalDeliveryId
  string external_delivery_id = 1;
  // StoreId
  int64 store_id = 2;
}

// Contains the corresponding Drive Order Entry from DB
message GetDriveOrderEntryByExternalDeliveryIdAndStoreIdResponse {
  // Drive Order Entry in DB
  DriveOrderEntry drive_order_entry = 1;
}

// Contains UrlCode needed to get the Drive Order Entry from DB
message GetDriveOrderEntryByUrlCodeRequest {
  // UrlCode
  string url_code = 1;
}

// Contains the corresponding Drive Order Entry from DB
message GetDriveOrderEntryByUrlCodeResponse {
  // Drive Order Entry in DB
  DriveOrderEntry drive_order_entry = 1;
}

// Contains OrderPlatformId needed to get the Drive Order Entry from DB
message GetDriveOrderEntryByOrderPlatformIdRequest {
  // OrderPlatformId
  string order_platform_id = 1;
}

// Contains the corresponding Drive Order Entry from DB
message GetDriveOrderEntryByOrderPlatformIdResponse {
  // Drive Order Entry in DB
  DriveOrderEntry drive_order_entry = 1;
}

// Contains RedeliveryId needed to get the list of Drive Order Entry from DB
message GetDriveOrderEntriesByRedeliveryIdRequest {
  // RedeliveryId
  int64 redelivery_id = 1;
}

// Contains the corresponding list of Drive Order Entry from DB
message GetDriveOrderEntriesByRedeliveryIdResponse {
  // List of Drive Order Entry in DB
  repeated DriveOrderEntry drive_order_entries = 1;
}

// Drive Order Entry in DB
message DriveOrderEntry {
  reserved 48;
  reserved "delivery_creation_extra_params";
  // Drive Order ID
  int64 id = 1;
  // Delivery ID
  google.protobuf.Int64Value delivery_id = 2;
  // Return Delivery ID
  google.protobuf.Int64Value return_delivery_id = 3;
  // Public ID
  google.protobuf.StringValue public_id = 4;
  // Store ID
  google.protobuf.Int64Value store_id = 5;
  // Driver Reference Tag
  google.protobuf.StringValue driver_reference_tag = 6;
  // Quoted Pickup Time
  google.protobuf.Timestamp quoted_pickup_time = 7;
  // Quoted Delivery Time
  google.protobuf.Timestamp quoted_delivery_time = 8;
  // Order Type
  google.protobuf.StringValue order_type = 9;
  // Order Volume
  google.protobuf.Int64Value order_volume = 10;
  // Is Route Based
  google.protobuf.BoolValue is_route_based = 11;
  // Pickup Window Start Time
  google.protobuf.Timestamp pickup_window_start_time = 12;
  // Pickup Window End Time
  google.protobuf.Timestamp pickup_window_end_time = 13;
  // Delivery Window Start Time
  google.protobuf.Timestamp delivery_window_start_time = 14;
  // Delivery Window End Time
  google.protobuf.Timestamp delivery_window_end_time = 15;
  // Accepts Dasher Receipts
  google.protobuf.BoolValue accepts_dasher_receipts = 16;
  // Requires Catering Setup
  google.protobuf.BoolValue requires_catering_setup = 17;
  // Includes Catering Setup
  google.protobuf.BoolValue includes_catering_setup = 18;
  // Requires Barcode Scanning
  google.protobuf.BoolValue requires_barcode_scanning = 19;
  // Contains Alcohol
  google.protobuf.BoolValue contains_alcohol = 20;
  // Requires Team Lift
  google.protobuf.BoolValue requires_team_lift = 21;
  // Requires Signature
  google.protobuf.BoolValue requires_signature = 22;
  // Allow Unattended Delivery
  google.protobuf.BoolValue allow_unattended_delivery = 23;
  // Allowed Vehicles
  google.protobuf.StringValue allowed_vehicles = 24 [deprecated = true];
  // Min Age Requirement
  google.protobuf.Int64Value min_age_requirement = 25;
  // Tip
  int64 tip = 26;
  // Commission Rate
  google.protobuf.DoubleValue commission_rate = 27;
  // Commission Subtotal
  google.protobuf.Int64Value commission_subtotal = 28;
  // Commission Tax
  google.protobuf.Int64Value commission_tax = 29;
  // Commission Total
  google.protobuf.Int64Value commission_total = 30;
  // Merchant Payment Transaction Id
  google.protobuf.Int64Value merchant_payment_transaction_id = 31;
  // Is Asap
  google.protobuf.BoolValue is_asap = 32;
  // Pickup Instructions
  google.protobuf.StringValue pickup_instructions = 33;
  // Dropoff Instructions
  google.protobuf.StringValue dropoff_instructions = 34;
  // Currency
  google.protobuf.StringValue currency = 35;
  // Order Value
  google.protobuf.Int64Value order_value = 36;
  // Delivery Tracking Url
  string delivery_tracking_url = 37;
  // Developer ID
  google.protobuf.Int64Value developer_id = 38;
  // External Delivery ID
  google.protobuf.StringValue external_delivery_id = 39;
  // Num Items
  google.protobuf.Int64Value num_items = 40;
  // Pickup Address ID
  google.protobuf.Int64Value pickup_address_id = 41;
  // Dropoff Address ID
  google.protobuf.Int64Value dropoff_address_id = 42;
  // Delivery Creation Status
  google.protobuf.StringValue delivery_creation_status = 43;
  // Delivery Creation Response
  google.protobuf.StringValue delivery_creation_response = 44;
  // Task ID
  google.protobuf.StringValue task_id = 45;
  // Items
  repeated DriveOrderItem items = 46;
  // Customer
  Customer customer = 47;
  // Return Type
  google.protobuf.StringValue return_type = 49;
  // Cancelled At
  google.protobuf.Timestamp cancelled_at = 50;
  // External Order Status
  google.protobuf.StringValue external_order_status = 51;
  // Aggregator Fee
  google.protobuf.Int64Value aggregator_fee = 52;
  // Post Tip
  google.protobuf.Int64Value post_tip = 53;
  // Max Cash Withdrawal From Merchant Allowed
  google.protobuf.Int64Value max_cash_withdrawal_from_merchant_allowed = 54;
  // Store Point
  StorePoint store_point = 55;
  // Dasher Pay Per Dropoff
  google.protobuf.Int64Value dasher_pay_per_dropoff = 56;
  // Delivery Metadata
  google.protobuf.StringValue delivery_metadata = 57;
  // Delivery Pay Pad Time
  google.protobuf.Int64Value delivery_pay_pad_time = 58;
  // Delivery Radius
  google.protobuf.Int64Value delivery_radius = 59;
  // Delivery Requirements
  google.protobuf.StringValue delivery_requirements = 60;
  // Pickup Business Name
  google.protobuf.StringValue pickup_business_name = 61;
  // Pickup Phone Number
  google.protobuf.StringValue pickup_phone_number = 62;
  // Setup Pay
  google.protobuf.Int64Value setup_pay = 63;
  // SOF Pay Boost
  google.protobuf.Int64Value sof_pay_boost = 64;
  // Tip Pending Until
  google.protobuf.Timestamp tip_pending_until = 65;
  // Is Contactless Delivery
  google.protobuf.BoolValue is_contactless_delivery = 66;
  // External Pickup Zone ID
  google.protobuf.StringValue external_pickup_zone_id = 67;
  // Partnership ID
  google.protobuf.StringValue partnership_id = 68;
  // Completed By Drive Dasher
  google.protobuf.BoolValue completed_by_drive_dasher = 69;
  // Completed By Preferred Dasher
  google.protobuf.BoolValue completed_by_preferred_dasher = 70;
  // Submit Platform
  google.protobuf.StringValue submit_platform = 71;
  // Doordash ID
  google.protobuf.StringValue doordash_id = 72;
  // Tip Paid By Mx
  google.protobuf.Int64Value tip_paid_by_mx = 73;
  // Post Tip Received Dttm
  google.protobuf.Timestamp post_tip_received_dttm = 74;
  // DD Pre Tip Contribution
  google.protobuf.Int64Value dd_pre_tip_contribution = 75;
  // Pre Tip Updated Dttm
  google.protobuf.Timestamp pre_tip_updated_dttm = 76;
  // Pre Tip Pending Until
  google.protobuf.Timestamp pre_tip_pending_until = 77;
  // Tenant ID
  google.protobuf.StringValue tenant_id = 78;
  // Order Platform ID
  google.protobuf.StringValue order_platform_id = 79;
  // Requires Shopping
  google.protobuf.BoolValue requires_shopping = 80;
  // Redelivery ID
  google.protobuf.Int64Value redelivery_id = 81;
  // Updated At
  google.protobuf.Timestamp updated_at = 82;
  // Delivery Creation Extra Params
  DeliveryCreationExtraParams delivery_creation_extra_params_object = 83;
  // Used to determine if order is DSX
  google.protobuf.StringValue order_fulfillment_method = 84;
  // Dropoff Options
  DropoffOptions dropoff_options = 85;
  // Shopping Options
  ShoppingOptions shopping_options = 86;
  // Shipping Label
  ShippingLabel shipping_label = 87;
  // Drive zero tip details
  DriverZeroTipDetails driver_zero_tip_details = 88;
  // Allowed Vehicles as list of strings
  repeated string allowed_vehicles_list = 89;
  // Deprecated: allows barcode/qrcode verification during pick up
  PickupVerificationMetadata pickup_verification_metadata = 90;
  // The created at value
  google.protobuf.Timestamp created_at = 91;
}

// Drive zero tip details
message DriverZeroTipDetails {
  // Driver Zero Tip Reason
  google.protobuf.StringValue driver_zero_tip_reason = 1;

  // Driver Zero Tip Reason Details
  google.protobuf.StringValue driver_zero_tip_reason_details = 2;
}

// Pickup verification metadata
message PickupVerificationMetadata {
  // Verification type
  PickupVerificationType type = 1;

  // Verification code
  google.protobuf.StringValue code = 2;
  // Verification format
  NullableDasherPickupVerificationFormat format = 3;
}

// Pickup verification type
enum PickupVerificationType {
  // unspecified type
  PICKUP_VERIFICATION_TYPE_UNSPECIFIED = 0;

  // Scan Barcode type
  PICKUP_VERIFICATION_TYPE_SCAN_BARCODE = 1;

  // Scan Qrcode type
  PICKUP_VERIFICATION_TYPE_SCAN_QRCODE = 2;

  // No scan type
  PICKUP_VERIFICATION_TYPE_NO_SCAN = 3;
}

// Metadata to support Pin Code Verification
message PinCodeVerificationMetadata {
  // The type of pin code value requested
  PinCodeType pin_code_type = 1;
  // value is entered for the MX_PROVIDED_NUMBER pincode type, must be a 4 digit number.
  google.protobuf.StringValue pin_code_value = 2;
}

// Type of Pin Code Value
enum PinCodeType {
  // Pin Code type unspecified - pincode is not enabled.
  PIN_CODE_TYPE_UNSPECIFIED = 0;
  // Pin Code Type Customer Phone Number - Last 4 digits
  PIN_CODE_TYPE_CX_PHONE_NUMBER = 1;
  // Pin Code Type Merchant Provided Number
  PIN_CODE_TYPE_MX_PROVIDED_NUMBER = 2;
  // Pin Code Type Random Number generated by DD.
  PIN_CODE_TYPE_RANDOM_NUMBER = 3;
}

// Metadata to support Shipping Label Information
message ShippingLabelMetadata {
  // Internal Location for the Shipping Label
  google.protobuf.StringValue internal_location_id = 1;
}

// Nullable since DasherPickupVerificationFormat doesn't have a default nullable value
message NullableDasherPickupVerificationFormat {
  // Dasher Pickup Verification Format
  common.DasherPickupVerificationFormat format = 1;
}

// DropoffOptions used by DSX orders
message DropoffOptions {
  // Signature
  google.protobuf.StringValue signature = 1;

  // idVerification
  google.protobuf.StringValue id_verification = 2;

  // proofOfDelivery
  google.protobuf.StringValue proof_of_delivery = 3;
  // Catering Setup
  google.protobuf.StringValue catering_setup = 4;
}

// ShoppingOptions used by DSX orders
message ShoppingOptions {
  // Payment Method
  google.protobuf.StringValue payment_method = 1;

  // Dropoff Contact Loyalty Number
  google.protobuf.StringValue dropoff_contact_loyalty_number = 2;

  // Payment Barcode
  google.protobuf.StringValue payment_barcode = 3;

  // Payment Gift Cards
  repeated string payment_gift_cards = 4;

  // Ready For Pickup By
  google.protobuf.StringValue ready_for_pickup_by = 5;
}

// Parcel shipping label information
message ShippingLabel {
  // Label Format Type
  LabelFormatType label_format_type = 1;

  // Label Print Density Type
  LabelPrintDensityType label_print_density_type = 2;

  // Label Size Type
  LabelSizeType label_size_type = 3;

  // Label String
  google.protobuf.StringValue label_string = 4;
}

// Label Format Type
enum LabelFormatType {
  // Label Format Type Unspecified
  LABEL_FORMAT_TYPE_UNSPECIFIED = 0;

  // ZPL
  LABEL_FORMAT_TYPE_ZPL = 1;

  // PDF
  LABEL_FORMAT_TYPE_PDF = 2;
}

// Label Print Density Type
enum LabelPrintDensityType {
  // Label Print Density Unspecified
  LABEL_PRINT_DENSITY_TYPE_UNSPECIFIED = 0;

  // DPI 203
  LABEL_PRINT_DENSITY_TYPE_DPI_203 = 1;

  // DPI 300
  LABEL_PRINT_DENSITY_TYPE_DPI_300 = 2;
}

// Label Size Type
enum LabelSizeType {
  // Label Size Type Unspecified
  LABEL_SIZE_TYPE_UNSPECIFIED = 0;

  // Label Size Type 4x6
  LABEL_SIZE_TYPE_4X6 = 1;
}

// DeliveryCreationExtraParams contains extra params needed to create a delivery
message DeliveryCreationExtraParams {
  reserved 67;
  reserved "internal_location_id";
  // Pickup Subpremise
  google.protobuf.StringValue pickup_subpremise = 1;

  // Dropoff Subpremise
  google.protobuf.StringValue dropoff_subpremise = 2;

  // Drive Store ID
  google.protobuf.StringValue drive_store_id = 3;

  // Submit Platform Value
  google.protobuf.StringValue submit_platform_value = 4;

  // Additional business and store context
  google.protobuf.Int64Value business_id = 5;

  // Drive Account ID
  google.protobuf.StringValue drive_account_id = 6;

  // Dropoff Address
  ClientAddress dropoff_address = 7;

  // Preserve Request Address
  google.protobuf.BoolValue preserve_request_address = 8;

  // Override Blank Geocode Address
  google.protobuf.BoolValue override_blank_geocode_address = 9;

  // Should Override Certain Address Type
  google.protobuf.BoolValue should_override_certain_address_type = 10;

  // Address Validation Response
  AddressValidationResponse address_validation_response = 11;

  // Manual Location
  Location manual_location = 12;

  // Is Drive Batch
  google.protobuf.BoolValue is_drive_batch = 13;

  // Can Be Batched
  google.protobuf.BoolValue can_be_batched = 14;

  // Serviceable Vehicle Types
  google.protobuf.StringValue serviceable_vehicle_types = 15;

  // Payment Method ID
  google.protobuf.Int32Value payment_method_id = 16;

  // Pickup Address Establishment Name
  google.protobuf.StringValue pickup_address_establishment_name = 17;

  // Pickup Business Name
  google.protobuf.StringValue pickup_business_name = 18;

  // Pickup Phone Number
  google.protobuf.StringValue pickup_phone_number = 19;

  // Cash on Delivery
  google.protobuf.Int64Value cash_on_delivery = 20;

  // Delivery Creation ETA Prediction ID
  google.protobuf.Int64Value delivery_creation_eta_prediction_id = 21;

  // Order Platform ID
  google.protobuf.StringValue order_platform_id = 22;

  // Order Cart ID
  google.protobuf.StringValue order_cart_id = 23;

  // Store Order Cart ID
  google.protobuf.StringValue store_order_cart_id = 24;

  // Order Service Created
  google.protobuf.BoolValue order_service_created = 25;

  // Return Order Platform ID
  google.protobuf.StringValue return_order_platform_id = 26;

  // Return Order Cart ID
  google.protobuf.StringValue return_order_cart_id = 27;

  // Return Store Order Cart ID
  google.protobuf.StringValue return_store_order_cart_id = 28;

  // Return Order Service Created
  google.protobuf.BoolValue return_order_service_created = 29;

  // Cart Payment ID
  google.protobuf.StringValue cart_payment_id = 30;

  // Delivery Metadata
  map<string, google.protobuf.StringValue> delivery_metadata = 31;

  // Estimate Tracking Info
  map<string, google.protobuf.StringValue> estimate_tracking_info = 32;

  // Paying Stripe Customer ID
  google.protobuf.StringValue paying_stripe_customer_id = 33;

  // Olo Quote ID
  google.protobuf.StringValue olo_quote_id = 34;

  // Manual Pickup Time
  google.protobuf.StringValue manual_pickup_time = 35;

  // Is Quote
  google.protobuf.BoolValue is_quote = 36;

  // Payment Transaction ID
  google.protobuf.StringValue payment_transaction_id = 37;

  // Should Charge
  google.protobuf.BoolValue should_charge = 38;

  // MX Specified Promo ID
  google.protobuf.StringValue mx_specified_promo_id = 39;

  // Creation Source
  google.protobuf.StringValue creation_source = 40;

  // Is Drive V2
  google.protobuf.BoolValue is_drive_v2 = 41;

  // Is Test
  google.protobuf.BoolValue is_test = 42;

  // Should Be Manually Assigned at Creation
  google.protobuf.BoolValue should_be_manually_assigned_at_creation = 43;

  // Action if Undeliverable
  google.protobuf.StringValue action_if_undeliverable = 44;

  // Charge History
  repeated ChargeElement charge_history = 45;

  // Fee History
  repeated FeeContext fee_history = 46;

  // Requires Order Transmission
  google.protobuf.BoolValue requires_order_transmission = 47;

  // Dasher Checkout Payment Method
  google.protobuf.StringValue dasher_checkout_payment_method = 48;

  // Contains Pharma
  google.protobuf.BoolValue contains_pharma = 49;

  // Redelivery Previous DoorDash ID
  google.protobuf.StringValue redelivery_previous_doordash_id = 50;

  // Redelivery Next DoorDash ID
  google.protobuf.StringValue redelivery_next_doordash_id = 51;

  // Redelivery Attempt
  google.protobuf.Int32Value redelivery_attempt = 52;

  // Payment Method UUID
  google.protobuf.StringValue payment_method_uuid = 53;

  // Delivery Correlation IDs
  repeated string delivery_correlation_ids = 54;

  // Dropped Items
  repeated DroppedItem dropped_items = 55;

  // Order Fulfillment Method
  google.protobuf.StringValue order_fulfillment_method = 56;

  // Contains Age Restricted Pharma
  google.protobuf.BoolValue contains_age_restricted_pharma = 57;

  // Payment Barcode
  google.protobuf.StringValue payment_barcode = 58;

  // allows barcode/qrcode verification during pick up
  PickupVerificationMetadata pickup_verification_metadata = 59;

  // Order route type to specify if round trip is needed
  OrderRouteType order_route_type = 60;

  // Order route items to specify the items for round trip
  repeated OrderRouteItem order_route_item_list = 61;

  // Field to specify the origin facility id for parcel midmile delivery
  google.protobuf.StringValue origin_facility_id = 62;

  // Metadata to support Pin Code Verification
  PinCodeVerificationMetadata pin_code_verification_metadata = 63;

  // Contains Tobacco
  google.protobuf.BoolValue contains_tobacco = 64;

  // Contains Hemp
  google.protobuf.BoolValue contains_hemp = 65;

  // Contains OTC
  google.protobuf.BoolValue contains_otc = 66;

  // Metadata for Shipping Label Information
  ShippingLabelMetadata shipping_label_metadata = 68;
}

// Contains information about a Drive Order Item
message ChargeElement {
  // ID
  string id = 1;

  // Computed value based on delta and previous amount
  int64 computed_amount = 2;

  // Delta
  int64 delta = 3;

  // Epoch seconds
  int64 epoch_seconds = 4;

  // Epoch nanos
  int64 epoch_nanos = 5;

  // Description
  google.protobuf.StringValue description = 6;

  // Actual amount charged - mainly relevant for credit card deliveries
  google.protobuf.Int64Value actual_amount = 7;
}

// Client Address
message ClientAddress {
  // Street
  string street = 1;

  // City
  string city = 2;

  // State
  string state = 3;

  // Zip Code
  string zip_code = 4;

  // Unit
  google.protobuf.StringValue unit = 5;

  // Full Address
  google.protobuf.StringValue full_address = 6;

  // External Pickup Zone ID
  google.protobuf.StringValue external_pickup_zone_id = 7;

  // Location
  Location location = 8;
}

// Contains information about a Drive Order Item
message FeeContext {
  // Epoch seconds
  int64 epoch_seconds = 1;

  // Epoch nanos
  int64 epoch_nanos = 2;

  // Timestamp
  string timestamp = 3;

  // Pre-tip
  int64 pre_tip = 4;

  // Commission subtotal
  int64 commission_subtotal = 5;

  // Commission tax
  int64 commission_tax = 6;

  // Commission total
  int64 commission_total = 7;

  // Commission rate
  double commission_rate = 8 [deprecated = true];

  // R2C distance meters
  google.protobuf.Int64Value r2c_distance_meters = 9;

  // Google estimate
  google.protobuf.StringValue google_estimate = 10;

  // Promotion subtotal
  google.protobuf.Int64Value promotion_subtotal = 11;

  // Promotion tax
  google.protobuf.Int64Value promotion_tax = 12;

  // Promotion total
  google.protobuf.Int64Value promotion_total = 13;

  // Promotion applies to regulatory fee
  google.protobuf.BoolValue promotion_applies_to_regulatory_fee = 14;

  // Promotion ID
  google.protobuf.StringValue promotion_id = 15;

  // Dasher regulatory fee
  int64 dasher_regulatory_fee = 16;

  // Dasher regulatory fee tax
  int64 dasher_regulatory_fee_tax = 17;

  // Dasher regulatory fee total
  int64 dasher_regulatory_fee_total = 18;

  // Cash fee
  int64 cash_fee = 19;

  // Evaluation ID
  google.protobuf.StringValue evaluation_id = 20;

  // Tax transaction ID
  google.protobuf.StringValue tax_transaction_id = 21;

  // Quote ID
  google.protobuf.StringValue quote_id = 22;

  // optional commission rate
  google.protobuf.DoubleValue fee_context_commission_rate = 23;
}

// Contains information about a Dropped Drive Order Item
message DroppedItem {
  // External Item ID
  string external_item_id = 1;

  // Reason
  DroppedItemReason reason = 2;

  // Type
  DroppedItemType type = 3;
}

// Enum for DroppedItemReason
enum DroppedItemReason {
  // Item not found in catalog
  DROPPED_ITEM_REASON_ITEM_NOT_FOUND_IN_CATALOG_UNSPECIFIED = 0;
  // Item suspended
  DROPPED_ITEM_REASON_ITEM_SUSPENDED = 1;
  // Item not considered
  DROPPED_ITEM_REASON_ITEM_NOT_CONSIDERED = 2;
  // Item not found in catalog
  DROPPED_ITEM_REASON_ITEM_NOT_FOUND_IN_CATALOG = 3;
}

// Enum for DroppedItemType
enum DroppedItemType {
  // Unspecified
  DROPPED_ITEM_TYPE_MAIN_ITEM_UNSPECIFIED = 0;
  // Substitute item
  DROPPED_ITEM_TYPE_SUBSTITUTE_ITEM = 1;
  // Main item
  DROPPED_ITEM_TYPE_MAIN_ITEM = 2;
}

// AddressValidationResponse represents the response containing address validation information.
message AddressValidationResponse {
  // Validation Results
  repeated ValidationResult validation_results = 1;

  // Recommended Actions
  repeated UserAction recommended_actions = 2;

  // Cart Message
  CartMessage cart_message = 3;

  // Record Type
  RecordType record_type = 4;

  // RDI
  RDI rdi = 5;
}

// ValidationResult represents the result of an address validation.
message ValidationResult {
  // Validation Code
  ValidationCode validation_code = 1;

  // Validation Result Type
  ValidationResultType validation_result_type = 2;
}

// UserAction represents an action recommended to the user during address validation.
message UserAction {
  // User Action Type
  UserActionType user_action_type = 1;

  // Is Checkout Blocked
  bool is_checkout_blocked = 2;
}

// CartMessage represents a message associated with a cart during address validation.
message CartMessage {
  // Banner Type
  ValidationResultType cart_message_banner_type = 1;

  // Message
  string cart_message_message = 2;

  // Action Text
  string cart_message_action_text = 3;

  // Message Code
  MessageCode cart_message_code = 4;
}

// Enumeration Definitions

// ValidationResultType represents possible types of validation results.
enum ValidationResultType {
  // Default value, not populated
  VALIDATION_RESULT_TYPE_UNSPECIFIED = 0;

  // Indicates a validation error
  VALIDATION_RESULT_TYPE_ERROR = 1;

  // Indicates a validation warning
  VALIDATION_RESULT_TYPE_WARNING = 2;

  // Indicates a validation information
  VALIDATION_RESULT_TYPE_INFO = 3;
  // Used for backwards compatibility in db for when a value was not null but also unspecified.
  VALIDATION_RESULT_TYPE_POPULATED_UNSPECIFIED = 4;
}

// ValidationCode represents possible validation codes.
enum ValidationCode {
  // Default value, not populated
  VALIDATION_CODE_UNSPECIFIED = 0;

  // Address is not deliverable
  VALIDATION_CODE_ADDRESS_NOT_DELIVERABLE = 1;

  // Multi-unit area is missing a subpremise
  VALIDATION_CODE_MULTI_UNIT_AREA_MISSING_SUBPREMISE = 2;

  // Multi-unit area has an invalid subpremise
  VALIDATION_CODE_MULTI_UNIT_AREA_INVALID_SUBPREMISE = 3;

  // High ASAP ND area
  VALIDATION_CODE_HIGH_ASAP_ND_AREA = 4;

  // Address record type has low confidence
  VALIDATION_CODE_ADDRESS_RECORD_TYPE_LOW_CONFIDENCE = 5;

  // Address is difficult to navigate
  VALIDATION_CODE_DIFFICULT_TO_NAVIGATE = 6;

  // Coordinates are inaccurate
  VALIDATION_CODE_INACCURATE_COORDINATES = 7;
  // Used for backwards compatibility since the fields were nullable or could otherwise contain 'unspecified' value
  VALIDATION_CODE_POPULATED_UNSPECIFIED = 8;
}

// UserActionType represents possible user action types.
enum UserActionType {
  // Default value, not populated
  USER_ACTION_TYPE_UNSPECIFIED = 0;

  // Add a subpremise
  USER_ACTION_TYPE_ADD_SUBPREMISE = 1;

  // Edit a subpremise
  USER_ACTION_TYPE_EDIT_SUBPREMISE = 2;

  // Pindrop action
  USER_ACTION_TYPE_PINDROP = 3;

  // Dropp off instructions
  USER_ACTION_TYPE_DROPOFF_INSTRUCTIONS = 4;

  // Curbside handoff
  USER_ACTION_TYPE_CURBSIDE_HANDOFF = 5;

  // Select a new address
  USER_ACTION_TYPE_SELECT_NEW_ADDRESS = 6;
  // Used for backwards compatibility since the fields were nullable or could otherwise contain 'unspecified' value
  USER_ACTION_TYPE_POPULATED_UNSPECIFIED = 7;
}

// MessageCode represents possible message codes for cart messages.
enum MessageCode {
  // Default value, not populated
  MESSAGE_CODE_UNSPECIFIED = 0;

  // Address is not deliverable
  MESSAGE_CODE_ADDRESS_NOT_DELIVERABLE = 1;

  // Address not deliverable and all deliveries blocked
  MESSAGE_CODE_ADDRESS_NOT_DELIVERABLE_ALL_DELIVERIES_BLOCKED = 2;

  // Multi-unit area is missing a subpremise
  MESSAGE_CODE_MULTI_UNIT_AREA_MISSING_SUBPREMISE = 3;

  // Multi-unit area has an invalid subpremise
  MESSAGE_CODE_MULTI_UNIT_AREA_INVALID_SUBPREMISE = 4;

  // High ASAP ND area
  MESSAGE_CODE_HIGH_ASAP_ND_AREA = 5;

  // Need manual pin
  MESSAGE_CODE_NEED_MANUAL_PIN = 6;

  // Address missing current location browsing
  MESSAGE_CODE_ADDRESS_MISSING_CURRENT_LOCATION_BROWSING = 7;

  // Used for backwards compatibility since the fields were nullable or could otherwise contain 'unspecified' value
  MESSAGE_CODE_POPULATED_UNSPECIFIED = 8;
}

// RecordType represents possible record types.
enum RecordType {
  // Default value, not populated
  RECORD_TYPE_UNSPECIFIED = 0;

  // High rise
  RECORD_TYPE_HIGH_RISE = 1;

  // Post office
  RECORD_TYPE_POST_OFFICE = 2;

  // Rural route
  RECORD_TYPE_RURAL_ROUTE = 3;

  // Street address
  RECORD_TYPE_STREET_ADDRESS = 4;

  // Used for backwards compatibility since the fields were nullable or could otherwise contain 'unspecified' value
  RECORD_TYPE_POPULATED_UNSPECIFIED = 5;
}

// RDI represents possible RDI (Residential Delivery Indicator) values.
enum RDI {
  // Default value, not populated
  RDI_UNSPECIFIED = 0;

  // Residential
  RDI_RESIDENTIAL = 1;

  // Commercial
  RDI_COMMERCIAL = 2;

  // Used for backwards compatibility since the fields were nullable or could otherwise contain 'unspecified' value
  RDI_POPULATED_UNSPECIFIED = 3;
}

// Store Point location
message StorePoint {
  // Latitude
  double lat = 1;
  // Longitude
  double lng = 2;
}

// Order route type for drive order
enum OrderRouteType {
  // Unspecified
  ORDER_ROUTE_TYPE_UNSPECIFIED = 0;
  // Roundtrip, the original order must have a second delivery back to the mx
  ORDER_ROUTE_TYPE_ROUNDTRIP = 1;
}

// Order route item for drive order
enum OrderRouteItem {
  // Unpopulated and unspecified
  ORDER_ROUTE_ITEM_UNSPECIFIED = 0;
  // Items to bring back to the mx
  ORDER_ROUTE_ITEM_CHECK = 1;
  // Cash to bring back to the mx
  ORDER_ROUTE_ITEM_CASH = 2;
  // Used for backwards compatibility since the fields were nullable or could otherwise contain 'unspecified' value
  ORDER_ROUTE_ITEM_POPULATED_UNSPECIFIED = 3;
  // Pizza bag item to bring back to the mx
  ORDER_ROUTE_ITEM_PIZZA_BAG = 4;
}

// request to get GetByExternalDeliveryIdAndDeveloperDenyList
message GetByExternalDeliveryIdAndDeveloperDenyListRequest {
  // External Delivery ID
  google.protobuf.StringValue external_delivery_id = 1;
  // Developer Id deny list
  repeated google.protobuf.Int64Value developer_id_deny_list = 2;
}

// response of GetByExternalDeliveryIdAndDeveloperDenyList
message GetByExternalDeliveryIdAndDeveloperDenyListResponse {
  // Drive Order Entry matched in DB
  DriveOrderEntry drive_order_entry = 1;
}

// request to get GetOutageRefundDriveOrders
message GetOutageRefundDriveOrdersRequest {
  // The start time of the Drive outage
  google.protobuf.Timestamp outage_start_time = 1;
  // The end time of the Drive outage
  google.protobuf.Timestamp outage_end_time = 2;
}

// response of GetOutageRefundDriveOrders
message GetOutageRefundDriveOrdersResponse {
  // List of delivery ids
  repeated google.protobuf.Int64Value delivery_ids = 1;
}
