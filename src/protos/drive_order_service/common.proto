syntax = "proto3";

package drive_order_service.v1;

import "common/common.proto";
import "common/marketplace_purchase.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option go_package = "drive_order_service";
option java_generic_services = true;
option java_multiple_files = true;
option java_package = "com.doordash.rpc.drive_order_service";

// Shopping Config
message ShoppingConfig {
  // Unit of measure for the item
  enum Weight {
    // unspecified units
    WEIGHT_UNSPECIFIED = 0;
    // Pounds (lbs)
    WEIGHT_LBS = 1;
    // Ounces (oz)
    WEIGHT_OZ = 2;
    // Grams (g)
    WEIGHT_G = 3;
    // Kilograms (kg)
    WEIGHT_KG = 4;
  }
  // Substitution Preferences
  SubstitutionPreferences substitution_preferences = 1;
  // Weight Unit
  Weight weight_unit = 2;
  // Menu Item -- populated from menu index service
  MenuItem menu_item = 3;
  // menu id -- populated from menu index service
  google.protobuf.StringValue menu_id = 4;
  // adjustment info -- for item patch updates
  repeated AdjustmentInfo adjustment_info = 5;
  // unit price
  MonetaryFields unit_price = 6;
  // adjustment details
  AdjustmentDetails adjustment_details = 7;
}

// Purchase Quantity
message PurchaseQuantity {
  // continuous quantity
  google.protobuf.DoubleValue continuous_quantity = 1;
  // discrete quantity
  google.protobuf.Int32Value discrete_quantity = 2;
  // unit of the selected quantity
  google.protobuf.StringValue unit = 3;
}

// MonetaryFields
message MonetaryFields {
  // unit amount
  google.protobuf.Int32Value unit_amount = 1;
  // currency
  google.protobuf.StringValue currency = 2;
}

// Adjustment Info
message AdjustmentInfo {
  // Order service order version
  google.protobuf.Int64Value order_version = 1;
  // ADD or REMOVE action used to createPickPack
  google.protobuf.StringValue quantity_action = 2;
  // The quantity of the quantity_action
  google.protobuf.Int32Value quantity = 3;
  // The order item id
  google.protobuf.Int64Value order_item_id = 4;
  // The purchase quantity object that supports both continuous and discrete quntity
  PurchaseQuantity purchase_quantity = 5;
}

// Adjustment Details
message AdjustmentDetails {
  // order adjustment source: cx or dx
  enum OrderAdjustmentSource {
    // unspecified
    ORDER_ADJUSTMENT_SOURCE_UNSPECIFIED = 0;
    // customer
    ORDER_ADJUSTMENT_SOURCE_CUSTOMER = 1;
    // dasher
    ORDER_ADJUSTMENT_SOURCE_DASHER = 2;
  }
  // addition source -- used to differentiate Dx added item vs Cx added
  OrderAdjustmentSource addition_source = 1;
}

// Substitution Preferences
message SubstitutionPreferences {
  // expected behavior when item is out of stock
  enum OutOfStockPreference {
    // unspecified behavior
    OUT_OF_STOCK_PREFERENCE_UNSPECIFIED = 0;
    // if item is not available, substitute
    OUT_OF_STOCK_PREFERENCE_SUBSTITUTE = 1;
    // if item is not available, contact customer
    OUT_OF_STOCK_PREFERENCE_CONTACT = 2;
    // if item is not available, refund customer
    OUT_OF_STOCK_PREFERENCE_REFUND = 3;
  }
  // Substitute External IDs
  repeated string substitute_external_ids = 1;
  // Out Of Stock Preference
  OutOfStockPreference out_of_stock_preference = 2;
  // Substitute Original External IDs
  repeated string substitute_original_external_ids = 3;
  // Substitute Menu Item IDs
  repeated string substitute_menu_item_ids = 4;
  // Merchant provided substitution external IDs
  repeated string merchant_provided_substitute_external_ids = 5;
  // Merchant provided substitution menu item IDs
  google.protobuf.BoolValue is_cx_reviewed = 6;
  // Substitute Item Metadata List
  repeated SubstituteItemMetadata substitute_items_metadata = 7;
}

// Substitute Item
message SubstituteItemMetadata {
  // ID
  string id = 1;
  // Quantity
  int32 quantity = 2;
  // Weight
  double weight = 3;
  // Weight Unit
  ShoppingConfig.Weight weight_unit = 4;
}

// Menu Item
message MenuItem {
  // Category
  MenuItemCategory category = 1;
  // Name
  google.protobuf.StringValue name = 2;
  // ID
  google.protobuf.StringValue id = 3;
  // Sort ID
  google.protobuf.Int32Value sort_id = 4;
  // Purchase Info
  MenuItemPurchaseInfo purchase_info = 5;
  // Is Active
  google.protobuf.BoolValue is_active = 6;
}

// Menu Item Category
message MenuItemCategory {
  // Name
  google.protobuf.StringValue name = 1;
  // Sort ID
  google.protobuf.Int32Value sort_id = 2;
  // Title
  google.protobuf.StringValue title = 3;
  // Merchant Supplied ID
  google.protobuf.StringValue merchant_supplied_id = 4;
}

// Menu Item Purchase Info
message MenuItemPurchaseInfo {
  // Purchase Type
  .common.marketplace_purchase.v1.PurchaseType purchase_type = 1;
  // Unit
  google.protobuf.StringValue unit = 2;
}

// Drive Order Customer
message Customer {
  // Phone Number
  google.protobuf.StringValue phone_number = 1;
  // Business Name
  google.protobuf.StringValue business_name = 2;
  // First Name
  google.protobuf.StringValue first_name = 3;
  // Last Name
  google.protobuf.StringValue last_name = 4;
  // Email
  google.protobuf.StringValue email = 5;
  // Should Send Notifications
  google.protobuf.BoolValue should_send_notifications = 6;
  // Locale
  google.protobuf.StringValue locale = 7;
  // Consumer ID
  google.protobuf.Int64Value consumer_id = 8;
  // Delivery Customer PII ID
  google.protobuf.StringValue delivery_customer_pii_id = 9;
}

// Drive Order Item
message DriveOrderItem {
  // Drive Order Item ID
  google.protobuf.Int64Value id = 1;
  // Name
  google.protobuf.StringValue name = 2;
  // Description
  google.protobuf.StringValue description = 3;
  // Barcode
  google.protobuf.StringValue barcode = 4;
  // Scan Status
  google.protobuf.StringValue scan_status = 5;
  // Is Damaged
  bool is_damaged = 6;
  // Quantity
  int32 quantity = 7;
  // Volume
  google.protobuf.DoubleValue volume = 8;
  // Weight
  google.protobuf.DoubleValue weight = 9;
  // External ID
  google.protobuf.StringValue external_id = 10;
  // Price - the last 2 digits represent the cents. price = 123 represents 1.23
  google.protobuf.Int32Value price = 11;
  // Shopping Config
  ShoppingConfig shopping_config = 12;
  // External Instance ID
  google.protobuf.StringValue external_instance_id = 13;
  // Special Instructions - item level instructions provided by 1p cx
  google.protobuf.StringValue special_instructions = 14;
  // Length
  google.protobuf.DoubleValue length = 15;
  // Height
  google.protobuf.DoubleValue height = 16;
  // Width
  google.protobuf.DoubleValue width = 17;
  // Original External ID
  google.protobuf.StringValue original_external_id = 18;
  // Bundle Key
  google.protobuf.StringValue bundle_key = 19;
  // Delivery ID
  google.protobuf.Int64Value delivery_id = 20;
  // Drive Order ID
  google.protobuf.Int64Value drive_order_id = 21;
  // Updated At
  google.protobuf.Timestamp updated_at = 22;
}

// Location
message Location {
  // Latitude
  double lat = 1;
  // Longitude
  double lng = 2;
}
